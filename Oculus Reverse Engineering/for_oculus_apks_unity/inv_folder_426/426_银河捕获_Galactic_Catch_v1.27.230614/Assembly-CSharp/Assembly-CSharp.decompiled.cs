using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Text.RegularExpressions;
using System.Xml;
using BigCatch;
using DG.Tweening;
using DigitalRuby.LightningBolt;
using I2.Loc;
using Il2CppDummyDll;
using Obi;
using Oculus.Platform;
using Oculus.Platform.Models;
using PathologicalGames;
using RogoDigital.Lipsync;
using TMPro;
using TriangleNet.Geometry;
using TriangleNet.Logging;
using TriangleNet.Meshing;
using TriangleNet.Meshing.Data;
using TriangleNet.Meshing.Iterators;
using TriangleNet.Topology;
using TriangleNet.Topology.DCEL;
using TriangleNet.Voronoi;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;
using UnityEngine.Networking;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.Timeline;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR.Interaction.Toolkit;
using UnityEngine.XR.Interaction.Toolkit.UI;
using UnityStandardAssets.Effects;

[assembly: AssemblyVersion("1.0.0.0")]
[Serializable]
[Token(Token = "0x2000002")]
public class LightControlBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color color;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float intensity;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float bounceIntensity;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float range;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x11857E0", Offset = "0x11857E0", VA = "0x11857E0")]
	public LightControlBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000003")]
public class LightControlClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LightControlBehaviour template;

	[Token(Token = "0x17000001")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000002")]
		[Address(RVA = "0x1185824", Offset = "0x1185824", VA = "0x1185824", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x118582C", Offset = "0x118582C", VA = "0x118582C", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x11858CC", Offset = "0x11858CC", VA = "0x11858CC")]
	public LightControlClip()
	{
	}
}
[Token(Token = "0x2000004")]
public class LightControlMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Color m_DefaultColor;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_DefaultIntensity;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_DefaultBounceIntensity;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float m_DefaultRange;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light m_TrackBinding;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_FirstFrameHappened;

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x118593C", Offset = "0x118593C", VA = "0x118593C", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x1185D20", Offset = "0x1185D20", VA = "0x1185D20", Slot = "16")]
	public override void OnPlayableDestroy(Playable playable)
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x1185DFC", Offset = "0x1185DFC", VA = "0x1185DFC")]
	public LightControlMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000005")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xABE1DC", Offset = "0xABE1DC")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xABE1DC", Offset = "0xABE1DC")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0xABE1DC", Offset = "0xABE1DC")]
public class LightControlTrack : TrackAsset
{
	[Token(Token = "0x6000008")]
	[Address(RVA = "0x1185E04", Offset = "0x1185E04", VA = "0x1185E04", Slot = "24")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x1185E9C", Offset = "0x1185E9C", VA = "0x1185E9C", Slot = "29")]
	public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x1185EA4", Offset = "0x1185EA4", VA = "0x1185EA4")]
	public LightControlTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x2000006")]
public class NavMeshAgentControlBehaviour : PlayableBehaviour
{
	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform destination;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool destinationSet;

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xF02AE4", Offset = "0xF02AE4", VA = "0xF02AE4", Slot = "15")]
	public override void OnPlayableCreate(Playable playable)
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xF02AEC", Offset = "0xF02AEC", VA = "0xF02AEC")]
	public NavMeshAgentControlBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000007")]
public class NavMeshAgentControlClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ExposedReference<Transform> destination;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public NavMeshAgentControlBehaviour template;

	[Token(Token = "0x17000002")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x600000D")]
		[Address(RVA = "0xF02AF4", Offset = "0xF02AF4", VA = "0xF02AF4", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xF02AFC", Offset = "0xF02AFC", VA = "0xF02AFC", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xF02C14", Offset = "0xF02C14", VA = "0xF02C14")]
	public NavMeshAgentControlClip()
	{
	}
}
[Token(Token = "0x2000008")]
public class NavMeshAgentControlMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x6000010")]
	[Address(RVA = "0xF02C88", Offset = "0xF02C88", VA = "0xF02C88", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xF02EB8", Offset = "0xF02EB8", VA = "0xF02EB8")]
	public NavMeshAgentControlMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000009")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xABE290", Offset = "0xABE290")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xABE290", Offset = "0xABE290")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0xABE290", Offset = "0xABE290")]
public class NavMeshAgentControlTrack : TrackAsset
{
	[Token(Token = "0x6000012")]
	[Address(RVA = "0xF02EC0", Offset = "0xF02EC0", VA = "0xF02EC0", Slot = "24")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xF02F58", Offset = "0xF02F58", VA = "0xF02F58")]
	public NavMeshAgentControlTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x200000A")]
public class ScreenFaderBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color color;

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xFB6E04", Offset = "0xFB6E04", VA = "0xFB6E04")]
	public ScreenFaderBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x200000B")]
public class ScreenFaderClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ScreenFaderBehaviour template;

	[Token(Token = "0x17000003")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000015")]
		[Address(RVA = "0xFB6E38", Offset = "0xFB6E38", VA = "0xFB6E38", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xFB6E40", Offset = "0xFB6E40", VA = "0xFB6E40", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xFB6EE0", Offset = "0xFB6EE0", VA = "0xFB6EE0")]
	public ScreenFaderClip()
	{
	}
}
[Token(Token = "0x200000C")]
public class ScreenFaderMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Color m_DefaultColor;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Image m_TrackBinding;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_FirstFrameHappened;

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xFB6F50", Offset = "0xFB6F50", VA = "0xFB6F50", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xFB7274", Offset = "0xFB7274", VA = "0xFB7274", Slot = "16")]
	public override void OnPlayableDestroy(Playable playable)
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xFB731C", Offset = "0xFB731C", VA = "0xFB731C")]
	public ScreenFaderMixerBehaviour()
	{
	}
}
[Token(Token = "0x200000D")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xABE344", Offset = "0xABE344")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xABE344", Offset = "0xABE344")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0xABE344", Offset = "0xABE344")]
public class ScreenFaderTrack : TrackAsset
{
	[Token(Token = "0x600001B")]
	[Address(RVA = "0xFB7324", Offset = "0xFB7324", VA = "0xFB7324", Slot = "24")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xFB73BC", Offset = "0xFB73BC", VA = "0xFB73BC", Slot = "29")]
	public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xFB73C4", Offset = "0xFB73C4", VA = "0xFB73C4")]
	public ScreenFaderTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x200000E")]
public class TextSwitcherBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color color;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int fontSize;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string text;

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x161B098", Offset = "0x161B098", VA = "0x161B098")]
	public TextSwitcherBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x200000F")]
public class TextSwitcherClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextSwitcherBehaviour template;

	[Token(Token = "0x17000004")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x600001F")]
		[Address(RVA = "0x161B0D4", Offset = "0x161B0D4", VA = "0x161B0D4", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x161B0DC", Offset = "0x161B0DC", VA = "0x161B0DC", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x161B17C", Offset = "0x161B17C", VA = "0x161B17C")]
	public TextSwitcherClip()
	{
	}
}
[Token(Token = "0x2000010")]
public class TextSwitcherMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Color m_DefaultColor;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_DefaultFontSize;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string m_DefaultText;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Text m_TrackBinding;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_FirstFrameHappened;

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x161B1EC", Offset = "0x161B1EC", VA = "0x161B1EC", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x161B658", Offset = "0x161B658", VA = "0x161B658", Slot = "16")]
	public override void OnPlayableDestroy(Playable playable)
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x161B730", Offset = "0x161B730", VA = "0x161B730")]
	public TextSwitcherMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000011")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xABE3F4", Offset = "0xABE3F4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xABE3F4", Offset = "0xABE3F4")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0xABE3F4", Offset = "0xABE3F4")]
public class TextSwitcherTrack : TrackAsset
{
	[Token(Token = "0x6000025")]
	[Address(RVA = "0x161B738", Offset = "0x161B738", VA = "0x161B738", Slot = "24")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x161B7D0", Offset = "0x161B7D0", VA = "0x161B7D0", Slot = "29")]
	public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x161B7D8", Offset = "0x161B7D8", VA = "0x161B7D8")]
	public TextSwitcherTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x2000012")]
public class TimeDilationBehaviour : PlayableBehaviour
{
	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float timeScale;

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x161B840", Offset = "0x161B840", VA = "0x161B840")]
	public TimeDilationBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000013")]
public class TimeDilationClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TimeDilationBehaviour template;

	[Token(Token = "0x17000005")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000029")]
		[Address(RVA = "0x161B850", Offset = "0x161B850", VA = "0x161B850", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x161B858", Offset = "0x161B858", VA = "0x161B858", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x161B8F8", Offset = "0x161B8F8", VA = "0x161B8F8")]
	public TimeDilationClip()
	{
	}
}
[Token(Token = "0x2000014")]
public class TimeDilationMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly float defaultTimeScale;

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x161B974", Offset = "0x161B974", VA = "0x161B974", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x161BB40", Offset = "0x161BB40", VA = "0x161BB40", Slot = "18")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x161BB4C", Offset = "0x161BB4C", VA = "0x161BB4C", Slot = "14")]
	public override void OnGraphStop(Playable playable)
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x161BB58", Offset = "0x161BB58", VA = "0x161BB58", Slot = "16")]
	public override void OnPlayableDestroy(Playable playable)
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x161BB64", Offset = "0x161BB64", VA = "0x161BB64")]
	public TimeDilationMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000015")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xABE4A8", Offset = "0xABE4A8")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xABE4A8", Offset = "0xABE4A8")]
public class TimeDilationTrack : TrackAsset
{
	[Token(Token = "0x6000031")]
	[Address(RVA = "0x161BB74", Offset = "0x161BB74", VA = "0x161BB74", Slot = "24")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x161BC0C", Offset = "0x161BC0C", VA = "0x161BC0C")]
	public TimeDilationTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x2000016")]
public class TransformTweenBehaviour : PlayableBehaviour
{
	[Token(Token = "0x20003C9")]
	public enum TweenType
	{
		[Token(Token = "0x4001AD1")]
		Linear,
		[Token(Token = "0x4001AD2")]
		Deceleration,
		[Token(Token = "0x4001AD3")]
		Harmonic,
		[Token(Token = "0x4001AD4")]
		Custom
	}

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform startLocation;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform endLocation;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool tweenPosition;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool tweenRotation;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public TweenType tweenType;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve customCurve;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 startingPosition;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Quaternion startingRotation;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AnimationCurve m_LinearCurve;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AnimationCurve m_DecelerationCurve;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AnimationCurve m_HarmonicCurve;

	[Token(Token = "0x400002C")]
	private const float k_RightAngleInRads = (float)Math.PI / 2f;

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x161BC74", Offset = "0x161BC74", VA = "0x161BC74", Slot = "19")]
	public override void PrepareFrame(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x161BD1C", Offset = "0x161BD1C", VA = "0x161BD1C")]
	public float EvaluateCurrentCurve(float time)
	{
		return default(float);
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x161BE14", Offset = "0x161BE14", VA = "0x161BE14")]
	private bool IsCustomCurveNormalised()
	{
		return default(bool);
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x161C03C", Offset = "0x161C03C", VA = "0x161C03C")]
	public TransformTweenBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000017")]
public class TransformTweenClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TransformTweenBehaviour template;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ExposedReference<Transform> startLocation;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ExposedReference<Transform> endLocation;

	[Token(Token = "0x17000006")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000037")]
		[Address(RVA = "0x161C250", Offset = "0x161C250", VA = "0x161C250", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x161C258", Offset = "0x161C258", VA = "0x161C258", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x161C3A0", Offset = "0x161C3A0", VA = "0x161C3A0")]
	public TransformTweenClip()
	{
	}
}
[Token(Token = "0x2000018")]
public class TransformTweenMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool m_FirstFrameHappened;

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x161C410", Offset = "0x161C410", VA = "0x161C410", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x161CB38", Offset = "0x161CB38", VA = "0x161CB38", Slot = "16")]
	public override void OnPlayableDestroy(Playable playable)
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x161CB24", Offset = "0x161CB24", VA = "0x161CB24")]
	private static Quaternion AddQuaternions(Quaternion first, Quaternion second)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x161CB10", Offset = "0x161CB10", VA = "0x161CB10")]
	private static Quaternion ScaleQuaternion(Quaternion rotation, float multiplier)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x161CB40", Offset = "0x161CB40", VA = "0x161CB40")]
	private static float QuaternionMagnitude(Quaternion rotation)
	{
		return default(float);
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x161CA20", Offset = "0x161CA20", VA = "0x161CA20")]
	private static Quaternion NormalizeQuaternion(Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x161CC2C", Offset = "0x161CC2C", VA = "0x161CC2C")]
	public TransformTweenMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000019")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xABE534", Offset = "0xABE534")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xABE534", Offset = "0xABE534")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0xABE534", Offset = "0xABE534")]
public class TransformTweenTrack : TrackAsset
{
	[Token(Token = "0x6000041")]
	[Address(RVA = "0x161CC34", Offset = "0x161CC34", VA = "0x161CC34", Slot = "24")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x161CCCC", Offset = "0x161CCCC", VA = "0x161CCCC", Slot = "29")]
	public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x161CCD4", Offset = "0x161CCD4", VA = "0x161CCD4")]
	public TransformTweenTrack()
	{
	}
}
[Token(Token = "0x200001A")]
public class ChangeParameter : MonoBehaviour
{
	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer rend;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tweak;

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x106D5F8", Offset = "0x106D5F8", VA = "0x106D5F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x106D658", Offset = "0x106D658", VA = "0x106D658")]
	private void Update()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x106D6C4", Offset = "0x106D6C4", VA = "0x106D6C4")]
	public ChangeParameter()
	{
	}
}
[Token(Token = "0x200001B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xABE5E8", Offset = "0xABE5E8")]
public class CFX_AutoStopLoopedEffect : MonoBehaviour
{
	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float effectDuration;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float d;

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x106B20C", Offset = "0x106B20C", VA = "0x106B20C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x106B218", Offset = "0x106B218", VA = "0x106B218")]
	private void Update()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x106B328", Offset = "0x106B328", VA = "0x106B328")]
	public CFX_AutoStopLoopedEffect()
	{
	}
}
[Token(Token = "0x200001C")]
public class CFX_Demo_New : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003CA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0868", Offset = "0xAC0868")]
	private sealed class <>c
	{
		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<GameObject> <>9__16_0;

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0x106C184", Offset = "0x106C184", VA = "0x106C184")]
		public <>c()
		{
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0x106C18C", Offset = "0x106C18C", VA = "0x106C18C")]
		internal int <Awake>b__16_0(GameObject o1, GameObject o2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x20003CB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0878", Offset = "0xAC0878")]
	private sealed class <CheckForDeletedParticles>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CFX_Demo_New <>4__this;

		[Token(Token = "0x1700021F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B27")]
			[Address(RVA = "0x106C34C", Offset = "0x106C34C", VA = "0x106C34C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000220")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B29")]
			[Address(RVA = "0x106C3B4", Offset = "0x106C3B4", VA = "0x106C3B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0x106C074", Offset = "0x106C074", VA = "0x106C074")]
		[DebuggerHidden]
		public <CheckForDeletedParticles>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0x106C1E0", Offset = "0x106C1E0", VA = "0x106C1E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0x106C1E4", Offset = "0x106C1E4", VA = "0x106C1E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0x106C354", Offset = "0x106C354", VA = "0x106C354", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer groundRenderer;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Collider groundCollider;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xAC16E0", Offset = "0xAC16E0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xAC16E0", Offset = "0xAC16E0")]
	public Image slowMoBtn;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text slowMoLabel;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image camRotBtn;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text camRotLabel;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image groundBtn;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text groundLabel;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xAC1718", Offset = "0xAC1718")]
	public Text EffectLabel;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text EffectIndexLabel;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject[] ParticleExamples;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int exampleIndex;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool slowMo;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 defaultCamPosition;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Quaternion defaultCamRotation;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<GameObject> onScreenParticles;

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x106B338", Offset = "0x106B338", VA = "0x106B338")]
	private void Awake()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x106B69C", Offset = "0x106B69C", VA = "0x106B69C")]
	private void Update()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x106BD3C", Offset = "0x106BD3C", VA = "0x106BD3C")]
	public void OnToggleGround()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x106BE1C", Offset = "0x106BE1C", VA = "0x106BE1C")]
	public void OnToggleCamera()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x106BF24", Offset = "0x106BF24", VA = "0x106BF24")]
	public void OnToggleSlowMo()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x106BFF0", Offset = "0x106BFF0", VA = "0x106BFF0")]
	public void OnPreviousEffect()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x106BFF4", Offset = "0x106BFF4", VA = "0x106BFF4")]
	public void OnNextEffect()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x106B56C", Offset = "0x106B56C", VA = "0x106B56C")]
	private void UpdateUI()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x106BB68", Offset = "0x106BB68", VA = "0x106BB68")]
	private GameObject spawnParticle()
	{
		return null;
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x106BFF8", Offset = "0x106BFF8", VA = "0x106BFF8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC8D64", Offset = "0xAC8D64")]
	private IEnumerator CheckForDeletedParticles()
	{
		return null;
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x106B9B4", Offset = "0x106B9B4", VA = "0x106B9B4")]
	private void prevParticle()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x106B9EC", Offset = "0x106B9EC", VA = "0x106B9EC")]
	private void nextParticle()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x106BA20", Offset = "0x106BA20", VA = "0x106BA20")]
	private void destroyParticles()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x106C0A0", Offset = "0x106C0A0", VA = "0x106C0A0")]
	public CFX_Demo_New()
	{
	}
}
[Token(Token = "0x200001D")]
public class CFX_Demo_RandomDir : MonoBehaviour
{
	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 min;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 max;

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x106C3BC", Offset = "0x106C3BC", VA = "0x106C3BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x106C470", Offset = "0x106C470", VA = "0x106C470")]
	public CFX_Demo_RandomDir()
	{
	}
}
[Token(Token = "0x200001E")]
public class CFX_Demo_RandomDirectionTranslate : MonoBehaviour
{
	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 baseDir;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 axis;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool gravity;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 dir;

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x106C504", Offset = "0x106C504", VA = "0x106C504")]
	private void Start()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x106C668", Offset = "0x106C668", VA = "0x106C668")]
	private void Update()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x106C7E4", Offset = "0x106C7E4", VA = "0x106C7E4")]
	public CFX_Demo_RandomDirectionTranslate()
	{
	}
}
[Token(Token = "0x200001F")]
public class CFX_Demo_RotateCamera : MonoBehaviour
{
	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool rotating;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform rotationCenter;

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x106C874", Offset = "0x106C874", VA = "0x106C874")]
	private void Update()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x106C9BC", Offset = "0x106C9BC", VA = "0x106C9BC")]
	public CFX_Demo_RotateCamera()
	{
	}
}
[Token(Token = "0x2000020")]
public class CFX_Demo_Translate : MonoBehaviour
{
	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 rotation;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 axis;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool gravity;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 dir;

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x106CA20", Offset = "0x106CA20", VA = "0x106CA20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x106CAFC", Offset = "0x106CAFC", VA = "0x106CAFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x106CBE4", Offset = "0x106CBE4", VA = "0x106CBE4")]
	public CFX_Demo_Translate()
	{
	}
}
[Token(Token = "0x2000021")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xABE64C", Offset = "0xABE64C")]
public class CFX_AutoDestructShuriken : MonoBehaviour
{
	[Token(Token = "0x20003CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0888", Offset = "0xAC0888")]
	private sealed class <CheckIfAlive>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CFX_AutoDestructShuriken <>4__this;

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystem <ps>5__2;

		[Token(Token = "0x17000221")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B2D")]
			[Address(RVA = "0x106B0CC", Offset = "0x106B0CC", VA = "0x106B0CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000222")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B2F")]
			[Address(RVA = "0x106B134", Offset = "0x106B134", VA = "0x106B134", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0x106AF00", Offset = "0x106AF00", VA = "0x106AF00")]
		[DebuggerHidden]
		public <CheckIfAlive>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0x106AF34", Offset = "0x106AF34", VA = "0x106AF34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0x106AF38", Offset = "0x106AF38", VA = "0x106AF38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0x106B0D4", Offset = "0x106B0D4", VA = "0x106B0D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool OnlyDeactivate;

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x106AE30", Offset = "0x106AE30", VA = "0x106AE30")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x106AE84", Offset = "0x106AE84", VA = "0x106AE84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC8DC8", Offset = "0xAC8DC8")]
	private IEnumerator CheckIfAlive()
	{
		return null;
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x106AF2C", Offset = "0x106AF2C", VA = "0x106AF2C")]
	public CFX_AutoDestructShuriken()
	{
	}
}
[Token(Token = "0x2000022")]
public class CFX_AutoRotate : MonoBehaviour
{
	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Space space;

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x106B13C", Offset = "0x106B13C", VA = "0x106B13C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x106B1FC", Offset = "0x106B1FC", VA = "0x106B1FC")]
	public CFX_AutoRotate()
	{
	}
}
[Token(Token = "0x2000023")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xABE6B0", Offset = "0xABE6B0")]
public class CFX_LightFlicker : MonoBehaviour
{
	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool loop;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float smoothFactor;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float addIntensity;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float minIntensity;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float maxIntensity;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float baseIntensity;

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x106CC74", Offset = "0x106CC74", VA = "0x106CC74")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x106CCDC", Offset = "0x106CCDC", VA = "0x106CCDC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x106CCF0", Offset = "0x106CCF0", VA = "0x106CCF0")]
	private void Update()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x106CDC0", Offset = "0x106CDC0", VA = "0x106CDC0")]
	public CFX_LightFlicker()
	{
	}
}
[Token(Token = "0x2000024")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xABE714", Offset = "0xABE714")]
public class CFX_LightIntensityFade : MonoBehaviour
{
	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float duration;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float delay;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float finalIntensity;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float baseIntensity;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool autodestruct;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float p_lifetime;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float p_delay;

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x106CDD0", Offset = "0x106CDD0", VA = "0x106CDD0")]
	private void Start()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x106CE38", Offset = "0x106CE38", VA = "0x106CE38")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x106CEBC", Offset = "0x106CEBC", VA = "0x106CEBC")]
	private void Update()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x106D05C", Offset = "0x106D05C", VA = "0x106D05C")]
	public CFX_LightIntensityFade()
	{
	}
}
[Token(Token = "0x2000025")]
public class ParticleSpawner : MonoBehaviour
{
	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] particles;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxButtons;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool showInfo;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string removeTextFromButton;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int page;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int pages;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string currentPSInfo;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject currentPS;

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xEB11A4", Offset = "0xEB11A4", VA = "0xEB11A4")]
	public void Start()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xEB1250", Offset = "0xEB1250", VA = "0xEB1250")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xEB1944", Offset = "0xEB1944", VA = "0xEB1944")]
	public void PlayPS(ParticleSystem _ps, int _nr)
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xEB197C", Offset = "0xEB197C", VA = "0xEB197C")]
	public void InfoPS(ParticleSystem _ps, int _nr)
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xEB1EA8", Offset = "0xEB1EA8", VA = "0xEB1EA8")]
	public ParticleSpawner()
	{
	}
}
[Token(Token = "0x2000026")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xABE778", Offset = "0xABE778")]
public class SmoothCameraOrbit : MonoBehaviour
{
	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 targetOffset;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float distance;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxDistance;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float minDistance;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float xSpeed;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float ySpeed;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int yMinLimit;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int yMaxLimit;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int zoomRate;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float panSpeed;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float zoomDampening;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float autoRotate;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float xDeg;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float yDeg;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float currentDistance;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float desiredDistance;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Quaternion currentRotation;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion desiredRotation;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Quaternion rotation;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 position;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float idleTimer;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float idleSmooth;

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xFB8AB0", Offset = "0xFB8AB0", VA = "0xFB8AB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xFB8E78", Offset = "0xFB8E78", VA = "0xFB8E78")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xFB8AB4", Offset = "0xFB8AB4", VA = "0xFB8AB4")]
	public void Init()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xFB8E7C", Offset = "0xFB8E7C", VA = "0xFB8E7C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xFB93A8", Offset = "0xFB93A8", VA = "0xFB93A8")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xFB9458", Offset = "0xFB9458", VA = "0xFB9458")]
	public SmoothCameraOrbit()
	{
	}
}
[Token(Token = "0x2000027")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xABE7B0", Offset = "0xABE7B0")]
public class cameraRotateAroundTarget : MonoBehaviour
{
	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distance;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float xSpeed;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ySpeed;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int yMinLimit;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int yMaxLimit;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int zoomRate;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float yOffset;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float x;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float y;

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x1EBB908", Offset = "0x1EBB908", VA = "0x1EBB908")]
	public void Start()
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x1EBB9D4", Offset = "0x1EBB9D4", VA = "0x1EBB9D4")]
	public void Update()
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x1EBBD18", Offset = "0x1EBBD18", VA = "0x1EBBD18")]
	public static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x1EBBDC8", Offset = "0x1EBBDC8", VA = "0x1EBBDC8")]
	public cameraRotateAroundTarget()
	{
	}
}
[Token(Token = "0x2000028")]
public class randomRotate : MonoBehaviour
{
	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Quaternion rotTarget;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float rotateEverySecond;

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x1EBBDF8", Offset = "0x1EBBDF8", VA = "0x1EBBDF8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x1EBBE90", Offset = "0x1EBBE90", VA = "0x1EBBE90")]
	public void Update()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x1EBBE64", Offset = "0x1EBBE64", VA = "0x1EBBE64")]
	public void randomRot()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x1EBBFA8", Offset = "0x1EBBFA8", VA = "0x1EBBFA8")]
	public randomRotate()
	{
	}
}
[Token(Token = "0x2000029")]
public class MagicProjectileScript : MonoBehaviour
{
	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject impactParticle;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject projectileParticle;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject muzzleParticle;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] trailParticles;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Vector3 impactNormal;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool hasCollided;

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x118D420", Offset = "0x118D420", VA = "0x118D420")]
	private void Start()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x118D660", Offset = "0x118D660", VA = "0x118D660")]
	private void OnCollisionEnter(Collision hit)
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x118DAB4", Offset = "0x118DAB4", VA = "0x118DAB4")]
	public MagicProjectileScript()
	{
	}
}
[Token(Token = "0x200002A")]
public class MantisLODEditorProfessional : MonoBehaviour
{
	[Token(Token = "0x6000086")]
	[Address(RVA = "0x119766C", Offset = "0x119766C", VA = "0x119766C")]
	public MantisLODEditorProfessional()
	{
	}
}
[Token(Token = "0x200002B")]
public class MoveMe : MonoBehaviour
{
	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool forwarding;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float delta;

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x1199D58", Offset = "0x1199D58", VA = "0x1199D58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x1199D5C", Offset = "0x1199D5C", VA = "0x1199D5C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x1199E08", Offset = "0x1199E08", VA = "0x1199E08")]
	public MoveMe()
	{
	}
}
[Token(Token = "0x200002C")]
public class RotateMe : MonoBehaviour
{
	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 center_to_ratate;

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xFB5A10", Offset = "0xFB5A10", VA = "0xFB5A10")]
	private void Start()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xFB5C6C", Offset = "0xFB5C6C", VA = "0xFB5C6C")]
	private void Update()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xFB5DC8", Offset = "0xFB5DC8", VA = "0xFB5DC8")]
	public RotateMe()
	{
	}
}
[Token(Token = "0x200002D")]
public class Car : MonoBehaviour
{
	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float turnspeed;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float destination;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float direction;

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x106D1C0", Offset = "0x106D1C0", VA = "0x106D1C0")]
	private void Update()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x106D558", Offset = "0x106D558", VA = "0x106D558")]
	private void FindDestination(Vector3 tPos)
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x106D5D4", Offset = "0x106D5D4", VA = "0x106D5D4")]
	private float mod(float a)
	{
		return default(float);
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x106D5E4", Offset = "0x106D5E4", VA = "0x106D5E4")]
	public Car()
	{
	}
}
[Token(Token = "0x200002E")]
public class Move : MonoBehaviour
{
	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 forward;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> Tiles;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float zPos;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int starTiles;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int prevRand;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int num;

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x11997B4", Offset = "0x11997B4", VA = "0x11997B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x1199A1C", Offset = "0x1199A1C", VA = "0x1199A1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x1199CA4", Offset = "0x1199CA4", VA = "0x1199CA4")]
	public Move()
	{
	}
}
[Token(Token = "0x200002F")]
public class PoolManager : MonoBehaviour
{
	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1738", Offset = "0xAC1738")]
	private static PoolManager <Instance>k__BackingField;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<int, Queue<GameObject>> pool;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera cam;

	[Token(Token = "0x17000007")]
	public static PoolManager Instance
	{
		[Token(Token = "0x6000094")]
		[Address(RVA = "0xEB70F4", Offset = "0xEB70F4", VA = "0xEB70F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC8E2C", Offset = "0xAC8E2C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000095")]
		[Address(RVA = "0xEB7144", Offset = "0xEB7144", VA = "0xEB7144")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC8E3C", Offset = "0xAC8E3C")]
		set
		{
		}
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xEB719C", Offset = "0xEB719C", VA = "0xEB719C")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xEB71F4", Offset = "0xEB71F4", VA = "0xEB71F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xEB726C", Offset = "0xEB726C", VA = "0xEB726C")]
	public void CreatePool(GameObject gameObj, int numberOfObj)
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xEB73EC", Offset = "0xEB73EC", VA = "0xEB73EC")]
	public void Reuse(int gameObjKey, Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xEB7530", Offset = "0xEB7530", VA = "0xEB7530")]
	public void Reuse(int gameObjKey)
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xEB75EC", Offset = "0xEB75EC", VA = "0xEB75EC")]
	private void Update()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xEB78BC", Offset = "0xEB78BC", VA = "0xEB78BC")]
	public PoolManager()
	{
	}
}
[Token(Token = "0x2000030")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xABE7E8", Offset = "0xABE7E8")]
public class Buoyancy : MonoBehaviour
{
	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float buoyancy;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float viscosity;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float viscosityAngular;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask layer;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BoxCollider boxCollider;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody rigidbody;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RamSpline[] ramSplines;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static LakePolygon[] lakePolygons;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3[] vertices;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] verticesMatrix;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 lowestPoint;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 center;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool debug;

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x1068AA8", Offset = "0x1068AA8", VA = "0x1068AA8")]
	private void Start()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x1069250", Offset = "0x1069250", VA = "0x1069250")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x1069254", Offset = "0x1069254", VA = "0x1069254")]
	public void WaterPhysics()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x106A4A8", Offset = "0x106A4A8", VA = "0x106A4A8")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x106AC00", Offset = "0x106AC00", VA = "0x106AC00")]
	public Buoyancy()
	{
	}
}
[Token(Token = "0x2000031")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xABE84C", Offset = "0xABE84C")]
public class LakePolygon : MonoBehaviour
{
	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int toolbarInt;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LakePolygonProfile currentProfile;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LakePolygonProfile oldProfile;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Vector3> points;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Vector3> splinePoints;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve terrainCarve;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float distSmooth;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float terrainSmoothMultiplier;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool overrideLakeRender;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float uvScale;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool receiveShadows;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public ShadowCastingMode shadowCastingMode;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve terrainPaintCarve;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int currentSplatMap;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float distanceClearFoliage;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float distanceClearFoliageTrees;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool mixTwoSplatMaps;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int secondSplatMap;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool addCliffSplatMap;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int cliffSplatMap;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float cliffAngle;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float cliffBlend;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int cliffSplatMapOutside;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float cliffAngleOutside;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float cliffBlendOutside;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool noiseCarve;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float noiseMultiplierInside;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float noiseMultiplierOutside;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float noiseSizeX;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float noiseSizeZ;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public bool noisePaint;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float noiseMultiplierInsidePaint;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float noiseMultiplierOutsidePaint;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float noiseSizeXPaint;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float noiseSizeZPaint;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float maximumTriangleSize;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float traingleDensity;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float height;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public bool lockHeight;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float yOffset;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float trianglesGenerated;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float vertsGenerated;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Mesh currentMesh;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public MeshFilter meshfilter;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool showVertexColors;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	public bool showFlowMap;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
	public bool overrideFlowMap;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public float automaticFlowMapScale;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public bool noiseflowMap;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float noiseMultiplierflowMap;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float noiseSizeXflowMap;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public float noiseSizeZflowMap;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public bool drawOnMesh;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
	public bool drawOnMeshFlowMap;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public Color drawColor;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public bool drawColorR;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11D")]
	public bool drawColorG;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11E")]
	public bool drawColorB;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11F")]
	public bool drawColorA;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public bool drawOnMultiple;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public float opacity;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public float drawSize;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Material oldMaterial;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Color[] colors;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public List<Vector2> colorsFlowMap;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public float floatSpeed;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public float flowSpeed;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float flowDirection;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public float closeDistanceSimulation;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public int angleSimulation;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public float checkDistanceSimulation;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public bool removeFirstPointSimulation;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public LakePolygonCarveData lakePolygonCarveData;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public LakePolygonCarveData lakePolygonPaintData;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public LakePolygonCarveData lakePolygonClearData;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public List<GameObject> meshGOs;

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x11A9C70", Offset = "0x11A9C70", VA = "0x11A9C70")]
	public void AddPoint(Vector3 position)
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x11A9CF0", Offset = "0x11A9CF0", VA = "0x11A9CF0")]
	public void AddPointAfter(int i)
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x11A9F70", Offset = "0x11A9F70", VA = "0x11A9F70")]
	public void ChangePointPosition(int i, Vector3 position)
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x11AA000", Offset = "0x11AA000", VA = "0x11AA000")]
	public void RemovePoint(int i)
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x11AA084", Offset = "0x11AA084", VA = "0x11AA084")]
	public void RemovePoints(int fromID = -1)
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x11AA100", Offset = "0x11AA100", VA = "0x11AA100")]
	private void CenterPivot()
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x11AA374", Offset = "0x11AA374", VA = "0x11AA374")]
	public void GeneratePolygon()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x11AB850", Offset = "0x11AB850", VA = "0x11AB850")]
	public static LakePolygon CreatePolygon(Material material, [Optional] List<Vector3> positions)
	{
		return null;
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x11AB554", Offset = "0x11AB554", VA = "0x11AB554")]
	private void CalculateCatmullRomSpline(int pos)
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x11AB9E0", Offset = "0x11AB9E0", VA = "0x11AB9E0")]
	public int ClampListPos(int pos)
	{
		return default(int);
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x11ABA6C", Offset = "0x11ABA6C", VA = "0x11ABA6C")]
	private Vector3 GetCatmullRomPosition(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x11AB784", Offset = "0x11AB784", VA = "0x11AB784")]
	public float DistancePointLine(Vector2 point, Vector2 lineStart, Vector2 lineEnd, out Vector2 pointProject)
	{
		return default(float);
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x11ABDFC", Offset = "0x11ABDFC", VA = "0x11ABDFC")]
	public Vector2 ProjectPointLine(Vector2 point, Vector2 lineStart, Vector2 lineEnd)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x11ABFC4", Offset = "0x11ABFC4", VA = "0x11ABFC4")]
	public void TerrainCarve(bool terrainShow = false)
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x11ADDFC", Offset = "0x11ADDFC", VA = "0x11ADDFC")]
	public void TerrainPaint(bool terrainShow = false)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x11AFAE0", Offset = "0x11AFAE0", VA = "0x11AFAE0")]
	public void TerrainClearTrees(bool details = true)
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x11B0E44", Offset = "0x11B0E44", VA = "0x11B0E44")]
	public void Simulation()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x11B19E0", Offset = "0x11B19E0", VA = "0x11B19E0")]
	public static bool AreLinesIntersecting(Vector3 l1_p1, Vector3 l1_p2, Vector3 l2_p1, Vector3 l2_p2, bool shouldIncludeEndPoints = true)
	{
		return default(bool);
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x11ADCFC", Offset = "0x11ADCFC", VA = "0x11ADCFC")]
	public static float DistancePointLine(Vector3 point, Vector3 lineStart, Vector3 lineEnd)
	{
		return default(float);
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x11B1AB4", Offset = "0x11B1AB4", VA = "0x11B1AB4")]
	public static Vector3 ProjectPointLine(Vector3 point, Vector3 lineStart, Vector3 lineEnd)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x11B1CC4", Offset = "0x11B1CC4", VA = "0x11B1CC4")]
	public LakePolygon()
	{
	}
}
[Token(Token = "0x2000032")]
public class LakePolygonCarveData
{
	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float distSmooth;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float minX;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxX;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float minZ;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxZ;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector4[,] distances;

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x11841A4", Offset = "0x11841A4", VA = "0x11841A4")]
	public LakePolygonCarveData()
	{
	}
}
[Token(Token = "0x2000033")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xABE8B0", Offset = "0xABE8B0")]
public class LakePolygonProfile : ScriptableObject
{
	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material lakeMaterial;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distSmooth;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float uvScale;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumTriangleSize;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float traingleDensity;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool receiveShadows;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ShadowCastingMode shadowCastingMode;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float automaticFlowMapScale;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool noiseflowMap;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float noiseMultiplierflowMap;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float noiseSizeXflowMap;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float noiseSizeZflowMap;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve terrainCarve;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float terrainSmoothMultiplier;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve terrainPaintCarve;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool noiseCarve;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float noiseMultiplierInside;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float noiseMultiplierOutside;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float noiseSizeX;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float noiseSizeZ;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int currentSplatMap;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool noisePaint;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float noiseMultiplierInsidePaint;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float noiseMultiplierOutsidePaint;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float noiseSizeXPaint;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float noiseSizeZPaint;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public bool mixTwoSplatMaps;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int secondSplatMap;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool addCliffSplatMap;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int cliffSplatMap;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float cliffAngle;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float cliffBlend;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public int cliffSplatMapOutside;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float cliffAngleOutside;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float cliffBlendOutside;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float distanceClearFoliage;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float distanceClearFoliageTrees;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int biomeType;

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x11841B8", Offset = "0x11841B8", VA = "0x11841B8")]
	public LakePolygonProfile()
	{
	}
}
[Token(Token = "0x2000034")]
public class LakePolygonSwitch : MonoBehaviour
{
	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LakePolygon Polygon;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LakePolygonProfile Profile;

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x1184464", Offset = "0x1184464", VA = "0x1184464")]
	public void Switch()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x1184498", Offset = "0x1184498", VA = "0x1184498")]
	public void SetProfile(LakePolygonProfile lakeProfile)
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x1184928", Offset = "0x1184928", VA = "0x1184928")]
	public LakePolygonSwitch()
	{
	}
}
[Token(Token = "0x2000035")]
public class RamSwitch : MonoBehaviour
{
	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RamSpline spline;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SplineProfile Profile;

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x14565A0", Offset = "0x14565A0", VA = "0x14565A0")]
	public void Switch()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x14565D8", Offset = "0x14565D8", VA = "0x14565D8")]
	public void SetProfile(SplineProfile splineProfile)
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x1456D08", Offset = "0x1456D08", VA = "0x1456D08")]
	public RamSwitch()
	{
	}
}
[Token(Token = "0x2000036")]
public class MeshColoringRam : MonoBehaviour
{
	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float height;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float threshold;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool autoColor;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool newMesh;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 oldPosition;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool colorMeshLive;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public LayerMask layer;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MeshFilter[] meshFilters;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool colored;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RamSpline[] ramSplines;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static LakePolygon[] lakePolygons;

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x1198E70", Offset = "0x1198E70", VA = "0x1198E70")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x1198FB0", Offset = "0x1198FB0", VA = "0x1198FB0")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x1198FC0", Offset = "0x1198FC0", VA = "0x1198FC0")]
	public void ColorMeshLive()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x119972C", Offset = "0x119972C", VA = "0x119972C")]
	public MeshColoringRam()
	{
	}
}
[Token(Token = "0x2000037")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xABE91C", Offset = "0xABE91C")]
public class RamBuoyancy : MonoBehaviour
{
	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float buoyancy;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float viscosity;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float viscosityAngular;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask layer;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Collider collider;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC1748", Offset = "0xAC1748")]
	public int pointsInAxis;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody rigidbody;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RamSpline[] ramSplines;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static LakePolygon[] lakePolygons;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Vector3> volumePoints;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool autoGenerateVolumePoints;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] volumePointsMatrix;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 lowestPoint;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 center;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool debug;

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xEB88B8", Offset = "0xEB88B8", VA = "0xEB88B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xEB8D20", Offset = "0xEB8D20", VA = "0xEB8D20")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xEB8D24", Offset = "0xEB8D24", VA = "0xEB8D24")]
	public void WaterPhysics()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xEB9DF0", Offset = "0xEB9DF0", VA = "0xEB9DF0")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xEB9F84", Offset = "0xEB9F84", VA = "0xEB9F84")]
	public RamBuoyancy()
	{
	}
}
[Token(Token = "0x2000038")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xABE980", Offset = "0xABE980")]
public class RamSpline : MonoBehaviour
{
	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SplineProfile currentProfile;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SplineProfile oldProfile;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<RamSpline> beginnigChildSplines;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<RamSpline> endingChildSplines;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RamSpline beginningSpline;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RamSpline endingSpline;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int beginningConnectionID;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int endingConnectionID;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float beginningMinWidth;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float beginningMaxWidth;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float endingMinWidth;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float endingMaxWidth;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int toolbarInt;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool invertUVDirection;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool uvRotation;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MeshFilter meshfilter;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<Vector4> controlPoints;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<Quaternion> controlPointsRotations;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<Quaternion> controlPointsOrientation;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<Vector3> controlPointsUp;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public List<Vector3> controlPointsDown;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public List<float> controlPointsSnap;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AnimationCurve meshCurve;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public List<AnimationCurve> controlPointsMeshCurves;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool normalFromRaycast;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	public bool snapToTerrain;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public LayerMask snapMask;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public List<Vector3> points;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public List<Vector3> pointsUp;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public List<Vector3> pointsDown;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public List<Vector3> points2;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public List<Vector3> verticesBeginning;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public List<Vector3> verticesEnding;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public List<Vector3> normalsBeginning;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public List<Vector3> normalsEnding;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public List<float> widths;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public List<float> snaps;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public List<float> lerpValues;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public List<Quaternion> orientations;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public List<Vector3> tangents;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public List<Vector3> normalsList;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Color[] colors;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public List<Vector2> colorsFlowMap;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public List<Vector3> verticeDirection;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float floatSpeed;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public bool generateOnStart;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public float minVal;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public float maxVal;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float width;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public int vertsInShape;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public float traingleDensity;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public float uvScale;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Material oldMaterial;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public bool showVertexColors;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
	public bool showFlowMap;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16A")]
	public bool overrideFlowMap;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16B")]
	public bool drawOnMesh;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public bool drawOnMeshFlowMap;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16D")]
	public bool uvScaleOverride;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16E")]
	public bool debug;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16F")]
	public bool debugNormals;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public bool debugTangents;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x171")]
	public bool debugBitangent;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x172")]
	public bool debugFlowmap;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x173")]
	public bool debugPoints;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public bool debugPointsConnect;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x175")]
	public bool debugMesh;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public float distanceToDebug;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	public Color drawColor;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public bool drawColorR;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18D")]
	public bool drawColorG;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18E")]
	public bool drawColorB;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18F")]
	public bool drawColorA;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public bool drawOnMultiple;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	public float flowSpeed;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public float flowDirection;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public AnimationCurve flowFlat;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public AnimationCurve flowWaterfall;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public bool noiseflowMap;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	public float noiseMultiplierflowMap;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public float noiseSizeXflowMap;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	public float noiseSizeZflowMap;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public float opacity;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	public float drawSize;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public float length;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	public float fulllength;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public float minMaxWidth;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	public float uvWidth;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public float uvBeginning;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	public bool receiveShadows;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public ShadowCastingMode shadowCastingMode;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool generateMeshParts;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public int meshPartsCount;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public List<Transform> meshesPartTransforms;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public float simulatedRiverLength;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	public int simulatedRiverPoints;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public float simulatedMinStepSize;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	public bool simulatedNoUp;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x205")]
	public bool simulatedBreakOnUp;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public int detailTerrain;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	public int detailTerrainForward;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public float terrainAdditionalWidth;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	public float terrainSmoothMultiplier;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public bool overrideRiverRender;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x219")]
	public bool noiseWidth;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	public float noiseMultiplierWidth;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public float noiseSizeWidth;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	public bool noiseCarve;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public float noiseMultiplierInside;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	public float noiseMultiplierOutside;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public float noiseSizeX;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	public float noiseSizeZ;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public bool noisePaint;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	public float noiseMultiplierInsidePaint;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public float noiseMultiplierOutsidePaint;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
	public float noiseSizeXPaint;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public float noiseSizeZPaint;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
	public LayerMask maskCarve;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public AnimationCurve terrainCarve;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public float distSmooth;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
	public float distSmoothStart;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public AnimationCurve terrainPaintCarve;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public int currentSplatMap;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
	public bool mixTwoSplatMaps;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public int secondSplatMap;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
	public bool addCliffSplatMap;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public int cliffSplatMap;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	public float cliffAngle;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public float cliffBlend;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
	public int cliffSplatMapOutside;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public float cliffAngleOutside;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	public float cliffBlendOutside;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public float distanceClearFoliage;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
	public float distanceClearFoliageTrees;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public GameObject meshGO;

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xEBA068", Offset = "0xEBA068", VA = "0xEBA068")]
	public void Start()
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xEBAD48", Offset = "0xEBAD48", VA = "0xEBAD48")]
	public static RamSpline CreateSpline([Optional] Material splineMaterial, [Optional] List<Vector4> positions, string name = "RamSpline")
	{
		return null;
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xEBAED4", Offset = "0xEBAED4", VA = "0xEBAED4")]
	public void AddPoint(Vector4 position)
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xEBB0FC", Offset = "0xEBB0FC", VA = "0xEBB0FC")]
	public void AddPointAfter(int i)
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xEBB608", Offset = "0xEBB608", VA = "0xEBB608")]
	public void ChangePointPosition(int i, Vector3 position)
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xEBB658", Offset = "0xEBB658", VA = "0xEBB658")]
	public void ChangePointPosition(int i, Vector4 position)
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xEBB720", Offset = "0xEBB720", VA = "0xEBB720")]
	public void RemovePoint(int i)
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xEBB7F8", Offset = "0xEBB7F8", VA = "0xEBB7F8")]
	public void RemovePoints(int fromID = -1)
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xEBB874", Offset = "0xEBB874", VA = "0xEBB874")]
	public void GenerateBeginningParentBased()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xEBBC08", Offset = "0xEBBC08", VA = "0xEBBC08")]
	public void GenerateEndingParentBased()
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xEBA078", Offset = "0xEBA078", VA = "0xEBA078")]
	public void GenerateSpline([Optional] List<RamSpline> generatedSplines)
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xEBBFA4", Offset = "0xEBBFA4", VA = "0xEBBFA4")]
	private void CalculateCatmullRomSideSplines(List<Vector4> controlPoints, int pos)
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xEBC714", Offset = "0xEBC714", VA = "0xEBC714")]
	private void CalculateCatmullRomSplineParameters(List<Vector4> controlPoints, int pos, bool initialPoints = false)
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xEBCAF8", Offset = "0xEBCAF8", VA = "0xEBCAF8")]
	private void CalculateCatmullRomSpline(List<Vector3> controlPoints, int pos, ref List<Vector3> points)
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xEC0540", Offset = "0xEC0540", VA = "0xEC0540")]
	private void CalculatePointPosition(List<Vector3> controlPoints, int pos, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t, ref List<Vector3> points)
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xEBFF08", Offset = "0xEBFF08", VA = "0xEBFF08")]
	private void CalculatePointParameters(List<Vector4> controlPoints, int pos, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xEBF6FC", Offset = "0xEBF6FC", VA = "0xEBF6FC")]
	private int ClampListPos(int pos)
	{
		return default(int);
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xEBF788", Offset = "0xEBF788", VA = "0xEBF788")]
	private Vector3 GetCatmullRomPosition(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xEBFB18", Offset = "0xEBFB18", VA = "0xEBFB18")]
	private Vector3 GetCatmullRomTangent(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xEBFE40", Offset = "0xEBFE40", VA = "0xEBFE40")]
	private Vector3 CalculateNormal(Vector3 tangent, Vector3 up)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xEBCE04", Offset = "0xEBCE04", VA = "0xEBCE04")]
	private void GenerateMesh(ref Mesh mesh)
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xEC0874", Offset = "0xEC0874", VA = "0xEC0874")]
	public void GenerateMeshParts(Mesh baseMesh)
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xEC1300", Offset = "0xEC1300", VA = "0xEC1300")]
	public void AddNoiseToWidths()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xEC1450", Offset = "0xEC1450", VA = "0xEC1450")]
	public void SimulateRiver(bool generate = true)
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xEC2B74", Offset = "0xEC2B74", VA = "0xEC2B74")]
	public void ShowTerrainCarve(float differentSize = 0f)
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xEC4514", Offset = "0xEC4514", VA = "0xEC4514")]
	public void TerrainCarve()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xEC4F6C", Offset = "0xEC4F6C", VA = "0xEC4F6C")]
	public void TerrainPaintMeshBased()
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xEC6350", Offset = "0xEC6350", VA = "0xEC6350")]
	public void TerrainClearFoliage(bool details = true)
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xEC0714", Offset = "0xEC0714", VA = "0xEC0714")]
	private float FlowCalculate(float u, float normalY, Vector3 vertice)
	{
		return default(float);
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xEC7008", Offset = "0xEC7008", VA = "0xEC7008")]
	public RamSpline()
	{
	}
}
[Token(Token = "0x2000039")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xABE9E4", Offset = "0xABE9E4")]
public class SplineProfile : ScriptableObject
{
	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material splineMaterial;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve meshCurve;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minVal;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxVal;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int vertsInShape;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float traingleDensity;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float uvScale;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool uvRotation;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool receiveShadows;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ShadowCastingMode shadowCastingMode;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve flowFlat;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve flowWaterfall;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool noiseflowMap;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float noiseMultiplierflowMap;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float noiseSizeXflowMap;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float noiseSizeZflowMap;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float floatSpeed;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AnimationCurve terrainCarve;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float distSmooth;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float distSmoothStart;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AnimationCurve terrainPaintCarve;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public LayerMask maskCarve;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool noiseCarve;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float noiseMultiplierInside;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float noiseMultiplierOutside;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float noiseSizeX;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float noiseSizeZ;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float terrainSmoothMultiplier;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public int currentSplatMap;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool mixTwoSplatMaps;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public int secondSplatMap;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool addCliffSplatMap;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public int cliffSplatMap;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float cliffAngle;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float cliffBlend;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int cliffSplatMapOutside;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float cliffAngleOutside;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float cliffBlendOutside;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float distanceClearFoliage;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float distanceClearFoliageTrees;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public bool noisePaint;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float noiseMultiplierInsidePaint;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float noiseMultiplierOutsidePaint;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float noiseSizeXPaint;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float noiseSizeZPaint;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float simulatedRiverLength;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public int simulatedRiverPoints;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float simulatedMinStepSize;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public bool simulatedNoUp;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
	public bool simulatedBreakOnUp;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF6")]
	public bool noiseWidth;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float noiseMultiplierWidth;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float noiseSizeWidth;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public int biomeType;

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xFB9B2C", Offset = "0xFB9B2C", VA = "0xFB9B2C")]
	public SplineProfile()
	{
	}
}
[Token(Token = "0x200003A")]
[ExecuteAlways]
public class PipeLineAssetScene : MonoBehaviour
{
	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenderPipelineAsset renderPipelineAsset;

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xEB5B5C", Offset = "0xEB5B5C", VA = "0xEB5B5C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xEB5B8C", Offset = "0xEB5B8C", VA = "0xEB5B8C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xEB5BBC", Offset = "0xEB5BBC", VA = "0xEB5BBC")]
	public PipeLineAssetScene()
	{
	}
}
[Token(Token = "0x200003B")]
public class MaterialShowcaseRotationScript : MonoBehaviour
{
	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 localRotationVelocityEuler;

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x1197674", Offset = "0x1197674", VA = "0x1197674")]
	private void Update()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x11977C0", Offset = "0x11977C0", VA = "0x11977C0")]
	public MaterialShowcaseRotationScript()
	{
	}
}
[Token(Token = "0x200003C")]
public class ActorCOMTransform : MonoBehaviour
{
	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 offset;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ObiActor actor;

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xD664B8", Offset = "0xD664B8", VA = "0xD664B8")]
	public void Update()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xD66618", Offset = "0xD66618", VA = "0xD66618")]
	public ActorCOMTransform()
	{
	}
}
[Token(Token = "0x200003D")]
public class ActorSpawner : MonoBehaviour
{
	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ObiActor template;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int basePhase;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int maxInstances;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spawnDelay;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int phase;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int instances;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float timeFromLastSpawn;

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xD66620", Offset = "0xD66620", VA = "0xD66620")]
	private void Update()
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xD66810", Offset = "0xD66810", VA = "0xD66810")]
	public ActorSpawner()
	{
	}
}
[Token(Token = "0x200003E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xABEA60", Offset = "0xABEA60")]
public class AddRandomVelocity : MonoBehaviour
{
	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float intensity;

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xD66830", Offset = "0xD66830", VA = "0xD66830")]
	private void Update()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xD66920", Offset = "0xD66920", VA = "0xD66920")]
	public AddRandomVelocity()
	{
	}
}
[Token(Token = "0x200003F")]
public class Blinker : MonoBehaviour
{
	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color highlightColor;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Renderer rend;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color original;

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x10661B4", Offset = "0x10661B4", VA = "0x10661B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x1066240", Offset = "0x1066240", VA = "0x1066240")]
	public void Blink()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x1066280", Offset = "0x1066280", VA = "0x1066280")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x10663AC", Offset = "0x10663AC", VA = "0x10663AC")]
	public Blinker()
	{
	}
}
[Token(Token = "0x2000040")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xABEAC4", Offset = "0xABEAC4")]
public class ColliderHighlighter : MonoBehaviour
{
	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ObiSolver solver;

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x106F4B0", Offset = "0x106F4B0", VA = "0x106F4B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x106F510", Offset = "0x106F510", VA = "0x106F510")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x106F59C", Offset = "0x106F59C", VA = "0x106F59C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x106F628", Offset = "0x106F628", VA = "0x106F628")]
	private void Solver_OnCollision(object sender, ObiSolver.ObiCollisionEventArgs e)
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x106F7C4", Offset = "0x106F7C4", VA = "0x106F7C4")]
	public ColliderHighlighter()
	{
	}
}
[Token(Token = "0x2000041")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xABEB28", Offset = "0xABEB28")]
public class CollisionEventHandler : MonoBehaviour
{
	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ObiSolver solver;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int contactCount;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ObiSolver.ObiCollisionEventArgs frame;

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x106F7CC", Offset = "0x106F7CC", VA = "0x106F7CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x106F82C", Offset = "0x106F82C", VA = "0x106F82C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x106F8B8", Offset = "0x106F8B8", VA = "0x106F8B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x106F944", Offset = "0x106F944", VA = "0x106F944")]
	private void Solver_OnCollision(object sender, ObiSolver.ObiCollisionEventArgs e)
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x106F950", Offset = "0x106F950", VA = "0x106F950")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x106FC88", Offset = "0x106FC88", VA = "0x106FC88")]
	public CollisionEventHandler()
	{
	}
}
[Token(Token = "0x2000042")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xABEB8C", Offset = "0xABEB8C")]
public class DebugParticleFrames : MonoBehaviour
{
	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ObiActor actor;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float size;

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x1071028", Offset = "0x1071028", VA = "0x1071028")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x1071088", Offset = "0x1071088", VA = "0x1071088")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x10713E8", Offset = "0x10713E8", VA = "0x10713E8")]
	public DebugParticleFrames()
	{
	}
}
[Token(Token = "0x2000043")]
public class ExtrapolationCamera : MonoBehaviour
{
	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float extrapolation;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC1760", Offset = "0xAC1760")]
	public float smoothness;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC1778", Offset = "0xAC1778")]
	public float linearSpeed;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC1790", Offset = "0xAC1790")]
	public float rotationalSpeed;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "MinAttribute", RVA = "0xAC17A8", Offset = "0xAC17A8")]
	public float distanceFromTarget;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 lastPosition;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 extrapolatedPos;

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x13FA084", Offset = "0x13FA084", VA = "0x13FA084")]
	private void Start()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x13FA118", Offset = "0x13FA118", VA = "0x13FA118")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x13FA2A0", Offset = "0x13FA2A0", VA = "0x13FA2A0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x13FA51C", Offset = "0x13FA51C", VA = "0x13FA51C")]
	public void Teleport(Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x13FA63C", Offset = "0x13FA63C", VA = "0x13FA63C")]
	public ExtrapolationCamera()
	{
	}
}
[Token(Token = "0x2000044")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xABEC00", Offset = "0xABEC00")]
public class FPSDisplay : MonoBehaviour
{
	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float updateInterval;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool showMedian;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float medianLearnrate;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float accum;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int frames;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timeleft;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float currentFPS;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float median;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float average;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Text uguiText;

	[Token(Token = "0x17000008")]
	public float CurrentFPS
	{
		[Token(Token = "0x6000109")]
		[Address(RVA = "0x13FA658", Offset = "0x13FA658", VA = "0x13FA658")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000009")]
	public float FPSMedian
	{
		[Token(Token = "0x600010A")]
		[Address(RVA = "0x13FA660", Offset = "0x13FA660", VA = "0x13FA660")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700000A")]
	public float FPSAverage
	{
		[Token(Token = "0x600010B")]
		[Address(RVA = "0x13FA668", Offset = "0x13FA668", VA = "0x13FA668")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x13FA670", Offset = "0x13FA670", VA = "0x13FA670")]
	private void Start()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x13FA6DC", Offset = "0x13FA6DC", VA = "0x13FA6DC")]
	private void Update()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x13FA8B8", Offset = "0x13FA8B8", VA = "0x13FA8B8")]
	public void ResetMedianAndAverage()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x13FA8C0", Offset = "0x13FA8C0", VA = "0x13FA8C0")]
	public FPSDisplay()
	{
	}
}
[Token(Token = "0x2000045")]
public class ObiActorTeleport : MonoBehaviour
{
	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ObiActor actor;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xF07F34", Offset = "0xF07F34", VA = "0xF07F34")]
	public void Teleport()
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xF07FD4", Offset = "0xF07FD4", VA = "0xF07FD4")]
	public ObiActorTeleport()
	{
	}
}
[Token(Token = "0x2000046")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xABEC64", Offset = "0xABEC64")]
public class ObiParticleCounter : MonoBehaviour
{
	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ObiSolver solver;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int counter;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Collider2D targetCollider;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ObiSolver.ObiCollisionEventArgs frame;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private HashSet<int> particles;

	[Token(Token = "0x6000112")]
	[Address(RVA = "0xF07FDC", Offset = "0xF07FDC", VA = "0xF07FDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xF0803C", Offset = "0xF0803C", VA = "0xF0803C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xF080C8", Offset = "0xF080C8", VA = "0xF080C8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xF08154", Offset = "0xF08154", VA = "0xF08154")]
	private void Solver_OnCollision(object sender, ObiSolver.ObiCollisionEventArgs e)
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0xF082A8", Offset = "0xF082A8", VA = "0xF082A8")]
	public ObiParticleCounter()
	{
	}
}
[Token(Token = "0x2000047")]
public class ObjectDragger : MonoBehaviour
{
	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 screenPoint;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 offset;

	[Token(Token = "0x6000117")]
	[Address(RVA = "0xF08324", Offset = "0xF08324", VA = "0xF08324")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0xF084A8", Offset = "0xF084A8", VA = "0xF084A8")]
	private void OnMouseDrag()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xF085CC", Offset = "0xF085CC", VA = "0xF085CC")]
	public ObjectDragger()
	{
	}
}
[Token(Token = "0x2000048")]
public class ObjectLimit : MonoBehaviour
{
	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minX;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxX;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minY;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxY;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minZ;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxZ;

	[Token(Token = "0x600011A")]
	[Address(RVA = "0xF085D4", Offset = "0xF085D4", VA = "0xF085D4")]
	private void Update()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0xF08750", Offset = "0xF08750", VA = "0xF08750")]
	public ObjectLimit()
	{
	}
}
[Token(Token = "0x2000049")]
public class SlowmoToggler : MonoBehaviour
{
	[Token(Token = "0x600011C")]
	[Address(RVA = "0xFB8794", Offset = "0xFB8794", VA = "0xFB8794")]
	public void Slowmo(bool slowmo)
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xFB87AC", Offset = "0xFB87AC", VA = "0xFB87AC")]
	public SlowmoToggler()
	{
	}
}
[Token(Token = "0x200004A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xABECC8", Offset = "0xABECC8")]
public class WorldSpaceGravity : MonoBehaviour
{
	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ObiSolver solver;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 worldGravity;

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x1EACC10", Offset = "0x1EACC10", VA = "0x1EACC10")]
	private void Awake()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x1EACC70", Offset = "0x1EACC70", VA = "0x1EACC70")]
	private void Update()
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x1EACCC8", Offset = "0x1EACCC8", VA = "0x1EACCC8")]
	public WorldSpaceGravity()
	{
	}
}
[Token(Token = "0x200004B")]
public class CharacterControl2D : MonoBehaviour
{
	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float acceleration;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxSpeed;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float jumpPower;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody unityRigidbody;

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x106EFCC", Offset = "0x106EFCC", VA = "0x106EFCC")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x106F02C", Offset = "0x106F02C", VA = "0x106F02C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x106F1A8", Offset = "0x106F1A8", VA = "0x106F1A8")]
	public CharacterControl2D()
	{
	}
}
[Token(Token = "0x200004C")]
public class CraneController : MonoBehaviour, XRIDefaultInputActions.IXRILeftHandActions
{
	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ObiRopeCursor cursor;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ObiRope rope;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool up;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool down;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool left;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	private bool right;

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x106FC90", Offset = "0x106FC90", VA = "0x106FC90", Slot = "7")]
	public void OnActivate(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x106FCF0", Offset = "0x106FCF0", VA = "0x106FCF0", Slot = "9")]
	public void OnHapticDevice(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x106FD50", Offset = "0x106FD50", VA = "0x106FD50", Slot = "15")]
	public void OnMove(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x106FDB0", Offset = "0x106FDB0", VA = "0x106FDB0", Slot = "4")]
	public void OnPosition(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x106FE10", Offset = "0x106FE10", VA = "0x106FE10", Slot = "18")]
	public void OnReset(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x106FE70", Offset = "0x106FE70", VA = "0x106FE70", Slot = "16")]
	public void OnRotateAnchor(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x106FED0", Offset = "0x106FED0", VA = "0x106FED0", Slot = "5")]
	public void OnRotation(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x106FF30", Offset = "0x106FF30", VA = "0x106FF30", Slot = "6")]
	public void OnSelect(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x106FF90", Offset = "0x106FF90", VA = "0x106FF90", Slot = "11")]
	public void OnTeleportModeActivate(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x106FFF0", Offset = "0x106FFF0", VA = "0x106FFF0", Slot = "12")]
	public void OnTeleportModeCancel(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x1070050", Offset = "0x1070050", VA = "0x1070050", Slot = "10")]
	public void OnTeleportSelect(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x10700B0", Offset = "0x10700B0", VA = "0x10700B0", Slot = "17")]
	public void OnTranslateAnchor(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x1070110", Offset = "0x1070110", VA = "0x1070110", Slot = "13")]
	public void OnTurn(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x1070170", Offset = "0x1070170", VA = "0x1070170", Slot = "8")]
	public void OnUIPress(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x10701D0", Offset = "0x10701D0", VA = "0x10701D0", Slot = "20")]
	public void OnAutoReel(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x10701D4", Offset = "0x10701D4", VA = "0x10701D4", Slot = "23")]
	public void OnMenu(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x10701D8", Offset = "0x10701D8", VA = "0x10701D8", Slot = "21")]
	public void OnBoost(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x10701DC", Offset = "0x10701DC", VA = "0x10701DC", Slot = "22")]
	public void OnGrabHandle(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x10701E0", Offset = "0x10701E0", VA = "0x10701E0", Slot = "14")]
	public void OnThumbUp(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x10701E4", Offset = "0x10701E4", VA = "0x10701E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x1070270", Offset = "0x1070270", VA = "0x1070270")]
	private void Update()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x1070274", Offset = "0x1070274", VA = "0x1070274", Slot = "24")]
	public void OnPickup(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x10702D4", Offset = "0x10702D4", VA = "0x10702D4", Slot = "25")]
	public void OnDialogAdvance(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x1070334", Offset = "0x1070334", VA = "0x1070334")]
	public void OnAnimateLeftHand(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x1070394", Offset = "0x1070394", VA = "0x1070394", Slot = "26")]
	public void OnAnimateIndexLeft(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x10703F4", Offset = "0x10703F4", VA = "0x10703F4", Slot = "27")]
	public void OnAnimateFingersLeft(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x1070454", Offset = "0x1070454", VA = "0x1070454", Slot = "28")]
	public void OnAnimateThumbLeft(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x10704B4", Offset = "0x10704B4", VA = "0x10704B4", Slot = "19")]
	public void OnSwitchRod(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x10704B8", Offset = "0x10704B8", VA = "0x10704B8")]
	public CraneController()
	{
	}
}
[Token(Token = "0x200004D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xABED2C", Offset = "0xABED2C")]
public class CursorController : MonoBehaviour
{
	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ObiRopeCursor cursor;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ObiRope rope;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minLength;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float speed;

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x10705FC", Offset = "0x10705FC", VA = "0x10705FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x1070680", Offset = "0x1070680", VA = "0x1070680")]
	private void Update()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x1070908", Offset = "0x1070908", VA = "0x1070908")]
	public CursorController()
	{
	}
}
[Token(Token = "0x200004E")]
public class GrapplingHook : MonoBehaviour
{
	[Token(Token = "0x20003CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0898", Offset = "0xAC0898")]
	private sealed class <AttachHook>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GrapplingHook <>4__this;

		[Token(Token = "0x17000223")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B33")]
			[Address(RVA = "0x13FD8D0", Offset = "0x13FD8D0", VA = "0x13FD8D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000224")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B35")]
			[Address(RVA = "0x13FD938", Offset = "0x13FD938", VA = "0x13FD938", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0x13FD0F0", Offset = "0x13FD0F0", VA = "0x13FD0F0")]
		[DebuggerHidden]
		public <AttachHook>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0x13FD2A8", Offset = "0x13FD2A8", VA = "0x13FD2A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0x13FD2AC", Offset = "0x13FD2AC", VA = "0x13FD2AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0x13FD8D8", Offset = "0x13FD8D8", VA = "0x13FD8D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ObiSolver solver;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ObiCollider character;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float hookExtendRetractSpeed;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material material;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ObiRopeSection section;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ObiRope rope;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ObiRopeBlueprint blueprint;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ObiRopeExtrudedRenderer ropeRenderer;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ObiRopeCursor cursor;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private RaycastHit hookAttachment;

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x13FCC54", Offset = "0x13FCC54", VA = "0x13FCC54")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x13FCE30", Offset = "0x13FCE30", VA = "0x13FCE30")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x13FCE9C", Offset = "0x13FCE9C", VA = "0x13FCE9C")]
	private void LaunchHook()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x13FD074", Offset = "0x13FD074", VA = "0x13FD074")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC8E4C", Offset = "0xAC8E4C")]
	private IEnumerator AttachHook()
	{
		return null;
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x13FD11C", Offset = "0x13FD11C", VA = "0x13FD11C")]
	private void DetachHook()
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x13FD198", Offset = "0x13FD198", VA = "0x13FD198")]
	private void Update()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x13FD298", Offset = "0x13FD298", VA = "0x13FD298")]
	public GrapplingHook()
	{
	}
}
[Token(Token = "0x200004F")]
public class RobotArmController : MonoBehaviour
{
	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform section1;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform section2;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform actuator;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speed;

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x1457204", Offset = "0x1457204", VA = "0x1457204")]
	private void Update()
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x1457438", Offset = "0x1457438", VA = "0x1457438")]
	public RobotArmController()
	{
	}
}
[Token(Token = "0x2000050")]
public class RopeNet : MonoBehaviour
{
	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2Int resolution;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 size;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float nodeSize;

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xFB4460", Offset = "0xFB4460", VA = "0xFB4460")]
	private void Awake()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xFB465C", Offset = "0xFB465C", VA = "0xFB465C")]
	private void CreateNet(ObiSolver solver)
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xFB539C", Offset = "0xFB539C", VA = "0xFB539C")]
	private void PinRope(ObiRope rope, ObiCollider bodyA, ObiCollider bodyB, Vector3 offsetA, Vector3 offsetB)
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xFB4EF4", Offset = "0xFB4EF4", VA = "0xFB4EF4")]
	private ObiRope CreateRope(Vector3 pointA, Vector3 pointB)
	{
		return null;
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0xFB55F8", Offset = "0xFB55F8", VA = "0xFB55F8")]
	public RopeNet()
	{
	}
}
[Token(Token = "0x2000051")]
public class RopeTenser : MonoBehaviour
{
	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float force;

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xFB5674", Offset = "0xFB5674", VA = "0xFB5674")]
	private void Update()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xFB5714", Offset = "0xFB5714", VA = "0xFB5714")]
	public RopeTenser()
	{
	}
}
[Token(Token = "0x2000052")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xABED90", Offset = "0xABED90")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xABED90", Offset = "0xABED90")]
public class RopeTensionColorizer : MonoBehaviour
{
	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minTension;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxTension;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color normalColor;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color tensionColor;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RopeTenser tenser;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float tenserThreshold;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float tenserMax;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ObiRope rope;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material localMaterial;

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xFB5724", Offset = "0xFB5724", VA = "0xFB5724")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xFB57B8", Offset = "0xFB57B8", VA = "0xFB57B8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xFB5824", Offset = "0xFB5824", VA = "0xFB5824")]
	private void Update()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xFB59B4", Offset = "0xFB59B4", VA = "0xFB59B4")]
	public RopeTensionColorizer()
	{
	}
}
[Token(Token = "0x2000053")]
public class RuntimeRopeGenerator
{
	[Token(Token = "0x20003CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC08A8", Offset = "0xAC08A8")]
	private sealed class <MakeRope>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000225")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B39")]
			[Address(RVA = "0xFB5F28", Offset = "0xFB5F28", VA = "0xFB5F28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000226")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B3B")]
			[Address(RVA = "0xFB5F90", Offset = "0xFB5F90", VA = "0xFB5F90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0xFB5E30", Offset = "0xFB5E30", VA = "0xFB5E30")]
		[DebuggerHidden]
		public <MakeRope>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0xFB5E7C", Offset = "0xFB5E7C", VA = "0xFB5E7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0xFB5E80", Offset = "0xFB5E80", VA = "0xFB5E80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0xFB5F30", Offset = "0xFB5F30", VA = "0xFB5F30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private ObiSolver solver;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int pinnedParticle;

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xFB5DD0", Offset = "0xFB5DD0", VA = "0xFB5DD0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC8EB0", Offset = "0xAC8EB0")]
	public IEnumerator MakeRope(Transform anchoredTo, Vector3 attachmentOffset, float ropeLength)
	{
		return null;
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xFB5E5C", Offset = "0xFB5E5C", VA = "0xFB5E5C")]
	public void AddPendulum(ObiCollider pendulum, Vector3 attachmentOffset)
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xFB5E60", Offset = "0xFB5E60", VA = "0xFB5E60")]
	public void RemovePendulum()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xFB5E64", Offset = "0xFB5E64", VA = "0xFB5E64")]
	public void ChangeRopeLength(float changeAmount)
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xFB5E68", Offset = "0xFB5E68", VA = "0xFB5E68")]
	private void UpdateTethers()
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xFB5E6C", Offset = "0xFB5E6C", VA = "0xFB5E6C")]
	public RuntimeRopeGenerator()
	{
	}
}
[Token(Token = "0x2000054")]
public class RuntimeRopeGeneratorUse : MonoBehaviour
{
	[Token(Token = "0x20003CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC08B8", Offset = "0xAC08B8")]
	private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RuntimeRopeGeneratorUse <>4__this;

		[Token(Token = "0x17000227")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B3F")]
			[Address(RVA = "0xFB61F4", Offset = "0xFB61F4", VA = "0xFB61F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000228")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B41")]
			[Address(RVA = "0xFB625C", Offset = "0xFB625C", VA = "0xFB625C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0xFB6014", Offset = "0xFB6014", VA = "0xFB6014")]
		[DebuggerHidden]
		public <Start>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0xFB60A8", Offset = "0xFB60A8", VA = "0xFB60A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0xFB60AC", Offset = "0xFB60AC", VA = "0xFB60AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0xFB61FC", Offset = "0xFB61FC", VA = "0xFB61FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ObiCollider pendulum;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RuntimeRopeGenerator rg;

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xFB5F98", Offset = "0xFB5F98", VA = "0xFB5F98")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC8F14", Offset = "0xAC8F14")]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xFB6040", Offset = "0xFB6040", VA = "0xFB6040")]
	public void Update()
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xFB60A0", Offset = "0xFB60A0", VA = "0xFB60A0")]
	public RuntimeRopeGeneratorUse()
	{
	}
}
[Token(Token = "0x2000055")]
[ExecuteInEditMode]
public class SpiralCurve : MonoBehaviour
{
	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float radius;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float radialStep;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float heightStep;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float points;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float rotationalMass;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float thickness;

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xFB9710", Offset = "0xFB9710", VA = "0xFB9710")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xFB9714", Offset = "0xFB9714", VA = "0xFB9714")]
	public void Generate()
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xFB9B10", Offset = "0xFB9B10", VA = "0xFB9B10")]
	public SpiralCurve()
	{
	}
}
[Token(Token = "0x2000056")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xABEE2C", Offset = "0xABEE2C")]
public class WrapRopeGameController : MonoBehaviour
{
	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ObiSolver solver;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Wrappable[] wrappables;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent onFinish;

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x1EACD2C", Offset = "0x1EACD2C", VA = "0x1EACD2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x1EACD8C", Offset = "0x1EACD8C", VA = "0x1EACD8C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x1EACE18", Offset = "0x1EACE18", VA = "0x1EACE18")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x1EACEA4", Offset = "0x1EACEA4", VA = "0x1EACEA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x1EACF18", Offset = "0x1EACF18", VA = "0x1EACF18")]
	private void Solver_OnCollision(ObiSolver s, ObiSolver.ObiCollisionEventArgs e)
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x1EAD308", Offset = "0x1EAD308", VA = "0x1EAD308")]
	public WrapRopeGameController()
	{
	}
}
[Token(Token = "0x2000057")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xABEE90", Offset = "0xABEE90")]
public class WrapRopePlayerController : MonoBehaviour
{
	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float acceleration;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rb;

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x1EAD37C", Offset = "0x1EAD37C", VA = "0x1EAD37C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x1EAD3DC", Offset = "0x1EAD3DC", VA = "0x1EAD3DC")]
	private void Update()
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x1EAD69C", Offset = "0x1EAD69C", VA = "0x1EAD69C")]
	public WrapRopePlayerController()
	{
	}
}
[Token(Token = "0x2000058")]
public class Wrappable : MonoBehaviour
{
	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool wrapped;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color normalColor;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color wrappedColor;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material localMaterial;

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x1EAD6AC", Offset = "0x1EAD6AC", VA = "0x1EAD6AC")]
	public void Awake()
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x1EAD71C", Offset = "0x1EAD71C", VA = "0x1EAD71C")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x1EAD2AC", Offset = "0x1EAD2AC", VA = "0x1EAD2AC")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x1EAD2D8", Offset = "0x1EAD2D8", VA = "0x1EAD2D8")]
	public void SetWrapped()
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x1EAD788", Offset = "0x1EAD788", VA = "0x1EAD788")]
	public bool IsWrapped()
	{
		return default(bool);
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x1EAD790", Offset = "0x1EAD790", VA = "0x1EAD790")]
	public Wrappable()
	{
	}
}
[Token(Token = "0x2000059")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x20003D0")]
	public delegate void OnClick();

	[Token(Token = "0x20003D1")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x20003D2")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x20003D3")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x20003D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC08C8", Offset = "0xAC08C8")]
	private sealed class <>c__DisplayClass36_0
	{
		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0x107252C", Offset = "0x107252C", VA = "0x107252C")]
		public <>c__DisplayClass36_0()
		{
		}

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0x107301C", Offset = "0x107301C", VA = "0x107301C")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x20003D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC08D8", Offset = "0xAC08D8")]
	private sealed class <>c__DisplayClass38_0
	{
		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0x10727AC", Offset = "0x10727AC", VA = "0x10727AC")]
		public <>c__DisplayClass38_0()
		{
		}

		[Token(Token = "0x6001B55")]
		[Address(RVA = "0x1073240", Offset = "0x1073240", VA = "0x1073240")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x20003D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC08E8", Offset = "0xAC08E8")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6001B56")]
		[Address(RVA = "0x10729E4", Offset = "0x10729E4", VA = "0x10729E4")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0x10734B8", Offset = "0x10734B8", VA = "0x10734B8")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20003D7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC08F8", Offset = "0xAC08F8")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0x1072B98", Offset = "0x1072B98", VA = "0x1072B98")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0x107386C", Offset = "0x107386C", VA = "0x107386C")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20003D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0908", Offset = "0xAC0908")]
	private sealed class <>c__DisplayClass42_0
	{
		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0x1072E0C", Offset = "0x1072E0C", VA = "0x1072E0C")]
		public <>c__DisplayClass42_0()
		{
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0x107388C", Offset = "0x107388C", VA = "0x107388C")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x400027A")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x400027B")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x400027C")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool[] reEnable;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x400028A")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x400028B")]
	private const float marginH = 16f;

	[Token(Token = "0x400028C")]
	private const float marginV = 16f;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector2[] insertPositions;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 menuOffset;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private OVRCameraRig rig;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LaserPointer lp;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private LineRenderer lr;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x10713F8", Offset = "0x10713F8", VA = "0x10713F8")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x1071878", Offset = "0x1071878", VA = "0x1071878")]
	public void Show()
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x1071E58", Offset = "0x1071E58", VA = "0x1071E58")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x1071C04", Offset = "0x1071C04", VA = "0x1071C04")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x1072000", Offset = "0x1072000", VA = "0x1072000")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x10722F8", Offset = "0x10722F8", VA = "0x10722F8")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x1072534", Offset = "0x1072534", VA = "0x1072534")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x1072618", Offset = "0x1072618", VA = "0x1072618")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x10727B4", Offset = "0x10727B4", VA = "0x10727B4")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x1072850", Offset = "0x1072850", VA = "0x1072850")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x10729EC", Offset = "0x10729EC", VA = "0x10729EC")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x1072BA0", Offset = "0x1072BA0", VA = "0x1072BA0")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x1072E14", Offset = "0x1072E14", VA = "0x1072E14")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x1072EF0", Offset = "0x1072EF0", VA = "0x1072EF0")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x1072FA0", Offset = "0x1072FA0", VA = "0x1072FA0")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x200005A")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x1402074", Offset = "0x1402074", VA = "0x1402074")]
	private void Start()
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x1402110", Offset = "0x1402110", VA = "0x1402110")]
	private void Update()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x14021D8", Offset = "0x14021D8", VA = "0x14021D8")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x1402214", Offset = "0x1402214", VA = "0x1402214")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x200005B")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x20003D9")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4001AEF")]
		On,
		[Token(Token = "0x4001AF0")]
		Off,
		[Token(Token = "0x4001AF1")]
		OnWhenHitTarget
	}

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x1700000B")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x6000187")]
		[Address(RVA = "0x1184974", Offset = "0x1184974", VA = "0x1184974")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x6000186")]
		[Address(RVA = "0x1184930", Offset = "0x1184930", VA = "0x1184930")]
		set
		{
		}
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x118497C", Offset = "0x118497C", VA = "0x118497C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x11849DC", Offset = "0x11849DC", VA = "0x11849DC")]
	private void Start()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x1184AF4", Offset = "0x1184AF4", VA = "0x1184AF4", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x1184B10", Offset = "0x1184B10", VA = "0x1184B10", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x1184B64", Offset = "0x1184B64", VA = "0x1184B64")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x1184DC0", Offset = "0x1184DC0", VA = "0x1184DC0")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x1184ED4", Offset = "0x1184ED4", VA = "0x1184ED4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x1184F68", Offset = "0x1184F68", VA = "0x1184F68")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x1185038", Offset = "0x1185038", VA = "0x1185038")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x11850F0", Offset = "0x11850F0", VA = "0x11850F0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x11851BC", Offset = "0x11851BC", VA = "0x11851BC")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x200005C")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x40002A0")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x40002A1")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x40002A2")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC186C", Offset = "0xAC186C")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC18A4", Offset = "0xAC18A4")]
	public LayerMask CollideLayers;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC18DC", Offset = "0xAC18DC")]
	public float HeightOffset;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC1914", Offset = "0xAC1914")]
	public float MinimumHeight;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC194C", Offset = "0xAC194C")]
	public float MaximumHeight;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x106D6CC", Offset = "0x106D6CC", VA = "0x106D6CC")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x106D6D4", Offset = "0x106D6D4", VA = "0x106D6D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x106D758", Offset = "0x106D758", VA = "0x106D758")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x106D7E4", Offset = "0x106D7E4", VA = "0x106D7E4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x106D870", Offset = "0x106D870", VA = "0x106D870")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x106DC78", Offset = "0x106DC78", VA = "0x106DC78")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x106DF20", Offset = "0x106DF20", VA = "0x106DF20")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x200005D")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x1186064", Offset = "0x1186064", VA = "0x1186064")]
	private void Start()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x1186128", Offset = "0x1186128", VA = "0x1186128")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x200005E")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x20003DA")]
	public enum States
	{
		[Token(Token = "0x4001AF3")]
		Ready,
		[Token(Token = "0x4001AF4")]
		Aim,
		[Token(Token = "0x4001AF5")]
		CancelAim,
		[Token(Token = "0x4001AF6")]
		PreTeleport,
		[Token(Token = "0x4001AF7")]
		CancelTeleport,
		[Token(Token = "0x4001AF8")]
		Teleporting,
		[Token(Token = "0x4001AF9")]
		PostTeleport
	}

	[Token(Token = "0x20003DB")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4001AFB")]
		None,
		[Token(Token = "0x4001AFC")]
		Aim,
		[Token(Token = "0x4001AFD")]
		PreTeleport,
		[Token(Token = "0x4001AFE")]
		Teleport
	}

	[Token(Token = "0x20003DC")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4001B00")]
		Point,
		[Token(Token = "0x4001B01")]
		Sphere,
		[Token(Token = "0x4001B02")]
		Capsule
	}

	[Token(Token = "0x20003DD")]
	public class AimData
	{
		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC8A78", Offset = "0xAC8A78")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x17000229")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6001B5D")]
			[Address(RVA = "0x1189410", Offset = "0x1189410", VA = "0x1189410")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAD066C", Offset = "0xAD066C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B5E")]
			[Address(RVA = "0x1189418", Offset = "0x1189418", VA = "0x1189418")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAD067C", Offset = "0xAD067C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0x1189394", Offset = "0x1189394", VA = "0x1189394")]
		public AimData()
		{
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0x1189420", Offset = "0x1189420", VA = "0x1189420")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20003DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0918", Offset = "0xAC0918")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700022A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B63")]
			[Address(RVA = "0x11891D4", Offset = "0x11891D4", VA = "0x11891D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B65")]
			[Address(RVA = "0x118923C", Offset = "0x118923C", VA = "0x118923C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0x118761C", Offset = "0x118761C", VA = "0x118761C")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0x11890CC", Offset = "0x11890CC", VA = "0x11890CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0x11890D0", Offset = "0x11890D0", VA = "0x11890D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0x11891DC", Offset = "0x11891DC", VA = "0x11891DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003DF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0928", Offset = "0xAC0928")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700022C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B69")]
			[Address(RVA = "0x1188B58", Offset = "0x1188B58", VA = "0x1188B58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B6B")]
			[Address(RVA = "0x1188BC0", Offset = "0x1188BC0", VA = "0x1188BC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0x1187B10", Offset = "0x1187B10", VA = "0x1187B10")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0x1188A08", Offset = "0x1188A08", VA = "0x1188A08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0x1188A0C", Offset = "0x1188A0C", VA = "0x1188A0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0x1188B60", Offset = "0x1188B60", VA = "0x1188B60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0938", Offset = "0xAC0938")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700022E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B6F")]
			[Address(RVA = "0x1188C78", Offset = "0x1188C78", VA = "0x1188C78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B71")]
			[Address(RVA = "0x1188CE0", Offset = "0x1188CE0", VA = "0x1188CE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0x1187D00", Offset = "0x1187D00", VA = "0x1187D00")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0x1188BC8", Offset = "0x1188BC8", VA = "0x1188BC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0x1188BCC", Offset = "0x1188BCC", VA = "0x1188BCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0x1188C80", Offset = "0x1188C80", VA = "0x1188C80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003E1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0948", Offset = "0xAC0948")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000230")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B75")]
			[Address(RVA = "0x118905C", Offset = "0x118905C", VA = "0x118905C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000231")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B77")]
			[Address(RVA = "0x11890C4", Offset = "0x11890C4", VA = "0x11890C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0x1187EF0", Offset = "0x1187EF0", VA = "0x1187EF0")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0x1188F78", Offset = "0x1188F78", VA = "0x1188F78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0x1188F7C", Offset = "0x1188F7C", VA = "0x1188F7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0x1189064", Offset = "0x1189064", VA = "0x1189064", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003E2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0958", Offset = "0xAC0958")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000232")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B7B")]
			[Address(RVA = "0x1188D98", Offset = "0x1188D98", VA = "0x1188D98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000233")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B7D")]
			[Address(RVA = "0x1188E00", Offset = "0x1188E00", VA = "0x1188E00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0x11880E0", Offset = "0x11880E0", VA = "0x11880E0")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0x1188CE8", Offset = "0x1188CE8", VA = "0x1188CE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0x1188CEC", Offset = "0x1188CEC", VA = "0x1188CEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0x1188DA0", Offset = "0x1188DA0", VA = "0x1188DA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003E3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0968", Offset = "0xAC0968")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000234")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B81")]
			[Address(RVA = "0x1189324", Offset = "0x1189324", VA = "0x1189324", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000235")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B83")]
			[Address(RVA = "0x118938C", Offset = "0x118938C", VA = "0x118938C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0x11882D0", Offset = "0x11882D0", VA = "0x11882D0")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0x1189244", Offset = "0x1189244", VA = "0x1189244", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0x1189248", Offset = "0x1189248", VA = "0x1189248", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0x118932C", Offset = "0x118932C", VA = "0x118932C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0978", Offset = "0xAC0978")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000236")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B87")]
			[Address(RVA = "0x1188F08", Offset = "0x1188F08", VA = "0x1188F08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000237")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B89")]
			[Address(RVA = "0x1188F70", Offset = "0x1188F70", VA = "0x1188F70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0x11884C0", Offset = "0x11884C0", VA = "0x11884C0")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0x1188E08", Offset = "0x1188E08", VA = "0x1188E08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0x1188E0C", Offset = "0x1188E0C", VA = "0x1188E0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0x1188F10", Offset = "0x1188F10", VA = "0x1188F10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC1984", Offset = "0xAC1984")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC19BC", Offset = "0xAC19BC")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC19F4", Offset = "0xAC19F4")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC1A2C", Offset = "0xAC1A2C")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC1A64", Offset = "0xAC1A64")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC1A9C", Offset = "0xAC1A9C")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC1AD4", Offset = "0xAC1AD4")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC1B0C", Offset = "0xAC1B0C")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1B44", Offset = "0xAC1B44")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC1B54", Offset = "0xAC1B54")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC1B8C", Offset = "0xAC1B8C")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1BD4", Offset = "0xAC1BD4")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC1BE4", Offset = "0xAC1BE4")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC1C1C", Offset = "0xAC1C1C")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC1C54", Offset = "0xAC1C54")]
	public float AimCollisionRadius;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC1C8C", Offset = "0xAC1C8C")]
	public float AimCollisionHeight;

	[Token(Token = "0x1700000C")]
	public States CurrentState
	{
		[Token(Token = "0x600019E")]
		[Address(RVA = "0x1186B18", Offset = "0x1186B18", VA = "0x1186B18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC8F78", Offset = "0xAC8F78")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x600019F")]
		[Address(RVA = "0x1186B20", Offset = "0x1186B20", VA = "0x1186B20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC8F88", Offset = "0xAC8F88")]
		private set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x60001A3")]
		[Address(RVA = "0x1186D50", Offset = "0x1186D50", VA = "0x1186D50")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x1700000E")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x60001A4")]
		[Address(RVA = "0x1186D78", Offset = "0x1186D78", VA = "0x1186D78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC8FB8", Offset = "0xAC8FB8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001A5")]
		[Address(RVA = "0x1186D80", Offset = "0x1186D80", VA = "0x1186D80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC8FC8", Offset = "0xAC8FC8")]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x60001A0")]
		[Address(RVA = "0x1186B28", Offset = "0x1186B28", VA = "0x1186B28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC8F98", Offset = "0xAC8F98")]
		add
		{
		}
		[Token(Token = "0x60001A1")]
		[Address(RVA = "0x1186BCC", Offset = "0x1186BCC", VA = "0x1186BCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC8FA8", Offset = "0xAC8FA8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x60001AF")]
		[Address(RVA = "0x11874D4", Offset = "0x11874D4", VA = "0x11874D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC9010", Offset = "0xAC9010")]
		add
		{
		}
		[Token(Token = "0x60001B0")]
		[Address(RVA = "0x1187578", Offset = "0x1187578", VA = "0x1187578")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC9020", Offset = "0xAC9020")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x60001B2")]
		[Address(RVA = "0x1187648", Offset = "0x1187648", VA = "0x1187648")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC9094", Offset = "0xAC9094")]
		add
		{
		}
		[Token(Token = "0x60001B3")]
		[Address(RVA = "0x11876EC", Offset = "0x11876EC", VA = "0x11876EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC90A4", Offset = "0xAC90A4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x60001B4")]
		[Address(RVA = "0x1187790", Offset = "0x1187790", VA = "0x1187790")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC90B4", Offset = "0xAC90B4")]
		add
		{
		}
		[Token(Token = "0x60001B5")]
		[Address(RVA = "0x1187834", Offset = "0x1187834", VA = "0x1187834")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC90C4", Offset = "0xAC90C4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x60001B7")]
		[Address(RVA = "0x118794C", Offset = "0x118794C", VA = "0x118794C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC90D4", Offset = "0xAC90D4")]
		add
		{
		}
		[Token(Token = "0x60001B8")]
		[Address(RVA = "0x11879F0", Offset = "0x11879F0", VA = "0x11879F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC90E4", Offset = "0xAC90E4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x60001BA")]
		[Address(RVA = "0x1187B3C", Offset = "0x1187B3C", VA = "0x1187B3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC9158", Offset = "0xAC9158")]
		add
		{
		}
		[Token(Token = "0x60001BB")]
		[Address(RVA = "0x1187BE0", Offset = "0x1187BE0", VA = "0x1187BE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC9168", Offset = "0xAC9168")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x60001BD")]
		[Address(RVA = "0x1187D2C", Offset = "0x1187D2C", VA = "0x1187D2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC91DC", Offset = "0xAC91DC")]
		add
		{
		}
		[Token(Token = "0x60001BE")]
		[Address(RVA = "0x1187DD0", Offset = "0x1187DD0", VA = "0x1187DD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC91EC", Offset = "0xAC91EC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x60001C0")]
		[Address(RVA = "0x1187F1C", Offset = "0x1187F1C", VA = "0x1187F1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC9260", Offset = "0xAC9260")]
		add
		{
		}
		[Token(Token = "0x60001C1")]
		[Address(RVA = "0x1187FC0", Offset = "0x1187FC0", VA = "0x1187FC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC9270", Offset = "0xAC9270")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x60001C3")]
		[Address(RVA = "0x118810C", Offset = "0x118810C", VA = "0x118810C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC92E4", Offset = "0xAC92E4")]
		add
		{
		}
		[Token(Token = "0x60001C4")]
		[Address(RVA = "0x11881B0", Offset = "0x11881B0", VA = "0x11881B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC92F4", Offset = "0xAC92F4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x60001C6")]
		[Address(RVA = "0x11882FC", Offset = "0x11882FC", VA = "0x11882FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC9368", Offset = "0xAC9368")]
		add
		{
		}
		[Token(Token = "0x60001C7")]
		[Address(RVA = "0x11883A0", Offset = "0x11883A0", VA = "0x11883A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC9378", Offset = "0xAC9378")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x60001C9")]
		[Address(RVA = "0x11884EC", Offset = "0x11884EC", VA = "0x11884EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC93EC", Offset = "0xAC93EC")]
		add
		{
		}
		[Token(Token = "0x60001CA")]
		[Address(RVA = "0x1188590", Offset = "0x1188590", VA = "0x1188590")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC93FC", Offset = "0xAC93FC")]
		remove
		{
		}
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x11867E8", Offset = "0x11867E8", VA = "0x11867E8")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x118680C", Offset = "0x118680C", VA = "0x118680C")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x1186C70", Offset = "0x1186C70", VA = "0x1186C70")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x1186D88", Offset = "0x1186D88", VA = "0x1186D88")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x11870E0", Offset = "0x11870E0", VA = "0x11870E0")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xAC8FD8", Offset = "0xAC8FD8")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x1187198", Offset = "0x1187198", VA = "0x1187198")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x1187290", Offset = "0x1187290", VA = "0x1187290")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x11872AC", Offset = "0x11872AC", VA = "0x11872AC")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x1187374", Offset = "0x1187374", VA = "0x1187374")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x11873B8", Offset = "0x11873B8", VA = "0x11873B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x1187420", Offset = "0x1187420", VA = "0x1187420", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x11874CC", Offset = "0x11874CC", VA = "0x11874CC", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x1187450", Offset = "0x1187450", VA = "0x1187450")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC9030", Offset = "0xAC9030")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x11878D8", Offset = "0x11878D8", VA = "0x11878D8")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x1187A94", Offset = "0x1187A94", VA = "0x1187A94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC90F4", Offset = "0xAC90F4")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x1187C84", Offset = "0x1187C84", VA = "0x1187C84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC9178", Offset = "0xAC9178")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x1187E74", Offset = "0x1187E74", VA = "0x1187E74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC91FC", Offset = "0xAC91FC")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x1188064", Offset = "0x1188064", VA = "0x1188064")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC9280", Offset = "0xAC9280")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x1188254", Offset = "0x1188254", VA = "0x1188254")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC9304", Offset = "0xAC9304")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x1188444", Offset = "0x1188444", VA = "0x1188444")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC9388", Offset = "0xAC9388")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x1188634", Offset = "0x1188634", VA = "0x1188634")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x1188778", Offset = "0x1188778", VA = "0x1188778")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x11887AC", Offset = "0x11887AC", VA = "0x11887AC")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x11888CC", Offset = "0x11888CC", VA = "0x11888CC")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x11889F8", Offset = "0x11889F8", VA = "0x11889F8")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x200005F")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000C")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x60001D0")]
		[Address(RVA = "0xFB7CF4", Offset = "0xFB7CF4", VA = "0xFB7CF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC940C", Offset = "0xAC940C")]
		add
		{
		}
		[Token(Token = "0x60001D1")]
		[Address(RVA = "0xFB7D98", Offset = "0xFB7D98", VA = "0xFB7D98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC941C", Offset = "0xAC941C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x60001D2")]
		[Address(RVA = "0xFB7E3C", Offset = "0xFB7E3C", VA = "0xFB7E3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC942C", Offset = "0xAC942C")]
		add
		{
		}
		[Token(Token = "0x60001D3")]
		[Address(RVA = "0xFB7EE0", Offset = "0xFB7EE0", VA = "0xFB7EE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC943C", Offset = "0xAC943C")]
		remove
		{
		}
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xFB7F84", Offset = "0xFB7F84", VA = "0xFB7F84")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xFB805C", Offset = "0xFB805C", VA = "0xFB805C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xFB8060", Offset = "0xFB8060", VA = "0xFB8060")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xFB80D4", Offset = "0xFB80D4", VA = "0xFB80D4")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xFB8244", Offset = "0xFB8244", VA = "0xFB8244")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xFB8528", Offset = "0xFB8528", VA = "0xFB8528")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xFB8774", Offset = "0xFB8774", VA = "0xFB8774")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x2000060")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xFBEDDC", Offset = "0xFBEDDC", VA = "0xFBEDDC", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xFBEE80", Offset = "0xFBEE80", VA = "0xFBEE80", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60001DD")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xFBEF74", Offset = "0xFBEF74", VA = "0xFBEF74")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x2000061")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC1D84", Offset = "0xAC1D84")]
	public float Range;

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xFBEF84", Offset = "0xFBEF84", VA = "0xFBEF84", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xFBF0E0", Offset = "0xFBF0E0", VA = "0xFBF0E0")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x2000062")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC1DBC", Offset = "0xAC1DBC")]
	public float Range;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC1DF4", Offset = "0xAC1DF4")]
	public float MinimumElevation;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC1E2C", Offset = "0xAC1E2C")]
	public float Gravity;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC1E64", Offset = "0xAC1E64")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC1E64", Offset = "0xAC1E64")]
	public float AimVelocity;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC1EC0", Offset = "0xAC1EC0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC1EC0", Offset = "0xAC1EC0")]
	public float AimStep;

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xFBF0F0", Offset = "0xFBF0F0", VA = "0xFBF0F0", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xFBF33C", Offset = "0xFBF33C", VA = "0xFBF33C")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x2000063")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC1F18", Offset = "0xAC1F18")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xFBF350", Offset = "0xFBF350", VA = "0xFBF350")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xFBF454", Offset = "0xFBF454", VA = "0xFBF454")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xFBF484", Offset = "0xFBF484", VA = "0xFBF484")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xFBF4B4", Offset = "0xFBF4B4", VA = "0xFBF4B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xFBF55C", Offset = "0xFBF55C", VA = "0xFBF55C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0xFBF5C8", Offset = "0xFBF5C8", VA = "0xFBF5C8", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xFBF630", Offset = "0xFBF630", VA = "0xFBF630")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x2000064")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1F50", Offset = "0xAC1F50")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC1F60", Offset = "0xAC1F60")]
	public Transform PositionIndicator;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC1F98", Offset = "0xAC1F98")]
	public Transform OrientationIndicator;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC1FD0", Offset = "0xAC1FD0")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x1700000F")]
	public bool IsValidDestination
	{
		[Token(Token = "0x60001EA")]
		[Address(RVA = "0xFBF74C", Offset = "0xFBF74C", VA = "0xFBF74C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC944C", Offset = "0xAC944C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001EB")]
		[Address(RVA = "0xFBF754", Offset = "0xFBF754", VA = "0xFBF754")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC945C", Offset = "0xAC945C")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x60001F0")]
		[Address(RVA = "0xFBF90C", Offset = "0xFBF90C", VA = "0xFBF90C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC946C", Offset = "0xAC946C")]
		add
		{
		}
		[Token(Token = "0x60001F1")]
		[Address(RVA = "0xFBF9B0", Offset = "0xFBF9B0", VA = "0xFBF9B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC947C", Offset = "0xAC947C")]
		remove
		{
		}
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xFBF760", Offset = "0xFBF760", VA = "0xFBF760")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xFBF7F0", Offset = "0xFBF7F0", VA = "0xFBF7F0")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xFBF8C8", Offset = "0xFBF8C8", VA = "0xFBF8C8")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xFBF908", Offset = "0xFBF908", VA = "0xFBF908")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xFBFA54", Offset = "0xFBFA54", VA = "0xFBFA54")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xFBFABC", Offset = "0xFBFABC", VA = "0xFBFABC")]
	public void Recycle()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xFBFADC", Offset = "0xFBFADC", VA = "0xFBFADC", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x2000065")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x20003E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0988", Offset = "0xAC0988")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000238")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B8D")]
			[Address(RVA = "0xFC01F4", Offset = "0xFC01F4", VA = "0xFC01F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000239")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B8F")]
			[Address(RVA = "0xFC025C", Offset = "0xFC025C", VA = "0xFC025C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0xFBFF1C", Offset = "0xFBFF1C", VA = "0xFBFF1C")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0xFC0158", Offset = "0xFC0158", VA = "0xFC0158", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0xFC015C", Offset = "0xFC015C", VA = "0xFC015C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0xFC01FC", Offset = "0xFC01FC", VA = "0xFC01FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003E6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0998", Offset = "0xAC0998")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700023A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B93")]
			[Address(RVA = "0xFC00E8", Offset = "0xFC00E8", VA = "0xFC00E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B95")]
			[Address(RVA = "0xFC0150", Offset = "0xFC0150", VA = "0xFC0150", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B90")]
		[Address(RVA = "0xFBFFC4", Offset = "0xFBFFC4", VA = "0xFBFFC4")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0xFC0048", Offset = "0xFC0048", VA = "0xFC0048", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B92")]
		[Address(RVA = "0xFC004C", Offset = "0xFC004C", VA = "0xFC004C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0xFC00F0", Offset = "0xFC00F0", VA = "0xFC00F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xFBFCBC", Offset = "0xFBFCBC", VA = "0xFBFCBC")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xFBFD7C", Offset = "0xFBFD7C", VA = "0xFBFD7C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xFBFDDC", Offset = "0xFBFDDC", VA = "0xFBFDDC", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xFBFEA0", Offset = "0xFBFEA0", VA = "0xFBFEA0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC948C", Offset = "0xAC948C")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xFBFF48", Offset = "0xFBFF48", VA = "0xFBFF48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC94F0", Offset = "0xAC94F0")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001FA")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x60001FB")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xFBFFF0", Offset = "0xFBFFF0", VA = "0xFBFFF0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC9554", Offset = "0xAC9554")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xFC001C", Offset = "0xFC001C", VA = "0xFC001C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC9564", Offset = "0xAC9564")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x2000066")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC2018", Offset = "0xAC2018")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC2028", Offset = "0xAC2028")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC2060", Offset = "0xAC2060")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC2098", Offset = "0xAC2098")]
	public bool FastTeleport;

	[Token(Token = "0x17000010")]
	public Transform Pointer
	{
		[Token(Token = "0x60001FE")]
		[Address(RVA = "0xFC0264", Offset = "0xFC0264", VA = "0xFC0264")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC9574", Offset = "0xAC9574")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001FF")]
		[Address(RVA = "0xFC026C", Offset = "0xFC026C", VA = "0xFC026C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC9584", Offset = "0xAC9584")]
		private set
		{
		}
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xFC0274", Offset = "0xFC0274", VA = "0xFC0274", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xFC03D0", Offset = "0xFC03D0", VA = "0xFC03D0", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xFC0488", Offset = "0xFC0488", VA = "0xFC0488")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x2000067")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x20003E7")]
	public enum InputModes
	{
		[Token(Token = "0x4001B24")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4001B25")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4001B26")]
		ThumbstickTeleport,
		[Token(Token = "0x4001B27")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x20003E8")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4001B29")]
		A,
		[Token(Token = "0x4001B2A")]
		B,
		[Token(Token = "0x4001B2B")]
		LeftTrigger,
		[Token(Token = "0x4001B2C")]
		LeftThumbstick,
		[Token(Token = "0x4001B2D")]
		RightTrigger,
		[Token(Token = "0x4001B2E")]
		RightThumbstick,
		[Token(Token = "0x4001B2F")]
		X,
		[Token(Token = "0x4001B30")]
		Y
	}

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC20D0", Offset = "0xAC20D0")]
	public InputModes InputMode;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC2108", Offset = "0xAC2108")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC2140", Offset = "0xAC2140")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC2178", Offset = "0xAC2178")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000203")]
	[Address(RVA = "0xFC048C", Offset = "0xFC048C", VA = "0xFC048C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xFC0490", Offset = "0xFC0490", VA = "0xFC0490", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xFC08D8", Offset = "0xFC08D8", VA = "0xFC08D8", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xFC0998", Offset = "0xFC0998", VA = "0xFC0998")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x2000068")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x20003E9")]
	public enum OrientationModes
	{
		[Token(Token = "0x4001B32")]
		HeadRelative,
		[Token(Token = "0x4001B33")]
		ForwardFacing
	}

	[Token(Token = "0x20003EA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC09A8", Offset = "0xAC09A8")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x1700023C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B99")]
			[Address(RVA = "0xFC0E6C", Offset = "0xFC0E6C", VA = "0xFC0E6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B9B")]
			[Address(RVA = "0xFC0ED4", Offset = "0xFC0ED4", VA = "0xFC0ED4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0xFC0C3C", Offset = "0xFC0C3C", VA = "0xFC0C3C")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0xFC0DB8", Offset = "0xFC0DB8", VA = "0xFC0DB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0xFC0DBC", Offset = "0xFC0DBC", VA = "0xFC0DBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0xFC0E74", Offset = "0xFC0E74", VA = "0xFC0E74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x6000207")]
	[Address(RVA = "0xFC0A5C", Offset = "0xFC0A5C", VA = "0xFC0A5C")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xFC0B24", Offset = "0xFC0B24", VA = "0xFC0B24")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xFC0B2C", Offset = "0xFC0B2C", VA = "0xFC0B2C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xFC0B78", Offset = "0xFC0B78", VA = "0xFC0B78", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0xFC0BC0", Offset = "0xFC0BC0", VA = "0xFC0BC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC9594", Offset = "0xAC9594")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600020C")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x600020D")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xFC0C68", Offset = "0xFC0C68", VA = "0xFC0C68")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xFC0D8C", Offset = "0xFC0D8C", VA = "0xFC0D8C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC95F8", Offset = "0xAC95F8")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000069")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x6000210")]
	[Address(RVA = "0xFC0EDC", Offset = "0xFC0EDC", VA = "0xFC0EDC", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xFC0EE0", Offset = "0xFC0EE0", VA = "0xFC0EE0", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xFC0F5C", Offset = "0xFC0F5C", VA = "0xFC0F5C")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x200006A")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC21B0", Offset = "0xAC21B0")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC21E8", Offset = "0xAC21E8")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC2220", Offset = "0xAC2220")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC2258", Offset = "0xAC2258")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xFC0F60", Offset = "0xFC0F60", VA = "0xFC0F60", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xFC0FD0", Offset = "0xFC0FD0", VA = "0xFC0FD0", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xFC1448", Offset = "0xFC1448", VA = "0xFC1448")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x200006B")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC2290", Offset = "0xAC2290")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC22C8", Offset = "0xAC22C8")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC2300", Offset = "0xAC2300")]
	public float RotateStickThreshold;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xFC144C", Offset = "0xFC144C", VA = "0xFC144C", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xFC1490", Offset = "0xFC1490", VA = "0xFC1490", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xFC1900", Offset = "0xFC1900", VA = "0xFC1900")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x200006C")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xFC1910", Offset = "0xFC1910", VA = "0xFC1910")]
	private void Start()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xFC1914", Offset = "0xFC1914", VA = "0xFC1914")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xFC191C", Offset = "0xFC191C", VA = "0xFC191C")]
	private void Update()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xFC1A04", Offset = "0xFC1A04", VA = "0xFC1A04")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xFC1A2C", Offset = "0xFC1A2C", VA = "0xFC1A2C")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x200006D")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC2338", Offset = "0xAC2338")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x17000011")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x600021E")]
		[Address(RVA = "0xFC1A44", Offset = "0xFC1A44", VA = "0xFC1A44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC9608", Offset = "0xAC9608")]
		get
		{
			return null;
		}
		[Token(Token = "0x600021F")]
		[Address(RVA = "0xFC1A4C", Offset = "0xFC1A4C", VA = "0xFC1A4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC9618", Offset = "0xAC9618")]
		private set
		{
		}
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xFBEE10", Offset = "0xFBEE10", VA = "0xFBEE10", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xFBEF40", Offset = "0xFBEF40", VA = "0xFBEF40", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xFC1A54", Offset = "0xFC1A54", VA = "0xFC1A54")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xAC9628", Offset = "0xAC9628")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xFBF5BC", Offset = "0xFBF5BC", VA = "0xFBF5BC", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xFBF628", Offset = "0xFBF628", VA = "0xFBF628", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0xFBEF7C", Offset = "0xFBEF7C", VA = "0xFBEF7C")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x200006E")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x20003EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC09B8", Offset = "0xAC09B8")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x1700023E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B9F")]
			[Address(RVA = "0xFC20E0", Offset = "0xFC20E0", VA = "0xFC20E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BA1")]
			[Address(RVA = "0xFC2148", Offset = "0xFC2148", VA = "0xFC2148", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0xFC1CD0", Offset = "0xFC1CD0", VA = "0xFC1CD0")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0xFC1E68", Offset = "0xFC1E68", VA = "0xFC1E68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0xFC1E6C", Offset = "0xFC1E6C", VA = "0xFC1E6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0xFC20E8", Offset = "0xFC20E8", VA = "0xFC20E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC2348", Offset = "0xAC2348")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x4000317")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xFC1B1C", Offset = "0xFC1B1C", VA = "0xFC1B1C")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xFC1C00", Offset = "0xFC1C00", VA = "0xFC1C00", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xFC1C2C", Offset = "0xFC1C2C", VA = "0xFC1C2C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xFC1C54", Offset = "0xFC1C54", VA = "0xFC1C54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC9660", Offset = "0xAC9660")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xFC1CFC", Offset = "0xFC1CFC", VA = "0xFC1CFC", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x600022B")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xFC1D18", Offset = "0xFC1D18", VA = "0xFC1D18", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0xFC1E3C", Offset = "0xFC1E3C", VA = "0xFC1E3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC96C4", Offset = "0xAC96C4")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x200006F")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xFC2150", Offset = "0xFC2150", VA = "0xFC2150")]
	private void Awake()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xFC21B8", Offset = "0xFC21B8", VA = "0xFC21B8", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xFC233C", Offset = "0xFC233C", VA = "0xFC233C", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xFC242C", Offset = "0xFC242C", VA = "0xFC242C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xAC96D4", Offset = "0xAC96D4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xFC2430", Offset = "0xFC2430", VA = "0xFC2430")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x2000070")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC2380", Offset = "0xAC2380")]
	public float LOSOffset;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC23B8", Offset = "0xAC23B8")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xFC243C", Offset = "0xFC243C", VA = "0xFC243C", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xFC266C", Offset = "0xFC266C", VA = "0xFC266C")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x2000071")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x6000235")]
	[Address(RVA = "0xFC2678", Offset = "0xFC2678", VA = "0xFC2678", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xFC27FC", Offset = "0xFC27FC", VA = "0xFC27FC")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x2000072")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x6000237")]
	[Address(RVA = "0xFC2800", Offset = "0xFC2800", VA = "0xFC2800", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xFC2898", Offset = "0xFC2898", VA = "0xFC2898", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000239")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xFC292C", Offset = "0xFC292C", VA = "0xFC292C")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x2000073")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x20003EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC09C8", Offset = "0xAC09C8")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4001B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000240")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BA5")]
			[Address(RVA = "0xFC2CB8", Offset = "0xFC2CB8", VA = "0xFC2CB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000241")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BA7")]
			[Address(RVA = "0xFC2D20", Offset = "0xFC2D20", VA = "0xFC2D20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0xFC29DC", Offset = "0xFC29DC", VA = "0xFC29DC")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0xFC2BAC", Offset = "0xFC2BAC", VA = "0xFC2BAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0xFC2BB0", Offset = "0xFC2BB0", VA = "0xFC2BB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0xFC2CC0", Offset = "0xFC2CC0", VA = "0xFC2CC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC23F0", Offset = "0xAC23F0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC23F0", Offset = "0xAC23F0")]
	public float TransitionDuration;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC2448", Offset = "0xAC2448")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC2448", Offset = "0xAC2448")]
	public float TeleportDelay;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC249C", Offset = "0xAC249C")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xFC2934", Offset = "0xFC2934", VA = "0xFC2934", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xFC2960", Offset = "0xFC2960", VA = "0xFC2960")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC970C", Offset = "0xAC970C")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xFC2A08", Offset = "0xFC2A08", VA = "0xFC2A08")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x2000074")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x600023E")]
	[Address(RVA = "0xFC2D28", Offset = "0xFC2D28", VA = "0xFC2D28", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0xFC2D44", Offset = "0xFC2D44", VA = "0xFC2D44")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x2000075")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x20003ED")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC09D8", Offset = "0xAC09D8")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000242")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BAB")]
			[Address(RVA = "0x161B028", Offset = "0x161B028", VA = "0x161B028", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000243")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BAD")]
			[Address(RVA = "0x161B090", Offset = "0x161B090", VA = "0x161B090", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0x161AEBC", Offset = "0x161AEBC", VA = "0x161AEBC")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0x161AEE8", Offset = "0x161AEE8", VA = "0x161AEE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0x161AEEC", Offset = "0x161AEEC", VA = "0x161AEEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0x161B030", Offset = "0x161B030", VA = "0x161B030", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC24D4", Offset = "0xAC24D4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC24D4", Offset = "0xAC24D4")]
	public float TransitionDuration;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6000240")]
	[Address(RVA = "0xFC2D4C", Offset = "0xFC2D4C", VA = "0xFC2D4C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0xFC2D78", Offset = "0xFC2D78", VA = "0xFC2D78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC9770", Offset = "0xAC9770")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0xFC2DF4", Offset = "0xFC2DF4", VA = "0xFC2DF4")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x2000076")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x20003EE")]
	public enum PlabackState
	{
		[Token(Token = "0x4001B46")]
		Idle = 1,
		[Token(Token = "0x4001B47")]
		Preparing,
		[Token(Token = "0x4001B48")]
		Buffering,
		[Token(Token = "0x4001B49")]
		Ready,
		[Token(Token = "0x4001B4A")]
		Ended
	}

	[Token(Token = "0x20003EF")]
	public enum StereoMode
	{
		[Token(Token = "0x4001B4C")]
		Unknown = -1,
		[Token(Token = "0x4001B4D")]
		Mono,
		[Token(Token = "0x4001B4E")]
		TopBottom,
		[Token(Token = "0x4001B4F")]
		LeftRight,
		[Token(Token = "0x4001B50")]
		Mesh
	}

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getStereoModeMethodId;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr getWidthMethodId;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr getHeightMethodId;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x17000012")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x6000243")]
		[Address(RVA = "0xF02484", Offset = "0xF02484", VA = "0xF02484")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000013")]
	private static IntPtr Activity
	{
		[Token(Token = "0x6000244")]
		[Address(RVA = "0xF02740", Offset = "0xF02740", VA = "0xF02740")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000014")]
	public static bool IsAvailable
	{
		[Token(Token = "0x6000245")]
		[Address(RVA = "0xEFF5C0", Offset = "0xEFF5C0", VA = "0xEFF5C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000015")]
	public static bool IsPlaying
	{
		[Token(Token = "0x6000246")]
		[Address(RVA = "0xF00C78", Offset = "0xF00C78", VA = "0xF00C78")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000016")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x6000247")]
		[Address(RVA = "0xF02984", Offset = "0xF02984", VA = "0xF02984")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x17000017")]
	public static long Duration
	{
		[Token(Token = "0x6000248")]
		[Address(RVA = "0xF00E5C", Offset = "0xF00E5C", VA = "0xF00E5C")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000018")]
	public static StereoMode VideoStereoMode
	{
		[Token(Token = "0x6000249")]
		[Address(RVA = "0xEFFBA8", Offset = "0xEFFBA8", VA = "0xEFFBA8")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x17000019")]
	public static int VideoWidth
	{
		[Token(Token = "0x600024A")]
		[Address(RVA = "0xEFF9C0", Offset = "0xEFF9C0", VA = "0xEFF9C0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700001A")]
	public static int VideoHeight
	{
		[Token(Token = "0x600024B")]
		[Address(RVA = "0xEFFAB4", Offset = "0xEFFAB4", VA = "0xEFFAB4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700001B")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x600024C")]
		[Address(RVA = "0xF00D68", Offset = "0xF00D68", VA = "0xF00D68")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600024D")]
		[Address(RVA = "0xF003D0", Offset = "0xF003D0", VA = "0xF003D0")]
		set
		{
		}
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xF014C4", Offset = "0xF014C4", VA = "0xF014C4")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0xF01208", Offset = "0xF01208", VA = "0xF01208")]
	public static void Stop()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xF00060", Offset = "0xF00060", VA = "0xF00060")]
	public static void Play()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xF001E4", Offset = "0xF001E4", VA = "0xF001E4")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0xF01028", Offset = "0xF01028", VA = "0xF01028")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xF016C4", Offset = "0xF016C4", VA = "0xF016C4")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xF00AB4", Offset = "0xF00AB4", VA = "0xF00AB4")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x2000077")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x1400000F")]
	public event Action onButtonDown
	{
		[Token(Token = "0x6000256")]
		[Address(RVA = "0x106ACCC", Offset = "0x106ACCC", VA = "0x106ACCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC97D4", Offset = "0xAC97D4")]
		add
		{
		}
		[Token(Token = "0x6000257")]
		[Address(RVA = "0x106AD70", Offset = "0x106AD70", VA = "0x106AD70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC97E4", Offset = "0xAC97E4")]
		remove
		{
		}
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x106AE14", Offset = "0x106AE14", VA = "0x106AE14", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x106AE28", Offset = "0x106AE28", VA = "0x106AE28")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x2000078")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x20003F0")]
	public enum ButtonType
	{
		[Token(Token = "0x4001B52")]
		Play,
		[Token(Token = "0x4001B53")]
		Pause,
		[Token(Token = "0x4001B54")]
		FastForward,
		[Token(Token = "0x4001B55")]
		Rewind,
		[Token(Token = "0x4001B56")]
		SkipForward,
		[Token(Token = "0x4001B57")]
		SkipBack,
		[Token(Token = "0x4001B58")]
		Stop
	}

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x1700001C")]
	public ButtonType buttonType
	{
		[Token(Token = "0x600025A")]
		[Address(RVA = "0x1197838", Offset = "0x1197838", VA = "0x1197838")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x600025B")]
		[Address(RVA = "0x1197840", Offset = "0x1197840", VA = "0x1197840")]
		set
		{
		}
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x1197864", Offset = "0x1197864", VA = "0x1197864", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x1198D30", Offset = "0x1198D30", VA = "0x1198D30")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x2000079")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x20003F1")]
	public enum VideoShape
	{
		[Token(Token = "0x4001B5A")]
		_360,
		[Token(Token = "0x4001B5B")]
		_180,
		[Token(Token = "0x4001B5C")]
		Quad
	}

	[Token(Token = "0x20003F2")]
	public enum VideoStereo
	{
		[Token(Token = "0x4001B5E")]
		Mono,
		[Token(Token = "0x4001B5F")]
		TopBottom,
		[Token(Token = "0x4001B60")]
		LeftRight,
		[Token(Token = "0x4001B61")]
		BottomTop
	}

	[Token(Token = "0x20003F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC09E8", Offset = "0xAC09E8")]
	private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x17000244")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BB1")]
			[Address(RVA = "0xF019A0", Offset = "0xF019A0", VA = "0xF019A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000245")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BB3")]
			[Address(RVA = "0xF01A08", Offset = "0xF01A08", VA = "0xF01A08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0xEFFD18", Offset = "0xEFFD18", VA = "0xEFFD18")]
		[DebuggerHidden]
		public <Start>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0xF01810", Offset = "0xF01810", VA = "0xF01810", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0xF01814", Offset = "0xF01814", VA = "0xF01814", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0xF019A8", Offset = "0xF019A8", VA = "0xF019A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC09F8", Offset = "0xAC09F8")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0xEFFFC4", Offset = "0xEFFFC4", VA = "0xEFFFC4")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0xF013F0", Offset = "0xF013F0", VA = "0xF013F0")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC255C", Offset = "0xAC255C")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC256C", Offset = "0xAC256C")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC257C", Offset = "0xAC257C")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool AutoDetectStereoLayout;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool DisplayMono;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x1700001D")]
	public bool IsPlaying
	{
		[Token(Token = "0x600025E")]
		[Address(RVA = "0xEFF340", Offset = "0xEFF340", VA = "0xEFF340")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC97F4", Offset = "0xAC97F4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600025F")]
		[Address(RVA = "0xEFF348", Offset = "0xEFF348", VA = "0xEFF348")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC9804", Offset = "0xAC9804")]
		private set
		{
		}
	}

	[Token(Token = "0x1700001E")]
	public long Duration
	{
		[Token(Token = "0x6000260")]
		[Address(RVA = "0xEFF354", Offset = "0xEFF354", VA = "0xEFF354")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC9814", Offset = "0xAC9814")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000261")]
		[Address(RVA = "0xEFF35C", Offset = "0xEFF35C", VA = "0xEFF35C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC9824", Offset = "0xAC9824")]
		private set
		{
		}
	}

	[Token(Token = "0x1700001F")]
	public long PlaybackPosition
	{
		[Token(Token = "0x6000262")]
		[Address(RVA = "0xEFF364", Offset = "0xEFF364", VA = "0xEFF364")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC9834", Offset = "0xAC9834")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000263")]
		[Address(RVA = "0xEFF36C", Offset = "0xEFF36C", VA = "0xEFF36C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC9844", Offset = "0xAC9844")]
		private set
		{
		}
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xEFF374", Offset = "0xEFF374", VA = "0xEFF374")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xEFF628", Offset = "0xEFF628", VA = "0xEFF628")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xEFF690", Offset = "0xEFF690", VA = "0xEFF690")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xEFFC9C", Offset = "0xEFFC9C", VA = "0xEFFC9C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC9854", Offset = "0xAC9854")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xEFFD44", Offset = "0xEFFD44", VA = "0xEFFD44")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xEFFFCC", Offset = "0xEFFFCC", VA = "0xEFFFCC")]
	public void Play()
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xF00154", Offset = "0xF00154", VA = "0xF00154")]
	public void Pause()
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0xF002D8", Offset = "0xF002D8", VA = "0xF002D8")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xF00518", Offset = "0xF00518", VA = "0xF00518")]
	private void Update()
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xF00F50", Offset = "0xF00F50", VA = "0xF00F50")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xF01178", Offset = "0xF01178", VA = "0xF01178")]
	public void Stop()
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xF012FC", Offset = "0xF012FC", VA = "0xF012FC")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xF013E0", Offset = "0xF013E0", VA = "0xF013E0")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x200007A")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x20003F5")]
	private enum PlaybackState
	{
		[Token(Token = "0x4001B69")]
		Playing,
		[Token(Token = "0x4001B6A")]
		Paused,
		[Token(Token = "0x4001B6B")]
		Rewinding,
		[Token(Token = "0x4001B6C")]
		FastForwarding
	}

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xF01A10", Offset = "0xF01A10", VA = "0xF01A10")]
	private void Start()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xF01CC4", Offset = "0xF01CC4", VA = "0xF01CC4")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xF01DF0", Offset = "0xF01DF0", VA = "0xF01DF0")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0xF01EFC", Offset = "0xF01EFC", VA = "0xF01EFC")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0xF01FDC", Offset = "0xF01FDC", VA = "0xF01FDC")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xF01ED0", Offset = "0xF01ED0", VA = "0xF01ED0")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0xF020BC", Offset = "0xF020BC", VA = "0xF020BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xF01BB8", Offset = "0xF01BB8", VA = "0xF01BB8")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xF02474", Offset = "0xF02474", VA = "0xF02474")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x200007B")]
public static class VectorUtil
{
	[Token(Token = "0x600027A")]
	[Address(RVA = "0x1EAC760", Offset = "0x1EAC760", VA = "0x1EAC760")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x200007C")]
public class AppDeeplinkUI : MonoBehaviour
{
	[Token(Token = "0x4000362")]
	private const ulong UNITY_COMPANION_APP_ID = 3535750239844224uL;

	[Token(Token = "0x4000363")]
	private const ulong UNREAL_COMPANION_APP_ID = 4055411724486843uL;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform deeplinkAppId;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform deeplinkMessage;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform uiLaunchType;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform uiLaunchSource;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform uiDeepLinkMessage;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool inMenu;

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xD66938", Offset = "0xD66938", VA = "0xD66938")]
	private void Start()
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0xD66C94", Offset = "0xD66C94", VA = "0xD66C94")]
	private void Update()
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0xD66EB4", Offset = "0xD66EB4", VA = "0xD66EB4")]
	private void LaunchUnrealDeeplinkSample()
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xD66FF0", Offset = "0xD66FF0", VA = "0xD66FF0")]
	private void LaunchSelf()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0xD67130", Offset = "0xD67130", VA = "0xD67130")]
	private void LaunchOtherApp()
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xD67294", Offset = "0xD67294", VA = "0xD67294")]
	public AppDeeplinkUI()
	{
	}
}
[Token(Token = "0x200007D")]
public class CustomDebugUI : MonoBehaviour
{
	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CustomDebugUI instance;

	[Token(Token = "0x400036C")]
	private const BindingFlags privateFlags = BindingFlags.Instance | BindingFlags.NonPublic;

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x107091C", Offset = "0x107091C", VA = "0x107091C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x1070974", Offset = "0x1070974", VA = "0x1070974")]
	private void Start()
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x1070978", Offset = "0x1070978", VA = "0x1070978")]
	private void Update()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x107097C", Offset = "0x107097C", VA = "0x107097C")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x1070B88", Offset = "0x1070B88", VA = "0x1070B88")]
	public void RemoveFromCanvas(RectTransform element, int targetCanvas = 0)
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x1070D68", Offset = "0x1070D68", VA = "0x1070D68")]
	public CustomDebugUI()
	{
	}
}
[Token(Token = "0x200007E")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x1073C6C", Offset = "0x1073C6C", VA = "0x1073C6C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x10740C4", Offset = "0x10740C4", VA = "0x10740C4")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x107417C", Offset = "0x107417C", VA = "0x107417C")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x10743D0", Offset = "0x10743D0", VA = "0x10743D0")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x10744B8", Offset = "0x10744B8", VA = "0x10744B8")]
	private void Update()
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x1074594", Offset = "0x1074594", VA = "0x1074594")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x1074600", Offset = "0x1074600", VA = "0x1074600")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x1074608", Offset = "0x1074608", VA = "0x1074608")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC98C8", Offset = "0xAC98C8")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x1074664", Offset = "0x1074664", VA = "0x1074664")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC98D8", Offset = "0xAC98D8")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x10746C0", Offset = "0x10746C0", VA = "0x10746C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC98E8", Offset = "0xAC98E8")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x107471C", Offset = "0x107471C", VA = "0x107471C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC98F8", Offset = "0xAC98F8")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x200007F")]
public class AnalyticsUI : MonoBehaviour
{
	[Token(Token = "0x6000292")]
	[Address(RVA = "0xD66930", Offset = "0xD66930", VA = "0xD66930")]
	public AnalyticsUI()
	{
	}
}
[Token(Token = "0x2000080")]
public class SampleUI : MonoBehaviour
{
	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform collectionButton;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform inputText;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform valueText;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool inMenu;

	[Token(Token = "0x6000293")]
	[Address(RVA = "0xFB6510", Offset = "0xFB6510", VA = "0xFB6510")]
	private void Start()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0xFB65AC", Offset = "0xFB65AC", VA = "0xFB65AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0xFB6690", Offset = "0xFB6690", VA = "0xFB6690")]
	private string GetText()
	{
		return null;
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xFB66F4", Offset = "0xFB66F4", VA = "0xFB66F4")]
	public SampleUI()
	{
	}
}
[Token(Token = "0x2000081")]
public class StartCrashlytics : MonoBehaviour
{
	[Token(Token = "0x6000297")]
	[Address(RVA = "0xFBA0EC", Offset = "0xFBA0EC", VA = "0xFBA0EC")]
	public StartCrashlytics()
	{
	}
}
[Token(Token = "0x2000082")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x20003F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0A08", Offset = "0xAC0A08")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x17000246")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BB9")]
			[Address(RVA = "0x14026AC", Offset = "0x14026AC", VA = "0x14026AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000247")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BBB")]
			[Address(RVA = "0x1402714", Offset = "0x1402714", VA = "0x1402714", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0x1402530", Offset = "0x1402530", VA = "0x1402530")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0x1402564", Offset = "0x1402564", VA = "0x1402564", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0x1402568", Offset = "0x1402568", VA = "0x1402568", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0x14026B4", Offset = "0x14026B4", VA = "0x14026B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x140221C", Offset = "0x140221C", VA = "0x140221C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x1402334", Offset = "0x1402334", VA = "0x1402334")]
	private void Update()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x14022B8", Offset = "0x14022B8", VA = "0x14022B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC9908", Offset = "0xAC9908")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x140255C", Offset = "0x140255C", VA = "0x140255C")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x2000083")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC25AC", Offset = "0xAC25AC")]
	public int SubdivisionsU;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC25C8", Offset = "0xAC25C8")]
	public int SubdivisionsV;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x106E4D0", Offset = "0x106E4D0", VA = "0x106E4D0")]
	private void Update()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x106EFC4", Offset = "0x106EFC4", VA = "0x106EFC4")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x2000084")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000020")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x600029E")]
		[Address(RVA = "0x1186130", Offset = "0x1186130", VA = "0x1186130")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x1186188", Offset = "0x1186188", VA = "0x1186188")]
	public void Start()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x11864D8", Offset = "0x11864D8", VA = "0x11864D8")]
	public void Update()
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x11865BC", Offset = "0x11865BC", VA = "0x11865BC")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xAC996C", Offset = "0xAC996C")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x60002A2")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60002A3")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x60002A4")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x60002A5")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x60002A6")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x60002A7")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x60002A8")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x60002A9")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x1186624", Offset = "0x1186624", VA = "0x1186624")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x1186660", Offset = "0x1186660", VA = "0x1186660")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x11866D4", Offset = "0x11866D4", VA = "0x11866D4")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x1186830", Offset = "0x1186830", VA = "0x1186830")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x1186904", Offset = "0x1186904", VA = "0x1186904")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x11863E4", Offset = "0x11863E4", VA = "0x11863E4")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x11869C4", Offset = "0x11869C4", VA = "0x11869C4")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x1186A2C", Offset = "0x1186A2C", VA = "0x1186A2C")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x1186B10", Offset = "0x1186B10", VA = "0x1186B10")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x2000085")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xABEF14", Offset = "0xABEF14")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x20003F7")]
	public enum DrawMode
	{
		[Token(Token = "0x4001B71")]
		Opaque,
		[Token(Token = "0x4001B72")]
		OpaqueWithClip,
		[Token(Token = "0x4001B73")]
		TransparentDefaultAlpha,
		[Token(Token = "0x4001B74")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x17000021")]
	public bool overlayEnabled
	{
		[Token(Token = "0x60002B9")]
		[Address(RVA = "0xF046E4", Offset = "0xF046E4", VA = "0xF046E4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002BA")]
		[Address(RVA = "0xF04778", Offset = "0xF04778", VA = "0xF04778")]
		set
		{
		}
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xF02FC0", Offset = "0xF02FC0", VA = "0xF02FC0")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xF03CE4", Offset = "0xF03CE4", VA = "0xF03CE4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xF03D68", Offset = "0xF03D68", VA = "0xF03D68")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xF03E5C", Offset = "0xF03E5C", VA = "0xF03E5C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xF03F50", Offset = "0xF03F50", VA = "0xF03F50", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xF04154", Offset = "0xF04154", VA = "0xF04154")]
	private void Update()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xF04848", Offset = "0xF04848", VA = "0xF04848")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x2000086")]
public class AugmentedObject : MonoBehaviour
{
	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform shadow;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool groundShadow;

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0xD67D24", Offset = "0xD67D24", VA = "0xD67D24")]
	private void Start()
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0xD67ED4", Offset = "0xD67ED4", VA = "0xD67ED4")]
	private void Update()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0xD6808C", Offset = "0xD6808C", VA = "0xD6808C")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0xD68094", Offset = "0xD68094", VA = "0xD68094")]
	public void Release()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0xD6807C", Offset = "0xD6807C", VA = "0xD6807C")]
	private void ToggleShadowType()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0xD6809C", Offset = "0xD6809C", VA = "0xD6809C")]
	public AugmentedObject()
	{
	}
}
[Token(Token = "0x2000087")]
public class BrushController : MonoBehaviour
{
	[Token(Token = "0x20003F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0A18", Offset = "0xAC0A18")]
	private sealed class <FadeCameraClearColor>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeTime;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color newColor;

		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__2;

		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <currentColor>5__3;

		[Token(Token = "0x17000248")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BBF")]
			[Address(RVA = "0x1068818", Offset = "0x1068818", VA = "0x1068818", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000249")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BC1")]
			[Address(RVA = "0x1068880", Offset = "0x1068880", VA = "0x1068880", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0x1068670", Offset = "0x1068670", VA = "0x1068670")]
		[DebuggerHidden]
		public <FadeCameraClearColor>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0x10686D0", Offset = "0x10686D0", VA = "0x10686D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0x10686D4", Offset = "0x10686D4", VA = "0x10686D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0x1068820", Offset = "0x1068820", VA = "0x1068820", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0A28", Offset = "0xAC0A28")]
	private sealed class <FadeSphere>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BrushController <>4__this;

		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool disableOnFinish;

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x1700024A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BC5")]
			[Address(RVA = "0x1068A38", Offset = "0x1068A38", VA = "0x1068A38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BC7")]
			[Address(RVA = "0x1068AA0", Offset = "0x1068AA0", VA = "0x1068AA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0x106869C", Offset = "0x106869C", VA = "0x106869C")]
		[DebuggerHidden]
		public <FadeSphere>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0x1068888", Offset = "0x1068888", VA = "0x1068888", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0x106888C", Offset = "0x106888C", VA = "0x106888C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0x1068A40", Offset = "0x1068A40", VA = "0x1068A40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PassthroughBrush brush;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer backgroundSphere;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator grabRoutine;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator releaseRoutine;

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x1068098", Offset = "0x1068098", VA = "0x1068098")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x106831C", Offset = "0x106831C", VA = "0x106831C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x1068378", Offset = "0x1068378", VA = "0x1068378")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x10684FC", Offset = "0x10684FC", VA = "0x10684FC")]
	public void Release()
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x10685D0", Offset = "0x10685D0", VA = "0x10685D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC99A4", Offset = "0xAC99A4")]
	private IEnumerator FadeCameraClearColor(Color newColor, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x1068434", Offset = "0x1068434", VA = "0x1068434")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC9A08", Offset = "0xAC9A08")]
	private IEnumerator FadeSphere(Color newColor, float fadeTime, bool disableOnFinish = false)
	{
		return null;
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x10686C8", Offset = "0x10686C8", VA = "0x10686C8")]
	public BrushController()
	{
	}
}
[Token(Token = "0x2000088")]
public class EnableUnpremultipliedAlpha : MonoBehaviour
{
	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x13FA000", Offset = "0x13FA000", VA = "0x13FA000")]
	private void Start()
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x13FA064", Offset = "0x13FA064", VA = "0x13FA064")]
	public EnableUnpremultipliedAlpha()
	{
	}
}
[Token(Token = "0x2000089")]
public class Flashlight : MonoBehaviour
{
	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject lightVolume;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light spotlight;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject bulbGlow;

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x13FAB04", Offset = "0x13FAB04", VA = "0x13FAB04")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x13FACE4", Offset = "0x13FACE4", VA = "0x13FACE4")]
	public void ToggleFlashlight()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x13FAD78", Offset = "0x13FAD78", VA = "0x13FAD78")]
	public void EnableFlashlight(bool doEnable)
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x13FADE0", Offset = "0x13FADE0", VA = "0x13FADE0")]
	public Flashlight()
	{
	}
}
[Token(Token = "0x200008A")]
public class FlashlightController : MonoBehaviour
{
	[Token(Token = "0x20003FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0A38", Offset = "0xAC0A38")]
	private sealed class <FadeLighting>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlashlightController <>4__this;

		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x4001B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float sceneLightIntensity;

		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <currentLight>5__4;

		[Token(Token = "0x1700024C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BCB")]
			[Address(RVA = "0x13FC140", Offset = "0x13FC140", VA = "0x13FC140", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BCD")]
			[Address(RVA = "0x13FC1A8", Offset = "0x13FC1A8", VA = "0x13FC1A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0x13FBE38", Offset = "0x13FBE38", VA = "0x13FBE38")]
		[DebuggerHidden]
		public <FadeLighting>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0x13FBF14", Offset = "0x13FBF14", VA = "0x13FBF14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0x13FBF18", Offset = "0x13FBF18", VA = "0x13FBF18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0x13FC148", Offset = "0x13FC148", VA = "0x13FC148", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light sceneLight;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform flashlightRoot;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 localPosition;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion localRotation;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh infoText;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GrabObject externalController;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OVRSkeleton[] skeletons;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVRHand[] hands;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int handIndex;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool pinching;

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x13FADE8", Offset = "0x13FADE8", VA = "0x13FADE8")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x13FB0B0", Offset = "0x13FB0B0", VA = "0x13FB0B0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x13FB3E0", Offset = "0x13FB3E0", VA = "0x13FB3E0")]
	private void FindHands()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x13FB728", Offset = "0x13FB728", VA = "0x13FB728")]
	private void AlignWithHand(OVRHand hand, OVRSkeleton skeleton)
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x13FBA98", Offset = "0x13FBA98", VA = "0x13FBA98")]
	private void AlignWithController(OVRInput.Controller controller)
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x13FBB90", Offset = "0x13FBB90", VA = "0x13FBB90")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x13FBD58", Offset = "0x13FBD58", VA = "0x13FBD58")]
	public void Release()
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x13FBCA0", Offset = "0x13FBCA0", VA = "0x13FBCA0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC9A6C", Offset = "0xAC9A6C")]
	private IEnumerator FadeLighting(Color newColor, float sceneLightIntensity, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x13FBE64", Offset = "0x13FBE64", VA = "0x13FBE64")]
	public FlashlightController()
	{
	}
}
[Token(Token = "0x200008B")]
public class GrabObject : MonoBehaviour
{
	[Token(Token = "0x20003FB")]
	public enum ManipulationType
	{
		[Token(Token = "0x4001B8D")]
		Default,
		[Token(Token = "0x4001B8E")]
		ForcedHand,
		[Token(Token = "0x4001B8F")]
		DollyHand,
		[Token(Token = "0x4001B90")]
		DollyAttached,
		[Token(Token = "0x4001B91")]
		HorizontalScaled,
		[Token(Token = "0x4001B92")]
		VerticalScaled,
		[Token(Token = "0x4001B93")]
		Menu
	}

	[Token(Token = "0x20003FC")]
	public delegate void GrabbedObject(OVRInput.Controller grabHand);

	[Token(Token = "0x20003FD")]
	public delegate void ReleasedObject();

	[Token(Token = "0x20003FE")]
	public delegate void SetCursorPosition(Vector3 cursorPosition);

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xAC2654", Offset = "0xAC2654")]
	public string ObjectName;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xAC2664", Offset = "0xAC2664")]
	public string ObjectInstructions;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ManipulationType objectManipulationType;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool showLaserWhileGrabbed;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Quaternion grabbedRotation;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GrabbedObject GrabbedObjectDelegate;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ReleasedObject ReleasedObjectDelegate;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SetCursorPosition CursorPositionDelegate;

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x13FC2D0", Offset = "0x13FC2D0", VA = "0x13FC2D0")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x13FC598", Offset = "0x13FC598", VA = "0x13FC598")]
	public void Release()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x13FC7B4", Offset = "0x13FC7B4", VA = "0x13FC7B4")]
	public void CursorPos(Vector3 cursorPos)
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x13FCA5C", Offset = "0x13FCA5C", VA = "0x13FCA5C")]
	public GrabObject()
	{
	}
}
[Token(Token = "0x200008C")]
public class HandMeshMask : MonoBehaviour
{
	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSkeleton referenceHand;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material maskMaterial;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC2684", Offset = "0xAC2684")]
	public int radialDivisions;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC26BC", Offset = "0xAC26BC")]
	public float borderSize;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC26F4", Offset = "0xAC26F4")]
	public float fingerTaper;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC272C", Offset = "0xAC272C")]
	public float fingerTipLength;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC2764", Offset = "0xAC2764")]
	public float webOffset;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float handScale;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject maskMeshObject;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Mesh maskMesh;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] handVertices;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2[] handUVs;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color32[] handColors;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int[] handTriangles;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int vertCounter;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int triCounter;

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x13FD940", Offset = "0x13FD940", VA = "0x13FD940")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x13FDB20", Offset = "0x13FDB20", VA = "0x13FDB20")]
	private void Update()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x13FDD48", Offset = "0x13FDD48", VA = "0x13FDD48")]
	private void CreateHandMesh()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x13FE3F0", Offset = "0x13FE3F0", VA = "0x13FE3F0")]
	private void AddKnuckleMesh(int knuckleVerts, float point1scale, float point2scale, Vector3 point1, Vector3 point2)
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x13FEB8C", Offset = "0x13FEB8C", VA = "0x13FEB8C")]
	private void AddPalmMesh(int knuckleVerts)
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x1401230", Offset = "0x1401230", VA = "0x1401230")]
	private void AddVertex(Vector3 position, Vector2 uv, Color color)
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x14012EC", Offset = "0x14012EC", VA = "0x14012EC")]
	public HandMeshMask()
	{
	}
}
[Token(Token = "0x200008D")]
public class HandMeshUI : MonoBehaviour
{
	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SphereCollider[] knobs;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh[] readouts;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int rightHeldKnob;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int leftHeldKnob;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OVRSkeleton leftHand;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OVRSkeleton rightHand;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HandMeshMask leftMask;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HandMeshMask rightMask;

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x1401310", Offset = "0x1401310", VA = "0x1401310")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x140163C", Offset = "0x140163C", VA = "0x140163C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x14013B8", Offset = "0x14013B8", VA = "0x14013B8")]
	private void SetSliderValue(int sliderID, float value, bool isNormalized)
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x1401AD4", Offset = "0x1401AD4", VA = "0x1401AD4")]
	private void CheckForHands()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x1402064", Offset = "0x1402064", VA = "0x1402064")]
	public HandMeshUI()
	{
	}
}
[Token(Token = "0x200008E")]
public class ObjectManipulator : MonoBehaviour
{
	[Token(Token = "0x20003FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0A48", Offset = "0xAC0A48")]
	private sealed class <StartDemo>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectManipulator <>4__this;

		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <fadeTime>5__3;

		[Token(Token = "0x1700024E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BDD")]
			[Address(RVA = "0xF0B2A4", Offset = "0xF0B2A4", VA = "0xF0B2A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BDF")]
			[Address(RVA = "0xF0B30C", Offset = "0xF0B30C", VA = "0xF0B30C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0xF0ABB0", Offset = "0xF0ABB0", VA = "0xF0ABB0")]
		[DebuggerHidden]
		public <StartDemo>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0xF0AF30", Offset = "0xF0AF30", VA = "0xF0AF30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0xF0AF34", Offset = "0xF0AF34", VA = "0xF0AF34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0xF0B2AC", Offset = "0xF0B2AC", VA = "0xF0B2AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRInput.Controller controller;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject hoverObject;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject grabObject;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float grabTime;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 localGrabOffset;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion localGrabRotation;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 camGrabPosition;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion camGrabRotation;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 handGrabPosition;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion handGrabRotation;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 cursorPosition;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float rotationOffset;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LineRenderer laser;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform objectInfo;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMesh objectNameLabel;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMesh objectInstructionsLabel;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image objectInfoBG;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject demoObjects;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public OVRPassthroughLayer passthrough;

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xF08768", Offset = "0xF08768", VA = "0xF08768")]
	private void Start()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xF089A8", Offset = "0xF089A8", VA = "0xF089A8")]
	private void Update()
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xF0988C", Offset = "0xF0988C", VA = "0xF0988C")]
	private void GrabHoverObject(GameObject grbObj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xF0A860", Offset = "0xF0A860", VA = "0xF0A860")]
	private void ReleaseObject()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0xF0892C", Offset = "0xF0892C", VA = "0xF0892C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC9AD0", Offset = "0xAC9AD0")]
	private IEnumerator StartDemo()
	{
		return null;
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xF08C54", Offset = "0xF08C54", VA = "0xF08C54")]
	private void FindHoverObject(Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xF09BAC", Offset = "0xF09BAC", VA = "0xF09BAC")]
	private void ManipulateObject(GameObject obj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xF0ABDC", Offset = "0xF0ABDC", VA = "0xF0ABDC")]
	private void ClampGrabOffset(ref Vector3 localOffset, float thumbY)
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xF0ACB4", Offset = "0xF0ACB4", VA = "0xF0ACB4")]
	private Vector3 ClampScale(Vector3 localScale, Vector2 thumb)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xF0AD14", Offset = "0xF0AD14", VA = "0xF0AD14")]
	private void CheckForDominantHand()
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0xF0AA80", Offset = "0xF0AA80", VA = "0xF0AA80")]
	private void AssignInstructions(GrabObject targetObject)
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0xF0AE30", Offset = "0xF0AE30", VA = "0xF0AE30")]
	public ObjectManipulator()
	{
	}
}
[Token(Token = "0x200008F")]
public class OverlayPassthrough : MonoBehaviour
{
	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xEB0F70", Offset = "0xEB0F70", VA = "0xEB0F70")]
	private void Start()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0xEB10D0", Offset = "0xEB10D0", VA = "0xEB10D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xEB119C", Offset = "0xEB119C", VA = "0xEB119C")]
	public OverlayPassthrough()
	{
	}
}
[Token(Token = "0x2000090")]
public class PassthroughBrush : MonoBehaviour
{
	[Token(Token = "0x2000400")]
	public enum BrushState
	{
		[Token(Token = "0x4001B9A")]
		Idle,
		[Token(Token = "0x4001B9B")]
		Inking
	}

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lineSegmentPrefab;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject lineContainer;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool forceActive;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LineRenderer currentLineSegment;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Vector3> inkPositions;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float minInkDist;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float strokeWidth;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float strokeLength;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private BrushState brushStatus;

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xEB1EB8", Offset = "0xEB1EB8", VA = "0xEB1EB8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xEB1EC0", Offset = "0xEB1EC0", VA = "0xEB1EC0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xEB2230", Offset = "0xEB2230", VA = "0xEB2230")]
	private void StartLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0xEB241C", Offset = "0xEB241C", VA = "0xEB241C")]
	private void UpdateLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0xEB25DC", Offset = "0xEB25DC", VA = "0xEB25DC")]
	public void ClearLines()
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0xEB2138", Offset = "0xEB2138", VA = "0xEB2138")]
	public void UndoInkLine()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0xEB26BC", Offset = "0xEB26BC", VA = "0xEB26BC")]
	public PassthroughBrush()
	{
	}
}
[Token(Token = "0x2000091")]
public class PassthroughController : MonoBehaviour
{
	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0xEB274C", Offset = "0xEB274C", VA = "0xEB274C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0xEB28AC", Offset = "0xEB28AC", VA = "0xEB28AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0xEB2ABC", Offset = "0xEB2ABC", VA = "0xEB2ABC")]
	public PassthroughController()
	{
	}
}
[Token(Token = "0x2000092")]
public class PassthroughProjectionSurface : MonoBehaviour
{
	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer quadOutline;

	[Token(Token = "0x6000302")]
	[Address(RVA = "0xEB2AC4", Offset = "0xEB2AC4", VA = "0xEB2AC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0xEB2C94", Offset = "0xEB2C94", VA = "0xEB2C94")]
	private void Update()
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0xEB2E68", Offset = "0xEB2E68", VA = "0xEB2E68")]
	public PassthroughProjectionSurface()
	{
	}
}
[Token(Token = "0x2000093")]
public class PassthroughStyler : MonoBehaviour
{
	[Token(Token = "0x2000401")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0A58", Offset = "0xAC0A58")]
	private sealed class <FadeToCurrentStyle>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x4001B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4001BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <posterize>5__5;

		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <edgeCol>5__6;

		[Token(Token = "0x17000250")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BE3")]
			[Address(RVA = "0xEB3A8C", Offset = "0xEB3A8C", VA = "0xEB3A8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000251")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BE5")]
			[Address(RVA = "0xEB3AF4", Offset = "0xEB3AF4", VA = "0xEB3AF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0xEB36D4", Offset = "0xEB36D4", VA = "0xEB36D4")]
		[DebuggerHidden]
		public <FadeToCurrentStyle>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0xEB3890", Offset = "0xEB3890", VA = "0xEB3890", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0xEB3894", Offset = "0xEB3894", VA = "0xEB3894", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0xEB3A94", Offset = "0xEB3A94", VA = "0xEB3A94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000402")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0A68", Offset = "0xAC0A68")]
	private sealed class <FadeToDefaultPassthrough>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <posterize>5__5;

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <edgeCol>5__6;

		[Token(Token = "0x17000252")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BE9")]
			[Address(RVA = "0xEB3D38", Offset = "0xEB3D38", VA = "0xEB3D38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000253")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BEB")]
			[Address(RVA = "0xEB3DA0", Offset = "0xEB3DA0", VA = "0xEB3DA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0xEB3700", Offset = "0xEB3700", VA = "0xEB3700")]
		[DebuggerHidden]
		public <FadeToDefaultPassthrough>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0xEB3AFC", Offset = "0xEB3AFC", VA = "0xEB3AFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0xEB3B00", Offset = "0xEB3B00", VA = "0xEB3B00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0xEB3D40", Offset = "0xEB3D40", VA = "0xEB3D40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator fadeIn;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator fadeOut;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RectTransform[] menuOptions;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform colorWheel;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D colorTexture;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 cursorPosition;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool settingColor;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color savedColor;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float savedBrightness;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float savedContrast;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float savedPosterize;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public CanvasGroup mainCanvas;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject[] compactObjects;

	[Token(Token = "0x6000305")]
	[Address(RVA = "0xEB2E70", Offset = "0xEB2E70", VA = "0xEB2E70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xEB3158", Offset = "0xEB3158", VA = "0xEB3158")]
	private void Update()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xEB33C8", Offset = "0xEB33C8", VA = "0xEB33C8")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xEB3554", Offset = "0xEB3554", VA = "0xEB3554")]
	public void Release()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xEB34C8", Offset = "0xEB34C8", VA = "0xEB34C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC9B34", Offset = "0xAC9B34")]
	private IEnumerator FadeToCurrentStyle(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xEB3648", Offset = "0xEB3648", VA = "0xEB3648")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC9B98", Offset = "0xAC9B98")]
	private IEnumerator FadeToDefaultPassthrough(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xEB372C", Offset = "0xEB372C", VA = "0xEB372C")]
	public void OnBrightnessChanged(float newValue)
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xEB374C", Offset = "0xEB374C", VA = "0xEB374C")]
	public void OnContrastChanged(float newValue)
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xEB376C", Offset = "0xEB376C", VA = "0xEB376C")]
	public void OnPosterizeChanged(float newValue)
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xEB378C", Offset = "0xEB378C", VA = "0xEB378C")]
	public void OnAlphaChanged(float newValue)
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xEB30DC", Offset = "0xEB30DC", VA = "0xEB30DC")]
	private void ShowFullMenu(bool doShow)
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xEB37F0", Offset = "0xEB37F0", VA = "0xEB37F0")]
	public void Cursor(Vector3 cP)
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0xEB37FC", Offset = "0xEB37FC", VA = "0xEB37FC")]
	public void DoColorDrag(bool doDrag)
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xEB3170", Offset = "0xEB3170", VA = "0xEB3170")]
	public void GetColorFromWheel()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0xEB3808", Offset = "0xEB3808", VA = "0xEB3808")]
	public PassthroughStyler()
	{
	}
}
[Token(Token = "0x2000094")]
public class PassthroughSurface : MonoBehaviour
{
	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xEB3DA8", Offset = "0xEB3DA8", VA = "0xEB3DA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0xEB3E60", Offset = "0xEB3E60", VA = "0xEB3E60")]
	public PassthroughSurface()
	{
	}
}
[Token(Token = "0x2000095")]
public class SPPquad : MonoBehaviour
{
	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRInput.Controller controllerHand;

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xFB6264", Offset = "0xFB6264", VA = "0xFB6264")]
	private void Start()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xFB6464", Offset = "0xFB6464", VA = "0xFB6464")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xFB64BC", Offset = "0xFB64BC", VA = "0xFB64BC")]
	public void Release()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xFB6508", Offset = "0xFB6508", VA = "0xFB6508")]
	public SPPquad()
	{
	}
}
[Token(Token = "0x2000096")]
public class SceneSampler : MonoBehaviour
{
	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int currentSceneIndex;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject displayText;

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xFB67F8", Offset = "0xFB67F8", VA = "0xFB67F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xFB6874", Offset = "0xFB6874", VA = "0xFB6874")]
	private void Update()
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xFB6C10", Offset = "0xFB6C10", VA = "0xFB6C10")]
	public SceneSampler()
	{
	}
}
[Token(Token = "0x2000097")]
public class SelectivePassthroughExperience : MonoBehaviour
{
	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject leftMaskObject;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rightMaskObject;

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xFB7510", Offset = "0xFB7510", VA = "0xFB7510")]
	private void Update()
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xFB7A24", Offset = "0xFB7A24", VA = "0xFB7A24")]
	public SelectivePassthroughExperience()
	{
	}
}
[Token(Token = "0x2000098")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x2000403")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0A78", Offset = "0xAC0A78")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0xFBA2C4", Offset = "0xFBA2C4", VA = "0xFBA2C4")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0xFBA3D4", Offset = "0xFBA3D4", VA = "0xFBA3D4")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x600031F")]
	[Address(RVA = "0xFBA0F4", Offset = "0xFBA0F4", VA = "0xFBA0F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0xFBA2CC", Offset = "0xFBA2CC", VA = "0xFBA2CC")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xFBA3CC", Offset = "0xFBA3CC", VA = "0xFBA3CC")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x2000099")]
[DisallowMultipleComponent]
public class Outline : MonoBehaviour
{
	[Token(Token = "0x2000404")]
	public enum Mode
	{
		[Token(Token = "0x4001BB1")]
		OutlineAll,
		[Token(Token = "0x4001BB2")]
		OutlineVisible,
		[Token(Token = "0x4001BB3")]
		OutlineHidden,
		[Token(Token = "0x4001BB4")]
		OutlineAndSilhouette,
		[Token(Token = "0x4001BB5")]
		SilhouetteOnly
	}

	[Serializable]
	[Token(Token = "0x2000405")]
	private class ListVector3
	{
		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Vector3> data;

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0xEB0CC0", Offset = "0xEB0CC0", VA = "0xEB0CC0")]
		public ListVector3()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000406")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0A88", Offset = "0xAC0A88")]
	private sealed class <>c
	{
		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Vector3, int, KeyValuePair<Vector3, int>> <>9__30_0;

		[Token(Token = "0x4001BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<KeyValuePair<Vector3, int>, Vector3> <>9__30_1;

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0xEB0E70", Offset = "0xEB0E70", VA = "0xEB0E70")]
		public <>c()
		{
		}

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0xEB0E78", Offset = "0xEB0E78", VA = "0xEB0E78")]
		internal KeyValuePair<Vector3, int> <SmoothNormals>b__30_0(Vector3 vertex, int index)
		{
			return default(KeyValuePair<Vector3, int>);
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0xEB0F08", Offset = "0xEB0F08", VA = "0xEB0F08")]
		internal Vector3 <SmoothNormals>b__30_1(KeyValuePair<Vector3, int> pair)
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static HashSet<Mesh> registeredMeshes;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Mode outlineMode;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Color outlineColor;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC27BC", Offset = "0xAC27BC")]
	private float outlineWidth;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC27FC", Offset = "0xAC27FC")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC27FC", Offset = "0xAC27FC")]
	private bool precomputeOutline;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[HideInInspector]
	private List<Mesh> bakeKeys;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[HideInInspector]
	private List<ListVector3> bakeValues;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] renderers;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material outlineMaskMaterial;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material outlineFillMaterial;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool needsUpdate;

	[Token(Token = "0x17000022")]
	public Mode OutlineMode
	{
		[Token(Token = "0x6000322")]
		[Address(RVA = "0xEAF748", Offset = "0xEAF748", VA = "0xEAF748")]
		get
		{
			return default(Mode);
		}
		[Token(Token = "0x6000323")]
		[Address(RVA = "0xEAF750", Offset = "0xEAF750", VA = "0xEAF750")]
		set
		{
		}
	}

	[Token(Token = "0x17000023")]
	public Color OutlineColor
	{
		[Token(Token = "0x6000324")]
		[Address(RVA = "0xEAF760", Offset = "0xEAF760", VA = "0xEAF760")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000325")]
		[Address(RVA = "0xEAF76C", Offset = "0xEAF76C", VA = "0xEAF76C")]
		set
		{
		}
	}

	[Token(Token = "0x17000024")]
	public float OutlineWidth
	{
		[Token(Token = "0x6000326")]
		[Address(RVA = "0xEAF780", Offset = "0xEAF780", VA = "0xEAF780")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000327")]
		[Address(RVA = "0xEAF788", Offset = "0xEAF788", VA = "0xEAF788")]
		set
		{
		}
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0xEAF798", Offset = "0xEAF798", VA = "0xEAF798")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0xEAFBA8", Offset = "0xEAFBA8", VA = "0xEAFBA8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0xEAFCB8", Offset = "0xEAFCB8", VA = "0xEAFCB8")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0xEAFF34", Offset = "0xEAFF34", VA = "0xEAFF34")]
	private void Update()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0xEB0100", Offset = "0xEB0100", VA = "0xEB0100")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0xEB0210", Offset = "0xEB0210", VA = "0xEB0210")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0xEAFD90", Offset = "0xEAFD90", VA = "0xEAFD90")]
	private void Bake()
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0xEAF8F4", Offset = "0xEAF8F4", VA = "0xEAF8F4")]
	private void LoadSmoothNormals()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0xEB0288", Offset = "0xEB0288", VA = "0xEB0288")]
	private List<Vector3> SmoothNormals(Mesh mesh)
	{
		return null;
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xEAFF48", Offset = "0xEAFF48", VA = "0xEAFF48")]
	private void UpdateMaterialProperties()
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0xEB0CC8", Offset = "0xEB0CC8", VA = "0xEB0CC8")]
	public Outline()
	{
	}
}
[Token(Token = "0x200009A")]
public class BonesOnlyBlendSystem : BlendSystem
{
	[Token(Token = "0x6000334")]
	[Address(RVA = "0x1068084", Offset = "0x1068084", VA = "0x1068084", Slot = "6")]
	public override void OnVariableChanged()
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x1068090", Offset = "0x1068090", VA = "0x1068090")]
	public BonesOnlyBlendSystem()
	{
	}
}
[Serializable]
[Token(Token = "0x200009B")]
public class GestureInstance
{
	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public string gesture;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public AnimationClip clip;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public string triggerName;

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x13FC1B0", Offset = "0x13FC1B0", VA = "0x13FC1B0")]
	public GestureInstance(string gesture, AnimationClip clip, string triggerName)
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x13FC214", Offset = "0x13FC214", VA = "0x13FC214")]
	public bool IsValid(Animator animator)
	{
		return default(bool);
	}
}
[Token(Token = "0x200009C")]
public class MenuSceneLoader : MonoBehaviour
{
	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject menuUI;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject m_Go;

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x1198D98", Offset = "0x1198D98", VA = "0x1198D98")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x1198E68", Offset = "0x1198E68", VA = "0x1198E68")]
	public MenuSceneLoader()
	{
	}
}
[Token(Token = "0x200009D")]
public class PauseMenu : MonoBehaviour
{
	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Toggle m_MenuToggle;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_TimeScaleRef;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_VolumeRef;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_Paused;

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xEB59F8", Offset = "0xEB59F8", VA = "0xEB59F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xEB5A58", Offset = "0xEB5A58", VA = "0xEB5A58")]
	private void MenuOn()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xEB5AAC", Offset = "0xEB5AAC", VA = "0xEB5AAC")]
	public void MenuOff()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xEB5AE4", Offset = "0xEB5AE4", VA = "0xEB5AE4")]
	public void OnMenuStatusChange()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xEB5B4C", Offset = "0xEB5B4C", VA = "0xEB5B4C")]
	public PauseMenu()
	{
	}
}
[Token(Token = "0x200009E")]
public class SceneAndURLLoader : MonoBehaviour
{
	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PauseMenu m_PauseMenu;

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xFB66FC", Offset = "0xFB66FC", VA = "0xFB66FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xFB675C", Offset = "0xFB675C", VA = "0xFB675C")]
	public void SceneLoad(string sceneName)
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xFB67E4", Offset = "0xFB67E4", VA = "0xFB67E4")]
	public void LoadURL(string url)
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xFB67F0", Offset = "0xFB67F0", VA = "0xFB67F0")]
	public SceneAndURLLoader()
	{
	}
}
[Token(Token = "0x200009F")]
public class CameraSwitch : MonoBehaviour
{
	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] objects;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text text;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int m_CurrentActiveObject;

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x106D06C", Offset = "0x106D06C", VA = "0x106D06C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x106D0E0", Offset = "0x106D0E0", VA = "0x106D0E0")]
	public void NextCamera()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x106D1B8", Offset = "0x106D1B8", VA = "0x106D1B8")]
	public CameraSwitch()
	{
	}
}
[Token(Token = "0x20000A0")]
public class LevelReset : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x6000346")]
	[Address(RVA = "0x1185754", Offset = "0x1185754", VA = "0x1185754", Slot = "4")]
	public void OnPointerClick(PointerEventData data)
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x11857D8", Offset = "0x11857D8", VA = "0x11857D8")]
	public LevelReset()
	{
	}
}
[Token(Token = "0x20000A1")]
public class XRIDefaultInputActions : IInputActionCollection, IEnumerable<InputAction>, IEnumerable, IDisposable
{
	[Token(Token = "0x2000407")]
	public struct XRIHMDActions
	{
		[Token(Token = "0x4001BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private XRIDefaultInputActions m_Wrapper;

		[Token(Token = "0x17000254")]
		public InputAction Position
		{
			[Token(Token = "0x6001BF4")]
			[Address(RVA = "0x1EAE814", Offset = "0x1EAE814", VA = "0x1EAE814")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000255")]
		public InputAction Rotation
		{
			[Token(Token = "0x6001BF5")]
			[Address(RVA = "0x1EAE830", Offset = "0x1EAE830", VA = "0x1EAE830")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000256")]
		public bool enabled
		{
			[Token(Token = "0x6001BF9")]
			[Address(RVA = "0x1EAE8B8", Offset = "0x1EAE8B8", VA = "0x1EAE8B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0x1EAE80C", Offset = "0x1EAE80C", VA = "0x1EAE80C")]
		public XRIHMDActions(XRIDefaultInputActions wrapper)
		{
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0x1EAE84C", Offset = "0x1EAE84C", VA = "0x1EAE84C")]
		public InputActionMap Get()
		{
			return null;
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0x1EAE868", Offset = "0x1EAE868", VA = "0x1EAE868")]
		public void Enable()
		{
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0x1EAE890", Offset = "0x1EAE890", VA = "0x1EAE890")]
		public void Disable()
		{
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0x1EAE8E0", Offset = "0x1EAE8E0", VA = "0x1EAE8E0")]
		public static implicit operator InputActionMap(XRIHMDActions set)
		{
			return null;
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0x1EAE8F8", Offset = "0x1EAE8F8", VA = "0x1EAE8F8")]
		public void SetCallbacks(IXRIHMDActions instance)
		{
		}
	}

	[Token(Token = "0x2000408")]
	public struct XRILeftHandActions
	{
		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private XRIDefaultInputActions m_Wrapper;

		[Token(Token = "0x17000257")]
		public InputAction Position
		{
			[Token(Token = "0x6001BFD")]
			[Address(RVA = "0x1EAF0EC", Offset = "0x1EAF0EC", VA = "0x1EAF0EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000258")]
		public InputAction Rotation
		{
			[Token(Token = "0x6001BFE")]
			[Address(RVA = "0x1EAF108", Offset = "0x1EAF108", VA = "0x1EAF108")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000259")]
		public InputAction Select
		{
			[Token(Token = "0x6001BFF")]
			[Address(RVA = "0x1EAF124", Offset = "0x1EAF124", VA = "0x1EAF124")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025A")]
		public InputAction Activate
		{
			[Token(Token = "0x6001C00")]
			[Address(RVA = "0x1EAF140", Offset = "0x1EAF140", VA = "0x1EAF140")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025B")]
		public InputAction UIPress
		{
			[Token(Token = "0x6001C01")]
			[Address(RVA = "0x1EAF15C", Offset = "0x1EAF15C", VA = "0x1EAF15C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025C")]
		public InputAction HapticDevice
		{
			[Token(Token = "0x6001C02")]
			[Address(RVA = "0x1EAF178", Offset = "0x1EAF178", VA = "0x1EAF178")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025D")]
		public InputAction TeleportSelect
		{
			[Token(Token = "0x6001C03")]
			[Address(RVA = "0x1EAF194", Offset = "0x1EAF194", VA = "0x1EAF194")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025E")]
		public InputAction TeleportModeActivate
		{
			[Token(Token = "0x6001C04")]
			[Address(RVA = "0x1EAF1B0", Offset = "0x1EAF1B0", VA = "0x1EAF1B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025F")]
		public InputAction TeleportModeCancel
		{
			[Token(Token = "0x6001C05")]
			[Address(RVA = "0x1EAF1CC", Offset = "0x1EAF1CC", VA = "0x1EAF1CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000260")]
		public InputAction Turn
		{
			[Token(Token = "0x6001C06")]
			[Address(RVA = "0x1EAF1E8", Offset = "0x1EAF1E8", VA = "0x1EAF1E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000261")]
		public InputAction ThumbUp
		{
			[Token(Token = "0x6001C07")]
			[Address(RVA = "0x1EAF204", Offset = "0x1EAF204", VA = "0x1EAF204")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000262")]
		public InputAction Move
		{
			[Token(Token = "0x6001C08")]
			[Address(RVA = "0x1EAF220", Offset = "0x1EAF220", VA = "0x1EAF220")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000263")]
		public InputAction RotateAnchor
		{
			[Token(Token = "0x6001C09")]
			[Address(RVA = "0x1EAF23C", Offset = "0x1EAF23C", VA = "0x1EAF23C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000264")]
		public InputAction TranslateAnchor
		{
			[Token(Token = "0x6001C0A")]
			[Address(RVA = "0x1EAF258", Offset = "0x1EAF258", VA = "0x1EAF258")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000265")]
		public InputAction Reset
		{
			[Token(Token = "0x6001C0B")]
			[Address(RVA = "0x1EAF274", Offset = "0x1EAF274", VA = "0x1EAF274")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000266")]
		public InputAction SwitchRod
		{
			[Token(Token = "0x6001C0C")]
			[Address(RVA = "0x1EAF290", Offset = "0x1EAF290", VA = "0x1EAF290")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000267")]
		public InputAction AutoReel
		{
			[Token(Token = "0x6001C0D")]
			[Address(RVA = "0x1EAF2AC", Offset = "0x1EAF2AC", VA = "0x1EAF2AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000268")]
		public InputAction Boost
		{
			[Token(Token = "0x6001C0E")]
			[Address(RVA = "0x1EAF2C8", Offset = "0x1EAF2C8", VA = "0x1EAF2C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000269")]
		public InputAction GrabHandle
		{
			[Token(Token = "0x6001C0F")]
			[Address(RVA = "0x1EAF2E4", Offset = "0x1EAF2E4", VA = "0x1EAF2E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026A")]
		public InputAction Menu
		{
			[Token(Token = "0x6001C10")]
			[Address(RVA = "0x1EAF300", Offset = "0x1EAF300", VA = "0x1EAF300")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026B")]
		public InputAction Pickup
		{
			[Token(Token = "0x6001C11")]
			[Address(RVA = "0x1EAF31C", Offset = "0x1EAF31C", VA = "0x1EAF31C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026C")]
		public InputAction DialogAdvance
		{
			[Token(Token = "0x6001C12")]
			[Address(RVA = "0x1EAF338", Offset = "0x1EAF338", VA = "0x1EAF338")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026D")]
		public InputAction AnimateIndexLeft
		{
			[Token(Token = "0x6001C13")]
			[Address(RVA = "0x1EAF354", Offset = "0x1EAF354", VA = "0x1EAF354")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026E")]
		public InputAction AnimateFingersLeft
		{
			[Token(Token = "0x6001C14")]
			[Address(RVA = "0x1EAF370", Offset = "0x1EAF370", VA = "0x1EAF370")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026F")]
		public InputAction AnimateThumbLeft
		{
			[Token(Token = "0x6001C15")]
			[Address(RVA = "0x1EAF38C", Offset = "0x1EAF38C", VA = "0x1EAF38C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000270")]
		public bool enabled
		{
			[Token(Token = "0x6001C19")]
			[Address(RVA = "0x1EAF414", Offset = "0x1EAF414", VA = "0x1EAF414")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0x1EAF0E4", Offset = "0x1EAF0E4", VA = "0x1EAF0E4")]
		public XRILeftHandActions(XRIDefaultInputActions wrapper)
		{
		}

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0x1EAF3A8", Offset = "0x1EAF3A8", VA = "0x1EAF3A8")]
		public InputActionMap Get()
		{
			return null;
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0x1EAF3C4", Offset = "0x1EAF3C4", VA = "0x1EAF3C4")]
		public void Enable()
		{
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0x1EAF3EC", Offset = "0x1EAF3EC", VA = "0x1EAF3EC")]
		public void Disable()
		{
		}

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0x1EAF43C", Offset = "0x1EAF43C", VA = "0x1EAF43C")]
		public static implicit operator InputActionMap(XRILeftHandActions set)
		{
			return null;
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0x1EAF454", Offset = "0x1EAF454", VA = "0x1EAF454")]
		public void SetCallbacks(IXRILeftHandActions instance)
		{
		}
	}

	[Token(Token = "0x2000409")]
	public struct XRIRightHandActions
	{
		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private XRIDefaultInputActions m_Wrapper;

		[Token(Token = "0x17000271")]
		public InputAction Position
		{
			[Token(Token = "0x6001C1D")]
			[Address(RVA = "0x1EB5068", Offset = "0x1EB5068", VA = "0x1EB5068")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000272")]
		public InputAction Rotation
		{
			[Token(Token = "0x6001C1E")]
			[Address(RVA = "0x1EB5084", Offset = "0x1EB5084", VA = "0x1EB5084")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000273")]
		public InputAction Select
		{
			[Token(Token = "0x6001C1F")]
			[Address(RVA = "0x1EB50A0", Offset = "0x1EB50A0", VA = "0x1EB50A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000274")]
		public InputAction Activate
		{
			[Token(Token = "0x6001C20")]
			[Address(RVA = "0x1EB50BC", Offset = "0x1EB50BC", VA = "0x1EB50BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000275")]
		public InputAction UIPress
		{
			[Token(Token = "0x6001C21")]
			[Address(RVA = "0x1EB50D8", Offset = "0x1EB50D8", VA = "0x1EB50D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000276")]
		public InputAction HapticDevice
		{
			[Token(Token = "0x6001C22")]
			[Address(RVA = "0x1EB50F4", Offset = "0x1EB50F4", VA = "0x1EB50F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000277")]
		public InputAction TeleportSelect
		{
			[Token(Token = "0x6001C23")]
			[Address(RVA = "0x1EB5110", Offset = "0x1EB5110", VA = "0x1EB5110")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000278")]
		public InputAction TeleportModeActivate
		{
			[Token(Token = "0x6001C24")]
			[Address(RVA = "0x1EB512C", Offset = "0x1EB512C", VA = "0x1EB512C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000279")]
		public InputAction TeleportModeCancel
		{
			[Token(Token = "0x6001C25")]
			[Address(RVA = "0x1EB5148", Offset = "0x1EB5148", VA = "0x1EB5148")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027A")]
		public InputAction Turn
		{
			[Token(Token = "0x6001C26")]
			[Address(RVA = "0x1EB5164", Offset = "0x1EB5164", VA = "0x1EB5164")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027B")]
		public InputAction ThumbUp
		{
			[Token(Token = "0x6001C27")]
			[Address(RVA = "0x1EB5180", Offset = "0x1EB5180", VA = "0x1EB5180")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027C")]
		public InputAction Move
		{
			[Token(Token = "0x6001C28")]
			[Address(RVA = "0x1EB519C", Offset = "0x1EB519C", VA = "0x1EB519C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027D")]
		public InputAction RotateAnchor
		{
			[Token(Token = "0x6001C29")]
			[Address(RVA = "0x1EB51B8", Offset = "0x1EB51B8", VA = "0x1EB51B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027E")]
		public InputAction TranslateAnchor
		{
			[Token(Token = "0x6001C2A")]
			[Address(RVA = "0x1EB51D4", Offset = "0x1EB51D4", VA = "0x1EB51D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027F")]
		public InputAction Reset
		{
			[Token(Token = "0x6001C2B")]
			[Address(RVA = "0x1EB51F0", Offset = "0x1EB51F0", VA = "0x1EB51F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000280")]
		public InputAction SwitchRod
		{
			[Token(Token = "0x6001C2C")]
			[Address(RVA = "0x1EB520C", Offset = "0x1EB520C", VA = "0x1EB520C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000281")]
		public InputAction AutoReel
		{
			[Token(Token = "0x6001C2D")]
			[Address(RVA = "0x1EB5228", Offset = "0x1EB5228", VA = "0x1EB5228")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000282")]
		public InputAction Boost
		{
			[Token(Token = "0x6001C2E")]
			[Address(RVA = "0x1EB5244", Offset = "0x1EB5244", VA = "0x1EB5244")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000283")]
		public InputAction GrabHandle
		{
			[Token(Token = "0x6001C2F")]
			[Address(RVA = "0x1EB5260", Offset = "0x1EB5260", VA = "0x1EB5260")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000284")]
		public InputAction EditorPause
		{
			[Token(Token = "0x6001C30")]
			[Address(RVA = "0x1EB527C", Offset = "0x1EB527C", VA = "0x1EB527C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000285")]
		public InputAction Menu
		{
			[Token(Token = "0x6001C31")]
			[Address(RVA = "0x1EB5298", Offset = "0x1EB5298", VA = "0x1EB5298")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000286")]
		public InputAction Pickup
		{
			[Token(Token = "0x6001C32")]
			[Address(RVA = "0x1EB52B4", Offset = "0x1EB52B4", VA = "0x1EB52B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000287")]
		public InputAction DialogAdvance
		{
			[Token(Token = "0x6001C33")]
			[Address(RVA = "0x1EB52D0", Offset = "0x1EB52D0", VA = "0x1EB52D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000288")]
		public InputAction AnimateIndexRight
		{
			[Token(Token = "0x6001C34")]
			[Address(RVA = "0x1EB52EC", Offset = "0x1EB52EC", VA = "0x1EB52EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000289")]
		public InputAction AnimateFingersRight
		{
			[Token(Token = "0x6001C35")]
			[Address(RVA = "0x1EB5308", Offset = "0x1EB5308", VA = "0x1EB5308")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028A")]
		public InputAction AnimateThumbRight
		{
			[Token(Token = "0x6001C36")]
			[Address(RVA = "0x1EB5324", Offset = "0x1EB5324", VA = "0x1EB5324")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028B")]
		public bool enabled
		{
			[Token(Token = "0x6001C3A")]
			[Address(RVA = "0x1EB53AC", Offset = "0x1EB53AC", VA = "0x1EB53AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0x1EB5060", Offset = "0x1EB5060", VA = "0x1EB5060")]
		public XRIRightHandActions(XRIDefaultInputActions wrapper)
		{
		}

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0x1EB5340", Offset = "0x1EB5340", VA = "0x1EB5340")]
		public InputActionMap Get()
		{
			return null;
		}

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0x1EB535C", Offset = "0x1EB535C", VA = "0x1EB535C")]
		public void Enable()
		{
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0x1EB5384", Offset = "0x1EB5384", VA = "0x1EB5384")]
		public void Disable()
		{
		}

		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0x1EB53D4", Offset = "0x1EB53D4", VA = "0x1EB53D4")]
		public static implicit operator InputActionMap(XRIRightHandActions set)
		{
			return null;
		}

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0x1EB53EC", Offset = "0x1EB53EC", VA = "0x1EB53EC")]
		public void SetCallbacks(IXRIRightHandActions instance)
		{
		}
	}

	[Token(Token = "0x200040A")]
	public interface IXRIHMDActions
	{
		[Token(Token = "0x6001C3D")]
		void OnPosition(InputAction.CallbackContext context);

		[Token(Token = "0x6001C3E")]
		void OnRotation(InputAction.CallbackContext context);
	}

	[Token(Token = "0x200040B")]
	public interface IXRILeftHandActions
	{
		[Token(Token = "0x6001C3F")]
		void OnPosition(InputAction.CallbackContext context);

		[Token(Token = "0x6001C40")]
		void OnRotation(InputAction.CallbackContext context);

		[Token(Token = "0x6001C41")]
		void OnSelect(InputAction.CallbackContext context);

		[Token(Token = "0x6001C42")]
		void OnActivate(InputAction.CallbackContext context);

		[Token(Token = "0x6001C43")]
		void OnUIPress(InputAction.CallbackContext context);

		[Token(Token = "0x6001C44")]
		void OnHapticDevice(InputAction.CallbackContext context);

		[Token(Token = "0x6001C45")]
		void OnTeleportSelect(InputAction.CallbackContext context);

		[Token(Token = "0x6001C46")]
		void OnTeleportModeActivate(InputAction.CallbackContext context);

		[Token(Token = "0x6001C47")]
		void OnTeleportModeCancel(InputAction.CallbackContext context);

		[Token(Token = "0x6001C48")]
		void OnTurn(InputAction.CallbackContext context);

		[Token(Token = "0x6001C49")]
		void OnThumbUp(InputAction.CallbackContext context);

		[Token(Token = "0x6001C4A")]
		void OnMove(InputAction.CallbackContext context);

		[Token(Token = "0x6001C4B")]
		void OnRotateAnchor(InputAction.CallbackContext context);

		[Token(Token = "0x6001C4C")]
		void OnTranslateAnchor(InputAction.CallbackContext context);

		[Token(Token = "0x6001C4D")]
		void OnReset(InputAction.CallbackContext context);

		[Token(Token = "0x6001C4E")]
		void OnSwitchRod(InputAction.CallbackContext context);

		[Token(Token = "0x6001C4F")]
		void OnAutoReel(InputAction.CallbackContext context);

		[Token(Token = "0x6001C50")]
		void OnBoost(InputAction.CallbackContext context);

		[Token(Token = "0x6001C51")]
		void OnGrabHandle(InputAction.CallbackContext context);

		[Token(Token = "0x6001C52")]
		void OnMenu(InputAction.CallbackContext context);

		[Token(Token = "0x6001C53")]
		void OnPickup(InputAction.CallbackContext context);

		[Token(Token = "0x6001C54")]
		void OnDialogAdvance(InputAction.CallbackContext context);

		[Token(Token = "0x6001C55")]
		void OnAnimateIndexLeft(InputAction.CallbackContext context);

		[Token(Token = "0x6001C56")]
		void OnAnimateFingersLeft(InputAction.CallbackContext context);

		[Token(Token = "0x6001C57")]
		void OnAnimateThumbLeft(InputAction.CallbackContext context);
	}

	[Token(Token = "0x200040C")]
	public interface IXRIRightHandActions
	{
		[Token(Token = "0x6001C58")]
		void OnPosition(InputAction.CallbackContext context);

		[Token(Token = "0x6001C59")]
		void OnRotation(InputAction.CallbackContext context);

		[Token(Token = "0x6001C5A")]
		void OnSelect(InputAction.CallbackContext context);

		[Token(Token = "0x6001C5B")]
		void OnActivate(InputAction.CallbackContext context);

		[Token(Token = "0x6001C5C")]
		void OnUIPress(InputAction.CallbackContext context);

		[Token(Token = "0x6001C5D")]
		void OnHapticDevice(InputAction.CallbackContext context);

		[Token(Token = "0x6001C5E")]
		void OnTeleportSelect(InputAction.CallbackContext context);

		[Token(Token = "0x6001C5F")]
		void OnTeleportModeActivate(InputAction.CallbackContext context);

		[Token(Token = "0x6001C60")]
		void OnTeleportModeCancel(InputAction.CallbackContext context);

		[Token(Token = "0x6001C61")]
		void OnTurn(InputAction.CallbackContext context);

		[Token(Token = "0x6001C62")]
		void OnThumbUp(InputAction.CallbackContext context);

		[Token(Token = "0x6001C63")]
		void OnMove(InputAction.CallbackContext context);

		[Token(Token = "0x6001C64")]
		void OnRotateAnchor(InputAction.CallbackContext context);

		[Token(Token = "0x6001C65")]
		void OnTranslateAnchor(InputAction.CallbackContext context);

		[Token(Token = "0x6001C66")]
		void OnReset(InputAction.CallbackContext context);

		[Token(Token = "0x6001C67")]
		void OnSwitchRod(InputAction.CallbackContext context);

		[Token(Token = "0x6001C68")]
		void OnAutoReel(InputAction.CallbackContext context);

		[Token(Token = "0x6001C69")]
		void OnBoost(InputAction.CallbackContext context);

		[Token(Token = "0x6001C6A")]
		void OnGrabHandle(InputAction.CallbackContext context);

		[Token(Token = "0x6001C6B")]
		void OnEditorPause(InputAction.CallbackContext context);

		[Token(Token = "0x6001C6C")]
		void OnMenu(InputAction.CallbackContext context);

		[Token(Token = "0x6001C6D")]
		void OnPickup(InputAction.CallbackContext context);

		[Token(Token = "0x6001C6E")]
		void OnDialogAdvance(InputAction.CallbackContext context);

		[Token(Token = "0x6001C6F")]
		void OnAnimateIndexRight(InputAction.CallbackContext context);

		[Token(Token = "0x6001C70")]
		void OnAnimateFingersRight(InputAction.CallbackContext context);

		[Token(Token = "0x6001C71")]
		void OnAnimateThumbRight(InputAction.CallbackContext context);
	}

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC290C", Offset = "0xAC290C")]
	private readonly InputActionAsset <asset>k__BackingField;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly InputActionMap m_XRIHMD;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IXRIHMDActions m_XRIHMDActionsCallbackInterface;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly InputAction m_XRIHMD_Position;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly InputAction m_XRIHMD_Rotation;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly InputActionMap m_XRILeftHand;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private IXRILeftHandActions m_XRILeftHandActionsCallbackInterface;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private readonly InputAction m_XRILeftHand_Position;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly InputAction m_XRILeftHand_Rotation;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private readonly InputAction m_XRILeftHand_Select;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private readonly InputAction m_XRILeftHand_Activate;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly InputAction m_XRILeftHand_UIPress;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly InputAction m_XRILeftHand_HapticDevice;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private readonly InputAction m_XRILeftHand_TeleportSelect;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private readonly InputAction m_XRILeftHand_TeleportModeActivate;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private readonly InputAction m_XRILeftHand_TeleportModeCancel;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private readonly InputAction m_XRILeftHand_Turn;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private readonly InputAction m_XRILeftHand_ThumbUp;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private readonly InputAction m_XRILeftHand_Move;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private readonly InputAction m_XRILeftHand_RotateAnchor;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private readonly InputAction m_XRILeftHand_TranslateAnchor;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private readonly InputAction m_XRILeftHand_Reset;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private readonly InputAction m_XRILeftHand_SwitchRod;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private readonly InputAction m_XRILeftHand_AutoReel;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private readonly InputAction m_XRILeftHand_Boost;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private readonly InputAction m_XRILeftHand_GrabHandle;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private readonly InputAction m_XRILeftHand_Menu;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private readonly InputAction m_XRILeftHand_Pickup;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private readonly InputAction m_XRILeftHand_DialogAdvance;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private readonly InputAction m_XRILeftHand_AnimateIndexLeft;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private readonly InputAction m_XRILeftHand_AnimateFingersLeft;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private readonly InputAction m_XRILeftHand_AnimateThumbLeft;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private readonly InputActionMap m_XRIRightHand;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private IXRIRightHandActions m_XRIRightHandActionsCallbackInterface;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private readonly InputAction m_XRIRightHand_Position;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private readonly InputAction m_XRIRightHand_Rotation;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private readonly InputAction m_XRIRightHand_Select;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private readonly InputAction m_XRIRightHand_Activate;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private readonly InputAction m_XRIRightHand_UIPress;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private readonly InputAction m_XRIRightHand_HapticDevice;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private readonly InputAction m_XRIRightHand_TeleportSelect;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private readonly InputAction m_XRIRightHand_TeleportModeActivate;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private readonly InputAction m_XRIRightHand_TeleportModeCancel;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private readonly InputAction m_XRIRightHand_Turn;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private readonly InputAction m_XRIRightHand_ThumbUp;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private readonly InputAction m_XRIRightHand_Move;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private readonly InputAction m_XRIRightHand_RotateAnchor;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private readonly InputAction m_XRIRightHand_TranslateAnchor;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private readonly InputAction m_XRIRightHand_Reset;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private readonly InputAction m_XRIRightHand_SwitchRod;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private readonly InputAction m_XRIRightHand_AutoReel;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private readonly InputAction m_XRIRightHand_Boost;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private readonly InputAction m_XRIRightHand_GrabHandle;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private readonly InputAction m_XRIRightHand_EditorPause;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private readonly InputAction m_XRIRightHand_Menu;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private readonly InputAction m_XRIRightHand_Pickup;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private readonly InputAction m_XRIRightHand_DialogAdvance;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private readonly InputAction m_XRIRightHand_AnimateIndexRight;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private readonly InputAction m_XRIRightHand_AnimateFingersRight;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private readonly InputAction m_XRIRightHand_AnimateThumbRight;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private int m_GenericXRControllerSchemeIndex;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	private int m_ContinuousMoveSchemeIndex;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private int m_NoncontinuousMoveSchemeIndex;

	[Token(Token = "0x17000025")]
	public InputActionAsset asset
	{
		[Token(Token = "0x6000348")]
		[Address(RVA = "0x1EAD820", Offset = "0x1EAD820", VA = "0x1EAD820")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC9BFC", Offset = "0xAC9BFC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000026")]
	public InputBinding? bindingMask
	{
		[Token(Token = "0x600034B")]
		[Address(RVA = "0x1EAE3D0", Offset = "0x1EAE3D0", VA = "0x1EAE3D0", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600034C")]
		[Address(RVA = "0x1EAE3F4", Offset = "0x1EAE3F4", VA = "0x1EAE3F4", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x17000027")]
	public ReadOnlyArray<InputDevice>? devices
	{
		[Token(Token = "0x600034D")]
		[Address(RVA = "0x1EAE44C", Offset = "0x1EAE44C", VA = "0x1EAE44C", Slot = "6")]
		get
		{
			return null;
		}
		[Token(Token = "0x600034E")]
		[Address(RVA = "0x1EAE468", Offset = "0x1EAE468", VA = "0x1EAE468", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x17000028")]
	public ReadOnlyArray<InputControlScheme> controlSchemes
	{
		[Token(Token = "0x600034F")]
		[Address(RVA = "0x1EAE4B8", Offset = "0x1EAE4B8", VA = "0x1EAE4B8", Slot = "8")]
		get
		{
			return default(ReadOnlyArray<InputControlScheme>);
		}
	}

	[Token(Token = "0x17000029")]
	public XRIHMDActions XRIHMD
	{
		[Token(Token = "0x6000355")]
		[Address(RVA = "0x1EAE560", Offset = "0x1EAE560", VA = "0x1EAE560")]
		get
		{
			return default(XRIHMDActions);
		}
	}

	[Token(Token = "0x1700002A")]
	public XRILeftHandActions XRILeftHand
	{
		[Token(Token = "0x6000356")]
		[Address(RVA = "0x1EAE58C", Offset = "0x1EAE58C", VA = "0x1EAE58C")]
		get
		{
			return default(XRILeftHandActions);
		}
	}

	[Token(Token = "0x1700002B")]
	public XRIRightHandActions XRIRightHand
	{
		[Token(Token = "0x6000357")]
		[Address(RVA = "0x1EAE5B8", Offset = "0x1EAE5B8", VA = "0x1EAE5B8")]
		get
		{
			return default(XRIRightHandActions);
		}
	}

	[Token(Token = "0x1700002C")]
	public InputControlScheme GenericXRControllerScheme
	{
		[Token(Token = "0x6000358")]
		[Address(RVA = "0x1EAE5E4", Offset = "0x1EAE5E4", VA = "0x1EAE5E4")]
		get
		{
			return default(InputControlScheme);
		}
	}

	[Token(Token = "0x1700002D")]
	public InputControlScheme ContinuousMoveScheme
	{
		[Token(Token = "0x6000359")]
		[Address(RVA = "0x1EAE69C", Offset = "0x1EAE69C", VA = "0x1EAE69C")]
		get
		{
			return default(InputControlScheme);
		}
	}

	[Token(Token = "0x1700002E")]
	public InputControlScheme NoncontinuousMoveScheme
	{
		[Token(Token = "0x600035A")]
		[Address(RVA = "0x1EAE754", Offset = "0x1EAE754", VA = "0x1EAE754")]
		get
		{
			return default(InputControlScheme);
		}
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x1EAD828", Offset = "0x1EAD828", VA = "0x1EAD828")]
	public XRIDefaultInputActions()
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x1EAE364", Offset = "0x1EAE364", VA = "0x1EAE364", Slot = "14")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x1EAE4D4", Offset = "0x1EAE4D4", VA = "0x1EAE4D4", Slot = "9")]
	public bool Contains(InputAction action)
	{
		return default(bool);
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x1EAE4F0", Offset = "0x1EAE4F0", VA = "0x1EAE4F0", Slot = "12")]
	public IEnumerator<InputAction> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x1EAE50C", Offset = "0x1EAE50C", VA = "0x1EAE50C", Slot = "13")]
	private IEnumerator System.Collections.IEnumerable.GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x1EAE528", Offset = "0x1EAE528", VA = "0x1EAE528", Slot = "10")]
	public void Enable()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x1EAE544", Offset = "0x1EAE544", VA = "0x1EAE544", Slot = "11")]
	public void Disable()
	{
	}
}
[Token(Token = "0x20000A2")]
public class UnSoftDistanceDisabler : MonoBehaviour
{
	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int _distanceDisable;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform _distanceFrom;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool _distanceFromMainCam;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _disableCheckInterval;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _enableCheckInterval;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool _disableOnStart;

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x14FABCC", Offset = "0x14FABCC", VA = "0x14FABCC")]
	public void Start()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x14FACC0", Offset = "0x14FACC0", VA = "0x14FACC0")]
	public void DisableOnStart()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x14FACF8", Offset = "0x14FACF8", VA = "0x14FACF8")]
	public void CheckDisable()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x14FAE44", Offset = "0x14FAE44", VA = "0x14FAE44")]
	public void CheckEnable()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x14FAF90", Offset = "0x14FAF90", VA = "0x14FAF90")]
	public UnSoftDistanceDisabler()
	{
	}
}
[Token(Token = "0x20000A3")]
public class SchoolBubbles : MonoBehaviour
{
	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem _bubbleParticles;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float _emitEverySecond;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float _speedEmitMultiplier;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int _minBubbles;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int _maxBubbles;

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xFB6C18", Offset = "0xFB6C18", VA = "0xFB6C18")]
	public void Start()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xFB6CBC", Offset = "0xFB6CBC", VA = "0xFB6CBC")]
	public void EmitBubbles(Vector3 pos, float amount)
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0xFB6DE8", Offset = "0xFB6DE8", VA = "0xFB6DE8")]
	public SchoolBubbles()
	{
	}
}
[Token(Token = "0x20000A4")]
public class Boid : MonoBehaviour
{
	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private BoidSettings settings;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Transform model;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public FishTypeSO fishType;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public int flockID;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public float boundsRadius;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Vector3 position;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public Vector3 forward;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 velocity;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float lastUpdateTime;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 randomDirection;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 acceleration;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public Vector3 avgFlockHeading;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[HideInInspector]
	public Vector3 avgAvoidanceHeading;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[HideInInspector]
	public Vector3 centreOfFlockmates;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[HideInInspector]
	public int numPerceivedFlockmates;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Transform cachedTransform;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Transform target;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 goal;

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x10663B4", Offset = "0x10663B4", VA = "0x10663B4")]
	public void Initialize(BoidSettings settings, Transform target)
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x1066504", Offset = "0x1066504", VA = "0x1066504")]
	public void UpdateBoid()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x1066CCC", Offset = "0x1066CCC", VA = "0x1066CCC")]
	private bool IsHeadingForCollision()
	{
		return default(bool);
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x1066D74", Offset = "0x1066D74", VA = "0x1066D74")]
	private Vector3 ObstacleRays()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x1066BE8", Offset = "0x1066BE8", VA = "0x1066BE8")]
	private Vector3 SteerTowards(Vector3 vector)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x1066EF8", Offset = "0x1066EF8", VA = "0x1066EF8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x1067014", Offset = "0x1067014", VA = "0x1067014")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x1067064", Offset = "0x1067064", VA = "0x1067064")]
	public Boid()
	{
	}
}
[Token(Token = "0x20000A5")]
public static class BoidHelper
{
	[Token(Token = "0x400047C")]
	private const int numViewDirections = 180;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Vector3[] directions;

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x10670E4", Offset = "0x10670E4", VA = "0x10670E4")]
	static BoidHelper()
	{
	}
}
[Token(Token = "0x20000A6")]
public class BoidManager : MonoBehaviour
{
	[Token(Token = "0x200040D")]
	public struct BoidData
	{
		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 position;

		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 direction;

		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 flockHeading;

		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 flockCentre;

		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 avoidanceHeading;

		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int numFlockmates;

		[Token(Token = "0x1700028C")]
		public static int Size
		{
			[Token(Token = "0x6001C72")]
			[Address(RVA = "0x1068054", Offset = "0x1068054", VA = "0x1068054")]
			get
			{
				return default(int);
			}
		}
	}

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform prefab;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BoidSettings settings;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform boidTargetPlaneTop;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform boidTargetPlaneMiddle;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform boidTargetPlaneBottom;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SpawnPool fishPool;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float spawnRadius;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private Vector3 modelLocalEuler;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Boid> boids;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform[] spawnPoints;

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x10672A0", Offset = "0x10672A0", VA = "0x10672A0")]
	private void Update()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x1067920", Offset = "0x1067920", VA = "0x1067920")]
	public void CreateBoids(FishTypeSO fishType, int count)
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x1067C04", Offset = "0x1067C04", VA = "0x1067C04")]
	public void RemoveAllBoids()
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x1067D60", Offset = "0x1067D60", VA = "0x1067D60")]
	public void RemoveBoidsOfType(FishTypeSO fish)
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x1067EF0", Offset = "0x1067EF0", VA = "0x1067EF0")]
	public int GetBoidCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x1067F40", Offset = "0x1067F40", VA = "0x1067F40")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x1067FD8", Offset = "0x1067FD8", VA = "0x1067FD8")]
	public BoidManager()
	{
	}
}
[Token(Token = "0x20000A7")]
public class BoidSettings : ScriptableObject
{
	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float perceptionRadius;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float avoidanceRadius;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxSteerForce;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float alignWeight;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float cohesionWeight;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float seperateWeight;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float randomizeWeight;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float targetWeight;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC29FC", Offset = "0xAC29FC")]
	public LayerMask obstacleMask;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float avoidCollisionWeight;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float collisionAvoidDst;

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x106805C", Offset = "0x106805C", VA = "0x106805C")]
	public BoidSettings()
	{
	}
}
[Token(Token = "0x20000A8")]
public class Spawner : MonoBehaviour
{
	[Token(Token = "0x200040E")]
	public enum GizmoType
	{
		[Token(Token = "0x4001BC4")]
		Never,
		[Token(Token = "0x4001BC5")]
		SelectedOnly,
		[Token(Token = "0x4001BC6")]
		Always
	}

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Boid prefab;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float spawnRadius;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int spawnCount;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color colour;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GizmoType showSpawnRegion;

	[Token(Token = "0x6000374")]
	[Address(RVA = "0xFB949C", Offset = "0xFB949C", VA = "0xFB949C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xFB9658", Offset = "0xFB9658", VA = "0xFB9658")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xFB96E8", Offset = "0xFB96E8", VA = "0xFB96E8")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xFB966C", Offset = "0xFB966C", VA = "0xFB966C")]
	private void DrawGizmos()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xFB96FC", Offset = "0xFB96FC", VA = "0xFB96FC")]
	public Spawner()
	{
	}
}
[Token(Token = "0x20000A9")]
public class CullFix : MonoBehaviour
{
	[Token(Token = "0x6000379")]
	[Address(RVA = "0x10704C0", Offset = "0x10704C0", VA = "0x10704C0")]
	private void Start()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x10705F4", Offset = "0x10705F4", VA = "0x10705F4")]
	public CullFix()
	{
	}
}
[Token(Token = "0x20000AA")]
public class SetGlobalCamPos : MonoBehaviour
{
	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform camTrans;

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xFB7A2C", Offset = "0xFB7A2C", VA = "0xFB7A2C")]
	private void Update()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0xFB7AF0", Offset = "0xFB7AF0", VA = "0xFB7AF0")]
	public SetGlobalCamPos()
	{
	}
}
[Token(Token = "0x20000AB")]
public class VRSI_IMPORT_ASSIST : MonoBehaviour
{
	[Token(Token = "0x600037D")]
	[Address(RVA = "0x14FD698", Offset = "0x14FD698", VA = "0x14FD698")]
	public VRSI_IMPORT_ASSIST()
	{
	}
}
[Token(Token = "0x20000AC")]
[ExecuteInEditMode]
public class VRSI_RenderTool : MonoBehaviour
{
	[Token(Token = "0x200040F")]
	public enum VRSI_Resolution
	{
		[Token(Token = "0x4001BC8")]
		VeryLow_256,
		[Token(Token = "0x4001BC9")]
		Low_512,
		[Token(Token = "0x4001BCA")]
		Medium_1024,
		[Token(Token = "0x4001BCB")]
		High_2048,
		[Token(Token = "0x4001BCC")]
		VeryHigh_4096
	}

	[Token(Token = "0x2000410")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0A98", Offset = "0xAC0A98")]
	private sealed class <startVRPreview>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRSI_RenderTool <>4__this;

		[Token(Token = "0x1700028D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C76")]
			[Address(RVA = "0x14FF2D0", Offset = "0x14FF2D0", VA = "0x14FF2D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C78")]
			[Address(RVA = "0x14FF338", Offset = "0x14FF338", VA = "0x14FF338", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C73")]
		[Address(RVA = "0x14FE86C", Offset = "0x14FE86C", VA = "0x14FE86C")]
		[DebuggerHidden]
		public <startVRPreview>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x6001C74")]
		[Address(RVA = "0x14FEF18", Offset = "0x14FEF18", VA = "0x14FEF18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C75")]
		[Address(RVA = "0x14FEF1C", Offset = "0x14FEF1C", VA = "0x14FEF1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C77")]
		[Address(RVA = "0x14FF2D8", Offset = "0x14FF2D8", VA = "0x14FF2D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000411")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0AA8", Offset = "0xAC0AA8")]
	private sealed class <stopPreview>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRSI_RenderTool <>4__this;

		[Token(Token = "0x1700028F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C7C")]
			[Address(RVA = "0x14FF5D8", Offset = "0x14FF5D8", VA = "0x14FF5D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000290")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C7E")]
			[Address(RVA = "0x14FF640", Offset = "0x14FF640", VA = "0x14FF640", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C79")]
		[Address(RVA = "0x14FE940", Offset = "0x14FE940", VA = "0x14FE940")]
		[DebuggerHidden]
		public <stopPreview>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0x14FF340", Offset = "0x14FF340", VA = "0x14FF340", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0x14FF344", Offset = "0x14FF344", VA = "0x14FF344", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0x14FF5E0", Offset = "0x14FF5E0", VA = "0x14FF5E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000412")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0AB8", Offset = "0xAC0AB8")]
	private sealed class <doStereoMipMaping>d__53 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000291")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C82")]
			[Address(RVA = "0x14FED94", Offset = "0x14FED94", VA = "0x14FED94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000292")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C84")]
			[Address(RVA = "0x14FEDFC", Offset = "0x14FEDFC", VA = "0x14FEDFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0x14FEAF4", Offset = "0x14FEAF4", VA = "0x14FEAF4")]
		[DebuggerHidden]
		public <doStereoMipMaping>d__53(int <>1__state)
		{
		}

		[Token(Token = "0x6001C80")]
		[Address(RVA = "0x14FECF0", Offset = "0x14FECF0", VA = "0x14FECF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C81")]
		[Address(RVA = "0x14FECF4", Offset = "0x14FECF4", VA = "0x14FECF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C83")]
		[Address(RVA = "0x14FED9C", Offset = "0x14FED9C", VA = "0x14FED9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000413")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0AC8", Offset = "0xAC0AC8")]
	private sealed class <doStereoMipMaping_PC_MOBILE>d__55 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000293")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C88")]
			[Address(RVA = "0x14FEEA8", Offset = "0x14FEEA8", VA = "0x14FEEA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000294")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C8A")]
			[Address(RVA = "0x14FEF10", Offset = "0x14FEF10", VA = "0x14FEF10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C85")]
		[Address(RVA = "0x14FEB84", Offset = "0x14FEB84", VA = "0x14FEB84")]
		[DebuggerHidden]
		public <doStereoMipMaping_PC_MOBILE>d__55(int <>1__state)
		{
		}

		[Token(Token = "0x6001C86")]
		[Address(RVA = "0x14FEE04", Offset = "0x14FEE04", VA = "0x14FEE04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C87")]
		[Address(RVA = "0x14FEE08", Offset = "0x14FEE08", VA = "0x14FEE08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0x14FEEB0", Offset = "0x14FEEB0", VA = "0x14FEEB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRSI_Resolution vrsiResolution;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int vrsiRenderSize;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VRSI_Resolution vrsiResolutionNormal;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int vrsiRenderSizeNormal;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material makeAlpha;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Camera renderCam;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera mainCam;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC2A34", Offset = "0xAC2A34")]
	public float seperation;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve seperationCurve;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC2A50", Offset = "0xAC2A50")]
	public float focalPointHeight;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC2A68", Offset = "0xAC2A68")]
	public float focalPointZvalue;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC2A80", Offset = "0xAC2A80")]
	public float ObserverHeight;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC2A98", Offset = "0xAC2A98")]
	public float ObserverDistance;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xAC2AB4", Offset = "0xAC2AB4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC2AB4", Offset = "0xAC2AB4")]
	public float OrientationDegrees;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool focalPlaneVisible;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool renderNormals;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	public bool AlphaToCoverage;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
	public bool Create_For_VR;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool Create_For_PC_MOBILE;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private RenderTexture rtL;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private RenderTexture rtR;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string folderName;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string vrsiName;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform focalpoint;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private MeshRenderer refFloor;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private MeshRenderer refPerson;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private MeshRenderer refBillboardQuad;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Texture2D stereoRT;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Texture2D stereoRTnorm;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private RenderTexture rtLnorm;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private RenderTexture rtRnorm;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool AllowPostProcess;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private GameObject camGO;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool inVRmode;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Transform refDebugFocalPlane;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject ObjectsToRenderParent;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private string loadedvrDeviceName;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private RenderTexture rt_White;

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x14FD6A0", Offset = "0x14FD6A0", VA = "0x14FD6A0")]
	public void Tick()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x14FD904", Offset = "0x14FD904", VA = "0x14FD904")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x14FDB0C", Offset = "0x14FDB0C", VA = "0x14FDB0C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x14FE03C", Offset = "0x14FE03C", VA = "0x14FE03C")]
	private void DrawBounds(Bounds b, float delay = 0f)
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x14FE65C", Offset = "0x14FE65C", VA = "0x14FE65C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x14FE710", Offset = "0x14FE710", VA = "0x14FE710")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x14FE7C4", Offset = "0x14FE7C4", VA = "0x14FE7C4")]
	public void enableVRpreview()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x14FE7F0", Offset = "0x14FE7F0", VA = "0x14FE7F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC9C0C", Offset = "0xAC9C0C")]
	private IEnumerator startVRPreview()
	{
		return null;
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x14FE898", Offset = "0x14FE898", VA = "0x14FE898")]
	public void stopVRpreview()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x14FE8C4", Offset = "0x14FE8C4", VA = "0x14FE8C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC9C70", Offset = "0xAC9C70")]
	private IEnumerator stopPreview()
	{
		return null;
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x14FE96C", Offset = "0x14FE96C", VA = "0x14FE96C")]
	public bool getInVRMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x14FE974", Offset = "0x14FE974", VA = "0x14FE974")]
	private void Start()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x14FEA40", Offset = "0x14FEA40", VA = "0x14FEA40")]
	private static RenderTexture GetTemporaryRT(RenderTexture texture)
	{
		return null;
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x14FEA90", Offset = "0x14FEA90", VA = "0x14FEA90")]
	public void CreateVRSI()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x14FEA94", Offset = "0x14FEA94", VA = "0x14FEA94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC9CD4", Offset = "0xAC9CD4")]
	private IEnumerator doStereoMipMaping()
	{
		return null;
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x14FEB20", Offset = "0x14FEB20", VA = "0x14FEB20")]
	public void CreateVRSI_PC_MOBILE()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x14FEB24", Offset = "0x14FEB24", VA = "0x14FEB24")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC9D38", Offset = "0xAC9D38")]
	private IEnumerator doStereoMipMaping_PC_MOBILE()
	{
		return null;
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x14FEBB0", Offset = "0x14FEBB0", VA = "0x14FEBB0")]
	public static Texture2D LoadPNG(string filePath)
	{
		return null;
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x14FEC50", Offset = "0x14FEC50", VA = "0x14FEC50")]
	public VRSI_RenderTool()
	{
	}
}
[Token(Token = "0x20000AD")]
[ExecuteInEditMode]
public class VRSI_RenderTool_MultiView : MonoBehaviour
{
	[Token(Token = "0x2000414")]
	public enum VRSI_Resolution
	{
		[Token(Token = "0x4001BD8")]
		VeryLow_256,
		[Token(Token = "0x4001BD9")]
		Low_512,
		[Token(Token = "0x4001BDA")]
		Medium_1024,
		[Token(Token = "0x4001BDB")]
		High_2048,
		[Token(Token = "0x4001BDC")]
		VeryHigh_4096
	}

	[Token(Token = "0x2000415")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0AD8", Offset = "0xAC0AD8")]
	private sealed class <startVRPreview>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRSI_RenderTool_MultiView <>4__this;

		[Token(Token = "0x17000295")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C8E")]
			[Address(RVA = "0x1EAC3BC", Offset = "0x1EAC3BC", VA = "0x1EAC3BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000296")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C90")]
			[Address(RVA = "0x1EAC424", Offset = "0x1EAC424", VA = "0x1EAC424", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0x1EABFD8", Offset = "0x1EABFD8", VA = "0x1EABFD8")]
		[DebuggerHidden]
		public <startVRPreview>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0x1EAC004", Offset = "0x1EAC004", VA = "0x1EAC004", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0x1EAC008", Offset = "0x1EAC008", VA = "0x1EAC008", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0x1EAC3C4", Offset = "0x1EAC3C4", VA = "0x1EAC3C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000416")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0AE8", Offset = "0xAC0AE8")]
	private sealed class <stopPreview>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRSI_RenderTool_MultiView <>4__this;

		[Token(Token = "0x17000297")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C94")]
			[Address(RVA = "0x1EAC6F0", Offset = "0x1EAC6F0", VA = "0x1EAC6F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000298")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C96")]
			[Address(RVA = "0x1EAC758", Offset = "0x1EAC758", VA = "0x1EAC758", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0x1EAC42C", Offset = "0x1EAC42C", VA = "0x1EAC42C")]
		[DebuggerHidden]
		public <stopPreview>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0x1EAC458", Offset = "0x1EAC458", VA = "0x1EAC458", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C93")]
		[Address(RVA = "0x1EAC45C", Offset = "0x1EAC45C", VA = "0x1EAC45C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C95")]
		[Address(RVA = "0x1EAC6F8", Offset = "0x1EAC6F8", VA = "0x1EAC6F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000417")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0AF8", Offset = "0xAC0AF8")]
	private sealed class <doStereoMipMaping>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000299")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C9A")]
			[Address(RVA = "0x1EABF68", Offset = "0x1EABF68", VA = "0x1EABF68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C9C")]
			[Address(RVA = "0x1EABFD0", Offset = "0x1EABFD0", VA = "0x1EABFD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C97")]
		[Address(RVA = "0x1EABE98", Offset = "0x1EABE98", VA = "0x1EABE98")]
		[DebuggerHidden]
		public <doStereoMipMaping>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0x1EABEC4", Offset = "0x1EABEC4", VA = "0x1EABEC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0x1EABEC8", Offset = "0x1EABEC8", VA = "0x1EABEC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0x1EABF70", Offset = "0x1EABF70", VA = "0x1EABF70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRSI_Resolution vrsiResolution;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int vrsiRenderSize;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VRSI_Resolution vrsiResolutionNormal;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int vrsiRenderSizeNormal;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material makeAlpha;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Camera renderCam;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera mainCam;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC2AFC", Offset = "0xAC2AFC")]
	public float seperation;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve seperationCurve;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC2B18", Offset = "0xAC2B18")]
	public float focalPointHeight;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC2B30", Offset = "0xAC2B30")]
	public float focalPointZvalue;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC2B48", Offset = "0xAC2B48")]
	public float ObserverHeight;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC2B60", Offset = "0xAC2B60")]
	public float ObserverDistance;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xAC2B7C", Offset = "0xAC2B7C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC2B7C", Offset = "0xAC2B7C")]
	public float OrientationDegrees;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool focalPlaneVisible;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool renderNormals;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	public bool AlphaToCoverage;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MultiViewPointCount;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private RenderTexture rtL;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private RenderTexture rtR;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string folderName;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string vrsiName;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform focalpoint;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private MeshRenderer refFloor;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private MeshRenderer refPerson;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private MeshRenderer refBillboardQuad;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Texture2D stereoRT;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Texture2D stereoRTnorm;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private RenderTexture rtLnorm;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private RenderTexture rtRnorm;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool AllowPostProcess;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private GameObject camGO;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool inVRmode;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Transform refDebugFocalPlane;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject ObjectsToRenderParent;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private string loadedvrDeviceName;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private RenderTexture rt_White;

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x14FF648", Offset = "0x14FF648", VA = "0x14FF648")]
	public void Tick()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x14FF8AC", Offset = "0x14FF8AC", VA = "0x14FF8AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x14FFAB4", Offset = "0x14FFAB4", VA = "0x14FFAB4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x14FFFE4", Offset = "0x14FFFE4", VA = "0x14FFFE4")]
	private void DrawBounds(Bounds b, float delay = 0f)
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x1500604", Offset = "0x1500604", VA = "0x1500604")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x15006B8", Offset = "0x15006B8", VA = "0x15006B8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x150076C", Offset = "0x150076C", VA = "0x150076C")]
	public void enableVRpreview()
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x1500798", Offset = "0x1500798", VA = "0x1500798")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC9D9C", Offset = "0xAC9D9C")]
	private IEnumerator startVRPreview()
	{
		return null;
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x1500814", Offset = "0x1500814", VA = "0x1500814")]
	public void stopVRpreview()
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x1500840", Offset = "0x1500840", VA = "0x1500840")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC9E00", Offset = "0xAC9E00")]
	private IEnumerator stopPreview()
	{
		return null;
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x15008BC", Offset = "0x15008BC", VA = "0x15008BC")]
	public bool getInVRMode()
	{
		return default(bool);
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x15008C4", Offset = "0x15008C4", VA = "0x15008C4")]
	private void Start()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x1500974", Offset = "0x1500974", VA = "0x1500974")]
	private static RenderTexture GetTemporaryRT(RenderTexture texture)
	{
		return null;
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x15009C4", Offset = "0x15009C4", VA = "0x15009C4")]
	public void CreateVRSI()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x15009C8", Offset = "0x15009C8", VA = "0x15009C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC9E64", Offset = "0xAC9E64")]
	private IEnumerator doStereoMipMaping()
	{
		return null;
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x1500A28", Offset = "0x1500A28", VA = "0x1500A28")]
	private Texture2D duplicateTexture(Texture2D source)
	{
		return null;
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x1500BF8", Offset = "0x1500BF8", VA = "0x1500BF8")]
	public static Texture2D LoadPNG(string filePath)
	{
		return null;
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x1500C98", Offset = "0x1500C98", VA = "0x1500C98")]
	public VRSI_RenderTool_MultiView()
	{
	}
}
[Token(Token = "0x20000AE")]
public class Big_Splash : MonoBehaviour
{
	[Token(Token = "0x2000418")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0B08", Offset = "0xAC0B08")]
	private sealed class <TriggerSplash>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Big_Splash <>4__this;

		[Token(Token = "0x1700029B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CA0")]
			[Address(RVA = "0x1066144", Offset = "0x1066144", VA = "0x1066144", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CA2")]
			[Address(RVA = "0x10661AC", Offset = "0x10661AC", VA = "0x10661AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0x1066004", Offset = "0x1066004", VA = "0x1066004")]
		[DebuggerHidden]
		public <TriggerSplash>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0x1066038", Offset = "0x1066038", VA = "0x1066038", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0x106603C", Offset = "0x106603C", VA = "0x106603C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0x106614C", Offset = "0x106614C", VA = "0x106614C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject BigSplash;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float splashFlag;

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x1065EBC", Offset = "0x1065EBC", VA = "0x1065EBC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x1065EF4", Offset = "0x1065EF4", VA = "0x1065EF4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x1065F1C", Offset = "0x1065F1C", VA = "0x1065F1C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x1065F88", Offset = "0x1065F88", VA = "0x1065F88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC9EC8", Offset = "0xAC9EC8")]
	private IEnumerator TriggerSplash()
	{
		return null;
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x1066030", Offset = "0x1066030", VA = "0x1066030")]
	public Big_Splash()
	{
	}
}
[Token(Token = "0x20000AF")]
public class Small_Splash : MonoBehaviour
{
	[Token(Token = "0x2000419")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0B18", Offset = "0xAC0B18")]
	private sealed class <TriggerSplash>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Small_Splash <>4__this;

		[Token(Token = "0x1700029D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CA6")]
			[Address(RVA = "0xFB8A40", Offset = "0xFB8A40", VA = "0xFB8A40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CA8")]
			[Address(RVA = "0xFB8AA8", Offset = "0xFB8AA8", VA = "0xFB8AA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0xFB88FC", Offset = "0xFB88FC", VA = "0xFB88FC")]
		[DebuggerHidden]
		public <TriggerSplash>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0xFB8930", Offset = "0xFB8930", VA = "0xFB8930", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0xFB8934", Offset = "0xFB8934", VA = "0xFB8934", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0xFB8A48", Offset = "0xFB8A48", VA = "0xFB8A48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject SmallSplash;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float splashFlag;

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xFB87B4", Offset = "0xFB87B4", VA = "0xFB87B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0xFB87EC", Offset = "0xFB87EC", VA = "0xFB87EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xFB8814", Offset = "0xFB8814", VA = "0xFB8814")]
	private void Update()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xFB8880", Offset = "0xFB8880", VA = "0xFB8880")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC9F2C", Offset = "0xAC9F2C")]
	private IEnumerator TriggerSplash()
	{
		return null;
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xFB8928", Offset = "0xFB8928", VA = "0xFB8928")]
	public Small_Splash()
	{
	}
}
[Token(Token = "0x20000B0")]
public class PlaceInteractiveWaterAtCollider : MonoBehaviour
{
	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform controllerTransform;

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0xEB5BC4", Offset = "0xEB5BC4", VA = "0xEB5BC4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0xEB5CE8", Offset = "0xEB5CE8", VA = "0xEB5CE8")]
	public PlaceInteractiveWaterAtCollider()
	{
	}
}
[Token(Token = "0x20000B1")]
public class SetInteractiveWaterShaderEffects : MonoBehaviour
{
	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RenderTexture rt;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform target;

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xFB7AF8", Offset = "0xFB7AF8", VA = "0xFB7AF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0xFB7B84", Offset = "0xFB7B84", VA = "0xFB7B84")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0xFB7CEC", Offset = "0xFB7CEC", VA = "0xFB7CEC")]
	public SetInteractiveWaterShaderEffects()
	{
	}
}
[Token(Token = "0x20000B2")]
public class ReelGlowNoise : MonoBehaviour
{
	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector2 _dir;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minValue;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float turb;

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x1456D10", Offset = "0x1456D10", VA = "0x1456D10")]
	private float Remap(float value, float from1, float to1, float from2, float to2)
	{
		return default(float);
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x1456D2C", Offset = "0x1456D2C", VA = "0x1456D2C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x1456E00", Offset = "0x1456E00", VA = "0x1456E00")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x1456F00", Offset = "0x1456F00", VA = "0x1456F00")]
	public ReelGlowNoise()
	{
	}
}
[Token(Token = "0x20000B3")]
public class Turntable : MonoBehaviour
{
	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x14FAB90", Offset = "0x14FAB90", VA = "0x14FAB90")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x14FABC4", Offset = "0x14FABC4", VA = "0x14FABC4")]
	public Turntable()
	{
	}
}
[Token(Token = "0x20000B4")]
public class ScrollTexture : MonoBehaviour
{
	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ScrollX;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ScrollY;

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0xFB742C", Offset = "0xFB742C", VA = "0xFB742C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0xFB7500", Offset = "0xFB7500", VA = "0xFB7500")]
	public ScrollTexture()
	{
	}
}
[Token(Token = "0x20000B5")]
public class LineRenderController : MonoBehaviour
{
	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject objectA;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject objectB;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x1185F0C", Offset = "0x1185F0C", VA = "0x1185F0C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x1185FD8", Offset = "0x1185FD8", VA = "0x1185FD8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x118605C", Offset = "0x118605C", VA = "0x118605C")]
	public LineRenderController()
	{
	}
}
[Token(Token = "0x20000B6")]
public static class AchievementsAPI
{
	[Token(Token = "0x60003BD")]
	[Address(RVA = "0xD663C8", Offset = "0xD663C8", VA = "0xD663C8")]
	public static void UnlockAchievement(string api_name)
	{
	}
}
[Token(Token = "0x20000B7")]
public class AquaFish : MonoBehaviour
{
	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] models;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform ModelParent;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SphereCollider col;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody rb;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float nextMoveTime;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform target;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool canLookAt;

	[Token(Token = "0x1700002F")]
	public SphereCollider Collider
	{
		[Token(Token = "0x60003BE")]
		[Address(RVA = "0xD672A4", Offset = "0xD672A4", VA = "0xD672A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0xD672AC", Offset = "0xD672AC", VA = "0xD672AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0xD6730C", Offset = "0xD6730C", VA = "0xD6730C")]
	public void UpdateFish()
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0xD67610", Offset = "0xD67610", VA = "0xD67610")]
	private void SetModel()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0xD674FC", Offset = "0xD674FC", VA = "0xD674FC")]
	private void FaceTarget()
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0xD674B4", Offset = "0xD674B4", VA = "0xD674B4")]
	private void GetNetMoveTime()
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0xD673CC", Offset = "0xD673CC", VA = "0xD673CC")]
	private void Move()
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0xD676B4", Offset = "0xD676B4", VA = "0xD676B4")]
	public AquaFish()
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0xD676C4", Offset = "0xD676C4", VA = "0xD676C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC9F90", Offset = "0xAC9F90")]
	private void <FaceTarget>b__12_0()
	{
	}
}
[Token(Token = "0x20000B8")]
public class AquaFishController : MonoBehaviour
{
	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject fishPrefab;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int numFish;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AquaFish[] fish;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int fishIndex;

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0xD676D0", Offset = "0xD676D0", VA = "0xD676D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0xD678F8", Offset = "0xD678F8", VA = "0xD678F8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0xD67964", Offset = "0xD67964", VA = "0xD67964")]
	public void Reset()
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0xD67D1C", Offset = "0xD67D1C", VA = "0xD67D1C")]
	public AquaFishController()
	{
	}
}
[Token(Token = "0x20000B9")]
public class DecoSlotPointerEnterExit : MonoBehaviour
{
	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int uiDecoSlotIndex;

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x1074778", Offset = "0x1074778", VA = "0x1074778")]
	public void OnPointerEnter()
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x10747DC", Offset = "0x10747DC", VA = "0x10747DC")]
	public void OnPointerExit()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x1074840", Offset = "0x1074840", VA = "0x1074840")]
	public DecoSlotPointerEnterExit()
	{
	}
}
[Token(Token = "0x20000BA")]
public class Delay : MonoBehaviour
{
	[Token(Token = "0x200041A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0B28", Offset = "0xAC0B28")]
	private sealed class <PlayAfterDelay>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Delay <>4__this;

		[Token(Token = "0x1700029F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CAC")]
			[Address(RVA = "0x1074AFC", Offset = "0x1074AFC", VA = "0x1074AFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CAE")]
			[Address(RVA = "0x1074B64", Offset = "0x1074B64", VA = "0x1074B64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0x1074910", Offset = "0x1074910", VA = "0x1074910")]
		[DebuggerHidden]
		public <PlayAfterDelay>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0x10749FC", Offset = "0x10749FC", VA = "0x10749FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0x1074A00", Offset = "0x1074A00", VA = "0x1074A00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0x1074B04", Offset = "0x1074B04", VA = "0x1074B04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200041B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0B38", Offset = "0xAC0B38")]
	private sealed class <StopAfterDelay>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Delay <>4__this;

		[Token(Token = "0x170002A1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CB2")]
			[Address(RVA = "0x1074C68", Offset = "0x1074C68", VA = "0x1074C68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CB4")]
			[Address(RVA = "0x1074CD0", Offset = "0x1074CD0", VA = "0x1074CD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0x10749C8", Offset = "0x10749C8", VA = "0x10749C8")]
		[DebuggerHidden]
		public <StopAfterDelay>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0x1074B6C", Offset = "0x1074B6C", VA = "0x1074B6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0x1074B70", Offset = "0x1074B70", VA = "0x1074B70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0x1074C70", Offset = "0x1074C70", VA = "0x1074C70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool startOnAwake;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float startDelay;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float stopDelay;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool isPlaying;

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x1074848", Offset = "0x1074848", VA = "0x1074848")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x1074884", Offset = "0x1074884", VA = "0x1074884")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC9FA0", Offset = "0xAC9FA0")]
	private IEnumerator PlayAfterDelay(float delay)
	{
		return null;
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x107493C", Offset = "0x107493C", VA = "0x107493C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACA004", Offset = "0xACA004")]
	private IEnumerator StopAfterDelay(float delay)
	{
		return null;
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x10749F4", Offset = "0x10749F4", VA = "0x10749F4")]
	public Delay()
	{
	}
}
[Token(Token = "0x20000BB")]
public class FixedXRInteractorLineVisual : XRInteractorLineVisual
{
	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x13FA8DC", Offset = "0x13FA8DC", VA = "0x13FA8DC")]
	protected new void Awake()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x13FA9B4", Offset = "0x13FA9B4", VA = "0x13FA9B4")]
	protected void OnDestroy()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x13FAA20", Offset = "0x13FAA20", VA = "0x13FAA20")]
	protected new void OnEnable()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x13FAA58", Offset = "0x13FAA58", VA = "0x13FAA58")]
	protected new void OnDisable()
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x13FAAFC", Offset = "0x13FAAFC", VA = "0x13FAAFC")]
	public FixedXRInteractorLineVisual()
	{
	}
}
[Token(Token = "0x20000BC")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xABEFA8", Offset = "0xABEFA8")]
public class PredatorDataSO : ScriptableObject
{
	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool PredatorsEnabled;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float SpawnRate;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberLimit;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Speed;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Radius;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float HideDuration;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float MaxValue;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float MinValue;

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0xEB7AA8", Offset = "0xEB7AA8", VA = "0xEB7AA8")]
	public PredatorDataSO()
	{
	}
}
[Token(Token = "0x20000BD")]
public enum HapticsPriority
{
	[Token(Token = "0x400050D")]
	none,
	[Token(Token = "0x400050E")]
	low,
	[Token(Token = "0x400050F")]
	medium,
	[Token(Token = "0x4000510")]
	high
}
[Token(Token = "0x20000BE")]
public class Launcher : MonoBehaviour
{
	[Token(Token = "0x200041C")]
	private struct LaunchData
	{
		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly Vector3 initialVelocity;

		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly float timeToTarget;

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0x1185734", Offset = "0x1185734", VA = "0x1185734")]
		public LaunchData(Vector3 initialVelocity, float timeToTarget)
		{
		}
	}

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody ball;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float h;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float gravity;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool debugPath;

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x11851CC", Offset = "0x11851CC", VA = "0x11851CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x11851EC", Offset = "0x11851EC", VA = "0x11851EC")]
	private void Update()
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x1185238", Offset = "0x1185238", VA = "0x1185238")]
	private void Launch()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x11854E4", Offset = "0x11854E4", VA = "0x11854E4")]
	private LaunchData CalculateLaunchData()
	{
		return default(LaunchData);
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x11852E4", Offset = "0x11852E4", VA = "0x11852E4")]
	private void DrawPath()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x1185740", Offset = "0x1185740", VA = "0x1185740")]
	public Launcher()
	{
	}
}
[Token(Token = "0x20000BF")]
public class PlaceTarget : MonoBehaviour
{
	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float waterLevel;

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0xEB5CF0", Offset = "0xEB5CF0", VA = "0xEB5CF0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0xEB5DB0", Offset = "0xEB5DB0", VA = "0xEB5DB0")]
	private void Update()
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0xEB5E70", Offset = "0xEB5E70", VA = "0xEB5E70")]
	public PlaceTarget()
	{
	}
}
[Token(Token = "0x20000C0")]
public class EventArgs
{
	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC2C14", Offset = "0xAC2C14")]
	private string <EventName>k__BackingField;

	[Token(Token = "0x17000030")]
	public string EventName
	{
		[Token(Token = "0x60003E1")]
		[Address(RVA = "0x13FA06C", Offset = "0x13FA06C", VA = "0x13FA06C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA068", Offset = "0xACA068")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003E2")]
		[Address(RVA = "0x13FA074", Offset = "0x13FA074", VA = "0x13FA074")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA078", Offset = "0xACA078")]
		set
		{
		}
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x13FA07C", Offset = "0x13FA07C", VA = "0x13FA07C")]
	public EventArgs()
	{
	}
}
[Token(Token = "0x20000C1")]
public interface IEventListener
{
	[Token(Token = "0x60003E4")]
	void OnEvent(EventArgs args);
}
[Token(Token = "0x20000C2")]
public static class XRInputNotifiManager
{
	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<string, List<IEventListener>> eventListeners;

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x1EBB3A4", Offset = "0x1EBB3A4", VA = "0x1EBB3A4")]
	public static void AttachListener(string eventName, IEventListener listener)
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x1EBB4D0", Offset = "0x1EBB4D0", VA = "0x1EBB4D0")]
	public static void DetachListener(string eventName, IEventListener listener)
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x1EBB5DC", Offset = "0x1EBB5DC", VA = "0x1EBB5DC")]
	public static void NotifyEvent(string eventName)
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x1EBB674", Offset = "0x1EBB674", VA = "0x1EBB674")]
	public static void NotifyEvent(EventArgs args)
	{
	}
}
[Token(Token = "0x20000C3")]
public class PopRandomIdleSelector : MonoBehaviour
{
	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator anim;

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xEB7938", Offset = "0xEB7938", VA = "0xEB7938")]
	private void Start()
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0xEB7990", Offset = "0xEB7990", VA = "0xEB7990")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xEB7998", Offset = "0xEB7998", VA = "0xEB7998")]
	private void SetRandomIdle()
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0xEB7A4C", Offset = "0xEB7A4C", VA = "0xEB7A4C")]
	public PopRandomIdleSelector()
	{
	}
}
[Token(Token = "0x20000C4")]
public class PositionFollower : MonoBehaviour
{
	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform TrnsToFollow;

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0xEB7A54", Offset = "0xEB7A54", VA = "0xEB7A54")]
	private void Update()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xEB7AA0", Offset = "0xEB7AA0", VA = "0xEB7AA0")]
	public PositionFollower()
	{
	}
}
[Token(Token = "0x20000C5")]
public class CheckRbVelo : MonoBehaviour
{
	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x106F1C4", Offset = "0x106F1C4", VA = "0x106F1C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x106F224", Offset = "0x106F224", VA = "0x106F224")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x106F2E8", Offset = "0x106F2E8", VA = "0x106F2E8")]
	public CheckRbVelo()
	{
	}
}
[Token(Token = "0x20000C6")]
public class ResetPosition : MonoBehaviour
{
	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector3 localPosition;

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x14571C0", Offset = "0x14571C0", VA = "0x14571C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x14571C4", Offset = "0x14571C4", VA = "0x14571C4")]
	public void Reset()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x14571FC", Offset = "0x14571FC", VA = "0x14571FC")]
	public ResetPosition()
	{
	}
}
[Token(Token = "0x20000C7")]
public class XRInteractableTest : XRBaseInteractable
{
	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x1EBB8A4", Offset = "0x1EBB8A4", VA = "0x1EBB8A4")]
	public void GetObjOnRight(Transform obj)
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x1EBB8DC", Offset = "0x1EBB8DC", VA = "0x1EBB8DC")]
	private Vector3 GetWorldAttachPosition(XRBaseInteractor interactor)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x1EBB900", Offset = "0x1EBB900", VA = "0x1EBB900")]
	public XRInteractableTest()
	{
	}
}
[Token(Token = "0x20000C8")]
public class temp : MonoBehaviour
{
	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform fin;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Tween finTween;

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x1EBBFB8", Offset = "0x1EBBFB8", VA = "0x1EBBFB8")]
	private void animateFinDown()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x1EBC098", Offset = "0x1EBC098", VA = "0x1EBC098")]
	private void animateFinUp()
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x1EBC0E8", Offset = "0x1EBC0E8", VA = "0x1EBC0E8")]
	private void finishAnimation()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x1EBC0EC", Offset = "0x1EBC0EC", VA = "0x1EBC0EC")]
	public temp()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x1EBC0F4", Offset = "0x1EBC0F4", VA = "0x1EBC0F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA088", Offset = "0xACA088")]
	private void <animateFinDown>b__2_0()
	{
	}
}
[Token(Token = "0x20000C9")]
public class RegisterWater : MonoBehaviour
{
	[Token(Token = "0x200041D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0B48", Offset = "0xAC0B48")]
	private sealed class <SetWater>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RegisterWater <>4__this;

		[Token(Token = "0x170002A3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CB9")]
			[Address(RVA = "0x1457150", Offset = "0x1457150", VA = "0x1457150", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CBB")]
			[Address(RVA = "0x14571B8", Offset = "0x14571B8", VA = "0x14571B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0x1456FC4", Offset = "0x1456FC4", VA = "0x1456FC4")]
		[DebuggerHidden]
		public <SetWater>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0x1456FF8", Offset = "0x1456FF8", VA = "0x1456FF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0x1456FFC", Offset = "0x1456FFC", VA = "0x1456FFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0x1457158", Offset = "0x1457158", VA = "0x1457158", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x1456F14", Offset = "0x1456F14", VA = "0x1456F14")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x1456FBC", Offset = "0x1456FBC", VA = "0x1456FBC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x1456F40", Offset = "0x1456F40", VA = "0x1456F40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACA098", Offset = "0xACA098")]
	private IEnumerator SetWater()
	{
		return null;
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x1456FF0", Offset = "0x1456FF0", VA = "0x1456FF0")]
	public RegisterWater()
	{
	}
}
[Token(Token = "0x20000CA")]
public class StartOnRandomFrame : MonoBehaviour
{
	[Token(Token = "0x6000402")]
	[Address(RVA = "0xFBA3F0", Offset = "0xFBA3F0", VA = "0xFBA3F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0xFBA4F8", Offset = "0xFBA4F8", VA = "0xFBA4F8")]
	public StartOnRandomFrame()
	{
	}
}
[Serializable]
[Token(Token = "0x20000CB")]
public class VersionInfo
{
	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string BuildNumber;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ScmBranch;

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x1EAC7F4", Offset = "0x1EAC7F4", VA = "0x1EAC7F4")]
	public VersionInfo()
	{
	}
}
[Token(Token = "0x20000CC")]
public class DataSaver : MonoBehaviour
{
	[Token(Token = "0x6000405")]
	public static void SaveData<T>(T dataToSave, string dataFileName)
	{
	}

	[Token(Token = "0x6000406")]
	public static T LoadData<T>(string dataFileName)
	{
		return (T)null;
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x1070D70", Offset = "0x1070D70", VA = "0x1070D70")]
	public static bool DeleteData(string dataFileName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x1071020", Offset = "0x1071020", VA = "0x1071020")]
	public DataSaver()
	{
	}
}
[Token(Token = "0x20000CD")]
public delegate float EasingFunction(float k);
[Token(Token = "0x20000CE")]
public class Easing
{
	[Token(Token = "0x200041E")]
	public class Quadratic
	{
		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0x13F99B4", Offset = "0x13F99B4", VA = "0x13F99B4")]
		public static float In(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0x13F99BC", Offset = "0x13F99BC", VA = "0x13F99BC")]
		public static float InOut(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0x13F99FC", Offset = "0x13F99FC", VA = "0x13F99FC")]
		public static float Bezier(float k, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0x13F9A1C", Offset = "0x13F9A1C", VA = "0x13F9A1C")]
		public Quadratic()
		{
		}
	}

	[Token(Token = "0x200041F")]
	public class Cubic
	{
		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0x13F9488", Offset = "0x13F9488", VA = "0x13F9488")]
		public static float In(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0x13F9494", Offset = "0x13F9494", VA = "0x13F9494")]
		public static float Out(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0x13F94B0", Offset = "0x13F94B0", VA = "0x13F94B0")]
		public static float InOut(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0x13F94F4", Offset = "0x13F94F4", VA = "0x13F94F4")]
		public Cubic()
		{
		}
	}

	[Token(Token = "0x2000420")]
	public class Quartic
	{
		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0x13F9A24", Offset = "0x13F9A24", VA = "0x13F9A24")]
		public static float In(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0x13F9A34", Offset = "0x13F9A34", VA = "0x13F9A34")]
		public static float Out(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0x13F9A54", Offset = "0x13F9A54", VA = "0x13F9A54")]
		public static float InOut(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0x13F9A9C", Offset = "0x13F9A9C", VA = "0x13F9A9C")]
		public Quartic()
		{
		}
	}

	[Token(Token = "0x2000421")]
	public class Quintic
	{
		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0x13F9AA4", Offset = "0x13F9AA4", VA = "0x13F9AA4")]
		public static float In(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0x13F9AB8", Offset = "0x13F9AB8", VA = "0x13F9AB8")]
		public static float Out(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0x13F9ADC", Offset = "0x13F9ADC", VA = "0x13F9ADC")]
		public static float InOut(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0x13F9B30", Offset = "0x13F9B30", VA = "0x13F9B30")]
		public Quintic()
		{
		}
	}

	[Token(Token = "0x2000422")]
	public class Sinusoidal
	{
		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0x13F9B38", Offset = "0x13F9B38", VA = "0x13F9B38")]
		public static float In(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0x13F9BC0", Offset = "0x13F9BC0", VA = "0x13F9BC0")]
		public static float Out(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0x13F9C3C", Offset = "0x13F9C3C", VA = "0x13F9C3C")]
		public static float InOut(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0x13F9CC4", Offset = "0x13F9CC4", VA = "0x13F9CC4")]
		public Sinusoidal()
		{
		}
	}

	[Token(Token = "0x2000423")]
	public class Exponential
	{
		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0x13F97B4", Offset = "0x13F97B4", VA = "0x13F97B4")]
		public static float In(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0x13F9848", Offset = "0x13F9848", VA = "0x13F9848")]
		public static float Out(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0x13F98D0", Offset = "0x13F98D0", VA = "0x13F98D0")]
		public static float InOut(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0x13F99AC", Offset = "0x13F99AC", VA = "0x13F99AC")]
		public Exponential()
		{
		}
	}

	[Token(Token = "0x2000424")]
	public class Circular
	{
		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0x13F927C", Offset = "0x13F927C", VA = "0x13F927C")]
		public static float In(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0x13F9308", Offset = "0x13F9308", VA = "0x13F9308")]
		public static float Out(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0x13F93A4", Offset = "0x13F93A4", VA = "0x13F93A4")]
		public static float InOut(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0x13F9480", Offset = "0x13F9480", VA = "0x13F9480")]
		public Circular()
		{
		}
	}

	[Token(Token = "0x2000425")]
	public class Elastic
	{
		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0x13F94FC", Offset = "0x13F94FC", VA = "0x13F94FC")]
		public static float In(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0x13F95C0", Offset = "0x13F95C0", VA = "0x13F95C0")]
		public static float Out(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0x13F9684", Offset = "0x13F9684", VA = "0x13F9684")]
		public static float InOut(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0x13F97AC", Offset = "0x13F97AC", VA = "0x13F97AC")]
		public Elastic()
		{
		}
	}

	[Token(Token = "0x2000426")]
	public class Back
	{
		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float s;

		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static float s2;

		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0x13F8EB4", Offset = "0x13F8EB4", VA = "0x13F8EB4")]
		public static float In(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0x13F8F40", Offset = "0x13F8F40", VA = "0x13F8F40")]
		public static float Out(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0x13F8FD8", Offset = "0x13F8FD8", VA = "0x13F8FD8")]
		public static float InOut(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0x13F90C4", Offset = "0x13F90C4", VA = "0x13F90C4")]
		public Back()
		{
		}
	}

	[Token(Token = "0x2000427")]
	public class Bounce
	{
		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0x13F9138", Offset = "0x13F9138", VA = "0x13F9138")]
		public static float In(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0x13F9160", Offset = "0x13F9160", VA = "0x13F9160")]
		public static float Out(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0x13F9220", Offset = "0x13F9220", VA = "0x13F9220")]
		public static float InOut(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0x13F9274", Offset = "0x13F9274", VA = "0x13F9274")]
		public Bounce()
		{
		}
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x13F8EA8", Offset = "0x13F8EA8", VA = "0x13F8EA8")]
	public static float Linear(float k)
	{
		return default(float);
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x13F8EAC", Offset = "0x13F8EAC", VA = "0x13F8EAC")]
	public Easing()
	{
	}
}
[Token(Token = "0x20000CF")]
public class Wobble : MonoBehaviour
{
	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer rend;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 lastPos;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 velocity;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 lastRot;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 angularVelocity;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float MaxWobble;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float WobbleSpeed;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float Recovery;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float wobbleAmountX;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float wobbleAmountZ;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float wobbleAmountToAddX;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float wobbleAmountToAddZ;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float pulse;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float time;

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x1EAC864", Offset = "0x1EAC864", VA = "0x1EAC864")]
	private void Start()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x1EAC8C4", Offset = "0x1EAC8C4", VA = "0x1EAC8C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x1EACBEC", Offset = "0x1EACBEC", VA = "0x1EACBEC")]
	public Wobble()
	{
	}
}
namespace CloudBuildManifest
{
	[Serializable]
	[Token(Token = "0x20000D0")]
	public class BuildManifest
	{
		[Token(Token = "0x400052F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string scmCommitId;

		[Token(Token = "0x4000530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string scmBranch;

		[Token(Token = "0x4000531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string buildNumber;

		[Token(Token = "0x4000532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string buildStartTime;

		[Token(Token = "0x4000533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string projectId;

		[Token(Token = "0x4000534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string bundleId;

		[Token(Token = "0x4000535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private string unityVersion;

		[Token(Token = "0x4000536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private string xcodeVersion;

		[Token(Token = "0x4000537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private string cloudBuildTargetName;

		[Token(Token = "0x17000031")]
		public string ScmCommitId
		{
			[Token(Token = "0x6000415")]
			[Address(RVA = "0x106F460", Offset = "0x106F460", VA = "0x106F460")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000032")]
		public string ScmBranch
		{
			[Token(Token = "0x6000416")]
			[Address(RVA = "0x106F468", Offset = "0x106F468", VA = "0x106F468")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000033")]
		public string BuildNumber
		{
			[Token(Token = "0x6000417")]
			[Address(RVA = "0x106F470", Offset = "0x106F470", VA = "0x106F470")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000034")]
		public string BuildStartTime
		{
			[Token(Token = "0x6000418")]
			[Address(RVA = "0x106F478", Offset = "0x106F478", VA = "0x106F478")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000035")]
		public string ProjectId
		{
			[Token(Token = "0x6000419")]
			[Address(RVA = "0x106F480", Offset = "0x106F480", VA = "0x106F480")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000036")]
		public string BundleId
		{
			[Token(Token = "0x600041A")]
			[Address(RVA = "0x106F488", Offset = "0x106F488", VA = "0x106F488")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000037")]
		public string UnityVersion
		{
			[Token(Token = "0x600041B")]
			[Address(RVA = "0x106F490", Offset = "0x106F490", VA = "0x106F490")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000038")]
		public string XCodeVersion
		{
			[Token(Token = "0x600041C")]
			[Address(RVA = "0x106F498", Offset = "0x106F498", VA = "0x106F498")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000039")]
		public string CloudBuildTargetName
		{
			[Token(Token = "0x600041D")]
			[Address(RVA = "0x106F4A0", Offset = "0x106F4A0", VA = "0x106F4A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000412")]
		[Address(RVA = "0x106F2F0", Offset = "0x106F2F0", VA = "0x106F2F0")]
		public static BuildManifest Load()
		{
			return null;
		}

		[Token(Token = "0x6000413")]
		[Address(RVA = "0x106F3EC", Offset = "0x106F3EC", VA = "0x106F3EC")]
		public static bool HasBuildManifest()
		{
			return default(bool);
		}

		[Token(Token = "0x6000414")]
		[Address(RVA = "0x106F398", Offset = "0x106F398", VA = "0x106F398")]
		private static TextAsset LoadManifestAsset()
		{
			return null;
		}

		[Token(Token = "0x600041E")]
		[Address(RVA = "0x106F4A8", Offset = "0x106F4A8", VA = "0x106F4A8")]
		public BuildManifest()
		{
		}
	}
}
namespace BigCatch_Env
{
	[Token(Token = "0x20000D1")]
	public class SceneLoadButtonEnv : MonoBehaviour
	{
		[Token(Token = "0x4000538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int sceneNum;

		[Token(Token = "0x4000539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string sceneName;

		[Token(Token = "0x600041F")]
		[Address(RVA = "0x1065CCC", Offset = "0x1065CCC", VA = "0x1065CCC")]
		public void OnClick()
		{
		}

		[Token(Token = "0x6000420")]
		[Address(RVA = "0x1065E4C", Offset = "0x1065E4C", VA = "0x1065E4C")]
		public SceneLoadButtonEnv()
		{
		}
	}
	[Token(Token = "0x20000D2")]
	public class SceneLoaderEnv : MonoBehaviour
	{
		[Token(Token = "0x400053A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SceneLoaderEnv instance;

		[Token(Token = "0x400053B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isLoading;

		[Token(Token = "0x6000421")]
		[Address(RVA = "0x1065E54", Offset = "0x1065E54", VA = "0x1065E54")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000422")]
		[Address(RVA = "0x1065D0C", Offset = "0x1065D0C", VA = "0x1065D0C")]
		internal static void Load(int sceneNum)
		{
		}

		[Token(Token = "0x6000423")]
		[Address(RVA = "0x1065DAC", Offset = "0x1065DAC", VA = "0x1065DAC")]
		internal static void Load(string sceneName)
		{
		}

		[Token(Token = "0x6000424")]
		[Address(RVA = "0x1065EB4", Offset = "0x1065EB4", VA = "0x1065EB4")]
		public SceneLoaderEnv()
		{
		}
	}
}
namespace BigCatchProto
{
	[Token(Token = "0x20000D3")]
	public class BendingTest : MonoBehaviour
	{
		[Token(Token = "0x400053C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator ani;

		[Token(Token = "0x400053D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform tar3;

		[Token(Token = "0x6000425")]
		[Address(RVA = "0x1065B34", Offset = "0x1065B34", VA = "0x1065B34")]
		private void Update()
		{
		}

		[Token(Token = "0x6000426")]
		[Address(RVA = "0x1065C44", Offset = "0x1065C44", VA = "0x1065C44")]
		private void ResetBending()
		{
		}

		[Token(Token = "0x6000427")]
		[Address(RVA = "0x1065CC4", Offset = "0x1065CC4", VA = "0x1065CC4")]
		public BendingTest()
		{
		}
	}
}
namespace StylizedWaterShader
{
	[Token(Token = "0x20000D4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xABF014", Offset = "0xABF014")]
	[ExecuteInEditMode]
	public class EnableDepthBuffer : MonoBehaviour
	{
		[Token(Token = "0x400053E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Camera cam;

		[Token(Token = "0x6000428")]
		[Address(RVA = "0xFBA500", Offset = "0xFBA500", VA = "0xFBA500")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000429")]
		[Address(RVA = "0xFBA5B0", Offset = "0xFBA5B0", VA = "0xFBA5B0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600042A")]
		[Address(RVA = "0xFBA6B4", Offset = "0xFBA6B4", VA = "0xFBA6B4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600042B")]
		[Address(RVA = "0xFBA748", Offset = "0xFBA748", VA = "0xFBA748")]
		public EnableDepthBuffer()
		{
		}
	}
	[Token(Token = "0x20000D5")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xABF088", Offset = "0xABF088")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xABF088", Offset = "0xABF088")]
	public class StylizedWater : MonoBehaviour
	{
		[Token(Token = "0x400053F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] shaderNames;

		[Token(Token = "0x4000540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int shaderIndex;

		[Token(Token = "0x4000541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Shader shader;

		[Token(Token = "0x4000542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Shader DesktopShader;

		[Token(Token = "0x4000543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Shader MobileAdvancedShader;

		[Token(Token = "0x4000544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC2CD4", Offset = "0xAC2CD4")]
		public int renderQueue;

		[Token(Token = "0x4000545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool enableVertexColors;

		[Token(Token = "0x4000546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool enableDepthTex;

		[Token(Token = "0x4000547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		public bool isUnlit;

		[Token(Token = "0x4000548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
		public bool enableGradient;

		[Token(Token = "0x4000549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Gradient colorGradient;

		[Token(Token = "0x400054A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xAC2CF4", Offset = "0xAC2CF4")]
		public Color waterShallowColor;

		[Token(Token = "0x400054B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC2D0C", Offset = "0xAC2D0C")]
		public float depth;

		[Token(Token = "0x400054C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xAC2D28", Offset = "0xAC2D28")]
		public Color waterColor;

		[Token(Token = "0x400054D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xAC2D40", Offset = "0xAC2D40")]
		public Color fresnelColor;

		[Token(Token = "0x400054E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float fresnel;

		[Token(Token = "0x400054F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xAC2D58", Offset = "0xAC2D58")]
		public Color rimColor;

		[Token(Token = "0x4000550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC2D70", Offset = "0xAC2D70")]
		public float waveTint;

		[Token(Token = "0x4000551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC2D88", Offset = "0xAC2D88")]
		public float transparency;

		[Token(Token = "0x4000552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC2DA0", Offset = "0xAC2DA0")]
		public float glossiness;

		[Token(Token = "0x4000553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC2DBC", Offset = "0xAC2DBC")]
		public float metallicness;

		[Token(Token = "0x4000554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC2DD4", Offset = "0xAC2DD4")]
		public float edgeFade;

		[Token(Token = "0x4000555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public string[] tilingMethodNames;

		[Token(Token = "0x4000556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float worldSpaceTiling;

		[Token(Token = "0x4000557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC2DEC", Offset = "0xAC2DEC")]
		public float refractionAmount;

		[Token(Token = "0x4000558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool enableNormalMap;

		[Token(Token = "0x4000559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC2E08", Offset = "0xAC2E08")]
		public float normalStrength;

		[Token(Token = "0x400055A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public bool enableMacroNormals;

		[Token(Token = "0x400055B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC2E20", Offset = "0xAC2E20")]
		public float macroNormalsDistance;

		[Token(Token = "0x400055C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC2E40", Offset = "0xAC2E40")]
		public float normalTiling;

		[Token(Token = "0x400055D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public int intersectionSolver;

		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public string[] intersectionSolverNames;

		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC2E5C", Offset = "0xAC2E5C")]
		public float rimSize;

		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC2E74", Offset = "0xAC2E74")]
		public float rimFalloff;

		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public float rimTiling;

		[Token(Token = "0x4000562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC2E90", Offset = "0xAC2E90")]
		public float rimDistortion;

		[Token(Token = "0x4000563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public bool enableVCIntersection;

		[Token(Token = "0x4000564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public int foamSolver;

		[Token(Token = "0x4000565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public string[] foamSolverNames;

		[Token(Token = "0x4000566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC2EA8", Offset = "0xAC2EA8")]
		public float foamOpacity;

		[Token(Token = "0x4000567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public float foamTiling;

		[Token(Token = "0x4000568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC2EC0", Offset = "0xAC2EC0")]
		public float foamSize;

		[Token(Token = "0x4000569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC2ED8", Offset = "0xAC2ED8")]
		public float foamDistortion;

		[Token(Token = "0x400056A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC2EF0", Offset = "0xAC2EF0")]
		public float foamSpeed;

		[Token(Token = "0x400056B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC2F08", Offset = "0xAC2F08")]
		public float waveFoam;

		[Token(Token = "0x400056C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC2F20", Offset = "0xAC2F20")]
		public float reflectionStrength;

		[Token(Token = "0x400056D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC2F38", Offset = "0xAC2F38")]
		public float reflectionFresnel;

		[Token(Token = "0x400056E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public bool showReflection;

		[Token(Token = "0x400056F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC2F54", Offset = "0xAC2F54")]
		public float reflectionRefraction;

		[Token(Token = "0x4000570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC2F70", Offset = "0xAC2F70")]
		public float waveSpeed;

		[Token(Token = "0x4000571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC2F8C", Offset = "0xAC2F8C")]
		public float waveStrength;

		[Token(Token = "0x4000572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC2FA4", Offset = "0xAC2FA4")]
		public Vector4 waveDirectionXZ;

		[Token(Token = "0x4000573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public bool enableSecondaryWaves;

		[Token(Token = "0x4000574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public Texture2D customIntersection;

		[Token(Token = "0x4000575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public Texture2D customNormal;

		[Token(Token = "0x4000576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public Texture2D customHeightmap;

		[Token(Token = "0x4000577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public string[] intersectionStyleNames;

		[Token(Token = "0x4000578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public int intersectionStyle;

		[Token(Token = "0x4000579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public string[] waveStyleNames;

		[Token(Token = "0x400057A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public int waveStyle;

		[Token(Token = "0x400057B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public string[] waveHeightmapNames;

		[Token(Token = "0x400057C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public int waveHeightmapStyle;

		[Token(Token = "0x400057D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		public float waveSize;

		[Token(Token = "0x400057E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public bool useCustomIntersection;

		[Token(Token = "0x400057F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x191")]
		public bool useCustomNormals;

		[Token(Token = "0x4000580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x192")]
		public bool useCustomHeightmap;

		[Token(Token = "0x4000581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public Texture2D normals;

		[Token(Token = "0x4000582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public Texture2D shadermap;

		[Token(Token = "0x4000583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public Texture2D colorGradientTex;

		[Token(Token = "0x4000584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public bool useCompression;

		[Token(Token = "0x4000585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool EnableReflections;

		[Token(Token = "0x4000586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private Camera reflectionCamera;

		[Token(Token = "0x4000587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private Camera refractCamera;

		[Token(Token = "0x4000588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public bool useReflection;

		[Token(Token = "0x4000589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C9")]
		public bool useRefractionCam;

		[Token(Token = "0x400058A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CA")]
		public bool enableReflectionBlur;

		[Token(Token = "0x400058B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC2FBC", Offset = "0xAC2FBC")]
		public float reflectionBlurLength;

		[Token(Token = "0x400058C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC2FD4", Offset = "0xAC2FD4")]
		public int reflectionBlurPasses;

		[Token(Token = "0x400058D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private StylizedWaterBlur reflectionBlurRenderer;

		[Token(Token = "0x400058E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public string[] refractionSolverNames;

		[Token(Token = "0x400058F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public int refractionSolver;

		[Token(Token = "0x4000590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public string[] resolutionNames;

		[Token(Token = "0x4000591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public int reflectionRes;

		[Token(Token = "0x4000592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		public int refractRes;

		[Token(Token = "0x4000593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public int reflectionTextureSize;

		[Token(Token = "0x4000594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		public int refractTextureSize;

		[Token(Token = "0x4000595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC2FEC", Offset = "0xAC2FEC")]
		public float clipPlaneOffset;

		[Token(Token = "0x4000596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		public LayerMask reflectLayers;

		[Token(Token = "0x4000597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public LayerMask refractLayers;

		[Token(Token = "0x4000598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private Dictionary<Camera, Camera> m_ReflectionCameras;

		[Token(Token = "0x4000599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private Dictionary<Camera, StylizedWaterBlur> m_BlurRenderers;

		[Token(Token = "0x400059A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private Dictionary<Camera, Camera> m_RefractCameras;

		[Token(Token = "0x400059B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private RenderTexture m_ReflectionTexture;

		[Token(Token = "0x400059C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private RenderTexture m_RefractTexture;

		[Token(Token = "0x400059D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private int m_OldReflectionTextureSize;

		[Token(Token = "0x400059E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		private int m_OldRefractTextureSize;

		[Token(Token = "0x400059F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private bool s_InsideRendering;

		[Token(Token = "0x40005A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		public int lightingMethod;

		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public string[] lightingMethodNames;

		[Token(Token = "0x40005A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public bool enableShadows;

		[Token(Token = "0x40005A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private StylizedWaterShadowCaster shadowRenderer;

		[Token(Token = "0x40005A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public Light shadowCaster;

		[NonSerialized]
		[Token(Token = "0x40005A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private MeshRenderer meshRenderer;

		[Token(Token = "0x40005A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		public Material material;

		[Token(Token = "0x40005A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		public bool isMobileAdvanced;

		[Token(Token = "0x40005A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x281")]
		public bool isMobilePlatform;

		[Token(Token = "0x40005A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public string shaderName;

		[Token(Token = "0x40005AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		public bool isWaterLayer;

		[Token(Token = "0x40005AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x291")]
		public bool hasShaderParams;

		[Token(Token = "0x40005AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x292")]
		public bool hasMaterial;

		[Token(Token = "0x40005AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x293")]
		public bool usingSinglePassRendering;

		[Token(Token = "0x40005AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		public bool hideMeshRenderer;

		[Token(Token = "0x600042C")]
		[Address(RVA = "0xFBABFC", Offset = "0xFBABFC", VA = "0xFBABFC")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x600042D")]
		[Address(RVA = "0xFBAD34", Offset = "0xFBAD34", VA = "0xFBAD34")]
		public void Init()
		{
		}

		[Token(Token = "0x600042E")]
		[Address(RVA = "0xFBAC9C", Offset = "0xFBAC9C", VA = "0xFBAC9C")]
		public void GetProperties()
		{
		}

		[Token(Token = "0x600042F")]
		[Address(RVA = "0xFBAD38", Offset = "0xFBAD38", VA = "0xFBAD38")]
		private void GetShaderProperties()
		{
		}

		[Token(Token = "0x6000430")]
		[Address(RVA = "0xFBB558", Offset = "0xFBB558", VA = "0xFBB558")]
		private void GetShaderType()
		{
		}

		[Token(Token = "0x6000431")]
		[Address(RVA = "0xFBB55C", Offset = "0xFBB55C", VA = "0xFBB55C")]
		private void SetShaderType()
		{
		}

		[Token(Token = "0x6000432")]
		[Address(RVA = "0xFBACA0", Offset = "0xFBACA0", VA = "0xFBACA0")]
		public void SetProperties()
		{
		}

		[Token(Token = "0x6000433")]
		[Address(RVA = "0xFBB82C", Offset = "0xFBB82C", VA = "0xFBB82C")]
		private void SetShaderProperties()
		{
		}

		[Token(Token = "0x6000434")]
		[Address(RVA = "0xFBC2CC", Offset = "0xFBC2CC", VA = "0xFBC2CC")]
		public void DisableReflectionCam()
		{
		}

		[Token(Token = "0x6000435")]
		[Address(RVA = "0xFBC114", Offset = "0xFBC114", VA = "0xFBC114")]
		public void DisableRefractionCam()
		{
		}

		[Token(Token = "0x6000436")]
		[Address(RVA = "0xFBB560", Offset = "0xFBB560", VA = "0xFBB560")]
		private void EnableShadowRendering()
		{
		}

		[Token(Token = "0x6000437")]
		[Address(RVA = "0xFBB634", Offset = "0xFBB634", VA = "0xFBB634")]
		private void DisableShadowRendering()
		{
		}

		[Token(Token = "0x6000438")]
		[Address(RVA = "0xFBC4D8", Offset = "0xFBC4D8", VA = "0xFBC4D8")]
		public void SetVegetationStudioWaterLevel()
		{
		}

		[Token(Token = "0x6000439")]
		[Address(RVA = "0xFBC4DC", Offset = "0xFBC4DC", VA = "0xFBC4DC")]
		public void OnWillRenderObject()
		{
		}

		[Token(Token = "0x600043A")]
		[Address(RVA = "0xFBDEEC", Offset = "0xFBDEEC", VA = "0xFBDEEC")]
		public void CreateReflectionTexture()
		{
		}

		[Token(Token = "0x600043B")]
		[Address(RVA = "0xFBE020", Offset = "0xFBE020", VA = "0xFBE020")]
		public void CreateRefractionTexture()
		{
		}

		[Token(Token = "0x600043C")]
		[Address(RVA = "0xFBCC70", Offset = "0xFBCC70", VA = "0xFBCC70")]
		private void CreateWaterObjects(Camera currentCamera, out Camera reflectionCamera, out Camera refractCamera)
		{
		}

		[Token(Token = "0x600043D")]
		[Address(RVA = "0xFBE1D4", Offset = "0xFBE1D4", VA = "0xFBE1D4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600043E")]
		[Address(RVA = "0xFBE294", Offset = "0xFBE294", VA = "0xFBE294")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600043F")]
		[Address(RVA = "0xFBE298", Offset = "0xFBE298", VA = "0xFBE298")]
		public StylizedWater()
		{
		}
	}
	[Token(Token = "0x20000D6")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xABF120", Offset = "0xABF120")]
	[ExecuteInEditMode]
	public class StylizedWaterBlur : MonoBehaviour
	{
		[Token(Token = "0x40005AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera cam;

		[Token(Token = "0x40005B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float length;

		[Token(Token = "0x40005B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int passes;

		[Token(Token = "0x40005B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Shader m_BlurRenderShader;

		[Token(Token = "0x40005B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Material m_BlurRenderMat;

		[Token(Token = "0x40005B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CommandBuffer cmd;

		[Token(Token = "0x1700003A")]
		private static Shader BlurRenderShader
		{
			[Token(Token = "0x6000440")]
			[Address(RVA = "0xFBE3F4", Offset = "0xFBE3F4", VA = "0xFBE3F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003B")]
		private static Material BlurRenderMat
		{
			[Token(Token = "0x6000441")]
			[Address(RVA = "0xFBE4B0", Offset = "0xFBE4B0", VA = "0xFBE4B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000442")]
		[Address(RVA = "0xFBE5A8", Offset = "0xFBE5A8", VA = "0xFBE5A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000443")]
		[Address(RVA = "0xFBE650", Offset = "0xFBE650", VA = "0xFBE650")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000444")]
		[Address(RVA = "0xFBDB54", Offset = "0xFBDB54", VA = "0xFBDB54")]
		public void Render()
		{
		}

		[Token(Token = "0x6000445")]
		[Address(RVA = "0xFBE6FC", Offset = "0xFBE6FC", VA = "0xFBE6FC")]
		public StylizedWaterBlur()
		{
		}
	}
	[Token(Token = "0x20000D7")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xABF194", Offset = "0xABF194")]
	[ExecuteInEditMode]
	public class StylizedWaterShadowCaster : MonoBehaviour
	{
		[Token(Token = "0x40005B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CommandBuffer cmd;

		[Token(Token = "0x40005B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Light dirLight;

		[Token(Token = "0x6000446")]
		[Address(RVA = "0xFBE710", Offset = "0xFBE710", VA = "0xFBE710")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000447")]
		[Address(RVA = "0xFBE8C8", Offset = "0xFBE8C8", VA = "0xFBE8C8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000448")]
		[Address(RVA = "0xFBE958", Offset = "0xFBE958", VA = "0xFBE958")]
		public StylizedWaterShadowCaster()
		{
		}
	}
	[Token(Token = "0x20000D8")]
	public static class StylizedWaterUtilities
	{
		[Token(Token = "0x2000428")]
		public static class CameraUtils
		{
			[Token(Token = "0x6001CE5")]
			[Address(RVA = "0xFBD974", Offset = "0xFBD974", VA = "0xFBD974")]
			public static Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign, float clipPlaneOffset)
			{
				return default(Vector4);
			}

			[Token(Token = "0x6001CE6")]
			[Address(RVA = "0xFBD6D0", Offset = "0xFBD6D0", VA = "0xFBD6D0")]
			public static void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
			{
			}

			[Token(Token = "0x6001CE7")]
			[Address(RVA = "0xFBD538", Offset = "0xFBD538", VA = "0xFBD538")]
			public static void CopyCameraSettings(Camera src, Camera dest)
			{
			}
		}

		[Token(Token = "0x40005B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool DEBUG;

		[Token(Token = "0x6000449")]
		[Address(RVA = "0xFBE960", Offset = "0xFBE960", VA = "0xFBE960")]
		public static string[] ComposeDropdown(Texture2D[] resource, string replaceFilter)
		{
			return null;
		}

		[Token(Token = "0x600044A")]
		[Address(RVA = "0xFBEB90", Offset = "0xFBEB90", VA = "0xFBEB90")]
		public static bool IsApproximatelyEqual(float a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x600044B")]
		[Address(RVA = "0xFBEC10", Offset = "0xFBEC10", VA = "0xFBEC10")]
		public static bool HasVertexColors(Mesh mesh)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000D9")]
	public class OrbitCamera : MonoBehaviour
	{
		[Token(Token = "0x40005B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC3004", Offset = "0xAC3004")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xAC3004", Offset = "0xAC3004")]
		public Transform pivot;

		[Token(Token = "0x40005B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xAC3050", Offset = "0xAC3050")]
		public bool enableMouse;

		[Token(Token = "0x40005BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float idleRotationSpeed;

		[Token(Token = "0x40005BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform cam;

		[Token(Token = "0x40005BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float cameraRotSide;

		[Token(Token = "0x40005BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float cameraRotUp;

		[Token(Token = "0x40005BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float cameraRotSideCur;

		[Token(Token = "0x40005BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float cameraRotUpCur;

		[Token(Token = "0x40005C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float distance;

		[Token(Token = "0x600044D")]
		[Address(RVA = "0xFBA750", Offset = "0xFBA750", VA = "0xFBA750")]
		private void Start()
		{
		}

		[Token(Token = "0x600044E")]
		[Address(RVA = "0xFBA81C", Offset = "0xFBA81C", VA = "0xFBA81C")]
		private void Update()
		{
		}

		[Token(Token = "0x600044F")]
		[Address(RVA = "0xFBABE0", Offset = "0xFBABE0", VA = "0xFBABE0")]
		public OrbitCamera()
		{
		}
	}
}
namespace UnityStandardAssets.SceneUtils
{
	[Token(Token = "0x20000DA")]
	public class ParticleSceneControls : MonoBehaviour
	{
		[Token(Token = "0x2000429")]
		public enum Mode
		{
			[Token(Token = "0x4001BFB")]
			Activate,
			[Token(Token = "0x4001BFC")]
			Instantiate,
			[Token(Token = "0x4001BFD")]
			Trail
		}

		[Token(Token = "0x200042A")]
		public enum AlignMode
		{
			[Token(Token = "0x4001BFF")]
			Normal,
			[Token(Token = "0x4001C00")]
			Up
		}

		[Serializable]
		[Token(Token = "0x200042B")]
		public class DemoParticleSystem
		{
			[Token(Token = "0x4001C01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x4001C02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Mode mode;

			[Token(Token = "0x4001C03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public AlignMode align;

			[Token(Token = "0x4001C04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int maxCount;

			[Token(Token = "0x4001C05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float minDist;

			[Token(Token = "0x4001C06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int camOffset;

			[Token(Token = "0x4001C07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string instructionText;

			[Token(Token = "0x6001CE8")]
			[Address(RVA = "0x14FD334", Offset = "0x14FD334", VA = "0x14FD334")]
			public DemoParticleSystem()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200042C")]
		public class DemoParticleSystemList
		{
			[Token(Token = "0x4001C08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DemoParticleSystem[] items;

			[Token(Token = "0x6001CE9")]
			[Address(RVA = "0x14FD344", Offset = "0x14FD344", VA = "0x14FD344")]
			public DemoParticleSystemList()
			{
			}
		}

		[Token(Token = "0x40005C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DemoParticleSystemList demoParticles;

		[Token(Token = "0x40005C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float spawnOffset;

		[Token(Token = "0x40005C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float multiply;

		[Token(Token = "0x40005C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool clearOnChange;

		[Token(Token = "0x40005C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text titleText;

		[Token(Token = "0x40005C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform sceneCamera;

		[Token(Token = "0x40005C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Text instructionText;

		[Token(Token = "0x40005C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Button previousButton;

		[Token(Token = "0x40005C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Button nextButton;

		[Token(Token = "0x40005CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GraphicRaycaster graphicRaycaster;

		[Token(Token = "0x40005CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public EventSystem eventSystem;

		[Token(Token = "0x40005CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ParticleSystemMultiplier m_ParticleMultiplier;

		[Token(Token = "0x40005CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<Transform> m_CurrentParticleList;

		[Token(Token = "0x40005CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform m_Instance;

		[Token(Token = "0x40005CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int s_SelectedIndex;

		[Token(Token = "0x40005D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 m_CamOffsetVelocity;

		[Token(Token = "0x40005D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 m_LastPos;

		[Token(Token = "0x40005D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static DemoParticleSystem s_Selected;

		[Token(Token = "0x6000450")]
		[Address(RVA = "0x14FC288", Offset = "0x14FC288", VA = "0x14FC288")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000451")]
		[Address(RVA = "0x14FC6DC", Offset = "0x14FC6DC", VA = "0x14FC6DC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000452")]
		[Address(RVA = "0x14FC7B4", Offset = "0x14FC7B4", VA = "0x14FC7B4")]
		private void Previous()
		{
		}

		[Token(Token = "0x6000453")]
		[Address(RVA = "0x14FC8A8", Offset = "0x14FC8A8", VA = "0x14FC8A8")]
		public void Next()
		{
		}

		[Token(Token = "0x6000454")]
		[Address(RVA = "0x14FC990", Offset = "0x14FC990", VA = "0x14FC990")]
		private void Update()
		{
		}

		[Token(Token = "0x6000455")]
		[Address(RVA = "0x14FD140", Offset = "0x14FD140", VA = "0x14FD140")]
		private bool CheckForGuiCollision()
		{
			return default(bool);
		}

		[Token(Token = "0x6000456")]
		[Address(RVA = "0x14FC394", Offset = "0x14FC394", VA = "0x14FC394")]
		private void Select(int i)
		{
		}

		[Token(Token = "0x6000457")]
		[Address(RVA = "0x14FD278", Offset = "0x14FD278", VA = "0x14FD278")]
		public ParticleSceneControls()
		{
		}
	}
	[Token(Token = "0x20000DB")]
	public class PlaceTargetWithMouse : MonoBehaviour
	{
		[Token(Token = "0x40005D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float surfaceOffset;

		[Token(Token = "0x40005D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject setTargetOn;

		[Token(Token = "0x6000459")]
		[Address(RVA = "0x14FD34C", Offset = "0x14FD34C", VA = "0x14FD34C")]
		private void Update()
		{
		}

		[Token(Token = "0x600045A")]
		[Address(RVA = "0x14FD538", Offset = "0x14FD538", VA = "0x14FD538")]
		public PlaceTargetWithMouse()
		{
		}
	}
	[Token(Token = "0x20000DC")]
	public class SlowMoButton : MonoBehaviour
	{
		[Token(Token = "0x40005D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite FullSpeedTex;

		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sprite SlowSpeedTex;

		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fullSpeed;

		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float slowSpeed;

		[Token(Token = "0x40005D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Button button;

		[Token(Token = "0x40005DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_SlowMo;

		[Token(Token = "0x600045B")]
		[Address(RVA = "0x14FD548", Offset = "0x14FD548", VA = "0x14FD548")]
		private void Start()
		{
		}

		[Token(Token = "0x600045C")]
		[Address(RVA = "0x14FD550", Offset = "0x14FD550", VA = "0x14FD550")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600045D")]
		[Address(RVA = "0x14FD55C", Offset = "0x14FD55C", VA = "0x14FD55C")]
		public void ChangeSpeed()
		{
		}

		[Token(Token = "0x600045E")]
		[Address(RVA = "0x14FD684", Offset = "0x14FD684", VA = "0x14FD684")]
		public SlowMoButton()
		{
		}
	}
}
namespace RogoDigital
{
	[Token(Token = "0x20000DD")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xABF208", Offset = "0xABF208")]
	public class EyeController : BlendSystemUser
	{
		[Token(Token = "0x200042D")]
		public enum ControlMode
		{
			[Token(Token = "0x4001C0A")]
			Classic,
			[Token(Token = "0x4001C0B")]
			PoseBased
		}

		[Token(Token = "0x200042E")]
		public enum Axis
		{
			[Token(Token = "0x4001C0D")]
			X_Positive,
			[Token(Token = "0x4001C0E")]
			X_Negative,
			[Token(Token = "0x4001C0F")]
			Y_Positive,
			[Token(Token = "0x4001C10")]
			Y_Negative,
			[Token(Token = "0x4001C11")]
			Z_Positive,
			[Token(Token = "0x4001C12")]
			Z_Negative
		}

		[Token(Token = "0x200042F")]
		public class BoneShapeInfo
		{
			[Token(Token = "0x4001C13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Transform bone;

			[Token(Token = "0x4001C14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Vector3 m_storedPosition;

			[Token(Token = "0x4001C15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private Quaternion m_storedRotation;

			[Token(Token = "0x4001C16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 targetPosition;

			[Token(Token = "0x4001C17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Quaternion targetRotation;

			[Token(Token = "0x170002A5")]
			public Vector3 storedPosition
			{
				[Token(Token = "0x6001CEA")]
				[Address(RVA = "0x145EBC8", Offset = "0x145EBC8", VA = "0x145EBC8")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6001CEB")]
				[Address(RVA = "0x145D660", Offset = "0x145D660", VA = "0x145D660")]
				set
				{
				}
			}

			[Token(Token = "0x170002A6")]
			public Quaternion storedRotation
			{
				[Token(Token = "0x6001CEC")]
				[Address(RVA = "0x145EBD4", Offset = "0x145EBD4", VA = "0x145EBD4")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x6001CED")]
				[Address(RVA = "0x145D688", Offset = "0x145D688", VA = "0x145D688")]
				set
				{
				}
			}

			[Token(Token = "0x6001CEE")]
			[Address(RVA = "0x1458580", Offset = "0x1458580", VA = "0x1458580")]
			public BoneShapeInfo(BoneShape boneShape)
			{
			}
		}

		[Token(Token = "0x2000430")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0B58", Offset = "0xAC0B58")]
		private sealed class <CloseEyes>d__58 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EyeController <>4__this;

			[Token(Token = "0x4001C1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <end>5__2;

			[Token(Token = "0x170002A7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CF2")]
				[Address(RVA = "0x145E25C", Offset = "0x145E25C", VA = "0x145E25C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CF4")]
				[Address(RVA = "0x145E2C4", Offset = "0x145E2C4", VA = "0x145E2C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CEF")]
			[Address(RVA = "0x145D6B0", Offset = "0x145D6B0", VA = "0x145D6B0")]
			[DebuggerHidden]
			public <CloseEyes>d__58(int <>1__state)
			{
			}

			[Token(Token = "0x6001CF0")]
			[Address(RVA = "0x145D9D0", Offset = "0x145D9D0", VA = "0x145D9D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CF1")]
			[Address(RVA = "0x145D9D4", Offset = "0x145D9D4", VA = "0x145D9D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CF3")]
			[Address(RVA = "0x145E264", Offset = "0x145E264", VA = "0x145E264", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000431")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0B68", Offset = "0xAC0B68")]
		private sealed class <OpenEyes>d__59 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EyeController <>4__this;

			[Token(Token = "0x4001C1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <end>5__2;

			[Token(Token = "0x170002A9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CF8")]
				[Address(RVA = "0x145EB58", Offset = "0x145EB58", VA = "0x145EB58", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CFA")]
				[Address(RVA = "0x145EBC0", Offset = "0x145EBC0", VA = "0x145EBC0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CF5")]
			[Address(RVA = "0x145D6DC", Offset = "0x145D6DC", VA = "0x145D6DC")]
			[DebuggerHidden]
			public <OpenEyes>d__59(int <>1__state)
			{
			}

			[Token(Token = "0x6001CF6")]
			[Address(RVA = "0x145E2CC", Offset = "0x145E2CC", VA = "0x145E2CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CF7")]
			[Address(RVA = "0x145E2D0", Offset = "0x145E2D0", VA = "0x145E2D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CF9")]
			[Address(RVA = "0x145EB60", Offset = "0x145EB60", VA = "0x145EB60", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool blinkingEnabled;

		[Token(Token = "0x40005DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public ControlMode blinkingControlMode;

		[Token(Token = "0x40005DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Shape blinkingShape;

		[Token(Token = "0x40005DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xAC3060", Offset = "0xAC3060")]
		public int leftEyeBlinkBlendable;

		[Token(Token = "0x40005DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xAC3098", Offset = "0xAC3098")]
		public int rightEyeBlinkBlendable;

		[Token(Token = "0x40005E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float minimumBlinkGap;

		[Token(Token = "0x40005E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float maximumBlinkGap;

		[Token(Token = "0x40005E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xAC30D0", Offset = "0xAC30D0")]
		public float blinkDuration;

		[Token(Token = "0x40005E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool randomLookingEnabled;

		[Token(Token = "0x40005E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ControlMode lookingControlMode;

		[Token(Token = "0x40005E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Shape lookingUpShape;

		[Token(Token = "0x40005E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Shape lookingDownShape;

		[Token(Token = "0x40005E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Shape lookingLeftShape;

		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Shape lookingRightShape;

		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xAC3108", Offset = "0xAC3108")]
		private Transform _leftEyeLookAtBone;

		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xAC3154", Offset = "0xAC3154")]
		private Transform _rightEyeLookAtBone;

		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Vector2 eyeRotationRangeX;

		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Vector2 eyeRotationRangeY;

		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Vector3 eyeLookOffset;

		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Axis eyeForwardAxis;

		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float eyeTurnSpeed;

		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float minimumChangeDirectionGap;

		[Token(Token = "0x40005F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float maximumChangeDirectionGap;

		[Token(Token = "0x40005F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public bool targetEnabled;

		[Token(Token = "0x40005F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		public bool autoTarget;

		[Token(Token = "0x40005F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public string autoTargetTag;

		[Token(Token = "0x40005F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float autoTargetDistance;

		[Token(Token = "0x40005F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Transform viewTarget;

		[Token(Token = "0x40005F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float targetWeight;

		[Token(Token = "0x40005F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public bool boneUpdateAnimation;

		[Token(Token = "0x40005F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float blinkTimer;

		[Token(Token = "0x40005FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private bool blinking;

		[Token(Token = "0x40005FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
		private bool _keepEyesClosed;

		[Token(Token = "0x40005FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD6")]
		private bool _asyncBlending;

		[Token(Token = "0x40005FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Transform leftEyeDummy;

		[Token(Token = "0x40005FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Transform rightEyeDummy;

		[Token(Token = "0x40005FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Quaternion leftRotation;

		[Token(Token = "0x4000600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Quaternion rightRotation;

		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Vector3[] axisOffsets;

		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float lookTimer;

		[Token(Token = "0x4000603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private Quaternion randomAngle;

		[Token(Token = "0x4000604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private Vector2 randomBlend;

		[Token(Token = "0x4000605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Transform target;

		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Quaternion leftTargetAngle;

		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Quaternion rightTargetAngle;

		[Token(Token = "0x4000608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Transform[] markedTargets;

		[Token(Token = "0x4000609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Dictionary<Transform, BoneShapeInfo> boneShapes;

		[Token(Token = "0x1700003C")]
		public bool keepEyesClosed
		{
			[Token(Token = "0x600045F")]
			[Address(RVA = "0x1457448", Offset = "0x1457448", VA = "0x1457448")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000460")]
			[Address(RVA = "0x1457450", Offset = "0x1457450", VA = "0x1457450")]
			set
			{
			}
		}

		[Token(Token = "0x1700003D")]
		public Transform LeftEyeLookAtBone
		{
			[Token(Token = "0x6000461")]
			[Address(RVA = "0x14575B0", Offset = "0x14575B0", VA = "0x14575B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000462")]
			[Address(RVA = "0x14575B8", Offset = "0x14575B8", VA = "0x14575B8")]
			set
			{
			}
		}

		[Token(Token = "0x1700003E")]
		public Transform RightEyeLookAtBone
		{
			[Token(Token = "0x6000463")]
			[Address(RVA = "0x1457AC4", Offset = "0x1457AC4", VA = "0x1457AC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000464")]
			[Address(RVA = "0x1457ACC", Offset = "0x1457ACC", VA = "0x1457ACC")]
			set
			{
			}
		}

		[Token(Token = "0x6000465")]
		[Address(RVA = "0x1457B84", Offset = "0x1457B84", VA = "0x1457B84")]
		private void Start()
		{
		}

		[Token(Token = "0x6000466")]
		[Address(RVA = "0x1458658", Offset = "0x1458658", VA = "0x1458658")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000467")]
		[Address(RVA = "0x14574B8", Offset = "0x14574B8", VA = "0x14574B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACA0FC", Offset = "0xACA0FC")]
		private IEnumerator CloseEyes()
		{
			return null;
		}

		[Token(Token = "0x6000468")]
		[Address(RVA = "0x1457534", Offset = "0x1457534", VA = "0x1457534")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACA160", Offset = "0xACA160")]
		private IEnumerator OpenEyes()
		{
			return null;
		}

		[Token(Token = "0x6000469")]
		[Address(RVA = "0x1457670", Offset = "0x1457670", VA = "0x1457670")]
		private void FixDummyHierarchy()
		{
		}

		[Token(Token = "0x600046A")]
		[Address(RVA = "0x1458458", Offset = "0x1458458", VA = "0x1458458")]
		public void FindTargets()
		{
		}

		[Token(Token = "0x600046B")]
		[Address(RVA = "0x145D554", Offset = "0x145D554", VA = "0x145D554")]
		public static Vector3 Vector3LerpAngle(Vector3 a, Vector3 b, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600046C")]
		[Address(RVA = "0x145D708", Offset = "0x145D708", VA = "0x145D708")]
		public void SetLookAtAmount(float amount)
		{
		}

		[Token(Token = "0x600046D")]
		[Address(RVA = "0x145D710", Offset = "0x145D710", VA = "0x145D710")]
		public EyeController()
		{
		}
	}
}
namespace RogoDigital.Lipsync
{
	[Token(Token = "0x20000DE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xABF240", Offset = "0xABF240")]
	public class AdvancedBlendshapeBlendSystem : BlendSystem
	{
		[Token(Token = "0x400060A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private BlendshapeManager manager;

		[Token(Token = "0x600046E")]
		[Address(RVA = "0x145EBE0", Offset = "0x145EBE0", VA = "0x145EBE0", Slot = "4")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x600046F")]
		[Address(RVA = "0x145EE04", Offset = "0x145EE04", VA = "0x145EE04", Slot = "9")]
		public override string[] GetBlendables()
		{
			return null;
		}

		[Token(Token = "0x6000470")]
		[Address(RVA = "0x145F164", Offset = "0x145F164", VA = "0x145F164", Slot = "5")]
		public override void SetBlendableValue(int blendable, float value)
		{
		}

		[Token(Token = "0x6000471")]
		[Address(RVA = "0x145F388", Offset = "0x145F388", VA = "0x145F388")]
		public AdvancedBlendshapeBlendSystem()
		{
		}
	}
	[Token(Token = "0x20000DF")]
	public class BlendshapeBlendSystem : BlendSystem
	{
		[Token(Token = "0x400060B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SkinnedMeshRenderer characterMesh;

		[Token(Token = "0x400060C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SkinnedMeshRenderer[] optionalOtherMeshes;

		[Token(Token = "0x400060D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool wireframeVisible;

		[Token(Token = "0x6000472")]
		[Address(RVA = "0x145FE94", Offset = "0x145FE94", VA = "0x145FE94", Slot = "4")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6000473")]
		[Address(RVA = "0x145FF60", Offset = "0x145FF60", VA = "0x145FF60", Slot = "5")]
		public override void SetBlendableValue(int blendable, float value)
		{
		}

		[Token(Token = "0x6000474")]
		[Address(RVA = "0x14600A0", Offset = "0x14600A0", VA = "0x14600A0", Slot = "9")]
		public override string[] GetBlendables()
		{
			return null;
		}

		[Token(Token = "0x6000475")]
		[Address(RVA = "0x1460294", Offset = "0x1460294", VA = "0x1460294", Slot = "6")]
		public override void OnVariableChanged()
		{
		}

		[Token(Token = "0x6000476")]
		[Address(RVA = "0x1460310", Offset = "0x1460310", VA = "0x1460310")]
		[AttributeAttribute(Name = "BlendSystemButton", RVA = "0xACA1C4", Offset = "0xACA1C4")]
		public void ToggleWireframe()
		{
		}

		[Token(Token = "0x6000477")]
		[Address(RVA = "0x1460394", Offset = "0x1460394", VA = "0x1460394")]
		public BlendshapeBlendSystem()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000E0")]
	public class BlendshapeManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000432")]
		public struct AdvancedBlendShape
		{
			[Token(Token = "0x4001C20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x4001C21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public BlendShapeMapping[] mappings;
		}

		[Serializable]
		[Token(Token = "0x2000433")]
		public struct BlendShapeMapping
		{
			[Token(Token = "0x4001C22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SkinnedMeshRenderer skinnedMeshRenderer;

			[Token(Token = "0x4001C23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int blendShapeIndex;
		}

		[Token(Token = "0x400060E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xAC31B0", Offset = "0xAC31B0")]
		public AdvancedBlendShape[] blendShapes;

		[Token(Token = "0x400060F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public AdvancedBlendshapeBlendSystem blendSystem;

		[Token(Token = "0x6000478")]
		[Address(RVA = "0x14603A0", Offset = "0x14603A0", VA = "0x14603A0")]
		public BlendshapeManager()
		{
		}
	}
	[Token(Token = "0x20000E1")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xABF2A4", Offset = "0xABF2A4")]
	public class SpriteBlendSystem : BlendSystem
	{
		[Token(Token = "0x4000610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private SpriteManager manager;

		[Token(Token = "0x6000479")]
		[Address(RVA = "0xFB04A8", Offset = "0xFB04A8", VA = "0xFB04A8", Slot = "4")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x600047A")]
		[Address(RVA = "0xFB065C", Offset = "0xFB065C", VA = "0xFB065C", Slot = "5")]
		public override void SetBlendableValue(int blendable, float value)
		{
		}

		[Token(Token = "0x600047B")]
		[Address(RVA = "0xFB08F4", Offset = "0xFB08F4", VA = "0xFB08F4", Slot = "9")]
		public override string[] GetBlendables()
		{
			return null;
		}

		[Token(Token = "0x600047C")]
		[Address(RVA = "0xFB0D68", Offset = "0xFB0D68", VA = "0xFB0D68", Slot = "6")]
		public override void OnVariableChanged()
		{
		}

		[Token(Token = "0x600047D")]
		[Address(RVA = "0xFB0D74", Offset = "0xFB0D74", VA = "0xFB0D74")]
		[AttributeAttribute(Name = "BlendSystemButton", RVA = "0xACA1FC", Offset = "0xACA1FC")]
		public void ShowHelp()
		{
		}

		[Token(Token = "0x600047E")]
		[Address(RVA = "0xFB0DC0", Offset = "0xFB0DC0", VA = "0xFB0DC0")]
		public SpriteBlendSystem()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000E2")]
	public class SpriteManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000434")]
		public class SpriteGroup
		{
			[Token(Token = "0x4001C24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public string groupName;

			[Token(Token = "0x4001C25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			public SpriteRenderer spriteRenderer;

			[Token(Token = "0x4001C26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			public Sprite defaultSprite;

			[Token(Token = "0x6001CFB")]
			[Address(RVA = "0xFB0E78", Offset = "0xFB0E78", VA = "0xFB0E78")]
			public SpriteGroup(string groupName)
			{
			}
		}

		[Token(Token = "0x4000611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public List<Sprite> availableSprites;

		[Token(Token = "0x4000612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public List<SpriteGroup> groups;

		[Token(Token = "0x4000613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SpriteBlendSystem blendSystem;

		[Token(Token = "0x600047F")]
		[Address(RVA = "0xFB0DC8", Offset = "0xFB0DC8", VA = "0xFB0DC8")]
		public SpriteManager()
		{
		}
	}
	[Token(Token = "0x20000E3")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xABF308", Offset = "0xABF308")]
	public class TextureOffsetBlendSystem : BlendSystem
	{
		[Token(Token = "0x4000614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private TextureOffsetManager manager;

		[Token(Token = "0x4000615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<int, int> groupLookup;

		[Token(Token = "0x4000616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Dictionary<string, int> reverseGroupLookup;

		[Token(Token = "0x6000480")]
		[Address(RVA = "0xFB11A8", Offset = "0xFB11A8", VA = "0xFB11A8", Slot = "4")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6000481")]
		[Address(RVA = "0xFB1364", Offset = "0xFB1364", VA = "0xFB1364")]
		private void CacheGroups()
		{
		}

		[Token(Token = "0x6000482")]
		[Address(RVA = "0xFB1714", Offset = "0xFB1714", VA = "0xFB1714", Slot = "5")]
		public override void SetBlendableValue(int blendable, float value)
		{
		}

		[Token(Token = "0x6000483")]
		[Address(RVA = "0xFB1A88", Offset = "0xFB1A88", VA = "0xFB1A88", Slot = "9")]
		public override string[] GetBlendables()
		{
			return null;
		}

		[Token(Token = "0x6000484")]
		[Address(RVA = "0xFB1EC4", Offset = "0xFB1EC4", VA = "0xFB1EC4", Slot = "6")]
		public override void OnVariableChanged()
		{
		}

		[Token(Token = "0x6000485")]
		[Address(RVA = "0xFB1ED0", Offset = "0xFB1ED0", VA = "0xFB1ED0")]
		public TextureOffsetBlendSystem()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000E4")]
	public class TextureOffsetManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000435")]
		public class MaterialTextureGroup
		{
			[Token(Token = "0x4001C27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public string displayName;

			[Token(Token = "0x4001C28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xAC8AC8", Offset = "0xAC8AC8")]
			[SerializeField]
			public Material material;

			[Token(Token = "0x4001C29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			public string texturePropertyName;

			[Token(Token = "0x4001C2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xAC8B10", Offset = "0xAC8B10")]
			[SerializeField]
			public Texture2D defaultTexture;

			[Token(Token = "0x4001C2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			public Vector2 defaultTextureOffset;

			[Token(Token = "0x4001C2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			public Vector2 defaultTextureScale;

			[Token(Token = "0x4001C2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xAC8B68", Offset = "0xAC8B68")]
			[SerializeField]
			public TextureSetting[] textureSettings;

			[Token(Token = "0x6001CFC")]
			[Address(RVA = "0xFB1F44", Offset = "0xFB1F44", VA = "0xFB1F44")]
			public MaterialTextureGroup()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000436")]
		public class TextureSetting
		{
			[Token(Token = "0x4001C2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public string displayName;

			[Token(Token = "0x4001C2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xAC8BB0", Offset = "0xAC8BB0")]
			[SerializeField]
			public Texture2D texture;

			[Token(Token = "0x4001C30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			public Vector2 textureOffset;

			[Token(Token = "0x4001C31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			public Vector2 textureScale;

			[Token(Token = "0x6001CFD")]
			[Address(RVA = "0xFB1FB8", Offset = "0xFB1FB8", VA = "0xFB1FB8")]
			public TextureSetting()
			{
			}
		}

		[Token(Token = "0x4000617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public MaterialTextureGroup[] materialGroups;

		[Token(Token = "0x4000618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public TextureOffsetBlendSystem blendSystem;

		[Token(Token = "0x6000486")]
		[Address(RVA = "0xFB1ED8", Offset = "0xFB1ED8", VA = "0xFB1ED8")]
		public TextureOffsetManager()
		{
		}
	}
	[Token(Token = "0x20000E5")]
	[ExecuteInEditMode]
	public class BlendSystem : MonoBehaviour
	{
		[Token(Token = "0x2000437")]
		public delegate void BlendSystemGenericDelegate();

		[NonSerialized]
		[Token(Token = "0x4000619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string blendableDisplayName;

		[NonSerialized]
		[Token(Token = "0x400061A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string blendableDisplayNamePlural;

		[NonSerialized]
		[Token(Token = "0x400061B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string noBlendablesMessage;

		[NonSerialized]
		[Token(Token = "0x400061C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string notReadyMessage;

		[NonSerialized]
		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float blendRangeLow;

		[NonSerialized]
		[Token(Token = "0x400061E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float blendRangeHigh;

		[NonSerialized]
		[Token(Token = "0x400061F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool allowResyncing;

		[Token(Token = "0x4000620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool isReady;

		[Token(Token = "0x4000621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public BlendSystemUser[] users;

		[Token(Token = "0x4000622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public BlendSystemGenericDelegate onBlendablesChanged;

		[Token(Token = "0x4000623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[HideInInspector]
		private List<Blendable> _blendables;

		[Token(Token = "0x1700003F")]
		public int blendableCount
		{
			[Token(Token = "0x6000487")]
			[Address(RVA = "0x145EFFC", Offset = "0x145EFFC", VA = "0x145EFFC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000488")]
		[Address(RVA = "0x145EDC0", Offset = "0x145EDC0", VA = "0x145EDC0", Slot = "4")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000489")]
		[Address(RVA = "0x145F460", Offset = "0x145F460", VA = "0x145F460")]
		public void Register(BlendSystemUser user)
		{
		}

		[Token(Token = "0x600048A")]
		[Address(RVA = "0x145F77C", Offset = "0x145F77C", VA = "0x145F77C")]
		public void Unregister(BlendSystemUser user)
		{
		}

		[Token(Token = "0x600048B")]
		[Address(RVA = "0x145F994", Offset = "0x145F994", VA = "0x145F994", Slot = "5")]
		public virtual void SetBlendableValue(int blendable, float value)
		{
		}

		[Token(Token = "0x600048C")]
		[Address(RVA = "0x145D498", Offset = "0x145D498", VA = "0x145D498")]
		public float GetBlendableValue(int blendable)
		{
			return default(float);
		}

		[Token(Token = "0x600048D")]
		[Address(RVA = "0x145F998", Offset = "0x145F998", VA = "0x145F998", Slot = "6")]
		public virtual void OnVariableChanged()
		{
		}

		[Token(Token = "0x600048E")]
		[Address(RVA = "0x145F99C", Offset = "0x145F99C", VA = "0x145F99C", Slot = "7")]
		public virtual void OnBlendSystemAdded()
		{
		}

		[Token(Token = "0x600048F")]
		[Address(RVA = "0x145F9A0", Offset = "0x145F9A0", VA = "0x145F9A0", Slot = "8")]
		public virtual void OnBlendSystemRemoved()
		{
		}

		[Token(Token = "0x6000490")]
		[Address(RVA = "0x145F9A4", Offset = "0x145F9A4", VA = "0x145F9A4", Slot = "9")]
		public virtual string[] GetBlendables()
		{
			return null;
		}

		[Token(Token = "0x6000491")]
		[Address(RVA = "0x145F9AC", Offset = "0x145F9AC", VA = "0x145F9AC", Slot = "10")]
		public virtual void OnBlendableAddedToPose(int blendable)
		{
		}

		[Token(Token = "0x6000492")]
		[Address(RVA = "0x145F9B0", Offset = "0x145F9B0", VA = "0x145F9B0", Slot = "11")]
		public virtual void OnBlendableRemovedFromPose(int blendable)
		{
		}

		[Token(Token = "0x6000493")]
		[Address(RVA = "0x145F088", Offset = "0x145F088", VA = "0x145F088")]
		public void AddBlendable(int blendable, float currentValue)
		{
		}

		[Token(Token = "0x6000494")]
		[Address(RVA = "0x145F9F0", Offset = "0x145F9F0", VA = "0x145F9F0")]
		public void ClearBlendables()
		{
		}

		[Token(Token = "0x6000495")]
		[Address(RVA = "0x145F288", Offset = "0x145F288", VA = "0x145F288")]
		public void SetInternalValue(int blendable, float value)
		{
		}

		[Token(Token = "0x6000496")]
		[Address(RVA = "0x145F38C", Offset = "0x145F38C", VA = "0x145F38C")]
		public BlendSystem()
		{
		}
	}
	[Token(Token = "0x20000E6")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xABF37C", Offset = "0xABF37C")]
	public class BlendSystemButton : Attribute
	{
		[Token(Token = "0x2000438")]
		public struct Reference
		{
			[Token(Token = "0x4001C32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string displayName;

			[Token(Token = "0x4001C33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MethodInfo method;

			[Token(Token = "0x6001D02")]
			[Address(RVA = "0x145FCEC", Offset = "0x145FCEC", VA = "0x145FCEC")]
			public Reference(string displayName, MethodInfo method)
			{
			}
		}

		[Token(Token = "0x4000624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string displayName;

		[Token(Token = "0x6000497")]
		[Address(RVA = "0x145FCB8", Offset = "0x145FCB8", VA = "0x145FCB8")]
		public BlendSystemButton(string displayName)
		{
		}
	}
	[Token(Token = "0x20000E7")]
	public class BlendSystemUser : MonoBehaviour
	{
		[Token(Token = "0x4000625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BlendSystem blendSystem;

		[Token(Token = "0x6000498")]
		[Address(RVA = "0x145FD20", Offset = "0x145FD20", VA = "0x145FD20")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x6000499")]
		[Address(RVA = "0x145FD3C", Offset = "0x145FD3C", VA = "0x145FD3C")]
		protected void CleanUpBlendSystems()
		{
		}

		[Token(Token = "0x600049A")]
		[Address(RVA = "0x145D9C8", Offset = "0x145D9C8", VA = "0x145D9C8")]
		public BlendSystemUser()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000E8")]
	public class Blendable
	{
		[Token(Token = "0x4000626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int number;

		[Token(Token = "0x4000627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float currentWeight;

		[Token(Token = "0x600049B")]
		[Address(RVA = "0x145F9B4", Offset = "0x145F9B4", VA = "0x145F9B4")]
		public Blendable(int number, float currentWeight)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000E9")]
	public class BoneShape
	{
		[Token(Token = "0x4000628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public Transform bone;

		[Token(Token = "0x4000629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Vector3 endPosition;

		[Token(Token = "0x400062A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		public Vector3 endRotation;

		[Token(Token = "0x400062B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public Vector3 endScale;

		[Token(Token = "0x400062C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		public bool lockPosition;

		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[SerializeField]
		public bool lockRotation;

		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		[SerializeField]
		public bool lockScale;

		[Token(Token = "0x400062F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 neutralPosition;

		[Token(Token = "0x4000630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 neutralRotation;

		[Token(Token = "0x4000631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 neutralScale;

		[Token(Token = "0x600049C")]
		[Address(RVA = "0x146040C", Offset = "0x146040C", VA = "0x146040C")]
		public void SetNeutral()
		{
		}

		[Token(Token = "0x600049D")]
		[Address(RVA = "0x14604D0", Offset = "0x14604D0", VA = "0x14604D0")]
		public BoneShape(Transform bone, Vector3 endPosition, Vector3 endRotation, Vector3 endScale)
		{
		}

		[Token(Token = "0x600049E")]
		[Address(RVA = "0x14605D4", Offset = "0x14605D4", VA = "0x14605D4")]
		public BoneShape(Transform bone, Vector3 endPosition, Vector3 endRotation)
		{
		}

		[Token(Token = "0x600049F")]
		[Address(RVA = "0x14606D8", Offset = "0x14606D8", VA = "0x14606D8")]
		public BoneShape()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000EA")]
	public class EmotionMarker
	{
		[Token(Token = "0x4000632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public string emotion;

		[Token(Token = "0x4000633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public bool isMixer;

		[Token(Token = "0x4000634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public EmotionMixer mixer;

		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public float startTime;

		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public float endTime;

		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public float blendInTime;

		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		public float blendOutTime;

		[Token(Token = "0x4000639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public bool blendToMarker;

		[Token(Token = "0x400063A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[SerializeField]
		public bool blendFromMarker;

		[Token(Token = "0x400063B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		[SerializeField]
		public bool customBlendIn;

		[Token(Token = "0x400063C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		[SerializeField]
		public bool customBlendOut;

		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		public float intensity;

		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public bool continuousVariation;

		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		public float variationFrequency;

		[Token(Token = "0x4000640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public float intensityVariation;

		[Token(Token = "0x4000641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		public float blendableVariation;

		[Token(Token = "0x4000642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public float bonePositionVariation;

		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		public float boneRotationVariation;

		[Token(Token = "0x4000644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool invalid;

		[Token(Token = "0x60004A0")]
		[Address(RVA = "0x1460760", Offset = "0x1460760", VA = "0x1460760")]
		public EmotionMarker(string emotion, float startTime, float endTime, float blendInTime, float blendOutTime, bool blendToMarker, bool blendFromMarker, bool customBlendIn, bool customBlendOut)
		{
		}

		[Token(Token = "0x60004A1")]
		[Address(RVA = "0x1460820", Offset = "0x1460820", VA = "0x1460820")]
		public EmotionMarker(EmotionMixer mixer, float startTime, float endTime, float blendInTime, float blendOutTime, bool blendToMarker, bool blendFromMarker, bool customBlendIn, bool customBlendOut)
		{
		}

		[Token(Token = "0x60004A2")]
		[Address(RVA = "0x14608E8", Offset = "0x14608E8", VA = "0x14608E8")]
		public EmotionMarker(string emotion, float startTime, float endTime, float blendInTime, float blendOutTime, bool blendToMarker, bool blendFromMarker, bool customBlendIn, bool customBlendOut, float intensity)
		{
		}

		[Token(Token = "0x60004A3")]
		[Address(RVA = "0x14609C4", Offset = "0x14609C4", VA = "0x14609C4")]
		public EmotionMarker CreateCopy()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20000EB")]
	public class EmotionMixer
	{
		[Serializable]
		[Token(Token = "0x2000439")]
		public struct EmotionComponent
		{
			[Token(Token = "0x4001C34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string emotion;

			[Token(Token = "0x4001C35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float weight;

			[Token(Token = "0x6001D03")]
			[Address(RVA = "0x1461890", Offset = "0x1461890", VA = "0x1461890")]
			public EmotionComponent(string emotion, float weight)
			{
			}
		}

		[Token(Token = "0x200043A")]
		public enum MixingMode
		{
			[Token(Token = "0x4001C37")]
			Normal,
			[Token(Token = "0x4001C38")]
			Additive
		}

		[Token(Token = "0x4000645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public List<EmotionComponent> emotions;

		[Token(Token = "0x4000646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public MixingMode mixingMode;

		[Token(Token = "0x4000647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color displayColor;

		[Token(Token = "0x60004A4")]
		[Address(RVA = "0x1460AE0", Offset = "0x1460AE0", VA = "0x1460AE0")]
		public EmotionMixer()
		{
		}

		[Token(Token = "0x60004A5")]
		[Address(RVA = "0x1460B8C", Offset = "0x1460B8C", VA = "0x1460B8C")]
		public EmotionShape GetShape(LipSync character)
		{
			return null;
		}

		[Token(Token = "0x60004A6")]
		[Address(RVA = "0x1461494", Offset = "0x1461494", VA = "0x1461494")]
		public void SetWeight(int index, float weight)
		{
		}

		[Token(Token = "0x60004A7")]
		[Address(RVA = "0x146149C", Offset = "0x146149C", VA = "0x146149C")]
		public void SetWeight(int index, float weight, bool bypassMinChecks)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000EC")]
	public class EmotionShape : Shape
	{
		[Token(Token = "0x4000648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public string emotion;

		[Token(Token = "0x60004A8")]
		[Address(RVA = "0x1461394", Offset = "0x1461394", VA = "0x1461394")]
		public EmotionShape(string eEmotion)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000ED")]
	public class GestureMarker
	{
		[Token(Token = "0x4000649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public string gesture;

		[Token(Token = "0x400064A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public float time;

		[Token(Token = "0x60004A9")]
		[Address(RVA = "0x14618C4", Offset = "0x14618C4", VA = "0x14618C4")]
		public GestureMarker(string gesture, float time)
		{
		}

		[Token(Token = "0x60004AA")]
		[Address(RVA = "0x146190C", Offset = "0x146190C", VA = "0x146190C")]
		public GestureMarker CreateCopy()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20000EE")]
	public class LipSyncData : ScriptableObject
	{
		[Token(Token = "0x400064B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip clip;

		[Token(Token = "0x400064C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PhonemeMarker[] phonemeData;

		[Token(Token = "0x400064D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EmotionMarker[] emotionData;

		[Token(Token = "0x400064E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GestureMarker[] gestureData;

		[Token(Token = "0x400064F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float version;

		[Token(Token = "0x4000650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float length;

		[Token(Token = "0x4000651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string transcript;

		[Token(Token = "0x4000652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve[] phonemePoseCurves;

		[Token(Token = "0x4000653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve[] emotionPoseCurves;

		[Token(Token = "0x4000654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int targetComponentID;

		[Token(Token = "0x4000655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool isPreprocessed;

		[Token(Token = "0x4000656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<int> indexBlendables;

		[Token(Token = "0x4000657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<AnimationCurve> animCurves;

		[Token(Token = "0x4000658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<Transform> bones;

		[Token(Token = "0x4000659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<TransformAnimationCurve> boneCurves;

		[Token(Token = "0x400065A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<Vector3> boneNeutralPositions;

		[Token(Token = "0x400065B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public List<Vector3> boneNeutralScales;

		[Token(Token = "0x400065C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<Quaternion> boneNeutralRotations;

		[Token(Token = "0x60004AB")]
		[Address(RVA = "0xFACFF0", Offset = "0xFACFF0", VA = "0xFACFF0")]
		public void GenerateCurves(int phonemeCount, int emotionCount)
		{
		}

		[Token(Token = "0x60004AC")]
		[Address(RVA = "0xFAD458", Offset = "0xFAD458", VA = "0xFAD458")]
		public static explicit operator LipSyncData(TemporaryLipSyncData data)
		{
			return null;
		}

		[Token(Token = "0x60004AD")]
		[Address(RVA = "0xFAD834", Offset = "0xFAD834", VA = "0xFAD834")]
		public LipSyncData()
		{
		}
	}
	[Token(Token = "0x20000EF")]
	public static class LipSyncExtensions
	{
		[Token(Token = "0x60004AE")]
		[Address(RVA = "0xFAD8BC", Offset = "0xFAD8BC", VA = "0xFAD8BC")]
		public static Transform FindDeepChild(this Transform aParent, string aName)
		{
			return null;
		}

		[Token(Token = "0x60004AF")]
		[Address(RVA = "0xFADBE0", Offset = "0xFADBE0", VA = "0xFADBE0")]
		public static Vector3 InverseTransformEulerAngle(this Transform transform, Vector3 eulerAngle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60004B0")]
		[Address(RVA = "0xFADD04", Offset = "0xFADD04", VA = "0xFADD04")]
		public static Vector3 TransformEulerAngle(this Transform transform, Vector3 eulerAngle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60004B1")]
		[Address(RVA = "0xFADCA4", Offset = "0xFADCA4", VA = "0xFADCA4")]
		public static Vector3 ToPositiveEuler(this Vector3 eulerAngle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60004B2")]
		[Address(RVA = "0xFADE34", Offset = "0xFADE34", VA = "0xFADE34")]
		public static Vector3 ToNegativeEuler(this Vector3 eulerAngle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60004B3")]
		[Address(RVA = "0xFADDC8", Offset = "0xFADDC8", VA = "0xFADDC8")]
		private static Vector3 ClampRange(Vector3 eulerAngle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60004B4")]
		[Address(RVA = "0xFADE9C", Offset = "0xFADE9C", VA = "0xFADE9C")]
		public static EmotionMarker PreviousMarker(this List<EmotionMarker> list, EmotionMarker current)
		{
			return null;
		}

		[Token(Token = "0x60004B5")]
		[Address(RVA = "0xFADF38", Offset = "0xFADF38", VA = "0xFADF38")]
		public static EmotionMarker NextMarker(this List<EmotionMarker> list, EmotionMarker current)
		{
			return null;
		}
	}
	[Token(Token = "0x20000F0")]
	public class LipSyncPreset : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x200043B")]
		public struct PhonemeShapeInfo
		{
			[Token(Token = "0x4001C39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			public string phonemeName;

			[Token(Token = "0x4001C3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[SerializeField]
			[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xAC8C18", Offset = "0xAC8C18")]
			public Phoneme phoneme;

			[Token(Token = "0x4001C3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public BlendableInfo[] blendables;

			[Token(Token = "0x4001C3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			public BoneInfo[] bones;
		}

		[Serializable]
		[Token(Token = "0x200043C")]
		public struct EmotionShapeInfo
		{
			[Token(Token = "0x4001C3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			public string emotion;

			[Token(Token = "0x4001C3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[SerializeField]
			public BlendableInfo[] blendables;

			[Token(Token = "0x4001C3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public BoneInfo[] bones;
		}

		[Serializable]
		[Token(Token = "0x200043D")]
		public struct BlendableInfo
		{
			[Token(Token = "0x4001C40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			public int blendableNumber;

			[Token(Token = "0x4001C41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[SerializeField]
			public string blendableName;

			[Token(Token = "0x4001C42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public float weight;
		}

		[Serializable]
		[Token(Token = "0x200043E")]
		public struct BoneInfo
		{
			[Token(Token = "0x4001C43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			public string path;

			[Token(Token = "0x4001C44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[SerializeField]
			public string name;

			[Token(Token = "0x4001C45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public Vector3 localPosition;

			[Token(Token = "0x4001C46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[SerializeField]
			public Vector3 localRotation;

			[Token(Token = "0x4001C47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			public Vector3 localScale;

			[Token(Token = "0x4001C48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[SerializeField]
			public bool lockPosition;

			[Token(Token = "0x4001C49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
			[SerializeField]
			public bool lockRotation;

			[Token(Token = "0x4001C4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
			[SerializeField]
			public bool lockScale;
		}

		[Token(Token = "0x400065D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string displayPath;

		[Token(Token = "0x400065E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isRelative;

		[Token(Token = "0x400065F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public PhonemeShapeInfo[] phonemeShapes;

		[Token(Token = "0x4000660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public EmotionShapeInfo[] emotionShapes;

		[Token(Token = "0x60004B6")]
		[Address(RVA = "0xFADFD8", Offset = "0xFADFD8", VA = "0xFADFD8")]
		public int FindBlendable(BlendableInfo blendable, BlendSystem blendSystem)
		{
			return default(int);
		}

		[Token(Token = "0x60004B7")]
		[Address(RVA = "0xFAE55C", Offset = "0xFAE55C", VA = "0xFAE55C")]
		public Transform FindBone(BoneInfo bone, Transform searchRoot)
		{
			return null;
		}

		[Token(Token = "0x60004B8")]
		[Address(RVA = "0xFAE624", Offset = "0xFAE624", VA = "0xFAE624")]
		public void CreateFromShapes(PhonemeShape[] phonemes, EmotionShape[] emotions, BlendSystem blendSystem, bool relative)
		{
		}

		[Token(Token = "0x60004B9")]
		[Address(RVA = "0xFAF9C0", Offset = "0xFAF9C0", VA = "0xFAF9C0")]
		public LipSyncPreset()
		{
		}
	}
	[Token(Token = "0x20000F1")]
	public class LipSyncProject : ScriptableObject
	{
		[Token(Token = "0x4000661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public string[] emotions;

		[Token(Token = "0x4000662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public Color[] emotionColors;

		[Token(Token = "0x4000663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public List<string> gestures;

		[Token(Token = "0x4000664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public PhonemeSet phonemeSet;

		[Token(Token = "0x60004BA")]
		[Address(RVA = "0xFAF9C8", Offset = "0xFAF9C8", VA = "0xFAF9C8")]
		public LipSyncProject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000F2")]
	public class PhonemeMarker
	{
		[Token(Token = "0x4000665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xAC34A8", Offset = "0xAC34A8")]
		public Phoneme phoneme;

		[Token(Token = "0x4000666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		public int phonemeNumber;

		[Token(Token = "0x4000667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public float time;

		[Token(Token = "0x4000668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		public float intensity;

		[Token(Token = "0x4000669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public bool sustain;

		[Token(Token = "0x400066A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		public bool useRandomness;

		[Token(Token = "0x400066B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		public float intensityRandomness;

		[Token(Token = "0x400066C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public float blendableRandomness;

		[Token(Token = "0x400066D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public float bonePositionRandomness;

		[Token(Token = "0x400066E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public float boneRotationRandomness;

		[Token(Token = "0x60004BB")]
		[Address(RVA = "0xFAFA44", Offset = "0xFAFA44", VA = "0xFAFA44")]
		public PhonemeMarker(int phonemeNumber, float time, float intensity, bool sustain)
		{
		}

		[Token(Token = "0x60004BC")]
		[Address(RVA = "0xFAFAAC", Offset = "0xFAFAAC", VA = "0xFAFAAC")]
		public PhonemeMarker(int phonemeNumber, float time)
		{
		}

		[Token(Token = "0x60004BD")]
		[Address(RVA = "0xFAFAFC", Offset = "0xFAFAFC", VA = "0xFAFAFC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xACA2A4", Offset = "0xACA2A4")]
		public PhonemeMarker(Phoneme phoneme, float time, float intensity, bool sustain)
		{
		}

		[Token(Token = "0x60004BE")]
		[Address(RVA = "0xFAFB64", Offset = "0xFAFB64", VA = "0xFAFB64")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xACA2DC", Offset = "0xACA2DC")]
		public PhonemeMarker(Phoneme phoneme, float time)
		{
		}

		[Token(Token = "0x60004BF")]
		[Address(RVA = "0xFAD768", Offset = "0xFAD768", VA = "0xFAD768")]
		public PhonemeMarker CreateCopy()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20000F3")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xABF3C0", Offset = "0xABF3C0")]
	public class PhonemeSet : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x200043F")]
		[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xAC0B78", Offset = "0xAC0B78")]
		public class PhonemeCollection
		{
			[Token(Token = "0x4001C4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<string> phonemeNames;

			[Token(Token = "0x170002AB")]
			public int Length
			{
				[Token(Token = "0x6001D04")]
				[Address(RVA = "0xFAFE68", Offset = "0xFAFE68", VA = "0xFAFE68")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170002AC")]
			public Phoneme Item
			{
				[Token(Token = "0x6001D05")]
				[Address(RVA = "0xFAFD34", Offset = "0xFAFD34", VA = "0xFAFD34")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D06")]
			[Address(RVA = "0xFAFF64", Offset = "0xFAFF64", VA = "0xFAFF64")]
			public PhonemeCollection()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000440")]
		public class Phoneme
		{
			[Token(Token = "0x4001C4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x4001C4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int number;

			[Token(Token = "0x4001C4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int flag;

			[Token(Token = "0x4001C4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool visuallyImportant;

			[Token(Token = "0x4001C50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Texture2D guideImage;

			[Token(Token = "0x6001D07")]
			[Address(RVA = "0xFAFE1C", Offset = "0xFAFE1C", VA = "0xFAFE1C")]
			public Phoneme(string name, int number, int flag)
			{
			}
		}

		[Token(Token = "0x400066F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isLegacyFormat;

		[Token(Token = "0x4000670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public string scriptingName;

		[Token(Token = "0x4000671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xAC3594", Offset = "0xAC3594")]
		public PhonemeCollection phonemes;

		[Token(Token = "0x4000672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public List<Phoneme> phonemeList;

		[Token(Token = "0x4000673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xAC35F4", Offset = "0xAC35F4")]
		public Texture2D[] guideImages;

		[Token(Token = "0x60004C0")]
		[Address(RVA = "0xFAFBB4", Offset = "0xFAFBB4", VA = "0xFAFBB4")]
		public void UpdateFormat()
		{
		}

		[Token(Token = "0x60004C1")]
		[Address(RVA = "0xFAFEB8", Offset = "0xFAFEB8", VA = "0xFAFEB8")]
		public PhonemeSet()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000F4")]
	public class PhonemeShape : Shape
	{
		[Token(Token = "0x4000674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public string phonemeName;

		[Token(Token = "0x4000675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xAC3654", Offset = "0xAC3654")]
		public Phoneme phoneme;

		[Token(Token = "0x60004C2")]
		[Address(RVA = "0xFAFFE0", Offset = "0xFAFFE0", VA = "0xFAFFE0")]
		public PhonemeShape(string phonemeName)
		{
		}

		[Token(Token = "0x60004C3")]
		[Address(RVA = "0xFB01FC", Offset = "0xFB01FC", VA = "0xFB01FC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xACA314", Offset = "0xACA314")]
		public PhonemeShape(Phoneme ePhoneme)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000F5")]
	public class Shape
	{
		[Token(Token = "0x4000676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public List<int> blendShapes;

		[Token(Token = "0x4000677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public List<string> blendableNames;

		[Token(Token = "0x4000678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public List<float> weights;

		[Token(Token = "0x4000679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public List<BoneShape> bones;

		[Token(Token = "0x400067A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public bool verified;

		[Token(Token = "0x60004C4")]
		[Address(RVA = "0xFB02EC", Offset = "0xFB02EC", VA = "0xFB02EC")]
		public bool HasBone(Transform bone)
		{
			return default(bool);
		}

		[Token(Token = "0x60004C5")]
		[Address(RVA = "0xFB03CC", Offset = "0xFB03CC", VA = "0xFB03CC")]
		public int IndexOfBone(Transform bone)
		{
			return default(int);
		}

		[Token(Token = "0x60004C6")]
		[Address(RVA = "0xFB00DC", Offset = "0xFB00DC", VA = "0xFB00DC")]
		public Shape()
		{
		}
	}
	[Token(Token = "0x20000F6")]
	public class TemporaryLipSyncData : ScriptableObject
	{
		[Token(Token = "0x400067B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip clip;

		[Token(Token = "0x400067C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<PhonemeMarker> phonemeData;

		[Token(Token = "0x400067D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<EmotionMarker> emotionData;

		[Token(Token = "0x400067E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<GestureMarker> gestureData;

		[Token(Token = "0x400067F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float version;

		[Token(Token = "0x4000680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float length;

		[Token(Token = "0x4000681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string transcript;

		[Token(Token = "0x60004C7")]
		[Address(RVA = "0xFB0EAC", Offset = "0xFB0EAC", VA = "0xFB0EAC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60004C8")]
		[Address(RVA = "0xFB0EB8", Offset = "0xFB0EB8", VA = "0xFB0EB8")]
		public static explicit operator TemporaryLipSyncData(LipSyncData data)
		{
			return null;
		}

		[Token(Token = "0x60004C9")]
		[Address(RVA = "0xFB1140", Offset = "0xFB1140", VA = "0xFB1140")]
		public TemporaryLipSyncData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000F7")]
	public class TransformAnimationCurve
	{
		[Token(Token = "0x2000441")]
		public struct TransformKeyframe
		{
			[Token(Token = "0x4001C51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float time;

			[Token(Token = "0x4001C52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Quaternion rotation;

			[Token(Token = "0x4001C53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 position;

			[Token(Token = "0x4001C54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 scale;

			[Token(Token = "0x4001C55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float inTangent;

			[Token(Token = "0x4001C56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float outTangent;

			[Token(Token = "0x6001D08")]
			[Address(RVA = "0xFB2790", Offset = "0xFB2790", VA = "0xFB2790")]
			public TransformKeyframe(float time, Vector3 position, Quaternion rotation, Vector3 scale, float inTangent, float outTangent)
			{
			}
		}

		[Token(Token = "0x4000682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AnimationCurve _posX;

		[Token(Token = "0x4000683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AnimationCurve _posY;

		[Token(Token = "0x4000684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AnimationCurve _posZ;

		[Token(Token = "0x4000685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AnimationCurve _rotX;

		[Token(Token = "0x4000686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AnimationCurve _rotY;

		[Token(Token = "0x4000687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AnimationCurve _rotZ;

		[Token(Token = "0x4000688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AnimationCurve _rotW;

		[Token(Token = "0x4000689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AnimationCurve _scaleX;

		[Token(Token = "0x400068A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AnimationCurve _scaleY;

		[Token(Token = "0x400068B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AnimationCurve _scaleZ;

		[Token(Token = "0x17000040")]
		public TransformKeyframe[] keys
		{
			[Token(Token = "0x60004CB")]
			[Address(RVA = "0xFB22DC", Offset = "0xFB22DC", VA = "0xFB22DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000041")]
		public int length
		{
			[Token(Token = "0x60004CC")]
			[Address(RVA = "0xFB27C0", Offset = "0xFB27C0", VA = "0xFB27C0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000042")]
		public WrapMode postWrapMode
		{
			[Token(Token = "0x60004CD")]
			[Address(RVA = "0xFB27DC", Offset = "0xFB27DC", VA = "0xFB27DC")]
			get
			{
				return default(WrapMode);
			}
			[Token(Token = "0x60004CE")]
			[Address(RVA = "0xFB27F8", Offset = "0xFB27F8", VA = "0xFB27F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000043")]
		public WrapMode preWrapMode
		{
			[Token(Token = "0x60004CF")]
			[Address(RVA = "0xFB28DC", Offset = "0xFB28DC", VA = "0xFB28DC")]
			get
			{
				return default(WrapMode);
			}
			[Token(Token = "0x60004D0")]
			[Address(RVA = "0xFB28F8", Offset = "0xFB28F8", VA = "0xFB28F8")]
			set
			{
			}
		}

		[Token(Token = "0x60004CA")]
		[Address(RVA = "0xFB202C", Offset = "0xFB202C", VA = "0xFB202C")]
		public AnimationCurve[] GetAnimationCurves()
		{
			return null;
		}

		[Token(Token = "0x60004D1")]
		[Address(RVA = "0xFB29DC", Offset = "0xFB29DC", VA = "0xFB29DC")]
		public int AddKey(float time, Vector3 position, Quaternion rotation, Vector3 scale, float inTangent, float outTangent)
		{
			return default(int);
		}

		[Token(Token = "0x60004D2")]
		[Address(RVA = "0xFB2E10", Offset = "0xFB2E10", VA = "0xFB2E10")]
		public int AddKey(float time, Vector3 position, Quaternion rotation, float inTangent, float outTangent)
		{
			return default(int);
		}

		[Token(Token = "0x60004D3")]
		[Address(RVA = "0xFB3144", Offset = "0xFB3144", VA = "0xFB3144")]
		public int AddKey(float time, Quaternion rotation, float inTangent, float outTangent)
		{
			return default(int);
		}

		[Token(Token = "0x60004D4")]
		[Address(RVA = "0xFB3378", Offset = "0xFB3378", VA = "0xFB3378")]
		public int AddKey(float time, Vector3 position, float inTangent, float outTangent)
		{
			return default(int);
		}

		[Token(Token = "0x60004D5")]
		[Address(RVA = "0xFB34C8", Offset = "0xFB34C8", VA = "0xFB34C8")]
		public int AddKey(float time, Vector3 position, Quaternion rotation, Vector3 scale)
		{
			return default(int);
		}

		[Token(Token = "0x60004D6")]
		[Address(RVA = "0xFB3698", Offset = "0xFB3698", VA = "0xFB3698")]
		public int AddKey(float time, Vector3 position, Quaternion rotation)
		{
			return default(int);
		}

		[Token(Token = "0x60004D7")]
		[Address(RVA = "0xFB3820", Offset = "0xFB3820", VA = "0xFB3820")]
		public int AddKey(float time, Quaternion rotation)
		{
			return default(int);
		}

		[Token(Token = "0x60004D8")]
		[Address(RVA = "0xFB3954", Offset = "0xFB3954", VA = "0xFB3954")]
		public int AddKey(float time, Vector3 position)
		{
			return default(int);
		}

		[Token(Token = "0x60004D9")]
		[Address(RVA = "0xFB39DC", Offset = "0xFB39DC", VA = "0xFB39DC")]
		public int AddKey(TransformKeyframe keyframe)
		{
			return default(int);
		}

		[Token(Token = "0x60004DA")]
		[Address(RVA = "0xFB3CDC", Offset = "0xFB3CDC", VA = "0xFB3CDC")]
		public Vector3 EvaluateScale(float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60004DB")]
		[Address(RVA = "0xFB3D80", Offset = "0xFB3D80", VA = "0xFB3D80")]
		public Vector3 EvaluatePosition(float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60004DC")]
		[Address(RVA = "0xFB3E24", Offset = "0xFB3E24", VA = "0xFB3E24")]
		public Quaternion EvaluateRotation(float time)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60004DD")]
		[Address(RVA = "0xFB3EE0", Offset = "0xFB3EE0", VA = "0xFB3EE0")]
		public TransformAnimationCurve()
		{
		}

		[Token(Token = "0x60004DE")]
		[Address(RVA = "0xFB2E0C", Offset = "0xFB2E0C", VA = "0xFB2E0C")]
		private Vector3 CentreAngles(Vector3 euler)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60004DF")]
		[Address(RVA = "0xFB40A0", Offset = "0xFB40A0", VA = "0xFB40A0")]
		public void FixQuaternionContinuity()
		{
		}
	}
	[Token(Token = "0x20000F8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xABF420", Offset = "0xABF420")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xABF420", Offset = "0xABF420")]
	public class LipSync : BlendSystemUser
	{
		[Token(Token = "0x2000442")]
		public delegate void FinishedPlayingAction();

		[Token(Token = "0x2000443")]
		public delegate void ResetDelegate();

		[Token(Token = "0x2000444")]
		public enum AnimationTimingMode
		{
			[Token(Token = "0x4001C58")]
			AudioPlayback,
			[Token(Token = "0x4001C59")]
			CustomTimer,
			[Token(Token = "0x4001C5A")]
			FixedFrameRate
		}

		[Token(Token = "0x2000445")]
		public enum CurveGenerationMode
		{
			[Token(Token = "0x4001C5C")]
			Tight,
			[Token(Token = "0x4001C5D")]
			Loose
		}

		[Token(Token = "0x2000446")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0BB0", Offset = "0xAC0BB0")]
		private sealed class <StopAudioSource>d__100 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4001C61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LipSync <>4__this;

			[Token(Token = "0x170002AD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D14")]
				[Address(RVA = "0xFACAD0", Offset = "0xFACAD0", VA = "0xFACAD0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D16")]
				[Address(RVA = "0xFACB38", Offset = "0xFACB38", VA = "0xFACB38", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D11")]
			[Address(RVA = "0xFAC9D8", Offset = "0xFAC9D8", VA = "0xFAC9D8")]
			[DebuggerHidden]
			public <StopAudioSource>d__100(int <>1__state)
			{
			}

			[Token(Token = "0x6001D12")]
			[Address(RVA = "0xFACA04", Offset = "0xFACA04", VA = "0xFACA04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D13")]
			[Address(RVA = "0xFACA08", Offset = "0xFACA08", VA = "0xFACA08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D15")]
			[Address(RVA = "0xFACAD8", Offset = "0xFACAD8", VA = "0xFACAD8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400068C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource audioSource;

		[Token(Token = "0x400068D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool useBones;

		[Token(Token = "0x400068E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool boneUpdateAnimation;

		[Token(Token = "0x400068F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public List<PhonemeShape> phonemes;

		[Token(Token = "0x4000690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public List<EmotionShape> emotions;

		[Token(Token = "0x4000691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool playOnAwake;

		[Token(Token = "0x4000692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool loop;

		[Token(Token = "0x4000693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public LipSyncData defaultClip;

		[Token(Token = "0x4000694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float defaultDelay;

		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool scaleAudioSpeed;

		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AnimationTimingMode m_animationTimingMode;

		[Token(Token = "0x4000697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int frameRate;

		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float restTime;

		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float restHoldTime;

		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public CurveGenerationMode phonemeCurveGenerationMode;

		[Token(Token = "0x400069B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public CurveGenerationMode emotionCurveGenerationMode;

		[Token(Token = "0x400069C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool keepEmotionWhenFinished;

		[Token(Token = "0x400069D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool setNeutralBonePosesOnStart;

		[Token(Token = "0x400069E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC3720", Offset = "0xAC3720")]
		private bool <IsPlaying>k__BackingField;

		[Token(Token = "0x400069F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC3730", Offset = "0xAC3730")]
		private bool <IsPaused>k__BackingField;

		[Token(Token = "0x40006A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC3740", Offset = "0xAC3740")]
		private bool <IsStopping>k__BackingField;

		[Token(Token = "0x40006A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Animator gesturesAnimator;

		[Token(Token = "0x40006A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int gesturesLayer;

		[Token(Token = "0x40006A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public List<GestureInstance> gestures;

		[Token(Token = "0x40006A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public UnityEvent onFinishedPlaying;

		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private AudioClip audioClip;

		[Token(Token = "0x40006A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool ready;

		[Token(Token = "0x40006A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Dictionary<string, EmotionShape> emotionCache;

		[Token(Token = "0x40006A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int currentFileID;

		[Token(Token = "0x40006AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private LipSyncData lastClip;

		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float emotionBlendTime;

		[Token(Token = "0x40006AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float emotionTimer;

		[Token(Token = "0x40006AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool changingEmotion;

		[Token(Token = "0x40006AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private int customEmotion;

		[Token(Token = "0x40006AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float customTimer;

		[Token(Token = "0x40006B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private bool isDelaying;

		[Token(Token = "0x40006B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private List<PhonemeMarker> phonemeMarkers;

		[Token(Token = "0x40006B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private List<EmotionMarker> emotionMarkers;

		[Token(Token = "0x40006B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private List<GestureMarker> gestureMarkers;

		[Token(Token = "0x40006B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float fileLength;

		[Token(Token = "0x40006B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private int nextGesture;

		[Token(Token = "0x40006B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private List<int> indexBlendables;

		[Token(Token = "0x40006B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private List<AnimationCurve> animCurves;

		[Token(Token = "0x40006B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private List<Transform> bones;

		[Token(Token = "0x40006B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private List<TransformAnimationCurve> boneCurves;

		[Token(Token = "0x40006BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private List<Vector3> boneNeutralPositions;

		[Token(Token = "0x40006BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private List<Vector3> boneNeutralScales;

		[Token(Token = "0x40006BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private List<Quaternion> boneNeutralRotations;

		[Token(Token = "0x40006BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public ResetDelegate reset;

		[Token(Token = "0x40006BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public float lastUsedVersion;

		[Token(Token = "0x17000044")]
		public AnimationTimingMode animationTimingMode
		{
			[Token(Token = "0x60004E0")]
			[Address(RVA = "0x1461990", Offset = "0x1461990", VA = "0x1461990")]
			get
			{
				return default(AnimationTimingMode);
			}
			[Token(Token = "0x60004E1")]
			[Address(RVA = "0x1461998", Offset = "0x1461998", VA = "0x1461998")]
			set
			{
			}
		}

		[Token(Token = "0x17000045")]
		public bool IsPlaying
		{
			[Token(Token = "0x60004E2")]
			[Address(RVA = "0x14619A0", Offset = "0x14619A0", VA = "0x14619A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA34C", Offset = "0xACA34C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60004E3")]
			[Address(RVA = "0x14619A8", Offset = "0x14619A8", VA = "0x14619A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA35C", Offset = "0xACA35C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000046")]
		public bool IsPaused
		{
			[Token(Token = "0x60004E4")]
			[Address(RVA = "0x14619B4", Offset = "0x14619B4", VA = "0x14619B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA36C", Offset = "0xACA36C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60004E5")]
			[Address(RVA = "0x14619BC", Offset = "0x14619BC", VA = "0x14619BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA37C", Offset = "0xACA37C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000047")]
		public bool IsStopping
		{
			[Token(Token = "0x60004E6")]
			[Address(RVA = "0x14619C8", Offset = "0x14619C8", VA = "0x14619C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA38C", Offset = "0xACA38C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60004E7")]
			[Address(RVA = "0x14619D0", Offset = "0x14619D0", VA = "0x14619D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA39C", Offset = "0xACA39C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000048")]
		public float CurrentTime
		{
			[Token(Token = "0x60004E8")]
			[Address(RVA = "0x14619DC", Offset = "0x14619DC", VA = "0x14619DC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x14000010")]
		public static event FinishedPlayingAction OnFinishedPlaying
		{
			[Token(Token = "0x60004E9")]
			[Address(RVA = "0x1461A18", Offset = "0x1461A18", VA = "0x1461A18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA3AC", Offset = "0xACA3AC")]
			add
			{
			}
			[Token(Token = "0x60004EA")]
			[Address(RVA = "0x1461ACC", Offset = "0x1461ACC", VA = "0x1461ACC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA3BC", Offset = "0xACA3BC")]
			remove
			{
			}
		}

		[Token(Token = "0x60004EB")]
		[Address(RVA = "0x1461B80", Offset = "0x1461B80", VA = "0x1461B80")]
		private void Reset()
		{
		}

		[Token(Token = "0x60004EC")]
		[Address(RVA = "0x1461BB8", Offset = "0x1461BB8", VA = "0x1461BB8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004ED")]
		[Address(RVA = "0x14629E8", Offset = "0x14629E8", VA = "0x14629E8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60004EE")]
		[Address(RVA = "0x146396C", Offset = "0x146396C", VA = "0x146396C")]
		public void SetEmotion(string emotion, float blendTime)
		{
		}

		[Token(Token = "0x60004EF")]
		[Address(RVA = "0x1465474", Offset = "0x1465474", VA = "0x1465474")]
		public void ResetEmotion(float blendTime)
		{
		}

		[Token(Token = "0x60004F0")]
		[Address(RVA = "0x14654D4", Offset = "0x14654D4", VA = "0x14654D4")]
		private void PlayPP(LipSyncData data, float delay, float time)
		{
		}

		[Token(Token = "0x60004F1")]
		[Address(RVA = "0x1462748", Offset = "0x1462748", VA = "0x1462748")]
		public void Play(LipSyncData dataFile, float delay)
		{
		}

		[Token(Token = "0x60004F2")]
		[Address(RVA = "0x1463964", Offset = "0x1463964", VA = "0x1463964")]
		public void Play(LipSyncData dataFile)
		{
		}

		[Token(Token = "0x60004F3")]
		[Address(RVA = "0x146F64C", Offset = "0x146F64C", VA = "0x146F64C")]
		public void Play(TextAsset xmlFile, AudioClip clip, float delay)
		{
		}

		[Token(Token = "0x60004F4")]
		[Address(RVA = "0x1470600", Offset = "0x1470600", VA = "0x1470600")]
		public void Play(TextAsset xmlFile, AudioClip clip)
		{
		}

		[Token(Token = "0x60004F5")]
		[Address(RVA = "0x1470608", Offset = "0x1470608", VA = "0x1470608")]
		public void PlayFromTime(LipSyncData dataFile, float delay, float time)
		{
		}

		[Token(Token = "0x60004F6")]
		[Address(RVA = "0x1470818", Offset = "0x1470818", VA = "0x1470818")]
		public void PlayFromTime(LipSyncData dataFile, float time)
		{
		}

		[Token(Token = "0x60004F7")]
		[Address(RVA = "0x1470824", Offset = "0x1470824", VA = "0x1470824")]
		public void PlayFromTime(TextAsset xmlFile, AudioClip clip, float delay, float time)
		{
		}

		[Token(Token = "0x60004F8")]
		[Address(RVA = "0x14709E8", Offset = "0x14709E8", VA = "0x14709E8")]
		public void PlayFromTime(TextAsset xmlFile, AudioClip clip, float time)
		{
		}

		[Token(Token = "0x60004F9")]
		[Address(RVA = "0x14709F4", Offset = "0x14709F4", VA = "0x14709F4")]
		public void Pause()
		{
		}

		[Token(Token = "0x60004FA")]
		[Address(RVA = "0x1470A54", Offset = "0x1470A54", VA = "0x1470A54")]
		public void Resume()
		{
		}

		[Token(Token = "0x60004FB")]
		[Address(RVA = "0x146343C", Offset = "0x146343C", VA = "0x146343C")]
		public void Stop(bool stopAudio)
		{
		}

		[Token(Token = "0x60004FC")]
		[Address(RVA = "0x1470B14", Offset = "0x1470B14", VA = "0x1470B14")]
		public void PreviewAtTime(float time)
		{
		}

		[Token(Token = "0x60004FD")]
		[Address(RVA = "0x1470E3C", Offset = "0x1470E3C", VA = "0x1470E3C")]
		public void DisplayEmotionPose(int emotion, float intensity)
		{
		}

		[Token(Token = "0x60004FE")]
		[Address(RVA = "0x1471288", Offset = "0x1471288", VA = "0x1471288")]
		public void ResetDisplayedEmotions()
		{
		}

		[Token(Token = "0x60004FF")]
		[Address(RVA = "0x1471690", Offset = "0x1471690", VA = "0x1471690")]
		public void PreviewAudioAtTime(float time, float length)
		{
		}

		[Token(Token = "0x6000500")]
		[Address(RVA = "0x1471830", Offset = "0x1471830", VA = "0x1471830")]
		public void TempLoad(List<PhonemeMarker> pData, List<EmotionMarker> eData, AudioClip clip, float duration)
		{
		}

		[Token(Token = "0x6000501")]
		[Address(RVA = "0x14718E4", Offset = "0x14718E4", VA = "0x14718E4")]
		public void TempLoad(PhonemeMarker[] pData, EmotionMarker[] eData, AudioClip clip, float duration)
		{
		}

		[Token(Token = "0x6000502")]
		[Address(RVA = "0x1465FCC", Offset = "0x1465FCC", VA = "0x1465FCC")]
		public void ProcessData(bool emotionOnly = false)
		{
		}

		[Token(Token = "0x6000503")]
		[Address(RVA = "0x1471C1C", Offset = "0x1471C1C", VA = "0x1471C1C")]
		public void GetCurveDataOut(out List<int> indexBlendables, out List<AnimationCurve> animCurves, out List<Transform> bones, out List<TransformAnimationCurve> boneCurves, out List<Vector3> boneNeutralPositions, out List<Quaternion> boneNeutralRotations, out List<Vector3> boneNeutralScales)
		{
		}

		[Token(Token = "0x6000504")]
		[Address(RVA = "0x1471C14", Offset = "0x1471C14", VA = "0x1471C14")]
		public void ClearDataCache()
		{
		}

		[Token(Token = "0x6000505")]
		[Address(RVA = "0x1471CD8", Offset = "0x1471CD8", VA = "0x1471CD8")]
		private EmotionMixer GetTransitionMixer(string oldEmotion, string newEmotion, float t)
		{
			return null;
		}

		[Token(Token = "0x6000506")]
		[Address(RVA = "0x1471DD4", Offset = "0x1471DD4", VA = "0x1471DD4")]
		private void FixEmotionBlends(ref List<EmotionMarker> data)
		{
		}

		[Token(Token = "0x6000507")]
		[Address(RVA = "0x1471ED0", Offset = "0x1471ED0", VA = "0x1471ED0")]
		private void FixEmotionBlends(ref EmotionMarker[] data)
		{
		}

		[Token(Token = "0x6000508")]
		[Address(RVA = "0x146F7B0", Offset = "0x146F7B0", VA = "0x146F7B0")]
		private void LoadXML(TextAsset xmlFile, AudioClip linkedClip)
		{
		}

		[Token(Token = "0x6000509")]
		[Address(RVA = "0x14659AC", Offset = "0x14659AC", VA = "0x14659AC")]
		private bool LoadData(LipSyncData dataFile)
		{
			return default(bool);
		}

		[Token(Token = "0x600050A")]
		[Address(RVA = "0x14717A4", Offset = "0x14717A4", VA = "0x14717A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACA3CC", Offset = "0xACA3CC")]
		private IEnumerator StopAudioSource(float delay)
		{
			return null;
		}

		[Token(Token = "0x600050B")]
		[Address(RVA = "0x146335C", Offset = "0x146335C", VA = "0x146335C")]
		private GestureInstance GetGesture(string name)
		{
			return null;
		}

		[Token(Token = "0x600050C")]
		[Address(RVA = "0x1470AB0", Offset = "0x1470AB0", VA = "0x1470AB0")]
		public static void FinishPlay()
		{
		}

		[Token(Token = "0x600050D")]
		[Address(RVA = "0x1472138", Offset = "0x1472138", VA = "0x1472138")]
		public static void ClearAll()
		{
		}

		[Token(Token = "0x600050E")]
		[Address(RVA = "0x1472214", Offset = "0x1472214", VA = "0x1472214")]
		public LipSync()
		{
		}

		[Token(Token = "0x600050F")]
		[Address(RVA = "0x14722FC", Offset = "0x14722FC", VA = "0x14722FC")]
		public static int SortTime(PhonemeMarker a, PhonemeMarker b)
		{
			return default(int);
		}

		[Token(Token = "0x6000510")]
		[Address(RVA = "0x147233C", Offset = "0x147233C", VA = "0x147233C")]
		public static int SortTime(GestureMarker a, GestureMarker b)
		{
			return default(int);
		}

		[Token(Token = "0x6000511")]
		[Address(RVA = "0x147237C", Offset = "0x147237C", VA = "0x147237C")]
		private static int EmotionSort(EmotionMarker a, EmotionMarker b)
		{
			return default(int);
		}

		[Token(Token = "0x6000512")]
		[Address(RVA = "0x1472090", Offset = "0x1472090", VA = "0x1472090")]
		public static string ReadXML(XmlDocument xml, string parentElement, string elementName)
		{
			return null;
		}
	}
	[Token(Token = "0x20000F9")]
	public enum Phoneme
	{
		[Token(Token = "0x40006C0")]
		AI,
		[Token(Token = "0x40006C1")]
		E,
		[Token(Token = "0x40006C2")]
		U,
		[Token(Token = "0x40006C3")]
		O,
		[Token(Token = "0x40006C4")]
		CDGKNRSThYZ,
		[Token(Token = "0x40006C5")]
		FV,
		[Token(Token = "0x40006C6")]
		L,
		[Token(Token = "0x40006C7")]
		MBP,
		[Token(Token = "0x40006C8")]
		WQ,
		[Token(Token = "0x40006C9")]
		Rest
	}
}
namespace ProceduralAurora
{
	[Token(Token = "0x20000FA")]
	public enum AudioVisualizationSource
	{
		[Token(Token = "0x40006CB")]
		None,
		[Token(Token = "0x40006CC")]
		AvgAmplitude,
		[Token(Token = "0x40006CD")]
		Frequencies
	}
	[Token(Token = "0x20000FB")]
	public class AuroraMain : MonoBehaviour
	{
		[Token(Token = "0x40006CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC3760", Offset = "0xAC3760")]
		public bool useAudioSourceVisualization;

		[Token(Token = "0x40006CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource audioSource;

		[Token(Token = "0x40006D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int audioSamples;

		[Token(Token = "0x40006D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public FFTWindow audioSamplingWindow;

		[Token(Token = "0x40006D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float audioMultiplier;

		[Token(Token = "0x40006D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC3798", Offset = "0xAC3798")]
		public float audioFrequenciesScale;

		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC37B0", Offset = "0xAC37B0")]
		public float audioBufferSmoothness;

		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public AudioVisualizationSource audioVisualizeColorGradient;

		[Token(Token = "0x40006D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioVisualizationSource audioVisualizeOpacity;

		[Token(Token = "0x40006D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public AudioVisualizationSource audioVisualizePositionOffset;

		[Token(Token = "0x40006D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioVisualizationSource audioVisualizeFrequency;

		[Token(Token = "0x40006D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public AudioVisualizationSource audioVisualizeHeight;

		[Token(Token = "0x40006DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC37C8", Offset = "0xAC37C8")]
		public float audioVisualizePositionOffsetMutliplier;

		[Token(Token = "0x40006DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioHeightMultiplier;

		[Token(Token = "0x40006DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Gradient audioColorGradient;

		[Token(Token = "0x40006DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC37E0", Offset = "0xAC37E0")]
		public int auroraSeed;

		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC3818", Offset = "0xAC3818")]
		public int auroraParticlesCount;

		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC3834", Offset = "0xAC3834")]
		public float auroraAnimationFrequency;

		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC3850", Offset = "0xAC3850")]
		public float auroraRotation;

		[Token(Token = "0x40006E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float auroraCurvature;

		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Vector3 auroraSizes;

		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float auroraParticleThickness;

		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC386C", Offset = "0xAC386C")]
		public bool auroraVolumetric;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		public bool auroraCircular;

		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Vector2 auroraVolumetricRange;

		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC38A4", Offset = "0xAC38A4")]
		public bool auroraLights;

		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC38DC", Offset = "0xAC38DC")]
		public int auroraLightsCount;

		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float auroraLightsRange;

		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float auroraLightsIntesity;

		[Token(Token = "0x40006EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC38F8", Offset = "0xAC38F8")]
		public Gradient auroraColorMain;

		[Token(Token = "0x40006EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC3930", Offset = "0xAC3930")]
		public Material auroraMaterialMain;

		[Token(Token = "0x40006ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ParticleSystem pSystem;

		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ParticleSystem.MainModule p_mMain;

		[Token(Token = "0x40006EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ParticleSystem.EmissionModule p_mEmission;

		[Token(Token = "0x40006F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private ParticleSystemRenderer pRenderer;

		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private ParticleSystem.Particle[] p_Particles;

		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Light[] l_Lights;

		[Token(Token = "0x40006F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float[] aSamples;

		[Token(Token = "0x40006F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float[] aBuffer;

		[Token(Token = "0x6000513")]
		[Address(RVA = "0xEB7AB0", Offset = "0xEB7AB0", VA = "0xEB7AB0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000514")]
		[Address(RVA = "0xEB7AB4", Offset = "0xEB7AB4", VA = "0xEB7AB4")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6000515")]
		[Address(RVA = "0xEB7E2C", Offset = "0xEB7E2C", VA = "0xEB7E2C")]
		private void InitializeLights()
		{
		}

		[Token(Token = "0x6000516")]
		[Address(RVA = "0xEB8040", Offset = "0xEB8040", VA = "0xEB8040")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000517")]
		[Address(RVA = "0xEB88B0", Offset = "0xEB88B0", VA = "0xEB88B0")]
		public AuroraMain()
		{
		}
	}
}
namespace PathCreation.Examples
{
	[Token(Token = "0x20000FC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xABF490", Offset = "0xABF490")]
	public class GeneratePathExample : MonoBehaviour
	{
		[Token(Token = "0x40006F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool closedLoop;

		[Token(Token = "0x40006F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform[] waypoints;

		[Token(Token = "0x6000518")]
		[Address(RVA = "0xEB3E68", Offset = "0xEB3E68", VA = "0xEB3E68")]
		private void Start()
		{
		}

		[Token(Token = "0x6000519")]
		[Address(RVA = "0xEB3F20", Offset = "0xEB3F20", VA = "0xEB3F20")]
		public GeneratePathExample()
		{
		}
	}
	[Token(Token = "0x20000FD")]
	public class PathFollower : MonoBehaviour
	{
		[Token(Token = "0x40006F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PathCreator pathCreator;

		[Token(Token = "0x40006F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EndOfPathInstruction endOfPathInstruction;

		[Token(Token = "0x40006F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float speed;

		[Token(Token = "0x40006FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float distanceTravelled;

		[Token(Token = "0x600051A")]
		[Address(RVA = "0xEB3F30", Offset = "0xEB3F30", VA = "0xEB3F30")]
		private void Start()
		{
		}

		[Token(Token = "0x600051B")]
		[Address(RVA = "0xEB4004", Offset = "0xEB4004", VA = "0xEB4004")]
		private void Update()
		{
		}

		[Token(Token = "0x600051C")]
		[Address(RVA = "0xEB413C", Offset = "0xEB413C", VA = "0xEB413C")]
		private void OnPathChanged()
		{
		}

		[Token(Token = "0x600051D")]
		[Address(RVA = "0xEB419C", Offset = "0xEB419C", VA = "0xEB419C")]
		public PathFollower()
		{
		}
	}
	[Token(Token = "0x20000FE")]
	[ExecuteInEditMode]
	public class PathPlacer : PathSceneTool
	{
		[Token(Token = "0x40006FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject prefab;

		[Token(Token = "0x40006FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject holder;

		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float spacing;

		[Token(Token = "0x40006FE")]
		private const float minSpacing = 0.1f;

		[Token(Token = "0x600051E")]
		[Address(RVA = "0xEB41AC", Offset = "0xEB41AC", VA = "0xEB41AC")]
		private void Generate()
		{
		}

		[Token(Token = "0x600051F")]
		[Address(RVA = "0xEB43E8", Offset = "0xEB43E8", VA = "0xEB43E8")]
		private void DestroyObjects()
		{
		}

		[Token(Token = "0x6000520")]
		[Address(RVA = "0xEB44C4", Offset = "0xEB44C4", VA = "0xEB44C4", Slot = "5")]
		protected override void PathUpdated()
		{
		}

		[Token(Token = "0x6000521")]
		[Address(RVA = "0xEB454C", Offset = "0xEB454C", VA = "0xEB454C")]
		public PathPlacer()
		{
		}
	}
	[Token(Token = "0x20000FF")]
	[ExecuteInEditMode]
	public abstract class PathSceneTool : MonoBehaviour
	{
		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PathCreator pathCreator;

		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool autoUpdate;

		[Token(Token = "0x17000049")]
		protected VertexPath path
		{
			[Token(Token = "0x6000524")]
			[Address(RVA = "0xEB46BC", Offset = "0xEB46BC", VA = "0xEB46BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000011")]
		public event Action onDestroyed
		{
			[Token(Token = "0x6000522")]
			[Address(RVA = "0xEB4574", Offset = "0xEB4574", VA = "0xEB4574")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA430", Offset = "0xACA430")]
			add
			{
			}
			[Token(Token = "0x6000523")]
			[Address(RVA = "0xEB4618", Offset = "0xEB4618", VA = "0xEB4618")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA440", Offset = "0xACA440")]
			remove
			{
			}
		}

		[Token(Token = "0x6000525")]
		[Address(RVA = "0xEB46D8", Offset = "0xEB46D8", VA = "0xEB46D8")]
		public void TriggerUpdate()
		{
		}

		[Token(Token = "0x6000526")]
		[Address(RVA = "0xEB46E4", Offset = "0xEB46E4", VA = "0xEB46E4", Slot = "4")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000527")]
		protected abstract void PathUpdated();

		[Token(Token = "0x6000528")]
		[Address(RVA = "0xEB4564", Offset = "0xEB4564", VA = "0xEB4564")]
		protected PathSceneTool()
		{
		}
	}
	[Token(Token = "0x2000100")]
	public class PathSpawner : MonoBehaviour
	{
		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PathCreator pathPrefab;

		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PathFollower followerPrefab;

		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform[] spawnPoints;

		[Token(Token = "0x6000529")]
		[Address(RVA = "0xEB46F8", Offset = "0xEB46F8", VA = "0xEB46F8")]
		private void Start()
		{
		}

		[Token(Token = "0x600052A")]
		[Address(RVA = "0xEB4890", Offset = "0xEB4890", VA = "0xEB4890")]
		public PathSpawner()
		{
		}
	}
	[Token(Token = "0x2000101")]
	public class RoadMeshCreator : PathSceneTool
	{
		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC3978", Offset = "0xAC3978")]
		public float roadWidth;

		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC39B0", Offset = "0xAC39B0")]
		public float thickness;

		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool flattenSurface;

		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC39C8", Offset = "0xAC39C8")]
		public Material roadMaterial;

		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Material undersideMaterial;

		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float textureTiling;

		[Token(Token = "0x400070B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		private GameObject meshHolder;

		[Token(Token = "0x400070C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshFilter meshFilter;

		[Token(Token = "0x400070D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshRenderer meshRenderer;

		[Token(Token = "0x400070E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Mesh mesh;

		[Token(Token = "0x600052B")]
		[Address(RVA = "0xEB4898", Offset = "0xEB4898", VA = "0xEB4898", Slot = "5")]
		protected override void PathUpdated()
		{
		}

		[Token(Token = "0x600052C")]
		[Address(RVA = "0xEB4E84", Offset = "0xEB4E84", VA = "0xEB4E84")]
		private void CreateRoadMesh()
		{
		}

		[Token(Token = "0x600052D")]
		[Address(RVA = "0xEB4930", Offset = "0xEB4930", VA = "0xEB4930")]
		private void AssignMeshComponents()
		{
		}

		[Token(Token = "0x600052E")]
		[Address(RVA = "0xEB4C5C", Offset = "0xEB4C5C", VA = "0xEB4C5C")]
		private void AssignMaterials()
		{
		}

		[Token(Token = "0x600052F")]
		[Address(RVA = "0xEB59D4", Offset = "0xEB59D4", VA = "0xEB59D4")]
		public RoadMeshCreator()
		{
		}
	}
}
namespace PlayfulSystems.ScreenFade
{
	[Token(Token = "0x2000102")]
	public class HotkeyTrigger : MonoBehaviour
	{
		[Token(Token = "0x400070F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Key hotkey;

		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent onHotkey;

		[Token(Token = "0x6000530")]
		[Address(RVA = "0xEB705C", Offset = "0xEB705C", VA = "0xEB705C")]
		public void Update()
		{
		}

		[Token(Token = "0x6000531")]
		[Address(RVA = "0xEB70EC", Offset = "0xEB70EC", VA = "0xEB70EC")]
		public HotkeyTrigger()
		{
		}
	}
	[Token(Token = "0x2000103")]
	public class CameraFadeEffect : MonoBehaviour
	{
		[Token(Token = "0x2000447")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0BC0", Offset = "0xAC0BC0")]
		private sealed class <DoFade>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CameraFadeEffect <>4__this;

			[Token(Token = "0x4001C65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color startColor;

			[Token(Token = "0x4001C66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float startAlpha;

			[Token(Token = "0x4001C67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float targetAlpha;

			[Token(Token = "0x4001C68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float duration;

			[Token(Token = "0x4001C69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Action onDone;

			[Token(Token = "0x4001C6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <time>5__2;

			[Token(Token = "0x170002AF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D1A")]
				[Address(RVA = "0xEB698C", Offset = "0xEB698C", VA = "0xEB698C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D1C")]
				[Address(RVA = "0xEB69F4", Offset = "0xEB69F4", VA = "0xEB69F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D17")]
			[Address(RVA = "0xEB66DC", Offset = "0xEB66DC", VA = "0xEB66DC")]
			[DebuggerHidden]
			public <DoFade>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001D18")]
			[Address(RVA = "0xEB67EC", Offset = "0xEB67EC", VA = "0xEB67EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D19")]
			[Address(RVA = "0xEB67F0", Offset = "0xEB67F0", VA = "0xEB67F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D1B")]
			[Address(RVA = "0xEB6994", Offset = "0xEB6994", VA = "0xEB6994", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isFading;

		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CameraFadeEffect _instance;

		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material fadeMaterial;

		[Token(Token = "0x6000532")]
		[Address(RVA = "0xEB5E78", Offset = "0xEB5E78", VA = "0xEB5E78")]
		public static CameraFadeEffect GetFadeEffect()
		{
			return null;
		}

		[Token(Token = "0x6000533")]
		[Address(RVA = "0xEB5F88", Offset = "0xEB5F88", VA = "0xEB5F88")]
		private static CameraFadeEffect AddFadeEffect()
		{
			return null;
		}

		[Token(Token = "0x6000534")]
		[Address(RVA = "0xEB6130", Offset = "0xEB6130", VA = "0xEB6130")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000535")]
		[Address(RVA = "0xEB6048", Offset = "0xEB6048", VA = "0xEB6048")]
		private void Init()
		{
		}

		[Token(Token = "0x6000536")]
		[Address(RVA = "0xEB6208", Offset = "0xEB6208", VA = "0xEB6208")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000537")]
		[Address(RVA = "0xEB62B8", Offset = "0xEB62B8", VA = "0xEB62B8")]
		public static bool IsFading()
		{
			return default(bool);
		}

		[Token(Token = "0x6000538")]
		[Address(RVA = "0xEB6364", Offset = "0xEB6364", VA = "0xEB6364")]
		public static void TriggerFade(Color startColor, float startAlpha, float targetAlpha, float duration, [Optional] Action onDone)
		{
		}

		[Token(Token = "0x6000539")]
		[Address(RVA = "0xEB64C0", Offset = "0xEB64C0", VA = "0xEB64C0")]
		public void Fade(Color startColor, float startAlpha, float targetAlpha, float duration, [Optional] Action onDone)
		{
		}

		[Token(Token = "0x600053A")]
		[Address(RVA = "0xEB65F8", Offset = "0xEB65F8", VA = "0xEB65F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACA450", Offset = "0xACA450")]
		private IEnumerator DoFade(Color startColor, float startAlpha, float targetAlpha, float duration, [Optional] Action onDone)
		{
			return null;
		}

		[Token(Token = "0x600053B")]
		[Address(RVA = "0xEB6708", Offset = "0xEB6708", VA = "0xEB6708")]
		private void OnRenderImage(RenderTexture src, RenderTexture dst)
		{
		}

		[Token(Token = "0x600053C")]
		[Address(RVA = "0xEB67E4", Offset = "0xEB67E4", VA = "0xEB67E4")]
		public CameraFadeEffect()
		{
		}
	}
	[Token(Token = "0x2000104")]
	public class CameraFadeTrigger : MonoBehaviour
	{
		[Token(Token = "0x2000448")]
		public enum Behavior : byte
		{
			[Token(Token = "0x4001C6C")]
			None,
			[Token(Token = "0x4001C6D")]
			FadeIn,
			[Token(Token = "0x4001C6E")]
			FadeOut,
			[Token(Token = "0x4001C6F")]
			FadeOutToScene
		}

		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC3A38", Offset = "0xAC3A38")]
		public Behavior onEnable;

		[Token(Token = "0x4000715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color fadeColor;

		[Token(Token = "0x4000716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float durationFadeIn;

		[Token(Token = "0x4000717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float durationFadeOut;

		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC3A70", Offset = "0xAC3A70")]
		public int sceneNumber;

		[Token(Token = "0x600053D")]
		[Address(RVA = "0xEB69FC", Offset = "0xEB69FC", VA = "0xEB69FC")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x600053E")]
		[Address(RVA = "0xEB6A5C", Offset = "0xEB6A5C", VA = "0xEB6A5C")]
		public void FadeIn()
		{
		}

		[Token(Token = "0x600053F")]
		[Address(RVA = "0xEB6A78", Offset = "0xEB6A78", VA = "0xEB6A78")]
		public void FadeOut()
		{
		}

		[Token(Token = "0x6000540")]
		[Address(RVA = "0xEB6AC0", Offset = "0xEB6AC0", VA = "0xEB6AC0")]
		public void FadeOutToScene()
		{
		}

		[Token(Token = "0x6000541")]
		[Address(RVA = "0xEB6A94", Offset = "0xEB6A94", VA = "0xEB6A94")]
		public void FadeOutToScene(int scene)
		{
		}

		[Token(Token = "0x6000542")]
		[Address(RVA = "0xEB6C0C", Offset = "0xEB6C0C", VA = "0xEB6C0C")]
		public CameraFadeTrigger()
		{
		}
	}
	[Token(Token = "0x2000105")]
	public class FadeInOnAwake : MonoBehaviour
	{
		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color fadeColor;

		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeInDuration;

		[Token(Token = "0x6000543")]
		[Address(RVA = "0xEB6C54", Offset = "0xEB6C54", VA = "0xEB6C54")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000544")]
		[Address(RVA = "0xEB6C94", Offset = "0xEB6C94", VA = "0xEB6C94")]
		public FadeInOnAwake()
		{
		}
	}
	[Token(Token = "0x2000106")]
	public class FadeToScene
	{
		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int sceneToLoad;

		[Token(Token = "0x6000545")]
		[Address(RVA = "0xEB6CD0", Offset = "0xEB6CD0", VA = "0xEB6CD0")]
		public static void LoadScene(string name, float duration = 1f)
		{
		}

		[Token(Token = "0x6000546")]
		[Address(RVA = "0xEB6D08", Offset = "0xEB6D08", VA = "0xEB6D08")]
		public static void LoadScene(string name, Color fadeColor, float duration = 1f)
		{
		}

		[Token(Token = "0x6000547")]
		[Address(RVA = "0xEB6F04", Offset = "0xEB6F04", VA = "0xEB6F04")]
		public static void LoadScene(int number, float duration = 1f)
		{
		}

		[Token(Token = "0x6000548")]
		[Address(RVA = "0xEB6AC8", Offset = "0xEB6AC8", VA = "0xEB6AC8")]
		public static void LoadScene(int number, Color fadeColor, float duration = 1f)
		{
		}

		[Token(Token = "0x6000549")]
		[Address(RVA = "0xEB6E38", Offset = "0xEB6E38", VA = "0xEB6E38")]
		private static void DoFadeAndWait(int number, Color fadeColor, float duration)
		{
		}

		[Token(Token = "0x600054A")]
		[Address(RVA = "0xEB6F3C", Offset = "0xEB6F3C", VA = "0xEB6F3C")]
		private static void LoadAfterFade()
		{
		}

		[Token(Token = "0x600054B")]
		[Address(RVA = "0xEB6FB4", Offset = "0xEB6FB4", VA = "0xEB6FB4")]
		private static int GetBuildIndexOfScene(string name)
		{
			return default(int);
		}

		[Token(Token = "0x600054C")]
		[Address(RVA = "0xEB7054", Offset = "0xEB7054", VA = "0xEB7054")]
		public FadeToScene()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x2000107")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x1700004A")]
		public bool Highlight
		{
			[Token(Token = "0x600054D")]
			[Address(RVA = "0xF0C7A0", Offset = "0xF0C7A0", VA = "0xF0C7A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600054E")]
			[Address(RVA = "0xF0C7A8", Offset = "0xF0C7A8", VA = "0xF0C7A8")]
			set
			{
			}
		}

		[Token(Token = "0x600054F")]
		[Address(RVA = "0xF0C7B4", Offset = "0xF0C7B4", VA = "0xF0C7B4")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6000550")]
		[Address(RVA = "0xF0C980", Offset = "0xF0C980", VA = "0xF0C980", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6000551")]
		[Address(RVA = "0xF0C9A8", Offset = "0xF0C9A8", VA = "0xF0C9A8", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6000552")]
		[Address(RVA = "0xF0C9D0", Offset = "0xF0C9D0", VA = "0xF0C9D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000553")]
		[Address(RVA = "0xF0C880", Offset = "0xF0C880", VA = "0xF0C880")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6000554")]
		[Address(RVA = "0xF0CC60", Offset = "0xF0CC60", VA = "0xF0CC60")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x2000108")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x1700004B")]
		public bool InRange
		{
			[Token(Token = "0x6000556")]
			[Address(RVA = "0xF0D0C0", Offset = "0xF0D0C0", VA = "0xF0D0C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000557")]
			[Address(RVA = "0xF0D0C8", Offset = "0xF0D0C8", VA = "0xF0D0C8")]
			set
			{
			}
		}

		[Token(Token = "0x1700004C")]
		public bool Targeted
		{
			[Token(Token = "0x6000558")]
			[Address(RVA = "0xF0D244", Offset = "0xF0D244", VA = "0xF0D244")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000559")]
			[Address(RVA = "0xF0D24C", Offset = "0xF0D24C", VA = "0xF0D24C")]
			set
			{
			}
		}

		[Token(Token = "0x600055A")]
		[Address(RVA = "0xF0D258", Offset = "0xF0D258", VA = "0xF0D258", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600055B")]
		[Address(RVA = "0xF0D0D4", Offset = "0xF0D0D4", VA = "0xF0D0D4")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x600055C")]
		[Address(RVA = "0xF0D434", Offset = "0xF0D434", VA = "0xF0D434")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x2000109")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xABF514", Offset = "0xABF514")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4000728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x400072A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x400072B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x400072C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x400072D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x400072E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x400072F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4000730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x1700004D")]
		public bool UseSpherecast
		{
			[Token(Token = "0x600055D")]
			[Address(RVA = "0xF0D43C", Offset = "0xF0D43C", VA = "0xF0D43C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600055E")]
			[Address(RVA = "0xF0D444", Offset = "0xF0D444", VA = "0xF0D444")]
			set
			{
			}
		}

		[Token(Token = "0x600055F")]
		[Address(RVA = "0xF0D460", Offset = "0xF0D460", VA = "0xF0D460", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000560")]
		[Address(RVA = "0xF0D678", Offset = "0xF0D678", VA = "0xF0D678", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x6000561")]
		[Address(RVA = "0xF0DFEC", Offset = "0xF0DFEC", VA = "0xF0DFEC", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6000562")]
		[Address(RVA = "0xF0E5C4", Offset = "0xF0E5C4", VA = "0xF0E5C4", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6000563")]
		[Address(RVA = "0xF0E9A4", Offset = "0xF0E9A4", VA = "0xF0E9A4")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x6000564")]
		[Address(RVA = "0xF0D8E4", Offset = "0xF0D8E4", VA = "0xF0D8E4")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000565")]
		[Address(RVA = "0xF0EA80", Offset = "0xF0EA80", VA = "0xF0EA80")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000566")]
		[Address(RVA = "0xF0EF1C", Offset = "0xF0EF1C", VA = "0xF0EF1C", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000567")]
		[Address(RVA = "0xF0EF34", Offset = "0xF0EF34", VA = "0xF0EF34", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6000568")]
		[Address(RVA = "0xF0EF3C", Offset = "0xF0EF3C", VA = "0xF0EF3C")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x200010A")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4000735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x4000738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x6000569")]
		[Address(RVA = "0xF10B2C", Offset = "0xF10B2C", VA = "0xF10B2C")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x600056A")]
		[Address(RVA = "0xF10BDC", Offset = "0xF10BDC", VA = "0xF10BDC")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x600056B")]
		[Address(RVA = "0xF10C88", Offset = "0xF10C88", VA = "0xF10C88")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x200010B")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x2000449")]
		public enum CrosshairState
		{
			[Token(Token = "0x4001C71")]
			Disabled,
			[Token(Token = "0x4001C72")]
			Enabled,
			[Token(Token = "0x4001C73")]
			Targeted
		}

		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x600056C")]
		[Address(RVA = "0xF10C90", Offset = "0xF10C90", VA = "0xF10C90")]
		private void Start()
		{
		}

		[Token(Token = "0x600056D")]
		[Address(RVA = "0xF0D398", Offset = "0xF0D398", VA = "0xF0D398")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x600056E")]
		[Address(RVA = "0xF10D00", Offset = "0xF10D00", VA = "0xF10D00")]
		private void Update()
		{
		}

		[Token(Token = "0x600056F")]
		[Address(RVA = "0xF10D48", Offset = "0xF10D48", VA = "0xF10D48")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x200010C")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x6000570")]
		[Address(RVA = "0xEA81AC", Offset = "0xEA81AC", VA = "0xEA81AC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000571")]
		[Address(RVA = "0xEA8278", Offset = "0xEA8278", VA = "0xEA8278")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000572")]
		[Address(RVA = "0xEA8284", Offset = "0xEA8284", VA = "0xEA8284")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000573")]
		[Address(RVA = "0xEA8290", Offset = "0xEA8290", VA = "0xEA8290")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x200010D")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x6000574")]
		[Address(RVA = "0xF0B314", Offset = "0xF0B314", VA = "0xF0B314")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000575")]
		[Address(RVA = "0xF0B36C", Offset = "0xF0B36C", VA = "0xF0B36C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000576")]
		[Address(RVA = "0xF0B610", Offset = "0xF0B610", VA = "0xF0B610")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000577")]
		[Address(RVA = "0xF0B700", Offset = "0xF0B700", VA = "0xF0B700")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000578")]
		[Address(RVA = "0xF0B370", Offset = "0xF0B370", VA = "0xF0B370")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x6000579")]
		[Address(RVA = "0xF0B7F0", Offset = "0xF0B7F0", VA = "0xF0B7F0")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x200010E")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x200044A")]
		public enum ContactTest
		{
			[Token(Token = "0x4001C75")]
			PerpenTest,
			[Token(Token = "0x4001C76")]
			BackwardsPress
		}

		[Token(Token = "0x4000740")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4000741")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x4000749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private bool _allowMultipleNearFieldInteraction;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC3BD8", Offset = "0xAC3BD8")]
		private InteractableState <CurrentButtonState>k__BackingField;

		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x1700004E")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x600057A")]
			[Address(RVA = "0xF0B8A0", Offset = "0xF0B8A0", VA = "0xF0B8A0", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700004F")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x600057B")]
			[Address(RVA = "0xF0B8A8", Offset = "0xF0B8A8", VA = "0xF0B8A8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000050")]
		public InteractableState CurrentButtonState
		{
			[Token(Token = "0x600057C")]
			[Address(RVA = "0xF0B8B4", Offset = "0xF0B8B4", VA = "0xF0B8B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA4B4", Offset = "0xACA4B4")]
			get
			{
				return default(InteractableState);
			}
			[Token(Token = "0x600057D")]
			[Address(RVA = "0xF0B8BC", Offset = "0xF0B8BC", VA = "0xF0B8BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA4C4", Offset = "0xACA4C4")]
			private set
			{
			}
		}

		[Token(Token = "0x600057E")]
		[Address(RVA = "0xF0B8C4", Offset = "0xF0B8C4", VA = "0xF0B8C4", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600057F")]
		[Address(RVA = "0xF0BA3C", Offset = "0xF0BA3C", VA = "0xF0BA3C")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x6000580")]
		[Address(RVA = "0xF0BC0C", Offset = "0xF0BC0C", VA = "0xF0BC0C", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x6000581")]
		[Address(RVA = "0xF0C164", Offset = "0xF0C164", VA = "0xF0C164")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x6000582")]
		[Address(RVA = "0xF0C288", Offset = "0xF0C288", VA = "0xF0C288")]
		public void ForceResetButton()
		{
		}

		[Token(Token = "0x6000583")]
		[Address(RVA = "0xF0C07C", Offset = "0xF0C07C", VA = "0xF0C07C")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000584")]
		[Address(RVA = "0xF0C378", Offset = "0xF0C378", VA = "0xF0C378")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000585")]
		[Address(RVA = "0xF0C46C", Offset = "0xF0C46C", VA = "0xF0C46C")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000586")]
		[Address(RVA = "0xF0C598", Offset = "0xF0C598", VA = "0xF0C598")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x200010F")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC3BF8", Offset = "0xAC3BF8")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC3C08", Offset = "0xAC3C08")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x17000051")]
		public Collider Collider
		{
			[Token(Token = "0x6000587")]
			[Address(RVA = "0xF0C69C", Offset = "0xF0C69C", VA = "0xF0C69C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA4D4", Offset = "0xACA4D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000588")]
			[Address(RVA = "0xF0C6A4", Offset = "0xF0C6A4", VA = "0xF0C6A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA4E4", Offset = "0xACA4E4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000052")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x6000589")]
			[Address(RVA = "0xF0C6AC", Offset = "0xF0C6AC", VA = "0xF0C6AC", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA4F4", Offset = "0xACA4F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600058A")]
			[Address(RVA = "0xF0C6B4", Offset = "0xF0C6B4", VA = "0xF0C6B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA504", Offset = "0xACA504")]
			private set
			{
			}
		}

		[Token(Token = "0x17000053")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x600058B")]
			[Address(RVA = "0xF0C6BC", Offset = "0xF0C6BC", VA = "0xF0C6BC", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x600058C")]
		[Address(RVA = "0xF0C70C", Offset = "0xF0C70C", VA = "0xF0C70C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600058D")]
		[Address(RVA = "0xF0C798", Offset = "0xF0C798", VA = "0xF0C798")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x2000110")]
	public interface ColliderZone
	{
		[Token(Token = "0x17000054")]
		Collider Collider
		{
			[Token(Token = "0x600058E")]
			get;
		}

		[Token(Token = "0x17000055")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x600058F")]
			get;
		}

		[Token(Token = "0x17000056")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6000590")]
			get;
		}
	}
	[Token(Token = "0x2000111")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly float FrameTime;

		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x6000591")]
		[Address(RVA = "0xF0BBA0", Offset = "0xF0BBA0", VA = "0xF0BBA0")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x2000112")]
	public enum InteractionType
	{
		[Token(Token = "0x4000756")]
		Enter,
		[Token(Token = "0x4000757")]
		Stay,
		[Token(Token = "0x4000758")]
		Exit
	}
	[Token(Token = "0x2000113")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x200044B")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4001C78")]
			Mesh,
			[Token(Token = "0x4001C79")]
			Skeleton,
			[Token(Token = "0x4001C7A")]
			Both
		}

		[Token(Token = "0x200044C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0BD0", Offset = "0xAC0BD0")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x170002B1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D20")]
				[Address(RVA = "0xF11D2C", Offset = "0xF11D2C", VA = "0xF11D2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D22")]
				[Address(RVA = "0xF11D94", Offset = "0xF11D94", VA = "0xF11D94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D1D")]
			[Address(RVA = "0xF117B0", Offset = "0xF117B0", VA = "0xF117B0")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6001D1E")]
			[Address(RVA = "0xF11AD8", Offset = "0xF11AD8", VA = "0xF11AD8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D1F")]
			[Address(RVA = "0xF11ADC", Offset = "0xF11ADC", VA = "0xF11ADC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D21")]
			[Address(RVA = "0xF11D34", Offset = "0xF11D34", VA = "0xF11D34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000759")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC3C38", Offset = "0xAC3C38")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x17000057")]
		public OVRHand RightHand
		{
			[Token(Token = "0x6000592")]
			[Address(RVA = "0xF0FBB8", Offset = "0xF0FBB8", VA = "0xF0FBB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000593")]
			[Address(RVA = "0xF10D50", Offset = "0xF10D50", VA = "0xF10D50")]
			private set
			{
			}
		}

		[Token(Token = "0x17000058")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x6000594")]
			[Address(RVA = "0xF107B0", Offset = "0xF107B0", VA = "0xF107B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000595")]
			[Address(RVA = "0xF10DC0", Offset = "0xF10DC0", VA = "0xF10DC0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000059")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x6000596")]
			[Address(RVA = "0xF10E30", Offset = "0xF10E30", VA = "0xF10E30")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000597")]
			[Address(RVA = "0xF10E68", Offset = "0xF10E68", VA = "0xF10E68")]
			private set
			{
			}
		}

		[Token(Token = "0x1700005A")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x6000598")]
			[Address(RVA = "0xF10ED8", Offset = "0xF10ED8", VA = "0xF10ED8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000599")]
			[Address(RVA = "0xF10F10", Offset = "0xF10F10", VA = "0xF10F10")]
			private set
			{
			}
		}

		[Token(Token = "0x1700005B")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x600059A")]
			[Address(RVA = "0xF10F80", Offset = "0xF10F80", VA = "0xF10F80")]
			get
			{
				return null;
			}
			[Token(Token = "0x600059B")]
			[Address(RVA = "0xF10FB8", Offset = "0xF10FB8", VA = "0xF10FB8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700005C")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x600059C")]
			[Address(RVA = "0xF0FB84", Offset = "0xF0FB84", VA = "0xF0FB84")]
			get
			{
				return null;
			}
			[Token(Token = "0x600059D")]
			[Address(RVA = "0xF11028", Offset = "0xF11028", VA = "0xF11028")]
			private set
			{
			}
		}

		[Token(Token = "0x1700005D")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x600059E")]
			[Address(RVA = "0xF1077C", Offset = "0xF1077C", VA = "0xF1077C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600059F")]
			[Address(RVA = "0xF11094", Offset = "0xF11094", VA = "0xF11094")]
			private set
			{
			}
		}

		[Token(Token = "0x1700005E")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x60005A0")]
			[Address(RVA = "0xF11100", Offset = "0xF11100", VA = "0xF11100")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005A1")]
			[Address(RVA = "0xF11134", Offset = "0xF11134", VA = "0xF11134")]
			private set
			{
			}
		}

		[Token(Token = "0x1700005F")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x60005A2")]
			[Address(RVA = "0xF111A0", Offset = "0xF111A0", VA = "0xF111A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005A3")]
			[Address(RVA = "0xF111D4", Offset = "0xF111D4", VA = "0xF111D4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000060")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x60005A4")]
			[Address(RVA = "0xF11240", Offset = "0xF11240", VA = "0xF11240")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005A5")]
			[Address(RVA = "0xF11274", Offset = "0xF11274", VA = "0xF11274")]
			private set
			{
			}
		}

		[Token(Token = "0x17000061")]
		public static HandsManager Instance
		{
			[Token(Token = "0x60005A6")]
			[Address(RVA = "0xF112E0", Offset = "0xF112E0", VA = "0xF112E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA514", Offset = "0xACA514")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005A7")]
			[Address(RVA = "0xF11330", Offset = "0xF11330", VA = "0xF11330")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA524", Offset = "0xACA524")]
			private set
			{
			}
		}

		[Token(Token = "0x60005A8")]
		[Address(RVA = "0xF11388", Offset = "0xF11388", VA = "0xF11388")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005A9")]
		[Address(RVA = "0xF11728", Offset = "0xF11728", VA = "0xF11728")]
		private void Update()
		{
		}

		[Token(Token = "0x60005AA")]
		[Address(RVA = "0xF116AC", Offset = "0xF116AC", VA = "0xF116AC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACA534", Offset = "0xACA534")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x60005AB")]
		[Address(RVA = "0xF0CF14", Offset = "0xF0CF14", VA = "0xF0CF14")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x60005AC")]
		[Address(RVA = "0xF117DC", Offset = "0xF117DC", VA = "0xF117DC")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x60005AD")]
		[Address(RVA = "0xF107E8", Offset = "0xF107E8", VA = "0xF107E8")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x60005AE")]
		[Address(RVA = "0xF0F9F4", Offset = "0xF0F9F4", VA = "0xF0F9F4")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x60005AF")]
		[Address(RVA = "0xF119BC", Offset = "0xF119BC", VA = "0xF119BC")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x2000114")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200044D")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6001D23")]
			[Address(RVA = "0xF124E4", Offset = "0xF124E4", VA = "0xF124E4")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x17000062")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x60005B0")]
			[Address(RVA = "0xF11D9C", Offset = "0xF11D9C", VA = "0xF11D9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000063")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x60005B1")]
			[Address(RVA = "0xF11DA4", Offset = "0xF11DA4", VA = "0xF11DA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000064")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x60005B2")]
			[Address(RVA = "0xF11DAC", Offset = "0xF11DAC", VA = "0xF11DAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000065")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x60005B3")]
			[Address(RVA = "0xF11DB4", Offset = "0xF11DB4", VA = "0xF11DB4", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000012")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x60005B4")]
			[Address(RVA = "0xF11DBC", Offset = "0xF11DBC", VA = "0xF11DBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA598", Offset = "0xACA598")]
			add
			{
			}
			[Token(Token = "0x60005B5")]
			[Address(RVA = "0xF11E60", Offset = "0xF11E60", VA = "0xF11E60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA5A8", Offset = "0xACA5A8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000013")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x60005B7")]
			[Address(RVA = "0xF11F78", Offset = "0xF11F78", VA = "0xF11F78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA5B8", Offset = "0xACA5B8")]
			add
			{
			}
			[Token(Token = "0x60005B8")]
			[Address(RVA = "0xF1201C", Offset = "0xF1201C", VA = "0xF1201C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA5C8", Offset = "0xACA5C8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000014")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x60005BA")]
			[Address(RVA = "0xF12134", Offset = "0xF12134", VA = "0xF12134")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA5D8", Offset = "0xACA5D8")]
			add
			{
			}
			[Token(Token = "0x60005BB")]
			[Address(RVA = "0xF121D8", Offset = "0xF121D8", VA = "0xF121D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA5E8", Offset = "0xACA5E8")]
			remove
			{
			}
		}

		[Token(Token = "0x60005B6")]
		[Address(RVA = "0xF11F04", Offset = "0xF11F04", VA = "0xF11F04", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60005B9")]
		[Address(RVA = "0xF120C0", Offset = "0xF120C0", VA = "0xF120C0", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60005BC")]
		[Address(RVA = "0xF1227C", Offset = "0xF1227C", VA = "0xF1227C", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60005BD")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x60005BE")]
		[Address(RVA = "0xF0B9D8", Offset = "0xF0B9D8", VA = "0xF0B9D8", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60005BF")]
		[Address(RVA = "0xF123B8", Offset = "0xF123B8", VA = "0xF123B8", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60005C0")]
		[Address(RVA = "0xF0C694", Offset = "0xF0C694", VA = "0xF0C694")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x2000115")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4000771")]
		None,
		[Token(Token = "0x4000772")]
		Proximity,
		[Token(Token = "0x4000773")]
		Contact,
		[Token(Token = "0x4000774")]
		Action
	}
	[Token(Token = "0x2000116")]
	public enum InteractableState
	{
		[Token(Token = "0x4000776")]
		Default,
		[Token(Token = "0x4000777")]
		ProximityState,
		[Token(Token = "0x4000778")]
		ContactState,
		[Token(Token = "0x4000779")]
		ActionState
	}
	[Token(Token = "0x2000117")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Interactable Interactable;

		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x60005C1")]
		[Address(RVA = "0xF0C210", Offset = "0xF0C210", VA = "0xF0C210")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x2000118")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x17000066")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x60005C2")]
			[Address(RVA = "0xF12534", Offset = "0xF12534", VA = "0xF12534")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005C3")]
		[Address(RVA = "0xF122F0", Offset = "0xF122F0", VA = "0xF122F0")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60005C4")]
		[Address(RVA = "0xF1241C", Offset = "0xF1241C", VA = "0xF1241C")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60005C5")]
		[Address(RVA = "0xF1259C", Offset = "0xF1259C", VA = "0xF1259C")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x2000119")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x200044E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0BE0", Offset = "0xAC0BE0")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4001C81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4001C82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4001C83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4001C84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4001C85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4001C86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x170002B3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D28")]
				[Address(RVA = "0xF136A4", Offset = "0xF136A4", VA = "0xF136A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D2A")]
				[Address(RVA = "0xF1370C", Offset = "0xF1370C", VA = "0xF1370C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D24")]
			[Address(RVA = "0xF130F0", Offset = "0xF130F0", VA = "0xF130F0")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001D25")]
			[Address(RVA = "0xF1321C", Offset = "0xF1321C", VA = "0xF1321C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D26")]
			[Address(RVA = "0xF13290", Offset = "0xF13290", VA = "0xF13290", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D27")]
			[Address(RVA = "0xF13238", Offset = "0xF13238", VA = "0xF13238")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001D29")]
			[Address(RVA = "0xF136AC", Offset = "0xF136AC", VA = "0xF136AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x60005C7")]
		[Address(RVA = "0xF12FD0", Offset = "0xF12FD0", VA = "0xF12FD0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005C8")]
		[Address(RVA = "0xF1304C", Offset = "0xF1304C", VA = "0xF1304C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACA5F8", Offset = "0xACA5F8")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x60005C9")]
		[Address(RVA = "0xF1311C", Offset = "0xF1311C", VA = "0xF1311C")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x60005CA")]
		[Address(RVA = "0xF13214", Offset = "0xF13214", VA = "0xF13214")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x200011A")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x17000067")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x60005CB")]
			[Address(RVA = "0xF0F420", Offset = "0xF0F420", VA = "0xF0F420")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005CC")]
		[Address(RVA = "0xF0F58C", Offset = "0xF0F58C", VA = "0xF0F58C")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x60005CD")]
		[Address(RVA = "0xF13714", Offset = "0xF13714", VA = "0xF13714")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x60005CE")]
		[Address(RVA = "0xF137C0", Offset = "0xF137C0", VA = "0xF137C0")]
		private void Update()
		{
		}

		[Token(Token = "0x60005CF")]
		[Address(RVA = "0xF13A88", Offset = "0xF13A88", VA = "0xF13A88")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x60005D0")]
		[Address(RVA = "0xF13AD0", Offset = "0xF13AD0", VA = "0xF13AD0")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60005D1")]
		[Address(RVA = "0xF13D3C", Offset = "0xF13D3C", VA = "0xF13D3C")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x60005D2")]
		[Address(RVA = "0xF13E68", Offset = "0xF13E68", VA = "0xF13E68")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x200011B")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x200044F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0BF0", Offset = "0xAC0BF0")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x170002B5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D2E")]
				[Address(RVA = "0xF109F8", Offset = "0xF109F8", VA = "0xF109F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D30")]
				[Address(RVA = "0xF10A60", Offset = "0xF10A60", VA = "0xF10A60", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D2B")]
			[Address(RVA = "0xF0F6B4", Offset = "0xF0F6B4", VA = "0xF0F6B4")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001D2C")]
			[Address(RVA = "0xF103F4", Offset = "0xF103F4", VA = "0xF103F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D2D")]
			[Address(RVA = "0xF103F8", Offset = "0xF103F8", VA = "0xF103F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D2F")]
			[Address(RVA = "0xF10A00", Offset = "0xF10A00", VA = "0xF10A00", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000789")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x17000068")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x60005D3")]
			[Address(RVA = "0xF0F2EC", Offset = "0xF0F2EC", VA = "0xF0F2EC", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000069")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x60005D4")]
			[Address(RVA = "0xF0F2F4", Offset = "0xF0F2F4", VA = "0xF0F2F4", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x1700006A")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x60005D5")]
			[Address(RVA = "0xF0F2FC", Offset = "0xF0F2FC", VA = "0xF0F2FC", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700006B")]
		public override bool EnableState
		{
			[Token(Token = "0x60005D6")]
			[Address(RVA = "0xF0F304", Offset = "0xF0F304", VA = "0xF0F304", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60005D7")]
			[Address(RVA = "0xF0F330", Offset = "0xF0F330", VA = "0xF0F330", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x60005D8")]
		[Address(RVA = "0xF0F36C", Offset = "0xF0F36C", VA = "0xF0F36C", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60005D9")]
		[Address(RVA = "0xF0F638", Offset = "0xF0F638", VA = "0xF0F638")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACA65C", Offset = "0xACA65C")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x60005DA")]
		[Address(RVA = "0xF0F6E0", Offset = "0xF0F6E0", VA = "0xF0F6E0")]
		private void Update()
		{
		}

		[Token(Token = "0x60005DB")]
		[Address(RVA = "0xF0FBF0", Offset = "0xF0FBF0", VA = "0xF0FBF0")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x60005DC")]
		[Address(RVA = "0xF0FE68", Offset = "0xF0FE68", VA = "0xF0FE68")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x60005DD")]
		[Address(RVA = "0xF0FFA8", Offset = "0xF0FFA8", VA = "0xF0FFA8", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60005DE")]
		[Address(RVA = "0xF10280", Offset = "0xF10280", VA = "0xF10280", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x60005DF")]
		[Address(RVA = "0xF10284", Offset = "0xF10284", VA = "0xF10284", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x60005E0")]
		[Address(RVA = "0xF10288", Offset = "0xF10288", VA = "0xF10288")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x200011C")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC3CC8", Offset = "0xAC3CC8")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC3CD8", Offset = "0xAC3CD8")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC3CE8", Offset = "0xAC3CE8")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x1700006C")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x60005E1")]
			[Address(RVA = "0xF10A68", Offset = "0xF10A68", VA = "0xF10A68", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA6C0", Offset = "0xACA6C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005E2")]
			[Address(RVA = "0xF10A70", Offset = "0xF10A70", VA = "0xF10A70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA6D0", Offset = "0xACA6D0")]
			set
			{
			}
		}

		[Token(Token = "0x1700006D")]
		public bool EnableState
		{
			[Token(Token = "0x60005E3")]
			[Address(RVA = "0xF10A78", Offset = "0xF10A78", VA = "0xF10A78", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60005E4")]
			[Address(RVA = "0xF10A94", Offset = "0xF10A94", VA = "0xF10A94", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700006E")]
		public bool ToolActivateState
		{
			[Token(Token = "0x60005E5")]
			[Address(RVA = "0xF10AB4", Offset = "0xF10AB4", VA = "0xF10AB4", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA6E0", Offset = "0xACA6E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60005E6")]
			[Address(RVA = "0xF10ABC", Offset = "0xF10ABC", VA = "0xF10ABC", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA6F0", Offset = "0xACA6F0")]
			set
			{
			}
		}

		[Token(Token = "0x1700006F")]
		public float SphereRadius
		{
			[Token(Token = "0x60005E7")]
			[Address(RVA = "0xF10AC8", Offset = "0xF10AC8", VA = "0xF10AC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA700", Offset = "0xACA700")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60005E8")]
			[Address(RVA = "0xF10AD0", Offset = "0xF10AD0", VA = "0xF10AD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA710", Offset = "0xACA710")]
			private set
			{
			}
		}

		[Token(Token = "0x60005E9")]
		[Address(RVA = "0xF10AD8", Offset = "0xF10AD8", VA = "0xF10AD8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005EA")]
		[Address(RVA = "0xF10B20", Offset = "0xF10B20", VA = "0xF10B20", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60005EB")]
		[Address(RVA = "0xF10B24", Offset = "0xF10B24", VA = "0xF10B24")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x200011D")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4000799")]
		None = 0,
		[Token(Token = "0x400079A")]
		Ray = 1,
		[Token(Token = "0x400079B")]
		Poke = 4,
		[Token(Token = "0x400079C")]
		All = -1
	}
	[Token(Token = "0x200011E")]
	public enum ToolInputState
	{
		[Token(Token = "0x400079E")]
		Inactive,
		[Token(Token = "0x400079F")]
		PrimaryInputDown,
		[Token(Token = "0x40007A0")]
		PrimaryInputDownStay,
		[Token(Token = "0x40007A1")]
		PrimaryInputUp
	}
	[Token(Token = "0x200011F")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x60005EC")]
		[Address(RVA = "0xF10228", Offset = "0xF10228", VA = "0xF10228")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x2000120")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC3CF8", Offset = "0xAC3CF8")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC3D08", Offset = "0xAC3D08")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC3D18", Offset = "0xAC3D18")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x17000070")]
		public Transform ToolTransform
		{
			[Token(Token = "0x60005ED")]
			[Address(RVA = "0xF0C590", Offset = "0xF0C590", VA = "0xF0C590")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000071")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x60005EE")]
			[Address(RVA = "0xF1261C", Offset = "0xF1261C", VA = "0xF1261C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA720", Offset = "0xACA720")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60005EF")]
			[Address(RVA = "0xF12624", Offset = "0xF12624", VA = "0xF12624")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA730", Offset = "0xACA730")]
			set
			{
			}
		}

		[Token(Token = "0x17000072")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x60005F0")]
			get;
		}

		[Token(Token = "0x17000073")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x60005F1")]
			get;
		}

		[Token(Token = "0x17000074")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x60005F2")]
			get;
		}

		[Token(Token = "0x17000075")]
		public Vector3 Velocity
		{
			[Token(Token = "0x60005F3")]
			[Address(RVA = "0xF12630", Offset = "0xF12630", VA = "0xF12630")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA740", Offset = "0xACA740")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60005F4")]
			[Address(RVA = "0xF1263C", Offset = "0xF1263C", VA = "0xF1263C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA750", Offset = "0xACA750")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000076")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x60005F5")]
			[Address(RVA = "0xF12648", Offset = "0xF12648", VA = "0xF12648")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA760", Offset = "0xACA760")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60005F6")]
			[Address(RVA = "0xF12654", Offset = "0xF12654", VA = "0xF12654")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA770", Offset = "0xACA770")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000077")]
		public abstract bool EnableState
		{
			[Token(Token = "0x60005FB")]
			get;
			[Token(Token = "0x60005FC")]
			set;
		}

		[Token(Token = "0x60005F7")]
		[Address(RVA = "0xF12660", Offset = "0xF12660", VA = "0xF12660")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60005F8")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x60005F9")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x60005FA")]
		public abstract void DeFocus();

		[Token(Token = "0x60005FD")]
		public abstract void Initialize();

		[Token(Token = "0x60005FE")]
		[Address(RVA = "0xF12668", Offset = "0xF12668", VA = "0xF12668")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x60005FF")]
		[Address(RVA = "0xF126B8", Offset = "0xF126B8", VA = "0xF126B8")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6000600")]
		[Address(RVA = "0xF12710", Offset = "0xF12710", VA = "0xF12710", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6000601")]
		[Address(RVA = "0xF12970", Offset = "0xF12970", VA = "0xF12970", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6000602")]
		[Address(RVA = "0xF1029C", Offset = "0xF1029C", VA = "0xF1029C")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x2000121")]
	public interface InteractableToolView
	{
		[Token(Token = "0x17000078")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6000603")]
			get;
		}

		[Token(Token = "0x17000079")]
		bool EnableState
		{
			[Token(Token = "0x6000605")]
			get;
			[Token(Token = "0x6000606")]
			set;
		}

		[Token(Token = "0x1700007A")]
		bool ToolActivateState
		{
			[Token(Token = "0x6000607")]
			get;
			[Token(Token = "0x6000608")]
			set;
		}

		[Token(Token = "0x6000604")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x2000122")]
	public class PinchStateModule
	{
		[Token(Token = "0x2000450")]
		private enum PinchState
		{
			[Token(Token = "0x4001C8B")]
			None,
			[Token(Token = "0x4001C8C")]
			PinchDown,
			[Token(Token = "0x4001C8D")]
			PinchStay,
			[Token(Token = "0x4001C8E")]
			PinchUp
		}

		[Token(Token = "0x40007AE")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x1700007B")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x6000609")]
			[Address(RVA = "0xEA8298", Offset = "0xEA8298", VA = "0xEA8298")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700007C")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x600060A")]
			[Address(RVA = "0xEA8324", Offset = "0xEA8324", VA = "0xEA8324")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700007D")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x600060B")]
			[Address(RVA = "0xEA83B0", Offset = "0xEA83B0", VA = "0xEA83B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600060C")]
		[Address(RVA = "0xEA843C", Offset = "0xEA843C", VA = "0xEA843C")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x600060D")]
		[Address(RVA = "0xEA8470", Offset = "0xEA8470", VA = "0xEA8470")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x2000123")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x40007B1")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x40007B2")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x40007B3")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x40007B4")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x40007B5")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC3D38", Offset = "0xAC3D38")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x40007BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x1700007E")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x600060E")]
			[Address(RVA = "0xEA8740", Offset = "0xEA8740", VA = "0xEA8740", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x1700007F")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x600060F")]
			[Address(RVA = "0xEA8748", Offset = "0xEA8748", VA = "0xEA8748", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000080")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6000610")]
			[Address(RVA = "0xEA87B0", Offset = "0xEA87B0", VA = "0xEA87B0", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000081")]
		public override bool EnableState
		{
			[Token(Token = "0x6000611")]
			[Address(RVA = "0xEA87B8", Offset = "0xEA87B8", VA = "0xEA87B8", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000612")]
			[Address(RVA = "0xEA87FC", Offset = "0xEA87FC", VA = "0xEA87FC", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000613")]
		[Address(RVA = "0xEA8870", Offset = "0xEA8870", VA = "0xEA8870", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000614")]
		[Address(RVA = "0xEA88D8", Offset = "0xEA88D8", VA = "0xEA88D8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000615")]
		[Address(RVA = "0xEA8980", Offset = "0xEA8980", VA = "0xEA8980")]
		private void Update()
		{
		}

		[Token(Token = "0x6000616")]
		[Address(RVA = "0xEA8C88", Offset = "0xEA8C88", VA = "0xEA8C88")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000617")]
		[Address(RVA = "0xEA8D84", Offset = "0xEA8D84", VA = "0xEA8D84", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000618")]
		[Address(RVA = "0xEA9110", Offset = "0xEA9110", VA = "0xEA9110")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000619")]
		[Address(RVA = "0xEA92B4", Offset = "0xEA92B4", VA = "0xEA92B4")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x600061A")]
		[Address(RVA = "0xEA93DC", Offset = "0xEA93DC", VA = "0xEA93DC")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x600061B")]
		[Address(RVA = "0xEA9714", Offset = "0xEA9714", VA = "0xEA9714")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x600061C")]
		[Address(RVA = "0xEA9B24", Offset = "0xEA9B24", VA = "0xEA9B24", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x600061D")]
		[Address(RVA = "0xEA9C10", Offset = "0xEA9C10", VA = "0xEA9C10", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x600061E")]
		[Address(RVA = "0xEA9C4C", Offset = "0xEA9C4C", VA = "0xEA9C4C")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x2000124")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x40007C1")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x40007C2")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC3DAC", Offset = "0xAC3DAC")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x17000082")]
		public bool EnableState
		{
			[Token(Token = "0x600061F")]
			[Address(RVA = "0xEA87E0", Offset = "0xEA87E0", VA = "0xEA87E0", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000620")]
			[Address(RVA = "0xEA8818", Offset = "0xEA8818", VA = "0xEA8818", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000083")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6000621")]
			[Address(RVA = "0xEA9D44", Offset = "0xEA9D44", VA = "0xEA9D44", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000622")]
			[Address(RVA = "0xEA8C4C", Offset = "0xEA8C4C", VA = "0xEA8C4C", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000084")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6000624")]
			[Address(RVA = "0xEA9F90", Offset = "0xEA9F90", VA = "0xEA9F90", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA780", Offset = "0xACA780")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000625")]
			[Address(RVA = "0xEA9F98", Offset = "0xEA9F98", VA = "0xEA9F98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA790", Offset = "0xACA790")]
			set
			{
			}
		}

		[Token(Token = "0x6000623")]
		[Address(RVA = "0xEA9D4C", Offset = "0xEA9D4C", VA = "0xEA9D4C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000626")]
		[Address(RVA = "0xEA9B60", Offset = "0xEA9B60", VA = "0xEA9B60", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000627")]
		[Address(RVA = "0xEA9FA0", Offset = "0xEA9FA0", VA = "0xEA9FA0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000628")]
		[Address(RVA = "0xEAA2CC", Offset = "0xEAA2CC", VA = "0xEAA2CC")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000629")]
		[Address(RVA = "0xEAA4BC", Offset = "0xEAA4BC", VA = "0xEAA4BC")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x2000125")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x17000085")]
		public bool UseSpherecast
		{
			[Token(Token = "0x600062A")]
			[Address(RVA = "0xF0EF5C", Offset = "0xF0EF5C", VA = "0xF0EF5C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600062B")]
			[Address(RVA = "0xF0EF64", Offset = "0xF0EF64", VA = "0xF0EF64")]
			set
			{
			}
		}

		[Token(Token = "0x17000086")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x600062C")]
			[Address(RVA = "0xF0EFEC", Offset = "0xF0EFEC", VA = "0xF0EFEC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600062D")]
			[Address(RVA = "0xF0EFF4", Offset = "0xF0EFF4", VA = "0xF0EFF4")]
			set
			{
			}
		}

		[Token(Token = "0x600062E")]
		[Address(RVA = "0xF0F060", Offset = "0xF0F060", VA = "0xF0F060")]
		private void Start()
		{
		}

		[Token(Token = "0x600062F")]
		[Address(RVA = "0xF0F2C4", Offset = "0xF0F2C4", VA = "0xF0F2C4")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x6000630")]
		[Address(RVA = "0xF0F2D4", Offset = "0xF0F2D4", VA = "0xF0F2D4")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x6000631")]
		[Address(RVA = "0xF0F2E4", Offset = "0xF0F2E4", VA = "0xF0F2E4")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x2000126")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x6000632")]
		[Address(RVA = "0xF0CD4C", Offset = "0xF0CD4C", VA = "0xF0CD4C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000633")]
		[Address(RVA = "0xF0CD50", Offset = "0xF0CD50", VA = "0xF0CD50")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000634")]
		[Address(RVA = "0xF0CD88", Offset = "0xF0CD88", VA = "0xF0CD88")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000635")]
		[Address(RVA = "0xF0CDC0", Offset = "0xF0CDC0", VA = "0xF0CDC0")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000636")]
		[Address(RVA = "0xF0CDF8", Offset = "0xF0CDF8", VA = "0xF0CDF8")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000637")]
		[Address(RVA = "0xF0CE30", Offset = "0xF0CE30", VA = "0xF0CE30")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000638")]
		[Address(RVA = "0xF0CE68", Offset = "0xF0CE68", VA = "0xF0CE68")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000639")]
		[Address(RVA = "0xF0CEA0", Offset = "0xF0CEA0", VA = "0xF0CEA0")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600063A")]
		[Address(RVA = "0xF0CFFC", Offset = "0xF0CFFC", VA = "0xF0CFFC")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600063B")]
		[Address(RVA = "0xF0D06C", Offset = "0xF0D06C", VA = "0xF0D06C")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x2000127")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x600063C")]
		[Address(RVA = "0xF0D074", Offset = "0xF0D074", VA = "0xF0D074")]
		private void Start()
		{
		}

		[Token(Token = "0x600063D")]
		[Address(RVA = "0xF0D078", Offset = "0xF0D078", VA = "0xF0D078")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x600063E")]
		[Address(RVA = "0xF0D030", Offset = "0xF0D030", VA = "0xF0D030")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x600063F")]
		[Address(RVA = "0xF0D0B8", Offset = "0xF0D0B8", VA = "0xF0D0B8")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x2000128")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x2000451")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0C00", Offset = "0xAC0C00")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4001C92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4001C93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4001C94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x170002B7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D34")]
				[Address(RVA = "0xEA813C", Offset = "0xEA813C", VA = "0xEA813C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D36")]
				[Address(RVA = "0xEA81A4", Offset = "0xEA81A4", VA = "0xEA81A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D31")]
			[Address(RVA = "0xEA7F0C", Offset = "0xEA7F0C", VA = "0xEA7F0C")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001D32")]
			[Address(RVA = "0xEA7F38", Offset = "0xEA7F38", VA = "0xEA7F38", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D33")]
			[Address(RVA = "0xEA7F3C", Offset = "0xEA7F3C", VA = "0xEA7F3C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D35")]
			[Address(RVA = "0xEA8144", Offset = "0xEA8144", VA = "0xEA8144", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40007D2")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x40007D3")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x6000640")]
		[Address(RVA = "0xF156D4", Offset = "0xF156D4", VA = "0xF156D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000641")]
		[Address(RVA = "0xF15778", Offset = "0xF15778", VA = "0xF15778")]
		private void Update()
		{
		}

		[Token(Token = "0x6000642")]
		[Address(RVA = "0xF15A20", Offset = "0xF15A20", VA = "0xF15A20")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000643")]
		[Address(RVA = "0xF159A4", Offset = "0xF159A4", VA = "0xF159A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACA7A0", Offset = "0xACA7A0")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x6000644")]
		[Address(RVA = "0xF15AE4", Offset = "0xF15AE4", VA = "0xF15AE4")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x2000129")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x2000452")]
		public enum SelectionState
		{
			[Token(Token = "0x4001C96")]
			Off,
			[Token(Token = "0x4001C97")]
			Selected,
			[Token(Token = "0x4001C98")]
			Highlighted
		}

		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x17000087")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x6000645")]
			[Address(RVA = "0xEAA528", Offset = "0xEAA528", VA = "0xEAA528")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x6000646")]
			[Address(RVA = "0xEAA530", Offset = "0xEAA530", VA = "0xEAA530")]
			set
			{
			}
		}

		[Token(Token = "0x6000647")]
		[Address(RVA = "0xEAA6B8", Offset = "0xEAA6B8", VA = "0xEAA6B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000648")]
		[Address(RVA = "0xEAA8B4", Offset = "0xEAA8B4", VA = "0xEAA8B4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000649")]
		[Address(RVA = "0xEAA5B8", Offset = "0xEAA5B8", VA = "0xEAA5B8")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x600064A")]
		[Address(RVA = "0xEAA9A4", Offset = "0xEAA9A4", VA = "0xEAA9A4")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x200012A")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x2000453")]
		public enum SegmentType
		{
			[Token(Token = "0x4001C9A")]
			Straight,
			[Token(Token = "0x4001C9B")]
			LeftTurn,
			[Token(Token = "0x4001C9C")]
			RightTurn,
			[Token(Token = "0x4001C9D")]
			Switch
		}

		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x40007E8")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x40007E9")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC3E8C", Offset = "0xAC3E8C")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x17000088")]
		public float StartDistance
		{
			[Token(Token = "0x600064C")]
			[Address(RVA = "0xEAAA10", Offset = "0xEAAA10", VA = "0xEAAA10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA804", Offset = "0xACA804")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600064D")]
			[Address(RVA = "0xEAAA18", Offset = "0xEAAA18", VA = "0xEAAA18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA814", Offset = "0xACA814")]
			set
			{
			}
		}

		[Token(Token = "0x17000089")]
		public float GridSize
		{
			[Token(Token = "0x600064E")]
			[Address(RVA = "0xEAAA20", Offset = "0xEAAA20", VA = "0xEAAA20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600064F")]
			[Address(RVA = "0xEAAA28", Offset = "0xEAAA28", VA = "0xEAAA28")]
			private set
			{
			}
		}

		[Token(Token = "0x1700008A")]
		public int SubDivCount
		{
			[Token(Token = "0x6000650")]
			[Address(RVA = "0xEAAA30", Offset = "0xEAAA30", VA = "0xEAAA30")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000651")]
			[Address(RVA = "0xEAAA38", Offset = "0xEAAA38", VA = "0xEAAA38")]
			set
			{
			}
		}

		[Token(Token = "0x1700008B")]
		public SegmentType Type
		{
			[Token(Token = "0x6000652")]
			[Address(RVA = "0xEAAA40", Offset = "0xEAAA40", VA = "0xEAAA40")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x1700008C")]
		public Pose EndPose
		{
			[Token(Token = "0x6000653")]
			[Address(RVA = "0xEAAA48", Offset = "0xEAAA48", VA = "0xEAAA48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008D")]
		public float Radius
		{
			[Token(Token = "0x6000654")]
			[Address(RVA = "0xEAAEDC", Offset = "0xEAAEDC", VA = "0xEAAEDC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700008E")]
		public float SegmentLength
		{
			[Token(Token = "0x6000656")]
			[Address(RVA = "0xEAAAB0", Offset = "0xEAAAB0", VA = "0xEAAAB0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000655")]
		[Address(RVA = "0xEAAEEC", Offset = "0xEAAEEC", VA = "0xEAAEEC")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x6000657")]
		[Address(RVA = "0xEAAF04", Offset = "0xEAAF04", VA = "0xEAAF04")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000658")]
		[Address(RVA = "0xEAAAF0", Offset = "0xEAAAF0", VA = "0xEAAAF0")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x6000659")]
		[Address(RVA = "0xEAAF08", Offset = "0xEAAF08", VA = "0xEAAF08")]
		private void Update()
		{
		}

		[Token(Token = "0x600065A")]
		[Address(RVA = "0xEAAF0C", Offset = "0xEAAF0C", VA = "0xEAAF0C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600065B")]
		[Address(RVA = "0xEAAF78", Offset = "0xEAAF78", VA = "0xEAAF78")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x600065C")]
		[Address(RVA = "0xEABB00", Offset = "0xEABB00", VA = "0xEABB00")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x600065D")]
		[Address(RVA = "0xEABE2C", Offset = "0xEABE2C", VA = "0xEABE2C")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x200012B")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x2000454")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0C10", Offset = "0xAC0C10")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4001CA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4001CA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x170002B9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D3A")]
				[Address(RVA = "0xEACAA8", Offset = "0xEACAA8", VA = "0xEACAA8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002BA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D3C")]
				[Address(RVA = "0xEACB10", Offset = "0xEACB10", VA = "0xEACB10", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D37")]
			[Address(RVA = "0xEAC810", Offset = "0xEAC810", VA = "0xEAC810")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6001D38")]
			[Address(RVA = "0xEAC8EC", Offset = "0xEAC8EC", VA = "0xEAC8EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D39")]
			[Address(RVA = "0xEAC8F0", Offset = "0xEAC8F0", VA = "0xEAC8F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D3B")]
			[Address(RVA = "0xEACAB0", Offset = "0xEACAB0", VA = "0xEACAB0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40007EF")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x40007F0")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x40007F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40007F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x40007F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x40007F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x40007FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x40007FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x600065E")]
		[Address(RVA = "0xEABEF4", Offset = "0xEABEF4", VA = "0xEABEF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600065F")]
		[Address(RVA = "0xEABFB4", Offset = "0xEABFB4", VA = "0xEABFB4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000660")]
		[Address(RVA = "0xEAC068", Offset = "0xEAC068", VA = "0xEAC068")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000661")]
		[Address(RVA = "0xEAC19C", Offset = "0xEAC19C", VA = "0xEAC19C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000662")]
		[Address(RVA = "0xEAC314", Offset = "0xEAC314", VA = "0xEAC314")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x6000663")]
		[Address(RVA = "0xEAC4B0", Offset = "0xEAC4B0", VA = "0xEAC4B0")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000664")]
		[Address(RVA = "0xEAC73C", Offset = "0xEAC73C", VA = "0xEAC73C")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6000665")]
		[Address(RVA = "0xEAC5C4", Offset = "0xEAC5C4", VA = "0xEAC5C4")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x6000666")]
		[Address(RVA = "0xEAC5D8", Offset = "0xEAC5D8", VA = "0xEAC5D8")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x6000667")]
		[Address(RVA = "0xEAC794", Offset = "0xEAC794", VA = "0xEAC794")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACA824", Offset = "0xACA824")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x6000668")]
		[Address(RVA = "0xEAC83C", Offset = "0xEAC83C", VA = "0xEAC83C")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x200012C")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x1700008F")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x6000669")]
			[Address(RVA = "0xEACB18", Offset = "0xEACB18", VA = "0xEACB18")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600066A")]
		[Address(RVA = "0xEACB28", Offset = "0xEACB28", VA = "0xEACB28", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600066B")]
		[Address(RVA = "0xEACB30", Offset = "0xEACB30", VA = "0xEACB30", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x600066C")]
		[Address(RVA = "0xEACF9C", Offset = "0xEACF9C", VA = "0xEACF9C")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x200012D")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x4000803")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4000804")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC3F8C", Offset = "0xAC3F8C")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x17000090")]
		public float Distance
		{
			[Token(Token = "0x600066D")]
			[Address(RVA = "0xEAD0AC", Offset = "0xEAD0AC", VA = "0xEAD0AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA888", Offset = "0xACA888")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600066E")]
			[Address(RVA = "0xEAD0B4", Offset = "0xEAD0B4", VA = "0xEAD0B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA898", Offset = "0xACA898")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000091")]
		public float Scale
		{
			[Token(Token = "0x600066F")]
			[Address(RVA = "0xEAD0BC", Offset = "0xEAD0BC", VA = "0xEAD0BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000670")]
			[Address(RVA = "0xEAD0C4", Offset = "0xEAD0C4", VA = "0xEAD0C4")]
			set
			{
			}
		}

		[Token(Token = "0x6000671")]
		[Address(RVA = "0xEACB2C", Offset = "0xEACB2C", VA = "0xEACB2C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000672")]
		[Address(RVA = "0xEAD0CC", Offset = "0xEAD0CC", VA = "0xEAD0CC")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6000673")]
		[Address(RVA = "0xEACB78", Offset = "0xEACB78", VA = "0xEACB78")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x6000674")]
		[Address(RVA = "0xEACE50", Offset = "0xEACE50", VA = "0xEACE50")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x6000675")]
		public abstract void UpdatePosition();

		[Token(Token = "0x6000676")]
		[Address(RVA = "0xEAD00C", Offset = "0xEAD00C", VA = "0xEAD00C")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x200012E")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x2000455")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0C20", Offset = "0xAC0C20")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x4001CA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x4001CA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4001CA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4001CA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x4001CAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x4001CAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4001CAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4001CAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x4001CAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x170002BB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D40")]
				[Address(RVA = "0xEADADC", Offset = "0xEADADC", VA = "0xEADADC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002BC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D42")]
				[Address(RVA = "0xEADB44", Offset = "0xEADB44", VA = "0xEADB44", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D3D")]
			[Address(RVA = "0xEAD6E0", Offset = "0xEAD6E0", VA = "0xEAD6E0")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001D3E")]
			[Address(RVA = "0xEAD878", Offset = "0xEAD878", VA = "0xEAD878", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D3F")]
			[Address(RVA = "0xEAD87C", Offset = "0xEAD87C", VA = "0xEAD87C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D41")]
			[Address(RVA = "0xEADAE4", Offset = "0xEADAE4", VA = "0xEADAE4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6000678")]
		[Address(RVA = "0xEAD29C", Offset = "0xEAD29C", VA = "0xEAD29C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000679")]
		[Address(RVA = "0xEAD2FC", Offset = "0xEAD2FC", VA = "0xEAD2FC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600067A")]
		[Address(RVA = "0xEAD408", Offset = "0xEAD408", VA = "0xEAD408")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600067B")]
		[Address(RVA = "0xEAD578", Offset = "0xEAD578", VA = "0xEAD578")]
		private void Update()
		{
		}

		[Token(Token = "0x600067C")]
		[Address(RVA = "0xEAD468", Offset = "0xEAD468", VA = "0xEAD468")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x600067D")]
		[Address(RVA = "0xEAD654", Offset = "0xEAD654", VA = "0xEAD654")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACA8A8", Offset = "0xACA8A8")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x600067E")]
		[Address(RVA = "0xEAD70C", Offset = "0xEAD70C", VA = "0xEAD70C")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x600067F")]
		[Address(RVA = "0xEAD7B8", Offset = "0xEAD7B8", VA = "0xEAD7B8")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x6000680")]
		[Address(RVA = "0xEAD818", Offset = "0xEAD818", VA = "0xEAD818")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x200012F")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x2000456")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4001CB0")]
			Start,
			[Token(Token = "0x4001CB1")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4001CB2")]
			Stop
		}

		[Token(Token = "0x2000457")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0C30", Offset = "0xAC0C30")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x4001CB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x4001CB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x4001CB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x4001CB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4001CBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x4001CBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x170002BD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D46")]
				[Address(RVA = "0xEAE7FC", Offset = "0xEAE7FC", VA = "0xEAE7FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002BE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D48")]
				[Address(RVA = "0xEAE864", Offset = "0xEAE864", VA = "0xEAE864", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D43")]
			[Address(RVA = "0xEADE7C", Offset = "0xEADE7C", VA = "0xEADE7C")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6001D44")]
			[Address(RVA = "0xEAE5C0", Offset = "0xEAE5C0", VA = "0xEAE5C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D45")]
			[Address(RVA = "0xEAE5C4", Offset = "0xEAE5C4", VA = "0xEAE5C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D47")]
			[Address(RVA = "0xEAE804", Offset = "0xEAE804", VA = "0xEAE804", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000817")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4000818")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4000819")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x400081A")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC3FEC", Offset = "0xAC3FEC")]
		protected float _initialSpeed;

		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x6000681")]
		[Address(RVA = "0xEADB4C", Offset = "0xEADB4C", VA = "0xEADB4C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000682")]
		[Address(RVA = "0xEADCBC", Offset = "0xEADCBC", VA = "0xEADCBC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000683")]
		[Address(RVA = "0xEADCC8", Offset = "0xEADCC8", VA = "0xEADCC8", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6000684")]
		[Address(RVA = "0xEADE1C", Offset = "0xEADE1C", VA = "0xEADE1C")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x6000685")]
		[Address(RVA = "0xEADC2C", Offset = "0xEADC2C", VA = "0xEADC2C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACA90C", Offset = "0xACA90C")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x6000686")]
		[Address(RVA = "0xEADEA8", Offset = "0xEADEA8", VA = "0xEADEA8")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x6000687")]
		[Address(RVA = "0xEADDB8", Offset = "0xEADDB8", VA = "0xEADDB8")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x6000688")]
		[Address(RVA = "0xEAE0F4", Offset = "0xEAE0F4", VA = "0xEAE0F4")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6000689")]
		[Address(RVA = "0xEAE2B8", Offset = "0xEAE2B8", VA = "0xEAE2B8")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x600068A")]
		[Address(RVA = "0xEAE1B0", Offset = "0xEAE1B0", VA = "0xEAE1B0")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x600068B")]
		[Address(RVA = "0xEAE374", Offset = "0xEAE374", VA = "0xEAE374")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x600068C")]
		[Address(RVA = "0xEAE3FC", Offset = "0xEAE3FC", VA = "0xEAE3FC")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x600068D")]
		[Address(RVA = "0xEAE488", Offset = "0xEAE488", VA = "0xEAE488")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x600068E")]
		[Address(RVA = "0xEAE544", Offset = "0xEAE544", VA = "0xEAE544")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x600068F")]
		[Address(RVA = "0xEAE554", Offset = "0xEAE554", VA = "0xEAE554")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x2000130")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x17000092")]
		public float TrackLength
		{
			[Token(Token = "0x6000690")]
			[Address(RVA = "0xEAE86C", Offset = "0xEAE86C", VA = "0xEAE86C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000691")]
			[Address(RVA = "0xEAE874", Offset = "0xEAE874", VA = "0xEAE874")]
			private set
			{
			}
		}

		[Token(Token = "0x6000692")]
		[Address(RVA = "0xEAE87C", Offset = "0xEAE87C", VA = "0xEAE87C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000693")]
		[Address(RVA = "0xEAD14C", Offset = "0xEAD14C", VA = "0xEAD14C")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x6000694")]
		[Address(RVA = "0xEAE880", Offset = "0xEAE880", VA = "0xEAE880")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x6000695")]
		[Address(RVA = "0xEAEA8C", Offset = "0xEAEA8C", VA = "0xEAEA8C")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x6000696")]
		[Address(RVA = "0xEAEBA8", Offset = "0xEAEBA8", VA = "0xEAEBA8")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x2000131")]
	public class Pose
	{
		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x6000697")]
		[Address(RVA = "0xEA8624", Offset = "0xEA8624", VA = "0xEA8624")]
		public Pose()
		{
		}

		[Token(Token = "0x6000698")]
		[Address(RVA = "0xEA86D0", Offset = "0xEA86D0", VA = "0xEA86D0")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x2000132")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x2000458")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0C40", Offset = "0xAC0C40")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4001CBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x4001CC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x4001CC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x170002BF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D4C")]
				[Address(RVA = "0xEAF1F4", Offset = "0xEAF1F4", VA = "0xEAF1F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D4E")]
				[Address(RVA = "0xEAF25C", Offset = "0xEAF25C", VA = "0xEAF25C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D49")]
			[Address(RVA = "0xEAEE68", Offset = "0xEAEE68", VA = "0xEAEE68")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001D4A")]
			[Address(RVA = "0xEAEFF0", Offset = "0xEAEFF0", VA = "0xEAEFF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D4B")]
			[Address(RVA = "0xEAEFF4", Offset = "0xEAEFF4", VA = "0xEAEFF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D4D")]
			[Address(RVA = "0xEAF1FC", Offset = "0xEAF1FC", VA = "0xEAF1FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000459")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0C50", Offset = "0xAC0C50")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4001CC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x4001CC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x4001CC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x170002C1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D52")]
				[Address(RVA = "0xEAF33C", Offset = "0xEAF33C", VA = "0xEAF33C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D54")]
				[Address(RVA = "0xEAF3A4", Offset = "0xEAF3A4", VA = "0xEAF3A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D4F")]
			[Address(RVA = "0xEAEF50", Offset = "0xEAEF50", VA = "0xEAEF50")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001D50")]
			[Address(RVA = "0xEAF264", Offset = "0xEAF264", VA = "0xEAF264", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D51")]
			[Address(RVA = "0xEAF268", Offset = "0xEAF268", VA = "0xEAF268", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D53")]
			[Address(RVA = "0xEAF344", Offset = "0xEAF344", VA = "0xEAF344", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400083D")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC41D4", Offset = "0xAC41D4")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x17000093")]
		public bool IsMoving
		{
			[Token(Token = "0x6000699")]
			[Address(RVA = "0xEAEBC4", Offset = "0xEAEBC4", VA = "0xEAEBC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA970", Offset = "0xACA970")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600069A")]
			[Address(RVA = "0xEAEBCC", Offset = "0xEAEBCC", VA = "0xEAEBCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACA980", Offset = "0xACA980")]
			private set
			{
			}
		}

		[Token(Token = "0x600069B")]
		[Address(RVA = "0xEAEBD8", Offset = "0xEAEBD8", VA = "0xEAEBD8")]
		private void Start()
		{
		}

		[Token(Token = "0x600069C")]
		[Address(RVA = "0xEAEC14", Offset = "0xEAEC14", VA = "0xEAEC14")]
		private void Update()
		{
		}

		[Token(Token = "0x600069D")]
		[Address(RVA = "0xEAED68", Offset = "0xEAED68", VA = "0xEAED68")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x600069E")]
		[Address(RVA = "0xEAEDDC", Offset = "0xEAEDDC", VA = "0xEAEDDC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACA990", Offset = "0xACA990")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x600069F")]
		[Address(RVA = "0xEAEE94", Offset = "0xEAEE94", VA = "0xEAEE94")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACA9F4", Offset = "0xACA9F4")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x60006A0")]
		[Address(RVA = "0xEAEF7C", Offset = "0xEAEF7C", VA = "0xEAEF7C")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x60006A1")]
		[Address(RVA = "0xEAEFE8", Offset = "0xEAEFE8", VA = "0xEAEFE8")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x2000133")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x60006A2")]
		[Address(RVA = "0xEAF3AC", Offset = "0xEAF3AC", VA = "0xEAF3AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006A3")]
		[Address(RVA = "0xEAF424", Offset = "0xEAF424", VA = "0xEAF424")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60006A4")]
		[Address(RVA = "0xEAF4DC", Offset = "0xEAF4DC", VA = "0xEAF4DC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60006A5")]
		[Address(RVA = "0xEAF5DC", Offset = "0xEAF5DC", VA = "0xEAF5DC")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60006A6")]
		[Address(RVA = "0xEAF65C", Offset = "0xEAF65C", VA = "0xEAF65C")]
		private void Update()
		{
		}

		[Token(Token = "0x60006A7")]
		[Address(RVA = "0xEAF738", Offset = "0xEAF738", VA = "0xEAF738")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x2000134")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x400084E")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x400084F")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4000850")]
		EUDT_None,
		[Token(Token = "0x4000851")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x2000135")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x200045A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0C60", Offset = "0xAC0C60")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x170002C3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D58")]
				[Address(RVA = "0xF15664", Offset = "0xF15664", VA = "0xF15664", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D5A")]
				[Address(RVA = "0xF156CC", Offset = "0xF156CC", VA = "0xF156CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D55")]
			[Address(RVA = "0xF14CB8", Offset = "0xF14CB8", VA = "0xF14CB8")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6001D56")]
			[Address(RVA = "0xF153FC", Offset = "0xF153FC", VA = "0xF153FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D57")]
			[Address(RVA = "0xF15400", Offset = "0xF15400", VA = "0xF15400", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D59")]
			[Address(RVA = "0xF1566C", Offset = "0xF1566C", VA = "0xF1566C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x4000853")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x4000854")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x4000855")]
		private const string noneID = "NoneID";

		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC4214", Offset = "0xAC4214")]
		public GameObject mainCamera;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC424C", Offset = "0xAC424C")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x60006A8")]
		[Address(RVA = "0xF13F58", Offset = "0xF13F58", VA = "0xF13F58")]
		private void Start()
		{
		}

		[Token(Token = "0x60006A9")]
		[Address(RVA = "0xF147BC", Offset = "0xF147BC", VA = "0xF147BC")]
		private void Update()
		{
		}

		[Token(Token = "0x60006AA")]
		[Address(RVA = "0xF148FC", Offset = "0xF148FC", VA = "0xF148FC")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x60006AB")]
		[Address(RVA = "0xF14A30", Offset = "0xF14A30", VA = "0xF14A30")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x60006AC")]
		[Address(RVA = "0xF14B64", Offset = "0xF14B64", VA = "0xF14B64")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x60006AD")]
		[Address(RVA = "0xF148D0", Offset = "0xF148D0", VA = "0xF148D0")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x60006AE")]
		[Address(RVA = "0xF14C3C", Offset = "0xF14C3C", VA = "0xF14C3C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACAA58", Offset = "0xACAA58")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x60006AF")]
		[Address(RVA = "0xF14CE4", Offset = "0xF14CE4", VA = "0xF14CE4")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x60006B0")]
		[Address(RVA = "0xF142DC", Offset = "0xF142DC", VA = "0xF142DC")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x60006B1")]
		[Address(RVA = "0xF14E0C", Offset = "0xF14E0C", VA = "0xF14E0C")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x60006B2")]
		[Address(RVA = "0xF14D18", Offset = "0xF14D18", VA = "0xF14D18")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x60006B3")]
		[Address(RVA = "0xF151A8", Offset = "0xF151A8", VA = "0xF151A8")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x60006B4")]
		[Address(RVA = "0xF15284", Offset = "0xF15284", VA = "0xF15284")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x60006B5")]
		[Address(RVA = "0xF1530C", Offset = "0xF1530C", VA = "0xF1530C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACAABC", Offset = "0xACAABC")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x60006B6")]
		[Address(RVA = "0xF1535C", Offset = "0xF1535C", VA = "0xF1535C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACAACC", Offset = "0xACAACC")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x60006B7")]
		[Address(RVA = "0xF153AC", Offset = "0xF153AC", VA = "0xF153AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACAADC", Offset = "0xACAADC")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x2000136")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xABF588", Offset = "0xABF588")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200045B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0C70", Offset = "0xAC0C70")]
		private sealed class <>c
		{
			[Token(Token = "0x4001CCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001CCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6001D5C")]
			[Address(RVA = "0xF056F0", Offset = "0xF056F0", VA = "0xF056F0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001D5D")]
			[Address(RVA = "0xF056F8", Offset = "0xF056F8", VA = "0xF056F8")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400086A")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x400086B")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x400086C")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x400086D")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x400086E")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x400086F")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4000870")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4000871")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4000872")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4000873")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x4000874")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x60006B8")]
		[Address(RVA = "0xF04908", Offset = "0xF04908", VA = "0xF04908")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006B9")]
		[Address(RVA = "0xF04968", Offset = "0xF04968", VA = "0xF04968")]
		private void Start()
		{
		}

		[Token(Token = "0x60006BA")]
		[Address(RVA = "0xF04D90", Offset = "0xF04D90", VA = "0xF04D90")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60006BB")]
		[Address(RVA = "0xF04E5C", Offset = "0xF04E5C", VA = "0xF04E5C")]
		private void Update()
		{
		}

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0xF04F68", Offset = "0xF04F68", VA = "0xF04F68")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x60006BD")]
		[Address(RVA = "0xF052A0", Offset = "0xF052A0", VA = "0xF052A0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60006BE")]
		[Address(RVA = "0xF05408", Offset = "0xF05408", VA = "0xF05408")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60006BF")]
		[Address(RVA = "0xF05554", Offset = "0xF05554", VA = "0xF05554")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60006C0")]
		[Address(RVA = "0xF05004", Offset = "0xF05004", VA = "0xF05004")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60006C1")]
		[Address(RVA = "0xF050A4", Offset = "0xF050A4", VA = "0xF050A4")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0xF04BE4", Offset = "0xF04BE4", VA = "0xF04BE4")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x60006C3")]
		[Address(RVA = "0xF05670", Offset = "0xF05670", VA = "0xF05670")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x2000137")]
	public enum HandPoseId
	{
		[Token(Token = "0x4000887")]
		Default,
		[Token(Token = "0x4000888")]
		Generic,
		[Token(Token = "0x4000889")]
		PingPongBall,
		[Token(Token = "0x400088A")]
		Controller
	}
	[Token(Token = "0x2000138")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x17000094")]
		public bool AllowPointing
		{
			[Token(Token = "0x60006C4")]
			[Address(RVA = "0xF05724", Offset = "0xF05724", VA = "0xF05724")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000095")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x60006C5")]
			[Address(RVA = "0xF0572C", Offset = "0xF0572C", VA = "0xF0572C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000096")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x60006C6")]
			[Address(RVA = "0xF05734", Offset = "0xF05734", VA = "0xF05734")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x60006C7")]
		[Address(RVA = "0xF0573C", Offset = "0xF0573C", VA = "0xF0573C")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x2000139")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x60006C8")]
		[Address(RVA = "0xF05744", Offset = "0xF05744", VA = "0xF05744")]
		private void Update()
		{
		}

		[Token(Token = "0x60006C9")]
		[Address(RVA = "0xF059B8", Offset = "0xF059B8", VA = "0xF059B8")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60006CA")]
		[Address(RVA = "0xF05A14", Offset = "0xF05A14", VA = "0xF05A14")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60006CB")]
		[Address(RVA = "0xF05A58", Offset = "0xF05A58", VA = "0xF05A58")]
		public TouchController()
		{
		}
	}
}
namespace Obi
{
	[Token(Token = "0x200013A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xABF5EC", Offset = "0xABF5EC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xABF5EC", Offset = "0xABF5EC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xABF5EC", Offset = "0xABF5EC")]
	public class ObiCharacter : MonoBehaviour
	{
		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_MovingTurnSpeed;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_StationaryTurnSpeed;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_JumpPower;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC4334", Offset = "0xAC4334")]
		[SerializeField]
		private float m_GravityMultiplier;

		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_RunCycleLegOffset;

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_MoveSpeedMultiplier;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_AnimSpeedMultiplier;

		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_GroundCheckDistance;

		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody m_Rigidbody;

		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Animator m_Animator;

		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_IsGrounded;

		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_OrigGroundCheckDistance;

		[Token(Token = "0x400089D")]
		private const float k_Half = 0.5f;

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float m_TurnAmount;

		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_ForwardAmount;

		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 m_GroundNormal;

		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_CapsuleHeight;

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 m_CapsuleCenter;

		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private CapsuleCollider m_Capsule;

		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool m_Crouching;

		[Token(Token = "0x60006CC")]
		[Address(RVA = "0xF06BE8", Offset = "0xF06BE8", VA = "0xF06BE8")]
		private void Start()
		{
		}

		[Token(Token = "0x60006CD")]
		[Address(RVA = "0xF06D24", Offset = "0xF06D24", VA = "0xF06D24")]
		public void Move(Vector3 move, bool crouch, bool jump)
		{
		}

		[Token(Token = "0x60006CE")]
		[Address(RVA = "0xF07398", Offset = "0xF07398", VA = "0xF07398")]
		private void ScaleCapsuleForCrouching(bool crouch)
		{
		}

		[Token(Token = "0x60006CF")]
		[Address(RVA = "0xF07634", Offset = "0xF07634", VA = "0xF07634")]
		private void PreventStandingInLowHeadroom()
		{
		}

		[Token(Token = "0x60006D0")]
		[Address(RVA = "0xF077EC", Offset = "0xF077EC", VA = "0xF077EC")]
		private void UpdateAnimator(Vector3 move)
		{
		}

		[Token(Token = "0x60006D1")]
		[Address(RVA = "0xF07284", Offset = "0xF07284", VA = "0xF07284")]
		private void HandleAirborneMovement()
		{
		}

		[Token(Token = "0x60006D2")]
		[Address(RVA = "0xF07144", Offset = "0xF07144", VA = "0xF07144")]
		private void HandleGroundedMovement(bool crouch, bool jump)
		{
		}

		[Token(Token = "0x60006D3")]
		[Address(RVA = "0xF07074", Offset = "0xF07074", VA = "0xF07074")]
		private void ApplyExtraTurnRotation()
		{
		}

		[Token(Token = "0x60006D4")]
		[Address(RVA = "0xF07A38", Offset = "0xF07A38", VA = "0xF07A38")]
		public void OnAnimatorMove()
		{
		}

		[Token(Token = "0x60006D5")]
		[Address(RVA = "0xF06EDC", Offset = "0xF06EDC", VA = "0xF06EDC")]
		private void CheckGroundStatus()
		{
		}

		[Token(Token = "0x60006D6")]
		[Address(RVA = "0xF07B58", Offset = "0xF07B58", VA = "0xF07B58")]
		public ObiCharacter()
		{
		}
	}
	[Token(Token = "0x200013B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xABF6A0", Offset = "0xABF6A0")]
	public class SampleCharacterController : MonoBehaviour
	{
		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ObiCharacter m_Character;

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_Cam;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 m_CamForward;

		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 m_Move;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_Jump;

		[Token(Token = "0x60006D7")]
		[Address(RVA = "0xF07B78", Offset = "0xF07B78", VA = "0xF07B78")]
		private void Start()
		{
		}

		[Token(Token = "0x60006D8")]
		[Address(RVA = "0xF07C7C", Offset = "0xF07C7C", VA = "0xF07C7C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60006D9")]
		[Address(RVA = "0xF07F2C", Offset = "0xF07F2C", VA = "0xF07F2C")]
		public SampleCharacterController()
		{
		}
	}
	[Token(Token = "0x200013C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xABF704", Offset = "0xABF704")]
	public class ColorFromPhase : MonoBehaviour
	{
		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ObiActor actor;

		[Token(Token = "0x60006DA")]
		[Address(RVA = "0xF05A60", Offset = "0xF05A60", VA = "0xF05A60")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006DB")]
		[Address(RVA = "0xF05AC0", Offset = "0xF05AC0", VA = "0xF05AC0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60006DC")]
		[Address(RVA = "0xF05C74", Offset = "0xF05C74", VA = "0xF05C74")]
		public ColorFromPhase()
		{
		}
	}
	[Token(Token = "0x200013D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xABF768", Offset = "0xABF768")]
	public class ColorFromVelocity : MonoBehaviour
	{
		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ObiActor actor;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float sensibility;

		[Token(Token = "0x60006DD")]
		[Address(RVA = "0xF05C7C", Offset = "0xF05C7C", VA = "0xF05C7C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006DE")]
		[Address(RVA = "0xF05CDC", Offset = "0xF05CDC", VA = "0xF05CDC")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60006DF")]
		[Address(RVA = "0xF05CE0", Offset = "0xF05CE0", VA = "0xF05CE0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60006E0")]
		[Address(RVA = "0xF05F0C", Offset = "0xF05F0C", VA = "0xF05F0C")]
		public ColorFromVelocity()
		{
		}
	}
	[Token(Token = "0x200013E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xABF7CC", Offset = "0xABF7CC")]
	public class ColorRandomizer : MonoBehaviour
	{
		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ObiActor actor;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Gradient gradient;

		[Token(Token = "0x60006E1")]
		[Address(RVA = "0xF05F20", Offset = "0xF05F20", VA = "0xF05F20")]
		private void Start()
		{
		}

		[Token(Token = "0x60006E2")]
		[Address(RVA = "0xF06044", Offset = "0xF06044", VA = "0xF06044")]
		public ColorRandomizer()
		{
		}
	}
	[Token(Token = "0x200013F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xABF830", Offset = "0xABF830")]
	public class LookAroundCamera : MonoBehaviour
	{
		[Token(Token = "0x200045C")]
		public struct CameraShot
		{
			[Token(Token = "0x4001CCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 position;

			[Token(Token = "0x4001CCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Quaternion rotation;

			[Token(Token = "0x4001CCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 up;

			[Token(Token = "0x4001CD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float fieldOfView;

			[Token(Token = "0x6001D5E")]
			[Address(RVA = "0xF061F4", Offset = "0xF061F4", VA = "0xF061F4")]
			public CameraShot(Vector3 position, Quaternion rotation, Vector3 up, float fieldOfView)
			{
			}
		}

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Camera cam;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CameraShot currentShot;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float movementSpeed;

		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float rotationSpeed;

		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float translationResponse;

		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float rotationResponse;

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float fovResponse;

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0xF060B8", Offset = "0xF060B8", VA = "0xF060B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0xF0621C", Offset = "0xF0621C", VA = "0xF0621C")]
		private void LookAt(Vector3 position, Vector3 up)
		{
		}

		[Token(Token = "0x60006E5")]
		[Address(RVA = "0xF06338", Offset = "0xF06338", VA = "0xF06338")]
		private void UpdateShot()
		{
		}

		[Token(Token = "0x60006E6")]
		[Address(RVA = "0xF06554", Offset = "0xF06554", VA = "0xF06554")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60006E7")]
		[Address(RVA = "0xF06A4C", Offset = "0xF06A4C", VA = "0xF06A4C")]
		public LookAroundCamera()
		{
		}
	}
	[Token(Token = "0x2000140")]
	public class MoveAndRotate : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200045D")]
		public class Vector3andSpace
		{
			[Token(Token = "0x4001CD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 value;

			[Token(Token = "0x4001CD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Space space;

			[Token(Token = "0x6001D5F")]
			[Address(RVA = "0xF06BD8", Offset = "0xF06BD8", VA = "0xF06BD8")]
			public Vector3andSpace()
			{
			}
		}

		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3andSpace moveUnitsPerSecond;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3andSpace rotateDegreesPerSecond;

		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool ignoreTimescale;

		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_LastRealTime;

		[Token(Token = "0x60006E8")]
		[Address(RVA = "0xF06A68", Offset = "0xF06A68", VA = "0xF06A68")]
		private void Start()
		{
		}

		[Token(Token = "0x60006E9")]
		[Address(RVA = "0xF06A90", Offset = "0xF06A90", VA = "0xF06A90")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60006EA")]
		[Address(RVA = "0xF06BD0", Offset = "0xF06BD0", VA = "0xF06BD0")]
		public MoveAndRotate()
		{
		}
	}
}
namespace TriangleNet
{
	[Token(Token = "0x2000141")]
	internal class Behavior
	{
		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool poly;

		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool quality;

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool varArea;

		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		private bool convex;

		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool jettison;

		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		private bool boundaryMarkers;

		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		private bool noHoles;

		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		private bool conformDel;

		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Func<ITriangle, double, bool> usertest;

		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int noBisect;

		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private double minAngle;

		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private double maxAngle;

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private double maxArea;

		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal bool fixedArea;

		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		internal bool useSegments;

		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		internal bool useRegions;

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal double goodAngle;

		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal double maxGoodAngle;

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal double offconstant;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC43B4", Offset = "0xAC43B4")]
		private static bool <NoExact>k__BackingField;

		[Token(Token = "0x17000097")]
		public static bool NoExact
		{
			[Token(Token = "0x60006ED")]
			[Address(RVA = "0x161D140", Offset = "0x161D140", VA = "0x161D140")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACAAEC", Offset = "0xACAAEC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60006EE")]
			[Address(RVA = "0x161D190", Offset = "0x161D190", VA = "0x161D190")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACAAFC", Offset = "0xACAAFC")]
			set
			{
			}
		}

		[Token(Token = "0x17000098")]
		public bool Quality
		{
			[Token(Token = "0x60006EF")]
			[Address(RVA = "0x161D1E8", Offset = "0x161D1E8", VA = "0x161D1E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60006F0")]
			[Address(RVA = "0x161D1F0", Offset = "0x161D1F0", VA = "0x161D1F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000099")]
		public double MinAngle
		{
			[Token(Token = "0x60006F1")]
			[Address(RVA = "0x161D204", Offset = "0x161D204", VA = "0x161D204")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60006F2")]
			[Address(RVA = "0x161D20C", Offset = "0x161D20C", VA = "0x161D20C")]
			set
			{
			}
		}

		[Token(Token = "0x1700009A")]
		public double MaxAngle
		{
			[Token(Token = "0x60006F3")]
			[Address(RVA = "0x161D214", Offset = "0x161D214", VA = "0x161D214")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60006F4")]
			[Address(RVA = "0x161D21C", Offset = "0x161D21C", VA = "0x161D21C")]
			set
			{
			}
		}

		[Token(Token = "0x1700009B")]
		public double MaxArea
		{
			[Token(Token = "0x60006F5")]
			[Address(RVA = "0x161D224", Offset = "0x161D224", VA = "0x161D224")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60006F6")]
			[Address(RVA = "0x161D22C", Offset = "0x161D22C", VA = "0x161D22C")]
			set
			{
			}
		}

		[Token(Token = "0x1700009C")]
		public bool VarArea
		{
			[Token(Token = "0x60006F7")]
			[Address(RVA = "0x161D240", Offset = "0x161D240", VA = "0x161D240")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60006F8")]
			[Address(RVA = "0x161D248", Offset = "0x161D248", VA = "0x161D248")]
			set
			{
			}
		}

		[Token(Token = "0x1700009D")]
		public bool Poly
		{
			[Token(Token = "0x60006F9")]
			[Address(RVA = "0x161D254", Offset = "0x161D254", VA = "0x161D254")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60006FA")]
			[Address(RVA = "0x161D25C", Offset = "0x161D25C", VA = "0x161D25C")]
			set
			{
			}
		}

		[Token(Token = "0x1700009E")]
		public Func<ITriangle, double, bool> UserTest
		{
			[Token(Token = "0x60006FB")]
			[Address(RVA = "0x161D268", Offset = "0x161D268", VA = "0x161D268")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006FC")]
			[Address(RVA = "0x161D270", Offset = "0x161D270", VA = "0x161D270")]
			set
			{
			}
		}

		[Token(Token = "0x1700009F")]
		public bool Convex
		{
			[Token(Token = "0x60006FD")]
			[Address(RVA = "0x161D278", Offset = "0x161D278", VA = "0x161D278")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60006FE")]
			[Address(RVA = "0x161D280", Offset = "0x161D280", VA = "0x161D280")]
			set
			{
			}
		}

		[Token(Token = "0x170000A0")]
		public bool ConformingDelaunay
		{
			[Token(Token = "0x60006FF")]
			[Address(RVA = "0x161D28C", Offset = "0x161D28C", VA = "0x161D28C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000700")]
			[Address(RVA = "0x161D294", Offset = "0x161D294", VA = "0x161D294")]
			set
			{
			}
		}

		[Token(Token = "0x170000A1")]
		public int NoBisect
		{
			[Token(Token = "0x6000701")]
			[Address(RVA = "0x161D2A0", Offset = "0x161D2A0", VA = "0x161D2A0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000702")]
			[Address(RVA = "0x161D2A8", Offset = "0x161D2A8", VA = "0x161D2A8")]
			set
			{
			}
		}

		[Token(Token = "0x170000A2")]
		public bool UseBoundaryMarkers
		{
			[Token(Token = "0x6000703")]
			[Address(RVA = "0x161D2B8", Offset = "0x161D2B8", VA = "0x161D2B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000704")]
			[Address(RVA = "0x161D2C0", Offset = "0x161D2C0", VA = "0x161D2C0")]
			set
			{
			}
		}

		[Token(Token = "0x170000A3")]
		public bool NoHoles
		{
			[Token(Token = "0x6000705")]
			[Address(RVA = "0x161D2CC", Offset = "0x161D2CC", VA = "0x161D2CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000706")]
			[Address(RVA = "0x161D2D4", Offset = "0x161D2D4", VA = "0x161D2D4")]
			set
			{
			}
		}

		[Token(Token = "0x170000A4")]
		public bool Jettison
		{
			[Token(Token = "0x6000707")]
			[Address(RVA = "0x161D2E0", Offset = "0x161D2E0", VA = "0x161D2E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000708")]
			[Address(RVA = "0x161D2E8", Offset = "0x161D2E8", VA = "0x161D2E8")]
			set
			{
			}
		}

		[Token(Token = "0x60006EB")]
		[Address(RVA = "0x161CD3C", Offset = "0x161CD3C", VA = "0x161CD3C")]
		public Behavior(bool quality = false, double minAngle = 20.0)
		{
		}

		[Token(Token = "0x60006EC")]
		[Address(RVA = "0x161CDB0", Offset = "0x161CDB0", VA = "0x161CDB0")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x2000142")]
	public class Configuration
	{
		[Serializable]
		[Token(Token = "0x200045E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0C80", Offset = "0xAC0C80")]
		private sealed class <>c
		{
			[Token(Token = "0x4001CD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001CD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<IPredicates> <>9__0_0;

			[Token(Token = "0x4001CD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<TrianglePool> <>9__0_1;

			[Token(Token = "0x4001CD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<TrianglePool> <>9__1_0;

			[Token(Token = "0x6001D61")]
			[Address(RVA = "0x161D658", Offset = "0x161D658", VA = "0x161D658")]
			public <>c()
			{
			}

			[Token(Token = "0x6001D62")]
			[Address(RVA = "0x161D660", Offset = "0x161D660", VA = "0x161D660")]
			internal IPredicates <.ctor>b__0_0()
			{
				return null;
			}

			[Token(Token = "0x6001D63")]
			[Address(RVA = "0x161D6C0", Offset = "0x161D6C0", VA = "0x161D6C0")]
			internal TrianglePool <.ctor>b__0_1()
			{
				return null;
			}

			[Token(Token = "0x6001D64")]
			[Address(RVA = "0x161D71C", Offset = "0x161D71C", VA = "0x161D71C")]
			internal TrianglePool <.ctor>b__1_0()
			{
				return null;
			}
		}

		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC43C4", Offset = "0xAC43C4")]
		private Func<IPredicates> <Predicates>k__BackingField;

		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC43D4", Offset = "0xAC43D4")]
		private Func<TrianglePool> <TrianglePool>k__BackingField;

		[Token(Token = "0x170000A5")]
		public Func<IPredicates> Predicates
		{
			[Token(Token = "0x600070C")]
			[Address(RVA = "0x161D5D0", Offset = "0x161D5D0", VA = "0x161D5D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACAB0C", Offset = "0xACAB0C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600070D")]
			[Address(RVA = "0x161D5D8", Offset = "0x161D5D8", VA = "0x161D5D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACAB1C", Offset = "0xACAB1C")]
			set
			{
			}
		}

		[Token(Token = "0x170000A6")]
		public Func<TrianglePool> TrianglePool
		{
			[Token(Token = "0x600070E")]
			[Address(RVA = "0x161D5E0", Offset = "0x161D5E0", VA = "0x161D5E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACAB2C", Offset = "0xACAB2C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600070F")]
			[Address(RVA = "0x161D5E8", Offset = "0x161D5E8", VA = "0x161D5E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACAB3C", Offset = "0xACAB3C")]
			set
			{
			}
		}

		[Token(Token = "0x6000709")]
		[Address(RVA = "0x161D2F4", Offset = "0x161D2F4", VA = "0x161D2F4")]
		public Configuration()
		{
		}

		[Token(Token = "0x600070A")]
		[Address(RVA = "0x161D4D0", Offset = "0x161D4D0", VA = "0x161D4D0")]
		public Configuration(Func<IPredicates> predicates)
		{
		}

		[Token(Token = "0x600070B")]
		[Address(RVA = "0x161D480", Offset = "0x161D480", VA = "0x161D480")]
		public Configuration(Func<IPredicates> predicates, Func<TrianglePool> trianglePool)
		{
		}
	}
	[Token(Token = "0x2000143")]
	public enum VertexType
	{
		[Token(Token = "0x40008D1")]
		InputVertex,
		[Token(Token = "0x40008D2")]
		SegmentVertex,
		[Token(Token = "0x40008D3")]
		FreeVertex,
		[Token(Token = "0x40008D4")]
		DeadVertex,
		[Token(Token = "0x40008D5")]
		UndeadVertex
	}
	[Token(Token = "0x2000144")]
	public enum NodeNumbering
	{
		[Token(Token = "0x40008D7")]
		None,
		[Token(Token = "0x40008D8")]
		Linear,
		[Token(Token = "0x40008D9")]
		CuthillMcKee
	}
	[Token(Token = "0x2000145")]
	public enum LocateResult
	{
		[Token(Token = "0x40008DB")]
		InTriangle,
		[Token(Token = "0x40008DC")]
		OnEdge,
		[Token(Token = "0x40008DD")]
		OnVertex,
		[Token(Token = "0x40008DE")]
		Outside
	}
	[Token(Token = "0x2000146")]
	internal enum InsertVertexResult
	{
		[Token(Token = "0x40008E0")]
		Successful,
		[Token(Token = "0x40008E1")]
		Encroaching,
		[Token(Token = "0x40008E2")]
		Violating,
		[Token(Token = "0x40008E3")]
		Duplicate
	}
	[Token(Token = "0x2000147")]
	internal enum FindDirectionResult
	{
		[Token(Token = "0x40008E5")]
		Within,
		[Token(Token = "0x40008E6")]
		Leftcollinear,
		[Token(Token = "0x40008E7")]
		Rightcollinear
	}
	[Token(Token = "0x2000148")]
	public interface IPredicates
	{
		[Token(Token = "0x6000710")]
		double CounterClockwise(Point a, Point b, Point c);

		[Token(Token = "0x6000711")]
		double InCircle(Point a, Point b, Point c, Point p);

		[Token(Token = "0x6000712")]
		Point FindCircumcenter(Point org, Point dest, Point apex, ref double xi, ref double eta);

		[Token(Token = "0x6000713")]
		Point FindCircumcenter(Point org, Point dest, Point apex, ref double xi, ref double eta, double offconstant);
	}
	[Token(Token = "0x2000149")]
	public sealed class Log : ILog<LogItem>
	{
		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC43E4", Offset = "0xAC43E4")]
		private static bool <Verbose>k__BackingField;

		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<LogItem> log;

		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LogLevel level;

		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Log instance;

		[Token(Token = "0x170000A7")]
		public static bool Verbose
		{
			[Token(Token = "0x6000714")]
			[Address(RVA = "0x162A3F4", Offset = "0x162A3F4", VA = "0x162A3F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACAB4C", Offset = "0xACAB4C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000715")]
			[Address(RVA = "0x162A45C", Offset = "0x162A45C", VA = "0x162A45C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACAB5C", Offset = "0xACAB5C")]
			set
			{
			}
		}

		[Token(Token = "0x170000A8")]
		public static ILog<LogItem> Instance
		{
			[Token(Token = "0x6000718")]
			[Address(RVA = "0x162A5AC", Offset = "0x162A5AC", VA = "0x162A5AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A9")]
		public IList<LogItem> Data
		{
			[Token(Token = "0x600071E")]
			[Address(RVA = "0x162A9A4", Offset = "0x162A9A4", VA = "0x162A9A4", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AA")]
		public LogLevel Level
		{
			[Token(Token = "0x600071F")]
			[Address(RVA = "0x162A9AC", Offset = "0x162A9AC", VA = "0x162A9AC", Slot = "10")]
			get
			{
				return default(LogLevel);
			}
		}

		[Token(Token = "0x6000716")]
		[Address(RVA = "0x162A4CC", Offset = "0x162A4CC", VA = "0x162A4CC")]
		static Log()
		{
		}

		[Token(Token = "0x6000717")]
		[Address(RVA = "0x162A530", Offset = "0x162A530", VA = "0x162A530")]
		private Log()
		{
		}

		[Token(Token = "0x6000719")]
		[Address(RVA = "0x162A614", Offset = "0x162A614", VA = "0x162A614", Slot = "4")]
		public void Add(LogItem item)
		{
		}

		[Token(Token = "0x600071A")]
		[Address(RVA = "0x162A67C", Offset = "0x162A67C", VA = "0x162A67C", Slot = "5")]
		public void Clear()
		{
		}

		[Token(Token = "0x600071B")]
		[Address(RVA = "0x162A6D4", Offset = "0x162A6D4", VA = "0x162A6D4", Slot = "6")]
		public void Info(string message)
		{
		}

		[Token(Token = "0x600071C")]
		[Address(RVA = "0x162A7C8", Offset = "0x162A7C8", VA = "0x162A7C8", Slot = "8")]
		public void Warning(string message, string location)
		{
		}

		[Token(Token = "0x600071D")]
		[Address(RVA = "0x162A910", Offset = "0x162A910", VA = "0x162A910", Slot = "7")]
		public void Error(string message, string location)
		{
		}
	}
	[Token(Token = "0x200014A")]
	public class Mesh : IMesh
	{
		[Token(Token = "0x200045F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0C90", Offset = "0xAC0C90")]
		private sealed class <get_Edges>d__39 : IEnumerable<TriangleNet.Geometry.Edge>, IEnumerable, IEnumerator<TriangleNet.Geometry.Edge>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private TriangleNet.Geometry.Edge <>2__current;

			[Token(Token = "0x4001CD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001CDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Mesh <>4__this;

			[Token(Token = "0x4001CDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private EdgeIterator <e>5__2;

			[Token(Token = "0x170002C5")]
			private TriangleNet.Geometry.Edge System.Collections.Generic.IEnumerator<TriangleNet.Geometry.Edge>.Current
			{
				[Token(Token = "0x6001D68")]
				[Address(RVA = "0x162E574", Offset = "0x162E574", VA = "0x162E574", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D6A")]
				[Address(RVA = "0x162E5DC", Offset = "0x162E5DC", VA = "0x162E5DC", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D65")]
			[Address(RVA = "0x162AAD0", Offset = "0x162AAD0", VA = "0x162AAD0")]
			[DebuggerHidden]
			public <get_Edges>d__39(int <>1__state)
			{
			}

			[Token(Token = "0x6001D66")]
			[Address(RVA = "0x162E488", Offset = "0x162E488", VA = "0x162E488", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D67")]
			[Address(RVA = "0x162E48C", Offset = "0x162E48C", VA = "0x162E48C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D69")]
			[Address(RVA = "0x162E57C", Offset = "0x162E57C", VA = "0x162E57C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001D6B")]
			[Address(RVA = "0x162E5E4", Offset = "0x162E5E4", VA = "0x162E5E4", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<TriangleNet.Geometry.Edge> System.Collections.Generic.IEnumerable<TriangleNet.Geometry.Edge>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001D6C")]
			[Address(RVA = "0x162E698", Offset = "0x162E698", VA = "0x162E698", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPredicates predicates;

		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ILog<LogItem> logger;

		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private QualityMesher qualityMesher;

		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Stack<Otri> flipstack;

		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal TrianglePool triangles;

		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal Dictionary<int, SubSegment> subsegs;

		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal Dictionary<int, TriangleNet.Geometry.Vertex> vertices;

		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal int hash_vtx;

		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		internal int hash_seg;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal int hash_tri;

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal List<Point> holes;

		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal List<RegionPointer> regions;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal Rectangle bounds;

		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal int invertices;

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		internal int insegments;

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal int undeads;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		internal int mesh_dim;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal int nextras;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		internal int hullsize;

		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal int steinerleft;

		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		internal bool checksegments;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		internal bool checkquality;

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal TriangleNet.Geometry.Vertex infvertex1;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal TriangleNet.Geometry.Vertex infvertex2;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal TriangleNet.Geometry.Vertex infvertex3;

		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal TriangleLocator locator;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal Behavior behavior;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal NodeNumbering numbering;

		[Token(Token = "0x4000908")]
		internal const int DUMMY = -1;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal TriangleNet.Topology.Triangle dummytri;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal SubSegment dummysub;

		[Token(Token = "0x170000AB")]
		public Rectangle Bounds
		{
			[Token(Token = "0x6000720")]
			[Address(RVA = "0x162A9D4", Offset = "0x162A9D4", VA = "0x162A9D4", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AC")]
		public ICollection<TriangleNet.Geometry.Vertex> Vertices
		{
			[Token(Token = "0x6000721")]
			[Address(RVA = "0x1622094", Offset = "0x1622094", VA = "0x1622094", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AD")]
		public IList<Point> Holes
		{
			[Token(Token = "0x6000722")]
			[Address(RVA = "0x162A9DC", Offset = "0x162A9DC", VA = "0x162A9DC", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AE")]
		public ICollection<TriangleNet.Topology.Triangle> Triangles
		{
			[Token(Token = "0x6000723")]
			[Address(RVA = "0x162A9E4", Offset = "0x162A9E4", VA = "0x162A9E4", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AF")]
		public ICollection<SubSegment> Segments
		{
			[Token(Token = "0x6000724")]
			[Address(RVA = "0x162A9EC", Offset = "0x162A9EC", VA = "0x162A9EC", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B0")]
		public IEnumerable<TriangleNet.Geometry.Edge> Edges
		{
			[Token(Token = "0x6000725")]
			[Address(RVA = "0x162AA44", Offset = "0x162AA44", VA = "0x162AA44", Slot = "5")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACAB6C", Offset = "0xACAB6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B1")]
		public int NumberOfInputPoints
		{
			[Token(Token = "0x6000726")]
			[Address(RVA = "0x162AB08", Offset = "0x162AB08", VA = "0x162AB08")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000B2")]
		public int NumberOfEdges
		{
			[Token(Token = "0x6000727")]
			[Address(RVA = "0x1629D54", Offset = "0x1629D54", VA = "0x1629D54")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000B3")]
		public bool IsPolygon
		{
			[Token(Token = "0x6000728")]
			[Address(RVA = "0x162AB10", Offset = "0x162AB10", VA = "0x162AB10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000B4")]
		public NodeNumbering CurrentNumbering
		{
			[Token(Token = "0x6000729")]
			[Address(RVA = "0x162AB20", Offset = "0x162AB20", VA = "0x162AB20")]
			get
			{
				return default(NodeNumbering);
			}
		}

		[Token(Token = "0x600072A")]
		[Address(RVA = "0x162AB28", Offset = "0x162AB28", VA = "0x162AB28")]
		private void Initialize()
		{
		}

		[Token(Token = "0x600072B")]
		[Address(RVA = "0x162AD18", Offset = "0x162AD18", VA = "0x162AD18")]
		public Mesh(Configuration config)
		{
		}

		[Token(Token = "0x600072C")]
		[Address(RVA = "0x162AFD0", Offset = "0x162AFD0", VA = "0x162AFD0", Slot = "11")]
		public void Refine(QualityOptions quality, bool delaunay = false)
		{
		}

		[Token(Token = "0x600072D")]
		[Address(RVA = "0x1628200", Offset = "0x1628200", VA = "0x1628200", Slot = "10")]
		public void Renumber()
		{
		}

		[Token(Token = "0x600072E")]
		[Address(RVA = "0x162B1AC", Offset = "0x162B1AC", VA = "0x162B1AC")]
		public void Renumber(NodeNumbering num)
		{
		}

		[Token(Token = "0x600072F")]
		[Address(RVA = "0x162B590", Offset = "0x162B590", VA = "0x162B590")]
		internal void SetQualityMesher(QualityMesher qmesher)
		{
		}

		[Token(Token = "0x6000730")]
		[Address(RVA = "0x162B598", Offset = "0x162B598", VA = "0x162B598")]
		internal void CopyTo(Mesh target)
		{
		}

		[Token(Token = "0x6000731")]
		[Address(RVA = "0x162B638", Offset = "0x162B638", VA = "0x162B638")]
		private void ResetData()
		{
		}

		[Token(Token = "0x6000732")]
		[Address(RVA = "0x162B0F8", Offset = "0x162B0F8", VA = "0x162B0F8")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000733")]
		[Address(RVA = "0x162B724", Offset = "0x162B724", VA = "0x162B724")]
		internal void TransferNodes(IList<TriangleNet.Geometry.Vertex> points)
		{
		}

		[Token(Token = "0x6000734")]
		[Address(RVA = "0x162BCA0", Offset = "0x162BCA0", VA = "0x162BCA0")]
		internal void MakeVertexMap()
		{
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0x162BEF0", Offset = "0x162BEF0", VA = "0x162BEF0")]
		internal void MakeTriangle(ref Otri newotri)
		{
		}

		[Token(Token = "0x6000736")]
		[Address(RVA = "0x162C00C", Offset = "0x162C00C", VA = "0x162C00C")]
		internal void MakeSegment(ref Osub newsubseg)
		{
		}

		[Token(Token = "0x6000737")]
		[Address(RVA = "0x162C140", Offset = "0x162C140", VA = "0x162C140")]
		internal InsertVertexResult InsertVertex(TriangleNet.Geometry.Vertex newvertex, ref Otri searchtri, ref Osub splitseg, bool segmentflaws, bool triflaws)
		{
			return default(InsertVertexResult);
		}

		[Token(Token = "0x6000738")]
		[Address(RVA = "0x162D380", Offset = "0x162D380", VA = "0x162D380")]
		internal void InsertSubseg(ref Otri tri, int subsegmark)
		{
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0x162D4D0", Offset = "0x162D4D0", VA = "0x162D4D0")]
		internal void Flip(ref Otri flipedge)
		{
		}

		[Token(Token = "0x600073A")]
		[Address(RVA = "0x162D7E0", Offset = "0x162D7E0", VA = "0x162D7E0")]
		internal void Unflip(ref Otri flipedge)
		{
		}

		[Token(Token = "0x600073B")]
		[Address(RVA = "0x162DAF0", Offset = "0x162DAF0", VA = "0x162DAF0")]
		private void TriangulatePolygon(Otri firstedge, Otri lastedge, int edgecount, bool doflip, bool triflaws)
		{
		}

		[Token(Token = "0x600073C")]
		[Address(RVA = "0x162DD8C", Offset = "0x162DD8C", VA = "0x162DD8C")]
		internal void DeleteVertex(ref Otri deltri)
		{
		}

		[Token(Token = "0x600073D")]
		[Address(RVA = "0x162E0D0", Offset = "0x162E0D0", VA = "0x162E0D0")]
		internal void UndoVertex()
		{
		}

		[Token(Token = "0x600073E")]
		[Address(RVA = "0x162E044", Offset = "0x162E044", VA = "0x162E044")]
		internal void TriangleDealloc(TriangleNet.Topology.Triangle dyingtriangle)
		{
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0x162DFD0", Offset = "0x162DFD0", VA = "0x162DFD0")]
		internal void VertexDealloc(TriangleNet.Geometry.Vertex dyingvertex)
		{
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0x162E410", Offset = "0x162E410", VA = "0x162E410")]
		internal void SubsegDealloc(SubSegment dyingsubseg)
		{
		}
	}
	[Token(Token = "0x200014B")]
	public static class MeshValidator
	{
		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static RobustPredicates predicates;

		[Token(Token = "0x6000741")]
		[Address(RVA = "0x162E69C", Offset = "0x162E69C", VA = "0x162E69C")]
		public static bool IsConsistent(Mesh mesh)
		{
			return default(bool);
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0x162F190", Offset = "0x162F190", VA = "0x162F190")]
		public static bool IsDelaunay(Mesh mesh)
		{
			return default(bool);
		}

		[Token(Token = "0x6000743")]
		[Address(RVA = "0x162FC4C", Offset = "0x162FC4C", VA = "0x162FC4C")]
		public static bool IsConstrainedDelaunay(Mesh mesh)
		{
			return default(bool);
		}

		[Token(Token = "0x6000744")]
		[Address(RVA = "0x162F1F8", Offset = "0x162F1F8", VA = "0x162F1F8")]
		private static bool IsDelaunay(Mesh mesh, bool constrained)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200014C")]
	internal class NewLocation
	{
		[Token(Token = "0x400090C")]
		private const double EPS = 1E-50;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPredicates predicates;

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh mesh;

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Behavior behavior;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private double[] petalx;

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private double[] petaly;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private double[] petalr;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private double[] wedges;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private double[] initialConvexPoly;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private double[] points_p;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private double[] points_q;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private double[] points_r;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private double[] poly1;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private double[] poly2;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private double[][] polys;

		[Token(Token = "0x6000746")]
		[Address(RVA = "0x1A56E64", Offset = "0x1A56E64", VA = "0x1A56E64")]
		public NewLocation(Mesh mesh, IPredicates predicates)
		{
		}

		[Token(Token = "0x6000747")]
		[Address(RVA = "0x1A58CCC", Offset = "0x1A58CCC", VA = "0x1A58CCC")]
		public Point FindLocation(TriangleNet.Geometry.Vertex org, TriangleNet.Geometry.Vertex dest, TriangleNet.Geometry.Vertex apex, ref double xi, ref double eta, bool offcenter, Otri badotri)
		{
			return null;
		}

		[Token(Token = "0x6000748")]
		[Address(RVA = "0x1A58D7C", Offset = "0x1A58D7C", VA = "0x1A58D7C")]
		private Point FindNewLocationWithoutMaxAngle(TriangleNet.Geometry.Vertex torg, TriangleNet.Geometry.Vertex tdest, TriangleNet.Geometry.Vertex tapex, ref double xi, ref double eta, bool offcenter, Otri badotri)
		{
			return null;
		}

		[Token(Token = "0x6000749")]
		[Address(RVA = "0x1A5A0F8", Offset = "0x1A5A0F8", VA = "0x1A5A0F8")]
		private Point FindNewLocation(TriangleNet.Geometry.Vertex torg, TriangleNet.Geometry.Vertex tdest, TriangleNet.Geometry.Vertex tapex, ref double xi, ref double eta, bool offcenter, Otri badotri)
		{
			return null;
		}

		[Token(Token = "0x600074A")]
		[Address(RVA = "0x1A5C3B8", Offset = "0x1A5C3B8", VA = "0x1A5C3B8")]
		private int LongestShortestEdge(double aodist, double dadist, double dodist)
		{
			return default(int);
		}

		[Token(Token = "0x600074B")]
		[Address(RVA = "0x1A5C444", Offset = "0x1A5C444", VA = "0x1A5C444")]
		private int DoSmoothing(Otri badotri, TriangleNet.Geometry.Vertex torg, TriangleNet.Geometry.Vertex tdest, TriangleNet.Geometry.Vertex tapex, ref double[] newloc)
		{
			return default(int);
		}

		[Token(Token = "0x600074C")]
		[Address(RVA = "0x1A5D970", Offset = "0x1A5D970", VA = "0x1A5D970")]
		private int GetStarPoints(Otri badotri, TriangleNet.Geometry.Vertex p, TriangleNet.Geometry.Vertex q, TriangleNet.Geometry.Vertex r, int whichPoint, ref double[] points)
		{
			return default(int);
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0x1A5C8D0", Offset = "0x1A5C8D0", VA = "0x1A5C8D0")]
		private bool GetNeighborsVertex(Otri badotri, double first_x, double first_y, double second_x, double second_y, ref double[] thirdpoint, ref Otri neighotri)
		{
			return default(bool);
		}

		[Token(Token = "0x600074E")]
		[Address(RVA = "0x1A5DE2C", Offset = "0x1A5DE2C", VA = "0x1A5DE2C")]
		private bool GetWedgeIntersectionWithoutMaxAngle(int numpoints, double[] points, ref double[] newloc)
		{
			return default(bool);
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0x1A5F014", Offset = "0x1A5F014", VA = "0x1A5F014")]
		private bool GetWedgeIntersection(int numpoints, double[] points, ref double[] newloc)
		{
			return default(bool);
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0x1A5DC58", Offset = "0x1A5DC58", VA = "0x1A5DC58")]
		private bool ValidPolygonAngles(int numpoints, double[] points)
		{
			return default(bool);
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0x1A618A4", Offset = "0x1A618A4", VA = "0x1A618A4")]
		private bool IsBadPolygonAngle(double x1, double y1, double x2, double y2, double x3, double y3)
		{
			return default(bool);
		}

		[Token(Token = "0x6000752")]
		[Address(RVA = "0x1A5D438", Offset = "0x1A5D438", VA = "0x1A5D438")]
		private void LineLineIntersection(double x1, double y1, double x2, double y2, double x3, double y3, double x4, double y4, ref double[] p)
		{
		}

		[Token(Token = "0x6000753")]
		[Address(RVA = "0x1A614DC", Offset = "0x1A614DC", VA = "0x1A614DC")]
		private int HalfPlaneIntersection(int numvertices, ref double[] convexPoly, double x1, double y1, double x2, double y2)
		{
			return default(int);
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0x1A619F4", Offset = "0x1A619F4", VA = "0x1A619F4")]
		private int SplitConvexPolygon(int numvertices, double[] convexPoly, double x1, double y1, double x2, double y2, double[][] polys)
		{
			return default(int);
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0x1A627A8", Offset = "0x1A627A8", VA = "0x1A627A8")]
		private int LinePointLocation(double x1, double y1, double x2, double y2, double x, double y)
		{
			return default(int);
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0x1A62598", Offset = "0x1A62598", VA = "0x1A62598")]
		private void LineLineSegmentIntersection(double x1, double y1, double x2, double y2, double x3, double y3, double x4, double y4, ref double[] p)
		{
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0x1A61794", Offset = "0x1A61794", VA = "0x1A61794")]
		private void FindPolyCentroid(int numpoints, double[] points, ref double[] centroid)
		{
		}

		[Token(Token = "0x6000758")]
		[Address(RVA = "0x1A5CDEC", Offset = "0x1A5CDEC", VA = "0x1A5CDEC")]
		private void CircleLineIntersection(double x1, double y1, double x2, double y2, double x3, double y3, double r, ref double[] p)
		{
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0x1A5D0C8", Offset = "0x1A5D0C8", VA = "0x1A5D0C8")]
		private bool ChooseCorrectPoint(double x1, double y1, double x2, double y2, double x3, double y3, bool isObtuse)
		{
			return default(bool);
		}

		[Token(Token = "0x600075A")]
		[Address(RVA = "0x1A5D108", Offset = "0x1A5D108", VA = "0x1A5D108")]
		private void PointBetweenPoints(double x1, double y1, double x2, double y2, double x, double y, ref double[] p)
		{
		}

		[Token(Token = "0x600075B")]
		[Address(RVA = "0x1A5D218", Offset = "0x1A5D218", VA = "0x1A5D218")]
		private bool IsBadTriangleAngle(double x1, double y1, double x2, double y2, double x3, double y3)
		{
			return default(bool);
		}

		[Token(Token = "0x600075C")]
		[Address(RVA = "0x1A5D674", Offset = "0x1A5D674", VA = "0x1A5D674")]
		private double MinDistanceToNeighbor(double newlocX, double newlocY, ref Otri searchtri)
		{
			return default(double);
		}
	}
	[Token(Token = "0x200014D")]
	public class RobustPredicates : IPredicates
	{
		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly object creationLock;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static RobustPredicates _default;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static double epsilon;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static double splitter;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static double resulterrbound;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static double ccwerrboundA;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static double ccwerrboundB;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static double ccwerrboundC;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static double iccerrboundA;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static double iccerrboundB;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static double iccerrboundC;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double[] fin1;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private double[] fin2;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double[] abdet;

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private double[] axbc;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private double[] axxbc;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private double[] aybc;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private double[] ayybc;

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private double[] adet;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private double[] bxca;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private double[] bxxca;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private double[] byca;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private double[] byyca;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private double[] bdet;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private double[] cxab;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private double[] cxxab;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private double[] cyab;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private double[] cyyab;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private double[] cdet;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private double[] temp8;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private double[] temp16a;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private double[] temp16b;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private double[] temp16c;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private double[] temp32a;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private double[] temp32b;

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private double[] temp48;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private double[] temp64;

		[Token(Token = "0x170000B5")]
		public static RobustPredicates Default
		{
			[Token(Token = "0x600075D")]
			[Address(RVA = "0x1CEC374", Offset = "0x1CEC374", VA = "0x1CEC374")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600075E")]
		[Address(RVA = "0x1CEC520", Offset = "0x1CEC520", VA = "0x1CEC520")]
		static RobustPredicates()
		{
		}

		[Token(Token = "0x600075F")]
		[Address(RVA = "0x1CEC4F8", Offset = "0x1CEC4F8", VA = "0x1CEC4F8")]
		public RobustPredicates()
		{
		}

		[Token(Token = "0x6000760")]
		[Address(RVA = "0x1CECA28", Offset = "0x1CECA28", VA = "0x1CECA28", Slot = "4")]
		public double CounterClockwise(Point pa, Point pb, Point pc)
		{
			return default(double);
		}

		[Token(Token = "0x6000761")]
		[Address(RVA = "0x1CED3D0", Offset = "0x1CED3D0", VA = "0x1CED3D0", Slot = "5")]
		public double InCircle(Point pa, Point pb, Point pc, Point pd)
		{
			return default(double);
		}

		[Token(Token = "0x6000762")]
		[Address(RVA = "0x1CF0538", Offset = "0x1CF0538", VA = "0x1CF0538")]
		public double NonRegular(Point pa, Point pb, Point pc, Point pd)
		{
			return default(double);
		}

		[Token(Token = "0x6000763")]
		[Address(RVA = "0x1CF053C", Offset = "0x1CF053C", VA = "0x1CF053C", Slot = "7")]
		public Point FindCircumcenter(Point org, Point dest, Point apex, ref double xi, ref double eta, double offconstant)
		{
			return null;
		}

		[Token(Token = "0x6000764")]
		[Address(RVA = "0x1CF0894", Offset = "0x1CF0894", VA = "0x1CF0894", Slot = "6")]
		public Point FindCircumcenter(Point org, Point dest, Point apex, ref double xi, ref double eta)
		{
			return null;
		}

		[Token(Token = "0x6000765")]
		[Address(RVA = "0x1CF0AA8", Offset = "0x1CF0AA8", VA = "0x1CF0AA8")]
		private int FastExpansionSumZeroElim(int elen, double[] e, int flen, double[] f, double[] h)
		{
			return default(int);
		}

		[Token(Token = "0x6000766")]
		[Address(RVA = "0x1CF0DA0", Offset = "0x1CF0DA0", VA = "0x1CF0DA0")]
		private int ScaleExpansionZeroElim(int elen, double[] e, double b, double[] h)
		{
			return default(int);
		}

		[Token(Token = "0x6000767")]
		[Address(RVA = "0x1CF0FEC", Offset = "0x1CF0FEC", VA = "0x1CF0FEC")]
		private double Estimate(int elen, double[] e)
		{
			return default(double);
		}

		[Token(Token = "0x6000768")]
		[Address(RVA = "0x1CECC0C", Offset = "0x1CECC0C", VA = "0x1CECC0C")]
		private double CounterClockwiseAdapt(Point pa, Point pb, Point pc, double detsum)
		{
			return default(double);
		}

		[Token(Token = "0x6000769")]
		[Address(RVA = "0x1CED6A0", Offset = "0x1CED6A0", VA = "0x1CED6A0")]
		private double InCircleAdapt(Point pa, Point pb, Point pc, Point pd, double permanent)
		{
			return default(double);
		}

		[Token(Token = "0x600076A")]
		[Address(RVA = "0x1CEC70C", Offset = "0x1CEC70C", VA = "0x1CEC70C")]
		private void AllocateWorkspace()
		{
		}

		[Token(Token = "0x600076B")]
		[Address(RVA = "0x1CF1054", Offset = "0x1CF1054", VA = "0x1CF1054")]
		private void ClearWorkspace()
		{
		}
	}
	[Token(Token = "0x200014E")]
	public class TriangleLocator
	{
		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TriangleSampler sampler;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh mesh;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IPredicates predicates;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal Otri recenttri;

		[Token(Token = "0x600076C")]
		[Address(RVA = "0x14F2948", Offset = "0x14F2948", VA = "0x14F2948")]
		public TriangleLocator(Mesh mesh)
		{
		}

		[Token(Token = "0x600076D")]
		[Address(RVA = "0x14F29C8", Offset = "0x14F29C8", VA = "0x14F29C8")]
		public TriangleLocator(Mesh mesh, IPredicates predicates)
		{
		}

		[Token(Token = "0x600076E")]
		[Address(RVA = "0x14F2AE8", Offset = "0x14F2AE8", VA = "0x14F2AE8")]
		public void Update(ref Otri otri)
		{
		}

		[Token(Token = "0x600076F")]
		[Address(RVA = "0x14F2B20", Offset = "0x14F2B20", VA = "0x14F2B20")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0x14F2B5C", Offset = "0x14F2B5C", VA = "0x14F2B5C")]
		public LocateResult PreciseLocate(Point searchpoint, ref Otri searchtri, bool stopatsubsegment)
		{
			return default(LocateResult);
		}

		[Token(Token = "0x6000771")]
		[Address(RVA = "0x14F2E60", Offset = "0x14F2E60", VA = "0x14F2E60")]
		public LocateResult Locate(Point searchpoint, ref Otri searchtri)
		{
			return default(LocateResult);
		}
	}
	[Token(Token = "0x200014F")]
	public class TrianglePool : ICollection<TriangleNet.Topology.Triangle>, IEnumerable<TriangleNet.Topology.Triangle>, IEnumerable
	{
		[Token(Token = "0x2000460")]
		private class Enumerator : IEnumerator<TriangleNet.Topology.Triangle>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int count;

			[Token(Token = "0x4001CDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private TriangleNet.Topology.Triangle[][] pool;

			[Token(Token = "0x4001CDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private TriangleNet.Topology.Triangle current;

			[Token(Token = "0x4001CDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int index;

			[Token(Token = "0x4001CE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int offset;

			[Token(Token = "0x170002C7")]
			public TriangleNet.Topology.Triangle Current
			{
				[Token(Token = "0x6001D6E")]
				[Address(RVA = "0x14F4338", Offset = "0x14F4338", VA = "0x14F4338", Slot = "4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D70")]
				[Address(RVA = "0x14F4344", Offset = "0x14F4344", VA = "0x14F4344", Slot = "7")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D6D")]
			[Address(RVA = "0x14F406C", Offset = "0x14F406C", VA = "0x14F406C")]
			public Enumerator(TrianglePool pool)
			{
			}

			[Token(Token = "0x6001D6F")]
			[Address(RVA = "0x14F4340", Offset = "0x14F4340", VA = "0x14F4340", Slot = "5")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6001D71")]
			[Address(RVA = "0x14F434C", Offset = "0x14F434C", VA = "0x14F434C", Slot = "6")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D72")]
			[Address(RVA = "0x14F4418", Offset = "0x14F4418", VA = "0x14F4418", Slot = "8")]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000461")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0CA0", Offset = "0xAC0CA0")]
		private sealed class <Sample>d__9 : IEnumerable<TriangleNet.Topology.Triangle>, IEnumerable, IEnumerator<TriangleNet.Topology.Triangle>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private TriangleNet.Topology.Triangle <>2__current;

			[Token(Token = "0x4001CE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001CE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrianglePool <>4__this;

			[Token(Token = "0x4001CE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int k;

			[Token(Token = "0x4001CE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int <>3__k;

			[Token(Token = "0x4001CE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private System.Random random;

			[Token(Token = "0x4001CE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public System.Random <>3__random;

			[Token(Token = "0x4001CE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <count>5__2;

			[Token(Token = "0x170002C9")]
			private TriangleNet.Topology.Triangle System.Collections.Generic.IEnumerator<TriangleNet.Topology.Triangle>.Current
			{
				[Token(Token = "0x6001D76")]
				[Address(RVA = "0x14F41F8", Offset = "0x14F41F8", VA = "0x14F41F8", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D78")]
				[Address(RVA = "0x14F4260", Offset = "0x14F4260", VA = "0x14F4260", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D73")]
			[Address(RVA = "0x14F3BC0", Offset = "0x14F3BC0", VA = "0x14F3BC0")]
			[DebuggerHidden]
			public <Sample>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001D74")]
			[Address(RVA = "0x14F40C0", Offset = "0x14F40C0", VA = "0x14F40C0", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D75")]
			[Address(RVA = "0x14F40C4", Offset = "0x14F40C4", VA = "0x14F40C4", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D77")]
			[Address(RVA = "0x14F4200", Offset = "0x14F4200", VA = "0x14F4200", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001D79")]
			[Address(RVA = "0x14F4268", Offset = "0x14F4268", VA = "0x14F4268", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<TriangleNet.Topology.Triangle> System.Collections.Generic.IEnumerable<TriangleNet.Topology.Triangle>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001D7A")]
			[Address(RVA = "0x14F4334", Offset = "0x14F4334", VA = "0x14F4334", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000944")]
		private const int BLOCKSIZE = 1024;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int size;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int count;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TriangleNet.Topology.Triangle[][] pool;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Stack<TriangleNet.Topology.Triangle> stack;

		[Token(Token = "0x170000B6")]
		public int Count
		{
			[Token(Token = "0x600077C")]
			[Address(RVA = "0x14F3FAC", Offset = "0x14F3FAC", VA = "0x14F3FAC", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000B7")]
		public bool IsReadOnly
		{
			[Token(Token = "0x600077D")]
			[Address(RVA = "0x14F4004", Offset = "0x14F4004", VA = "0x14F4004", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000772")]
		[Address(RVA = "0x14F34BC", Offset = "0x14F34BC", VA = "0x14F34BC")]
		public TrianglePool()
		{
		}

		[Token(Token = "0x6000773")]
		[Address(RVA = "0x14F3610", Offset = "0x14F3610", VA = "0x14F3610")]
		public TriangleNet.Topology.Triangle Get()
		{
			return null;
		}

		[Token(Token = "0x6000774")]
		[Address(RVA = "0x14F3960", Offset = "0x14F3960", VA = "0x14F3960")]
		public void Release(TriangleNet.Topology.Triangle triangle)
		{
		}

		[Token(Token = "0x6000775")]
		[Address(RVA = "0x14F39DC", Offset = "0x14F39DC", VA = "0x14F39DC")]
		public TrianglePool Restart()
		{
			return null;
		}

		[Token(Token = "0x6000776")]
		[Address(RVA = "0x14F3B10", Offset = "0x14F3B10", VA = "0x14F3B10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACABD0", Offset = "0xACABD0")]
		internal IEnumerable<TriangleNet.Topology.Triangle> Sample(int k, System.Random random)
		{
			return null;
		}

		[Token(Token = "0x6000777")]
		[Address(RVA = "0x14F3894", Offset = "0x14F3894", VA = "0x14F3894")]
		private void Cleanup(TriangleNet.Topology.Triangle triangle)
		{
		}

		[Token(Token = "0x6000778")]
		[Address(RVA = "0x14F3BF8", Offset = "0x14F3BF8", VA = "0x14F3BF8", Slot = "6")]
		public void Add(TriangleNet.Topology.Triangle item)
		{
		}

		[Token(Token = "0x6000779")]
		[Address(RVA = "0x14F3C58", Offset = "0x14F3C58", VA = "0x14F3C58", Slot = "7")]
		public void Clear()
		{
		}

		[Token(Token = "0x600077A")]
		[Address(RVA = "0x14F3D84", Offset = "0x14F3D84", VA = "0x14F3D84", Slot = "8")]
		public bool Contains(TriangleNet.Topology.Triangle item)
		{
			return default(bool);
		}

		[Token(Token = "0x600077B")]
		[Address(RVA = "0x14F3E10", Offset = "0x14F3E10", VA = "0x14F3E10", Slot = "9")]
		public void CopyTo(TriangleNet.Topology.Triangle[] array, int index)
		{
		}

		[Token(Token = "0x600077E")]
		[Address(RVA = "0x14F400C", Offset = "0x14F400C", VA = "0x14F400C", Slot = "10")]
		public bool Remove(TriangleNet.Topology.Triangle item)
		{
			return default(bool);
		}

		[Token(Token = "0x600077F")]
		[Address(RVA = "0x14EA568", Offset = "0x14EA568", VA = "0x14EA568", Slot = "11")]
		public IEnumerator<TriangleNet.Topology.Triangle> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000780")]
		[Address(RVA = "0x14F40BC", Offset = "0x14F40BC", VA = "0x14F40BC", Slot = "12")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x2000150")]
	internal class TriangleSampler : IEnumerable<TriangleNet.Topology.Triangle>, IEnumerable
	{
		[Token(Token = "0x4000949")]
		private const int RANDOM_SEED = 110503;

		[Token(Token = "0x400094A")]
		private const int samplefactor = 11;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private System.Random random;

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh mesh;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int samples;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int triangleCount;

		[Token(Token = "0x6000781")]
		[Address(RVA = "0x14F2A6C", Offset = "0x14F2A6C", VA = "0x14F2A6C")]
		public TriangleSampler(Mesh mesh)
		{
		}

		[Token(Token = "0x6000782")]
		[Address(RVA = "0x14F4420", Offset = "0x14F4420", VA = "0x14F4420")]
		public TriangleSampler(Mesh mesh, System.Random random)
		{
		}

		[Token(Token = "0x6000783")]
		[Address(RVA = "0x14F2B4C", Offset = "0x14F2B4C", VA = "0x14F2B4C")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000784")]
		[Address(RVA = "0x14F336C", Offset = "0x14F336C", VA = "0x14F336C")]
		public void Update()
		{
		}

		[Token(Token = "0x6000785")]
		[Address(RVA = "0x14F33F0", Offset = "0x14F33F0", VA = "0x14F33F0", Slot = "4")]
		public IEnumerator<TriangleNet.Topology.Triangle> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000786")]
		[Address(RVA = "0x14F4478", Offset = "0x14F4478", VA = "0x14F4478", Slot = "5")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
}
namespace TriangleNet.Voronoi
{
	[Token(Token = "0x2000151")]
	public class BoundedVoronoi : VoronoiBase
	{
		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int offset;

		[Token(Token = "0x6000787")]
		[Address(RVA = "0x14F447C", Offset = "0x14F447C", VA = "0x14F447C")]
		public BoundedVoronoi(Mesh mesh)
		{
		}

		[Token(Token = "0x6000788")]
		[Address(RVA = "0x14F4524", Offset = "0x14F4524", VA = "0x14F4524")]
		public BoundedVoronoi(Mesh mesh, IVoronoiFactory factory, IPredicates predicates)
		{
		}

		[Token(Token = "0x6000789")]
		[Address(RVA = "0x14F4658", Offset = "0x14F4658", VA = "0x14F4658")]
		private void PostProcess()
		{
		}

		[Token(Token = "0x600078A")]
		[Address(RVA = "0x14F48EC", Offset = "0x14F48EC", VA = "0x14F48EC")]
		private void HandleCase1(HalfEdge edge, TriangleNet.Geometry.Vertex v1, TriangleNet.Geometry.Vertex v2)
		{
		}

		[Token(Token = "0x600078B")]
		[Address(RVA = "0x14F4C04", Offset = "0x14F4C04", VA = "0x14F4C04")]
		private void HandleCase2(HalfEdge edge, TriangleNet.Geometry.Vertex v1, TriangleNet.Geometry.Vertex v2)
		{
		}
	}
	[Token(Token = "0x2000152")]
	public class DefaultVoronoiFactory : IVoronoiFactory
	{
		[Token(Token = "0x600078C")]
		[Address(RVA = "0x14F4F18", Offset = "0x14F4F18", VA = "0x14F4F18", Slot = "4")]
		public void Initialize(int vertexCount, int edgeCount, int faceCount)
		{
		}

		[Token(Token = "0x600078D")]
		[Address(RVA = "0x14F4F1C", Offset = "0x14F4F1C", VA = "0x14F4F1C", Slot = "5")]
		public void Reset()
		{
		}

		[Token(Token = "0x600078E")]
		[Address(RVA = "0x14F4F20", Offset = "0x14F4F20", VA = "0x14F4F20", Slot = "6")]
		public TriangleNet.Topology.DCEL.Vertex CreateVertex(double x, double y)
		{
			return null;
		}

		[Token(Token = "0x600078F")]
		[Address(RVA = "0x14F4F94", Offset = "0x14F4F94", VA = "0x14F4F94", Slot = "7")]
		public HalfEdge CreateHalfEdge(TriangleNet.Topology.DCEL.Vertex origin, Face face)
		{
			return null;
		}

		[Token(Token = "0x6000790")]
		[Address(RVA = "0x14F5004", Offset = "0x14F5004", VA = "0x14F5004", Slot = "8")]
		public Face CreateFace(TriangleNet.Geometry.Vertex vertex)
		{
			return null;
		}

		[Token(Token = "0x6000791")]
		[Address(RVA = "0x14F451C", Offset = "0x14F451C", VA = "0x14F451C")]
		public DefaultVoronoiFactory()
		{
		}
	}
	[Token(Token = "0x2000153")]
	public interface IVoronoiFactory
	{
		[Token(Token = "0x6000792")]
		void Initialize(int vertexCount, int edgeCount, int faceCount);

		[Token(Token = "0x6000793")]
		void Reset();

		[Token(Token = "0x6000794")]
		TriangleNet.Topology.DCEL.Vertex CreateVertex(double x, double y);

		[Token(Token = "0x6000795")]
		HalfEdge CreateHalfEdge(TriangleNet.Topology.DCEL.Vertex origin, Face face);

		[Token(Token = "0x6000796")]
		Face CreateFace(TriangleNet.Geometry.Vertex vertex);
	}
	[Token(Token = "0x2000154")]
	public class StandardVoronoi : VoronoiBase
	{
		[Token(Token = "0x6000797")]
		[Address(RVA = "0x14F90C0", Offset = "0x14F90C0", VA = "0x14F90C0")]
		public StandardVoronoi(Mesh mesh)
		{
		}

		[Token(Token = "0x6000798")]
		[Address(RVA = "0x14F91D4", Offset = "0x14F91D4", VA = "0x14F91D4")]
		public StandardVoronoi(Mesh mesh, Rectangle box)
		{
		}

		[Token(Token = "0x6000799")]
		[Address(RVA = "0x14F9170", Offset = "0x14F9170", VA = "0x14F9170")]
		public StandardVoronoi(Mesh mesh, Rectangle box, IVoronoiFactory factory, IPredicates predicates)
		{
		}

		[Token(Token = "0x600079A")]
		[Address(RVA = "0x14F927C", Offset = "0x14F927C", VA = "0x14F927C")]
		private void PostProcess(Rectangle box)
		{
		}
	}
	[Token(Token = "0x2000155")]
	public abstract class VoronoiBase : DcelMesh
	{
		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected IPredicates predicates;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected IVoronoiFactory factory;

		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<HalfEdge> rays;

		[Token(Token = "0x600079B")]
		[Address(RVA = "0x14F45D4", Offset = "0x14F45D4", VA = "0x14F45D4")]
		protected VoronoiBase(Mesh mesh, IVoronoiFactory factory, IPredicates predicates, bool generate)
		{
		}

		[Token(Token = "0x600079C")]
		[Address(RVA = "0x14F93EC", Offset = "0x14F93EC", VA = "0x14F93EC")]
		protected void Generate(Mesh mesh)
		{
		}

		[Token(Token = "0x600079D")]
		[Address(RVA = "0x14F9858", Offset = "0x14F9858", VA = "0x14F9858")]
		protected List<HalfEdge>[] ComputeVertices(Mesh mesh, TriangleNet.Topology.DCEL.Vertex[] vertices)
		{
			return null;
		}

		[Token(Token = "0x600079E")]
		[Address(RVA = "0x14F9D24", Offset = "0x14F9D24", VA = "0x14F9D24")]
		protected void ComputeEdges(Mesh mesh, TriangleNet.Topology.DCEL.Vertex[] vertices, Face[] faces, List<HalfEdge>[] map)
		{
		}

		[Token(Token = "0x600079F")]
		[Address(RVA = "0x14FA674", Offset = "0x14FA674", VA = "0x14FA674", Slot = "6")]
		protected virtual void ConnectEdges(List<HalfEdge>[] map)
		{
		}

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0x14FA938", Offset = "0x14FA938", VA = "0x14FA938", Slot = "5")]
		protected override IEnumerable<IEdge> EnumerateEdges()
		{
			return null;
		}
	}
}
namespace TriangleNet.Voronoi.Legacy
{
	[Token(Token = "0x2000156")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xABF894", Offset = "0xABF894")]
	public class BoundedVoronoiLegacy : IVoronoi
	{
		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPredicates predicates;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh mesh;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Point[] points;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<VoronoiRegion> regions;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Point> segPoints;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int segIndex;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<int, SubSegment> subsegMap;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool includeBoundary;

		[Token(Token = "0x170000B8")]
		public Point[] Points
		{
			[Token(Token = "0x60007A3")]
			[Address(RVA = "0x14F54DC", Offset = "0x14F54DC", VA = "0x14F54DC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B9")]
		public ICollection<VoronoiRegion> Regions
		{
			[Token(Token = "0x60007A4")]
			[Address(RVA = "0x14F54E4", Offset = "0x14F54E4", VA = "0x14F54E4", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BA")]
		public IEnumerable<IEdge> Edges
		{
			[Token(Token = "0x60007A5")]
			[Address(RVA = "0x14F54EC", Offset = "0x14F54EC", VA = "0x14F54EC", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007A1")]
		[Address(RVA = "0x14F5068", Offset = "0x14F5068", VA = "0x14F5068")]
		public BoundedVoronoiLegacy(Mesh mesh)
		{
		}

		[Token(Token = "0x60007A2")]
		[Address(RVA = "0x14F5070", Offset = "0x14F5070", VA = "0x14F5070")]
		public BoundedVoronoiLegacy(Mesh mesh, bool includeBoundary)
		{
		}

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0x14F5128", Offset = "0x14F5128", VA = "0x14F5128")]
		private void Generate()
		{
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0x14F5BF8", Offset = "0x14F5BF8", VA = "0x14F5BF8")]
		private void ComputeCircumCenters()
		{
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0x14F5F78", Offset = "0x14F5F78", VA = "0x14F5F78")]
		private void TagBlindTriangles()
		{
		}

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0x14F718C", Offset = "0x14F718C", VA = "0x14F718C")]
		private bool TriangleIsBlinded(ref Otri tri, ref Osub seg)
		{
			return default(bool);
		}

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0x14F6520", Offset = "0x14F6520", VA = "0x14F6520")]
		private void ConstructCell(TriangleNet.Geometry.Vertex vertex)
		{
		}

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0x14F69A4", Offset = "0x14F69A4", VA = "0x14F69A4")]
		private void ConstructBoundaryCell(TriangleNet.Geometry.Vertex vertex)
		{
		}

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0x14F72AC", Offset = "0x14F72AC", VA = "0x14F72AC")]
		private bool SegmentsIntersect(Point p1, Point p2, Point p3, Point p4, out Point p, bool strictIntersect)
		{
			return default(bool);
		}

		[Token(Token = "0x60007AD")]
		[Address(RVA = "0x14F54F0", Offset = "0x14F54F0", VA = "0x14F54F0")]
		private IEnumerable<IEdge> EnumerateEdges()
		{
			return null;
		}
	}
	[Token(Token = "0x2000157")]
	public interface IVoronoi
	{
		[Token(Token = "0x170000BB")]
		Point[] Points
		{
			[Token(Token = "0x60007AE")]
			get;
		}

		[Token(Token = "0x170000BC")]
		ICollection<VoronoiRegion> Regions
		{
			[Token(Token = "0x60007AF")]
			get;
		}

		[Token(Token = "0x170000BD")]
		IEnumerable<IEdge> Edges
		{
			[Token(Token = "0x60007B0")]
			get;
		}
	}
	[Token(Token = "0x2000158")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xABF8CC", Offset = "0xABF8CC")]
	public class SimpleVoronoi : IVoronoi
	{
		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPredicates predicates;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh mesh;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Point[] points;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<int, VoronoiRegion> regions;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<int, Point> rayPoints;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int rayIndex;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rectangle bounds;

		[Token(Token = "0x170000BE")]
		public Point[] Points
		{
			[Token(Token = "0x60007B2")]
			[Address(RVA = "0x14F7A6C", Offset = "0x14F7A6C", VA = "0x14F7A6C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BF")]
		public ICollection<VoronoiRegion> Regions
		{
			[Token(Token = "0x60007B3")]
			[Address(RVA = "0x14F7A74", Offset = "0x14F7A74", VA = "0x14F7A74", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C0")]
		public IEnumerable<IEdge> Edges
		{
			[Token(Token = "0x60007B4")]
			[Address(RVA = "0x14F7ACC", Offset = "0x14F7ACC", VA = "0x14F7ACC", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0x14F7654", Offset = "0x14F7654", VA = "0x14F7654")]
		public SimpleVoronoi(Mesh mesh)
		{
		}

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0x14F76F8", Offset = "0x14F76F8", VA = "0x14F76F8")]
		private void Generate()
		{
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0x14F81E8", Offset = "0x14F81E8", VA = "0x14F81E8")]
		private void ComputeCircumCenters()
		{
		}

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0x14F85FC", Offset = "0x14F85FC", VA = "0x14F85FC")]
		private void ConstructCell(VoronoiRegion region)
		{
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0x14F8D74", Offset = "0x14F8D74", VA = "0x14F8D74")]
		private bool BoxRayIntersection(Point pt, double dx, double dy, out Point intersect)
		{
			return default(bool);
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0x14F7AD0", Offset = "0x14F7AD0", VA = "0x14F7AD0")]
		private IEnumerable<IEdge> EnumerateEdges()
		{
			return null;
		}
	}
	[Token(Token = "0x2000159")]
	public class VoronoiRegion
	{
		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int id;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Point generator;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Point> vertices;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool bounded;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<int, VoronoiRegion> neighbors;

		[Token(Token = "0x170000C1")]
		public int ID
		{
			[Token(Token = "0x60007BA")]
			[Address(RVA = "0x14F8F28", Offset = "0x14F8F28", VA = "0x14F8F28")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000C2")]
		public Point Generator
		{
			[Token(Token = "0x60007BB")]
			[Address(RVA = "0x14F8F30", Offset = "0x14F8F30", VA = "0x14F8F30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C3")]
		public ICollection<Point> Vertices
		{
			[Token(Token = "0x60007BC")]
			[Address(RVA = "0x14F8F38", Offset = "0x14F8F38", VA = "0x14F8F38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C4")]
		public bool Bounded
		{
			[Token(Token = "0x60007BD")]
			[Address(RVA = "0x14F8F40", Offset = "0x14F8F40", VA = "0x14F8F40")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007BE")]
			[Address(RVA = "0x14F8F48", Offset = "0x14F8F48", VA = "0x14F8F48")]
			set
			{
			}
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0x14F7508", Offset = "0x14F7508", VA = "0x14F7508")]
		public VoronoiRegion(TriangleNet.Geometry.Vertex generator)
		{
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0x14F8F54", Offset = "0x14F8F54", VA = "0x14F8F54")]
		public void Add(Point point)
		{
		}

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0x14F75EC", Offset = "0x14F75EC", VA = "0x14F75EC")]
		public void Add(List<Point> points)
		{
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0x14F8FBC", Offset = "0x14F8FBC", VA = "0x14F8FBC")]
		public VoronoiRegion GetNeighbor(Point p)
		{
			return null;
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0x14F8D04", Offset = "0x14F8D04", VA = "0x14F8D04")]
		internal void AddNeighbor(int id, VoronoiRegion neighbor)
		{
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0x14F9040", Offset = "0x14F9040", VA = "0x14F9040", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
}
namespace TriangleNet.Topology
{
	[Token(Token = "0x200015A")]
	public struct Osub
	{
		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal SubSegment seg;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int orient;

		[Token(Token = "0x170000C5")]
		public SubSegment Segment
		{
			[Token(Token = "0x60007C5")]
			[Address(RVA = "0x14F0440", Offset = "0x14F0440", VA = "0x14F0440")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0x14F0448", Offset = "0x14F0448", VA = "0x14F0448", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0x14F04E0", Offset = "0x14F04E0", VA = "0x14F04E0")]
		public void Sym(ref Osub os)
		{
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0x14F0524", Offset = "0x14F0524", VA = "0x14F0524")]
		public void Sym()
		{
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0x14F0538", Offset = "0x14F0538", VA = "0x14F0538")]
		public void Pivot(ref Osub os)
		{
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0x14F0590", Offset = "0x14F0590", VA = "0x14F0590")]
		internal void Pivot(ref Otri ot)
		{
		}

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0x14F05E8", Offset = "0x14F05E8", VA = "0x14F05E8")]
		public void Next(ref Osub ot)
		{
		}

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0x14F0648", Offset = "0x14F0648", VA = "0x14F0648")]
		public void Next()
		{
		}

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0x14F06A0", Offset = "0x14F06A0", VA = "0x14F06A0")]
		public TriangleNet.Geometry.Vertex Org()
		{
			return null;
		}

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0x14F06E8", Offset = "0x14F06E8", VA = "0x14F06E8")]
		public TriangleNet.Geometry.Vertex Dest()
		{
			return null;
		}

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0x14F0738", Offset = "0x14F0738", VA = "0x14F0738")]
		internal void SetOrg(TriangleNet.Geometry.Vertex vertex)
		{
		}

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0x14F07BC", Offset = "0x14F07BC", VA = "0x14F07BC")]
		internal void SetDest(TriangleNet.Geometry.Vertex vertex)
		{
		}

		[Token(Token = "0x60007D1")]
		[Address(RVA = "0x14F0848", Offset = "0x14F0848", VA = "0x14F0848")]
		internal TriangleNet.Geometry.Vertex SegOrg()
		{
			return null;
		}

		[Token(Token = "0x60007D2")]
		[Address(RVA = "0x14F0894", Offset = "0x14F0894", VA = "0x14F0894")]
		internal TriangleNet.Geometry.Vertex SegDest()
		{
			return null;
		}

		[Token(Token = "0x60007D3")]
		[Address(RVA = "0x14F08E4", Offset = "0x14F08E4", VA = "0x14F08E4")]
		internal void SetSegOrg(TriangleNet.Geometry.Vertex vertex)
		{
		}

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0x14F096C", Offset = "0x14F096C", VA = "0x14F096C")]
		internal void SetSegDest(TriangleNet.Geometry.Vertex vertex)
		{
		}

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0x14F09F8", Offset = "0x14F09F8", VA = "0x14F09F8")]
		internal void Bond(ref Osub os)
		{
		}

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0x14F0A8C", Offset = "0x14F0A8C", VA = "0x14F0A8C")]
		internal void Dissolve(SubSegment dummy)
		{
		}

		[Token(Token = "0x60007D7")]
		[Address(RVA = "0x14F0AD4", Offset = "0x14F0AD4", VA = "0x14F0AD4")]
		internal bool Equal(Osub os)
		{
			return default(bool);
		}

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0x14F0AF8", Offset = "0x14F0AF8", VA = "0x14F0AF8")]
		internal void TriDissolve(Triangle dummy)
		{
		}

		[Token(Token = "0x60007D9")]
		[Address(RVA = "0x14F0B40", Offset = "0x14F0B40", VA = "0x14F0B40")]
		internal static bool IsDead(SubSegment sub)
		{
			return default(bool);
		}

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0x14F0B80", Offset = "0x14F0B80", VA = "0x14F0B80")]
		internal static void Kill(SubSegment sub)
		{
		}
	}
	[Token(Token = "0x200015B")]
	public struct Otri
	{
		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal Triangle tri;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int orient;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int[] plus1Mod3;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int[] minus1Mod3;

		[Token(Token = "0x170000C6")]
		public Triangle Triangle
		{
			[Token(Token = "0x60007DB")]
			[Address(RVA = "0x14F0BE8", Offset = "0x14F0BE8", VA = "0x14F0BE8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007DC")]
			[Address(RVA = "0x14F0BF0", Offset = "0x14F0BF0", VA = "0x14F0BF0")]
			set
			{
			}
		}

		[Token(Token = "0x60007DD")]
		[Address(RVA = "0x14F0BF8", Offset = "0x14F0BF8", VA = "0x14F0BF8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0x14F0C90", Offset = "0x14F0C90", VA = "0x14F0C90")]
		public void Sym(ref Otri ot)
		{
		}

		[Token(Token = "0x60007DF")]
		[Address(RVA = "0x14F0D20", Offset = "0x14F0D20", VA = "0x14F0D20")]
		public void Sym()
		{
		}

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0x14F0D8C", Offset = "0x14F0D8C", VA = "0x14F0D8C")]
		public void Lnext(ref Otri ot)
		{
		}

		[Token(Token = "0x60007E1")]
		[Address(RVA = "0x14F0E44", Offset = "0x14F0E44", VA = "0x14F0E44")]
		public void Lnext()
		{
		}

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0x14F0EE0", Offset = "0x14F0EE0", VA = "0x14F0EE0")]
		public void Lprev(ref Otri ot)
		{
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0x14F0F98", Offset = "0x14F0F98", VA = "0x14F0F98")]
		public void Lprev()
		{
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0x14F1034", Offset = "0x14F1034", VA = "0x14F1034")]
		public void Onext(ref Otri ot)
		{
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0x14F1138", Offset = "0x14F1138", VA = "0x14F1138")]
		public void Onext()
		{
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0x14F1220", Offset = "0x14F1220", VA = "0x14F1220")]
		public void Oprev(ref Otri ot)
		{
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0x14F1328", Offset = "0x14F1328", VA = "0x14F1328")]
		public void Oprev()
		{
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0x14F1418", Offset = "0x14F1418", VA = "0x14F1418")]
		public void Dnext(ref Otri ot)
		{
		}

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0x14F1520", Offset = "0x14F1520", VA = "0x14F1520")]
		public void Dnext()
		{
		}

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0x14F1610", Offset = "0x14F1610", VA = "0x14F1610")]
		public void Dprev(ref Otri ot)
		{
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0x14F1714", Offset = "0x14F1714", VA = "0x14F1714")]
		public void Dprev()
		{
		}

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0x14F17FC", Offset = "0x14F17FC", VA = "0x14F17FC")]
		public void Rnext(ref Otri ot)
		{
		}

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0x14F1950", Offset = "0x14F1950", VA = "0x14F1950")]
		public void Rnext()
		{
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0x14F1A8C", Offset = "0x14F1A8C", VA = "0x14F1A8C")]
		public void Rprev(ref Otri ot)
		{
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0x14F1BE0", Offset = "0x14F1BE0", VA = "0x14F1BE0")]
		public void Rprev()
		{
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0x14EB684", Offset = "0x14EB684", VA = "0x14EB684")]
		public TriangleNet.Geometry.Vertex Org()
		{
			return null;
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0x14EB748", Offset = "0x14EB748", VA = "0x14EB748")]
		public TriangleNet.Geometry.Vertex Dest()
		{
			return null;
		}

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0x14EB80C", Offset = "0x14EB80C", VA = "0x14EB80C")]
		public TriangleNet.Geometry.Vertex Apex()
		{
			return null;
		}

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0x14F1D1C", Offset = "0x14F1D1C", VA = "0x14F1D1C")]
		public void Copy(ref Otri ot)
		{
		}

		[Token(Token = "0x60007F4")]
		[Address(RVA = "0x14F1D58", Offset = "0x14F1D58", VA = "0x14F1D58")]
		public bool Equals(Otri ot)
		{
			return default(bool);
		}

		[Token(Token = "0x60007F5")]
		[Address(RVA = "0x14F1D7C", Offset = "0x14F1D7C", VA = "0x14F1D7C")]
		internal void SetOrg(TriangleNet.Geometry.Vertex v)
		{
		}

		[Token(Token = "0x60007F6")]
		[Address(RVA = "0x14F1E6C", Offset = "0x14F1E6C", VA = "0x14F1E6C")]
		internal void SetDest(TriangleNet.Geometry.Vertex v)
		{
		}

		[Token(Token = "0x60007F7")]
		[Address(RVA = "0x14F1F5C", Offset = "0x14F1F5C", VA = "0x14F1F5C")]
		internal void SetApex(TriangleNet.Geometry.Vertex v)
		{
		}

		[Token(Token = "0x60007F8")]
		[Address(RVA = "0x14F1FE0", Offset = "0x14F1FE0", VA = "0x14F1FE0")]
		internal void Bond(ref Otri ot)
		{
		}

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0x14F20C8", Offset = "0x14F20C8", VA = "0x14F20C8")]
		internal void Dissolve(Triangle dummy)
		{
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0x14F2148", Offset = "0x14F2148", VA = "0x14F2148")]
		internal void Infect()
		{
		}

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0x14F2168", Offset = "0x14F2168", VA = "0x14F2168")]
		internal void Uninfect()
		{
		}

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0x14F2184", Offset = "0x14F2184", VA = "0x14F2184")]
		internal bool IsInfected()
		{
			return default(bool);
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0x14F21A0", Offset = "0x14F21A0", VA = "0x14F21A0")]
		internal void Pivot(ref Osub os)
		{
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x14F21F8", Offset = "0x14F21F8", VA = "0x14F21F8")]
		internal void SegBond(ref Osub os)
		{
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0x14F228C", Offset = "0x14F228C", VA = "0x14F228C")]
		internal void SegDissolve(SubSegment dummy)
		{
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0x14F22D4", Offset = "0x14F22D4", VA = "0x14F22D4")]
		internal static bool IsDead(Triangle tria)
		{
			return default(bool);
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0x14F2314", Offset = "0x14F2314", VA = "0x14F2314")]
		internal static void Kill(Triangle tri)
		{
		}
	}
	[Token(Token = "0x200015C")]
	public class SubSegment : ISegment, IEdge
	{
		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int hash;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Osub[] subsegs;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal TriangleNet.Geometry.Vertex[] vertices;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal Otri[] triangles;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal int boundary;

		[Token(Token = "0x170000C7")]
		public int P0
		{
			[Token(Token = "0x6000804")]
			[Address(RVA = "0x14F2514", Offset = "0x14F2514", VA = "0x14F2514", Slot = "6")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000C8")]
		public int P1
		{
			[Token(Token = "0x6000805")]
			[Address(RVA = "0x14F2550", Offset = "0x14F2550", VA = "0x14F2550", Slot = "7")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000C9")]
		public int Label
		{
			[Token(Token = "0x6000806")]
			[Address(RVA = "0x14F2590", Offset = "0x14F2590", VA = "0x14F2590", Slot = "8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0x14F245C", Offset = "0x14F245C", VA = "0x14F245C")]
		public SubSegment()
		{
		}

		[Token(Token = "0x6000807")]
		[Address(RVA = "0x14F2598", Offset = "0x14F2598", VA = "0x14F2598", Slot = "4")]
		public TriangleNet.Geometry.Vertex GetVertex(int index)
		{
			return null;
		}

		[Token(Token = "0x6000808")]
		[Address(RVA = "0x14F25D4", Offset = "0x14F25D4", VA = "0x14F25D4", Slot = "5")]
		public ITriangle GetTriangle(int index)
		{
			return null;
		}

		[Token(Token = "0x6000809")]
		[Address(RVA = "0x14F2620", Offset = "0x14F2620", VA = "0x14F2620", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0x14F2628", Offset = "0x14F2628", VA = "0x14F2628", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200015D")]
	public class Triangle : ITriangle
	{
		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int hash;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int id;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Otri[] neighbors;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal TriangleNet.Geometry.Vertex[] vertices;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal Osub[] subsegs;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal int label;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal double area;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal bool infected;

		[Token(Token = "0x170000CA")]
		public int ID
		{
			[Token(Token = "0x600080C")]
			[Address(RVA = "0x14F275C", Offset = "0x14F275C", VA = "0x14F275C", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600080D")]
			[Address(RVA = "0x14F2764", Offset = "0x14F2764", VA = "0x14F2764", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170000CB")]
		public int Label
		{
			[Token(Token = "0x600080E")]
			[Address(RVA = "0x14F276C", Offset = "0x14F276C", VA = "0x14F276C", Slot = "6")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600080F")]
			[Address(RVA = "0x14F2774", Offset = "0x14F2774", VA = "0x14F2774", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170000CC")]
		public double Area
		{
			[Token(Token = "0x6000810")]
			[Address(RVA = "0x14F277C", Offset = "0x14F277C", VA = "0x14F277C", Slot = "8")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000811")]
			[Address(RVA = "0x14F2784", Offset = "0x14F2784", VA = "0x14F2784", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x600080B")]
		[Address(RVA = "0x14F26A8", Offset = "0x14F26A8", VA = "0x14F26A8")]
		public Triangle()
		{
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0x14EAD7C", Offset = "0x14EAD7C", VA = "0x14EAD7C", Slot = "10")]
		public TriangleNet.Geometry.Vertex GetVertex(int index)
		{
			return null;
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0x14F278C", Offset = "0x14F278C", VA = "0x14F278C", Slot = "11")]
		public int GetVertexID(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000814")]
		[Address(RVA = "0x14F27D0", Offset = "0x14F27D0", VA = "0x14F27D0", Slot = "12")]
		public ITriangle GetNeighbor(int index)
		{
			return null;
		}

		[Token(Token = "0x6000815")]
		[Address(RVA = "0x14F281C", Offset = "0x14F281C", VA = "0x14F281C", Slot = "13")]
		public int GetNeighborID(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000816")]
		[Address(RVA = "0x14F2874", Offset = "0x14F2874", VA = "0x14F2874", Slot = "14")]
		public ISegment GetSegment(int index)
		{
			return null;
		}

		[Token(Token = "0x6000817")]
		[Address(RVA = "0x14F28C0", Offset = "0x14F28C0", VA = "0x14F28C0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000818")]
		[Address(RVA = "0x14F28C8", Offset = "0x14F28C8", VA = "0x14F28C8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
}
namespace TriangleNet.Topology.DCEL
{
	[Token(Token = "0x200015E")]
	public class DcelMesh
	{
		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected List<Vertex> vertices;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected List<HalfEdge> edges;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected List<Face> faces;

		[Token(Token = "0x170000CD")]
		public List<Vertex> Vertices
		{
			[Token(Token = "0x600081B")]
			[Address(RVA = "0x14EEEB0", Offset = "0x14EEEB0", VA = "0x14EEEB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CE")]
		public List<HalfEdge> HalfEdges
		{
			[Token(Token = "0x600081C")]
			[Address(RVA = "0x14EEEB8", Offset = "0x14EEEB8", VA = "0x14EEEB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CF")]
		public List<Face> Faces
		{
			[Token(Token = "0x600081D")]
			[Address(RVA = "0x14EEEC0", Offset = "0x14EEEC0", VA = "0x14EEEC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D0")]
		public IEnumerable<IEdge> Edges
		{
			[Token(Token = "0x600081E")]
			[Address(RVA = "0x14EEEC8", Offset = "0x14EEEC8", VA = "0x14EEEC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000819")]
		[Address(RVA = "0x14EEDA4", Offset = "0x14EEDA4", VA = "0x14EEDA4")]
		public DcelMesh()
		{
		}

		[Token(Token = "0x600081A")]
		[Address(RVA = "0x14EEDAC", Offset = "0x14EEDAC", VA = "0x14EEDAC")]
		protected DcelMesh(bool initialize)
		{
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0x14EEED4", Offset = "0x14EEED4", VA = "0x14EEED4", Slot = "4")]
		public virtual bool IsConsistent(bool closed = true, int depth = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x6000820")]
		[Address(RVA = "0x14EF534", Offset = "0x14EF534", VA = "0x14EF534")]
		public void ResolveBoundaryEdges()
		{
		}

		[Token(Token = "0x6000821")]
		[Address(RVA = "0x14EF91C", Offset = "0x14EF91C", VA = "0x14EF91C", Slot = "5")]
		protected virtual IEnumerable<IEdge> EnumerateEdges()
		{
			return null;
		}
	}
	[Token(Token = "0x200015F")]
	public class Face
	{
		[Token(Token = "0x2000462")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0CB0", Offset = "0xAC0CB0")]
		private sealed class <EnumerateEdges>d__17 : IEnumerable<HalfEdge>, IEnumerable, IEnumerator<HalfEdge>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private HalfEdge <>2__current;

			[Token(Token = "0x4001CEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001CED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Face <>4__this;

			[Token(Token = "0x4001CEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private HalfEdge <edge>5__2;

			[Token(Token = "0x4001CEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <first>5__3;

			[Token(Token = "0x170002CB")]
			private HalfEdge System.Collections.Generic.IEnumerator<TriangleNet.Topology.DCEL.HalfEdge>.Current
			{
				[Token(Token = "0x6001D7E")]
				[Address(RVA = "0x14EFE58", Offset = "0x14EFE58", VA = "0x14EFE58", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D80")]
				[Address(RVA = "0x14EFEC0", Offset = "0x14EFEC0", VA = "0x14EFEC0", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D7B")]
			[Address(RVA = "0x14EFCDC", Offset = "0x14EFCDC", VA = "0x14EFCDC")]
			[DebuggerHidden]
			public <EnumerateEdges>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001D7C")]
			[Address(RVA = "0x14EFD94", Offset = "0x14EFD94", VA = "0x14EFD94", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D7D")]
			[Address(RVA = "0x14EFD98", Offset = "0x14EFD98", VA = "0x14EFD98", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D7F")]
			[Address(RVA = "0x14EFE60", Offset = "0x14EFE60", VA = "0x14EFE60", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001D81")]
			[Address(RVA = "0x14EFEC8", Offset = "0x14EFEC8", VA = "0x14EFEC8", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<HalfEdge> System.Collections.Generic.IEnumerable<TriangleNet.Topology.DCEL.HalfEdge>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001D82")]
			[Address(RVA = "0x14EFF7C", Offset = "0x14EFF7C", VA = "0x14EFF7C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Face Empty;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int id;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Point generator;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal HalfEdge edge;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal bool bounded;

		[Token(Token = "0x170000D1")]
		public int ID
		{
			[Token(Token = "0x6000823")]
			[Address(RVA = "0x14EFB98", Offset = "0x14EFB98", VA = "0x14EFB98")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000824")]
			[Address(RVA = "0x14EFBA0", Offset = "0x14EFBA0", VA = "0x14EFBA0")]
			set
			{
			}
		}

		[Token(Token = "0x170000D2")]
		public HalfEdge Edge
		{
			[Token(Token = "0x6000825")]
			[Address(RVA = "0x14EFBA8", Offset = "0x14EFBA8", VA = "0x14EFBA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000826")]
			[Address(RVA = "0x14EFBB0", Offset = "0x14EFBB0", VA = "0x14EFBB0")]
			set
			{
			}
		}

		[Token(Token = "0x170000D3")]
		public bool Bounded
		{
			[Token(Token = "0x6000827")]
			[Address(RVA = "0x14EFBB8", Offset = "0x14EFBB8", VA = "0x14EFBB8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000828")]
			[Address(RVA = "0x14EFBC0", Offset = "0x14EFBC0", VA = "0x14EFBC0")]
			set
			{
			}
		}

		[Token(Token = "0x6000822")]
		[Address(RVA = "0x14EFB04", Offset = "0x14EFB04", VA = "0x14EFB04")]
		static Face()
		{
		}

		[Token(Token = "0x6000829")]
		[Address(RVA = "0x14EFB90", Offset = "0x14EFB90", VA = "0x14EFB90")]
		public Face(Point generator)
		{
		}

		[Token(Token = "0x600082A")]
		[Address(RVA = "0x14EFBCC", Offset = "0x14EFBCC", VA = "0x14EFBCC")]
		public Face(Point generator, HalfEdge edge)
		{
		}

		[Token(Token = "0x600082B")]
		[Address(RVA = "0x14EFC50", Offset = "0x14EFC50", VA = "0x14EFC50")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACAC34", Offset = "0xACAC34")]
		public IEnumerable<HalfEdge> EnumerateEdges()
		{
			return null;
		}

		[Token(Token = "0x600082C")]
		[Address(RVA = "0x14EFD14", Offset = "0x14EFD14", VA = "0x14EFD14", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000160")]
	public class HalfEdge
	{
		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int id;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int mark;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Vertex origin;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal Face face;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal HalfEdge twin;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal HalfEdge next;

		[Token(Token = "0x170000D4")]
		public int ID
		{
			[Token(Token = "0x600082D")]
			[Address(RVA = "0x14EFF80", Offset = "0x14EFF80", VA = "0x14EFF80")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600082E")]
			[Address(RVA = "0x14EFF88", Offset = "0x14EFF88", VA = "0x14EFF88")]
			set
			{
			}
		}

		[Token(Token = "0x170000D5")]
		public int Boundary
		{
			[Token(Token = "0x600082F")]
			[Address(RVA = "0x14EFF90", Offset = "0x14EFF90", VA = "0x14EFF90")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000830")]
			[Address(RVA = "0x14EFF98", Offset = "0x14EFF98", VA = "0x14EFF98")]
			set
			{
			}
		}

		[Token(Token = "0x170000D6")]
		public Vertex Origin
		{
			[Token(Token = "0x6000831")]
			[Address(RVA = "0x14EFFA0", Offset = "0x14EFFA0", VA = "0x14EFFA0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000832")]
			[Address(RVA = "0x14EFFA8", Offset = "0x14EFFA8", VA = "0x14EFFA8")]
			set
			{
			}
		}

		[Token(Token = "0x170000D7")]
		public Face Face
		{
			[Token(Token = "0x6000833")]
			[Address(RVA = "0x14EFFB0", Offset = "0x14EFFB0", VA = "0x14EFFB0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000834")]
			[Address(RVA = "0x14EFFB8", Offset = "0x14EFFB8", VA = "0x14EFFB8")]
			set
			{
			}
		}

		[Token(Token = "0x170000D8")]
		public HalfEdge Twin
		{
			[Token(Token = "0x6000835")]
			[Address(RVA = "0x14EFFC0", Offset = "0x14EFFC0", VA = "0x14EFFC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000836")]
			[Address(RVA = "0x14EFFC8", Offset = "0x14EFFC8", VA = "0x14EFFC8")]
			set
			{
			}
		}

		[Token(Token = "0x170000D9")]
		public HalfEdge Next
		{
			[Token(Token = "0x6000837")]
			[Address(RVA = "0x14EFFD0", Offset = "0x14EFFD0", VA = "0x14EFFD0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000838")]
			[Address(RVA = "0x14EFFD8", Offset = "0x14EFFD8", VA = "0x14EFFD8")]
			set
			{
			}
		}

		[Token(Token = "0x6000839")]
		[Address(RVA = "0x14EFFE0", Offset = "0x14EFFE0", VA = "0x14EFFE0")]
		public HalfEdge(Vertex origin)
		{
		}

		[Token(Token = "0x600083A")]
		[Address(RVA = "0x14EF8A0", Offset = "0x14EF8A0", VA = "0x14EF8A0")]
		public HalfEdge(Vertex origin, Face face)
		{
		}

		[Token(Token = "0x600083B")]
		[Address(RVA = "0x14F0014", Offset = "0x14F0014", VA = "0x14F0014", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000161")]
	public class Vertex : Point
	{
		[Token(Token = "0x2000463")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0CC0", Offset = "0xAC0CC0")]
		private sealed class <EnumerateEdges>d__6 : IEnumerable<HalfEdge>, IEnumerable, IEnumerator<HalfEdge>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private HalfEdge <>2__current;

			[Token(Token = "0x4001CF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001CF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vertex <>4__this;

			[Token(Token = "0x4001CF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private HalfEdge <edge>5__2;

			[Token(Token = "0x4001CF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <first>5__3;

			[Token(Token = "0x170002CD")]
			private HalfEdge System.Collections.Generic.IEnumerator<TriangleNet.Topology.DCEL.HalfEdge>.Current
			{
				[Token(Token = "0x6001D86")]
				[Address(RVA = "0x14F0318", Offset = "0x14F0318", VA = "0x14F0318", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D88")]
				[Address(RVA = "0x14F0380", Offset = "0x14F0380", VA = "0x14F0380", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D83")]
			[Address(RVA = "0x14F0194", Offset = "0x14F0194", VA = "0x14F0194")]
			[DebuggerHidden]
			public <EnumerateEdges>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001D84")]
			[Address(RVA = "0x14F024C", Offset = "0x14F024C", VA = "0x14F024C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D85")]
			[Address(RVA = "0x14F0250", Offset = "0x14F0250", VA = "0x14F0250", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D87")]
			[Address(RVA = "0x14F0320", Offset = "0x14F0320", VA = "0x14F0320", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001D89")]
			[Address(RVA = "0x14F0388", Offset = "0x14F0388", VA = "0x14F0388", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<HalfEdge> System.Collections.Generic.IEnumerable<TriangleNet.Topology.DCEL.HalfEdge>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001D8A")]
			[Address(RVA = "0x14F043C", Offset = "0x14F043C", VA = "0x14F043C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal HalfEdge leaving;

		[Token(Token = "0x170000DA")]
		public HalfEdge Leaving
		{
			[Token(Token = "0x600083C")]
			[Address(RVA = "0x14F00BC", Offset = "0x14F00BC", VA = "0x14F00BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600083D")]
			[Address(RVA = "0x14F00C4", Offset = "0x14F00C4", VA = "0x14F00C4")]
			set
			{
			}
		}

		[Token(Token = "0x600083E")]
		[Address(RVA = "0x14F00CC", Offset = "0x14F00CC", VA = "0x14F00CC")]
		public Vertex(double x, double y)
		{
		}

		[Token(Token = "0x600083F")]
		[Address(RVA = "0x14F00D4", Offset = "0x14F00D4", VA = "0x14F00D4")]
		public Vertex(double x, double y, HalfEdge leaving)
		{
		}

		[Token(Token = "0x6000840")]
		[Address(RVA = "0x14F0108", Offset = "0x14F0108", VA = "0x14F0108")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACAC98", Offset = "0xACAC98")]
		public IEnumerable<HalfEdge> EnumerateEdges()
		{
			return null;
		}

		[Token(Token = "0x6000841")]
		[Address(RVA = "0x14F01CC", Offset = "0x14F01CC", VA = "0x14F01CC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
}
namespace TriangleNet.Tools
{
	[Token(Token = "0x2000162")]
	public class AdjacencyMatrix
	{
		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int nnz;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int[] pcol;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int[] irow;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly int N;

		[Token(Token = "0x170000DB")]
		public int[] ColumnPointers
		{
			[Token(Token = "0x6000842")]
			[Address(RVA = "0x1CF2274", Offset = "0x1CF2274", VA = "0x1CF2274")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DC")]
		public int[] RowIndices
		{
			[Token(Token = "0x6000843")]
			[Address(RVA = "0x1CF227C", Offset = "0x1CF227C", VA = "0x1CF227C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000844")]
		[Address(RVA = "0x1CF2284", Offset = "0x1CF2284", VA = "0x1CF2284")]
		public AdjacencyMatrix(Mesh mesh)
		{
		}

		[Token(Token = "0x6000845")]
		[Address(RVA = "0x1CF3028", Offset = "0x1CF3028", VA = "0x1CF3028")]
		public AdjacencyMatrix(int[] pcol, int[] irow)
		{
		}

		[Token(Token = "0x6000846")]
		[Address(RVA = "0x1CF3168", Offset = "0x1CF3168", VA = "0x1CF3168")]
		public int Bandwidth()
		{
			return default(int);
		}

		[Token(Token = "0x6000847")]
		[Address(RVA = "0x1CF236C", Offset = "0x1CF236C", VA = "0x1CF236C")]
		private int[] AdjacencyCount(Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x6000848")]
		[Address(RVA = "0x1CF290C", Offset = "0x1CF290C", VA = "0x1CF290C")]
		private int[] AdjacencySet(Mesh mesh, int[] pcol)
		{
			return null;
		}

		[Token(Token = "0x6000849")]
		[Address(RVA = "0x1CF2F68", Offset = "0x1CF2F68", VA = "0x1CF2F68")]
		public void SortIndices()
		{
		}
	}
	[Token(Token = "0x2000163")]
	public class CuthillMcKee
	{
		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AdjacencyMatrix matrix;

		[Token(Token = "0x600084A")]
		[Address(RVA = "0x1CF32CC", Offset = "0x1CF32CC", VA = "0x1CF32CC")]
		public int[] Renumber(Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x600084B")]
		[Address(RVA = "0x1CF3354", Offset = "0x1CF3354", VA = "0x1CF3354")]
		public int[] Renumber(AdjacencyMatrix matrix)
		{
			return null;
		}

		[Token(Token = "0x600084C")]
		[Address(RVA = "0x1CF364C", Offset = "0x1CF364C", VA = "0x1CF364C")]
		private int[] GenerateRcm()
		{
			return null;
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0x1CF3C6C", Offset = "0x1CF3C6C", VA = "0x1CF3C6C")]
		private void Rcm(int root, int[] mask, int[] perm, int offset, ref int iccsze)
		{
		}

		[Token(Token = "0x600084E")]
		[Address(RVA = "0x1CF3A68", Offset = "0x1CF3A68", VA = "0x1CF3A68")]
		private void FindRoot(ref int root, int[] mask, ref int level_num, int[] level_row, int[] level, int offset)
		{
		}

		[Token(Token = "0x600084F")]
		[Address(RVA = "0x1CF42D0", Offset = "0x1CF42D0", VA = "0x1CF42D0")]
		private void GetLevelSet(ref int root, int[] mask, ref int level_num, int[] level_row, int[] level, int offset)
		{
		}

		[Token(Token = "0x6000850")]
		[Address(RVA = "0x1CF3F70", Offset = "0x1CF3F70", VA = "0x1CF3F70")]
		private void Degree(int root, int[] mask, int[] deg, ref int iccsze, int[] ls, int offset)
		{
		}

		[Token(Token = "0x6000851")]
		[Address(RVA = "0x1CF38A4", Offset = "0x1CF38A4", VA = "0x1CF38A4")]
		private int PermBandwidth(int[] perm, int[] perm_inv)
		{
			return default(int);
		}

		[Token(Token = "0x6000852")]
		[Address(RVA = "0x1CF37E0", Offset = "0x1CF37E0", VA = "0x1CF37E0")]
		private int[] PermInverse(int[] perm)
		{
			return null;
		}

		[Token(Token = "0x6000853")]
		[Address(RVA = "0x1CF422C", Offset = "0x1CF422C", VA = "0x1CF422C")]
		private void ReverseVector(int[] a, int offset, int size)
		{
		}

		[Token(Token = "0x6000854")]
		[Address(RVA = "0x1CF35B4", Offset = "0x1CF35B4", VA = "0x1CF35B4")]
		private void Shift(int[] a, bool up)
		{
		}

		[Token(Token = "0x6000855")]
		[Address(RVA = "0x1CF44D8", Offset = "0x1CF44D8", VA = "0x1CF44D8")]
		public CuthillMcKee()
		{
		}
	}
	[Token(Token = "0x2000164")]
	public static class Interpolation
	{
		[Token(Token = "0x6000856")]
		[Address(RVA = "0x1CF44E0", Offset = "0x1CF44E0", VA = "0x1CF44E0")]
		public static void InterpolateZ(Point p, ITriangle triangle)
		{
		}
	}
	[Token(Token = "0x2000165")]
	public static class IntersectionHelper
	{
		[Token(Token = "0x6000857")]
		[Address(RVA = "0x1CF4714", Offset = "0x1CF4714", VA = "0x1CF4714")]
		public static void IntersectSegments(Point p0, Point p1, Point q0, Point q1, ref Point c0)
		{
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0x1CF47A8", Offset = "0x1CF47A8", VA = "0x1CF47A8")]
		public static bool LiangBarsky(Rectangle rect, Point p0, Point p1, ref Point c0, ref Point c1)
		{
			return default(bool);
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0x1CF491C", Offset = "0x1CF491C", VA = "0x1CF491C")]
		public static bool BoxRayIntersection(Rectangle rect, Point p0, Point p1, ref Point c1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000166")]
	public static class PolygonValidator
	{
		[Token(Token = "0x600085A")]
		[Address(RVA = "0x1CF4A54", Offset = "0x1CF4A54", VA = "0x1CF4A54")]
		public static bool IsConsistent(IPolygon poly)
		{
			return default(bool);
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0x1CF5C7C", Offset = "0x1CF5C7C", VA = "0x1CF5C7C")]
		public static bool HasDuplicateVertices(IPolygon poly)
		{
			return default(bool);
		}

		[Token(Token = "0x600085C")]
		[Address(RVA = "0x1CF5F04", Offset = "0x1CF5F04", VA = "0x1CF5F04")]
		public static bool HasBadAngles(IPolygon poly, double threshold = 2E-12)
		{
			return default(bool);
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0x1CF63E8", Offset = "0x1CF63E8", VA = "0x1CF63E8")]
		private static bool IsBadAngle(Point a, Point b, Point c, double threshold = 0.0)
		{
			return default(bool);
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0x1CF64AC", Offset = "0x1CF64AC", VA = "0x1CF64AC")]
		private static double DotProduct(Point a, Point b, Point c)
		{
			return default(double);
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0x1CF64F4", Offset = "0x1CF64F4", VA = "0x1CF64F4")]
		private static double CrossProductLength(Point a, Point b, Point c)
		{
			return default(double);
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0x1CF54F4", Offset = "0x1CF54F4", VA = "0x1CF54F4")]
		private static int CheckVertexIDs(IPolygon poly, int count)
		{
			return default(int);
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0x1CF59B0", Offset = "0x1CF59B0", VA = "0x1CF59B0")]
		private static int CheckDuplicateIDs(IPolygon poly)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000167")]
	public class QualityMeasure
	{
		[Token(Token = "0x2000464")]
		private class AreaMeasure
		{
			[Token(Token = "0x4001CF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public double area_min;

			[Token(Token = "0x4001CF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public double area_max;

			[Token(Token = "0x4001CF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public double area_total;

			[Token(Token = "0x4001CF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int area_zero;

			[Token(Token = "0x6001D8B")]
			[Address(RVA = "0x14EA0B8", Offset = "0x14EA0B8", VA = "0x14EA0B8")]
			public void Reset()
			{
			}

			[Token(Token = "0x6001D8C")]
			[Address(RVA = "0x14EA5C8", Offset = "0x14EA5C8", VA = "0x14EA5C8")]
			public double Measure(Point a, Point b, Point c)
			{
				return default(double);
			}

			[Token(Token = "0x6001D8D")]
			[Address(RVA = "0x14E9EEC", Offset = "0x14E9EEC", VA = "0x14E9EEC")]
			public AreaMeasure()
			{
			}
		}

		[Token(Token = "0x2000465")]
		private class AlphaMeasure
		{
			[Token(Token = "0x4001CFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public double alpha_min;

			[Token(Token = "0x4001CFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public double alpha_max;

			[Token(Token = "0x4001CFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public double alpha_ave;

			[Token(Token = "0x4001CFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public double alpha_area;

			[Token(Token = "0x6001D8E")]
			[Address(RVA = "0x14EA0D0", Offset = "0x14EA0D0", VA = "0x14EA0D0")]
			public void Reset()
			{
			}

			[Token(Token = "0x6001D8F")]
			[Address(RVA = "0x14EADB8", Offset = "0x14EADB8", VA = "0x14EADB8")]
			private double acos(double c)
			{
				return default(double);
			}

			[Token(Token = "0x6001D90")]
			[Address(RVA = "0x14EA6F4", Offset = "0x14EA6F4", VA = "0x14EA6F4")]
			public double Measure(double ab, double bc, double ca, double area)
			{
				return default(double);
			}

			[Token(Token = "0x6001D91")]
			[Address(RVA = "0x14EA9F8", Offset = "0x14EA9F8", VA = "0x14EA9F8")]
			public void Normalize(int n, double area_total)
			{
			}

			[Token(Token = "0x6001D92")]
			[Address(RVA = "0x14E9F00", Offset = "0x14E9F00", VA = "0x14E9F00")]
			public AlphaMeasure()
			{
			}
		}

		[Token(Token = "0x2000466")]
		private class Q_Measure
		{
			[Token(Token = "0x4001CFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public double q_min;

			[Token(Token = "0x4001CFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public double q_max;

			[Token(Token = "0x4001D00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public double q_ave;

			[Token(Token = "0x4001D01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public double q_area;

			[Token(Token = "0x6001D93")]
			[Address(RVA = "0x14EA0E4", Offset = "0x14EA0E4", VA = "0x14EA0E4")]
			public void Reset()
			{
			}

			[Token(Token = "0x6001D94")]
			[Address(RVA = "0x14EA8FC", Offset = "0x14EA8FC", VA = "0x14EA8FC")]
			public double Measure(double ab, double bc, double ca, double area)
			{
				return default(double);
			}

			[Token(Token = "0x6001D95")]
			[Address(RVA = "0x14EAA30", Offset = "0x14EAA30", VA = "0x14EAA30")]
			public void Normalize(int n, double area_total)
			{
			}

			[Token(Token = "0x6001D96")]
			[Address(RVA = "0x14E9F08", Offset = "0x14E9F08", VA = "0x14E9F08")]
			public Q_Measure()
			{
			}
		}

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AreaMeasure areaMeasure;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AlphaMeasure alphaMeasure;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Q_Measure qMeasure;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Mesh mesh;

		[Token(Token = "0x170000DD")]
		public double AreaMinimum
		{
			[Token(Token = "0x6000863")]
			[Address(RVA = "0x14E9F10", Offset = "0x14E9F10", VA = "0x14E9F10")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170000DE")]
		public double AreaMaximum
		{
			[Token(Token = "0x6000864")]
			[Address(RVA = "0x14E9F2C", Offset = "0x14E9F2C", VA = "0x14E9F2C")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170000DF")]
		public double AreaRatio
		{
			[Token(Token = "0x6000865")]
			[Address(RVA = "0x14E9F48", Offset = "0x14E9F48", VA = "0x14E9F48")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170000E0")]
		public double AlphaMinimum
		{
			[Token(Token = "0x6000866")]
			[Address(RVA = "0x14E9F68", Offset = "0x14E9F68", VA = "0x14E9F68")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170000E1")]
		public double AlphaMaximum
		{
			[Token(Token = "0x6000867")]
			[Address(RVA = "0x14E9F84", Offset = "0x14E9F84", VA = "0x14E9F84")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170000E2")]
		public double AlphaAverage
		{
			[Token(Token = "0x6000868")]
			[Address(RVA = "0x14E9FA0", Offset = "0x14E9FA0", VA = "0x14E9FA0")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170000E3")]
		public double AlphaArea
		{
			[Token(Token = "0x6000869")]
			[Address(RVA = "0x14E9FBC", Offset = "0x14E9FBC", VA = "0x14E9FBC")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170000E4")]
		public double Q_Minimum
		{
			[Token(Token = "0x600086A")]
			[Address(RVA = "0x14E9FD8", Offset = "0x14E9FD8", VA = "0x14E9FD8")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170000E5")]
		public double Q_Maximum
		{
			[Token(Token = "0x600086B")]
			[Address(RVA = "0x14E9FF4", Offset = "0x14E9FF4", VA = "0x14E9FF4")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170000E6")]
		public double Q_Average
		{
			[Token(Token = "0x600086C")]
			[Address(RVA = "0x14EA010", Offset = "0x14EA010", VA = "0x14EA010")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170000E7")]
		public double Q_Area
		{
			[Token(Token = "0x600086D")]
			[Address(RVA = "0x14EA02C", Offset = "0x14EA02C", VA = "0x14EA02C")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0x14E9E14", Offset = "0x14E9E14", VA = "0x14E9E14")]
		public QualityMeasure()
		{
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0x14EA048", Offset = "0x14EA048", VA = "0x14EA048")]
		public void Update(Mesh mesh)
		{
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0x14EA0F8", Offset = "0x14EA0F8", VA = "0x14EA0F8")]
		private void Compute()
		{
		}

		[Token(Token = "0x6000870")]
		[Address(RVA = "0x14EAA68", Offset = "0x14EAA68", VA = "0x14EAA68")]
		public int Bandwidth()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000168")]
	public class Statistic
	{
		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static long InCircleCount;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static long InCircleAdaptCount;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static long CounterClockwiseCount;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static long CounterClockwiseAdaptCount;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static long Orient3dCount;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static long HyperbolaCount;

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static long CircumcenterCount;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static long CircleTopCount;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static long RelocationCount;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double minEdge;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private double maxEdge;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double minAspect;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private double maxAspect;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private double minArea;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private double maxArea;

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private double minAngle;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private double maxAngle;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int[] angleTable;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int[] minAngles;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int[] maxAngles;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static readonly int[] plus1Mod3;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static readonly int[] minus1Mod3;

		[Token(Token = "0x170000E8")]
		public double ShortestEdge
		{
			[Token(Token = "0x6000871")]
			[Address(RVA = "0x14EAE58", Offset = "0x14EAE58", VA = "0x14EAE58")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170000E9")]
		public double LongestEdge
		{
			[Token(Token = "0x6000872")]
			[Address(RVA = "0x14EAE60", Offset = "0x14EAE60", VA = "0x14EAE60")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170000EA")]
		public double ShortestAltitude
		{
			[Token(Token = "0x6000873")]
			[Address(RVA = "0x14EAE68", Offset = "0x14EAE68", VA = "0x14EAE68")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170000EB")]
		public double LargestAspectRatio
		{
			[Token(Token = "0x6000874")]
			[Address(RVA = "0x14EAE70", Offset = "0x14EAE70", VA = "0x14EAE70")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170000EC")]
		public double SmallestArea
		{
			[Token(Token = "0x6000875")]
			[Address(RVA = "0x14EAE78", Offset = "0x14EAE78", VA = "0x14EAE78")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170000ED")]
		public double LargestArea
		{
			[Token(Token = "0x6000876")]
			[Address(RVA = "0x14EAE80", Offset = "0x14EAE80", VA = "0x14EAE80")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170000EE")]
		public double SmallestAngle
		{
			[Token(Token = "0x6000877")]
			[Address(RVA = "0x14EAE88", Offset = "0x14EAE88", VA = "0x14EAE88")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170000EF")]
		public double LargestAngle
		{
			[Token(Token = "0x6000878")]
			[Address(RVA = "0x14EAE90", Offset = "0x14EAE90", VA = "0x14EAE90")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170000F0")]
		public int[] AngleHistogram
		{
			[Token(Token = "0x6000879")]
			[Address(RVA = "0x14EAE98", Offset = "0x14EAE98", VA = "0x14EAE98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F1")]
		public int[] MinAngleHistogram
		{
			[Token(Token = "0x600087A")]
			[Address(RVA = "0x14EAEA0", Offset = "0x14EAEA0", VA = "0x14EAEA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F2")]
		public int[] MaxAngleHistogram
		{
			[Token(Token = "0x600087B")]
			[Address(RVA = "0x14EAEA8", Offset = "0x14EAEA8", VA = "0x14EAEA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600087C")]
		[Address(RVA = "0x14EAEB0", Offset = "0x14EAEB0", VA = "0x14EAEB0")]
		private void GetAspectHistogram(Mesh mesh)
		{
		}

		[Token(Token = "0x600087D")]
		[Address(RVA = "0x14EB854", Offset = "0x14EB854", VA = "0x14EB854")]
		public void Update(Mesh mesh, int sampleDegrees)
		{
		}

		[Token(Token = "0x600087E")]
		[Address(RVA = "0x14EC7EC", Offset = "0x14EC7EC", VA = "0x14EC7EC")]
		public Statistic()
		{
		}
	}
	[Token(Token = "0x2000169")]
	public class TriangleQuadTree
	{
		[Token(Token = "0x2000467")]
		private class QuadNode
		{
			[Token(Token = "0x4001D02")]
			private const int SW = 0;

			[Token(Token = "0x4001D03")]
			private const int SE = 1;

			[Token(Token = "0x4001D04")]
			private const int NW = 2;

			[Token(Token = "0x4001D05")]
			private const int NE = 3;

			[Token(Token = "0x4001D06")]
			private const double EPS = 1E-06;

			[Token(Token = "0x4001D07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static readonly byte[] BITVECTOR;

			[Token(Token = "0x4001D08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Rectangle bounds;

			[Token(Token = "0x4001D09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Point pivot;

			[Token(Token = "0x4001D0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private TriangleQuadTree tree;

			[Token(Token = "0x4001D0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private QuadNode[] regions;

			[Token(Token = "0x4001D0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<int> triangles;

			[Token(Token = "0x4001D0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private byte bitRegions;

			[Token(Token = "0x6001D97")]
			[Address(RVA = "0x14ED818", Offset = "0x14ED818", VA = "0x14ED818")]
			public QuadNode(Rectangle box, TriangleQuadTree tree)
			{
			}

			[Token(Token = "0x6001D98")]
			[Address(RVA = "0x14ECA00", Offset = "0x14ECA00", VA = "0x14ECA00")]
			public QuadNode(Rectangle box, TriangleQuadTree tree, bool init)
			{
			}

			[Token(Token = "0x6001D99")]
			[Address(RVA = "0x14ED5EC", Offset = "0x14ED5EC", VA = "0x14ED5EC")]
			public List<int> FindTriangles(Point searchPoint)
			{
				return null;
			}

			[Token(Token = "0x6001D9A")]
			[Address(RVA = "0x14ECBFC", Offset = "0x14ECBFC", VA = "0x14ECBFC")]
			public void CreateSubRegion(int currentDepth)
			{
			}

			[Token(Token = "0x6001D9B")]
			[Address(RVA = "0x14ED860", Offset = "0x14ED860", VA = "0x14ED860")]
			private void AddTriangleToRegion(Point[] triangle, int index)
			{
			}

			[Token(Token = "0x6001D9C")]
			[Address(RVA = "0x14EDAF4", Offset = "0x14EDAF4", VA = "0x14EDAF4")]
			private void FindTriangleIntersections(Point[] triangle, int index)
			{
			}

			[Token(Token = "0x6001D9D")]
			[Address(RVA = "0x14EDBF0", Offset = "0x14EDBF0", VA = "0x14EDBF0")]
			private void FindIntersectionsWithX(double dx, double dy, Point[] triangle, int index, int k)
			{
			}

			[Token(Token = "0x6001D9E")]
			[Address(RVA = "0x14EDE6C", Offset = "0x14EDE6C", VA = "0x14EDE6C")]
			private void FindIntersectionsWithY(double dx, double dy, Point[] triangle, int index, int k)
			{
			}

			[Token(Token = "0x6001D9F")]
			[Address(RVA = "0x14ED820", Offset = "0x14ED820", VA = "0x14ED820")]
			private int FindRegion(Point point)
			{
				return default(int);
			}

			[Token(Token = "0x6001DA0")]
			[Address(RVA = "0x14ED9B4", Offset = "0x14ED9B4", VA = "0x14ED9B4")]
			private void AddToRegion(int index, int region)
			{
			}
		}

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private QuadNode root;

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal ITriangle[] triangles;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int sizeBound;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal int maxDepth;

		[Token(Token = "0x6000880")]
		[Address(RVA = "0x14EC924", Offset = "0x14EC924", VA = "0x14EC924")]
		public TriangleQuadTree(Mesh mesh, int maxDepth = 10, int sizeBound = 10)
		{
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0x14ED2E4", Offset = "0x14ED2E4", VA = "0x14ED2E4")]
		public ITriangle Query(double x, double y)
		{
			return null;
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0x14ED648", Offset = "0x14ED648", VA = "0x14ED648")]
		internal static bool IsPointInTriangle(Point p, Point t0, Point t1, Point t2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0x14ED7EC", Offset = "0x14ED7EC", VA = "0x14ED7EC")]
		internal static double DotProduct(Point p, Point q)
		{
			return default(double);
		}
	}
	[Token(Token = "0x200016A")]
	public class VertexSorter
	{
		[Token(Token = "0x40009AC")]
		private const int RANDOM_SEED = 57113;

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private System.Random rand;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TriangleNet.Geometry.Vertex[] points;

		[Token(Token = "0x6000884")]
		[Address(RVA = "0x14EE168", Offset = "0x14EE168", VA = "0x14EE168")]
		private VertexSorter(TriangleNet.Geometry.Vertex[] points, int seed)
		{
		}

		[Token(Token = "0x6000885")]
		[Address(RVA = "0x14EE200", Offset = "0x14EE200", VA = "0x14EE200")]
		public static void Sort(TriangleNet.Geometry.Vertex[] array, int seed = 57113)
		{
		}

		[Token(Token = "0x6000886")]
		[Address(RVA = "0x14EE5D4", Offset = "0x14EE5D4", VA = "0x14EE5D4")]
		public static void Alternate(TriangleNet.Geometry.Vertex[] array, int length, int seed = 57113)
		{
		}

		[Token(Token = "0x6000887")]
		[Address(RVA = "0x14EE288", Offset = "0x14EE288", VA = "0x14EE288")]
		private void QuickSort(int left, int right)
		{
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0x14EE6A0", Offset = "0x14EE6A0", VA = "0x14EE6A0")]
		private void AlternateAxes(int left, int right, int axis)
		{
		}

		[Token(Token = "0x6000889")]
		[Address(RVA = "0x14EE75C", Offset = "0x14EE75C", VA = "0x14EE75C")]
		private void VertexMedianX(int left, int right, int median)
		{
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0x14EEA80", Offset = "0x14EEA80", VA = "0x14EEA80")]
		private void VertexMedianY(int left, int right, int median)
		{
		}
	}
}
namespace TriangleNet.Smoothing
{
	[Token(Token = "0x200016B")]
	public interface ISmoother
	{
		[Token(Token = "0x600088B")]
		void Smooth(IMesh mesh);

		[Token(Token = "0x600088C")]
		void Smooth(IMesh mesh, int limit);
	}
	[Token(Token = "0x200016C")]
	public class SimpleSmoother : ISmoother
	{
		[Serializable]
		[Token(Token = "0x2000468")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0CD0", Offset = "0xAC0CD0")]
		private sealed class <>c
		{
			[Token(Token = "0x4001D0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001D0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<IPredicates> <>9__5_0;

			[Token(Token = "0x4001D10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Converter<SubSegment, ISegment> <>9__11_0;

			[Token(Token = "0x6001DA3")]
			[Address(RVA = "0x1CF1C34", Offset = "0x1CF1C34", VA = "0x1CF1C34")]
			public <>c()
			{
			}

			[Token(Token = "0x6001DA4")]
			[Address(RVA = "0x1CF1C3C", Offset = "0x1CF1C3C", VA = "0x1CF1C3C")]
			internal IPredicates <.ctor>b__5_0()
			{
				return null;
			}

			[Token(Token = "0x6001DA5")]
			[Address(RVA = "0x1CF1C98", Offset = "0x1CF1C98", VA = "0x1CF1C98")]
			internal ISegment <Rebuild>b__11_0(SubSegment x)
			{
				return null;
			}
		}

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TrianglePool pool;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Configuration config;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IVoronoiFactory factory;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ConstraintOptions options;

		[Token(Token = "0x600088D")]
		[Address(RVA = "0x1CF1058", Offset = "0x1CF1058", VA = "0x1CF1058")]
		public SimpleSmoother()
		{
		}

		[Token(Token = "0x600088E")]
		[Address(RVA = "0x1CF11A8", Offset = "0x1CF11A8", VA = "0x1CF11A8")]
		public SimpleSmoother(IVoronoiFactory factory)
		{
		}

		[Token(Token = "0x600088F")]
		[Address(RVA = "0x1CF1378", Offset = "0x1CF1378", VA = "0x1CF1378")]
		public SimpleSmoother(IVoronoiFactory factory, Configuration config)
		{
		}

		[Token(Token = "0x6000890")]
		[Address(RVA = "0x1CF142C", Offset = "0x1CF142C", VA = "0x1CF142C", Slot = "4")]
		public void Smooth(IMesh mesh)
		{
		}

		[Token(Token = "0x6000891")]
		[Address(RVA = "0x1CF1434", Offset = "0x1CF1434", VA = "0x1CF1434", Slot = "5")]
		public void Smooth(IMesh mesh, int limit)
		{
		}

		[Token(Token = "0x6000892")]
		[Address(RVA = "0x1CF1684", Offset = "0x1CF1684", VA = "0x1CF1684")]
		private void Step(Mesh mesh, IVoronoiFactory factory, IPredicates predicates)
		{
		}

		[Token(Token = "0x6000893")]
		[Address(RVA = "0x1CF1AFC", Offset = "0x1CF1AFC", VA = "0x1CF1AFC")]
		private void Centroid(Face face, out double x, out double y)
		{
		}

		[Token(Token = "0x6000894")]
		[Address(RVA = "0x1CF180C", Offset = "0x1CF180C", VA = "0x1CF180C")]
		private Polygon Rebuild(Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0x1CF1BB0", Offset = "0x1CF1BB0", VA = "0x1CF1BB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACACFC", Offset = "0xACACFC")]
		private TrianglePool <.ctor>b__5_1()
		{
			return null;
		}
	}
	[Token(Token = "0x200016D")]
	internal class VoronoiFactory : IVoronoiFactory
	{
		[Token(Token = "0x2000469")]
		private class ObjectPool<T> where T : class
		{
			[Token(Token = "0x4001D11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int index;

			[Token(Token = "0x4001D12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int count;

			[Token(Token = "0x4001D13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T[] pool;

			[Token(Token = "0x170002CF")]
			public int Count
			{
				[Token(Token = "0x6001DA6")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170002D0")]
			public int Capacity
			{
				[Token(Token = "0x6001DA7")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001DA8")]
				set
				{
				}
			}

			[Token(Token = "0x6001DA9")]
			public ObjectPool(int capacity = 3)
			{
			}

			[Token(Token = "0x6001DAA")]
			public ObjectPool(T[] pool)
			{
			}

			[Token(Token = "0x6001DAB")]
			public bool TryGet(out T obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6001DAC")]
			public void Put(T obj)
			{
			}

			[Token(Token = "0x6001DAD")]
			public void Release()
			{
			}

			[Token(Token = "0x6001DAE")]
			private void Resize(int size)
			{
			}
		}

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ObjectPool<TriangleNet.Topology.DCEL.Vertex> vertices;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ObjectPool<HalfEdge> edges;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ObjectPool<Face> faces;

		[Token(Token = "0x6000896")]
		[Address(RVA = "0x1CF10B8", Offset = "0x1CF10B8", VA = "0x1CF10B8")]
		public VoronoiFactory()
		{
		}

		[Token(Token = "0x6000897")]
		[Address(RVA = "0x1CF1CA0", Offset = "0x1CF1CA0", VA = "0x1CF1CA0", Slot = "4")]
		public void Initialize(int vertexCount, int edgeCount, int faceCount)
		{
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0x1CF1EE0", Offset = "0x1CF1EE0", VA = "0x1CF1EE0", Slot = "5")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0x1CF1F68", Offset = "0x1CF1F68", VA = "0x1CF1F68", Slot = "6")]
		public TriangleNet.Topology.DCEL.Vertex CreateVertex(double x, double y)
		{
			return null;
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0x1CF204C", Offset = "0x1CF204C", VA = "0x1CF204C", Slot = "7")]
		public HalfEdge CreateHalfEdge(TriangleNet.Topology.DCEL.Vertex origin, Face face)
		{
			return null;
		}

		[Token(Token = "0x600089B")]
		[Address(RVA = "0x1CF2184", Offset = "0x1CF2184", VA = "0x1CF2184", Slot = "8")]
		public Face CreateFace(TriangleNet.Geometry.Vertex vertex)
		{
			return null;
		}
	}
}
namespace TriangleNet.Meshing
{
	[Token(Token = "0x200016E")]
	internal class ConstraintMesher
	{
		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPredicates predicates;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh mesh;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Behavior behavior;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TriangleLocator locator;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<TriangleNet.Topology.Triangle> viri;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ILog<LogItem> logger;

		[Token(Token = "0x600089C")]
		[Address(RVA = "0x1A4ED78", Offset = "0x1A4ED78", VA = "0x1A4ED78")]
		public ConstraintMesher(Mesh mesh, Configuration config)
		{
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0x1A4EEE0", Offset = "0x1A4EEE0", VA = "0x1A4EEE0")]
		public void Apply(IPolygon input, ConstraintOptions options)
		{
		}

		[Token(Token = "0x600089E")]
		[Address(RVA = "0x1A4FA00", Offset = "0x1A4FA00", VA = "0x1A4FA00")]
		private void CarveHoles()
		{
		}

		[Token(Token = "0x600089F")]
		[Address(RVA = "0x1A4F264", Offset = "0x1A4F264", VA = "0x1A4F264")]
		private void FormSkeleton(IPolygon input)
		{
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0x1A50168", Offset = "0x1A50168", VA = "0x1A50168")]
		private void InfectHull()
		{
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0x1A50318", Offset = "0x1A50318", VA = "0x1A50318")]
		private void Plague()
		{
		}

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0x1A50D38", Offset = "0x1A50D38", VA = "0x1A50D38")]
		private FindDirectionResult FindDirection(ref Otri searchtri, TriangleNet.Geometry.Vertex searchpoint)
		{
			return default(FindDirectionResult);
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0x1A5113C", Offset = "0x1A5113C", VA = "0x1A5113C")]
		private void SegmentIntersection(ref Otri splittri, ref Osub splitsubseg, TriangleNet.Geometry.Vertex endpoint2)
		{
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0x1A51520", Offset = "0x1A51520", VA = "0x1A51520")]
		private bool ScoutSegment(ref Otri searchtri, TriangleNet.Geometry.Vertex endpoint2, int newmark)
		{
			return default(bool);
		}

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0x1A516F0", Offset = "0x1A516F0", VA = "0x1A516F0")]
		private void DelaunayFixup(ref Otri fixuptri, bool leftside)
		{
		}

		[Token(Token = "0x60008A6")]
		[Address(RVA = "0x1A51A3C", Offset = "0x1A51A3C", VA = "0x1A51A3C")]
		private void ConstrainedEdge(ref Otri starttri, TriangleNet.Geometry.Vertex endpoint2, int newmark)
		{
		}

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0x1A509C8", Offset = "0x1A509C8", VA = "0x1A509C8")]
		private void InsertSegment(TriangleNet.Geometry.Vertex endpoint1, TriangleNet.Geometry.Vertex endpoint2, int newmark)
		{
		}

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0x1A50C5C", Offset = "0x1A50C5C", VA = "0x1A50C5C")]
		private void MarkHull()
		{
		}
	}
	[Token(Token = "0x200016F")]
	public class ConstraintOptions
	{
		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC43F4", Offset = "0xAC43F4")]
		private bool <UseRegions>k__BackingField;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC4404", Offset = "0xAC4404")]
		private bool <ConformingDelaunay>k__BackingField;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC4414", Offset = "0xAC4414")]
		private bool <Convex>k__BackingField;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC4424", Offset = "0xAC4424")]
		private int <SegmentSplitting>k__BackingField;

		[Token(Token = "0x170000F3")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xAD36CC", Offset = "0xAD36CC")]
		public bool UseRegions
		{
			[Token(Token = "0x60008A9")]
			[Address(RVA = "0x1A51D18", Offset = "0x1A51D18", VA = "0x1A51D18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACAD0C", Offset = "0xACAD0C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008AA")]
			[Address(RVA = "0x1A51D20", Offset = "0x1A51D20", VA = "0x1A51D20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACAD1C", Offset = "0xACAD1C")]
			set
			{
			}
		}

		[Token(Token = "0x170000F4")]
		public bool ConformingDelaunay
		{
			[Token(Token = "0x60008AB")]
			[Address(RVA = "0x1A51D2C", Offset = "0x1A51D2C", VA = "0x1A51D2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACAD2C", Offset = "0xACAD2C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008AC")]
			[Address(RVA = "0x1A51D34", Offset = "0x1A51D34", VA = "0x1A51D34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACAD3C", Offset = "0xACAD3C")]
			set
			{
			}
		}

		[Token(Token = "0x170000F5")]
		public bool Convex
		{
			[Token(Token = "0x60008AD")]
			[Address(RVA = "0x1A51D40", Offset = "0x1A51D40", VA = "0x1A51D40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACAD4C", Offset = "0xACAD4C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008AE")]
			[Address(RVA = "0x1A51D48", Offset = "0x1A51D48", VA = "0x1A51D48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACAD5C", Offset = "0xACAD5C")]
			set
			{
			}
		}

		[Token(Token = "0x170000F6")]
		public int SegmentSplitting
		{
			[Token(Token = "0x60008AF")]
			[Address(RVA = "0x1A51D54", Offset = "0x1A51D54", VA = "0x1A51D54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACAD6C", Offset = "0xACAD6C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60008B0")]
			[Address(RVA = "0x1A51D5C", Offset = "0x1A51D5C", VA = "0x1A51D5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACAD7C", Offset = "0xACAD7C")]
			set
			{
			}
		}

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0x1A51D64", Offset = "0x1A51D64", VA = "0x1A51D64")]
		public ConstraintOptions()
		{
		}
	}
	[Token(Token = "0x2000170")]
	public static class Converter
	{
		[Token(Token = "0x60008B2")]
		[Address(RVA = "0x1A51D6C", Offset = "0x1A51D6C", VA = "0x1A51D6C")]
		public static Mesh ToMesh(Polygon polygon, IList<ITriangle> triangles)
		{
			return null;
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0x1A51DD4", Offset = "0x1A51DD4", VA = "0x1A51DD4")]
		public static Mesh ToMesh(Polygon polygon, ITriangle[] triangles)
		{
			return null;
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x1A51FA0", Offset = "0x1A51FA0", VA = "0x1A51FA0")]
		private static List<Otri>[] SetNeighbors(Mesh mesh, ITriangle[] triangles)
		{
			return null;
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0x1A52A28", Offset = "0x1A52A28", VA = "0x1A52A28")]
		private static void SetSegments(Mesh mesh, Polygon polygon, List<Otri>[] vertexarray)
		{
		}

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0x1A533B8", Offset = "0x1A533B8", VA = "0x1A533B8")]
		public static DcelMesh ToDCEL(Mesh mesh)
		{
			return null;
		}
	}
	[Token(Token = "0x2000171")]
	public class GenericMesher
	{
		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Configuration config;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ITriangulator triangulator;

		[Token(Token = "0x60008B7")]
		[Address(RVA = "0x1A54940", Offset = "0x1A54940", VA = "0x1A54940")]
		public GenericMesher()
		{
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0x1A54A1C", Offset = "0x1A54A1C", VA = "0x1A54A1C")]
		public GenericMesher(ITriangulator triangulator)
		{
		}

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0x1A54A90", Offset = "0x1A54A90", VA = "0x1A54A90")]
		public GenericMesher(Configuration config)
		{
		}

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0x1A549CC", Offset = "0x1A549CC", VA = "0x1A549CC")]
		public GenericMesher(ITriangulator triangulator, Configuration config)
		{
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0x1A54B04", Offset = "0x1A54B04", VA = "0x1A54B04")]
		public IMesh Triangulate(IList<TriangleNet.Geometry.Vertex> points)
		{
			return null;
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0x1A54BCC", Offset = "0x1A54BCC", VA = "0x1A54BCC")]
		public IMesh Triangulate(IPolygon polygon)
		{
			return null;
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0x1A54DF8", Offset = "0x1A54DF8", VA = "0x1A54DF8")]
		public IMesh Triangulate(IPolygon polygon, ConstraintOptions options)
		{
			return null;
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0x1A54E00", Offset = "0x1A54E00", VA = "0x1A54E00")]
		public IMesh Triangulate(IPolygon polygon, QualityOptions quality)
		{
			return null;
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0x1A54BD8", Offset = "0x1A54BD8", VA = "0x1A54BD8")]
		public IMesh Triangulate(IPolygon polygon, ConstraintOptions options, QualityOptions quality)
		{
			return null;
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0x1A55184", Offset = "0x1A55184", VA = "0x1A55184")]
		public static IMesh StructuredMesh(double width, double height, int nx, int ny)
		{
			return null;
		}

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0x1A55280", Offset = "0x1A55280", VA = "0x1A55280")]
		public static IMesh StructuredMesh(Rectangle bounds, int nx, int ny)
		{
			return null;
		}
	}
	[Token(Token = "0x2000172")]
	public interface IConstraintMesher
	{
		[Token(Token = "0x60008C2")]
		IMesh Triangulate(IPolygon polygon);

		[Token(Token = "0x60008C3")]
		IMesh Triangulate(IPolygon polygon, ConstraintOptions options);
	}
	[Token(Token = "0x2000173")]
	public interface IMesh
	{
		[Token(Token = "0x170000F7")]
		ICollection<TriangleNet.Geometry.Vertex> Vertices
		{
			[Token(Token = "0x60008C4")]
			get;
		}

		[Token(Token = "0x170000F8")]
		IEnumerable<TriangleNet.Geometry.Edge> Edges
		{
			[Token(Token = "0x60008C5")]
			get;
		}

		[Token(Token = "0x170000F9")]
		ICollection<SubSegment> Segments
		{
			[Token(Token = "0x60008C6")]
			get;
		}

		[Token(Token = "0x170000FA")]
		ICollection<TriangleNet.Topology.Triangle> Triangles
		{
			[Token(Token = "0x60008C7")]
			get;
		}

		[Token(Token = "0x170000FB")]
		IList<Point> Holes
		{
			[Token(Token = "0x60008C8")]
			get;
		}

		[Token(Token = "0x170000FC")]
		Rectangle Bounds
		{
			[Token(Token = "0x60008C9")]
			get;
		}

		[Token(Token = "0x60008CA")]
		void Renumber();

		[Token(Token = "0x60008CB")]
		void Refine(QualityOptions quality, bool delaunay);
	}
	[Token(Token = "0x2000174")]
	public interface IQualityMesher
	{
		[Token(Token = "0x60008CC")]
		IMesh Triangulate(IPolygon polygon, QualityOptions quality);

		[Token(Token = "0x60008CD")]
		IMesh Triangulate(IPolygon polygon, ConstraintOptions options, QualityOptions quality);
	}
	[Token(Token = "0x2000175")]
	public interface ITriangulator
	{
		[Token(Token = "0x60008CE")]
		IMesh Triangulate(IList<TriangleNet.Geometry.Vertex> points, Configuration config);
	}
	[Token(Token = "0x2000176")]
	internal class QualityMesher
	{
		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPredicates predicates;

		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Queue<BadSubseg> badsubsegs;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BadTriQueue queue;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Mesh mesh;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Behavior behavior;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private NewLocation newLocation;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ILog<LogItem> logger;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TriangleNet.Topology.Triangle newvertex_tri;

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0x1A54E0C", Offset = "0x1A54E0C", VA = "0x1A54E0C")]
		public QualityMesher(Mesh mesh, Configuration config)
		{
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0x1A54FF0", Offset = "0x1A54FF0", VA = "0x1A54FF0")]
		public void Apply(QualityOptions quality, bool delaunay = false)
		{
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0x1A57288", Offset = "0x1A57288", VA = "0x1A57288")]
		public void AddBadSubseg(BadSubseg badseg)
		{
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0x1A572F0", Offset = "0x1A572F0", VA = "0x1A572F0")]
		public int CheckSeg4Encroach(ref Osub testsubseg)
		{
			return default(int);
		}

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0x1A57608", Offset = "0x1A57608", VA = "0x1A57608")]
		public void TestTriangle(ref Otri testtri)
		{
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0x1A57BB8", Offset = "0x1A57BB8", VA = "0x1A57BB8")]
		private void TallyEncs()
		{
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0x1A57CD4", Offset = "0x1A57CD4", VA = "0x1A57CD4")]
		private void SplitEncSegs(bool triflaws)
		{
		}

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0x1A584E4", Offset = "0x1A584E4", VA = "0x1A584E4")]
		private void TallyFaces()
		{
		}

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0x1A58700", Offset = "0x1A58700", VA = "0x1A58700")]
		private void SplitTriangle(BadTriangle badtri)
		{
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0x1A57038", Offset = "0x1A57038", VA = "0x1A57038")]
		private void EnforceQuality()
		{
		}
	}
	[Token(Token = "0x2000177")]
	public class QualityOptions
	{
		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC4434", Offset = "0xAC4434")]
		private double <MaximumAngle>k__BackingField;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC4444", Offset = "0xAC4444")]
		private double <MinimumAngle>k__BackingField;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC4454", Offset = "0xAC4454")]
		private double <MaximumArea>k__BackingField;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC4464", Offset = "0xAC4464")]
		private Func<ITriangle, double, bool> <UserTest>k__BackingField;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC4474", Offset = "0xAC4474")]
		private bool <VariableArea>k__BackingField;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC4484", Offset = "0xAC4484")]
		private int <SteinerPoints>k__BackingField;

		[Token(Token = "0x170000FD")]
		public double MaximumAngle
		{
			[Token(Token = "0x60008D9")]
			[Address(RVA = "0x1A58D10", Offset = "0x1A58D10", VA = "0x1A58D10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACAD8C", Offset = "0xACAD8C")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60008DA")]
			[Address(RVA = "0x1A58D18", Offset = "0x1A58D18", VA = "0x1A58D18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACAD9C", Offset = "0xACAD9C")]
			set
			{
			}
		}

		[Token(Token = "0x170000FE")]
		public double MinimumAngle
		{
			[Token(Token = "0x60008DB")]
			[Address(RVA = "0x1A58D20", Offset = "0x1A58D20", VA = "0x1A58D20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACADAC", Offset = "0xACADAC")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60008DC")]
			[Address(RVA = "0x1A58D28", Offset = "0x1A58D28", VA = "0x1A58D28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACADBC", Offset = "0xACADBC")]
			set
			{
			}
		}

		[Token(Token = "0x170000FF")]
		public double MaximumArea
		{
			[Token(Token = "0x60008DD")]
			[Address(RVA = "0x1A58D30", Offset = "0x1A58D30", VA = "0x1A58D30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACADCC", Offset = "0xACADCC")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60008DE")]
			[Address(RVA = "0x1A58D38", Offset = "0x1A58D38", VA = "0x1A58D38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACADDC", Offset = "0xACADDC")]
			set
			{
			}
		}

		[Token(Token = "0x17000100")]
		public Func<ITriangle, double, bool> UserTest
		{
			[Token(Token = "0x60008DF")]
			[Address(RVA = "0x1A58D40", Offset = "0x1A58D40", VA = "0x1A58D40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACADEC", Offset = "0xACADEC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008E0")]
			[Address(RVA = "0x1A58D48", Offset = "0x1A58D48", VA = "0x1A58D48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACADFC", Offset = "0xACADFC")]
			set
			{
			}
		}

		[Token(Token = "0x17000101")]
		public bool VariableArea
		{
			[Token(Token = "0x60008E1")]
			[Address(RVA = "0x1A58D50", Offset = "0x1A58D50", VA = "0x1A58D50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACAE0C", Offset = "0xACAE0C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008E2")]
			[Address(RVA = "0x1A58D58", Offset = "0x1A58D58", VA = "0x1A58D58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACAE1C", Offset = "0xACAE1C")]
			set
			{
			}
		}

		[Token(Token = "0x17000102")]
		public int SteinerPoints
		{
			[Token(Token = "0x60008E3")]
			[Address(RVA = "0x1A58D64", Offset = "0x1A58D64", VA = "0x1A58D64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACAE2C", Offset = "0xACAE2C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60008E4")]
			[Address(RVA = "0x1A58D6C", Offset = "0x1A58D6C", VA = "0x1A58D6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACAE3C", Offset = "0xACAE3C")]
			set
			{
			}
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0x1A58D74", Offset = "0x1A58D74", VA = "0x1A58D74")]
		public QualityOptions()
		{
		}
	}
}
namespace TriangleNet.Meshing.Iterators
{
	[Token(Token = "0x2000178")]
	public class EdgeIterator : IEnumerator<TriangleNet.Geometry.Edge>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IEnumerator<TriangleNet.Topology.Triangle> triangles;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Otri tri;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Otri neighbor;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Osub sub;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TriangleNet.Geometry.Edge current;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private TriangleNet.Geometry.Vertex p1;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private TriangleNet.Geometry.Vertex p2;

		[Token(Token = "0x17000103")]
		public TriangleNet.Geometry.Edge Current
		{
			[Token(Token = "0x60008E7")]
			[Address(RVA = "0x1A55AB0", Offset = "0x1A55AB0", VA = "0x1A55AB0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000104")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008E9")]
			[Address(RVA = "0x1A55B68", Offset = "0x1A55B68", VA = "0x1A55B68", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0x1A55934", Offset = "0x1A55934", VA = "0x1A55934")]
		public EdgeIterator(Mesh mesh)
		{
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0x1A55AB8", Offset = "0x1A55AB8", VA = "0x1A55AB8", Slot = "5")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0x1A55B70", Offset = "0x1A55B70", VA = "0x1A55B70", Slot = "6")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0x1A55E24", Offset = "0x1A55E24", VA = "0x1A55E24", Slot = "8")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x2000179")]
	public class RegionIterator
	{
		[Token(Token = "0x200046A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0CE0", Offset = "0xAC0CE0")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001D14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TriangleNet.Topology.Triangle triangle;

			[Token(Token = "0x6001DAF")]
			[Address(RVA = "0x1A55ED8", Offset = "0x1A55ED8", VA = "0x1A55ED8")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6001DB0")]
			[Address(RVA = "0x1A563B0", Offset = "0x1A563B0", VA = "0x1A563B0")]
			internal void <Process>b__0(TriangleNet.Topology.Triangle tri)
			{
			}
		}

		[Token(Token = "0x200046B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0CF0", Offset = "0xAC0CF0")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4001D15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int boundary;

			[Token(Token = "0x6001DB1")]
			[Address(RVA = "0x1A560D8", Offset = "0x1A560D8", VA = "0x1A560D8")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6001DB2")]
			[Address(RVA = "0x1A563E8", Offset = "0x1A563E8", VA = "0x1A563E8")]
			internal bool <Process>b__1(SubSegment seg)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x200046C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0D00", Offset = "0xAC0D00")]
		private sealed class <>c
		{
			[Token(Token = "0x4001D16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001D17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<SubSegment, bool> <>9__3_0;

			[Token(Token = "0x6001DB4")]
			[Address(RVA = "0x1A56388", Offset = "0x1A56388", VA = "0x1A56388")]
			public <>c()
			{
			}

			[Token(Token = "0x6001DB5")]
			[Address(RVA = "0x1A56390", Offset = "0x1A56390", VA = "0x1A56390")]
			internal bool <Process>b__3_0(SubSegment seg)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<TriangleNet.Topology.Triangle> region;

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0x1A50874", Offset = "0x1A50874", VA = "0x1A50874")]
		public RegionIterator(Mesh mesh)
		{
		}

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0x1A508F0", Offset = "0x1A508F0", VA = "0x1A508F0")]
		public void Process(TriangleNet.Topology.Triangle triangle, int boundary = 0)
		{
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0x1A55EE0", Offset = "0x1A55EE0", VA = "0x1A55EE0")]
		public void Process(TriangleNet.Topology.Triangle triangle, Action<TriangleNet.Topology.Triangle> action, int boundary = 0)
		{
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0x1A560E0", Offset = "0x1A560E0", VA = "0x1A560E0")]
		private void ProcessRegion(Action<TriangleNet.Topology.Triangle> action, Func<SubSegment, bool> protector)
		{
		}
	}
	[Token(Token = "0x200017A")]
	public class VertexCirculator
	{
		[Token(Token = "0x200046D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0D10", Offset = "0xAC0D10")]
		private sealed class <EnumerateVertices>d__2 : IEnumerable<TriangleNet.Geometry.Vertex>, IEnumerable, IEnumerator<TriangleNet.Geometry.Vertex>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private TriangleNet.Geometry.Vertex <>2__current;

			[Token(Token = "0x4001D1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001D1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VertexCirculator <>4__this;

			[Token(Token = "0x4001D1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TriangleNet.Geometry.Vertex vertex;

			[Token(Token = "0x4001D1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public TriangleNet.Geometry.Vertex <>3__vertex;

			[Token(Token = "0x4001D1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<Otri>.Enumerator <>7__wrap1;

			[Token(Token = "0x170002D1")]
			private TriangleNet.Geometry.Vertex System.Collections.Generic.IEnumerator<TriangleNet.Geometry.Vertex>.Current
			{
				[Token(Token = "0x6001DBA")]
				[Address(RVA = "0x1A56D2C", Offset = "0x1A56D2C", VA = "0x1A56D2C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DBC")]
				[Address(RVA = "0x1A56D94", Offset = "0x1A56D94", VA = "0x1A56D94", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DB6")]
			[Address(RVA = "0x1A56550", Offset = "0x1A56550", VA = "0x1A56550")]
			[DebuggerHidden]
			public <EnumerateVertices>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6001DB7")]
			[Address(RVA = "0x1A56B30", Offset = "0x1A56B30", VA = "0x1A56B30", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DB8")]
			[Address(RVA = "0x1A56BA4", Offset = "0x1A56BA4", VA = "0x1A56BA4", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DB9")]
			[Address(RVA = "0x1A56B4C", Offset = "0x1A56B4C", VA = "0x1A56B4C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001DBB")]
			[Address(RVA = "0x1A56D34", Offset = "0x1A56D34", VA = "0x1A56D34", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001DBD")]
			[Address(RVA = "0x1A56D9C", Offset = "0x1A56D9C", VA = "0x1A56D9C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<TriangleNet.Geometry.Vertex> System.Collections.Generic.IEnumerable<TriangleNet.Geometry.Vertex>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001DBE")]
			[Address(RVA = "0x1A56E60", Offset = "0x1A56E60", VA = "0x1A56E60", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x200046E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0D20", Offset = "0xAC0D20")]
		private sealed class <EnumerateTriangles>d__3 : IEnumerable<ITriangle>, IEnumerable, IEnumerator<ITriangle>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private ITriangle <>2__current;

			[Token(Token = "0x4001D21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001D22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VertexCirculator <>4__this;

			[Token(Token = "0x4001D23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TriangleNet.Geometry.Vertex vertex;

			[Token(Token = "0x4001D24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public TriangleNet.Geometry.Vertex <>3__vertex;

			[Token(Token = "0x4001D25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<Otri>.Enumerator <>7__wrap1;

			[Token(Token = "0x170002D3")]
			private ITriangle System.Collections.Generic.IEnumerator<TriangleNet.Geometry.ITriangle>.Current
			{
				[Token(Token = "0x6001DC3")]
				[Address(RVA = "0x1A569F8", Offset = "0x1A569F8", VA = "0x1A569F8", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DC5")]
				[Address(RVA = "0x1A56A60", Offset = "0x1A56A60", VA = "0x1A56A60", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DBF")]
			[Address(RVA = "0x1A56630", Offset = "0x1A56630", VA = "0x1A56630")]
			[DebuggerHidden]
			public <EnumerateTriangles>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001DC0")]
			[Address(RVA = "0x1A56814", Offset = "0x1A56814", VA = "0x1A56814", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DC1")]
			[Address(RVA = "0x1A56888", Offset = "0x1A56888", VA = "0x1A56888", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DC2")]
			[Address(RVA = "0x1A56830", Offset = "0x1A56830", VA = "0x1A56830")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001DC4")]
			[Address(RVA = "0x1A56A00", Offset = "0x1A56A00", VA = "0x1A56A00", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001DC6")]
			[Address(RVA = "0x1A56A68", Offset = "0x1A56A68", VA = "0x1A56A68", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<ITriangle> System.Collections.Generic.IEnumerable<TriangleNet.Geometry.ITriangle>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001DC7")]
			[Address(RVA = "0x1A56B2C", Offset = "0x1A56B2C", VA = "0x1A56B2C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Otri> cache;

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0x1A5640C", Offset = "0x1A5640C", VA = "0x1A5640C")]
		public VertexCirculator(Mesh mesh)
		{
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0x1A564A8", Offset = "0x1A564A8", VA = "0x1A564A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACAE4C", Offset = "0xACAE4C")]
		public IEnumerable<TriangleNet.Geometry.Vertex> EnumerateVertices(TriangleNet.Geometry.Vertex vertex)
		{
			return null;
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0x1A56588", Offset = "0x1A56588", VA = "0x1A56588")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACAEB0", Offset = "0xACAEB0")]
		public IEnumerable<ITriangle> EnumerateTriangles(TriangleNet.Geometry.Vertex vertex)
		{
			return null;
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0x1A56668", Offset = "0x1A56668", VA = "0x1A56668")]
		private void BuildCache(TriangleNet.Geometry.Vertex vertex, bool vertices)
		{
		}
	}
}
namespace TriangleNet.Meshing.Data
{
	[Token(Token = "0x200017B")]
	internal class BadSubseg
	{
		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Osub subseg;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TriangleNet.Geometry.Vertex org;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TriangleNet.Geometry.Vertex dest;

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0x1A542FC", Offset = "0x1A542FC", VA = "0x1A542FC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0x1A54318", Offset = "0x1A54318", VA = "0x1A54318", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0x1A543A4", Offset = "0x1A543A4", VA = "0x1A543A4")]
		public BadSubseg()
		{
		}
	}
	[Token(Token = "0x200017C")]
	internal class BadTriQueue
	{
		[Token(Token = "0x40009DC")]
		private const double SQRT2 = 1.4142135623730951;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private BadTriangle[] queuefront;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BadTriangle[] queuetail;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int[] nextnonemptyq;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int firstnonemptyq;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int count;

		[Token(Token = "0x17000105")]
		public int Count
		{
			[Token(Token = "0x60008F7")]
			[Address(RVA = "0x1A543AC", Offset = "0x1A543AC", VA = "0x1A543AC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0x1A543B4", Offset = "0x1A543B4", VA = "0x1A543B4")]
		public BadTriQueue()
		{
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0x1A5446C", Offset = "0x1A5446C", VA = "0x1A5446C")]
		public void Enqueue(BadTriangle badtri)
		{
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0x1A546C4", Offset = "0x1A546C4", VA = "0x1A546C4")]
		public void Enqueue(ref Otri enqtri, double minedge, TriangleNet.Geometry.Vertex apex, TriangleNet.Geometry.Vertex org, TriangleNet.Geometry.Vertex dest)
		{
		}

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0x1A547AC", Offset = "0x1A547AC", VA = "0x1A547AC")]
		public BadTriangle Dequeue()
		{
			return null;
		}
	}
	[Token(Token = "0x200017D")]
	internal class BadTriangle
	{
		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Otri poortri;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public double key;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TriangleNet.Geometry.Vertex org;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TriangleNet.Geometry.Vertex dest;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TriangleNet.Geometry.Vertex apex;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BadTriangle next;

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0x1A548B4", Offset = "0x1A548B4", VA = "0x1A548B4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0x1A547A4", Offset = "0x1A547A4", VA = "0x1A547A4")]
		public BadTriangle()
		{
		}
	}
}
namespace TriangleNet.Meshing.Algorithm
{
	[Token(Token = "0x200017E")]
	public class Dwyer : ITriangulator
	{
		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPredicates predicates;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool UseDwyer;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TriangleNet.Geometry.Vertex[] sortarray;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Mesh mesh;

		[Token(Token = "0x60008FE")]
		[Address(RVA = "0x162FD34", Offset = "0x162FD34", VA = "0x162FD34", Slot = "4")]
		public IMesh Triangulate(IList<TriangleNet.Geometry.Vertex> points, Configuration config)
		{
			return null;
		}

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0x1630EC0", Offset = "0x1630EC0", VA = "0x1630EC0")]
		private void MergeHulls(ref Otri farleft, ref Otri innerleft, ref Otri innerright, ref Otri farright, int axis)
		{
		}

		[Token(Token = "0x6000900")]
		[Address(RVA = "0x1630474", Offset = "0x1630474", VA = "0x1630474")]
		private void DivconqRecurse(int left, int right, int axis, ref Otri farleft, ref Otri farright)
		{
		}

		[Token(Token = "0x6000901")]
		[Address(RVA = "0x1630D3C", Offset = "0x1630D3C", VA = "0x1630D3C")]
		private int RemoveGhosts(ref Otri startghost)
		{
			return default(int);
		}

		[Token(Token = "0x6000902")]
		[Address(RVA = "0x1631D08", Offset = "0x1631D08", VA = "0x1631D08")]
		public Dwyer()
		{
		}
	}
	[Token(Token = "0x200017F")]
	public class Incremental : ITriangulator
	{
		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Mesh mesh;

		[Token(Token = "0x6000903")]
		[Address(RVA = "0x1631D18", Offset = "0x1631D18", VA = "0x1631D18", Slot = "4")]
		public IMesh Triangulate(IList<TriangleNet.Geometry.Vertex> points, Configuration config)
		{
			return null;
		}

		[Token(Token = "0x6000904")]
		[Address(RVA = "0x16320D4", Offset = "0x16320D4", VA = "0x16320D4")]
		private void GetBoundingBox()
		{
		}

		[Token(Token = "0x6000905")]
		[Address(RVA = "0x163230C", Offset = "0x163230C", VA = "0x163230C")]
		private int RemoveBox()
		{
			return default(int);
		}

		[Token(Token = "0x6000906")]
		[Address(RVA = "0x163255C", Offset = "0x163255C", VA = "0x163255C")]
		public Incremental()
		{
		}
	}
	[Token(Token = "0x2000180")]
	public class SweepLine : ITriangulator
	{
		[Token(Token = "0x200046F")]
		private class SweepEvent
		{
			[Token(Token = "0x4001D26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public double xkey;

			[Token(Token = "0x4001D27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public double ykey;

			[Token(Token = "0x4001D28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TriangleNet.Geometry.Vertex vertexEvent;

			[Token(Token = "0x4001D29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Otri otriEvent;

			[Token(Token = "0x4001D2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int heapposition;

			[Token(Token = "0x6001DC8")]
			[Address(RVA = "0x1A4ED3C", Offset = "0x1A4ED3C", VA = "0x1A4ED3C")]
			public SweepEvent()
			{
			}
		}

		[Token(Token = "0x2000470")]
		private class SweepEventVertex : TriangleNet.Geometry.Vertex
		{
			[Token(Token = "0x4001D2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public SweepEvent evt;

			[Token(Token = "0x6001DC9")]
			[Address(RVA = "0x1A4ED44", Offset = "0x1A4ED44", VA = "0x1A4ED44")]
			public SweepEventVertex(SweepEvent e)
			{
			}
		}

		[Token(Token = "0x2000471")]
		private class SplayNode
		{
			[Token(Token = "0x4001D2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Otri keyedge;

			[Token(Token = "0x4001D2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TriangleNet.Geometry.Vertex keydest;

			[Token(Token = "0x4001D2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SplayNode lchild;

			[Token(Token = "0x4001D2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SplayNode rchild;

			[Token(Token = "0x6001DCA")]
			[Address(RVA = "0x1A4ED34", Offset = "0x1A4ED34", VA = "0x1A4ED34")]
			public SplayNode()
			{
			}
		}

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int randomseed;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int SAMPLERATE;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPredicates predicates;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh mesh;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double xminextreme;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<SplayNode> splaynodes;

		[Token(Token = "0x6000907")]
		[Address(RVA = "0x1632564", Offset = "0x1632564", VA = "0x1632564")]
		private static int randomnation(int choices)
		{
			return default(int);
		}

		[Token(Token = "0x6000908")]
		[Address(RVA = "0x163260C", Offset = "0x163260C", VA = "0x163260C", Slot = "4")]
		public IMesh Triangulate(IList<TriangleNet.Geometry.Vertex> points, Configuration config)
		{
			return null;
		}

		[Token(Token = "0x6000909")]
		[Address(RVA = "0x1633E40", Offset = "0x1633E40", VA = "0x1633E40")]
		private void HeapInsert(SweepEvent[] heap, int heapsize, SweepEvent newevent)
		{
		}

		[Token(Token = "0x600090A")]
		[Address(RVA = "0x1634104", Offset = "0x1634104", VA = "0x1634104")]
		private void Heapify(SweepEvent[] heap, int heapsize, int eventnum)
		{
		}

		[Token(Token = "0x600090B")]
		[Address(RVA = "0x16336A8", Offset = "0x16336A8", VA = "0x16336A8")]
		private void HeapDelete(SweepEvent[] heap, int heapsize, int eventnum)
		{
		}

		[Token(Token = "0x600090C")]
		[Address(RVA = "0x16334E8", Offset = "0x16334E8", VA = "0x16334E8")]
		private void CreateHeap(out SweepEvent[] eventheap, int size)
		{
		}

		[Token(Token = "0x600090D")]
		[Address(RVA = "0x16342E8", Offset = "0x16342E8", VA = "0x16342E8")]
		private SplayNode Splay(SplayNode splaytree, Point searchpoint, ref Otri searchtri)
		{
			return null;
		}

		[Token(Token = "0x600090E")]
		[Address(RVA = "0x1633B88", Offset = "0x1633B88", VA = "0x1633B88")]
		private SplayNode SplayInsert(SplayNode splayroot, Otri newkey, Point searchpoint)
		{
			return null;
		}

		[Token(Token = "0x600090F")]
		[Address(RVA = "0x1633AD4", Offset = "0x1633AD4", VA = "0x1633AD4")]
		private SplayNode FrontLocate(SplayNode splayroot, Otri bottommost, TriangleNet.Geometry.Vertex searchvertex, ref Otri searchtri, ref bool farright)
		{
			return null;
		}

		[Token(Token = "0x6000910")]
		[Address(RVA = "0x163390C", Offset = "0x163390C", VA = "0x163390C")]
		private SplayNode CircleTopInsert(SplayNode splayroot, Otri newkey, TriangleNet.Geometry.Vertex pa, TriangleNet.Geometry.Vertex pb, TriangleNet.Geometry.Vertex pc, double topy)
		{
			return null;
		}

		[Token(Token = "0x6000911")]
		[Address(RVA = "0x1634670", Offset = "0x1634670", VA = "0x1634670")]
		private bool RightOfHyperbola(ref Otri fronttri, Point newsite)
		{
			return default(bool);
		}

		[Token(Token = "0x6000912")]
		[Address(RVA = "0x1633CE8", Offset = "0x1633CE8", VA = "0x1633CE8")]
		private double CircleTop(TriangleNet.Geometry.Vertex pa, TriangleNet.Geometry.Vertex pb, TriangleNet.Geometry.Vertex pc, double ccwabc)
		{
			return default(double);
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0x1633820", Offset = "0x1633820", VA = "0x1633820")]
		private void Check4DeadEvent(ref Otri checktri, SweepEvent[] eventheap, ref int heapsize)
		{
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0x1633F90", Offset = "0x1633F90", VA = "0x1633F90")]
		private int RemoveGhosts(ref Otri startghost)
		{
			return default(int);
		}

		[Token(Token = "0x6000915")]
		[Address(RVA = "0x16347B8", Offset = "0x16347B8", VA = "0x16347B8")]
		public SweepLine()
		{
		}
	}
}
namespace TriangleNet.Logging
{
	[Token(Token = "0x2000181")]
	public enum LogLevel
	{
		[Token(Token = "0x40009F4")]
		Info,
		[Token(Token = "0x40009F5")]
		Warning,
		[Token(Token = "0x40009F6")]
		Error
	}
	[Token(Token = "0x2000182")]
	public interface ILog<T> where T : ILogItem
	{
		[Token(Token = "0x17000106")]
		IList<T> Data
		{
			[Token(Token = "0x600091C")]
			get;
		}

		[Token(Token = "0x17000107")]
		LogLevel Level
		{
			[Token(Token = "0x600091D")]
			get;
		}

		[Token(Token = "0x6000917")]
		void Add(T item);

		[Token(Token = "0x6000918")]
		void Clear();

		[Token(Token = "0x6000919")]
		void Info(string message);

		[Token(Token = "0x600091A")]
		void Error(string message, string info);

		[Token(Token = "0x600091B")]
		void Warning(string message, string info);
	}
	[Token(Token = "0x2000183")]
	public interface ILogItem
	{
		[Token(Token = "0x17000108")]
		DateTime Time
		{
			[Token(Token = "0x600091E")]
			get;
		}

		[Token(Token = "0x17000109")]
		LogLevel Level
		{
			[Token(Token = "0x600091F")]
			get;
		}

		[Token(Token = "0x1700010A")]
		string Message
		{
			[Token(Token = "0x6000920")]
			get;
		}

		[Token(Token = "0x1700010B")]
		string Info
		{
			[Token(Token = "0x6000921")]
			get;
		}
	}
	[Token(Token = "0x2000184")]
	public class LogItem : ILogItem
	{
		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private DateTime time;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LogLevel level;

		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string message;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string info;

		[Token(Token = "0x1700010C")]
		public DateTime Time
		{
			[Token(Token = "0x6000922")]
			[Address(RVA = "0x162A9B4", Offset = "0x162A9B4", VA = "0x162A9B4", Slot = "4")]
			get
			{
				return default(DateTime);
			}
		}

		[Token(Token = "0x1700010D")]
		public LogLevel Level
		{
			[Token(Token = "0x6000923")]
			[Address(RVA = "0x162A9BC", Offset = "0x162A9BC", VA = "0x162A9BC", Slot = "5")]
			get
			{
				return default(LogLevel);
			}
		}

		[Token(Token = "0x1700010E")]
		public string Message
		{
			[Token(Token = "0x6000924")]
			[Address(RVA = "0x162A9C4", Offset = "0x162A9C4", VA = "0x162A9C4", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010F")]
		public string Info
		{
			[Token(Token = "0x6000925")]
			[Address(RVA = "0x162A9CC", Offset = "0x162A9CC", VA = "0x162A9CC", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000926")]
		[Address(RVA = "0x162A760", Offset = "0x162A760", VA = "0x162A760")]
		public LogItem(LogLevel level, string message)
		{
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0x162A85C", Offset = "0x162A85C", VA = "0x162A85C")]
		public LogItem(LogLevel level, string message, string info)
		{
		}
	}
}
namespace TriangleNet.IO
{
	[Token(Token = "0x2000185")]
	internal class DebugWriter
	{
		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NumberFormatInfo nfi;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int iteration;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string session;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private StreamWriter stream;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string tmpFile;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int[] vertices;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int triangles;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly DebugWriter instance;

		[Token(Token = "0x17000110")]
		public static DebugWriter Session
		{
			[Token(Token = "0x600092A")]
			[Address(RVA = "0x16204D4", Offset = "0x16204D4", VA = "0x16204D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0x162040C", Offset = "0x162040C", VA = "0x162040C")]
		static DebugWriter()
		{
		}

		[Token(Token = "0x6000929")]
		[Address(RVA = "0x16204CC", Offset = "0x16204CC", VA = "0x16204CC")]
		private DebugWriter()
		{
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0x162053C", Offset = "0x162053C", VA = "0x162053C")]
		public void Start(string session)
		{
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0x162064C", Offset = "0x162064C", VA = "0x162064C")]
		public void Write(Mesh mesh, bool skip = false)
		{
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0x16214F0", Offset = "0x16214F0", VA = "0x16214F0")]
		public void Finish()
		{
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0x1621550", Offset = "0x1621550", VA = "0x1621550")]
		private void Finish(string path)
		{
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0x1621868", Offset = "0x1621868", VA = "0x1621868")]
		private void WriteGeometry(IPolygon geometry)
		{
		}

		[Token(Token = "0x6000930")]
		[Address(RVA = "0x1620728", Offset = "0x1620728", VA = "0x1620728")]
		private void WriteMesh(Mesh mesh, bool skip)
		{
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0x1621904", Offset = "0x1621904", VA = "0x1621904")]
		private bool VerticesChanged(Mesh mesh)
		{
			return default(bool);
		}

		[Token(Token = "0x6000932")]
		[Address(RVA = "0x1621CB0", Offset = "0x1621CB0", VA = "0x1621CB0")]
		private void HashVertices(Mesh mesh)
		{
		}
	}
	[Token(Token = "0x2000186")]
	public static class FileProcessor
	{
		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<IFileFormat> formats;

		[Token(Token = "0x6000933")]
		[Address(RVA = "0x16220EC", Offset = "0x16220EC", VA = "0x16220EC")]
		static FileProcessor()
		{
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0x16221B4", Offset = "0x16221B4", VA = "0x16221B4")]
		public static void Add(IFileFormat format)
		{
		}

		[Token(Token = "0x6000935")]
		[Address(RVA = "0x1622238", Offset = "0x1622238", VA = "0x1622238")]
		public static bool IsSupported(string file)
		{
			return default(bool);
		}

		[Token(Token = "0x6000936")]
		[Address(RVA = "0x16223D4", Offset = "0x16223D4", VA = "0x16223D4")]
		public static IPolygon Read(string filename)
		{
			return null;
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0x1622670", Offset = "0x1622670", VA = "0x1622670")]
		public static void Write(IPolygon polygon, string filename)
		{
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0x1622910", Offset = "0x1622910", VA = "0x1622910")]
		public static IMesh Import(string filename)
		{
			return null;
		}

		[Token(Token = "0x6000939")]
		[Address(RVA = "0x1622BAC", Offset = "0x1622BAC", VA = "0x1622BAC")]
		public static void Write(IMesh mesh, string filename)
		{
		}
	}
	[Token(Token = "0x2000187")]
	public interface IFileFormat
	{
		[Token(Token = "0x600093A")]
		bool IsSupported(string file);
	}
	[Token(Token = "0x2000188")]
	public interface IMeshFormat : IFileFormat
	{
		[Token(Token = "0x600093B")]
		IMesh Import(string filename);

		[Token(Token = "0x600093C")]
		void Write(IMesh mesh, string filename);

		[Token(Token = "0x600093D")]
		void Write(IMesh mesh, Stream stream);
	}
	[Token(Token = "0x2000189")]
	public interface IPolygonFormat : IFileFormat
	{
		[Token(Token = "0x600093E")]
		IPolygon Read(string filename);

		[Token(Token = "0x600093F")]
		void Write(IPolygon polygon, string filename);

		[Token(Token = "0x6000940")]
		void Write(IPolygon polygon, Stream stream);
	}
	[Token(Token = "0x200018A")]
	public class InputTriangle : ITriangle
	{
		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int[] vertices;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int label;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal double area;

		[Token(Token = "0x17000111")]
		public int ID
		{
			[Token(Token = "0x6000942")]
			[Address(RVA = "0x1622F0C", Offset = "0x1622F0C", VA = "0x1622F0C", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000943")]
			[Address(RVA = "0x1622F14", Offset = "0x1622F14", VA = "0x1622F14", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000112")]
		public int Label
		{
			[Token(Token = "0x6000944")]
			[Address(RVA = "0x1622F18", Offset = "0x1622F18", VA = "0x1622F18", Slot = "6")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000945")]
			[Address(RVA = "0x1622F20", Offset = "0x1622F20", VA = "0x1622F20", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000113")]
		public double Area
		{
			[Token(Token = "0x6000946")]
			[Address(RVA = "0x1622F28", Offset = "0x1622F28", VA = "0x1622F28", Slot = "8")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000947")]
			[Address(RVA = "0x1622F30", Offset = "0x1622F30", VA = "0x1622F30", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x6000941")]
		[Address(RVA = "0x1622E4C", Offset = "0x1622E4C", VA = "0x1622E4C")]
		public InputTriangle(int p0, int p1, int p2)
		{
		}

		[Token(Token = "0x6000948")]
		[Address(RVA = "0x1622F38", Offset = "0x1622F38", VA = "0x1622F38", Slot = "10")]
		public TriangleNet.Geometry.Vertex GetVertex(int index)
		{
			return null;
		}

		[Token(Token = "0x6000949")]
		[Address(RVA = "0x1622F40", Offset = "0x1622F40", VA = "0x1622F40", Slot = "11")]
		public int GetVertexID(int index)
		{
			return default(int);
		}

		[Token(Token = "0x600094A")]
		[Address(RVA = "0x1622F7C", Offset = "0x1622F7C", VA = "0x1622F7C", Slot = "12")]
		public ITriangle GetNeighbor(int index)
		{
			return null;
		}

		[Token(Token = "0x600094B")]
		[Address(RVA = "0x1622F84", Offset = "0x1622F84", VA = "0x1622F84", Slot = "13")]
		public int GetNeighborID(int index)
		{
			return default(int);
		}

		[Token(Token = "0x600094C")]
		[Address(RVA = "0x1622F8C", Offset = "0x1622F8C", VA = "0x1622F8C", Slot = "14")]
		public ISegment GetSegment(int index)
		{
			return null;
		}
	}
	[Token(Token = "0x200018B")]
	public class TriangleFormat : IPolygonFormat, IFileFormat, IMeshFormat
	{
		[Token(Token = "0x600094D")]
		[Address(RVA = "0x1622F94", Offset = "0x1622F94", VA = "0x1622F94", Slot = "7")]
		public bool IsSupported(string file)
		{
			return default(bool);
		}

		[Token(Token = "0x600094E")]
		[Address(RVA = "0x162306C", Offset = "0x162306C", VA = "0x162306C", Slot = "8")]
		public IMesh Import(string filename)
		{
			return null;
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0x1623304", Offset = "0x1623304", VA = "0x1623304", Slot = "9")]
		public void Write(IMesh mesh, string filename)
		{
		}

		[Token(Token = "0x6000950")]
		[Address(RVA = "0x1623AEC", Offset = "0x1623AEC", VA = "0x1623AEC", Slot = "10")]
		public void Write(IMesh mesh, Stream stream)
		{
		}

		[Token(Token = "0x6000951")]
		[Address(RVA = "0x1623B4C", Offset = "0x1623B4C", VA = "0x1623B4C", Slot = "4")]
		public IPolygon Read(string filename)
		{
			return null;
		}

		[Token(Token = "0x6000952")]
		[Address(RVA = "0x1623CD0", Offset = "0x1623CD0", VA = "0x1623CD0", Slot = "5")]
		public void Write(IPolygon polygon, string filename)
		{
		}

		[Token(Token = "0x6000953")]
		[Address(RVA = "0x1624F44", Offset = "0x1624F44", VA = "0x1624F44", Slot = "6")]
		public void Write(IPolygon polygon, Stream stream)
		{
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0x16221AC", Offset = "0x16221AC", VA = "0x16221AC")]
		public TriangleFormat()
		{
		}
	}
	[Token(Token = "0x200018C")]
	public class TriangleReader
	{
		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NumberFormatInfo nfi;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int startIndex;

		[Token(Token = "0x6000955")]
		[Address(RVA = "0x1624FA4", Offset = "0x1624FA4", VA = "0x1624FA4")]
		public static bool IsNullOrWhiteSpace(string value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0x1624FCC", Offset = "0x1624FCC", VA = "0x1624FCC")]
		private bool TryReadLine(StreamReader reader, out string[] token)
		{
			return default(bool);
		}

		[Token(Token = "0x6000957")]
		[Address(RVA = "0x162515C", Offset = "0x162515C", VA = "0x162515C")]
		private void ReadVertex(List<TriangleNet.Geometry.Vertex> data, int index, string[] line, int attributes, int marks)
		{
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0x16252EC", Offset = "0x16252EC", VA = "0x16252EC")]
		public void Read(string filename, out Polygon polygon)
		{
		}

		[Token(Token = "0x6000959")]
		[Address(RVA = "0x1623208", Offset = "0x1623208", VA = "0x1623208")]
		public void Read(string filename, out Polygon geometry, out List<ITriangle> triangles)
		{
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0x1625408", Offset = "0x1625408", VA = "0x1625408")]
		public IPolygon Read(string filename)
		{
			return null;
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0x1623CBC", Offset = "0x1623CBC", VA = "0x1623CBC")]
		public Polygon ReadNodeFile(string nodefilename)
		{
			return null;
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0x1625430", Offset = "0x1625430", VA = "0x1625430")]
		public Polygon ReadNodeFile(string nodefilename, bool readElements)
		{
			return null;
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0x1623CC4", Offset = "0x1623CC4", VA = "0x1623CC4")]
		public Polygon ReadPolyFile(string polyfilename)
		{
			return null;
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0x1627024", Offset = "0x1627024", VA = "0x1627024")]
		public Polygon ReadPolyFile(string polyfilename, bool readElements)
		{
			return null;
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0x1625F44", Offset = "0x1625F44", VA = "0x1625F44")]
		public Polygon ReadPolyFile(string polyfilename, bool readElements, bool readArea)
		{
			return null;
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0x1625400", Offset = "0x1625400", VA = "0x1625400")]
		public List<ITriangle> ReadEleFile(string elefilename)
		{
			return null;
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0x1625908", Offset = "0x1625908", VA = "0x1625908")]
		private List<ITriangle> ReadEleFile(string elefilename, bool readArea)
		{
			return null;
		}

		[Token(Token = "0x6000962")]
		[Address(RVA = "0x1627030", Offset = "0x1627030", VA = "0x1627030")]
		private double[] ReadAreaFile(string areafilename, int intriangles)
		{
			return null;
		}

		[Token(Token = "0x6000963")]
		[Address(RVA = "0x16274C0", Offset = "0x16274C0", VA = "0x16274C0")]
		public List<TriangleNet.Geometry.Edge> ReadEdgeFile(string edgeFile, int invertices)
		{
			return null;
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0x1623200", Offset = "0x1623200", VA = "0x1623200")]
		public TriangleReader()
		{
		}
	}
	[Token(Token = "0x200018D")]
	public class TriangleWriter
	{
		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NumberFormatInfo nfi;

		[Token(Token = "0x6000966")]
		[Address(RVA = "0x1627C3C", Offset = "0x1627C3C", VA = "0x1627C3C")]
		public void Write(Mesh mesh, string filename)
		{
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0x1627CF8", Offset = "0x1627CF8", VA = "0x1627CF8")]
		public void WriteNodes(Mesh mesh, string filename)
		{
		}

		[Token(Token = "0x6000968")]
		[Address(RVA = "0x1627E18", Offset = "0x1627E18", VA = "0x1627E18")]
		private void WriteNodes(StreamWriter writer, Mesh mesh)
		{
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0x1628208", Offset = "0x1628208", VA = "0x1628208")]
		private void WriteNodes(StreamWriter writer, IEnumerable<TriangleNet.Geometry.Vertex> nodes, bool markers, int attribs, bool jettison)
		{
		}

		[Token(Token = "0x600096A")]
		[Address(RVA = "0x1623460", Offset = "0x1623460", VA = "0x1623460")]
		public void WriteElements(Mesh mesh, string filename)
		{
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0x1623D4C", Offset = "0x1623D4C", VA = "0x1623D4C")]
		public void WritePoly(IPolygon polygon, string filename)
		{
		}

		[Token(Token = "0x600096C")]
		[Address(RVA = "0x1623458", Offset = "0x1623458", VA = "0x1623458")]
		public void WritePoly(Mesh mesh, string filename)
		{
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0x16285D0", Offset = "0x16285D0", VA = "0x16285D0")]
		public void WritePoly(Mesh mesh, string filename, bool writeNodes)
		{
		}

		[Token(Token = "0x600096E")]
		[Address(RVA = "0x162920C", Offset = "0x162920C", VA = "0x162920C")]
		public void WriteEdges(Mesh mesh, string filename)
		{
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0x1629D9C", Offset = "0x1629D9C", VA = "0x1629D9C")]
		public void WriteNeighbors(Mesh mesh, string filename)
		{
		}

		[Token(Token = "0x6000970")]
		[Address(RVA = "0x1623450", Offset = "0x1623450", VA = "0x1623450")]
		public TriangleWriter()
		{
		}
	}
}
namespace TriangleNet.Geometry
{
	[Token(Token = "0x200018E")]
	public class Contour
	{
		[Serializable]
		[Token(Token = "0x2000472")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0D30", Offset = "0xAC0D30")]
		private sealed class <>c
		{
			[Token(Token = "0x4001D30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001D31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Converter<Vertex, Point> <>9__12_0;

			[Token(Token = "0x6001DCC")]
			[Address(RVA = "0x161E810", Offset = "0x161E810", VA = "0x161E810")]
			public <>c()
			{
			}

			[Token(Token = "0x6001DCD")]
			[Address(RVA = "0x161E818", Offset = "0x161E818", VA = "0x161E818")]
			internal Point <FindPointInPolygon>b__12_0(Vertex x)
			{
				return null;
			}
		}

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int marker;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool convex;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC4494", Offset = "0xAC4494")]
		private List<Vertex> <Points>k__BackingField;

		[Token(Token = "0x17000114")]
		public List<Vertex> Points
		{
			[Token(Token = "0x6000972")]
			[Address(RVA = "0x161D778", Offset = "0x161D778", VA = "0x161D778")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACAF14", Offset = "0xACAF14")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000973")]
			[Address(RVA = "0x161D780", Offset = "0x161D780", VA = "0x161D780")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACAF24", Offset = "0xACAF24")]
			set
			{
			}
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0x161D788", Offset = "0x161D788", VA = "0x161D788")]
		public Contour(IEnumerable<Vertex> points)
		{
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0x161D814", Offset = "0x161D814", VA = "0x161D814")]
		public Contour(IEnumerable<Vertex> points, int marker)
		{
		}

		[Token(Token = "0x6000976")]
		[Address(RVA = "0x161D7C4", Offset = "0x161D7C4", VA = "0x161D7C4")]
		public Contour(IEnumerable<Vertex> points, int marker, bool convex)
		{
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0x161D998", Offset = "0x161D998", VA = "0x161D998")]
		public List<ISegment> GetSegments()
		{
			return null;
		}

		[Token(Token = "0x6000978")]
		[Address(RVA = "0x161DBD4", Offset = "0x161DBD4", VA = "0x161DBD4")]
		public Point FindInteriorPoint(int limit = 5, double eps = 2E-05)
		{
			return null;
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0x161D85C", Offset = "0x161D85C", VA = "0x161D85C")]
		private void AddPoints(IEnumerable<Vertex> points)
		{
		}

		[Token(Token = "0x600097A")]
		[Address(RVA = "0x161DD88", Offset = "0x161DD88", VA = "0x161DD88")]
		private static Point FindPointInPolygon(List<Vertex> contour, int limit, double eps)
		{
			return null;
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0x161E4B4", Offset = "0x161E4B4", VA = "0x161E4B4")]
		private static bool IsPointInPolygon(Point point, List<Vertex> poly)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200018F")]
	public class Edge : IEdge
	{
		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC44A4", Offset = "0xAC44A4")]
		private int <P0>k__BackingField;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC44B4", Offset = "0xAC44B4")]
		private int <P1>k__BackingField;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC44C4", Offset = "0xAC44C4")]
		private int <Label>k__BackingField;

		[Token(Token = "0x17000115")]
		public int P0
		{
			[Token(Token = "0x600097C")]
			[Address(RVA = "0x161E820", Offset = "0x161E820", VA = "0x161E820", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACAF34", Offset = "0xACAF34")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600097D")]
			[Address(RVA = "0x161E828", Offset = "0x161E828", VA = "0x161E828")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACAF44", Offset = "0xACAF44")]
			private set
			{
			}
		}

		[Token(Token = "0x17000116")]
		public int P1
		{
			[Token(Token = "0x600097E")]
			[Address(RVA = "0x161E830", Offset = "0x161E830", VA = "0x161E830", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACAF54", Offset = "0xACAF54")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600097F")]
			[Address(RVA = "0x161E838", Offset = "0x161E838", VA = "0x161E838")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACAF64", Offset = "0xACAF64")]
			private set
			{
			}
		}

		[Token(Token = "0x17000117")]
		public int Label
		{
			[Token(Token = "0x6000980")]
			[Address(RVA = "0x161E840", Offset = "0x161E840", VA = "0x161E840", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACAF74", Offset = "0xACAF74")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000981")]
			[Address(RVA = "0x161E848", Offset = "0x161E848", VA = "0x161E848")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACAF84", Offset = "0xACAF84")]
			private set
			{
			}
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0x161E850", Offset = "0x161E850", VA = "0x161E850")]
		public Edge(int p0, int p1)
		{
		}

		[Token(Token = "0x6000983")]
		[Address(RVA = "0x161E88C", Offset = "0x161E88C", VA = "0x161E88C")]
		public Edge(int p0, int p1, int label)
		{
		}
	}
	[Token(Token = "0x2000190")]
	public static class ExtensionMethods
	{
		[Token(Token = "0x6000984")]
		[Address(RVA = "0x161E8CC", Offset = "0x161E8CC", VA = "0x161E8CC")]
		public static IMesh Triangulate(this IPolygon polygon)
		{
			return null;
		}

		[Token(Token = "0x6000985")]
		[Address(RVA = "0x161E944", Offset = "0x161E944", VA = "0x161E944")]
		public static IMesh Triangulate(this IPolygon polygon, ConstraintOptions options)
		{
			return null;
		}

		[Token(Token = "0x6000986")]
		[Address(RVA = "0x161E9C8", Offset = "0x161E9C8", VA = "0x161E9C8")]
		public static IMesh Triangulate(this IPolygon polygon, QualityOptions quality)
		{
			return null;
		}

		[Token(Token = "0x6000987")]
		[Address(RVA = "0x161EA4C", Offset = "0x161EA4C", VA = "0x161EA4C")]
		public static IMesh Triangulate(this IPolygon polygon, ConstraintOptions options, QualityOptions quality)
		{
			return null;
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0x161EAD4", Offset = "0x161EAD4", VA = "0x161EAD4")]
		public static IMesh Triangulate(this IPolygon polygon, ConstraintOptions options, QualityOptions quality, ITriangulator triangulator)
		{
			return null;
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0x161EB6C", Offset = "0x161EB6C", VA = "0x161EB6C")]
		public static bool Contains(this ITriangle triangle, Point p)
		{
			return default(bool);
		}

		[Token(Token = "0x600098A")]
		[Address(RVA = "0x161EB84", Offset = "0x161EB84", VA = "0x161EB84")]
		public static bool Contains(this ITriangle triangle, double x, double y)
		{
			return default(bool);
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0x161EED0", Offset = "0x161EED0", VA = "0x161EED0")]
		public static Rectangle Bounds(this ITriangle triangle)
		{
			return null;
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0x161EEA4", Offset = "0x161EEA4", VA = "0x161EEA4")]
		internal static double DotProduct(Point p, Point q)
		{
			return default(double);
		}
	}
	[Token(Token = "0x2000191")]
	public interface IEdge
	{
		[Token(Token = "0x17000118")]
		int P0
		{
			[Token(Token = "0x600098D")]
			get;
		}

		[Token(Token = "0x17000119")]
		int P1
		{
			[Token(Token = "0x600098E")]
			get;
		}

		[Token(Token = "0x1700011A")]
		int Label
		{
			[Token(Token = "0x600098F")]
			get;
		}
	}
	[Token(Token = "0x2000192")]
	public interface IPolygon
	{
		[Token(Token = "0x1700011B")]
		List<Vertex> Points
		{
			[Token(Token = "0x6000990")]
			get;
		}

		[Token(Token = "0x1700011C")]
		List<ISegment> Segments
		{
			[Token(Token = "0x6000991")]
			get;
		}

		[Token(Token = "0x1700011D")]
		List<Point> Holes
		{
			[Token(Token = "0x6000992")]
			get;
		}

		[Token(Token = "0x1700011E")]
		List<RegionPointer> Regions
		{
			[Token(Token = "0x6000993")]
			get;
		}

		[Token(Token = "0x1700011F")]
		bool HasPointMarkers
		{
			[Token(Token = "0x6000994")]
			get;
			[Token(Token = "0x6000995")]
			set;
		}

		[Token(Token = "0x17000120")]
		bool HasSegmentMarkers
		{
			[Token(Token = "0x6000996")]
			get;
			[Token(Token = "0x6000997")]
			set;
		}

		[Token(Token = "0x6000998")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xACB014", Offset = "0xACB014")]
		void AddContour(IEnumerable<Vertex> points, int marker, bool hole, bool convex);

		[Token(Token = "0x6000999")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xACB04C", Offset = "0xACB04C")]
		void AddContour(IEnumerable<Vertex> points, int marker, Point hole);

		[Token(Token = "0x600099A")]
		Rectangle Bounds();

		[Token(Token = "0x600099B")]
		void Add(Vertex vertex);

		[Token(Token = "0x600099C")]
		void Add(ISegment segment, bool insert = false);

		[Token(Token = "0x600099D")]
		void Add(ISegment segment, int index);

		[Token(Token = "0x600099E")]
		void Add(Contour contour, bool hole = false);

		[Token(Token = "0x600099F")]
		void Add(Contour contour, Point hole);
	}
	[Token(Token = "0x2000193")]
	public interface ISegment : IEdge
	{
		[Token(Token = "0x60009A0")]
		Vertex GetVertex(int index);

		[Token(Token = "0x60009A1")]
		ITriangle GetTriangle(int index);
	}
	[Token(Token = "0x2000194")]
	public interface ITriangle
	{
		[Token(Token = "0x17000121")]
		int ID
		{
			[Token(Token = "0x60009A2")]
			get;
			[Token(Token = "0x60009A3")]
			set;
		}

		[Token(Token = "0x17000122")]
		int Label
		{
			[Token(Token = "0x60009A4")]
			get;
			[Token(Token = "0x60009A5")]
			set;
		}

		[Token(Token = "0x17000123")]
		double Area
		{
			[Token(Token = "0x60009A6")]
			get;
			[Token(Token = "0x60009A7")]
			set;
		}

		[Token(Token = "0x60009A8")]
		Vertex GetVertex(int index);

		[Token(Token = "0x60009A9")]
		int GetVertexID(int index);

		[Token(Token = "0x60009AA")]
		ITriangle GetNeighbor(int index);

		[Token(Token = "0x60009AB")]
		int GetNeighborID(int index);

		[Token(Token = "0x60009AC")]
		ISegment GetSegment(int index);
	}
	[Token(Token = "0x2000195")]
	public class Point : IComparable<Point>, IEquatable<Point>
	{
		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int id;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int label;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal double x;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal double y;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal double z;

		[Token(Token = "0x17000124")]
		public int ID
		{
			[Token(Token = "0x60009B0")]
			[Address(RVA = "0x161F0F8", Offset = "0x161F0F8", VA = "0x161F0F8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60009B1")]
			[Address(RVA = "0x161F100", Offset = "0x161F100", VA = "0x161F100")]
			set
			{
			}
		}

		[Token(Token = "0x17000125")]
		public double X
		{
			[Token(Token = "0x60009B2")]
			[Address(RVA = "0x161F108", Offset = "0x161F108", VA = "0x161F108")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60009B3")]
			[Address(RVA = "0x161F110", Offset = "0x161F110", VA = "0x161F110")]
			set
			{
			}
		}

		[Token(Token = "0x17000126")]
		public double Y
		{
			[Token(Token = "0x60009B4")]
			[Address(RVA = "0x161F118", Offset = "0x161F118", VA = "0x161F118")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60009B5")]
			[Address(RVA = "0x161F120", Offset = "0x161F120", VA = "0x161F120")]
			set
			{
			}
		}

		[Token(Token = "0x17000127")]
		public double Z
		{
			[Token(Token = "0x60009B6")]
			[Address(RVA = "0x161F128", Offset = "0x161F128", VA = "0x161F128")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60009B7")]
			[Address(RVA = "0x161F130", Offset = "0x161F130", VA = "0x161F130")]
			set
			{
			}
		}

		[Token(Token = "0x17000128")]
		public int Label
		{
			[Token(Token = "0x60009B8")]
			[Address(RVA = "0x161F138", Offset = "0x161F138", VA = "0x161F138")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60009B9")]
			[Address(RVA = "0x161F140", Offset = "0x161F140", VA = "0x161F140")]
			set
			{
			}
		}

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x161E430", Offset = "0x161E430", VA = "0x161E430")]
		public Point()
		{
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x161DD4C", Offset = "0x161DD4C", VA = "0x161DD4C")]
		public Point(double x, double y)
		{
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x161F0B8", Offset = "0x161F0B8", VA = "0x161F0B8")]
		public Point(double x, double y, int label)
		{
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x161E154", Offset = "0x161E154", VA = "0x161E154")]
		public static bool operator ==(Point a, Point b)
		{
			return default(bool);
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x161F178", Offset = "0x161F178", VA = "0x161F178")]
		public static bool operator !=(Point a, Point b)
		{
			return default(bool);
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x161F1C4", Offset = "0x161F1C4", VA = "0x161F1C4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0x161F148", Offset = "0x161F148", VA = "0x161F148", Slot = "5")]
		public bool Equals(Point p)
		{
			return default(bool);
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0x161F27C", Offset = "0x161F27C", VA = "0x161F27C", Slot = "4")]
		public int CompareTo(Point other)
		{
			return default(int);
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x161F2E0", Offset = "0x161F2E0", VA = "0x161F2E0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x161F32C", Offset = "0x161F32C", VA = "0x161F32C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000196")]
	public class Polygon : IPolygon
	{
		[Serializable]
		[Token(Token = "0x2000473")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0D40", Offset = "0xAC0D40")]
		private sealed class <>c
		{
			[Token(Token = "0x4001D32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001D33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Converter<Vertex, Point> <>9__27_0;

			[Token(Token = "0x6001DCF")]
			[Address(RVA = "0x161FD2C", Offset = "0x161FD2C", VA = "0x161FD2C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001DD0")]
			[Address(RVA = "0x161FD34", Offset = "0x161FD34", VA = "0x161FD34")]
			internal Point <Bounds>b__27_0(Vertex x)
			{
				return null;
			}
		}

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Vertex> points;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Point> holes;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<RegionPointer> regions;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ISegment> segments;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC44D4", Offset = "0xAC44D4")]
		private bool <HasPointMarkers>k__BackingField;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC44E4", Offset = "0xAC44E4")]
		private bool <HasSegmentMarkers>k__BackingField;

		[Token(Token = "0x17000129")]
		public List<Vertex> Points
		{
			[Token(Token = "0x60009C1")]
			[Address(RVA = "0x161F3D0", Offset = "0x161F3D0", VA = "0x161F3D0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012A")]
		public List<Point> Holes
		{
			[Token(Token = "0x60009C2")]
			[Address(RVA = "0x161F3D8", Offset = "0x161F3D8", VA = "0x161F3D8", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012B")]
		public List<RegionPointer> Regions
		{
			[Token(Token = "0x60009C3")]
			[Address(RVA = "0x161F3E0", Offset = "0x161F3E0", VA = "0x161F3E0", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012C")]
		public List<ISegment> Segments
		{
			[Token(Token = "0x60009C4")]
			[Address(RVA = "0x161F3E8", Offset = "0x161F3E8", VA = "0x161F3E8", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012D")]
		public bool HasPointMarkers
		{
			[Token(Token = "0x60009C5")]
			[Address(RVA = "0x161F3F0", Offset = "0x161F3F0", VA = "0x161F3F0", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACB084", Offset = "0xACB084")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009C6")]
			[Address(RVA = "0x161F3F8", Offset = "0x161F3F8", VA = "0x161F3F8", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACB094", Offset = "0xACB094")]
			set
			{
			}
		}

		[Token(Token = "0x1700012E")]
		public bool HasSegmentMarkers
		{
			[Token(Token = "0x60009C7")]
			[Address(RVA = "0x161F404", Offset = "0x161F404", VA = "0x161F404", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACB0A4", Offset = "0xACB0A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009C8")]
			[Address(RVA = "0x161F40C", Offset = "0x161F40C", VA = "0x161F40C", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACB0B4", Offset = "0xACB0B4")]
			set
			{
			}
		}

		[Token(Token = "0x1700012F")]
		public int Count
		{
			[Token(Token = "0x60009C9")]
			[Address(RVA = "0x161F418", Offset = "0x161F418", VA = "0x161F418")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0x161F468", Offset = "0x161F468", VA = "0x161F468")]
		public Polygon()
		{
		}

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x161F5B0", Offset = "0x161F5B0", VA = "0x161F5B0")]
		public Polygon(int capacity)
		{
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x161F474", Offset = "0x161F474", VA = "0x161F474")]
		public Polygon(int capacity, bool markers)
		{
		}

		[Token(Token = "0x60009CD")]
		[Address(RVA = "0x161F5BC", Offset = "0x161F5BC", VA = "0x161F5BC", Slot = "12")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xACB0C4", Offset = "0xACB0C4")]
		public void AddContour(IEnumerable<Vertex> points, int marker = 0, bool hole = false, bool convex = false)
		{
		}

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0x161F72C", Offset = "0x161F72C", VA = "0x161F72C", Slot = "13")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xACB0FC", Offset = "0xACB0FC")]
		public void AddContour(IEnumerable<Vertex> points, int marker, Point hole)
		{
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x161F878", Offset = "0x161F878", VA = "0x161F878", Slot = "14")]
		public Rectangle Bounds()
		{
			return null;
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x161F9C8", Offset = "0x161F9C8", VA = "0x161F9C8", Slot = "15")]
		public void Add(Vertex vertex)
		{
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0x161FA30", Offset = "0x161FA30", VA = "0x161FA30", Slot = "16")]
		public void Add(ISegment segment, bool insert = false)
		{
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x161FBC8", Offset = "0x161FBC8", VA = "0x161FBC8", Slot = "17")]
		public void Add(ISegment segment, int index)
		{
		}

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x161F65C", Offset = "0x161F65C", VA = "0x161F65C", Slot = "18")]
		public void Add(Contour contour, bool hole = false)
		{
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x161F7C4", Offset = "0x161F7C4", VA = "0x161F7C4", Slot = "19")]
		public void Add(Contour contour, Point hole)
		{
		}
	}
	[Token(Token = "0x2000197")]
	public class Rectangle
	{
		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double xmin;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private double ymin;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double xmax;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private double ymax;

		[Token(Token = "0x17000130")]
		public double Left
		{
			[Token(Token = "0x60009D8")]
			[Address(RVA = "0x161FDE4", Offset = "0x161FDE4", VA = "0x161FDE4")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000131")]
		public double Right
		{
			[Token(Token = "0x60009D9")]
			[Address(RVA = "0x161FDEC", Offset = "0x161FDEC", VA = "0x161FDEC")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000132")]
		public double Bottom
		{
			[Token(Token = "0x60009DA")]
			[Address(RVA = "0x161FDF4", Offset = "0x161FDF4", VA = "0x161FDF4")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000133")]
		public double Top
		{
			[Token(Token = "0x60009DB")]
			[Address(RVA = "0x161FDFC", Offset = "0x161FDFC", VA = "0x161FDFC")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000134")]
		public double Width
		{
			[Token(Token = "0x60009DC")]
			[Address(RVA = "0x161FE04", Offset = "0x161FE04", VA = "0x161FE04")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000135")]
		public double Height
		{
			[Token(Token = "0x60009DD")]
			[Address(RVA = "0x161FE14", Offset = "0x161FE14", VA = "0x161FE14")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x161E1A0", Offset = "0x161E1A0", VA = "0x161E1A0")]
		public Rectangle()
		{
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0x161FD3C", Offset = "0x161FD3C", VA = "0x161FD3C")]
		public Rectangle(Rectangle other)
		{
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x161FD90", Offset = "0x161FD90", VA = "0x161FD90")]
		public Rectangle(double x, double y, double width, double height)
		{
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x161FE24", Offset = "0x161FE24", VA = "0x161FE24")]
		public void Resize(double dx, double dy)
		{
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x161EFE4", Offset = "0x161EFE4", VA = "0x161EFE4")]
		public void Expand(Point p)
		{
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0x161E1D8", Offset = "0x161E1D8", VA = "0x161E1D8")]
		public void Expand(IEnumerable<Point> points)
		{
		}

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0x161FE3C", Offset = "0x161FE3C", VA = "0x161FE3C")]
		public void Expand(Rectangle other)
		{
		}

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0x161FF10", Offset = "0x161FF10", VA = "0x161FF10")]
		public bool Contains(double x, double y)
		{
			return default(bool);
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0x161E460", Offset = "0x161E460", VA = "0x161E460")]
		public bool Contains(Point pt)
		{
			return default(bool);
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x161FF4C", Offset = "0x161FF4C", VA = "0x161FF4C")]
		public bool Contains(Rectangle other)
		{
			return default(bool);
		}

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0x161FFA8", Offset = "0x161FFA8", VA = "0x161FFA8")]
		public bool Intersects(Rectangle other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000198")]
	public class RegionPointer
	{
		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal Point point;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int id;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal double area;

		[Token(Token = "0x17000136")]
		public double Area
		{
			[Token(Token = "0x60009E6")]
			[Address(RVA = "0x1620004", Offset = "0x1620004", VA = "0x1620004")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60009E7")]
			[Address(RVA = "0x162000C", Offset = "0x162000C", VA = "0x162000C")]
			set
			{
			}
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x16200A0", Offset = "0x16200A0", VA = "0x16200A0")]
		public RegionPointer(double x, double y, int id)
		{
		}

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0x16200A8", Offset = "0x16200A8", VA = "0x16200A8")]
		public RegionPointer(double x, double y, int id, double area)
		{
		}
	}
	[Token(Token = "0x2000199")]
	public class Segment : ISegment, IEdge
	{
		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vertex v0;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vertex v1;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int label;

		[Token(Token = "0x17000137")]
		public int Label
		{
			[Token(Token = "0x60009EA")]
			[Address(RVA = "0x1620158", Offset = "0x1620158", VA = "0x1620158", Slot = "8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60009EB")]
			[Address(RVA = "0x1620160", Offset = "0x1620160", VA = "0x1620160")]
			set
			{
			}
		}

		[Token(Token = "0x17000138")]
		public int P0
		{
			[Token(Token = "0x60009EC")]
			[Address(RVA = "0x1620168", Offset = "0x1620168", VA = "0x1620168", Slot = "6")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000139")]
		public int P1
		{
			[Token(Token = "0x60009ED")]
			[Address(RVA = "0x1620184", Offset = "0x1620184", VA = "0x1620184", Slot = "7")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x16201A0", Offset = "0x16201A0", VA = "0x16201A0")]
		public Segment(Vertex v0, Vertex v1)
		{
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x161DB78", Offset = "0x161DB78", VA = "0x161DB78")]
		public Segment(Vertex v0, Vertex v1, int label)
		{
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x16201A8", Offset = "0x16201A8", VA = "0x16201A8", Slot = "4")]
		public Vertex GetVertex(int index)
		{
			return null;
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0x1620240", Offset = "0x1620240", VA = "0x1620240", Slot = "5")]
		public ITriangle GetTriangle(int index)
		{
			return null;
		}
	}
	[Token(Token = "0x200019A")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xABF914", Offset = "0xABF914")]
	public class Vertex : Point
	{
		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal int hash;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal VertexType type;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal Otri tri;

		[Token(Token = "0x1700013A")]
		public VertexType Type
		{
			[Token(Token = "0x60009F5")]
			[Address(RVA = "0x1620358", Offset = "0x1620358", VA = "0x1620358")]
			get
			{
				return default(VertexType);
			}
		}

		[Token(Token = "0x1700013B")]
		public double Item
		{
			[Token(Token = "0x60009F6")]
			[Address(RVA = "0x1620360", Offset = "0x1620360", VA = "0x1620360")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0x16202A0", Offset = "0x16202A0", VA = "0x16202A0")]
		public Vertex()
		{
		}

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0x1620318", Offset = "0x1620318", VA = "0x1620318")]
		public Vertex(double x, double y)
		{
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x16202D4", Offset = "0x16202D4", VA = "0x16202D4")]
		public Vertex(double x, double y, int mark)
		{
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x1620404", Offset = "0x1620404", VA = "0x1620404", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
}
namespace MantisLOD
{
	[Token(Token = "0x200019B")]
	internal class My_Half_edge : IComparable
	{
		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool alive;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int pqIndex;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public My_Half_vertex vertex;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int index;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public My_Half_face face;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public My_Half_edge next;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float cost;

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x118DB80", Offset = "0x118DB80", VA = "0x118DB80")]
		public My_Half_edge()
		{
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x118F490", Offset = "0x118F490", VA = "0x118F490", Slot = "4")]
		public int CompareTo(object obj)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200019C")]
	internal class My_Half_vertex
	{
		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool alive;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool on_boundary;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool on_symmetry;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 position;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<My_Half_edge> edges;

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x118F614", Offset = "0x118F614", VA = "0x118F614")]
		public My_Half_vertex()
		{
		}
	}
	[Token(Token = "0x200019D")]
	internal class My_Half_face
	{
		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool alive;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int mat;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public My_Half_edge edge;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 n;

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x118F52C", Offset = "0x118F52C", VA = "0x118F52C")]
		public My_Half_face()
		{
		}
	}
	[Token(Token = "0x200019E")]
	internal class My_Half_edge_index
	{
		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public My_Half_edge edge;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int index_from;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int index_to;

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x118F524", Offset = "0x118F524", VA = "0x118F524")]
		public My_Half_edge_index()
		{
		}
	}
	[Token(Token = "0x200019F")]
	internal class My_Half_trace
	{
		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool safe;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public My_Half_vertex v_from;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public My_Half_vertex v_to;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<My_Half_face> erased_faces;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<My_Half_edge_index> updated_edge_indices;

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x118F558", Offset = "0x118F558", VA = "0x118F558")]
		public My_Half_trace()
		{
		}
	}
	[Token(Token = "0x20001A0")]
	internal abstract class BinaryHeap
	{
		[Token(Token = "0x4000A40")]
		private const int rootIndex = 1;

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<My_Half_edge> collection;

		[Token(Token = "0x1700013C")]
		private int LastNodeIndex
		{
			[Token(Token = "0x6000A05")]
			[Address(RVA = "0x118DD0C", Offset = "0x118DD0C", VA = "0x118DD0C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x118DABC", Offset = "0x118DABC", VA = "0x118DABC")]
		public BinaryHeap()
		{
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x118DBAC", Offset = "0x118DBAC", VA = "0x118DBAC")]
		public BinaryHeap(int capacity)
		{
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x118DC80", Offset = "0x118DC80", VA = "0x118DC80")]
		public void Push(My_Half_edge item)
		{
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x118DF14", Offset = "0x118DF14", VA = "0x118DF14")]
		public My_Half_edge Pop()
		{
			return null;
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0x118E2E0", Offset = "0x118E2E0", VA = "0x118E2E0")]
		public bool Remove(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x118E428", Offset = "0x118E428", VA = "0x118E428")]
		public int Size()
		{
			return default(int);
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x118E47C", Offset = "0x118E47C", VA = "0x118E47C")]
		public My_Half_edge Top()
		{
			return null;
		}

		[Token(Token = "0x6000A06")]
		protected abstract bool Compare(My_Half_edge current, My_Half_edge other);

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x118DD60", Offset = "0x118DD60", VA = "0x118DD60")]
		private void BubbleUp(int index)
		{
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x118E080", Offset = "0x118E080", VA = "0x118E080")]
		private void BubbleDown(int index)
		{
		}
	}
	[Token(Token = "0x20001A1")]
	internal class MinHeap : BinaryHeap
	{
		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x118F464", Offset = "0x118F464", VA = "0x118F464")]
		public MinHeap()
		{
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x118F468", Offset = "0x118F468", VA = "0x118F468")]
		public MinHeap(int capacity)
		{
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x118F46C", Offset = "0x118F46C", VA = "0x118F46C", Slot = "4")]
		protected override bool Compare(My_Half_edge current, My_Half_edge other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001A2")]
	internal class Vector3Comparer : IEqualityComparer<Vector3>
	{
		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x1193B40", Offset = "0x1193B40", VA = "0x1193B40", Slot = "4")]
		public bool Equals(Vector3 vec1, Vector3 vec2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x1193B98", Offset = "0x1193B98", VA = "0x1193B98", Slot = "5")]
		public int GetHashCode(Vector3 vec)
		{
			return default(int);
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x1190588", Offset = "0x1190588", VA = "0x1190588")]
		public Vector3Comparer()
		{
		}
	}
	[Token(Token = "0x20001A3")]
	internal class Progressive_Mesh
	{
		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<My_Half_vertex> vertices;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<My_Half_face> faces;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly List<My_Half_edge> edges;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly List<My_Half_trace> contract_trace;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly List<Vector3> normals;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly List<Vector4> colors;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly List<Vector2> uvs;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int current_trace_position;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly MinHeap pq;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 MAX;

		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 MIN;

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float max_square_length_of_mesh;

		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int face_count;

		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int mat_count;

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool lock_boundary;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		private bool lock_detail;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
		private bool lock_symmetry;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7F")]
		private bool lock_normal;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool lock_shape;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		private bool use_detail_map;

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int detail_boost;

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x118E7AC", Offset = "0x118E7AC", VA = "0x118E7AC")]
		public Progressive_Mesh()
		{
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x118ECDC", Offset = "0x118ECDC", VA = "0x118ECDC")]
		public int get_trace_num()
		{
			return default(int);
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x118E99C", Offset = "0x118E99C", VA = "0x118E99C")]
		public void create_progressive_mesh(Vector3[] vertex_array, int vertex_count, int[] triangle_array, int triangle_count, Vector3[] normal_array, int normal_count, Color[] color_array, int color_count, Vector2[] uv_array, int uv_count, int protect_boundary, int protect_detail, int protect_symmetry, int protect_normal, int protect_shape, int use_detail_map, int detail_boost)
		{
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x118ED2C", Offset = "0x118ED2C", VA = "0x118ED2C")]
		public void get_triangle_list(int goal, int[] triangle_array, ref int triangle_count)
		{
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x118F6A0", Offset = "0x118F6A0", VA = "0x118F6A0")]
		private void load_mesh_from_array(Vector3[] vertex_array, int vertex_count, int[] triangle_array, int triangle_count, Vector3[] normal_array, int normal_count, Color[] color_array, int color_count, Vector2[] uv_array, int uv_count)
		{
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x1190590", Offset = "0x1190590", VA = "0x1190590")]
		private void calculate_face_normal(My_Half_face one_face)
		{
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x11906DC", Offset = "0x11906DC", VA = "0x11906DC")]
		private void calculate_face_normals()
		{
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x11907C4", Offset = "0x11907C4", VA = "0x11907C4")]
		private bool is_boundary_edge(My_Half_edge edge)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0x1190A18", Offset = "0x1190A18", VA = "0x1190A18")]
		private void detect_and_mark_boundaries()
		{
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0x1190B58", Offset = "0x1190B58", VA = "0x1190B58")]
		private bool is_symmetry_edge(My_Half_edge edge)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x11910B8", Offset = "0x11910B8", VA = "0x11910B8")]
		private void detect_and_mark_symmetries()
		{
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x11911FC", Offset = "0x11911FC", VA = "0x11911FC")]
		private float cost_of_edge(My_Half_edge edge)
		{
			return default(float);
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x118FFC4", Offset = "0x118FFC4", VA = "0x118FFC4")]
		private void calculate_cost_of_edges()
		{
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x119295C", Offset = "0x119295C", VA = "0x119295C")]
		private bool contract_edge(My_Half_edge edge)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x1190100", Offset = "0x1190100", VA = "0x1190100")]
		private void contract_edges()
		{
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x119018C", Offset = "0x119018C", VA = "0x119018C")]
		private int trace_to(int goal)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20001A4")]
	public static class MantisLODSimpler
	{
		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<Progressive_Mesh> simplers;

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x118E4F8", Offset = "0x118E4F8", VA = "0x118E4F8")]
		public static int create_progressive_mesh(Vector3[] vertex_array, int vertex_count, int[] triangle_array, int triangle_count, Vector3[] normal_array, int normal_count, Color[] color_array, int color_count, Vector2[] uv_array, int uv_count, int protect_boundary, int protect_detail, int protect_symmetry, int protect_normal, int protect_shape, int use_detail_map, int detail_boost)
		{
			return default(int);
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x118EB38", Offset = "0x118EB38", VA = "0x118EB38")]
		public static int get_triangle_list(int index, float goal, int[] triangle_array, ref int triangle_count)
		{
			return default(int);
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x118F2CC", Offset = "0x118F2CC", VA = "0x118F2CC")]
		public static int delete_progressive_mesh(int index)
		{
			return default(int);
		}
	}
}
namespace MantisLODEditor
{
	[Token(Token = "0x20001A5")]
	public class Lod_Mesh
	{
		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh mesh;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int triangle_count;

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0x1193C08", Offset = "0x1193C08", VA = "0x1193C08")]
		public Lod_Mesh()
		{
		}
	}
	[Token(Token = "0x20001A6")]
	public class Lod_Mesh_Table
	{
		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh origin_mesh;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Component> containers;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Lod_Mesh[] lod_meshes;

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0x1193C10", Offset = "0x1193C10", VA = "0x1193C10")]
		public Lod_Mesh_Table()
		{
		}
	}
	[Token(Token = "0x20001A7")]
	public static class MantisLODEditorUtility
	{
		[Token(Token = "0x6000A25")]
		[Address(RVA = "0x1193C18", Offset = "0x1193C18", VA = "0x1193C18")]
		public static string get_uuid_from_mesh(Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0x1193E8C", Offset = "0x1193E8C", VA = "0x1193E8C")]
		public static int PrepareSimplify(Mantis_Mesh[] Mantis_Meshes, bool use_origin_triangles = true)
		{
			return default(int);
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0x1194100", Offset = "0x1194100", VA = "0x1194100")]
		public static void Simplify(Mantis_Mesh[] Mantis_Meshes, bool protect_boundary, bool protect_detail, bool protect_symmetry, bool protect_normal, bool protect_shape, bool use_detail_map, int detail_boost)
		{
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0x11943E8", Offset = "0x11943E8", VA = "0x11943E8")]
		public static int SetQuality(Mantis_Mesh[] Mantis_Meshes, float quality)
		{
			return default(int);
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0x11945EC", Offset = "0x11945EC", VA = "0x11945EC")]
		public static void SaveSimplifiedMesh(Mesh mesh, string filePath)
		{
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0x11945F0", Offset = "0x11945F0", VA = "0x11945F0")]
		public static void FinishSimplify(Mantis_Mesh[] Mantis_Meshes, bool use_origin_triangles = true, bool unload_asset = false)
		{
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0x1194748", Offset = "0x1194748", VA = "0x1194748")]
		public static ProgressiveMesh MakeProgressiveMesh(Mantis_Mesh[] Mantis_Meshes, int max_lod_count)
		{
			return null;
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0x1194EC0", Offset = "0x1194EC0", VA = "0x1194EC0")]
		public static void SaveProgressiveMesh(ProgressiveMesh pm, string filePath)
		{
		}

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0x1194EC4", Offset = "0x1194EC4", VA = "0x1194EC4")]
		public static ProgressiveMesh LoadProgressiveMesh(string filePath)
		{
			return null;
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0x1194F14", Offset = "0x1194F14", VA = "0x1194F14")]
		public static int get_triangles_count_from_progressive_mesh(ProgressiveMesh pm, int _lod, int _mesh_count)
		{
			return default(int);
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0x119501C", Offset = "0x119501C", VA = "0x119501C")]
		private static int[] get_triangles_from_progressive_mesh(ProgressiveMesh pm, int _lod, int _mesh_count, int _mat)
		{
			return null;
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0x1195198", Offset = "0x1195198", VA = "0x1195198")]
		private static void set_triangles(ProgressiveMesh pm, Mesh mesh, string uuid, int lod)
		{
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0x119527C", Offset = "0x119527C", VA = "0x119527C")]
		public static void GenerateRuntimeLOD(ProgressiveMesh pm, Component[] containers, bool optimize_on_the_fly)
		{
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0x1195768", Offset = "0x1195768", VA = "0x1195768")]
		public static int SwitchRuntimeLOD(ProgressiveMesh pm, int[] mesh_lod_range, int lod, Component[] Components)
		{
			return default(int);
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0x1195CE8", Offset = "0x1195CE8", VA = "0x1195CE8")]
		public static void FinishRuntimeLOD(ProgressiveMesh pm)
		{
		}
	}
	[Token(Token = "0x20001A8")]
	public class Mantis_Mesh
	{
		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh mesh;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int index;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string uuid;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int[][] origin_triangles;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int[] out_triangles;

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int out_count;

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x1196018", Offset = "0x1196018", VA = "0x1196018")]
		public Mantis_Mesh()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A9")]
	public class ProgressiveMesh : ScriptableObject
	{
		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] triangles;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] uuids;

		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dictionary<string, Lod_Mesh_Table> lod_meshes_dic;

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0x1196058", Offset = "0x1196058", VA = "0x1196058")]
		public ProgressiveMesh()
		{
		}
	}
	[Token(Token = "0x20001AA")]
	public class ProgressiveMeshRuntime : MonoBehaviour
	{
		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ProgressiveMesh progressiveMesh;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text fpsHint;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text lodHint;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text triangleHint;

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public bool optimize_on_the_fly;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public int[] mesh_lod_range;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public bool never_cull;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[HideInInspector]
		public int lod_strategy;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float cull_ratio;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public float disappear_distance;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public float updateInterval;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int current_lod;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Component[] allBasicRenderers;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float currentTimeToInterval;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool culled;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		private bool working;

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0x1196060", Offset = "0x1196060", VA = "0x1196060")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0x1196278", Offset = "0x1196278", VA = "0x1196278")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0x119627C", Offset = "0x119627C", VA = "0x119627C")]
		private float ratio_of_screen()
		{
			return default(float);
		}

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0x1196748", Offset = "0x1196748", VA = "0x1196748")]
		private float ratio_of_distance(float distance0)
		{
			return default(float);
		}

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0x1196BE8", Offset = "0x1196BE8", VA = "0x1196BE8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0x1197488", Offset = "0x1197488", VA = "0x1197488")]
		private void create_default_mesh_lod_range()
		{
		}

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0x1196064", Offset = "0x1196064", VA = "0x1196064")]
		private void get_all_meshes()
		{
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0x11975A0", Offset = "0x11975A0", VA = "0x11975A0")]
		public void reset_all_parameters()
		{
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x11975F0", Offset = "0x11975F0", VA = "0x11975F0")]
		private void clean_all()
		{
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x1197630", Offset = "0x1197630", VA = "0x1197630")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0x1197634", Offset = "0x1197634", VA = "0x1197634")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0x1197638", Offset = "0x1197638", VA = "0x1197638")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0x119763C", Offset = "0x119763C", VA = "0x119763C")]
		public ProgressiveMeshRuntime()
		{
		}
	}
}
namespace MagicArsenal
{
	[Token(Token = "0x20001AB")]
	public class MagicBeamScript : MonoBehaviour
	{
		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC4564", Offset = "0xAC4564")]
		public GameObject[] beamLineRendererPrefab;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] beamStartPrefab;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject[] beamEndPrefab;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int currentBeam;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject beamStart;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject beamEnd;

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject beam;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private LineRenderer line;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC459C", Offset = "0xAC459C")]
		public float beamEndOffset;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float textureScrollSpeed;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float textureLengthScale;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC45D4", Offset = "0xAC45D4")]
		public Slider endOffSetSlider;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Slider scrollSpeedSlider;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC460C", Offset = "0xAC460C")]
		public Text textBeamName;

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0x1189484", Offset = "0x1189484", VA = "0x1189484")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0x11895F8", Offset = "0x11895F8", VA = "0x11895F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A45")]
		[Address(RVA = "0x1189F20", Offset = "0x1189F20", VA = "0x1189F20")]
		public void nextBeam()
		{
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0x118A018", Offset = "0x118A018", VA = "0x118A018")]
		public void previousBeam()
		{
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x118A110", Offset = "0x118A110", VA = "0x118A110")]
		public void UpdateEndOffset()
		{
		}

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0x118A14C", Offset = "0x118A14C", VA = "0x118A14C")]
		public void UpdateScrollSpeed()
		{
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0x1189AC8", Offset = "0x1189AC8", VA = "0x1189AC8")]
		private void ShootBeamInDir(Vector3 start, Vector3 dir)
		{
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0x118A188", Offset = "0x118A188", VA = "0x118A188")]
		public MagicBeamScript()
		{
		}
	}
	[Token(Token = "0x20001AC")]
	public class MagicButtonScript : MonoBehaviour
	{
		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Button;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text MyButtonText;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string projectileParticleName;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MagicFireProjectile effectScript;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MagicProjectileScript projectileScript;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float buttonsX;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float buttonsY;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float buttonsSizeX;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float buttonsSizeY;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float buttonsDistance;

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0x118AB3C", Offset = "0x118AB3C", VA = "0x118AB3C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x118ACEC", Offset = "0x118ACEC", VA = "0x118ACEC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0x118AC28", Offset = "0x118AC28", VA = "0x118AC28")]
		public void getProjectileNames()
		{
		}

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0x118AD18", Offset = "0x118AD18", VA = "0x118AD18")]
		public bool overButton()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0x118AE24", Offset = "0x118AE24", VA = "0x118AE24")]
		public MagicButtonScript()
		{
		}
	}
	[Token(Token = "0x20001AD")]
	public class MagicDragMouseOrbit : MonoBehaviour
	{
		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float distance;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float xSpeed;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ySpeed;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float yMinLimit;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float yMaxLimit;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float distanceMin;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float distanceMax;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float smoothTime;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float rotationYAxis;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float rotationXAxis;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float velocityX;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float velocityY;

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0x118AE2C", Offset = "0x118AE2C", VA = "0x118AE2C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0x118AF08", Offset = "0x118AF08", VA = "0x118AF08")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0x118B308", Offset = "0x118B308", VA = "0x118B308")]
		public static float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0x118B3B8", Offset = "0x118B3B8", VA = "0x118B3B8")]
		public MagicDragMouseOrbit()
		{
		}
	}
	[Token(Token = "0x20001AE")]
	public class MagicEffectCycler : MonoBehaviour
	{
		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<GameObject> listOfEffects;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC4654", Offset = "0xAC4654")]
		[SerializeField]
		private float loopTimeLength;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float timeOfLastInstantiate;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject instantiatedEffect;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int effectIndex;

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0x118B3D4", Offset = "0x118B3D4", VA = "0x118B3D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x118B530", Offset = "0x118B530", VA = "0x118B530")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0x118B6BC", Offset = "0x118B6BC", VA = "0x118B6BC")]
		public MagicEffectCycler()
		{
		}
	}
	[Token(Token = "0x20001AF")]
	public class MagicFireProjectile : MonoBehaviour
	{
		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RaycastHit hit;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject[] projectiles;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform spawnPosition;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public int currentProjectile;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float speed;

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MagicButtonScript selectedProjectileButton;

		[Token(Token = "0x6000A57")]
		[Address(RVA = "0x118B6CC", Offset = "0x118B6CC", VA = "0x118B6CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x118B744", Offset = "0x118B744", VA = "0x118B744")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0x118BBB8", Offset = "0x118BBB8", VA = "0x118BBB8")]
		public void nextEffect()
		{
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0x118BBF8", Offset = "0x118BBF8", VA = "0x118BBF8")]
		public void previousEffect()
		{
		}

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0x118BC38", Offset = "0x118BC38", VA = "0x118BC38")]
		public void AdjustSpeed(float newSpeed)
		{
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x118BC40", Offset = "0x118BC40", VA = "0x118BC40")]
		public MagicFireProjectile()
		{
		}
	}
	[Token(Token = "0x20001B0")]
	public class MagicLoadSceneOnClick : MonoBehaviour
	{
		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool GUIHide;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool GUIHide2;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool GUIHide3;

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0x118C230", Offset = "0x118C230", VA = "0x118C230")]
		public void LoadSceneProjectiles()
		{
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0x118C29C", Offset = "0x118C29C", VA = "0x118C29C")]
		public void LoadSceneSprays()
		{
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x118C308", Offset = "0x118C308", VA = "0x118C308")]
		public void LoadSceneAura()
		{
		}

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x118C374", Offset = "0x118C374", VA = "0x118C374")]
		public void LoadSceneModular()
		{
		}

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0x118C3E0", Offset = "0x118C3E0", VA = "0x118C3E0")]
		public void LoadSceneShields2()
		{
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0x118C44C", Offset = "0x118C44C", VA = "0x118C44C")]
		public void LoadSceneShields()
		{
		}

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0x118C4B8", Offset = "0x118C4B8", VA = "0x118C4B8")]
		public void LoadSceneSphereBlast()
		{
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x118C524", Offset = "0x118C524", VA = "0x118C524")]
		public void LoadSceneEnchant()
		{
		}

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0x118C590", Offset = "0x118C590", VA = "0x118C590")]
		public void LoadSceneSlash()
		{
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x118C5FC", Offset = "0x118C5FC", VA = "0x118C5FC")]
		public void LoadSceneCharge()
		{
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x118C668", Offset = "0x118C668", VA = "0x118C668")]
		public void LoadSceneCleave()
		{
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x118C6D4", Offset = "0x118C6D4", VA = "0x118C6D4")]
		public void LoadSceneAura2()
		{
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x118C740", Offset = "0x118C740", VA = "0x118C740")]
		public void LoadSceneWalls()
		{
		}

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0x118C7AC", Offset = "0x118C7AC", VA = "0x118C7AC")]
		public void LoadSceneBeams()
		{
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x118C818", Offset = "0x118C818", VA = "0x118C818")]
		public void LoadSceneMeshGlow()
		{
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x118C884", Offset = "0x118C884", VA = "0x118C884")]
		public void LoadScenePillarBlast()
		{
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x118C8F0", Offset = "0x118C8F0", VA = "0x118C8F0")]
		public void LoadSceneAura3()
		{
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0x118C95C", Offset = "0x118C95C", VA = "0x118C95C")]
		public void LoadSceneAuraCast()
		{
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0x118C9C8", Offset = "0x118C9C8", VA = "0x118C9C8")]
		public void LoadSceneRain()
		{
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0x118CA34", Offset = "0x118CA34", VA = "0x118CA34")]
		public void LoadSceneAOE()
		{
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0x118CAA0", Offset = "0x118CAA0", VA = "0x118CAA0")]
		public void LoadSceneNova()
		{
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x118CB0C", Offset = "0x118CB0C", VA = "0x118CB0C")]
		public void LoadSceneFlame()
		{
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x118CB78", Offset = "0x118CB78", VA = "0x118CB78")]
		public void LoadSceneAuraCast2()
		{
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x118CBE4", Offset = "0x118CBE4", VA = "0x118CBE4")]
		public void LoadSceneCurse()
		{
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0x118CC50", Offset = "0x118CC50", VA = "0x118CC50")]
		public void LoadSceneBeamBlast()
		{
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x118CCBC", Offset = "0x118CCBC", VA = "0x118CCBC")]
		public void LoadSceneOrbitSphere()
		{
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x118CD28", Offset = "0x118CD28", VA = "0x118CD28")]
		public void LoadSceneDot()
		{
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0x118CD94", Offset = "0x118CD94", VA = "0x118CD94")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0x118CF00", Offset = "0x118CF00", VA = "0x118CF00")]
		public MagicLoadSceneOnClick()
		{
		}
	}
	[Token(Token = "0x20001B1")]
	public class MagicLoopScript : MonoBehaviour
	{
		[Token(Token = "0x2000474")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0D50", Offset = "0xAC0D50")]
		private sealed class <EffectLoop>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MagicLoopScript <>4__this;

			[Token(Token = "0x4001D37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private GameObject <effectPlayer>5__2;

			[Token(Token = "0x170002D5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DD4")]
				[Address(RVA = "0x118D1E0", Offset = "0x118D1E0", VA = "0x118D1E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DD6")]
				[Address(RVA = "0x118D248", Offset = "0x118D248", VA = "0x118D248", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DD1")]
			[Address(RVA = "0x118CFDC", Offset = "0x118CFDC", VA = "0x118CFDC")]
			[DebuggerHidden]
			public <EffectLoop>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001DD2")]
			[Address(RVA = "0x118D018", Offset = "0x118D018", VA = "0x118D018", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DD3")]
			[Address(RVA = "0x118D01C", Offset = "0x118D01C", VA = "0x118D01C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DD5")]
			[Address(RVA = "0x118D1E8", Offset = "0x118D1E8", VA = "0x118D1E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject chosenEffect;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float loopTimeLimit;

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0x118CF08", Offset = "0x118CF08", VA = "0x118CF08")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0x118CF0C", Offset = "0x118CF0C", VA = "0x118CF0C")]
		public void PlayEffect()
		{
		}

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0x118CF60", Offset = "0x118CF60", VA = "0x118CF60")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACB134", Offset = "0xACB134")]
		private IEnumerator EffectLoop()
		{
			return null;
		}

		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0x118D008", Offset = "0x118D008", VA = "0x118D008")]
		public MagicLoopScript()
		{
		}
	}
	[Token(Token = "0x20001B2")]
	public class MagicBeamStatic : MonoBehaviour
	{
		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC46B0", Offset = "0xAC46B0")]
		public GameObject beamLineRendererPrefab;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject beamStartPrefab;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject beamEndPrefab;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject beamStart;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject beamEnd;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject beam;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private LineRenderer line;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC46E8", Offset = "0xAC46E8")]
		public bool alwaysOn;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool beamCollides;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float beamLength;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float beamEndOffset;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float textureScrollSpeed;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float textureLengthScale;

		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0x118A1A4", Offset = "0x118A1A4", VA = "0x118A1A4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0x118A1A8", Offset = "0x118A1A8", VA = "0x118A1A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A80")]
		[Address(RVA = "0x118A4A0", Offset = "0x118A4A0", VA = "0x118A4A0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x118A5FC", Offset = "0x118A5FC", VA = "0x118A5FC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0x118A1B8", Offset = "0x118A1B8", VA = "0x118A1B8")]
		public void SpawnBeam()
		{
		}

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0x118A4A4", Offset = "0x118A4A4", VA = "0x118A4A4")]
		public void RemoveBeam()
		{
		}

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0x118AB1C", Offset = "0x118AB1C", VA = "0x118AB1C")]
		public MagicBeamStatic()
		{
		}
	}
	[Token(Token = "0x20001B3")]
	public class MagicLightFade : MonoBehaviour
	{
		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC4720", Offset = "0xAC4720")]
		public float life;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool killAfterLife;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Light li;

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float initIntensity;

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x118BC50", Offset = "0x118BC50", VA = "0x118BC50")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x118BD70", Offset = "0x118BD70", VA = "0x118BD70")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x118BEC4", Offset = "0x118BEC4", VA = "0x118BEC4")]
		public MagicLightFade()
		{
		}
	}
	[Token(Token = "0x20001B4")]
	public class MagicLightFlicker : MonoBehaviour
	{
		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string waveFunction;

		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float startValue;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float amplitude;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float phase;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float frequency;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color originalColor;

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x118BEE0", Offset = "0x118BEE0", VA = "0x118BEE0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x118BF4C", Offset = "0x118BF4C", VA = "0x118BF4C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x118BFF0", Offset = "0x118BFF0", VA = "0x118BFF0")]
		private float EvalWave()
		{
			return default(float);
		}

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0x118C1C0", Offset = "0x118C1C0", VA = "0x118C1C0")]
		public MagicLightFlicker()
		{
		}
	}
	[Token(Token = "0x20001B5")]
	public class MagicRotation : MonoBehaviour
	{
		[Token(Token = "0x2000475")]
		public enum spaceEnum
		{
			[Token(Token = "0x4001D39")]
			Local,
			[Token(Token = "0x4001D3A")]
			World
		}

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC4758", Offset = "0xAC4758")]
		public Vector3 rotateVector;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public spaceEnum rotateSpace;

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0x118D250", Offset = "0x118D250", VA = "0x118D250")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x118D254", Offset = "0x118D254", VA = "0x118D254")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0x118D3A8", Offset = "0x118D3A8", VA = "0x118D3A8")]
		public MagicRotation()
		{
		}
	}
}
namespace BigCatch
{
	[Token(Token = "0x20001B6")]
	public class SceneLoaderTest : MonoBehaviour
	{
		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0xD5E354", Offset = "0xD5E354", VA = "0xD5E354")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0xD5E3F0", Offset = "0xD5E3F0", VA = "0xD5E3F0")]
		public void OnClick(int sceneNum)
		{
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0xD5E49C", Offset = "0xD5E49C", VA = "0xD5E49C")]
		private void OnSceneFinishedLoading(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0xD5E5A8", Offset = "0xD5E5A8", VA = "0xD5E5A8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0xD5E644", Offset = "0xD5E644", VA = "0xD5E644")]
		public SceneLoaderTest()
		{
		}
	}
	[Token(Token = "0x20001B7")]
	[ExecuteInEditMode]
	public class MobileBloom : MonoBehaviour
	{
		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC4790", Offset = "0xAC4790")]
		public float BlurAmount;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color BloomColor;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC47A8", Offset = "0xAC47A8")]
		public float BloomAmount;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC47C0", Offset = "0xAC47C0")]
		public float BloomThreshold;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC47D8", Offset = "0xAC47D8")]
		public float BloomSoftness;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int blurAmountString;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int bloomColorString;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int blDataString;

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int bloomTexString;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material material;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int numberOfPasses;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float knee;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTextureDescriptor half;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private RenderTextureDescriptor quarter;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private RenderTextureDescriptor eighths;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private RenderTextureDescriptor sixths;

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0xE4EB24", Offset = "0xE4EB24", VA = "0xE4EB24")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0xE4EBB8", Offset = "0xE4EBB8", VA = "0xE4EBB8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0xE4EC4C", Offset = "0xE4EC4C", VA = "0xE4EC4C")]
		private void Player_OnLocationChanged(LocationSO locationSO, bool comingFromShip)
		{
		}

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0xE4EC68", Offset = "0xE4EC68", VA = "0xE4EC68")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0xE4F6C0", Offset = "0xE4F6C0", VA = "0xE4F6C0")]
		public MobileBloom()
		{
		}
	}
	[Token(Token = "0x20001B8")]
	public class SchoolChild : MonoBehaviour
	{
		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public SchoolController _spawner;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 _wayPoint;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public float _speed;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _stuckCounter;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _damping;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform _model;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _targetSpeed;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float tParam;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _rotateCounterR;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _rotateCounterL;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform _scanner;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _scan;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _updateNextSeed;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int _updateSeed;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public Transform _cacheTransform;

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0xD5E784", Offset = "0xD5E784", VA = "0xD5E784")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0xD5F3A8", Offset = "0xD5F3A8", VA = "0xD5F3A8")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0xD5F3E4", Offset = "0xD5F3E4", VA = "0xD5F3E4")]
		public void Update()
		{
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0xD5F2EC", Offset = "0xD5F2EC", VA = "0xD5F2EC")]
		public void FrameSkipSeedInit()
		{
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0xD5F128", Offset = "0xD5F128", VA = "0xD5F128")]
		public void CheckForBubblesThenInvoke()
		{
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0xD5FC54", Offset = "0xD5FC54", VA = "0xD5FC54")]
		public void EmitBubbles()
		{
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0xD5EB0C", Offset = "0xD5EB0C", VA = "0xD5EB0C")]
		public void LocateRequiredChildren()
		{
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0xD5EF4C", Offset = "0xD5EF4C", VA = "0xD5EF4C")]
		public void SkewModelForLessUniformedMovement()
		{
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0xD5EA64", Offset = "0xD5EA64", VA = "0xD5EA64")]
		public void SetRandomScale()
		{
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0xD5ECD8", Offset = "0xD5ECD8", VA = "0xD5ECD8")]
		public void RandomizeStartAnimationFrame()
		{
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0xD5F214", Offset = "0xD5F214", VA = "0xD5F214")]
		public void GetStartPos()
		{
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0xD5FCA0", Offset = "0xD5FCA0", VA = "0xD5FCA0")]
		public Vector3 findWaypoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0xD5F970", Offset = "0xD5F970", VA = "0xD5F970")]
		public void RayCastToPushAwayFromObstacles()
		{
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0xD5FE30", Offset = "0xD5FE30", VA = "0xD5FE30")]
		public void RayCastToPushAwayFromObstaclesCheckForCollision()
		{
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0xD5FD90", Offset = "0xD5FD90", VA = "0xD5FD90")]
		public void RotateScanner()
		{
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0xD60160", Offset = "0xD60160", VA = "0xD60160")]
		public bool Avoidance()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0xD5F7F0", Offset = "0xD5F7F0", VA = "0xD5F7F0")]
		public void ForwardMovement()
		{
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0xD5F58C", Offset = "0xD5F58C", VA = "0xD5F58C")]
		public void RotationBasedOnWaypointOrAvoidance()
		{
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0xD5F458", Offset = "0xD5F458", VA = "0xD5F458")]
		public void CheckForDistanceToWaypoint()
		{
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0xD60AFC", Offset = "0xD60AFC", VA = "0xD60AFC")]
		public void CheckIfThisShouldTriggerNewFlockWaypoint()
		{
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0xD60A4C", Offset = "0xD60A4C", VA = "0xD60A4C")]
		public static float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0xD5F9B4", Offset = "0xD5F9B4", VA = "0xD5F9B4")]
		public void SetAnimationSpeed()
		{
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0xD5F028", Offset = "0xD5F028", VA = "0xD5F028")]
		public void Wander(float delay)
		{
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0xD5F0FC", Offset = "0xD5F0FC", VA = "0xD5F0FC")]
		public void SetRandomWaypoint()
		{
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0xD60CC4", Offset = "0xD60CC4", VA = "0xD60CC4")]
		public SchoolChild()
		{
		}
	}
	[Token(Token = "0x20001B9")]
	public class SchoolController : MonoBehaviour
	{
		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SpawnPool _childPool;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Transform> _childPrefab;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool _groupChildToNewTransform;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform _groupTransform;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string _groupName;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool _groupChildToSchool;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int _childAmount;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float _spawnSphere;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float _spawnSphereDepth;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float _spawnSphereHeight;

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float _childSpeedMultipler;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float _minSpeed;

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float _maxSpeed;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AnimationCurve _speedCurveMultiplier;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float _minScale;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float _maxScale;

		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float _minDamping;

		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float _maxDamping;

		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float _waypointDistance;

		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float _minAnimationSpeed;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float _maxAnimationSpeed;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float _randomPositionTimerMax;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float _randomPositionTimerMin;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float _acceleration;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float _brake;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float _positionSphere;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float _positionSphereDepth;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float _positionSphereHeight;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool _childTriggerPos;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		public bool _forceChildWaypoints;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		public bool _autoRandomPosition;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float _forcedRandomDelay;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float _schoolSpeed;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public List<SchoolChild> _roamers;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Vector3 _posBuffer;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public Vector3 _posOffset;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public bool _avoidance;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float _avoidAngle;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float _avoidDistance;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float _avoidSpeed;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float _stopDistance;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public float _stopSpeedMultiplier;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public LayerMask _avoidanceMask;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public bool _push;

		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float _pushDistance;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public float _pushForce;

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public SchoolBubbles _bubbles;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public int _updateDivisor;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public float _newDelta;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public int _updateCounter;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public int _activeChildren;

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0xD60CE8", Offset = "0xD60CE8", VA = "0xD60CE8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0xD60FC0", Offset = "0xD60FC0", VA = "0xD60FC0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0xD60FC4", Offset = "0xD60FC4", VA = "0xD60FC4")]
		public void Update()
		{
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0xD610CC", Offset = "0xD610CC", VA = "0xD610CC")]
		public void InstantiateGroup()
		{
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0xD60DFC", Offset = "0xD60DFC", VA = "0xD60DFC")]
		public void AddFish(int amount)
		{
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0xD61228", Offset = "0xD61228", VA = "0xD61228")]
		public void AddChildToParent(Transform obj)
		{
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0xD61288", Offset = "0xD61288", VA = "0xD61288")]
		public void RemoveFish(int amount)
		{
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0xD61038", Offset = "0xD61038", VA = "0xD61038")]
		public void UpdateFishAmount()
		{
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0xD61350", Offset = "0xD61350", VA = "0xD61350")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0xD60B20", Offset = "0xD60B20", VA = "0xD60B20")]
		public void SetRandomWaypointPosition()
		{
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0xD61488", Offset = "0xD61488", VA = "0xD61488")]
		public void AutoRandomWaypointPosition()
		{
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0xD60FB4", Offset = "0xD60FB4", VA = "0xD60FB4")]
		public float RandomWaypointTime()
		{
			return default(float);
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0xD61514", Offset = "0xD61514", VA = "0xD61514")]
		public void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0xD61788", Offset = "0xD61788", VA = "0xD61788")]
		public SchoolController()
		{
		}
	}
	[Token(Token = "0x20001BA")]
	public class SubtitleTest : MonoBehaviour
	{
		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ToggleLanguage toggleLanguage;

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0xD13F80", Offset = "0xD13F80", VA = "0xD13F80")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0xD13F84", Offset = "0xD13F84", VA = "0xD13F84")]
		private void InitUI()
		{
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0xD140D0", Offset = "0xD140D0", VA = "0xD140D0")]
		public SubtitleTest()
		{
		}
	}
	[Token(Token = "0x20001BB")]
	public class PopDissolve : MonoBehaviour
	{
		[Token(Token = "0x2000476")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0D60", Offset = "0xAC0D60")]
		private sealed class <HideRenderers>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PopDissolve <>4__this;

			[Token(Token = "0x170002D7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DDA")]
				[Address(RVA = "0x1FD7158", Offset = "0x1FD7158", VA = "0x1FD7158", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DDC")]
				[Address(RVA = "0x1FD71C0", Offset = "0x1FD71C0", VA = "0x1FD71C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DD7")]
			[Address(RVA = "0x1FD6A00", Offset = "0x1FD6A00", VA = "0x1FD6A00")]
			[DebuggerHidden]
			public <HideRenderers>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001DD8")]
			[Address(RVA = "0x1FD7048", Offset = "0x1FD7048", VA = "0x1FD7048", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DD9")]
			[Address(RVA = "0x1FD704C", Offset = "0x1FD704C", VA = "0x1FD704C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DDB")]
			[Address(RVA = "0x1FD7160", Offset = "0x1FD7160", VA = "0x1FD7160", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000477")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0D70", Offset = "0xAC0D70")]
		private sealed class <DissolveFX>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float init;

			[Token(Token = "0x4001D41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float target;

			[Token(Token = "0x4001D42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float speed;

			[Token(Token = "0x4001D43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public PopDissolve <>4__this;

			[Token(Token = "0x4001D44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <inital>5__2;

			[Token(Token = "0x4001D45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <goal>5__3;

			[Token(Token = "0x4001D46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <currentTime>5__4;

			[Token(Token = "0x4001D47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <duration>5__5;

			[Token(Token = "0x170002D9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DE0")]
				[Address(RVA = "0x1FD6FD8", Offset = "0x1FD6FD8", VA = "0x1FD6FD8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DE2")]
				[Address(RVA = "0x1FD7040", Offset = "0x1FD7040", VA = "0x1FD7040", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DDD")]
			[Address(RVA = "0x1FD6ACC", Offset = "0x1FD6ACC", VA = "0x1FD6ACC")]
			[DebuggerHidden]
			public <DissolveFX>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001DDE")]
			[Address(RVA = "0x1FD6E38", Offset = "0x1FD6E38", VA = "0x1FD6E38", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DDF")]
			[Address(RVA = "0x1FD6E3C", Offset = "0x1FD6E3C", VA = "0x1FD6E3C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DE1")]
			[Address(RVA = "0x1FD6FE0", Offset = "0x1FD6FE0", VA = "0x1FD6FE0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000478")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0D80", Offset = "0xAC0D80")]
		private sealed class <ChangeRenderers>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4001D4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PopDissolve <>4__this;

			[Token(Token = "0x4001D4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool state;

			[Token(Token = "0x170002DB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DE6")]
				[Address(RVA = "0x1FD6DC8", Offset = "0x1FD6DC8", VA = "0x1FD6DC8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DE8")]
				[Address(RVA = "0x1FD6E30", Offset = "0x1FD6E30", VA = "0x1FD6E30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DE3")]
			[Address(RVA = "0x1FD6B98", Offset = "0x1FD6B98", VA = "0x1FD6B98")]
			[DebuggerHidden]
			public <ChangeRenderers>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001DE4")]
			[Address(RVA = "0x1FD6CA8", Offset = "0x1FD6CA8", VA = "0x1FD6CA8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DE5")]
			[Address(RVA = "0x1FD6CAC", Offset = "0x1FD6CAC", VA = "0x1FD6CAC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DE7")]
			[Address(RVA = "0x1FD6DD0", Offset = "0x1FD6DD0", VA = "0x1FD6DD0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000479")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0D90", Offset = "0xAC0D90")]
		private sealed class <PlayAnimation>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float sec;

			[Token(Token = "0x4001D50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PopDissolve <>4__this;

			[Token(Token = "0x4001D51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string clip;

			[Token(Token = "0x170002DD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DEC")]
				[Address(RVA = "0x1FD7298", Offset = "0x1FD7298", VA = "0x1FD7298", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DEE")]
				[Address(RVA = "0x1FD7300", Offset = "0x1FD7300", VA = "0x1FD7300", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DE9")]
			[Address(RVA = "0x1FD6C6C", Offset = "0x1FD6C6C", VA = "0x1FD6C6C")]
			[DebuggerHidden]
			public <PlayAnimation>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001DEA")]
			[Address(RVA = "0x1FD71C8", Offset = "0x1FD71C8", VA = "0x1FD71C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DEB")]
			[Address(RVA = "0x1FD71CC", Offset = "0x1FD71CC", VA = "0x1FD71CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DED")]
			[Address(RVA = "0x1FD72A0", Offset = "0x1FD72A0", VA = "0x1FD72A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject popAvatar;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SkinnedMeshRenderer[] dissolveMats;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool isActive;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator animator;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SkinnedMeshRenderer[] restRenderers;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SkinnedMeshRenderer[] allRenderers;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float speed;

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x1FD66D8", Offset = "0x1FD66D8", VA = "0x1FD66D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x1FD64B0", Offset = "0x1FD64B0", VA = "0x1FD64B0")]
		public void CheckTeleport(bool state)
		{
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x1FD676C", Offset = "0x1FD676C", VA = "0x1FD676C")]
		public void HidePopRenderers()
		{
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x1FD6984", Offset = "0x1FD6984", VA = "0x1FD6984")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACB198", Offset = "0xACB198")]
		private IEnumerator HideRenderers()
		{
			return null;
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x1FD6A2C", Offset = "0x1FD6A2C", VA = "0x1FD6A2C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACB1FC", Offset = "0xACB1FC")]
		private IEnumerator DissolveFX(float init, float target, float speed)
		{
			return null;
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x1FD6AF8", Offset = "0x1FD6AF8", VA = "0x1FD6AF8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACB260", Offset = "0xACB260")]
		private IEnumerator ChangeRenderers(float delay, string clip, bool state)
		{
			return null;
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0x1FD6BC4", Offset = "0x1FD6BC4", VA = "0x1FD6BC4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACB2C4", Offset = "0xACB2C4")]
		private IEnumerator PlayAnimation(string clip, float sec)
		{
			return null;
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x1FD6798", Offset = "0x1FD6798", VA = "0x1FD6798")]
		public void TeleportOut()
		{
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x1FD6844", Offset = "0x1FD6844", VA = "0x1FD6844")]
		public void TeleportIn()
		{
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x1FD6C98", Offset = "0x1FD6C98", VA = "0x1FD6C98")]
		public PopDissolve()
		{
		}
	}
	[Token(Token = "0x20001BC")]
	public class Achievements : MonoBehaviour
	{
		[Token(Token = "0x200047A")]
		public struct GC_Achievement
		{
			[Token(Token = "0x4001D52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string API_Name;

			[Token(Token = "0x4001D53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool isUnlockedLocal;

			[Token(Token = "0x4001D54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
			public bool isUnlockedRemote;
		}

		[Token(Token = "0x200047B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0DA0", Offset = "0xAC0DA0")]
		private sealed class <CheckFish>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string bcid;

			[Token(Token = "0x4001D58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FishTypeSO.Grade grade;

			[Token(Token = "0x4001D59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Achievements <>4__this;

			[Token(Token = "0x170002DF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DF2")]
				[Address(RVA = "0xD68CC0", Offset = "0xD68CC0", VA = "0xD68CC0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DF4")]
				[Address(RVA = "0xD68D28", Offset = "0xD68D28", VA = "0xD68D28", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DEF")]
			[Address(RVA = "0xD6851C", Offset = "0xD6851C", VA = "0xD6851C")]
			[DebuggerHidden]
			public <CheckFish>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001DF0")]
			[Address(RVA = "0xD68A88", Offset = "0xD68A88", VA = "0xD68A88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DF1")]
			[Address(RVA = "0xD68A8C", Offset = "0xD68A8C", VA = "0xD68A8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DF3")]
			[Address(RVA = "0xD68CC8", Offset = "0xD68CC8", VA = "0xD68CC8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200047C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0DB0", Offset = "0xAC0DB0")]
		private sealed class <CheckMissions>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MissionSO mission;

			[Token(Token = "0x170002E1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DF8")]
				[Address(RVA = "0xD68FFC", Offset = "0xD68FFC", VA = "0xD68FFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DFA")]
				[Address(RVA = "0xD69064", Offset = "0xD69064", VA = "0xD69064", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DF5")]
			[Address(RVA = "0xD68548", Offset = "0xD68548", VA = "0xD68548")]
			[DebuggerHidden]
			public <CheckMissions>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001DF6")]
			[Address(RVA = "0xD68D30", Offset = "0xD68D30", VA = "0xD68D30", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DF7")]
			[Address(RVA = "0xD68D34", Offset = "0xD68D34", VA = "0xD68D34", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DF9")]
			[Address(RVA = "0xD69004", Offset = "0xD69004", VA = "0xD69004", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200047D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0DC0", Offset = "0xAC0DC0")]
		private sealed class <CheckRecipes>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CraftingRecipesSO recipe;

			[Token(Token = "0x4001D60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Achievements <>4__this;

			[Token(Token = "0x170002E3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DFE")]
				[Address(RVA = "0xD69244", Offset = "0xD69244", VA = "0xD69244", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E00")]
				[Address(RVA = "0xD692AC", Offset = "0xD692AC", VA = "0xD692AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DFB")]
			[Address(RVA = "0xD68574", Offset = "0xD68574", VA = "0xD68574")]
			[DebuggerHidden]
			public <CheckRecipes>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001DFC")]
			[Address(RVA = "0xD6906C", Offset = "0xD6906C", VA = "0xD6906C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DFD")]
			[Address(RVA = "0xD69070", Offset = "0xD69070", VA = "0xD69070", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DFF")]
			[Address(RVA = "0xD6924C", Offset = "0xD6924C", VA = "0xD6924C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Achievements instance;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FishTypeSO[] World1Fishes;

		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FishTypeSO[] World2Fishes;

		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CraftingRecipesSO[] Recipes;

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0xD680A4", Offset = "0xD680A4", VA = "0xD680A4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0xD681E8", Offset = "0xD681E8", VA = "0xD681E8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0xD682CC", Offset = "0xD682CC", VA = "0xD682CC")]
		private void FishCaught(FpFish fish, bool isCheating)
		{
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0xD683B0", Offset = "0xD683B0", VA = "0xD683B0")]
		private void MissionCompleted(MissionSO mission)
		{
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0xD68458", Offset = "0xD68458", VA = "0xD68458")]
		private void ItemCrafted(CraftingRecipesSO recipe)
		{
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0xD68310", Offset = "0xD68310", VA = "0xD68310")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACB328", Offset = "0xACB328")]
		private IEnumerator CheckFish(string bcid, FishTypeSO.Grade grade, int stars = 0)
		{
			return null;
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0xD683DC", Offset = "0xD683DC", VA = "0xD683DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACB38C", Offset = "0xACB38C")]
		private IEnumerator CheckMissions(MissionSO mission)
		{
			return null;
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0xD68484", Offset = "0xD68484", VA = "0xD68484")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACB3F0", Offset = "0xACB3F0")]
		private IEnumerator CheckRecipes(CraftingRecipesSO recipe)
		{
			return null;
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0xD681E4", Offset = "0xD681E4", VA = "0xD681E4")]
		private void CheckRemoteNotUnlocked()
		{
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0xD685A0", Offset = "0xD685A0", VA = "0xD685A0")]
		private bool CheckWorld1FishCaught()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0xD68694", Offset = "0xD68694", VA = "0xD68694")]
		private bool CheckWorld2FishCaught()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0xD68788", Offset = "0xD68788", VA = "0xD68788")]
		private bool CheckWorld1FishStars()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0xD6888C", Offset = "0xD6888C", VA = "0xD6888C")]
		private bool CheckWorld2FishStars()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0xD68990", Offset = "0xD68990", VA = "0xD68990")]
		private bool CheckAllRecipes()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0xD68A80", Offset = "0xD68A80", VA = "0xD68A80")]
		public Achievements()
		{
		}
	}
	[Token(Token = "0x20001BD")]
	public class AcitvateDebugOptions : MonoBehaviour
	{
		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] objectsToDisable;

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0xD692B4", Offset = "0xD692B4", VA = "0xD692B4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0xD693AC", Offset = "0xD693AC", VA = "0xD693AC")]
		public AcitvateDebugOptions()
		{
		}
	}
	[Token(Token = "0x20001BE")]
	public class ActivateDirections : MonoBehaviour
	{
		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ArrowSnapCollider[] arrows;

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0xD693B4", Offset = "0xD693B4", VA = "0xD693B4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0xD694B0", Offset = "0xD694B0", VA = "0xD694B0")]
		public ActivateDirections()
		{
		}
	}
	[Token(Token = "0x20001BF")]
	public class AmbientAnimationController : MonoBehaviour
	{
		[Token(Token = "0x200047E")]
		public enum SelectionMethod
		{
			[Token(Token = "0x4001D62")]
			Random,
			[Token(Token = "0x4001D63")]
			Sequential
		}

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LocationSO location;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GameObject> ambientAnimations;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SelectionMethod selectionMethod;

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0xD6A444", Offset = "0xD6A444", VA = "0xD6A444")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0xD6A5DC", Offset = "0xD6A5DC", VA = "0xD6A5DC")]
		private int ReadAmbientAnimationIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0xD6A6E8", Offset = "0xD6A6E8", VA = "0xD6A6E8")]
		private void WriteAmbientAnimationIndex(int idx)
		{
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0xD6A7F4", Offset = "0xD6A7F4", VA = "0xD6A7F4")]
		public AmbientAnimationController()
		{
		}
	}
	[Token(Token = "0x20001C0")]
	public class AquariumController : MonoBehaviour
	{
		[Token(Token = "0x200047F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0DD0", Offset = "0xAC0DD0")]
		private sealed class <Reset>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AquariumController <>4__this;

			[Token(Token = "0x4001D67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AsyncOperation <unload>5__2;

			[Token(Token = "0x170002E5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E04")]
				[Address(RVA = "0xD6C5CC", Offset = "0xD6C5CC", VA = "0xD6C5CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E06")]
				[Address(RVA = "0xD6C634", Offset = "0xD6C634", VA = "0xD6C634", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E01")]
			[Address(RVA = "0xD6BED4", Offset = "0xD6BED4", VA = "0xD6BED4")]
			[DebuggerHidden]
			public <Reset>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001E02")]
			[Address(RVA = "0xD6C40C", Offset = "0xD6C40C", VA = "0xD6C40C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E03")]
			[Address(RVA = "0xD6C410", Offset = "0xD6C410", VA = "0xD6C410", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E05")]
			[Address(RVA = "0xD6C5D4", Offset = "0xD6C5D4", VA = "0xD6C5D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000480")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0DE0", Offset = "0xAC0DE0")]
		private sealed class <ResetFishes>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AquariumController <>4__this;

			[Token(Token = "0x4001D6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AsyncOperation <unload>5__2;

			[Token(Token = "0x170002E7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E0A")]
				[Address(RVA = "0xD6C76C", Offset = "0xD6C76C", VA = "0xD6C76C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E0C")]
				[Address(RVA = "0xD6C7D4", Offset = "0xD6C7D4", VA = "0xD6C7D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E07")]
			[Address(RVA = "0xD6BF00", Offset = "0xD6BF00", VA = "0xD6BF00")]
			[DebuggerHidden]
			public <ResetFishes>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6001E08")]
			[Address(RVA = "0xD6C63C", Offset = "0xD6C63C", VA = "0xD6C63C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E09")]
			[Address(RVA = "0xD6C640", Offset = "0xD6C640", VA = "0xD6C640", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E0B")]
			[Address(RVA = "0xD6C774", Offset = "0xD6C774", VA = "0xD6C774", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000481")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0DF0", Offset = "0xAC0DF0")]
		private sealed class <LoadPreset>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AquariumController <>4__this;

			[Token(Token = "0x4001D6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int index;

			[Token(Token = "0x4001D70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AquariumPreset <preset>5__2;

			[Token(Token = "0x170002E9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E10")]
				[Address(RVA = "0xD6C39C", Offset = "0xD6C39C", VA = "0xD6C39C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002EA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E12")]
				[Address(RVA = "0xD6C404", Offset = "0xD6C404", VA = "0xD6C404", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E0D")]
			[Address(RVA = "0xD6BF2C", Offset = "0xD6BF2C", VA = "0xD6BF2C")]
			[DebuggerHidden]
			public <LoadPreset>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6001E0E")]
			[Address(RVA = "0xD6C004", Offset = "0xD6C004", VA = "0xD6C004", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E0F")]
			[Address(RVA = "0xD6C008", Offset = "0xD6C008", VA = "0xD6C008", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E11")]
			[Address(RVA = "0xD6C3A4", Offset = "0xD6C3A4", VA = "0xD6C3A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AquariumController Instance;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AquariumControllerUI aquaCtrlUI;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AquariumControllerMinimap aquaCtrlMinimap;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BoidManager boidManager;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DecorationSlotController[] decorationSlots;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public DecorationSO[] decorations;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform diorama;

		[Token(Token = "0x4000B2E")]
		public const int maxNumberFish = 40;

		[Token(Token = "0x4000B2F")]
		public const int maxNumberDecos = 30;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public SpawnPool decoPool;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int presetIndex;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool resetComplete;

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0xD6A940", Offset = "0xD6A940", VA = "0xD6A940")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0xD6AF48", Offset = "0xD6AF48", VA = "0xD6AF48")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0xD6B458", Offset = "0xD6B458", VA = "0xD6B458")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0xD6B564", Offset = "0xD6B564", VA = "0xD6B564")]
		private void UI_AquariumController_OnAquariumPresetSelected(int index)
		{
		}

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0xD6B6E4", Offset = "0xD6B6E4", VA = "0xD6B6E4")]
		private void UI_AquariumController_OnAquariumFishSpawned(FishTypeSO fish, int number)
		{
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0xD6B96C", Offset = "0xD6B96C", VA = "0xD6B96C")]
		private void UI_AquariumController_OnAquariumFishesReset()
		{
		}

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0xD6BAB4", Offset = "0xD6BAB4", VA = "0xD6BAB4")]
		public void UI_AquariumController_OnAquariumDecoChanged(DecorationSO decoration, int slotIndex)
		{
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0xD6BD1C", Offset = "0xD6BD1C", VA = "0xD6BD1C")]
		private void UI_AquariumController_OnAquariumDecosReset()
		{
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0xD6B898", Offset = "0xD6B898", VA = "0xD6B898")]
		private void CreateFishSchool(string fishBCID, int amount)
		{
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0xD6BE58", Offset = "0xD6BE58", VA = "0xD6BE58")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACB454", Offset = "0xACB454")]
		private IEnumerator Reset()
		{
			return null;
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0xD6BA38", Offset = "0xD6BA38", VA = "0xD6BA38")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACB4B8", Offset = "0xACB4B8")]
		private IEnumerator ResetFishes()
		{
			return null;
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0xD6B4D8", Offset = "0xD6B4D8", VA = "0xD6B4D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACB51C", Offset = "0xACB51C")]
		private IEnumerator LoadPreset(int index)
		{
			return null;
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0xD6BF58", Offset = "0xD6BF58", VA = "0xD6BF58")]
		private DecorationSO GetDecoSOByBCID(string decoBCID)
		{
			return null;
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0xD6B5F8", Offset = "0xD6B5F8", VA = "0xD6B5F8")]
		private void Save()
		{
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0xD6BFFC", Offset = "0xD6BFFC", VA = "0xD6BFFC")]
		public AquariumController()
		{
		}
	}
	[Token(Token = "0x20001C1")]
	public enum ToolMode
	{
		[Token(Token = "0x4000B34")]
		select,
		[Token(Token = "0x4000B35")]
		place
	}
	[Token(Token = "0x20001C2")]
	public class AquariumControllerMinimap : MonoBehaviour
	{
		[Token(Token = "0x2000482")]
		public delegate void AquariumDecoChangedAction(DecorationSO deco, int slotIndex);

		[Serializable]
		[Token(Token = "0x2000483")]
		public struct PlacedDeco
		{
			[Token(Token = "0x4001D71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public DecorationSO deco;

			[Token(Token = "0x4001D72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public DecorationSlotController placedSlotCtrl;

			[Token(Token = "0x4001D73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int[] footprint;
		}

		[Token(Token = "0x2000484")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0E00", Offset = "0xAC0E00")]
		private sealed class <DespawnBubbles>d__55 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AquariumControllerMinimap <>4__this;

			[Token(Token = "0x4001D77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform bubbles;

			[Token(Token = "0x170002EB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E1A")]
				[Address(RVA = "0xD6F3CC", Offset = "0xD6F3CC", VA = "0xD6F3CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002EC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E1C")]
				[Address(RVA = "0xD6F434", Offset = "0xD6F434", VA = "0xD6F434", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E17")]
			[Address(RVA = "0xD6EED0", Offset = "0xD6EED0", VA = "0xD6EED0")]
			[DebuggerHidden]
			public <DespawnBubbles>d__55(int <>1__state)
			{
			}

			[Token(Token = "0x6001E18")]
			[Address(RVA = "0xD6F308", Offset = "0xD6F308", VA = "0xD6F308", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E19")]
			[Address(RVA = "0xD6F30C", Offset = "0xD6F30C", VA = "0xD6F30C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E1B")]
			[Address(RVA = "0xD6F3D4", Offset = "0xD6F3D4", VA = "0xD6F3D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000485")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0E10", Offset = "0xAC0E10")]
		private sealed class <SetGhostInAirPosition>d__61 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AquariumControllerMinimap <>4__this;

			[Token(Token = "0x170002ED")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E20")]
				[Address(RVA = "0xD6F658", Offset = "0xD6F658", VA = "0xD6F658", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002EE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E22")]
				[Address(RVA = "0xD6F6C0", Offset = "0xD6F6C0", VA = "0xD6F6C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E1D")]
			[Address(RVA = "0xD6F100", Offset = "0xD6F100", VA = "0xD6F100")]
			[DebuggerHidden]
			public <SetGhostInAirPosition>d__61(int <>1__state)
			{
			}

			[Token(Token = "0x6001E1E")]
			[Address(RVA = "0xD6F43C", Offset = "0xD6F43C", VA = "0xD6F43C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E1F")]
			[Address(RVA = "0xD6F440", Offset = "0xD6F440", VA = "0xD6F440", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E21")]
			[Address(RVA = "0xD6F660", Offset = "0xD6F660", VA = "0xD6F660", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AquariumControllerMinimap instance;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AquariumController aquaCtrl;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AquariumControllerUI aquaCtrlUI;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button[] decoPlacementBtns;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image[] decoPlacementBtnOutlines;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int rowLength;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Image[] decoPlacementIcons;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform mapGhost;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float mapGhostScale;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 ghostOrigin;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public DecorationSO selectedDeco;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int[] currentFootprint;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int currentFootprintSize;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool currentFootprintIsValid;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int pointerSlotPos;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public XRBaseController editingController;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Color noFootprintColor;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Color occupiedFootprintColor;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Color validFootprintColor;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Color invalidFootprintColor;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private ToolMode mode;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private PlacedDeco placedDecoAtPointerPos;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DecorationSO decoAtPointerPos;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool awaitTriggerDown;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private Material ghostMaterial;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Renderer[] ghostRenderers;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private List<Material[]> ghostMaterialArrays;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Tween ghostMoveTween;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Tween ghostScaleTween;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public SpawnPool vfxPool;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public Transform placeDecoBubbles;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private List<PlacedDeco> placedDecos;

		[Token(Token = "0x14000015")]
		public static event AquariumDecoChangedAction OnAquariumDecoChanged
		{
			[Token(Token = "0x6000AF5")]
			[Address(RVA = "0xD6ADC4", Offset = "0xD6ADC4", VA = "0xD6ADC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACB580", Offset = "0xACB580")]
			add
			{
			}
			[Token(Token = "0x6000AF6")]
			[Address(RVA = "0xD6B2E8", Offset = "0xD6B2E8", VA = "0xD6B2E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACB590", Offset = "0xACB590")]
			remove
			{
			}
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0xD6C7DC", Offset = "0xD6C7DC", VA = "0xD6C7DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0xD6CA68", Offset = "0xD6CA68", VA = "0xD6CA68")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0xD6CADC", Offset = "0xD6CADC", VA = "0xD6CADC")]
		private void OnDisble()
		{
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0xD6CB50", Offset = "0xD6CB50", VA = "0xD6CB50")]
		private void OnTrigger(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0xD6CECC", Offset = "0xD6CECC", VA = "0xD6CECC")]
		private void CheckCanPlaceSelectedDeco()
		{
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0xD6D120", Offset = "0xD6D120", VA = "0xD6D120")]
		private void PlaceSelectedDeco(int placementIdx)
		{
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0xD6CD80", Offset = "0xD6CD80", VA = "0xD6CD80")]
		private void OnDecoPlacementSelected(int placementIdx)
		{
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0xD6DC08", Offset = "0xD6DC08", VA = "0xD6DC08")]
		public Vector3 GetUiSlotPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0xD6DC58", Offset = "0xD6DC58", VA = "0xD6DC58")]
		public Vector3 GetMinimapPosition(DecorationSlotController decoSlot)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0xD6DB2C", Offset = "0xD6DB2C", VA = "0xD6DB2C")]
		private int GetUiSlotIndex(DecorationSlotController decoSlot)
		{
			return default(int);
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0xD6DC80", Offset = "0xD6DC80", VA = "0xD6DC80")]
		internal void DecoSlotPointerEnter(int uiDecoSlotIndex)
		{
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0xD6D08C", Offset = "0xD6D08C", VA = "0xD6D08C")]
		private void Selection(int uiDecoSlotIndex)
		{
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0xD6DCA0", Offset = "0xD6DCA0", VA = "0xD6DCA0")]
		private void Placement(int uiDecoSlotIndex)
		{
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0xD6E4F4", Offset = "0xD6E4F4", VA = "0xD6E4F4")]
		internal void DecoSlotPointerExit(int uiDecoSlotIndex)
		{
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0xD6D77C", Offset = "0xD6D77C", VA = "0xD6D77C")]
		public void SetMapGhost(DecorationSO deco, Vector3 ghostOriginPos)
		{
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0xD6CF40", Offset = "0xD6CF40", VA = "0xD6CF40")]
		private void RemoveMapGhostAnimated()
		{
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0xD6D1D8", Offset = "0xD6D1D8", VA = "0xD6D1D8")]
		private void RemoveMapGhost()
		{
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0xD6E940", Offset = "0xD6E940", VA = "0xD6E940")]
		public void AddPlacedDeco(DecorationSlotController decorationSlotController)
		{
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0xD6EBC0", Offset = "0xD6EBC0", VA = "0xD6EBC0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACB5A0", Offset = "0xACB5A0")]
		private IEnumerator DespawnBubbles(Transform bubbles)
		{
			return null;
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0xD6E1E4", Offset = "0xD6E1E4", VA = "0xD6E1E4")]
		private int[] GetFootprint(int startIndex, int numSlots)
		{
			return null;
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0xD6DDC8", Offset = "0xD6DDC8", VA = "0xD6DDC8")]
		private bool CheckSlotIsFree(int uiDecoSlotIndex, bool setPlacedDecoAtPointerPos = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0xD6EEFC", Offset = "0xD6EEFC", VA = "0xD6EEFC")]
		public void RemovePlacedDeco(DecorationSlotController decorationSlotController)
		{
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0xD6D720", Offset = "0xD6D720", VA = "0xD6D720")]
		public void SetSelectedDeco(DecorationSO deco)
		{
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0xD6EBA0", Offset = "0xD6EBA0", VA = "0xD6EBA0")]
		private int GetFootprintSize(DecorationSO.DecorationType size)
		{
			return default(int);
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0xD6F084", Offset = "0xD6F084", VA = "0xD6F084")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACB604", Offset = "0xACB604")]
		private IEnumerator SetGhostInAirPosition()
		{
			return null;
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0xD6E0A8", Offset = "0xD6E0A8", VA = "0xD6E0A8")]
		private void SetFootprintHighlight()
		{
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0xD6DF74", Offset = "0xD6DF74", VA = "0xD6DF74")]
		private void UpdateAllHighlights()
		{
		}

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0xD6E584", Offset = "0xD6E584", VA = "0xD6E584")]
		private void SetGhostMaterials()
		{
		}

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0xD6E880", Offset = "0xD6E880", VA = "0xD6E880")]
		private void ResetGhostMaterials()
		{
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0xD6F12C", Offset = "0xD6F12C", VA = "0xD6F12C")]
		public int GetNumPlacedDecos([Optional] DecorationSO deco)
		{
			return default(int);
		}

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0xD6E764", Offset = "0xD6E764", VA = "0xD6E764")]
		private void SetControllerActivation(XRBaseController editingController, bool state)
		{
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0xD6F2B4", Offset = "0xD6F2B4", VA = "0xD6F2B4")]
		public AquariumControllerMinimap()
		{
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0xD6F2D8", Offset = "0xD6F2D8", VA = "0xD6F2D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACB668", Offset = "0xACB668")]
		private void <SetMapGhost>b__51_0()
		{
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0xD6F304", Offset = "0xD6F304", VA = "0xD6F304")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACB678", Offset = "0xACB678")]
		private void <RemoveMapGhostAnimated>b__52_0()
		{
		}
	}
	[Token(Token = "0x20001C3")]
	public class AquariumControllerUI : MonoBehaviour
	{
		[Token(Token = "0x2000486")]
		public delegate void AquariumPresetSelectedAction(int index);

		[Token(Token = "0x2000487")]
		public delegate void AquariumFishSpawnedAction(FishTypeSO fish, int amount);

		[Token(Token = "0x2000488")]
		public delegate void AquariumFishesResetAction();

		[Token(Token = "0x2000489")]
		public delegate void AquariumDecosResetAction();

		[Token(Token = "0x200048A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0E20", Offset = "0xAC0E20")]
		private sealed class <>c__DisplayClass57_0
		{
			[Token(Token = "0x4001D7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FishTypeSO fish;

			[Token(Token = "0x4001D7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AquariumControllerUI <>4__this;

			[Token(Token = "0x6001E33")]
			[Address(RVA = "0xD70594", Offset = "0xD70594", VA = "0xD70594")]
			public <>c__DisplayClass57_0()
			{
			}

			[Token(Token = "0x6001E34")]
			[Address(RVA = "0xD73E98", Offset = "0xD73E98", VA = "0xD73E98")]
			internal void <Start>b__0()
			{
			}
		}

		[Token(Token = "0x200048B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0E30", Offset = "0xAC0E30")]
		private sealed class <>c__DisplayClass57_1
		{
			[Token(Token = "0x4001D7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Toggle toggle;

			[Token(Token = "0x4001D7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AquariumControllerUI <>4__this;

			[Token(Token = "0x6001E35")]
			[Address(RVA = "0xD70874", Offset = "0xD70874", VA = "0xD70874")]
			public <>c__DisplayClass57_1()
			{
			}

			[Token(Token = "0x6001E36")]
			[Address(RVA = "0xD73EB8", Offset = "0xD73EB8", VA = "0xD73EB8")]
			internal void <Start>b__1(bool <p0>)
			{
			}
		}

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject UI;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AquariumControllerMinimap aquaCtrlMinimap;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshProUGUI aquaPresetName;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMeshProUGUI capacityText;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TextMeshProUGUI decoCapacityText;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button nextAquaPresetButton;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button previousAquaPresetButton;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly int numAquaPresets;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Toggle fishesTabToggle;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Toggle decosTabToggle;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Toggle interiorsTabToggle;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject fishesTab;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject decosTab;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject interiorsTab;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private GameObject fishButtonPrefab;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private GameObject decoButtonPrefab;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Toggle[] interiorSelectionToggles;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private GameObject[] interiors;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Transform fishesMenu;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Button resetFishesBtn;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Button resetDecosBtn;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Dictionary<FishTypeSO, UI_AquariumFishButton> fishBtnDict;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Dictionary<DecorationSO, UI_AquariumDecorationButton> decoBtnDict;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private UI_PageDotController m_FishDotController;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private GestureScrollRect m_gestureScrollRect;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private Button m_nextButtonFish;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private Button m_prevButtonFish;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float m_MoveDuration;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private float m_ContantSize;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private int fishRemovalCounter;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public UI_AquariumDecoration decoPlacementPanel;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private UI_PageDotController m_DecoDotController;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private Button m_nextButtonDeco;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private Button m_prevButtonDeco;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private bool lastPanelWasDecos;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private List<UI_AquariumDecorationButton> activeDecoButtons;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public int currentDecoPage;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private int numActiveDecoButtons;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC4AC0", Offset = "0xAC4AC0")]
		[SerializeField]
		private Toggle debugToggle;

		[Token(Token = "0x14000016")]
		public static event AquariumPresetSelectedAction OnAquariumPresetSelected
		{
			[Token(Token = "0x6000B19")]
			[Address(RVA = "0xD6AB64", Offset = "0xD6AB64", VA = "0xD6AB64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACB688", Offset = "0xACB688")]
			add
			{
			}
			[Token(Token = "0x6000B1A")]
			[Address(RVA = "0xD6B0C4", Offset = "0xD6B0C4", VA = "0xD6B0C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACB698", Offset = "0xACB698")]
			remove
			{
			}
		}

		[Token(Token = "0x14000017")]
		public static event AquariumFishSpawnedAction OnAquariumFishSpawned
		{
			[Token(Token = "0x6000B1B")]
			[Address(RVA = "0xD6AC2C", Offset = "0xD6AC2C", VA = "0xD6AC2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACB6A8", Offset = "0xACB6A8")]
			add
			{
			}
			[Token(Token = "0x6000B1C")]
			[Address(RVA = "0xD6B178", Offset = "0xD6B178", VA = "0xD6B178")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACB6B8", Offset = "0xACB6B8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000018")]
		public static event AquariumFishesResetAction OnAquariumFishesReset
		{
			[Token(Token = "0x6000B1D")]
			[Address(RVA = "0xD6ACF8", Offset = "0xD6ACF8", VA = "0xD6ACF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACB6C8", Offset = "0xACB6C8")]
			add
			{
			}
			[Token(Token = "0x6000B1E")]
			[Address(RVA = "0xD6B230", Offset = "0xD6B230", VA = "0xD6B230")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACB6D8", Offset = "0xACB6D8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000019")]
		public static event AquariumDecosResetAction OnAquariumDecosReset
		{
			[Token(Token = "0x6000B1F")]
			[Address(RVA = "0xD6AE90", Offset = "0xD6AE90", VA = "0xD6AE90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACB6E8", Offset = "0xACB6E8")]
			add
			{
			}
			[Token(Token = "0x6000B20")]
			[Address(RVA = "0xD6B3A0", Offset = "0xD6B3A0", VA = "0xD6B3A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACB6F8", Offset = "0xACB6F8")]
			remove
			{
			}
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0xD6F770", Offset = "0xD6F770", VA = "0xD6F770")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0xD6FAD8", Offset = "0xD6FAD8", VA = "0xD6FAD8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0xD6FDA0", Offset = "0xD6FDA0", VA = "0xD6FDA0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0xD70CDC", Offset = "0xD70CDC", VA = "0xD70CDC")]
		private void OnSelectPreset(int index)
		{
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0xD71860", Offset = "0xD71860", VA = "0xD71860")]
		public void NextAquaPreset()
		{
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0xD718E8", Offset = "0xD718E8", VA = "0xD718E8")]
		public void PreviousAquaPreset()
		{
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0xD6F9AC", Offset = "0xD6F9AC", VA = "0xD6F9AC")]
		private void SetAquaPresetName()
		{
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0xD7196C", Offset = "0xD7196C", VA = "0xD7196C")]
		private void OnResetFishes()
		{
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0xD71BE0", Offset = "0xD71BE0", VA = "0xD71BE0")]
		private void OnResetDecos()
		{
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0xD71740", Offset = "0xD71740", VA = "0xD71740")]
		private void OnSelectFishesTab(bool isOn)
		{
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0xD72498", Offset = "0xD72498", VA = "0xD72498")]
		private void OnSelectDecorationsTab(bool isOn)
		{
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0xD725CC", Offset = "0xD725CC", VA = "0xD725CC")]
		private void OnSelectInteriorsTab(bool isOn)
		{
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0xD72890", Offset = "0xD72890", VA = "0xD72890")]
		private void OnFishUnlocked(FpFish fish)
		{
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0xD72894", Offset = "0xD72894", VA = "0xD72894")]
		private void OnFishSelected(FishTypeSO fish)
		{
		}

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0xD72A04", Offset = "0xD72A04", VA = "0xD72A04")]
		public void AddFish(UI_AquariumAddRemoveFish addRemove, FishTypeSO fish)
		{
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0xD72F9C", Offset = "0xD72F9C", VA = "0xD72F9C")]
		public void RemoveFish(UI_AquariumAddRemoveFish addRemove, FishTypeSO fish)
		{
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0xD70FE8", Offset = "0xD70FE8", VA = "0xD70FE8")]
		private void OnFishDeselected()
		{
		}

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0xD71E54", Offset = "0xD71E54", VA = "0xD71E54")]
		private void FilterDecoTypeButtons()
		{
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0xD71108", Offset = "0xD71108", VA = "0xD71108")]
		private void ResetFishesMenu()
		{
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0xD7154C", Offset = "0xD7154C", VA = "0xD7154C")]
		private void ResetDecoPlacementsMenu()
		{
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0xD7059C", Offset = "0xD7059C", VA = "0xD7059C")]
		private int GetFishAmount(FishTypeSO fish)
		{
			return default(int);
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0xD705CC", Offset = "0xD705CC", VA = "0xD705CC")]
		public int GetFishInAquariumAmount(FishTypeSO fish)
		{
			return default(int);
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0xD70780", Offset = "0xD70780", VA = "0xD70780")]
		private bool IsDecoUnlocked(DecorationSO deco)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0xD73114", Offset = "0xD73114", VA = "0xD73114")]
		private int GetDecoCount(DecorationSO deco)
		{
			return default(int);
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0xD73208", Offset = "0xD73208", VA = "0xD73208")]
		public void ToggleDebugMode(bool val)
		{
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0xD73308", Offset = "0xD73308", VA = "0xD73308")]
		public void OnIncreaseDecoPage()
		{
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0xD73310", Offset = "0xD73310", VA = "0xD73310")]
		private void OnIncreaseDecoPage(int page = 1)
		{
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0xD733B8", Offset = "0xD733B8", VA = "0xD733B8")]
		public void OnDecreaseDecoPage()
		{
		}

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0xD733C0", Offset = "0xD733C0", VA = "0xD733C0")]
		private void OnDecreaseDecoPage(int page = 1)
		{
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0xD73460", Offset = "0xD73460", VA = "0xD73460")]
		private void ChangeToDecoPage(int target_page = 0)
		{
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0xD73490", Offset = "0xD73490", VA = "0xD73490")]
		public void OnIncreaseFishPanelPos()
		{
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0xD73498", Offset = "0xD73498", VA = "0xD73498")]
		private void OnIncreaseFishPanelPos(int page = 1)
		{
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0xD73620", Offset = "0xD73620", VA = "0xD73620")]
		public void OnDecreaseFishPanelPos()
		{
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0xD73628", Offset = "0xD73628", VA = "0xD73628")]
		private void OnDecreaseFishPanelPos(int page = 1)
		{
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0xD737A8", Offset = "0xD737A8", VA = "0xD737A8")]
		private void ChangeToPage(int target_page = 0)
		{
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0xD7220C", Offset = "0xD7220C", VA = "0xD7220C")]
		private void UpdateCapacityDisplay()
		{
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0xD6EC58", Offset = "0xD6EC58", VA = "0xD6EC58")]
		public void UpdateDecoCapacityDisplay()
		{
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0xD726EC", Offset = "0xD726EC", VA = "0xD726EC")]
		private void FilterInteriorToggles()
		{
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0xD737D8", Offset = "0xD737D8", VA = "0xD737D8")]
		private void ChangeInterior(Toggle toggle)
		{
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0xD73994", Offset = "0xD73994", VA = "0xD73994")]
		private void CheckNoInteriorSelected()
		{
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0xD7087C", Offset = "0xD7087C", VA = "0xD7087C")]
		private void SetInterior()
		{
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0xD73AD0", Offset = "0xD73AD0", VA = "0xD73AD0")]
		public void EnableUI()
		{
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0xD73B64", Offset = "0xD73B64", VA = "0xD73B64")]
		public void DisableUI()
		{
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0xD73C18", Offset = "0xD73C18", VA = "0xD73C18")]
		private void ItemCrafted(CraftingRecipesSO recipe)
		{
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0xD73D30", Offset = "0xD73D30", VA = "0xD73D30")]
		public AquariumControllerUI()
		{
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0xD73DF4", Offset = "0xD73DF4", VA = "0xD73DF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACB708", Offset = "0xACB708")]
		private void <OnIncreaseFishPanelPos>b__86_0(float x)
		{
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0xD73E48", Offset = "0xD73E48", VA = "0xD73E48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACB718", Offset = "0xACB718")]
		private void <OnDecreaseFishPanelPos>b__88_0(float x)
		{
		}
	}
	[Token(Token = "0x20001C4")]
	public class AquariumMissionUiController : MonoBehaviour
	{
		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AquariumMissionUiController instance;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] missionPanels;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform arrowMover;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform mapArrowMover;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Tween arrowBounce;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject aquaUI;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject movementInfoPanel;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool canHideMovementInfoPanel;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Button aquaHelpButton;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool subbed;

		[Token(Token = "0x1700013D")]
		public static GameObject AquaUI
		{
			[Token(Token = "0x6000B50")]
			[Address(RVA = "0xD74088", Offset = "0xD74088", VA = "0xD74088")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0xD740E4", Offset = "0xD740E4", VA = "0xD740E4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0xD74384", Offset = "0xD74384", VA = "0xD74384")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0xD7447C", Offset = "0xD7447C", VA = "0xD7447C")]
		public void OnDismissNewChallengePanel()
		{
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0xD744C8", Offset = "0xD744C8", VA = "0xD744C8")]
		public void SetMovmntInfoPanel(bool canHide)
		{
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0xD744D4", Offset = "0xD744D4", VA = "0xD744D4")]
		private void MissionCleared()
		{
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0xD74564", Offset = "0xD74564", VA = "0xD74564")]
		private void AquariumCutsceneWasDismissed()
		{
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0xD74674", Offset = "0xD74674", VA = "0xD74674")]
		private void DisableMovementInfoPanel()
		{
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0xD746A0", Offset = "0xD746A0", VA = "0xD746A0")]
		public AquariumMissionUiController()
		{
		}
	}
	[Token(Token = "0x20001C5")]
	public class AquariumShortcut : MonoBehaviour
	{
		[Token(Token = "0x6000B59")]
		[Address(RVA = "0xD74760", Offset = "0xD74760", VA = "0xD74760")]
		public void OnClick()
		{
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0xD747D4", Offset = "0xD747D4", VA = "0xD747D4")]
		public AquariumShortcut()
		{
		}
	}
	[Token(Token = "0x20001C6")]
	public class AquariumUiVisibilityController : MonoBehaviour
	{
		[Token(Token = "0x200048C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0E40", Offset = "0xAC0E40")]
		private sealed class <CheckPlayerIsNear>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AquariumUiVisibilityController <>4__this;

			[Token(Token = "0x170002EF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E3A")]
				[Address(RVA = "0xD74C1C", Offset = "0xD74C1C", VA = "0xD74C1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E3C")]
				[Address(RVA = "0xD74C84", Offset = "0xD74C84", VA = "0xD74C84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E37")]
			[Address(RVA = "0xD74A44", Offset = "0xD74A44", VA = "0xD74A44")]
			[DebuggerHidden]
			public <CheckPlayerIsNear>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001E38")]
			[Address(RVA = "0xD74A78", Offset = "0xD74A78", VA = "0xD74A78", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E39")]
			[Address(RVA = "0xD74A7C", Offset = "0xD74A7C", VA = "0xD74A7C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E3B")]
			[Address(RVA = "0xD74C24", Offset = "0xD74C24", VA = "0xD74C24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject aquaUI;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AquariumControllerUI aquaUiCtrl;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool playerIsNear;

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0xD747DC", Offset = "0xD747DC", VA = "0xD747DC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0xD74894", Offset = "0xD74894", VA = "0xD74894")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0xD74908", Offset = "0xD74908", VA = "0xD74908")]
		public void ToggleUiVisibility()
		{
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0xD7499C", Offset = "0xD7499C", VA = "0xD7499C")]
		private void DistanceCheck()
		{
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0xD749C8", Offset = "0xD749C8", VA = "0xD749C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACB728", Offset = "0xACB728")]
		private IEnumerator CheckPlayerIsNear()
		{
			return null;
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0xD74950", Offset = "0xD74950", VA = "0xD74950")]
		private bool UiIsVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0xD7497C", Offset = "0xD7497C", VA = "0xD7497C")]
		private void SetUiVisibility(bool state)
		{
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0xD74A70", Offset = "0xD74A70", VA = "0xD74A70")]
		public AquariumUiVisibilityController()
		{
		}
	}
	[Token(Token = "0x20001C7")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xABF95C", Offset = "0xABF95C")]
	public class DecorationSO : ItemSO
	{
		[Token(Token = "0x200048D")]
		public enum DecorationType
		{
			[Token(Token = "0x4001D83")]
			Large,
			[Token(Token = "0x4001D84")]
			Medium,
			[Token(Token = "0x4001D85")]
			Small,
			[Token(Token = "0x4001D86")]
			Interior
		}

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public DecorationType Type;

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0xD00024", Offset = "0xD00024", VA = "0xD00024")]
		public DecorationSO()
		{
		}
	}
	[Token(Token = "0x20001C8")]
	public class DecorationSlotController : MonoBehaviour
	{
		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DecorationSO.DecorationType SlotType;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SpawnPool decorationPool;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private DecorationSO inSlotData;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform modelFullsize;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform mapMini;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float mapMiniScale;

		[Token(Token = "0x1700013E")]
		public DecorationSO InSlotData
		{
			[Token(Token = "0x6000B64")]
			[Address(RVA = "0xD0002C", Offset = "0xD0002C", VA = "0xD0002C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0xD00034", Offset = "0xD00034", VA = "0xD00034")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0xD00224", Offset = "0xD00224", VA = "0xD00224")]
		public void Fill(DecorationSO decoration)
		{
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0xD003D0", Offset = "0xD003D0", VA = "0xD003D0")]
		private void FillMinimap(DecorationSO decoration)
		{
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0xD0060C", Offset = "0xD0060C", VA = "0xD0060C")]
		public Vector3 GetModelFullsizePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0xD00628", Offset = "0xD00628", VA = "0xD00628")]
		public DecorationSlotController()
		{
		}
	}
	[Token(Token = "0x20001C9")]
	public class SetMinimapHighlightColor : MonoBehaviour
	{
		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image outline;

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0xD62038", Offset = "0xD62038", VA = "0xD62038")]
		public void SetColor(Color col)
		{
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0xD6205C", Offset = "0xD6205C", VA = "0xD6205C")]
		public SetMinimapHighlightColor()
		{
		}
	}
	[Token(Token = "0x20001CA")]
	public class UI_AquariumAddRemoveFish : MonoBehaviour
	{
		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UI_AquariumFishButton fishButton;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AquariumControllerUI ctrl;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TMP_Text number;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Button increaseBtn;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Button decreaseBtn;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int currentNum;

		[Token(Token = "0x1700013F")]
		public int CurrentNum
		{
			[Token(Token = "0x6000B6C")]
			[Address(RVA = "0xD1A084", Offset = "0xD1A084", VA = "0xD1A084")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B6D")]
			[Address(RVA = "0xD1A08C", Offset = "0xD1A08C", VA = "0xD1A08C")]
			set
			{
			}
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0xD1A0D0", Offset = "0xD1A0D0", VA = "0xD1A0D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0xD1A1A4", Offset = "0xD1A1A4", VA = "0xD1A1A4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0xD1A1E8", Offset = "0xD1A1E8", VA = "0xD1A1E8")]
		public void AddFish()
		{
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0xD1A218", Offset = "0xD1A218", VA = "0xD1A218")]
		public void RemoveFish()
		{
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0xD1A248", Offset = "0xD1A248", VA = "0xD1A248")]
		public UI_AquariumAddRemoveFish()
		{
		}
	}
	[Token(Token = "0x20001CB")]
	public class UI_AquariumDecoration : MonoBehaviour
	{
		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Localize PlacementName;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Button CloseBtn;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform DecosMenu;

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0xD1A250", Offset = "0xD1A250", VA = "0xD1A250")]
		public UI_AquariumDecoration()
		{
		}
	}
	[Token(Token = "0x20001CC")]
	public class UI_AquariumDecorationButton : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
	{
		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image DecoIcon;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Button DecoBtn;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AquariumControllerUI aquaCtrlUI;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AquariumControllerMinimap aquaCtrlMinimap;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public DecorationSO deco;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TMP_Text Count_Text;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject[] sizes;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int count;

		[Token(Token = "0x17000140")]
		public int decoCount
		{
			[Token(Token = "0x6000B74")]
			[Address(RVA = "0xD1A258", Offset = "0xD1A258", VA = "0xD1A258")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B75")]
			[Address(RVA = "0xD1A260", Offset = "0xD1A260", VA = "0xD1A260")]
			set
			{
			}
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0xD1A2A4", Offset = "0xD1A2A4", VA = "0xD1A2A4", Slot = "4")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0xD1A4A8", Offset = "0xD1A4A8", VA = "0xD1A4A8")]
		public void SetSize(DecorationSO.DecorationType size)
		{
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0xD1A5AC", Offset = "0xD1A5AC", VA = "0xD1A5AC")]
		public UI_AquariumDecorationButton()
		{
		}
	}
	[Token(Token = "0x20001CD")]
	public class UI_AquariumFish : MonoBehaviour
	{
		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Localize FishName;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image FishIcon;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TMP_Text Number;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Button IncreaseBtn;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Button DecreaseBtn;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Button ApplyBtn;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Button CloseBtn;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int CurrentNum;

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0xD1A5B4", Offset = "0xD1A5B4", VA = "0xD1A5B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0xD1A5F8", Offset = "0xD1A5F8", VA = "0xD1A5F8")]
		public UI_AquariumFish()
		{
		}
	}
	[Token(Token = "0x20001CE")]
	public class UI_AquariumFishButton : MonoBehaviour
	{
		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FishTypeSO fish;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image FishIcon;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image Dot;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TMP_Text Count_Text;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Localize FishName;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Button FishBtn;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Image FishBtnOutline;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UI_AquariumAddRemoveFish AddRemove;

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0xD1A600", Offset = "0xD1A600", VA = "0xD1A600")]
		public void SetSelected(bool state)
		{
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0xD1A654", Offset = "0xD1A654", VA = "0xD1A654")]
		public UI_AquariumFishButton()
		{
		}
	}
	[Token(Token = "0x20001CF")]
	public class UI_LoadAquariumButton : MonoBehaviour
	{
		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0xD2489C", Offset = "0xD2489C", VA = "0xD2489C")]
		public void Load()
		{
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0xD248A0", Offset = "0xD248A0", VA = "0xD248A0")]
		public UI_LoadAquariumButton()
		{
		}
	}
	[Token(Token = "0x20001D0")]
	public class UI_ReturnShipButton : MonoBehaviour
	{
		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0xE10790", Offset = "0xE10790", VA = "0xE10790")]
		public void Load()
		{
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0xE10814", Offset = "0xE10814", VA = "0xE10814")]
		public UI_ReturnShipButton()
		{
		}
	}
	[Token(Token = "0x20001D1")]
	public class ArrowLeanSuccess : MonoBehaviour
	{
		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Gradient fadeGradient;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SpriteRenderer sprite;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float t;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float duration;

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0xD74C8C", Offset = "0xD74C8C", VA = "0xD74C8C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0xD74D20", Offset = "0xD74D20", VA = "0xD74D20")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0xD74DC0", Offset = "0xD74DC0", VA = "0xD74DC0")]
		public ArrowLeanSuccess()
		{
		}
	}
	[Token(Token = "0x20001D2")]
	public class ArrowSnapCollider : MonoBehaviour
	{
		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Collider col;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer mesh;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Arrow direction;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool leanState;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool isWorldCollider;

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0xD74DD4", Offset = "0xD74DD4", VA = "0xD74DD4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0xD74EA8", Offset = "0xD74EA8", VA = "0xD74EA8")]
		private bool CheckArrowDir()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0xD750D0", Offset = "0xD750D0", VA = "0xD750D0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0xD750F0", Offset = "0xD750F0", VA = "0xD750F0")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0xD751C0", Offset = "0xD751C0", VA = "0xD751C0")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0xD75248", Offset = "0xD75248", VA = "0xD75248")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0xD752F0", Offset = "0xD752F0", VA = "0xD752F0")]
		public ArrowSnapCollider()
		{
		}
	}
	[Token(Token = "0x20001D3")]
	public class ArrowSnapSuccess : MonoBehaviour
	{
		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Gradient fadeGradient;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Image image;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float t;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float duration;

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0xD752F8", Offset = "0xD752F8", VA = "0xD752F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0xD75394", Offset = "0xD75394", VA = "0xD75394")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0xD7543C", Offset = "0xD7543C", VA = "0xD7543C")]
		public ArrowSnapSuccess()
		{
		}
	}
	[Token(Token = "0x20001D4")]
	public enum MixerParams
	{
		[Token(Token = "0x4000BC6")]
		MasterVol,
		[Token(Token = "0x4000BC7")]
		MusicNoStingsVol
	}
	[Token(Token = "0x20001D5")]
	public class AudioController : MonoBehaviour
	{
		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AudioController instance;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioMixer mixer;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Tween fadeTween;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float musicMaxVol;

		[Token(Token = "0x17000141")]
		public static AudioMixer Mixer
		{
			[Token(Token = "0x6000B8E")]
			[Address(RVA = "0xD75450", Offset = "0xD75450", VA = "0xD75450")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0xD754AC", Offset = "0xD754AC", VA = "0xD754AC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0xD755B4", Offset = "0xD755B4", VA = "0xD755B4")]
		public static void SetMusicVolume(float val)
		{
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0xD75720", Offset = "0xD75720", VA = "0xD75720")]
		public static void Fade(MixerParams param, float endVal, float time)
		{
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0xD75824", Offset = "0xD75824", VA = "0xD75824")]
		public static void FadeOut(MixerParams param, float time)
		{
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0xD75650", Offset = "0xD75650", VA = "0xD75650")]
		public static void SetVal(MixerParams param, float val)
		{
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0xD75934", Offset = "0xD75934", VA = "0xD75934")]
		public static void MusicFadeOut(float time)
		{
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0xD7593C", Offset = "0xD7593C", VA = "0xD7593C")]
		public static void MusicfadeIn(float time)
		{
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0xD759AC", Offset = "0xD759AC", VA = "0xD759AC")]
		public AudioController()
		{
		}
	}
	[Token(Token = "0x20001D6")]
	public class ButtonClickSfx : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerDownHandler
	{
		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SfxUI clip;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float hoverCooldown;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float hoverCooldownDuration;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool isToggle;

		[Token(Token = "0x17000142")]
		private XRUIInputModule InputModule
		{
			[Token(Token = "0x6000B97")]
			[Address(RVA = "0xCF4474", Offset = "0xCF4474", VA = "0xCF4474")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0xCF4524", Offset = "0xCF4524", VA = "0xCF4524")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0xCF4648", Offset = "0xCF4648", VA = "0xCF4648")]
		private void PlayClickSfxToggle(bool isOn)
		{
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0xCF46E0", Offset = "0xCF46E0", VA = "0xCF46E0")]
		private void PlayClickSfx()
		{
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0xCF4760", Offset = "0xCF4760", VA = "0xCF4760", Slot = "6")]
		public void OnPointerDown(PointerEventData pointerEventData)
		{
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0xCF48D4", Offset = "0xCF48D4", VA = "0xCF48D4", Slot = "4")]
		public void OnPointerEnter(PointerEventData pointerEventData)
		{
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0xCF4AB8", Offset = "0xCF4AB8", VA = "0xCF4AB8", Slot = "5")]
		public void OnPointerExit(PointerEventData pointerEventData)
		{
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0xCF47FC", Offset = "0xCF47FC", VA = "0xCF47FC")]
		private void DoHaptics(XRRayInteractor interactor)
		{
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0xCF4C18", Offset = "0xCF4C18", VA = "0xCF4C18")]
		public ButtonClickSfx()
		{
		}
	}
	[Token(Token = "0x20001D7")]
	public enum SfxUI
	{
		[Token(Token = "0x4000BD1")]
		ButtonClick1,
		[Token(Token = "0x4000BD2")]
		ButtonClick2,
		[Token(Token = "0x4000BD3")]
		ButtonClick3,
		[Token(Token = "0x4000BD4")]
		ButtonClick4,
		[Token(Token = "0x4000BD5")]
		ButtonClick5,
		[Token(Token = "0x4000BD6")]
		ButtonHover,
		[Token(Token = "0x4000BD7")]
		MissionCompleted,
		[Token(Token = "0x4000BD8")]
		Notification,
		[Token(Token = "0x4000BD9")]
		FishPadOpen,
		[Token(Token = "0x4000BDA")]
		FishPadClose,
		[Token(Token = "0x4000BDB")]
		PlaceAquariumFish,
		[Token(Token = "0x4000BDC")]
		RemoveAquariumFish,
		[Token(Token = "0x4000BDD")]
		PlaceAquariumDeco,
		[Token(Token = "0x4000BDE")]
		RemoveAquariumDeco,
		[Token(Token = "0x4000BDF")]
		AquaButtonFail,
		[Token(Token = "0x4000BE0")]
		AquaDecoPickup
	}
	[Token(Token = "0x20001D8")]
	public class UI_Audio : MonoBehaviour
	{
		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static UI_Audio instance;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSource uiAudio;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource uiAudioNoPitchChange;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip buttonClick1;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip buttonClick2;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip buttonClick3;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioClip buttonClick4;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip buttonClick5;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioClip buttonHover;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip missionCompleted;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AudioClip notification;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioClip fishPadOpen;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AudioClip fishPadClose;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AudioClip placeAquaFish;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AudioClip placeAquaDeco;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public AudioClip removeAquaFish;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AudioClip removeAquaDeco;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public AudioClip aquaButtonFail;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public AudioClip aquaDecoPickup;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float lastButtonClickTime;

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0xD1A65C", Offset = "0xD1A65C", VA = "0xD1A65C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0xD14984", Offset = "0xD14984", VA = "0xD14984")]
		public static void Play(SfxUI sfx, float pitch = 1f)
		{
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0xD1A6B4", Offset = "0xD1A6B4", VA = "0xD1A6B4")]
		public static void PlayAt(SfxUI sfx, Vector3 position, float pitch = 1f)
		{
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0xD1A978", Offset = "0xD1A978", VA = "0xD1A978")]
		public UI_Audio()
		{
		}
	}
	[Token(Token = "0x20001D9")]
	public class AudioFollower : MonoBehaviour
	{
		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform transformToFollow;

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0xD759B4", Offset = "0xD759B4", VA = "0xD759B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0xD75A6C", Offset = "0xD75A6C", VA = "0xD75A6C")]
		public AudioFollower()
		{
		}
	}
	[Token(Token = "0x20001DA")]
	public class AutoLoadSceneQuest : MonoBehaviour
	{
		[Token(Token = "0x200048E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0E50", Offset = "0xAC0E50")]
		private sealed class <AwaitEntitlement>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AutoLoadSceneQuest <>4__this;

			[Token(Token = "0x170002F1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E40")]
				[Address(RVA = "0xD76034", Offset = "0xD76034", VA = "0xD76034", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E42")]
				[Address(RVA = "0xD7609C", Offset = "0xD7609C", VA = "0xD7609C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E3D")]
			[Address(RVA = "0xD75EC4", Offset = "0xD75EC4", VA = "0xD75EC4")]
			[DebuggerHidden]
			public <AwaitEntitlement>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001E3E")]
			[Address(RVA = "0xD75FAC", Offset = "0xD75FAC", VA = "0xD75FAC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E3F")]
			[Address(RVA = "0xD75FB0", Offset = "0xD75FB0", VA = "0xD75FB0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E41")]
			[Address(RVA = "0xD7603C", Offset = "0xD7603C", VA = "0xD7603C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200048F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0E60", Offset = "0xAC0E60")]
		private sealed class <AwaitLoadScene>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AutoLoadSceneQuest <>4__this;

			[Token(Token = "0x170002F3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E46")]
				[Address(RVA = "0xD7623C", Offset = "0xD7623C", VA = "0xD7623C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E48")]
				[Address(RVA = "0xD762A4", Offset = "0xD762A4", VA = "0xD762A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E43")]
			[Address(RVA = "0xD75F6C", Offset = "0xD75F6C", VA = "0xD75F6C")]
			[DebuggerHidden]
			public <AwaitLoadScene>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6001E44")]
			[Address(RVA = "0xD760A4", Offset = "0xD760A4", VA = "0xD760A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E45")]
			[Address(RVA = "0xD760A8", Offset = "0xD760A8", VA = "0xD760A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E47")]
			[Address(RVA = "0xD76244", Offset = "0xD76244", VA = "0xD76244", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float waitTimeSeconds;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int sceneNumToLoad;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool isFading;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float startTime;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public QuestEntitlement questEntitlement;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AsyncOperation op;

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0xD75DB8", Offset = "0xD75DB8", VA = "0xD75DB8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0xD75E48", Offset = "0xD75E48", VA = "0xD75E48")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACB78C", Offset = "0xACB78C")]
		private IEnumerator AwaitEntitlement()
		{
			return null;
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0xD75EF0", Offset = "0xD75EF0", VA = "0xD75EF0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACB7F0", Offset = "0xACB7F0")]
		private IEnumerator AwaitLoadScene()
		{
			return null;
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0xD75F98", Offset = "0xD75F98", VA = "0xD75F98")]
		public AutoLoadSceneQuest()
		{
		}
	}
	[Token(Token = "0x20001DB")]
	public class BendyGuide : MonoBehaviour
	{
		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 localPos;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 localRot;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody rb;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static BendyGuide instance;

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0xD76F48", Offset = "0xD76F48", VA = "0xD76F48")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0xD77008", Offset = "0xD77008", VA = "0xD77008")]
		public static void Reset()
		{
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0xD77060", Offset = "0xD77060", VA = "0xD77060")]
		private void _Reset()
		{
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0xD77148", Offset = "0xD77148", VA = "0xD77148")]
		public BendyGuide()
		{
		}
	}
	[Token(Token = "0x20001DC")]
	public class BobberModelPositionCasting : MonoBehaviour
	{
		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform rodTip;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform bobberLure;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject model;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float maxDistanceFromLure;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool showBobber;

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0xCEFBC4", Offset = "0xCEFBC4", VA = "0xCEFBC4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0xCEFCEC", Offset = "0xCEFCEC", VA = "0xCEFCEC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0xCEFE14", Offset = "0xCEFE14", VA = "0xCEFE14")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0xCEFEC0", Offset = "0xCEFEC0", VA = "0xCEFEC0")]
		private void PositionModel()
		{
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0xCF019C", Offset = "0xCF019C", VA = "0xCF019C")]
		private void LureChange(LureSO lure)
		{
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0xCF01EC", Offset = "0xCF01EC", VA = "0xCF01EC")]
		public BobberModelPositionCasting()
		{
		}
	}
	[Token(Token = "0x20001DD")]
	public class BobberPositioner : MonoBehaviour
	{
		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform bobberMover;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform underwaterLureModel;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform underwaterLureConnectedBody;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 targetPos;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody rb;

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0xCF0204", Offset = "0xCF0204", VA = "0xCF0204")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0xCF0330", Offset = "0xCF0330", VA = "0xCF0330")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0xCF03EC", Offset = "0xCF03EC", VA = "0xCF03EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0xCF0444", Offset = "0xCF0444", VA = "0xCF0444")]
		public BobberPositioner()
		{
		}
	}
	[Token(Token = "0x20001DE")]
	public class BoostBar : MonoBehaviour
	{
		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isReady;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpawnPool Vfx;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform lightningBall;

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform rodTipBone;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform reel;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject lightningBallRodTip;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject lightningBallReel;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject boostReadyVFX;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static BoostBar instance;

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public HapticsClipSO boostReadyHapticsClip;

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0xCF0618", Offset = "0xCF0618", VA = "0xCF0618")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0xCF0740", Offset = "0xCF0740", VA = "0xCF0740")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0xCF0798", Offset = "0xCF0798", VA = "0xCF0798")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0xCF08C0", Offset = "0xCF08C0", VA = "0xCF08C0")]
		private void EventHub_OnBoostTimerUpdated(float timer)
		{
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0xCF090C", Offset = "0xCF090C", VA = "0xCF090C")]
		private void HandleBoostReady()
		{
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0xCF0B3C", Offset = "0xCF0B3C", VA = "0xCF0B3C")]
		private void DisableBoostReadyVFX()
		{
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0xCF0B5C", Offset = "0xCF0B5C", VA = "0xCF0B5C")]
		public void ResetBoostBar()
		{
		}

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0xCF0A1C", Offset = "0xCF0A1C", VA = "0xCF0A1C")]
		private void ResetAlertParticlesPos()
		{
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0xCF0B64", Offset = "0xCF0B64", VA = "0xCF0B64")]
		public bool CanTriggerBoost()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0xCF0C18", Offset = "0xCF0C18", VA = "0xCF0C18")]
		public BoostBar()
		{
		}
	}
	[Token(Token = "0x20001DF")]
	public class BoostUI : MonoBehaviour
	{
		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static BoostUI instance;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SkinnedMeshRenderer boostUiRend;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC4B9C", Offset = "0xAC4B9C")]
		public Material uiMat;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Gradient DefaultBoostColorGradient;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Gradient FullBoostColorGradient;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AnimationCurve curve;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject energyIcon;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject boostButtonReadyHighlight;

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0xCF0C20", Offset = "0xCF0C20", VA = "0xCF0C20")]
		public void SetBoostGuageLevel(float val)
		{
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0xCF0CFC", Offset = "0xCF0CFC", VA = "0xCF0CFC")]
		private void SetBoostColor(bool isCharged)
		{
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0xCF0EDC", Offset = "0xCF0EDC", VA = "0xCF0EDC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0xCF0FB8", Offset = "0xCF0FB8", VA = "0xCF0FB8")]
		public BoostUI()
		{
		}
	}
	[Token(Token = "0x20001E0")]
	public class BoostVFXStateController : MonoBehaviour
	{
		[Token(Token = "0x2000490")]
		public enum BoostVFXState
		{
			[Token(Token = "0x4001D8E")]
			Empty,
			[Token(Token = "0x4001D8F")]
			NonEmpty,
			[Token(Token = "0x4001D90")]
			Full,
			[Token(Token = "0x4001D91")]
			AddEnergy,
			[Token(Token = "0x4001D92")]
			BoostStart,
			[Token(Token = "0x4001D93")]
			BoostActive,
			[Token(Token = "0x4001D94")]
			BoostEnd
		}

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static BoostVFXStateController instance;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BoostVFXState state;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject EmptyVFX;

		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject FullVFX;

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject AddEnergyVFX;

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject BoostStartVFX;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject BoostActiveVFX;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject BoostEndVFX;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<GameObject> VFXList;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject lightningStartObject;

		[Token(Token = "0x17000143")]
		public static BoostVFXState State
		{
			[Token(Token = "0x6000BC6")]
			[Address(RVA = "0xCF0FC0", Offset = "0xCF0FC0", VA = "0xCF0FC0")]
			get
			{
				return default(BoostVFXState);
			}
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0xCF101C", Offset = "0xCF101C", VA = "0xCF101C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0xCF10DC", Offset = "0xCF10DC", VA = "0xCF10DC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0xCF11DC", Offset = "0xCF11DC", VA = "0xCF11DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0xCF1324", Offset = "0xCF1324", VA = "0xCF1324")]
		public static void StartBoost()
		{
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0xCF13E8", Offset = "0xCF13E8", VA = "0xCF13E8")]
		public static void EndBoost()
		{
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0xCF14C4", Offset = "0xCF14C4", VA = "0xCF14C4")]
		public static void AddEnergy()
		{
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0xCF113C", Offset = "0xCF113C", VA = "0xCF113C")]
		private void ReevaluateState()
		{
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0xCF12FC", Offset = "0xCF12FC", VA = "0xCF12FC")]
		private void EnterNonEmpty()
		{
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0xCF1318", Offset = "0xCF1318", VA = "0xCF1318")]
		private void EnterEmpty()
		{
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0xCF1308", Offset = "0xCF1308", VA = "0xCF1308")]
		private void EnterFull()
		{
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0xCF151C", Offset = "0xCF151C", VA = "0xCF151C")]
		private void EnterAddEnergy()
		{
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0xCF137C", Offset = "0xCF137C", VA = "0xCF137C")]
		private void EnterBoostStart()
		{
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0xCF17C4", Offset = "0xCF17C4", VA = "0xCF17C4")]
		private void EnterBoostActive()
		{
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0xCF1440", Offset = "0xCF1440", VA = "0xCF1440")]
		private void EnterBoostEnd()
		{
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0xCF1684", Offset = "0xCF1684", VA = "0xCF1684")]
		private void PlayVFX(GameObject VFX)
		{
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0xCF1588", Offset = "0xCF1588", VA = "0xCF1588")]
		private void StopAllVFXs()
		{
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0xCF182C", Offset = "0xCF182C", VA = "0xCF182C")]
		public BoostVFXStateController()
		{
		}
	}
	[Token(Token = "0x20001E1")]
	public class BossPredatorAI : MonoBehaviour
	{
		[Token(Token = "0x2000491")]
		public enum BossPredatorState
		{
			[Token(Token = "0x4001D96")]
			idle,
			[Token(Token = "0x4001D97")]
			patrolling,
			[Token(Token = "0x4001D98")]
			following
		}

		[Token(Token = "0x2000492")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0E70", Offset = "0xAC0E70")]
		private sealed class <AwaitStartPatrolling>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BossPredatorAI <>4__this;

			[Token(Token = "0x4001D9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x170002F5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E4C")]
				[Address(RVA = "0xCF3034", Offset = "0xCF3034", VA = "0xCF3034", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E4E")]
				[Address(RVA = "0xCF309C", Offset = "0xCF309C", VA = "0xCF309C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E49")]
			[Address(RVA = "0xCF28D8", Offset = "0xCF28D8", VA = "0xCF28D8")]
			[DebuggerHidden]
			public <AwaitStartPatrolling>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6001E4A")]
			[Address(RVA = "0xCF2E3C", Offset = "0xCF2E3C", VA = "0xCF2E3C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E4B")]
			[Address(RVA = "0xCF2E40", Offset = "0xCF2E40", VA = "0xCF2E40", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E4D")]
			[Address(RVA = "0xCF303C", Offset = "0xCF303C", VA = "0xCF303C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BossPredatorState state;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 patrolPoint;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float patrolRadius;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 target;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private NavMeshAgent pred;

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPatrolPointTime;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int bobberLayer;

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public BossPredatorController bossPredatorController;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Animator anim;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Collider col;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool hasAttacked;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject exclamations;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform model;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Tween diveTween;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Tween surfaceTween;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float strikingDistance;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private readonly float speedScalingFactor;

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3[] waypoints;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int numWaypointsOnRadius;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int waypointIndex;

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0xCF18A8", Offset = "0xCF18A8", VA = "0xCF18A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0xCF1C10", Offset = "0xCF1C10", VA = "0xCF1C10")]
		public void Reset(bool onEnable = false)
		{
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0xCF1E94", Offset = "0xCF1E94", VA = "0xCF1E94")]
		private void ResetPosition()
		{
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0xCF20D4", Offset = "0xCF20D4", VA = "0xCF20D4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0xCF2184", Offset = "0xCF2184", VA = "0xCF2184")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0xCF2064", Offset = "0xCF2064", VA = "0xCF2064")]
		private void FaceTarget(Vector3 trg)
		{
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0xCF24E4", Offset = "0xCF24E4", VA = "0xCF24E4")]
		internal void DoAttack()
		{
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0xCF24C4", Offset = "0xCF24C4", VA = "0xCF24C4")]
		private void ResetAnimSpeed()
		{
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0xCF2440", Offset = "0xCF2440", VA = "0xCF2440")]
		private void SetTarget(Vector3 trg)
		{
		}

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0xCF2724", Offset = "0xCF2724", VA = "0xCF2724")]
		internal void Dive()
		{
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0xCF1D54", Offset = "0xCF1D54", VA = "0xCF1D54")]
		private void Surface()
		{
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0xCF1F8C", Offset = "0xCF1F8C", VA = "0xCF1F8C")]
		private void StartPatrolling()
		{
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0xCF283C", Offset = "0xCF283C", VA = "0xCF283C")]
		private void StartFollowing()
		{
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0xCF1E18", Offset = "0xCF1E18", VA = "0xCF1E18")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACB854", Offset = "0xACB854")]
		private IEnumerator AwaitStartPatrolling()
		{
			return null;
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0xCF2904", Offset = "0xCF2904", VA = "0xCF2904")]
		public void WarpToPatrolPoint()
		{
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0xCF292C", Offset = "0xCF292C", VA = "0xCF292C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0xCF2984", Offset = "0xCF2984", VA = "0xCF2984")]
		private void FishCollision()
		{
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0xCF267C", Offset = "0xCF267C", VA = "0xCF267C")]
		private void PredAlert()
		{
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0xCF2B04", Offset = "0xCF2B04", VA = "0xCF2B04")]
		internal void StepFailed()
		{
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0xCF2B7C", Offset = "0xCF2B7C", VA = "0xCF2B7C")]
		private bool WithinStrikingDistance()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0xCF19B4", Offset = "0xCF19B4", VA = "0xCF19B4")]
		private Vector3[] SetWayPoints()
		{
			return null;
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0xCF2C94", Offset = "0xCF2C94", VA = "0xCF2C94")]
		public BossPredatorAI()
		{
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0xCF2CC0", Offset = "0xCF2CC0", VA = "0xCF2CC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACB8B8", Offset = "0xACB8B8")]
		private void <ResetPosition>b__23_0()
		{
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0xCF2CC8", Offset = "0xCF2CC8", VA = "0xCF2CC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACB8C8", Offset = "0xACB8C8")]
		private void <DoAttack>b__27_0()
		{
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0xCF2D44", Offset = "0xCF2D44", VA = "0xCF2D44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACB8D8", Offset = "0xACB8D8")]
		private void <Dive>b__30_0()
		{
		}
	}
	[Token(Token = "0x20001E2")]
	public class BossPredatorController : MonoBehaviour
	{
		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static BossPredatorController instance;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform BossPred;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SpawnPool pool;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private BossPredatorSkin skin;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int maxNumber;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int initialNumber;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int numSpawnAtOnce;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float spawnRate;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float speed;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool initialSpawn;

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool systemIsActive;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int numHiddenPredators;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public BossPredatorAI interestedBossPred;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<BossPredatorAI> bossPredators;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string lastLocationBCID;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float SystemActivatedTime;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float systemActivateKeepout;

		[Token(Token = "0x17000144")]
		public static BossPredatorAI InterestedBossPred
		{
			[Token(Token = "0x6000BF1")]
			[Address(RVA = "0xCF30A4", Offset = "0xCF30A4", VA = "0xCF30A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0xCF3100", Offset = "0xCF3100", VA = "0xCF3100")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0xCF3344", Offset = "0xCF3344", VA = "0xCF3344")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0xCF34FC", Offset = "0xCF34FC", VA = "0xCF34FC")]
		private void FishpoolChanged()
		{
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0xCF3288", Offset = "0xCF3288", VA = "0xCF3288")]
		public void InitPredator()
		{
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0xCF3728", Offset = "0xCF3728", VA = "0xCF3728")]
		private void RodWasReset()
		{
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0xCF3500", Offset = "0xCF3500", VA = "0xCF3500")]
		public void SystemInit()
		{
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0xCF3830", Offset = "0xCF3830", VA = "0xCF3830")]
		private void SystemEnable()
		{
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0xCF3A1C", Offset = "0xCF3A1C", VA = "0xCF3A1C")]
		private void SystemDisable()
		{
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0xCF38C0", Offset = "0xCF38C0", VA = "0xCF38C0")]
		private void PrepPredatorList()
		{
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0xCF3960", Offset = "0xCF3960", VA = "0xCF3960")]
		private void Spawn()
		{
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0xCF2D60", Offset = "0xCF2D60", VA = "0xCF2D60")]
		public void RemoveMe(BossPredatorAI bossPredatorAI)
		{
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0xCF3B58", Offset = "0xCF3B58", VA = "0xCF3B58")]
		private void SpawnSingle(float lifetimeTargetOverride = 0f)
		{
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0xCF3CE4", Offset = "0xCF3CE4", VA = "0xCF3CE4")]
		private Vector3 GetPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0xCF3DE0", Offset = "0xCF3DE0", VA = "0xCF3DE0")]
		private bool TooCloseToOthers(Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0xCF3680", Offset = "0xCF3680", VA = "0xCF3680")]
		public static void ClearAll()
		{
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0xCF3F90", Offset = "0xCF3F90", VA = "0xCF3F90")]
		private void PatternStepFailed()
		{
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0xCF40BC", Offset = "0xCF40BC", VA = "0xCF40BC")]
		private BossPredatorAI ClosestBossPredator()
		{
			return null;
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0xCF42E8", Offset = "0xCF42E8", VA = "0xCF42E8")]
		public static void FishLost()
		{
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0xCF42EC", Offset = "0xCF42EC", VA = "0xCF42EC")]
		private void ResetInterested()
		{
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0xCF4390", Offset = "0xCF4390", VA = "0xCF4390")]
		public BossPredatorController()
		{
		}
	}
	[Token(Token = "0x20001E3")]
	public class BossPredatorsDebug : MonoBehaviour
	{
		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI numText;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Slider numSlider;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Button spawn;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Button clearAll;

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0xCF43F8", Offset = "0xCF43F8", VA = "0xCF43F8")]
		public void Spawn()
		{
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0xCF43FC", Offset = "0xCF43FC", VA = "0xCF43FC")]
		public void ClearAll()
		{
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0xCF4400", Offset = "0xCF4400", VA = "0xCF4400")]
		public void OnValueChanged()
		{
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0xCF446C", Offset = "0xCF446C", VA = "0xCF446C")]
		public BossPredatorsDebug()
		{
		}
	}
	[Token(Token = "0x20001E4")]
	public class CameraFadeEffect : MonoBehaviour
	{
		[Token(Token = "0x2000493")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0E80", Offset = "0xAC0E80")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4001D9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float targetAlpha;

			[Token(Token = "0x4001D9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action onDone;

			[Token(Token = "0x6001E4F")]
			[Address(RVA = "0xCF4EEC", Offset = "0xCF4EEC", VA = "0xCF4EEC")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6001E50")]
			[Address(RVA = "0xCF4EFC", Offset = "0xCF4EFC", VA = "0xCF4EFC")]
			internal void <TriggerFade>b__0()
			{
			}
		}

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CameraFadeEffect instance;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer fader;

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0xCF4C28", Offset = "0xCF4C28", VA = "0xCF4C28")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0xCF4D10", Offset = "0xCF4D10", VA = "0xCF4D10")]
		public static void TriggerFade(Color startColor, float startAlpha, float targetAlpha, float duration, [Optional] Action onDone)
		{
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0xCF4EF4", Offset = "0xCF4EF4", VA = "0xCF4EF4")]
		public CameraFadeEffect()
		{
		}
	}
	[Token(Token = "0x20001E5")]
	public enum CastPowerSlope
	{
		[Token(Token = "0x4000C52")]
		Linear,
		[Token(Token = "0x4000C53")]
		InSine,
		[Token(Token = "0x4000C54")]
		OutSine,
		[Token(Token = "0x4000C55")]
		InOutSine
	}
	[Token(Token = "0x20001E6")]
	public class CastDir : MonoBehaviour
	{
		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform castTargetLive;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform castTargetAtLaunch;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform castTargetAdjusted;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CastDir instance;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float minDistance;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public CastPowerSlope powerSlope;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float angle;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _degree;

		[Token(Token = "0x17000145")]
		public static float degree
		{
			[Token(Token = "0x6000C0D")]
			[Address(RVA = "0xCF4F90", Offset = "0xCF4F90", VA = "0xCF4F90")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000146")]
		public static Vector3 target
		{
			[Token(Token = "0x6000C0E")]
			[Address(RVA = "0xCF5024", Offset = "0xCF5024", VA = "0xCF5024")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0xCED89C", Offset = "0xCED89C", VA = "0xCED89C")]
		public static Vector3 GetTarget(float speed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0xCF50BC", Offset = "0xCF50BC", VA = "0xCF50BC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0xCF5114", Offset = "0xCF5114", VA = "0xCF5114")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0xCF5228", Offset = "0xCF5228", VA = "0xCF5228")]
		private void SetTargetPos()
		{
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0xCF54D4", Offset = "0xCF54D4", VA = "0xCF54D4")]
		private Vector3 GetHmdRelativePos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0xCF53B4", Offset = "0xCF53B4", VA = "0xCF53B4")]
		private float GetAngle()
		{
			return default(float);
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0xCEDDF4", Offset = "0xCEDDF4", VA = "0xCEDDF4")]
		public static Vector3 GetNudgeVector(Vector3 currentPos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0xCF5628", Offset = "0xCF5628", VA = "0xCF5628")]
		public CastDir()
		{
		}
	}
	[Token(Token = "0x20001E7")]
	public class CastTarget : MonoBehaviour
	{
		[Token(Token = "0x6000C17")]
		[Address(RVA = "0xCF5638", Offset = "0xCF5638", VA = "0xCF5638")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0xCF5718", Offset = "0xCF5718", VA = "0xCF5718")]
		public CastTarget()
		{
		}
	}
	[Token(Token = "0x20001E8")]
	public class CastTargetController : MonoBehaviour
	{
		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] targetsClose;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] targetsMid;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject[] targetsFar;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CastTargetController instance;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<GameObject> targets;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int numTargetsPerband;

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0xCF5720", Offset = "0xCF5720", VA = "0xCF5720")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0xCF5880", Offset = "0xCF5880", VA = "0xCF5880")]
		public static void NewTargets()
		{
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0xCF58D8", Offset = "0xCF58D8", VA = "0xCF58D8")]
		private void ResetTargets()
		{
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0xCF5780", Offset = "0xCF5780", VA = "0xCF5780")]
		private void ClearAllTargets()
		{
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0xCF5C14", Offset = "0xCF5C14", VA = "0xCF5C14")]
		public CastTargetController()
		{
		}
	}
	[Token(Token = "0x20001E9")]
	public class CastVector : MonoBehaviour
	{
		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CastVector instance;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3[] forwards;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int index;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int numVals;

		[Token(Token = "0x17000147")]
		public static Vector3 direction
		{
			[Token(Token = "0x6000C1E")]
			[Address(RVA = "0xCF5C24", Offset = "0xCF5C24", VA = "0xCF5C24")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0xCF5D9C", Offset = "0xCF5D9C", VA = "0xCF5D9C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0xCF5E18", Offset = "0xCF5E18", VA = "0xCF5E18")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0xCF5E9C", Offset = "0xCF5E9C", VA = "0xCF5E9C")]
		public CastVector()
		{
		}
	}
	[Token(Token = "0x20001EA")]
	public class CastingDebug : MonoBehaviour
	{
		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float castSpeedMultiplierDefault;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Slider castSpeedMulti_Sider;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TMP_Text castSpeedMulti_Text;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float minCastDistanceDefault;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Slider minCastDist_Slider;

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TMP_Text minCastDist_Text;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Toggle togLinear;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Toggle togInOutSine;

		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Toggle togInSine;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Toggle togOutSine;

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0xCF5EAC", Offset = "0xCF5EAC", VA = "0xCF5EAC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0xCF5F44", Offset = "0xCF5F44", VA = "0xCF5F44")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0xCF6020", Offset = "0xCF6020", VA = "0xCF6020")]
		public void OnCastSpeedMultiChanged()
		{
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0xCF60B4", Offset = "0xCF60B4", VA = "0xCF60B4")]
		public void OnCastSpeedMultiReset()
		{
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0xCF6148", Offset = "0xCF6148", VA = "0xCF6148")]
		public void OnMinCastDistChanged()
		{
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0xCF61C0", Offset = "0xCF61C0", VA = "0xCF61C0")]
		public void OnMinCastDistReset()
		{
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0xCF6240", Offset = "0xCF6240", VA = "0xCF6240")]
		public void Targets()
		{
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0xCF6244", Offset = "0xCF6244", VA = "0xCF6244")]
		public void OnToggleChanged(Toggle tog)
		{
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0xCF63E4", Offset = "0xCF63E4", VA = "0xCF63E4")]
		public CastingDebug()
		{
		}
	}
	[Token(Token = "0x20001EB")]
	public enum ToggleLanguage
	{
		[Token(Token = "0x4000C73")]
		English,
		[Token(Token = "0x4000C74")]
		ChineseSimplified,
		[Token(Token = "0x4000C75")]
		ChineseTraditional,
		[Token(Token = "0x4000C76")]
		Korean,
		[Token(Token = "0x4000C77")]
		Japanese
	}
	[Token(Token = "0x20001EC")]
	public class ChangeLanguageSetting : MonoBehaviour
	{
		[Token(Token = "0x2000494")]
		public delegate void ChangeLanguageEvent(ToggleLanguage language);

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle toggle;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ToggleLanguage toggleLanguage;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string cacheSymbol;

		[Token(Token = "0x1400001A")]
		public static event ChangeLanguageEvent ChangeLanguage
		{
			[Token(Token = "0x6000C2B")]
			[Address(RVA = "0xCF7290", Offset = "0xCF7290", VA = "0xCF7290")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACB8E8", Offset = "0xACB8E8")]
			add
			{
			}
			[Token(Token = "0x6000C2C")]
			[Address(RVA = "0xCF7344", Offset = "0xCF7344", VA = "0xCF7344")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACB8F8", Offset = "0xACB8F8")]
			remove
			{
			}
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0xCF73F8", Offset = "0xCF73F8", VA = "0xCF73F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0xCF73FC", Offset = "0xCF73FC", VA = "0xCF73FC")]
		private void InitUI()
		{
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0xCF767C", Offset = "0xCF767C", VA = "0xCF767C")]
		public void OnClick()
		{
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0xCF7758", Offset = "0xCF7758", VA = "0xCF7758")]
		private void RefreshToggle(ToggleLanguage language)
		{
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0xCF7B34", Offset = "0xCF7B34", VA = "0xCF7B34")]
		public ChangeLanguageSetting()
		{
		}
	}
	[Token(Token = "0x20001ED")]
	public delegate void EndSliderDragEventHandler(float val);
	[Token(Token = "0x20001EE")]
	public class ChangePlayerSetting : MonoBehaviour, IPointerUpHandler, IEventSystemHandler
	{
		[Token(Token = "0x2000495")]
		private enum ToggleLanguage
		{
			[Token(Token = "0x4001DA0")]
			English,
			[Token(Token = "0x4001DA1")]
			ChineseSimplified,
			[Token(Token = "0x4001DA2")]
			ChineseTraditional,
			[Token(Token = "0x4001DA3")]
			Korean,
			[Token(Token = "0x4001DA4")]
			Japanese
		}

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerSetting setting;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Toggle toggle;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ToggleGroup toggleGroup;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Button button;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Slider slider;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_cameraOffset;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_musicVolume;

		[Token(Token = "0x1400001B")]
		public event EndSliderDragEventHandler EndDrag
		{
			[Token(Token = "0x6000C36")]
			[Address(RVA = "0xCF7BE8", Offset = "0xCF7BE8", VA = "0xCF7BE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACB908", Offset = "0xACB908")]
			add
			{
			}
			[Token(Token = "0x6000C37")]
			[Address(RVA = "0xCF7C8C", Offset = "0xCF7C8C", VA = "0xCF7C8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACB918", Offset = "0xACB918")]
			remove
			{
			}
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0xCF7D30", Offset = "0xCF7D30", VA = "0xCF7D30")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0xCF7D8C", Offset = "0xCF7D8C", VA = "0xCF7D8C")]
		private void InitUI()
		{
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0xCF8128", Offset = "0xCF8128", VA = "0xCF8128")]
		public void OnClick()
		{
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0xCF8538", Offset = "0xCF8538", VA = "0xCF8538")]
		public void OnHeightSliderChanged(float value)
		{
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0xCF8540", Offset = "0xCF8540", VA = "0xCF8540")]
		public void OnMusicSliderChanged(float value)
		{
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0xCF854C", Offset = "0xCF854C", VA = "0xCF854C", Slot = "4")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0xCF86B0", Offset = "0xCF86B0", VA = "0xCF86B0")]
		public ChangePlayerSetting()
		{
		}
	}
	[Token(Token = "0x20001EF")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xABF9BC", Offset = "0xABF9BC")]
	public class CharacterAnimationController : MonoBehaviour
	{
		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Animator animator;

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0xCF86B8", Offset = "0xCF86B8", VA = "0xCF86B8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0xCF8718", Offset = "0xCF8718", VA = "0xCF8718")]
		public CharacterAnimationController()
		{
		}
	}
	[Token(Token = "0x20001F0")]
	public class CirclePositioner : MonoBehaviour
	{
		[Token(Token = "0x6000C41")]
		[Address(RVA = "0xCF880C", Offset = "0xCF880C", VA = "0xCF880C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0xCF8900", Offset = "0xCF8900", VA = "0xCF8900")]
		public CirclePositioner()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F1")]
	public class FishDataClass
	{
		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FishType[] FishTypes;

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0xE705E4", Offset = "0xE705E4", VA = "0xE705E4")]
		public FishDataClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F2")]
	public class FishType
	{
		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BCID;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string FishName;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string FishDescription;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int FishIndex;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float FishStamina;

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float StaminaReductionReeling;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float StaminaReductionReelingStunned;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float StaminaReductionLeans;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float StaminaReductionSnaps;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float StaminaReductionJumps;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float StaminaReductionPostPatternRest;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float StaminaReductionPerfectPattern;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float StaminaReductionPowerReelRodLvl1;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float StaminaReductionPowerReelRodLvl2;

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float StaminaReductionPowerReelRodLvl3;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float StaminaReductionStunRodLvl1;

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float StaminaReductionStunRodLvl2;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float StaminaReductionStunRodLvl3;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float StaminaReductionTeleportRodLvl1;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float StaminaReductionTeleportRodLvl2;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float StaminaReductionTeleportRodLvl3;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float EnergyAddedLeans;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float EnergyAddedSnaps;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float EnergyAddedJumps;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float EnergyAddedPerfectPattern;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float EnergyAddedPostPatternRest;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float Speed;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float SpeedReeling;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float SpeedPatternPlay;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float FleeTime;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float RestTime;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float ReelingSpeedMultiplier;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float StartingTension;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float SmallWeightLow;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float SmallWeightHigh;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float MediumWeightHigh;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float LargeWeightHigh;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float MinLength;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float MaxLength;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public string Icon;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public string FishOPediaListIcon;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public string UncaughtIcon;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public string UncaughtFishOPediaListIcon;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public string PrefabName;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public bool isFish;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public string FishableType;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public string FishGrade;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public string Difficulty;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public string InitialMode;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public float InitialModeDuration;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public float ArrowSolveTime;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public float IncreaseRestTimePerFleeBy;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public float IncreaseTensionOnArrowFailBy;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public float DecreaseTensionOnArrowSolvedBy;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public float BlueZoneSize;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public float RedZoneSize;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public float TimeAllowedBlueZone;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public float TimeAllowedRedZone;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public float warningColorRedZoneSize;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public float warningColorBlueZoneSize;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public float PatternFrequency;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public float LikelihoodChangeLeanDirection;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public string[] PatternIDs;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public int[] BoostPoints;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public string[] Resources_1Star;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public int[] ResourceAmounts_1Star;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public string[] Resources_2Star;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public int[] ResourceAmounts_2Star;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public string[] Resources_3Star;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public int[] ResourceAmounts_3Star;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public int[] TournamentPoints;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public string FishScale;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public string[] AttractionLure;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public int[] AttractionValue;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public string PreferredFloatingLure01;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public string PreferredFloatingLure02;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public string PreferredFloatingLure03;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public string PreferredSwimmingLure01;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public string PreferredSwimmingLure02;

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public string PreferredSwimmingLure03;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public int World;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public string[] Locations;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public float UnderwaterDepth;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		public float ExamineDistance;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public float JumpDistance;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		public float JumpHeight;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public float JumpDuration;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		public bool CanSchool;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public float MinSpeedInAquarium;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		public float MaxSpeedInAquarium;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public string PreferredRegion;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public string AquariumPrefabName;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public float AddChargeOnRelease;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		public float AddChargeOnKeep;

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public float PowerReelLvl1BoostDuration;

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		public float PowerReelLvl2BoostDuration;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public float PowerReelLvl3BoostDuration;

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		public float PowerReelLvl1BoostReelMult;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public float PowerReelLvl2BoostReelMult;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		public float PowerReelLvl3BoostReelMult;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public float StunLvl1BoostDuration;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		public float StunLvl2BoostDuration;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public float StunLvl3BoostDuration;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		public float TeleportLvl1BoostPower;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public float TeleportLvl2BoostPower;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		public float TeleportLvl3BoostPower;

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0xDF4BA0", Offset = "0xDF4BA0", VA = "0xDF4BA0")]
		public FishType()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F3")]
	public class FishPoolDataClass
	{
		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FishPool[] FishPools;

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0xE75660", Offset = "0xE75660", VA = "0xE75660")]
		public FishPoolDataClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F4")]
	public class FishPool
	{
		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BCID;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] Fishes;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float[] RarityOverrides;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float WaitTimeNoBaitMin;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float WaitTimeNoBaitMax;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float WaitTimeWithBaitMin;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float WaitTimeWithBaitMax;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float HookWindowTime;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float MaxFleeDistance;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string World;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float[] StarProbability;

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0xE75548", Offset = "0xE75548", VA = "0xE75548")]
		public FishPool()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F5")]
	public class FishPool2DataClass
	{
		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FishPool2[] FishPool2s;

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0xE75558", Offset = "0xE75558", VA = "0xE75558")]
		public FishPool2DataClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F6")]
	public class FishPool2
	{
		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BCID;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string World;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Location;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int TotalFish;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool IsFishRespawn;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string[] CriticalFishes;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float[] CriticalFishStarProbability;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool[] CriticalFishFishfinderables;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float[] CriticalFishLocations;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string[] MainFishes;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float[] MainFishProbability;

		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float[] MainFishStarProbability;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool[] MainFishFishfinderables;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float[] MainFishLocations;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string[] RespawnFishes;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float[] RespawnFishProbability;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float[] RespawnFishStarProbability;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool[] RespawnFishFishfinderables;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float[] RespawnFishLocations;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool PredatorActive;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public string PredatorSkin;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public int PredatorMaxNumber;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public int PredatorInitialNumber;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public int PredatorNumSpawnAtOnce;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float PredatorSpawnRate;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float PredatorLifetime;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float PredatorSystemActiveDuration;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float PredatorSystemInactiveDuration;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float PredatorSpeed;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public bool BossPredatorActive;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public string BossPredatorSkin;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public int BossPredatorMaxNumber;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public int BossPredatorInitialNumber;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public int BossPredatorNumSpawnAtOnce;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public float BossPredatorSpawnRate;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float BossPredatorLifetime;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public float BossPredatorSystemActiveDuration;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public float BossPredatorSystemInactiveDuration;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public float BossPredatorSpeed;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public bool RepellentActive;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public string RepellentSkin;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public int RepellentMaxNumber;

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public int RepellentInitialNumber;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public int RepellentNumSpawnAtOnce;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public float RepellentSpawnRate;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public float RepellentEffectiveDuration;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public float RepellentLifetime;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public float RepellentSystemActiveDuration;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public float RepellentSystemInactiveDuration;

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0xE75550", Offset = "0xE75550", VA = "0xE75550")]
		public FishPool2()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F7")]
	public class MissionDataClass
	{
		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mission[] Missions;

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0xE4E4B4", Offset = "0xE4E4B4", VA = "0xE4E4B4")]
		public MissionDataClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F8")]
	public class Mission
	{
		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BCID;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string World;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Location;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string MissionType;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string TimeOfDay;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string MissionName;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string MissionDescription;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string MissionShortDescription;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string[] TargetFishTypes;

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int[] TargetFishTotals;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int[] TargetFishGoalStarRating;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string[] TargetFishGrades;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool[] IsAnyofTargetFish;

		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string FishGroupName;

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string FishGroupIcon;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float TargetGoalTotalWeight;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public int TargetGoalTotalStar;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public string[] TargetItems;

		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int[] TargetItemTotals;

		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public int TimeLimit;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public int BaitLimit;

		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public string[] FishPoolIDs;

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public string LootCratePoolID;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public string[] TargetLocations;

		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public int FishPoolChangingFrequency;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public string[] Rewards;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public int[] RewardAmounts;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public string[] UnlockedMission;

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public int AttemptLimit;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public string NewsHeadlineText;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public string NewsImage;

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public int PlayerRanking;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public int[] TeamRanks;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public string MiniGame;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public string CutsceneButtonText;

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0xE451DC", Offset = "0xE451DC", VA = "0xE451DC")]
		public Mission()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F9")]
	public class MissionProgress
	{
		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string MissionBCID;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MissionProgress_Fish[] ProgressFishes;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MissionProgress_Item[] ProgressItems;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int TotalStar;

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0xE4E4BC", Offset = "0xE4E4BC", VA = "0xE4E4BC")]
		public MissionProgress()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001FA")]
	public class MissionProgress_Fish
	{
		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TargetFish TargetFish;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Progress;

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0xE4E4C4", Offset = "0xE4E4C4", VA = "0xE4E4C4")]
		public MissionProgress_Fish()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001FB")]
	public class MissionProgress_Item
	{
		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TargetItem TargetItem;

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Progress;

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0xE4E4CC", Offset = "0xE4E4CC", VA = "0xE4E4CC")]
		public MissionProgress_Item()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001FC")]
	public class TargetFish
	{
		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string TargetFishTypeBCID;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int TargetTotal;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int TargetFishGoalStarRating;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FishTypeSO.Grade TargetFishGrade;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool IsAnyofTarget;

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0xD14F90", Offset = "0xD14F90", VA = "0xD14F90")]
		public TargetFish()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001FD")]
	public class TargetItem
	{
		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string TargetItemBCID;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int TargetTotal;

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0xD14F98", Offset = "0xD14F98", VA = "0xD14F98")]
		public TargetItem()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001FE")]
	public class FishOPedia
	{
		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string FishBCID;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float RecordWeight;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float RecordLength;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float TotalWeight;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int Amount;

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0xE74224", Offset = "0xE74224", VA = "0xE74224")]
		public FishOPedia()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001FF")]
	public class ItemDataClass
	{
		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Item[] Items;

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0xE066E8", Offset = "0xE066E8", VA = "0xE066E8")]
		public ItemDataClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000200")]
	public class Item : ItemProgress
	{
		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string ItemName;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Description;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Type;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string Image;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string Prefab;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string UpgradeFrom;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int Level;

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0xE066C0", Offset = "0xE066C0", VA = "0xE066C0")]
		public Item()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000201")]
	public class ItemProgress
	{
		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BCID;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Amount;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool Unlock;

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0xE066C8", Offset = "0xE066C8", VA = "0xE066C8")]
		public ItemProgress()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000202")]
	public class MapUnlockProgress
	{
		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BCID;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Unlocked;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool Arrived;

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0xE451D4", Offset = "0xE451D4", VA = "0xE451D4")]
		public MapUnlockProgress()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000203")]
	public class FishingDataClass
	{
		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Fishing[] Fishings;

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0xDF559C", Offset = "0xDF559C", VA = "0xDF559C")]
		public FishingDataClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000204")]
	public class Fishing
	{
		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BCID;

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0xDF5594", Offset = "0xDF5594", VA = "0xDF5594")]
		public Fishing()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000205")]
	public class CharmDataClass
	{
		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Charm[] Charms;

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0xCF8740", Offset = "0xCF8740", VA = "0xCF8740")]
		public CharmDataClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000206")]
	public class Charm
	{
		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BCID;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Type;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] TargetFishIDs;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int[] TargetWorlds;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string[] TargetGrades;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string[] TargetDifficulties;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string[] TargetScales;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float Modifier;

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0xCF8720", Offset = "0xCF8720", VA = "0xCF8720")]
		public Charm()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000207")]
	public class CharmCraftingDataClass
	{
		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CharmCrafting[] CharmCraftings;

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0xCF8730", Offset = "0xCF8730", VA = "0xCF8730")]
		public CharmCraftingDataClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000208")]
	public class CharmCrafting
	{
		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BCID;

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0xCF8728", Offset = "0xCF8728", VA = "0xCF8728")]
		public CharmCrafting()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000209")]
	public class ItemCraftingDataClass
	{
		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ItemCrafting[] ItemCraftings;

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0xE066D8", Offset = "0xE066D8", VA = "0xE066D8")]
		public ItemCraftingDataClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200020A")]
	public class ItemCrafting
	{
		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BCID;

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0xE066D0", Offset = "0xE066D0", VA = "0xE066D0")]
		public ItemCrafting()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200020B")]
	public class RodDataClass
	{
		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RodType[] RodTypes;

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0xD519B0", Offset = "0xD519B0", VA = "0xD519B0")]
		public RodDataClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200020C")]
	public class RodType
	{
		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BCID;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string BoostType;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int BoostCharge;

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0xD57680", Offset = "0xD57680", VA = "0xD57680")]
		public RodType()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200020D")]
	public class LureDataClass
	{
		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LureType[] LureTypes;

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0xE0A704", Offset = "0xE0A704", VA = "0xE0A704")]
		public LureDataClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200020E")]
	public class LureType
	{
		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BCID;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AttractionRadius;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Type;

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0xE43398", Offset = "0xE43398", VA = "0xE43398")]
		public LureType()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200020F")]
	public class GameTextDataClass
	{
		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameText[] GameTexts;

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0xDFF9A0", Offset = "0xDFF9A0", VA = "0xDFF9A0")]
		public GameTextDataClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000210")]
	public class GameText
	{
		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Key;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string en_US;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string fr_FR;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string zh_TW;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string zh_CN;

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0xDFF998", Offset = "0xDFF998", VA = "0xDFF998")]
		public GameText()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000211")]
	public class LocationDataClass
	{
		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Location[] Locations;

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0xE07C10", Offset = "0xE07C10", VA = "0xE07C10")]
		public LocationDataClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000212")]
	public class Location
	{
		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BCID;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string LocationName;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string SceneName;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string FishPool;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string LootCratePool;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float PullupDistance;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float AllowPatternPlayDistance;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float MaxDistance;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float ShoreBarrierZPos;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool UseBloom;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int FFRLevel;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int QualityLevel;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float RenderScale;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int LocationIndex;

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0xE07C08", Offset = "0xE07C08", VA = "0xE07C08")]
		public Location()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000213")]
	public class IngredientDataClass
	{
		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Ingredients[] Ingredients;

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0xE034A4", Offset = "0xE034A4", VA = "0xE034A4")]
		public IngredientDataClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000214")]
	public class Ingredients
	{
		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BCID;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string IngredientName;

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0xE034B4", Offset = "0xE034B4", VA = "0xE034B4")]
		public Ingredients()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000215")]
	public class CraftingRecipesDataClass
	{
		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CraftingRecipe[] CraftingRecipes;

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0xCFC148", Offset = "0xCFC148", VA = "0xCFC148")]
		public CraftingRecipesDataClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000216")]
	public class CraftingRecipe
	{
		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BCID;

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string CraftedItem;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] Ingredients;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int[] IngredientsAmounts;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int CraftingLimit;

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0xCFC140", Offset = "0xCFC140", VA = "0xCFC140")]
		public CraftingRecipe()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000217")]
	public class PatternsDataClass
	{
		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Pattern[] Patterns;

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0xE57D94", Offset = "0xE57D94", VA = "0xE57D94")]
		public PatternsDataClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000218")]
	public class Pattern
	{
		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BCID;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Difficulty;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] Arrows;

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0xE52B8C", Offset = "0xE52B8C", VA = "0xE52B8C")]
		public Pattern()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000219")]
	public class LootBoxDataClass
	{
		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LootBox[] LootBoxes;

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0xE07C38", Offset = "0xE07C38", VA = "0xE07C38")]
		public LootBoxDataClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200021A")]
	public class LootBox
	{
		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BCID;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] TargetIngredient;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float[] TargetIngredientValues;

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0xE07C30", Offset = "0xE07C30", VA = "0xE07C30")]
		public LootBox()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200021B")]
	public class LootCratePoolDataClass
	{
		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LootCratePool[] LootCratePools;

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0xE086FC", Offset = "0xE086FC", VA = "0xE086FC")]
		public LootCratePoolDataClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200021C")]
	public class LootCratePool
	{
		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BCID;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int TotalLoot;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool RespawnLoot;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] CriticalLoot_Types;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] CriticalLoot_Skins;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int[] CriticalLoot_Sizes;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int[] CriticalLoot_NumItems;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int[] CriticalLoot_ItemCounts;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string[] CriticalLoot_ContentItems;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float[] CriticalLoot_ContentProbabilities;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool[] CriticalLoot_Visibles;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float[] CriticalLoot_Locations;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float[] CriticalLoot_Probabilities;

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string[] MainLoot_Types;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string[] MainLoot_Skins;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int[] MainLoot_Sizes;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int[] MainLoot_NumItems;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int[] MainLoot_ItemCounts;

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public string[] MainLoot_ContentItems;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float[] MainLoot_ContentProbabilities;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool[] MainLoot_Visibles;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float[] MainLoot_Locations;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float[] MainLoot_Probabilities;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public string[] RespawnLoot_Types;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public string[] RespawnLoot_Skins;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public int[] RespawnLoot_Sizes;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public int[] RespawnLoot_NumItems;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public int[] RespawnLoot_ItemCounts;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public string[] RespawnLoot_ContentItems;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float[] RespawnLoot_ContentProbabilities;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public bool[] RespawnLoot_Visibles;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public float[] RespawnLoot_Locations;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public float[] RespawnLoot_Probabilities;

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0xE086F4", Offset = "0xE086F4", VA = "0xE086F4")]
		public LootCratePool()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200021D")]
	public class DecorationDataClass
	{
		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Decoration[] Decorations;

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0xD0001C", Offset = "0xD0001C", VA = "0xD0001C")]
		public DecorationDataClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200021E")]
	public class Decoration
	{
		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BCID;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string DecorationType;

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0xCFFFCC", Offset = "0xCFFFCC", VA = "0xCFFFCC")]
		public Decoration()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200021F")]
	public class FishSchoolData
	{
		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BCID;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int amount;

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0xDF4264", Offset = "0xDF4264", VA = "0xDF4264")]
		public FishSchoolData(string fishBCID, int amount)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000220")]
	public class DecorationData
	{
		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BCID;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int decoSlot;

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0xCFFFD4", Offset = "0xCFFFD4", VA = "0xCFFFD4")]
		public DecorationData(string decoBCID, int decoSlot)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000221")]
	public class AquariumPreset
	{
		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<FishSchoolData> fishes;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<DecorationData> decos;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string interior;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool rigidbodiesEnabled;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool collidersEnabled;

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0xD746A8", Offset = "0xD746A8", VA = "0xD746A8")]
		public AquariumPreset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000222")]
	public class LoreDataClass
	{
		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LoreData[] Lores;

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0xE09998", Offset = "0xE09998", VA = "0xE09998")]
		public LoreDataClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000223")]
	public class LoreData
	{
		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BCID;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string LoreTitle;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string LoreDescription;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string LoreIcon;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string LoreHeadlineImage;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool UnlockedAtStart;

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0xE09990", Offset = "0xE09990", VA = "0xE09990")]
		public LoreData()
		{
		}
	}
	[Token(Token = "0x2000224")]
	public class ControllerModel : MonoBehaviour
	{
		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator anim;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Handside side;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool isGrippingRod;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		private bool isReeling;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject reelingStartVFX;

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0xCF8908", Offset = "0xCF8908", VA = "0xCF8908")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0xCF9644", Offset = "0xCF9644", VA = "0xCF9644")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0xCFA0D8", Offset = "0xCFA0D8", VA = "0xCFA0D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0xCF8F80", Offset = "0xCF8F80", VA = "0xCF8F80")]
		public void SetVisible(bool state)
		{
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0xCFA23C", Offset = "0xCFA23C", VA = "0xCFA23C")]
		private void GrabRod()
		{
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0xCFA414", Offset = "0xCFA414", VA = "0xCFA414")]
		private void ReleaseRod()
		{
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0xCFA540", Offset = "0xCFA540", VA = "0xCFA540")]
		private void GrabReel()
		{
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0xCFA5E8", Offset = "0xCFA5E8", VA = "0xCFA5E8")]
		private void ReleaseReel()
		{
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0xCFA660", Offset = "0xCFA660", VA = "0xCFA660")]
		private void AnimateIndex(float value)
		{
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0xCFA714", Offset = "0xCFA714", VA = "0xCFA714")]
		private void AnimateFingers(float value)
		{
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0xCFA7C8", Offset = "0xCFA7C8", VA = "0xCFA7C8")]
		private void AnimateThumb(bool state)
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0xCFA898", Offset = "0xCFA898", VA = "0xCFA898")]
		private void StartSceneLoadFromMainMenu()
		{
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0xCFA8A0", Offset = "0xCFA8A0", VA = "0xCFA8A0")]
		private void SceneLoadFinished()
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0xCFA8A8", Offset = "0xCFA8A8", VA = "0xCFA8A8")]
		private void HideHand()
		{
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0xCFA8B0", Offset = "0xCFA8B0", VA = "0xCFA8B0")]
		private void ShowHand()
		{
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0xCFA8B8", Offset = "0xCFA8B8", VA = "0xCFA8B8")]
		private void StartBoost()
		{
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0xCFA96C", Offset = "0xCFA96C", VA = "0xCFA96C")]
		private void StopBoost()
		{
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0xCFAA20", Offset = "0xCFAA20", VA = "0xCFAA20")]
		private void FailedBoost()
		{
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0xCFAA84", Offset = "0xCFAA84", VA = "0xCFAA84")]
		public ControllerModel()
		{
		}
	}
	[Token(Token = "0x2000225")]
	public class CraftingAnimationManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000496")]
		public struct DisplayItem
		{
			[Token(Token = "0x4001DA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string BCID;

			[Token(Token = "0x4001DA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Transform model;
		}

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DisplayItem[] displayItems;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject modelRotator;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CraftingAnimationManager instance;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Animator machineAnim;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Animator liquidAnim;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float fillDur;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float drainDur;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string craftedItemBCID;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject steam;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioSource audio;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip successSFX;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AudioClip failSFX;

		[Token(Token = "0x17000148")]
		public static string CraftedItemBCID
		{
			[Token(Token = "0x6000C89")]
			[Address(RVA = "0xCFAA8C", Offset = "0xCFAA8C", VA = "0xCFAA8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C8A")]
			[Address(RVA = "0xCFAAE8", Offset = "0xCFAAE8", VA = "0xCFAAE8")]
			set
			{
			}
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0xCFAB4C", Offset = "0xCFAB4C", VA = "0xCFAB4C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0xCFAC14", Offset = "0xCFAC14", VA = "0xCFAC14")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0xCFACC0", Offset = "0xCFACC0", VA = "0xCFACC0")]
		private void CraftingFailed()
		{
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0xCFAD68", Offset = "0xCFAD68", VA = "0xCFAD68")]
		private void CraftingStarted()
		{
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0xCFAE74", Offset = "0xCFAE74", VA = "0xCFAE74")]
		private void Liquid()
		{
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0xCFAEF4", Offset = "0xCFAEF4", VA = "0xCFAEF4")]
		private void Steam()
		{
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0xCFAF14", Offset = "0xCFAF14", VA = "0xCFAF14")]
		private void StationUp()
		{
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0xCFAFC4", Offset = "0xCFAFC4", VA = "0xCFAFC4")]
		private void ShowUI()
		{
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0xCFAFF4", Offset = "0xCFAFF4", VA = "0xCFAFF4")]
		private void ShowItem()
		{
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0xCFB118", Offset = "0xCFB118", VA = "0xCFB118")]
		private void RemoveItem()
		{
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0xCFB220", Offset = "0xCFB220", VA = "0xCFB220")]
		public CraftingAnimationManager()
		{
		}
	}
	[Token(Token = "0x2000226")]
	public class CraftingMinigameController : MonoBehaviour
	{
		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform rotator;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CraftingMinigameProjectiles projectiles;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float rpm;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float degrees;

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0xCFB234", Offset = "0xCFB234", VA = "0xCFB234")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0xCFB2A8", Offset = "0xCFB2A8", VA = "0xCFB2A8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0xCFB31C", Offset = "0xCFB31C", VA = "0xCFB31C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0xCFB3AC", Offset = "0xCFB3AC", VA = "0xCFB3AC")]
		private void SetRotateSpeed(float rpm)
		{
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0xCFB480", Offset = "0xCFB480", VA = "0xCFB480")]
		private void Fire(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0xCFB548", Offset = "0xCFB548", VA = "0xCFB548")]
		private float CheckHit(Handside side)
		{
			return default(float);
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0xCFBA48", Offset = "0xCFBA48", VA = "0xCFBA48")]
		public CraftingMinigameController()
		{
		}
	}
	[Token(Token = "0x2000227")]
	public class CraftingMinigameDebugActivate : MonoBehaviour
	{
		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject CraftingMinigame;

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0xCFBA58", Offset = "0xCFBA58", VA = "0xCFBA58")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0xCFBB80", Offset = "0xCFBB80", VA = "0xCFBB80")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0xCFBCA8", Offset = "0xCFBCA8", VA = "0xCFBCA8")]
		private void CraftingMinigameActivateEvent(bool state)
		{
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0xCFBCC8", Offset = "0xCFBCC8", VA = "0xCFBCC8")]
		public CraftingMinigameDebugActivate()
		{
		}
	}
	[Token(Token = "0x2000228")]
	public class CraftingMinigameProjectiles : MonoBehaviour
	{
		[Token(Token = "0x2000497")]
		private struct projectile
		{
			[Token(Token = "0x4001DA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject proj;

			[Token(Token = "0x4001DA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 startPos;

			[Token(Token = "0x4001DA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 targetPos;

			[Token(Token = "0x4001DAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float progress;

			[Token(Token = "0x4001DAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float killTime;

			[Token(Token = "0x4001DAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float hitDistance;

			[Token(Token = "0x4001DAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public TrailRenderer trailRenderer;
		}

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject[] projectileObjects;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float projectileLifetime;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float projectileSpeed;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private projectile[] projectiles;

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0xCFBCD0", Offset = "0xCFBCD0", VA = "0xCFBCD0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0xCFBE74", Offset = "0xCFBE74", VA = "0xCFBE74")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0xCFBE78", Offset = "0xCFBE78", VA = "0xCFBE78")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0xCFBE04", Offset = "0xCFBE04", VA = "0xCFBE04")]
		private void DisableAllProjectiles()
		{
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0xCFB69C", Offset = "0xCFB69C", VA = "0xCFB69C")]
		public void Fire(Handside side, float hitDistance)
		{
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0xCFC10C", Offset = "0xCFC10C", VA = "0xCFC10C")]
		public CraftingMinigameProjectiles()
		{
		}
	}
	[Token(Token = "0x2000229")]
	public class CraftingMinigameTarget : MonoBehaviour
	{
		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0xCFC120", Offset = "0xCFC120", VA = "0xCFC120")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0xCFC124", Offset = "0xCFC124", VA = "0xCFC124")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0xCFC128", Offset = "0xCFC128", VA = "0xCFC128")]
		public CraftingMinigameTarget()
		{
		}
	}
	[Token(Token = "0x200022A")]
	public class CraftingMinigameUI : MonoBehaviour
	{
		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0xCFC130", Offset = "0xCFC130", VA = "0xCFC130")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0xCFC134", Offset = "0xCFC134", VA = "0xCFC134")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0xCFC138", Offset = "0xCFC138", VA = "0xCFC138")]
		public CraftingMinigameUI()
		{
		}
	}
	[Token(Token = "0x200022B")]
	public class CutsceneDismiss : MonoBehaviour
	{
		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0xCFF858", Offset = "0xCFF858", VA = "0xCFF858")]
		public void OnClick()
		{
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0xCFF8C0", Offset = "0xCFF8C0", VA = "0xCFF8C0")]
		public CutsceneDismiss()
		{
		}
	}
	[Token(Token = "0x200022C")]
	public class DebugSlider : MonoBehaviour
	{
		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static DebugSlider instance;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Slider slider;

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0xCFFB98", Offset = "0xCFFB98", VA = "0xCFFB98")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0xCFFBF0", Offset = "0xCFFBF0", VA = "0xCFFBF0")]
		public static void SetVal(float val)
		{
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0xCFFC6C", Offset = "0xCFFC6C", VA = "0xCFFC6C")]
		public DebugSlider()
		{
		}
	}
	[Token(Token = "0x200022D")]
	public class DebugUnlock : MonoBehaviour
	{
		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] objectsToShow;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int counter;

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0xCFFE68", Offset = "0xCFFE68", VA = "0xCFFE68")]
		public void OnClick()
		{
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0xCFFEFC", Offset = "0xCFFEFC", VA = "0xCFFEFC")]
		private void Unlock()
		{
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0xCFFFC4", Offset = "0xCFFFC4", VA = "0xCFFFC4")]
		public DebugUnlock()
		{
		}
	}
	[Token(Token = "0x200022E")]
	public enum Dialog
	{
		[Token(Token = "0x4000E05")]
		FPDismiss,
		[Token(Token = "0x4000E06")]
		FPSummon,
		[Token(Token = "0x4000E07")]
		FPLocationChange,
		[Token(Token = "0x4000E08")]
		FPUnlockMission,
		[Token(Token = "0x4000E09")]
		FPCastNotFarEnough,
		[Token(Token = "0x4000E0A")]
		FPCastTutSuccess,
		[Token(Token = "0x4000E0B")]
		FPCastTutFailed
	}
	[Token(Token = "0x200022F")]
	public class DialogAudio : MonoBehaviour
	{
		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static DialogAudio instance;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int notFarEnoughIndex;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip[] FPDismissClips;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip[] FPSummonClips;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip[] FPLocationChangeClips;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip[] FPCastNotFarEnough;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioClip[] FPCastTutSuccessClips;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip[] FPCastTutFailedClips;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioClip FPUnlockedMission;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioSource fishingPad;

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0xD0063C", Offset = "0xD0063C", VA = "0xD0063C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0xD00694", Offset = "0xD00694", VA = "0xD00694")]
		public static void Play(Dialog dia)
		{
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0xD008E0", Offset = "0xD008E0", VA = "0xD008E0")]
		public DialogAudio()
		{
		}
	}
	[Token(Token = "0x2000230")]
	public class DisableAquaUI : MonoBehaviour
	{
		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0xD00F58", Offset = "0xD00F58", VA = "0xD00F58")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0xD00FA0", Offset = "0xD00FA0", VA = "0xD00FA0")]
		public DisableAquaUI()
		{
		}
	}
	[Token(Token = "0x2000231")]
	public class DisableSnapTurn : MonoBehaviour
	{
		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SnapTurnProvider snapTurnProvider;

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0xD012DC", Offset = "0xD012DC", VA = "0xD012DC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0xD01548", Offset = "0xD01548", VA = "0xD01548")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0xD017B4", Offset = "0xD017B4", VA = "0xD017B4")]
		private void EventHub_OnTeleportDisabled()
		{
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0xD017D0", Offset = "0xD017D0", VA = "0xD017D0")]
		private void EventHub_OnTeleportEnabled()
		{
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0xD017F0", Offset = "0xD017F0", VA = "0xD017F0")]
		private void LocationChanged(LocationSO locationSO, bool comingFromShip)
		{
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0xD018B8", Offset = "0xD018B8", VA = "0xD018B8")]
		public DisableSnapTurn()
		{
		}
	}
	[Token(Token = "0x2000232")]
	public class DistanceReadout : MonoBehaviour
	{
		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static DistanceReadout instance;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI readout;

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0xD01A88", Offset = "0xD01A88", VA = "0xD01A88")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0xCED3B4", Offset = "0xCED3B4", VA = "0xCED3B4")]
		public static void SetReadout(float distance)
		{
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0xD01AE0", Offset = "0xD01AE0", VA = "0xD01AE0")]
		public DistanceReadout()
		{
		}
	}
	[Token(Token = "0x2000233")]
	public class DistanceScaler : MonoBehaviour
	{
		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve curve;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxScaleFactor;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float minScaleFactor;

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0xD01AE8", Offset = "0xD01AE8", VA = "0xD01AE8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0xD01CE8", Offset = "0xD01CE8", VA = "0xD01CE8")]
		public DistanceScaler()
		{
		}
	}
	[Token(Token = "0x2000234")]
	public class EagleCries : MonoBehaviour
	{
		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSource audio;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip[] clips;

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0xD0212C", Offset = "0xD0212C", VA = "0xD0212C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0xD02220", Offset = "0xD02220", VA = "0xD02220")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0xD02130", Offset = "0xD02130", VA = "0xD02130")]
		private void PlayCry()
		{
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0xD02228", Offset = "0xD02228", VA = "0xD02228")]
		public EagleCries()
		{
		}
	}
	[Token(Token = "0x2000235")]
	public class EnableByPlatform : MonoBehaviour
	{
		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject[] QuestObjects;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject[] PicoObjects;

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0xD022D0", Offset = "0xD022D0", VA = "0xD022D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0xD02414", Offset = "0xD02414", VA = "0xD02414")]
		public EnableByPlatform()
		{
		}
	}
	[Token(Token = "0x2000236")]
	public class EnergyValue : MonoBehaviour
	{
		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SpriteRenderer energyIcon;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpriteRenderer energyIconFull;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SpriteRenderer energyIconCharging;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI energyText;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Tween movement;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Tween iconFade;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Tween textFade;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Color iconStartColor;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Color iconFadeColor;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Color textStartColor;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Color textFadeColor;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Color textStartColorCharging;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Color textFadeColorCharging;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public SetScaleBasedOnDistance uiScaler;

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0xD02728", Offset = "0xD02728", VA = "0xD02728")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0xD029C8", Offset = "0xD029C8", VA = "0xD029C8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0xD02A10", Offset = "0xD02A10", VA = "0xD02A10")]
		public EnergyValue()
		{
		}
	}
	[Token(Token = "0x2000237")]
	public class Environment : MonoBehaviour
	{
		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0xD02A18", Offset = "0xD02A18", VA = "0xD02A18")]
		public Environment()
		{
		}
	}
	[Token(Token = "0x2000238")]
	public class ExamineFishController : MonoBehaviour
	{
		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ExamineFishController instance;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float distanceFromHmd;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 velocity;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float rotateTime;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool isExamining;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform fish;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 fishOriginalPos;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 fishOriginalRot;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Tween fishPosTween;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Tween fishRotTween;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Tween rotateTween;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Tween punchTween;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private XRBaseController examiningController;

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0xE6906C", Offset = "0xE6906C", VA = "0xE6906C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0xE69140", Offset = "0xE69140", VA = "0xE69140")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0xE691F8", Offset = "0xE691F8", VA = "0xE691F8")]
		private void OnTriggerReleased(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0xE69428", Offset = "0xE69428", VA = "0xE69428")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0xE69620", Offset = "0xE69620", VA = "0xE69620")]
		private void SetPosition()
		{
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0xE69438", Offset = "0xE69438", VA = "0xE69438")]
		private void SetRotation()
		{
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0xE6971C", Offset = "0xE6971C", VA = "0xE6971C")]
		public static void SetFishToExamine(Transform _fish, float _examineDistance, Vector3 pos, Vector3 rot)
		{
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0xE698F0", Offset = "0xE698F0", VA = "0xE698F0")]
		public void Examine(SelectEnterEventArgs args)
		{
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0xE69240", Offset = "0xE69240", VA = "0xE69240")]
		private void Detach()
		{
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0xE69AEC", Offset = "0xE69AEC", VA = "0xE69AEC")]
		private XRBaseController SetExaminingController(SelectEnterEventArgs args)
		{
			return null;
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0xE69BF0", Offset = "0xE69BF0", VA = "0xE69BF0")]
		private void RestoreUI()
		{
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0xE69808", Offset = "0xE69808", VA = "0xE69808")]
		private void DisplayRotation()
		{
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0xE69C70", Offset = "0xE69C70", VA = "0xE69C70")]
		public void DisableDisplayRotation(FpFish fish)
		{
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0xE69C80", Offset = "0xE69C80", VA = "0xE69C80")]
		public void BounceFish()
		{
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0xE69D18", Offset = "0xE69D18", VA = "0xE69D18")]
		public ExamineFishController()
		{
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0xE69DA4", Offset = "0xE69DA4", VA = "0xE69DA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACB928", Offset = "0xACB928")]
		private void <Detach>b__21_0()
		{
		}
	}
	[Token(Token = "0x2000239")]
	public enum FishState
	{
		[Token(Token = "0x4000E3C")]
		idle,
		[Token(Token = "0x4000E3D")]
		patrolling,
		[Token(Token = "0x4000E3E")]
		attracted,
		[Token(Token = "0x4000E3F")]
		striking,
		[Token(Token = "0x4000E40")]
		hooked,
		[Token(Token = "0x4000E41")]
		spooked,
		[Token(Token = "0x4000E42")]
		nudged
	}
	[Token(Token = "0x200023A")]
	public class FishAI : MonoBehaviour
	{
		[Token(Token = "0x2000498")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0E90", Offset = "0xAC0E90")]
		private sealed class <AwaitStartPatrolling>d__59 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FishAI <>4__this;

			[Token(Token = "0x4001DB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x170002F7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E58")]
				[Address(RVA = "0xE6E140", Offset = "0xE6E140", VA = "0xE6E140", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E5A")]
				[Address(RVA = "0xE6E1A8", Offset = "0xE6E1A8", VA = "0xE6E1A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E55")]
			[Address(RVA = "0xE6C5B4", Offset = "0xE6C5B4", VA = "0xE6C5B4")]
			[DebuggerHidden]
			public <AwaitStartPatrolling>d__59(int <>1__state)
			{
			}

			[Token(Token = "0x6001E56")]
			[Address(RVA = "0xE6DF24", Offset = "0xE6DF24", VA = "0xE6DF24", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E57")]
			[Address(RVA = "0xE6DF28", Offset = "0xE6DF28", VA = "0xE6DF28", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E59")]
			[Address(RVA = "0xE6E148", Offset = "0xE6E148", VA = "0xE6E148", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000499")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0EA0", Offset = "0xAC0EA0")]
		private sealed class <>c__DisplayClass68_0
		{
			[Token(Token = "0x4001DB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FishAI <>4__this;

			[Token(Token = "0x4001DB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float duration;

			[Token(Token = "0x6001E5B")]
			[Address(RVA = "0xE6D53C", Offset = "0xE6D53C", VA = "0xE6D53C")]
			public <>c__DisplayClass68_0()
			{
			}

			[Token(Token = "0x6001E5C")]
			[Address(RVA = "0xE6DED0", Offset = "0xE6DED0", VA = "0xE6DED0")]
			internal void <SetNextTargetPatrolling>b__0()
			{
			}
		}

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private NavMeshAgent fish;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FishState state;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Vector3 patrolPoint;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float patrolRadius;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 target;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform model;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Collider col;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public uint attractionVal;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float nextCointTossTime;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float nextPatrolPointTime;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer rend;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Animator anim;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Animator[] anims;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public FpFish fpFish;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float minimumHookDistance;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public TextMeshProUGUI debugTxt;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC4D94", Offset = "0xAC4D94")]
		public Gradient[] fishAiColorGradients;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float brightestDistance;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float darkestDistance;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject[] scaleModels;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float depth;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 modelPos;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float spookedTimeout;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float spookedStartTime;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public LayerMask hazardLayer;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float hazardDetectionDistance;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float hazardDetectionInterval;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private bool insideLureRing;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Tween nibbleTween;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool isNibbling;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		public bool isSprinting;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float preSprintAnimSpeed;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public bool isCircling;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		public bool isDoingLookat;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Tween sprint;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Tween lookat;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool overrideAnimSpeed;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Vector3[] waypoints;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private int numWaypointsOnRadius;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private int waypointIndex;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool isSuspended;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private float attractionStartTime;

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0xE6ABA8", Offset = "0xE6ABA8", VA = "0xE6ABA8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0xE6AC64", Offset = "0xE6AC64", VA = "0xE6AC64")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0xE6B078", Offset = "0xE6B078", VA = "0xE6B078")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0xE6B498", Offset = "0xE6B498", VA = "0xE6B498")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0xE6B518", Offset = "0xE6B518", VA = "0xE6B518")]
		private void EventHub_OnPlayerLureEquip(LureSO lure)
		{
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0xE6B570", Offset = "0xE6B570", VA = "0xE6B570")]
		private void DetectHazard()
		{
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0xE6B7C0", Offset = "0xE6B7C0", VA = "0xE6B7C0")]
		private void BobberExitedWater()
		{
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0xE6B848", Offset = "0xE6B848", VA = "0xE6B848")]
		private void BobberEnteredWater()
		{
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0xE6B8D8", Offset = "0xE6B8D8", VA = "0xE6B8D8")]
		private void CheckInsideAttractionRadius()
		{
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0xE6BDDC", Offset = "0xE6BDDC", VA = "0xE6BDDC")]
		internal void Nibble()
		{
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0xE6BF40", Offset = "0xE6BF40", VA = "0xE6BF40")]
		internal void InitFishAi()
		{
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0xE6BB34", Offset = "0xE6BB34", VA = "0xE6BB34")]
		private bool IsInsideAttractionRadius()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0xE6BBCC", Offset = "0xE6BBCC", VA = "0xE6BBCC")]
		private bool IsInsideLureRing()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0xE6C484", Offset = "0xE6C484", VA = "0xE6C484")]
		private bool IsInsideSpookedRadius()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0xE6C35C", Offset = "0xE6C35C", VA = "0xE6C35C")]
		private float DistanceToLure()
		{
			return default(float);
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0xE6C4A4", Offset = "0xE6C4A4", VA = "0xE6C4A4")]
		private float DistanceToPlayer()
		{
			return default(float);
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0xE6BC70", Offset = "0xE6BC70", VA = "0xE6BC70")]
		private bool IsFurtherThanMinHookDistance()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0xE6AF34", Offset = "0xE6AF34", VA = "0xE6AF34")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACB938", Offset = "0xACB938")]
		private IEnumerator AwaitStartPatrolling()
		{
			return null;
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0xE6B808", Offset = "0xE6B808", VA = "0xE6B808")]
		private void StartPatrolling()
		{
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0xE6BD30", Offset = "0xE6BD30", VA = "0xE6BD30")]
		private void StartAttracted()
		{
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0xE6C7B4", Offset = "0xE6C7B4", VA = "0xE6C7B4")]
		public void StartStriking()
		{
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0xE6C7C0", Offset = "0xE6C7C0", VA = "0xE6C7C0")]
		public void StartSpooked()
		{
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0xE6B614", Offset = "0xE6B614", VA = "0xE6B614")]
		private void DoSpooked()
		{
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0xE6C884", Offset = "0xE6C884", VA = "0xE6C884")]
		private void StopSpooked()
		{
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0xE6C8DC", Offset = "0xE6C8DC", VA = "0xE6C8DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0xE6C5E8", Offset = "0xE6C5E8", VA = "0xE6C5E8")]
		private void SetTargetAttracted()
		{
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0xE6CED8", Offset = "0xE6CED8", VA = "0xE6CED8")]
		private void SetNextTargetPatrolling()
		{
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0xE6D544", Offset = "0xE6D544", VA = "0xE6D544")]
		private void StartCircling()
		{
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0xE6CDF4", Offset = "0xE6CDF4", VA = "0xE6CDF4")]
		private void SetNextTargetCircling()
		{
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0xE6C5E0", Offset = "0xE6C5E0", VA = "0xE6C5E0")]
		private void StopCircling()
		{
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0xE6D46C", Offset = "0xE6D46C", VA = "0xE6D46C")]
		private float GetTurnDur(FishTypeSO.FishScale fishScale)
		{
			return default(float);
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0xE6D958", Offset = "0xE6D958", VA = "0xE6D958")]
		private void ProceedToTarget(float dur)
		{
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0xE6DBE4", Offset = "0xE6DBE4", VA = "0xE6DBE4")]
		private void MoveToTarget()
		{
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0xE6DA88", Offset = "0xE6DA88", VA = "0xE6DA88")]
		private void SprintToTarget(float dur)
		{
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0xE6C7FC", Offset = "0xE6C7FC", VA = "0xE6C7FC")]
		private void SetTarget(Vector3 trg, float speed = 0f)
		{
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0xE6D4A0", Offset = "0xE6D4A0", VA = "0xE6D4A0")]
		private void SetOverrideAnimSpeed(float speed, float overrideDuration)
		{
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0xE6DC3C", Offset = "0xE6DC3C", VA = "0xE6DC3C")]
		private void CancelOverrideAnimSpeed()
		{
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0xE6DC64", Offset = "0xE6DC64", VA = "0xE6DC64")]
		public void SetVisible(bool state, bool collider = false)
		{
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0xE6DD50", Offset = "0xE6DD50", VA = "0xE6DD50")]
		public void SetCollider(bool state)
		{
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0xE6D0F4", Offset = "0xE6D0F4", VA = "0xE6D0F4")]
		private void AttractedCoinToss()
		{
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0xE6DD80", Offset = "0xE6DD80", VA = "0xE6DD80")]
		public void WarpToPatrolPoint()
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0xE6B528", Offset = "0xE6B528", VA = "0xE6B528")]
		public void SetAttraction(FpFish fpFish)
		{
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0xE6BFC8", Offset = "0xE6BFC8", VA = "0xE6BFC8")]
		public void SetScaleModel()
		{
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0xE6CD1C", Offset = "0xE6CD1C", VA = "0xE6CD1C")]
		private Color GetColor(uint attractionVal)
		{
			return default(Color);
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0xE6D584", Offset = "0xE6D584", VA = "0xE6D584")]
		private void SetCircleWayPoints()
		{
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0xE6B36C", Offset = "0xE6B36C", VA = "0xE6B36C")]
		internal void SuspendFishAI(bool state)
		{
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0xE6DDA8", Offset = "0xE6DDA8", VA = "0xE6DDA8")]
		private void SetTweenSuspendState(bool state)
		{
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0xE6DE3C", Offset = "0xE6DE3C", VA = "0xE6DE3C")]
		public FishAI()
		{
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0xE6DE78", Offset = "0xE6DE78", VA = "0xE6DE78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACB99C", Offset = "0xACB99C")]
		private void <Nibble>b__51_0()
		{
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0xE6DE80", Offset = "0xE6DE80", VA = "0xE6DE80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACB9AC", Offset = "0xACB9AC")]
		private void <SetTargetAttracted>b__67_0()
		{
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0xE6DEA8", Offset = "0xE6DEA8", VA = "0xE6DEA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACB9BC", Offset = "0xACB9BC")]
		private void <SprintToTarget>b__75_0()
		{
		}
	}
	[Token(Token = "0x200023B")]
	public class FishAiLogic
	{
		[Token(Token = "0x6000D12")]
		[Address(RVA = "0xE6E890", Offset = "0xE6E890", VA = "0xE6E890")]
		public static int GetStarsFromProbability(float[] stars)
		{
			return default(int);
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0xE6E914", Offset = "0xE6E914", VA = "0xE6E914")]
		public FishAiLogic()
		{
		}
	}
	[Token(Token = "0x200023C")]
	public class FishAiSpawner : MonoBehaviour
	{
		[Token(Token = "0x200049A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0EB0", Offset = "0xAC0EB0")]
		private sealed class <SpawnFishKeptReleasedCR>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FishAiSpawner <>4__this;

			[Token(Token = "0x4001DB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x170002F9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E60")]
				[Address(RVA = "0xE6F860", Offset = "0xE6F860", VA = "0xE6F860", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002FA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E62")]
				[Address(RVA = "0xE6F8C8", Offset = "0xE6F8C8", VA = "0xE6F8C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E5D")]
			[Address(RVA = "0xE6EE50", Offset = "0xE6EE50", VA = "0xE6EE50")]
			[DebuggerHidden]
			public <SpawnFishKeptReleasedCR>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001E5E")]
			[Address(RVA = "0xE6F6C4", Offset = "0xE6F6C4", VA = "0xE6F6C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E5F")]
			[Address(RVA = "0xE6F6C8", Offset = "0xE6F6C8", VA = "0xE6F6C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E61")]
			[Address(RVA = "0xE6F868", Offset = "0xE6F868", VA = "0xE6F868", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200049B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0EC0", Offset = "0xAC0EC0")]
		private sealed class <StartSpawn>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FishAiSpawner <>4__this;

			[Token(Token = "0x170002FB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E66")]
				[Address(RVA = "0xE6FBFC", Offset = "0xE6FBFC", VA = "0xE6FBFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002FC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E68")]
				[Address(RVA = "0xE6FC64", Offset = "0xE6FC64", VA = "0xE6FC64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E63")]
			[Address(RVA = "0xE6EEEC", Offset = "0xE6EEEC", VA = "0xE6EEEC")]
			[DebuggerHidden]
			public <StartSpawn>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001E64")]
			[Address(RVA = "0xE6F8D0", Offset = "0xE6F8D0", VA = "0xE6F8D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E65")]
			[Address(RVA = "0xE6F8D4", Offset = "0xE6F8D4", VA = "0xE6F8D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E67")]
			[Address(RVA = "0xE6FC04", Offset = "0xE6FC04", VA = "0xE6FC04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FishAiController fishAiCtrl;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SpawnPool pool;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform fishAiPrefab;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FishPool2SO fishPool2;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float easyMinSpawnDistance;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float easyMaxSpawnDistance;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float mediumMinSpawnDistance;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float mediumMaxSpawnDistance;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float hardMinSpawnDistance;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float hardMaxSpawnDistance;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float expertMinSpawnDistance;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float expertMaxSpawnDistance;

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0xE6E91C", Offset = "0xE6E91C", VA = "0xE6E91C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0xE6EAC0", Offset = "0xE6EAC0", VA = "0xE6EAC0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0xE6EB48", Offset = "0xE6EB48", VA = "0xE6EB48")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0xE6EB50", Offset = "0xE6EB50", VA = "0xE6EB50")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0xE6ECF4", Offset = "0xE6ECF4", VA = "0xE6ECF4")]
		public void SpawnFish(FishPool2SO fp2)
		{
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0xE6EDA8", Offset = "0xE6EDA8", VA = "0xE6EDA8")]
		private void SpawnFishKeptReleased(FpFish fish)
		{
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0xE6EDD4", Offset = "0xE6EDD4", VA = "0xE6EDD4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACB9CC", Offset = "0xACB9CC")]
		private IEnumerator SpawnFishKeptReleasedCR()
		{
			return null;
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0xE6EE7C", Offset = "0xE6EE7C", VA = "0xE6EE7C")]
		public void RemoveAllFish()
		{
		}

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0xE6E620", Offset = "0xE6E620", VA = "0xE6E620")]
		public void DespawnFish(FishAI fishToDespawn)
		{
		}

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0xE6ED2C", Offset = "0xE6ED2C", VA = "0xE6ED2C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACBA30", Offset = "0xACBA30")]
		private IEnumerator StartSpawn()
		{
			return null;
		}

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0xE6EF18", Offset = "0xE6EF18", VA = "0xE6EF18")]
		private void RestockPool()
		{
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0xE6F0CC", Offset = "0xE6F0CC", VA = "0xE6F0CC")]
		private void SetupFishAi(FpFish[] fishToSpawn)
		{
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0xE6F4E0", Offset = "0xE6F4E0", VA = "0xE6F4E0")]
		public FishAI SpawnFishAi(Vector3 pos)
		{
			return null;
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0xE6F658", Offset = "0xE6F658", VA = "0xE6F658")]
		private void EventHub_OnFishCaught(FpFish fish, bool isCheating)
		{
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0xE6F6B8", Offset = "0xE6F6B8", VA = "0xE6F6B8")]
		private void EventHub_OnFishLost(FpFish fish)
		{
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0xE6EB34", Offset = "0xE6EB34", VA = "0xE6EB34")]
		public void ResetSpawnDistanceDefaults()
		{
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0xE6F6BC", Offset = "0xE6F6BC", VA = "0xE6F6BC")]
		public FishAiSpawner()
		{
		}
	}
	[Token(Token = "0x200023D")]
	public class FishAiSpawnerLogic
	{
		[Token(Token = "0x6000D25")]
		[Address(RVA = "0xE6F390", Offset = "0xE6F390", VA = "0xE6F390")]
		public static Vector3 GetRandomSpawnPosition(float minDistance, float maxDistance)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0xE6FC6C", Offset = "0xE6FC6C", VA = "0xE6FC6C")]
		public FishAiSpawnerLogic()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200023E")]
	public class FpFish
	{
		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FishTypeSO fishType;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] stars;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool fishFinder;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector2 location;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float probability;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int starRating;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float weight;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float length;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int calculatedBoostPoints;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public FishTypeSO.Resources[] calculatedResource;

		[Token(Token = "0x17000149")]
		public int starRatingAdjusted
		{
			[Token(Token = "0x6000D27")]
			[Address(RVA = "0xDFEEF4", Offset = "0xDFEEF4", VA = "0xDFEEF4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700014A")]
		public Dictionary<ItemSO, int> resourceDict
		{
			[Token(Token = "0x6000D28")]
			[Address(RVA = "0xDFF1E0", Offset = "0xDFF1E0", VA = "0xDFF1E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0xDFF2C4", Offset = "0xDFF2C4", VA = "0xDFF2C4")]
		public void SetStarsAndWeight()
		{
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0xDFF340", Offset = "0xDFF340", VA = "0xDFF340")]
		public void UpdateStarsAndWeight(float newWeight)
		{
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0xDFF3B0", Offset = "0xDFF3B0", VA = "0xDFF3B0")]
		public void CalculateCharmEffects()
		{
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0xDFEFEC", Offset = "0xDFEFEC", VA = "0xDFEFEC")]
		public float GetCharmTargetModifier(CharmSO charm)
		{
			return default(float);
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0xDFF604", Offset = "0xDFF604", VA = "0xDFF604")]
		public FpFish()
		{
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0xDFF60C", Offset = "0xDFF60C", VA = "0xDFF60C")]
		public FpFish(FpFish fpf)
		{
		}
	}
	[Token(Token = "0x200023F")]
	public class FishAiController : MonoBehaviour
	{
		[Token(Token = "0x200049C")]
		public struct TimeToLure
		{
			[Token(Token = "0x4001DBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float min;

			[Token(Token = "0x4001DBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float max;
		}

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FishAiSpawner spawner;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<FishAI> fishAIs;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TimeToLure[] timeToLure;

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0xE6E1B0", Offset = "0xE6E1B0", VA = "0xE6E1B0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0xE6E36C", Offset = "0xE6E36C", VA = "0xE6E36C")]
		public void HideAllFishAIs()
		{
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0xE6E468", Offset = "0xE6E468", VA = "0xE6E468")]
		public void ShowAllVisibleFish(bool overrideVisibility = false)
		{
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0xE6E5A8", Offset = "0xE6E5A8", VA = "0xE6E5A8")]
		public void RemoveLostFish(FishAI caughtFish)
		{
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0xE6E708", Offset = "0xE6E708", VA = "0xE6E708")]
		public void RemoveCaughtFish(FishAI caughtFish)
		{
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0xE6E780", Offset = "0xE6E780", VA = "0xE6E780")]
		public void SuspendAllFishAIs(bool state)
		{
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0xE6E888", Offset = "0xE6E888", VA = "0xE6E888")]
		public FishAiController()
		{
		}
	}
	[Token(Token = "0x2000240")]
	public class FishAnimationController : MonoBehaviour
	{
		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Animator rigAnimator;

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0xE6FC74", Offset = "0xE6FC74", VA = "0xE6FC74")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0xE6FD18", Offset = "0xE6FD18", VA = "0xE6FD18")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0xE6FD98", Offset = "0xE6FD98", VA = "0xE6FD98")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0xE6FEE4", Offset = "0xE6FEE4", VA = "0xE6FEE4")]
		public void Jump(float jumpDur)
		{
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0xE70094", Offset = "0xE70094", VA = "0xE70094")]
		public void JumpCompleted()
		{
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0xE6FE20", Offset = "0xE6FE20", VA = "0xE6FE20")]
		public void Swim()
		{
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0xE7013C", Offset = "0xE7013C", VA = "0xE7013C")]
		public void JumpRecover()
		{
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0xE701E0", Offset = "0xE701E0", VA = "0xE701E0")]
		public void JumpReturn()
		{
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0xE702A4", Offset = "0xE702A4", VA = "0xE702A4")]
		public void Breach()
		{
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0xE703F8", Offset = "0xE703F8", VA = "0xE703F8")]
		public void BreachCompleted()
		{
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0xE70484", Offset = "0xE70484", VA = "0xE70484")]
		public void OutOfWater()
		{
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0xE7053C", Offset = "0xE7053C", VA = "0xE7053C")]
		public void OnSnapFishFlip()
		{
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0xE705DC", Offset = "0xE705DC", VA = "0xE705DC")]
		public FishAnimationController()
		{
		}
	}
	[Token(Token = "0x2000241")]
	public class FishFinderController : MonoBehaviour
	{
		[Token(Token = "0x200049D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0ED0", Offset = "0xAC0ED0")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x4001DBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject sonar;

			[Token(Token = "0x6001E69")]
			[Address(RVA = "0xE70F60", Offset = "0xE70F60", VA = "0xE70F60")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x6001E6A")]
			[Address(RVA = "0xE70F68", Offset = "0xE70F68", VA = "0xE70F68")]
			internal void <EmitSonar>b__0()
			{
			}
		}

		[Token(Token = "0x200049E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0EE0", Offset = "0xAC0EE0")]
		private sealed class <EmitSonar>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FishFinderController <>4__this;

			[Token(Token = "0x170002FD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E6E")]
				[Address(RVA = "0xE712E8", Offset = "0xE712E8", VA = "0xE712E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002FE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E70")]
				[Address(RVA = "0xE71350", Offset = "0xE71350", VA = "0xE71350", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E6B")]
			[Address(RVA = "0xE70964", Offset = "0xE70964", VA = "0xE70964")]
			[DebuggerHidden]
			public <EmitSonar>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6001E6C")]
			[Address(RVA = "0xE70FD4", Offset = "0xE70FD4", VA = "0xE70FD4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E6D")]
			[Address(RVA = "0xE70FD8", Offset = "0xE70FD8", VA = "0xE70FD8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E6F")]
			[Address(RVA = "0xE712F0", Offset = "0xE712F0", VA = "0xE712F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static FishFinderController instance;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ItemSO fishFinder;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MissionSO fishFinderMission;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject fishFinderDevice;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject fishFinderLootbox;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject sonarWave;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject hotspotIcon;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float pingTime;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float fadeOutTime;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float cooldownTime;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float iconDepth;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isPinging;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool isAvailable;

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0xE705EC", Offset = "0xE705EC", VA = "0xE705EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0xE70750", Offset = "0xE70750", VA = "0xE70750")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0xE70880", Offset = "0xE70880", VA = "0xE70880")]
		public void Ping()
		{
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0xE708E8", Offset = "0xE708E8", VA = "0xE708E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACBA94", Offset = "0xACBA94")]
		private IEnumerator EmitSonar()
		{
			return null;
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0xE70990", Offset = "0xE70990", VA = "0xE70990")]
		public void TrySpawnLootbox()
		{
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0xE70C28", Offset = "0xE70C28", VA = "0xE70C28")]
		public void TryDespawnLootbox()
		{
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0xE70CE0", Offset = "0xE70CE0", VA = "0xE70CE0")]
		public void SetAvailable(bool state)
		{
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0xE70D60", Offset = "0xE70D60", VA = "0xE70D60")]
		private void Player_OnLocationChanged(LocationSO location, bool comingFromShip)
		{
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0xE70E50", Offset = "0xE70E50", VA = "0xE70E50")]
		private void InventoryController_OnItemGet(ItemSO item, int amount)
		{
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0xE70F0C", Offset = "0xE70F0C", VA = "0xE70F0C")]
		private void EventHub_OnMissionChanged(MissionSO mission)
		{
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0xE70F4C", Offset = "0xE70F4C", VA = "0xE70F4C")]
		public FishFinderController()
		{
		}
	}
	[Token(Token = "0x2000242")]
	public class FishMoji : MonoBehaviour
	{
		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RectTransform rt;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool isDizzy;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool isPowerReeling;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int dizzyImg;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Tween bounceTween;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject fishMojiAngry;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject fishMojiNormal;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject fishMojiPanic;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject fishMojiStunned;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject fishMojiDizzy1;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject fishMojiDizzy2;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject fishMojiDizzy3;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject fishMojiPowerReel;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject fishMojiStunBoost;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject fishMojiTeleport;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject loot;

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0xE731B8", Offset = "0xE731B8", VA = "0xE731B8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0xE73504", Offset = "0xE73504", VA = "0xE73504")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0xE736F4", Offset = "0xE736F4", VA = "0xE736F4")]
		private void onFishPanic(Vector3 fleeDirection, bool isFish, bool directionChange)
		{
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0xE7392C", Offset = "0xE7392C", VA = "0xE7392C")]
		private void onFishStunned()
		{
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0xE73A5C", Offset = "0xE73A5C", VA = "0xE73A5C")]
		private void OnRodBoost()
		{
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0xE73B5C", Offset = "0xE73B5C", VA = "0xE73B5C")]
		private void SetBoostMoji(RodSO.BoostType boostType)
		{
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0xE73BB0", Offset = "0xE73BB0", VA = "0xE73BB0")]
		private void OnStopRodBoost()
		{
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0xE73BE8", Offset = "0xE73BE8", VA = "0xE73BE8")]
		private void onFishRest(bool isFish)
		{
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0xE73ED0", Offset = "0xE73ED0", VA = "0xE73ED0")]
		private void onFishResist(Vector3 fleeDirection, bool isFish, bool directionChange)
		{
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0xE73D30", Offset = "0xE73D30", VA = "0xE73D30")]
		private void HandleDizzy()
		{
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0xE74060", Offset = "0xE74060", VA = "0xE74060")]
		private void onFishFlee(Vector3 fleeDirection, bool isFish, bool directionChange)
		{
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0xE7340C", Offset = "0xE7340C", VA = "0xE7340C")]
		private void DisableAll()
		{
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0xE73824", Offset = "0xE73824", VA = "0xE73824")]
		private void Bounce()
		{
		}

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0xE741A0", Offset = "0xE741A0", VA = "0xE741A0")]
		public FishMoji()
		{
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0xE741A8", Offset = "0xE741A8", VA = "0xE741A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACBAF8", Offset = "0xACBAF8")]
		private void <Bounce>b__28_0()
		{
		}
	}
	[Token(Token = "0x2000243")]
	public class FishSelectDropdownController : MonoBehaviour
	{
		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TMP_Dropdown dropdown;

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FishTypeSO[] fishTypes;

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FishPool2SO testPoolSO;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private FishAiSpawner spawner;

		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private FishPool2SO[] fishPool2;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TMP_Dropdown fishPool2_Dropdown;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private LootCratePoolSO[] lootCratePool;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TMP_Dropdown lootCratePool_Dropdown;

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0xDF42AC", Offset = "0xDF42AC", VA = "0xDF42AC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0xDF4594", Offset = "0xDF4594", VA = "0xDF4594")]
		public void SetFishType(int option)
		{
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0xDF4970", Offset = "0xDF4970", VA = "0xDF4970")]
		public void SetFishPool2(int option)
		{
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0xDF4A20", Offset = "0xDF4A20", VA = "0xDF4A20")]
		public void SetLootCratePool(int option)
		{
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0xDF4B98", Offset = "0xDF4B98", VA = "0xDF4B98")]
		public FishSelectDropdownController()
		{
		}
	}
	[Token(Token = "0x2000244")]
	public class FishingLineColor : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200049F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0EF0", Offset = "0xAC0EF0")]
		private sealed class <>c
		{
			[Token(Token = "0x4001DC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001DC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static TweenCallback <>9__27_0;

			[Token(Token = "0x6001E72")]
			[Address(RVA = "0xDF6AD4", Offset = "0xDF6AD4", VA = "0xDF6AD4")]
			public <>c()
			{
			}

			[Token(Token = "0x6001E73")]
			[Address(RVA = "0xDF6ADC", Offset = "0xDF6ADC", VA = "0xDF6ADC")]
			internal void <SmallBiteColor>b__27_0()
			{
			}
		}

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material lineMat;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Tween colorTween;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static FishingLineColor instance;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Gradient gradient;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GradientColorKey[] colorKey;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GradientAlphaKey[] alphaKey;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color currentLineColor;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Tween dangerTween;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float dangerVal;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool doingBiteColor;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float colorChangingZoneSize;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Color boostColor;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Color lightRed;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Color lightBlue;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Color lightGreen;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool ReadyRecover;

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0xDF55A4", Offset = "0xDF55A4", VA = "0xDF55A4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0xDF5650", Offset = "0xDF5650", VA = "0xDF5650")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0xDF5A08", Offset = "0xDF5A08", VA = "0xDF5A08")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0xDF5B94", Offset = "0xDF5B94", VA = "0xDF5B94")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0xDF5C40", Offset = "0xDF5C40", VA = "0xDF5C40")]
		private void OnRodReset()
		{
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0xDF5D7C", Offset = "0xDF5D7C", VA = "0xDF5D7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0xDF6460", Offset = "0xDF6460", VA = "0xDF6460")]
		public static void StartColorPulse()
		{
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0xDF6518", Offset = "0xDF6518", VA = "0xDF6518")]
		public static void StopColorPulse()
		{
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0xDF65A8", Offset = "0xDF65A8", VA = "0xDF65A8")]
		public void StartDangerColor()
		{
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0xDF66B4", Offset = "0xDF66B4", VA = "0xDF66B4")]
		public void StopDangerColor()
		{
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0xDF5C48", Offset = "0xDF5C48", VA = "0xDF5C48")]
		private void SetLineColor(float val)
		{
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0xDF66E4", Offset = "0xDF66E4", VA = "0xDF66E4")]
		public static void SmallBiteColor()
		{
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0xDF689C", Offset = "0xDF689C", VA = "0xDF689C")]
		public static void BigBiteColor()
		{
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0xDF6940", Offset = "0xDF6940", VA = "0xDF6940")]
		private void OnReadyRecover()
		{
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0xDF694C", Offset = "0xDF694C", VA = "0xDF694C")]
		private void OnRecoverBobber()
		{
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0xDF6958", Offset = "0xDF6958", VA = "0xDF6958")]
		public FishingLineColor()
		{
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0xDF6A5C", Offset = "0xDF6A5C", VA = "0xDF6A5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACBB08", Offset = "0xACBB08")]
		private float <StartDangerColor>b__24_0()
		{
			return default(float);
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0xDF6A64", Offset = "0xDF6A64", VA = "0xDF6A64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACBB18", Offset = "0xACBB18")]
		private void <StartDangerColor>b__24_1(float x)
		{
		}
	}
	[Token(Token = "0x2000245")]
	public class FishpadVisibilityController : MonoBehaviour
	{
		[Token(Token = "0x20004A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0F00", Offset = "0xAC0F00")]
		private sealed class <CheckPlayerIsNear>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170002FF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E77")]
				[Address(RVA = "0xDFED58", Offset = "0xDFED58", VA = "0xDFED58", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000300")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E79")]
				[Address(RVA = "0xDFEDC0", Offset = "0xDFEDC0", VA = "0xDFEDC0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E74")]
			[Address(RVA = "0xDFEB88", Offset = "0xDFEB88", VA = "0xDFEB88")]
			[DebuggerHidden]
			public <CheckPlayerIsNear>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6001E75")]
			[Address(RVA = "0xDFEBBC", Offset = "0xDFEBBC", VA = "0xDFEBBC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E76")]
			[Address(RVA = "0xDFEBC0", Offset = "0xDFEBC0", VA = "0xDFEBC0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E78")]
			[Address(RVA = "0xDFED60", Offset = "0xDFED60", VA = "0xDFED60", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Button fpButton;

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0xDFEA0C", Offset = "0xDFEA0C", VA = "0xDFEA0C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0xDFEA80", Offset = "0xDFEA80", VA = "0xDFEA80")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0xDFEAF4", Offset = "0xDFEAF4", VA = "0xDFEAF4")]
		public void OnClick()
		{
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0xDFEAFC", Offset = "0xDFEAFC", VA = "0xDFEAFC")]
		private void DistanceCheck()
		{
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0xDFEB28", Offset = "0xDFEB28", VA = "0xDFEB28")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACBB28", Offset = "0xACBB28")]
		private IEnumerator CheckPlayerIsNear()
		{
			return null;
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0xDFEBB4", Offset = "0xDFEBB4", VA = "0xDFEBB4")]
		public FishpadVisibilityController()
		{
		}
	}
	[Token(Token = "0x2000246")]
	public class Floater : MonoBehaviour
	{
		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody rb;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float depthBeforeSubmerged;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float displacementAmount;

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0xDFEDC8", Offset = "0xDFEDC8", VA = "0xDFEDC8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0xDFEEE0", Offset = "0xDFEEE0", VA = "0xDFEEE0")]
		public Floater()
		{
		}
	}
	[Token(Token = "0x2000247")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xABFA20", Offset = "0xABFA20")]
	public class CharmCraftingSO : ScriptableObject
	{
		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string BCID;

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0xCF8738", Offset = "0xCF8738", VA = "0xCF8738")]
		public CharmCraftingSO()
		{
		}
	}
	[Token(Token = "0x2000248")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xABFA80", Offset = "0xABFA80")]
	public class CharmSO : ItemSO
	{
		[Token(Token = "0x20004A1")]
		public enum CharmType
		{
			[Token(Token = "0x4001DC6")]
			None,
			[Token(Token = "0x4001DC7")]
			BoostPointBonus,
			[Token(Token = "0x4001DC8")]
			WeightBonus,
			[Token(Token = "0x4001DC9")]
			ResourceBonus,
			[Token(Token = "0x4001DCA")]
			Cosmetic
		}

		[Serializable]
		[Token(Token = "0x20004A2")]
		public struct TargetWorld
		{
			[Token(Token = "0x4001DCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int World;

			[Token(Token = "0x4001DCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float TargetWorldValue;
		}

		[Serializable]
		[Token(Token = "0x20004A3")]
		public struct TargetFish
		{
			[Token(Token = "0x4001DCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FishTypeSO TargetFishType;

			[Token(Token = "0x4001DCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float TargetFishTypeValue;
		}

		[Serializable]
		[Token(Token = "0x20004A4")]
		public struct TargetGrade
		{
			[Token(Token = "0x4001DCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FishTypeSO.Grade Grade;

			[Token(Token = "0x4001DD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float TargetGradeValue;
		}

		[Serializable]
		[Token(Token = "0x20004A5")]
		public struct TargetDifficulty
		{
			[Token(Token = "0x4001DD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FishTypeSO.Difficulty Difficulty;

			[Token(Token = "0x4001DD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float TargetDifficultyValue;
		}

		[Serializable]
		[Token(Token = "0x20004A6")]
		public struct TargetScale
		{
			[Token(Token = "0x4001DD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FishTypeSO.FishScale Scale;

			[Token(Token = "0x4001DD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float TargetScaleValue;
		}

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public CharmType Type;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TargetWorld[] TargetWorlds;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TargetFish[] TargetFishes;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public TargetGrade[] TargetGrades;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public TargetDifficulty[] TargetDifficulties;

		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public TargetScale[] TargetScales;

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0xCF8804", Offset = "0xCF8804", VA = "0xCF8804")]
		public CharmSO()
		{
		}
	}
	[Token(Token = "0x2000249")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xABFAEC", Offset = "0xABFAEC")]
	public class CraftingRecipesSO : ItemSO
	{
		[Serializable]
		[Token(Token = "0x20004A7")]
		public struct Ingredient
		{
			[Token(Token = "0x4001DD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IngredientsSO Item;

			[Token(Token = "0x4001DD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int Amount;
		}

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ItemSO CraftedItem;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Ingredient[] Ingredients;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int CraftingLimit;

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0xCFC150", Offset = "0xCFC150", VA = "0xCFC150")]
		public CraftingRecipesSO()
		{
		}
	}
	[Token(Token = "0x200024A")]
	public enum PredatorSkin
	{
		[Token(Token = "0x4000ECB")]
		Shark,
		[Token(Token = "0x4000ECC")]
		Crocodile,
		[Token(Token = "0x4000ECD")]
		Drone
	}
	[Token(Token = "0x200024B")]
	public enum BossPredatorSkin
	{
		[Token(Token = "0x4000ECF")]
		Shark,
		[Token(Token = "0x4000ED0")]
		Crocodile,
		[Token(Token = "0x4000ED1")]
		Drone
	}
	[Token(Token = "0x200024C")]
	public enum RepellentSkin
	{
		[Token(Token = "0x4000ED3")]
		Egg,
		[Token(Token = "0x4000ED4")]
		Barrel,
		[Token(Token = "0x4000ED5")]
		Portal
	}
	[Token(Token = "0x200024D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xABFB4C", Offset = "0xABFB4C")]
	public class FishPool2SO : ScriptableObject
	{
		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string BCID;

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Location;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int totalFish;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool respawnFish;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FpFish[] criticalFish;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FpFish[] mainPool;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public FpFish[] respawnPool;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool predatorActive;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public PredatorSkin predatorSkin;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int predatorMaxNumber;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int predatorInitialNumber;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int predatorNumSpawnAtOnce;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float predatorSpawnRate;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float predatorLifetime;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float predatorSystemActiveDuration;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float predatorSystemInactiveDuration;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float predatorSpeed;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool bossPredatorActive;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public BossPredatorSkin bossPredatorSkin;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int bossPredatorMaxNumber;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public int bossPredatorInitialNumber;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int bossPredatorNumSpawnAtOnce;

		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float bossPredatorSpawnRate;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float bossPredatorLifetime;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float bossPredatorSystemActiveDuration;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float bossPredatorSystemInactiveDuration;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float bossPredatorSpeed;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool repellentActive;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public RepellentSkin repellentSkin;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public int repellentMaxNumber;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public int repellentInitialNumber;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public int repellentNumSpawnAtOnce;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float repellentSpawnRate;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float repellentEffectiveDuration;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float repellentLifetime;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float repellentSystemActiveDuration;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float repellentSystemInactiveDuration;

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0xE6FA74", Offset = "0xE6FA74", VA = "0xE6FA74")]
		public FpFish[] GetFishToSpawn()
		{
			return null;
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0xE6EF64", Offset = "0xE6EF64", VA = "0xE6EF64")]
		public FpFish[] GetFishToRespawn()
		{
			return null;
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0xE75560", Offset = "0xE75560", VA = "0xE75560")]
		private FpFish GetFpFish(bool useMainPool = false)
		{
			return null;
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0xE75658", Offset = "0xE75658", VA = "0xE75658")]
		public FishPool2SO()
		{
		}
	}
	[Token(Token = "0x200024E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xABFBB8", Offset = "0xABFBB8")]
	public class FishPoolSO : ScriptableObject
	{
		[Token(Token = "0x6000D83")]
		[Address(RVA = "0xE75774", Offset = "0xE75774", VA = "0xE75774")]
		public FishPoolSO()
		{
		}
	}
	[Token(Token = "0x200024F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xABFC24", Offset = "0xABFC24")]
	public class FishTypeSO : ScriptableObject
	{
		[Token(Token = "0x20004A8")]
		public enum FishableType
		{
			[Token(Token = "0x4001DD8")]
			Fish,
			[Token(Token = "0x4001DD9")]
			Ingredient,
			[Token(Token = "0x4001DDA")]
			LootBox,
			[Token(Token = "0x4001DDB")]
			Artifact
		}

		[Token(Token = "0x20004A9")]
		public enum Grade
		{
			[Token(Token = "0x4001DDD")]
			None,
			[Token(Token = "0x4001DDE")]
			Common,
			[Token(Token = "0x4001DDF")]
			Uncommon,
			[Token(Token = "0x4001DE0")]
			Rare,
			[Token(Token = "0x4001DE1")]
			Epic,
			[Token(Token = "0x4001DE2")]
			Legendary
		}

		[Token(Token = "0x20004AA")]
		public enum Difficulty
		{
			[Token(Token = "0x4001DE4")]
			None,
			[Token(Token = "0x4001DE5")]
			Easy,
			[Token(Token = "0x4001DE6")]
			Medium,
			[Token(Token = "0x4001DE7")]
			Hard,
			[Token(Token = "0x4001DE8")]
			Expert
		}

		[Token(Token = "0x20004AB")]
		public enum InitialMode
		{
			[Token(Token = "0x4001DEA")]
			None,
			[Token(Token = "0x4001DEB")]
			Rage,
			[Token(Token = "0x4001DEC")]
			Run
		}

		[Token(Token = "0x20004AC")]
		public enum FishScale
		{
			[Token(Token = "0x4001DEE")]
			Small,
			[Token(Token = "0x4001DEF")]
			Medium,
			[Token(Token = "0x4001DF0")]
			Large,
			[Token(Token = "0x4001DF1")]
			XLarge
		}

		[Serializable]
		[Token(Token = "0x20004AD")]
		public struct Attraction
		{
			[Token(Token = "0x4001DF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LureSO Lure;

			[Token(Token = "0x4001DF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public uint Value;
		}

		[Serializable]
		[Token(Token = "0x20004AE")]
		public struct Rewards
		{
			[Token(Token = "0x4001DF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int BoostPoints;

			[Token(Token = "0x4001DF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Resources[] Resources;

			[Token(Token = "0x4001DF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int TournamentPoint;
		}

		[Serializable]
		[Token(Token = "0x20004AF")]
		public struct Resources
		{
			[Token(Token = "0x4001DF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ItemSO Resource;

			[Token(Token = "0x4001DF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int ResourceAmount;
		}

		[Token(Token = "0x20004B0")]
		public enum AquariumRegion
		{
			[Token(Token = "0x4001DFA")]
			Top,
			[Token(Token = "0x4001DFB")]
			Middle,
			[Token(Token = "0x4001DFC")]
			Bottom,
			[Token(Token = "0x4001DFD")]
			Any
		}

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string BCID;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string fishName;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string fishDescription;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int fishIndex;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float smallWeightLow;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float smallWeightHigh;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float mediumWeightHigh;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float largeWeightHigh;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float minLength;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float maxLength;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool isFish;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FishableType fishableType;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Grade grade;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Sprite gradeIconSmall;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Sprite gradeIconMedium;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Difficulty difficulty;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public InitialMode initialMode;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float initialModeDuration;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public FishScale fishScale;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float examineDistance;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float underwaterDepth;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float jumpDistance;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float jumpHeight;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float jumpDuration;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC4E4C", Offset = "0xAC4E4C")]
		public float stamina;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float m_stamina;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float staminaReductionReeling;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float staminaReductionReelingStunned;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float staminaReductionLeans;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float staminaReductionSnaps;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float staminaReductionJumps;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float staminaReductionPostPatternRest;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float staminaReductionPerfectPattern;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float staminaReductionPowerReelRodLvl1;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float staminaReductionPowerReelRodLvl2;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float staminaReductionPowerReelRodLvl3;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float staminaReductionStunRodLvl1;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float staminaReductionStunRodLvl2;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float staminaReductionStunRodLvl3;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float staminaReductionTeleportRodLvl1;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float staminaReductionTeleportRodLvl2;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float staminaReductionTeleportRodLvl3;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float energyAddedLeans;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float energyAddedSnaps;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float energyAddedJumps;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float energyAddedPerfectPattern;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public float energyAddedPostPatternRest;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC4E84", Offset = "0xAC4E84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC4E84", Offset = "0xAC4E84")]
		public float speed;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC4ED8", Offset = "0xAC4ED8")]
		public float speedReeling;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC4EF0", Offset = "0xAC4EF0")]
		public float speedPatternPlay;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public float reelingSpeedMultiplier;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public float startingTension;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC4F08", Offset = "0xAC4F08")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC4F08", Offset = "0xAC4F08")]
		public float blueZoneSize;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC4F5C", Offset = "0xAC4F5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC4F5C", Offset = "0xAC4F5C")]
		public float redZoneSize;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public float TimeAllowedBlueZone;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public float TimeAllowedRedZone;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public float warningColorRedZoneSize;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public float warningColorBlueZoneSize;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC4FB0", Offset = "0xAC4FB0")]
		public float fleeTime;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC4FE8", Offset = "0xAC4FE8")]
		public float arrowSolveTime;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public float restTime;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC5020", Offset = "0xAC5020")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC5020", Offset = "0xAC5020")]
		public float increaseRestTimePerFleeBy;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC5074", Offset = "0xAC5074")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC5074", Offset = "0xAC5074")]
		public float increaseTensionOnArrowFailBy;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC50CC", Offset = "0xAC50CC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC50CC", Offset = "0xAC50CC")]
		public float decreaseTensionOnArrowSolvedBy;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public float patternFrequency;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC5124", Offset = "0xAC5124")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC5124", Offset = "0xAC5124")]
		public float likelihoodChangeLeanDirection;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public PatternSO[] patternSO;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC5178", Offset = "0xAC5178")]
		public Transform prefab;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public Transform prefabAquarium;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public Sprite icon;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public Sprite fishopediaListIcon;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public Sprite uncaughtIcon;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public Sprite uncaughtFishOPediaListIcon;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC51B0", Offset = "0xAC51B0")]
		public Attraction[] Attractions;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private Dictionary<LureSO, uint> m_Attraction_Dic;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC51E8", Offset = "0xAC51E8")]
		public LureSO[] PreferredFloatingLure;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public LureSO[] PreferredSwimmingLure;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC5220", Offset = "0xAC5220")]
		public int World;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public LocationSO[] Locations;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC5258", Offset = "0xAC5258")]
		public Rewards[] rewards;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private float weightModifier;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC5290", Offset = "0xAC5290")]
		public bool canSchool;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public float minSpeedInAquarium;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		public float maxSpeedInAquarium;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public AquariumRegion preferredRegion;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC52C8", Offset = "0xAC52C8")]
		public float AddChargeOnRelease;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public float AddChargeOnKeep;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		public float PowerReelLvl1BoostDuration;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public float PowerReelLvl2BoostDuration;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		public float PowerReelLvl3BoostDuration;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public float PowerReelLvl1BoostReelMult;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		public float PowerReelLvl2BoostReelMult;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public float PowerReelLvl3BoostReelMult;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		public float StunLvl1BoostDuration;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public float StunLvl2BoostDuration;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		public float StunLvl3BoostDuration;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public float TeleportLvl1BoostPower;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		public float TeleportLvl2BoostPower;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public float TeleportLvl3BoostPower;

		[Token(Token = "0x1700014B")]
		public int BoostPts
		{
			[Token(Token = "0x6000D84")]
			[Address(RVA = "0xDF4BA8", Offset = "0xDF4BA8", VA = "0xDF4BA8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700014C")]
		public int TournamentPoint
		{
			[Token(Token = "0x6000D85")]
			[Address(RVA = "0xDF4C74", Offset = "0xDF4C74", VA = "0xDF4C74")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700014D")]
		public Resources[] Resource
		{
			[Token(Token = "0x6000D86")]
			[Address(RVA = "0xDF4CD4", Offset = "0xDF4CD4", VA = "0xDF4CD4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014E")]
		private int m_Star
		{
			[Token(Token = "0x6000D87")]
			[Address(RVA = "0xDF4C08", Offset = "0xDF4C08", VA = "0xDF4C08")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0xDF4DE0", Offset = "0xDF4DE0", VA = "0xDF4DE0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0xDF4DEC", Offset = "0xDF4DEC", VA = "0xDF4DEC")]
		public void InitAtrraction()
		{
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0xDF4ED4", Offset = "0xDF4ED4", VA = "0xDF4ED4")]
		public float AdjustWeightModifier(float weight, float modifier = 1f)
		{
			return default(float);
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0xDF4FA4", Offset = "0xDF4FA4", VA = "0xDF4FA4")]
		public int GetStars(float weight)
		{
			return default(int);
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0xDF4FD0", Offset = "0xDF4FD0", VA = "0xDF4FD0")]
		public Resources[] GetResources(int stars)
		{
			return null;
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0xDF506C", Offset = "0xDF506C", VA = "0xDF506C")]
		public int GetBoostPts(int stars)
		{
			return default(int);
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0xDF50BC", Offset = "0xDF50BC", VA = "0xDF50BC")]
		public float GetWeight(int star, float modifier = 1f)
		{
			return default(float);
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0xDF535C", Offset = "0xDF535C", VA = "0xDF535C")]
		public float GetLength(float weight)
		{
			return default(float);
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0xDF5384", Offset = "0xDF5384", VA = "0xDF5384")]
		public void ResetAdjust()
		{
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0xDF5428", Offset = "0xDF5428", VA = "0xDF5428")]
		public uint GetAttractionVal(LureSO lure)
		{
			return default(uint);
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0xDF5510", Offset = "0xDF5510", VA = "0xDF5510")]
		public FishTypeSO()
		{
		}
	}
	[Token(Token = "0x2000250")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xABFC90", Offset = "0xABFC90")]
	public class FishingSO : ScriptableObject
	{
		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string BCID;

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0xDFEA04", Offset = "0xDFEA04", VA = "0xDFEA04")]
		public FishingSO()
		{
		}
	}
	[Token(Token = "0x2000251")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xABFCF0", Offset = "0xABFCF0")]
	public class IngredientsSO : ItemSO
	{
		[Token(Token = "0x6000D94")]
		[Address(RVA = "0xE034BC", Offset = "0xE034BC", VA = "0xE034BC")]
		public IngredientsSO()
		{
		}
	}
	[Token(Token = "0x2000252")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xABFD50", Offset = "0xABFD50")]
	public class ItemCraftingSO : ScriptableObject
	{
		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string BCID;

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0xE066E0", Offset = "0xE066E0", VA = "0xE066E0")]
		public ItemCraftingSO()
		{
		}
	}
	[Token(Token = "0x2000253")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xABFDB0", Offset = "0xABFDB0")]
	public class ItemSO : ScriptableObject
	{
		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string BCID;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string ItemName;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Description;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Sprite icon;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform Prefab;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ItemTypeSO ItemType;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ItemSO UpgradeFrom;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int Level;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int Amount;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool Unlock;

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0xE034C4", Offset = "0xE034C4", VA = "0xE034C4")]
		public ItemSO()
		{
		}
	}
	[Token(Token = "0x2000254")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xABFE10", Offset = "0xABFE10")]
	public class ItemTypeSO : ScriptableObject
	{
		[Token(Token = "0x20004B1")]
		public enum ItemType
		{
			[Token(Token = "0x4001DFF")]
			Item = 0,
			[Token(Token = "0x4001E00")]
			Pole = 1,
			[Token(Token = "0x4001E01")]
			Lure = 2,
			[Token(Token = "0x4001E02")]
			Charm = 3,
			[Token(Token = "0x4001E03")]
			Ingredient = 5,
			[Token(Token = "0x4001E04")]
			CraftingRecipes = 6,
			[Token(Token = "0x4001E05")]
			Decorations = 7
		}

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ItemType Type;

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0xE066F0", Offset = "0xE066F0", VA = "0xE066F0")]
		public ItemTypeSO()
		{
		}
	}
	[Token(Token = "0x2000255")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xABFE70", Offset = "0xABFE70")]
	public class LocationSO : ScriptableObject
	{
		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string BCID;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string LocationName;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string SceneName;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FishPool2SO FishPool;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int LocationIndex;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LootCratePoolSO LootCratePool;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float PullupDistance;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float AllowPatternPlayDistance;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float MaxDistance;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float ShoreBarrierZPos;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool UseBloom;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int FFRLevel;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int QualityLevel;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float RenderScale;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool Unlocked;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool Arrived;

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0xE07C18", Offset = "0xE07C18", VA = "0xE07C18")]
		public LocationSO()
		{
		}
	}
	[Token(Token = "0x2000256")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xABFED0", Offset = "0xABFED0")]
	public class LootBoxSO : ScriptableObject
	{
		[Token(Token = "0x6000D99")]
		[Address(RVA = "0xE07C40", Offset = "0xE07C40", VA = "0xE07C40")]
		public LootBoxSO()
		{
		}
	}
	[Token(Token = "0x2000257")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xABFF30", Offset = "0xABFF30")]
	public class LootCratePoolSO : ScriptableObject
	{
		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string BCID;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int totalLoot;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool respawnLoot;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LootCrate[] criticalLoot;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LootCrate[] mainLootPool;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LootCrate[] respawnLootPool;

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0xE08704", Offset = "0xE08704", VA = "0xE08704")]
		public LootCrate[] GetCratesToSpawn()
		{
			return null;
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0xE0896C", Offset = "0xE0896C", VA = "0xE0896C")]
		public LootCrate[] GetCratesToRespawn()
		{
			return null;
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0xE0888C", Offset = "0xE0888C", VA = "0xE0888C")]
		private LootCrate GetLootCrate(bool useMainPool = false)
		{
			return null;
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0xE08A98", Offset = "0xE08A98", VA = "0xE08A98")]
		public LootCratePoolSO()
		{
		}
	}
	[Token(Token = "0x2000258")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xABFF9C", Offset = "0xABFF9C")]
	public class LoreSO : ScriptableObject
	{
		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string BCID;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string loreTitle;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string loreDescription;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Sprite loreIcon;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Sprite loreHeadlineImage;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool unlockedAtStart;

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0xE099A0", Offset = "0xE099A0", VA = "0xE099A0")]
		public LoreSO()
		{
		}
	}
	[Token(Token = "0x2000259")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xABFFFC", Offset = "0xABFFFC")]
	public class LureSO : ItemSO
	{
		[Token(Token = "0x20004B2")]
		public enum Type
		{
			[Token(Token = "0x4001E07")]
			Floating,
			[Token(Token = "0x4001E08")]
			Swimming
		}

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float AttractionRadius;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Type LureType;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float minimumContinuousRodReelTime;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static float minimumContinuousRodRestTime;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static float maximumContinuousRodReelTime;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static float maximumContinuousRodRestTime;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static float attractionShrinkSpeed;

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0xE0B398", Offset = "0xE0B398", VA = "0xE0B398")]
		public LureSO()
		{
		}
	}
	[Token(Token = "0x200025A")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xAC005C", Offset = "0xAC005C")]
	public class MissionSO : ScriptableObject
	{
		[Token(Token = "0x20004B3")]
		public enum MissionTypes
		{
			[Token(Token = "0x4001E0A")]
			mission,
			[Token(Token = "0x4001E0B")]
			sideMission,
			[Token(Token = "0x4001E0C")]
			challengeMission,
			[Token(Token = "0x4001E0D")]
			tutorial,
			[Token(Token = "0x4001E0E")]
			cutscene,
			[Token(Token = "0x4001E0F")]
			fishPad
		}

		[Serializable]
		[Token(Token = "0x20004B4")]
		public struct TargetFish
		{
			[Token(Token = "0x4001E10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FishTypeSO Target;

			[Token(Token = "0x4001E11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int TargetTotal;

			[Token(Token = "0x4001E12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int TargetFishGoalStarRating;

			[Token(Token = "0x4001E13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FishTypeSO.Grade TargetFishGrade;

			[Token(Token = "0x4001E14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool IsAnyofTarget;
		}

		[Serializable]
		[Token(Token = "0x20004B5")]
		public struct TargetItem
		{
			[Token(Token = "0x4001E15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ItemSO TargetItemSO;

			[Token(Token = "0x4001E16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int TargetTotal;
		}

		[Serializable]
		[Token(Token = "0x20004B6")]
		public struct Reward
		{
			[Token(Token = "0x4001E17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ItemSO Item;

			[Token(Token = "0x4001E18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int Amount;
		}

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string BCID;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MissionTypes MissionType;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string World;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Location;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string TimeOfDay;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LocationSO MissionLocation;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string MissionName;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string MissionDescription;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string MissionShortDescription;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string MiniGame;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TargetFish[] TargetFishes;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string FishGroupName;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Sprite FishGroupIcon;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float TargetGoalTotalWeight;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int TargetGoalTotalStar;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public TargetItem[] TargetItems;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int TimeLimit;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int BaitLimit;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public ItemSO SuggestedBait;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public ItemSO SuggestedPole;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public ItemSO SuggestedLure;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public FishPool2SO[] FishPools;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public int FishPoolChangingFrequency;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public LootCratePoolSO LootCratePool;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public LocationSO[] TargetLocations;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Reward[] Rewards;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public MissionSO[] UnlockedMission;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public int AttemptLimit;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public string NewsHeadlineText;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Sprite NewsImage;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public int PlayerRanking;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public int[] TeamRanks;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public Dictionary<TargetFish, int> MissionProgresses;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Dictionary<TargetItem, int> MissionProgresses_Item;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public float MissionTotalWeight;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public int MissionTotalStar;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public int MissionTargetAmount;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public string Message;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public string CutsceneButtonText;

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0xE4E5FC", Offset = "0xE4E5FC", VA = "0xE4E5FC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0xE4757C", Offset = "0xE4757C", VA = "0xE4757C")]
		public void Init()
		{
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0xE4E600", Offset = "0xE4E600", VA = "0xE4E600")]
		private void SetProgress()
		{
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0xE4EA54", Offset = "0xE4EA54", VA = "0xE4EA54")]
		public MissionSO()
		{
		}
	}
	[Token(Token = "0x200025B")]
	public enum Difficulty
	{
		[Token(Token = "0x4000FB6")]
		Easy,
		[Token(Token = "0x4000FB7")]
		Medium,
		[Token(Token = "0x4000FB8")]
		Hard,
		[Token(Token = "0x4000FB9")]
		Expert
	}
	[Token(Token = "0x200025C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xAC00BC", Offset = "0xAC00BC")]
	public class PatternSO : ScriptableObject
	{
		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string BCID;

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Difficulty difficulty;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Arrow[] arrows;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC5300", Offset = "0xAC5300")]
		public float[] timePerStep;

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0xE57D64", Offset = "0xE57D64", VA = "0xE57D64")]
		public PatternSO()
		{
		}
	}
	[Token(Token = "0x200025D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xAC011C", Offset = "0xAC011C")]
	public class PlayerProgressSO : ScriptableObject
	{
		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Mission;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<string> ItemSOs;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<MapUnlockProgress> UnlockedLocations;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<ItemProgress> ItemProgresses;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<string, ItemProgress> m_Item_Dic;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<MissionProgress> MissionProgresses;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<string, MissionProgress> m_Mission_Dic;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<FishOPedia> FishOPedias;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<string, FishOPedia> m_FishOPedia_Dic;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<AquariumPreset> AquariumCustomizations;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int CurrentAquariumIndex;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool IsCharmCraftStationUnlocked;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		public bool IsItemCraftStationUnlocked;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
		public bool IsCraftingCutsceneShowed;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
		public bool IsAquariumCutsceneShowed;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string CloudPath;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int PlayerXP;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public int PlayerLevel;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int PlayerTournamentPoint;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string PlayerRod;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public LureSO.Type PlayerLureMode;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public string PlayerLure;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public string PlayerCharm;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public string PlayerLastLocation;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public int W1TournamentPoint;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public int W2TournamentPoint;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public int W3TournamentPoint;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float BoostTimer;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float BoostLevelPowerReel;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float BoostLevelStun;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float BoostLevelTeleport;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public string TimeStamp;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public string VersionStamp;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public bool AutoReeling;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		public bool ShowFishingUI;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public float PlayerHeight;

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public float MusicVolume;

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public bool ShowFishFinder;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xED")]
		public bool ShowLureBeam;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public string[] AnimationScenes;

		[Token(Token = "0x1700014F")]
		public MissionSO ProgressMission
		{
			[Token(Token = "0x6000DA6")]
			[Address(RVA = "0x1FD2718", Offset = "0x1FD2718", VA = "0x1FD2718")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DA7")]
			[Address(RVA = "0x1FD0B6C", Offset = "0x1FD0B6C", VA = "0x1FD0B6C")]
			set
			{
			}
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x1FD3144", Offset = "0x1FD3144", VA = "0x1FD3144")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x1FD36C0", Offset = "0x1FD36C0", VA = "0x1FD36C0")]
		private void SaveLegacy(string fileName, object target)
		{
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0x1FD37DC", Offset = "0x1FD37DC", VA = "0x1FD37DC")]
		private void Save(string fileName, object target)
		{
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x1FD2FE4", Offset = "0x1FD2FE4", VA = "0x1FD2FE4")]
		private void Save(bool IsGamePlay = true)
		{
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x1FD39C0", Offset = "0x1FD39C0", VA = "0x1FD39C0")]
		private void LoadLegacy(string fileName, object target, int selectedIndex)
		{
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x1FD3E58", Offset = "0x1FD3E58", VA = "0x1FD3E58")]
		private void Load(string fileName, object target, int selectedIndex)
		{
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x1FD4228", Offset = "0x1FD4228", VA = "0x1FD4228")]
		private void Delete(string fileName)
		{
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0x1FD28D4", Offset = "0x1FD28D4", VA = "0x1FD28D4")]
		public void DeleteSaveFile(int index)
		{
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x1FD42E8", Offset = "0x1FD42E8", VA = "0x1FD42E8")]
		public bool CheckFileExist(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0x1FD437C", Offset = "0x1FD437C", VA = "0x1FD437C")]
		private bool CheckFile(string fileName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x1FD441C", Offset = "0x1FD441C", VA = "0x1FD441C")]
		private void Load(int selectedIndex)
		{
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x1FD08D8", Offset = "0x1FD08D8", VA = "0x1FD08D8")]
		public void SaveItem(ItemSO item)
		{
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x1FD0C64", Offset = "0x1FD0C64", VA = "0x1FD0C64")]
		public void SaveMission(MissionSO mission)
		{
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x1FCFC64", Offset = "0x1FCFC64", VA = "0x1FCFC64")]
		public void SaveLocationUnlock(LocationSO location)
		{
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x1FCFDDC", Offset = "0x1FCFDDC", VA = "0x1FCFDDC")]
		public void SaveLocationArrived(LocationSO location)
		{
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x1FCF97C", Offset = "0x1FCF97C", VA = "0x1FCF97C")]
		public void SaveFishOPedia(FishOPediaController.FishOPedia_ fishOPedia)
		{
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x1FD0580", Offset = "0x1FD0580", VA = "0x1FD0580")]
		public void SaveItemCraftStation(bool isItemCraftStationUnlocked)
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x1FD05B4", Offset = "0x1FD05B4", VA = "0x1FD05B4")]
		public void SaveCharmCraftStation(bool isCharmCraftStationUnlocked)
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x1FD05E8", Offset = "0x1FD05E8", VA = "0x1FD05E8")]
		public void SaveCraftingSceneStat(bool isShowed)
		{
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x1FD061C", Offset = "0x1FD061C", VA = "0x1FD061C")]
		public void OnSaveAquariumSceneStat(bool isShowed)
		{
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x1FD44BC", Offset = "0x1FD44BC", VA = "0x1FD44BC")]
		public void SaveAquarium()
		{
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x1FD087C", Offset = "0x1FD087C", VA = "0x1FD087C")]
		public void SavePlayerLevel(int level)
		{
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x1FD08B0", Offset = "0x1FD08B0", VA = "0x1FD08B0")]
		public void SavePlayerXP(int xp)
		{
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x1FD054C", Offset = "0x1FD054C", VA = "0x1FD054C")]
		public void SavePlayerTournamentPoint(int TP)
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x1FD454C", Offset = "0x1FD454C", VA = "0x1FD454C")]
		public void SaveWorldTournamentPoint(int TP, int world)
		{
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x1FD0678", Offset = "0x1FD0678", VA = "0x1FD0678")]
		public void SaveBoostTimer()
		{
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x1FD06F0", Offset = "0x1FD06F0", VA = "0x1FD06F0")]
		public void SaveBoostLevelPowerReel()
		{
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x1FD0768", Offset = "0x1FD0768", VA = "0x1FD0768")]
		public void SaveBoostLevelStun()
		{
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x1FD07E0", Offset = "0x1FD07E0", VA = "0x1FD07E0")]
		public void SaveBoostLevelTeleport()
		{
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0x1FD0308", Offset = "0x1FD0308", VA = "0x1FD0308")]
		public void SaveAutoReeling(bool b)
		{
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0x1FD0318", Offset = "0x1FD0318", VA = "0x1FD0318")]
		public void SaveShowFishingUI(bool b)
		{
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x1FD0328", Offset = "0x1FD0328", VA = "0x1FD0328")]
		public void SavePlayerHeight(float height)
		{
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0x1FCFC14", Offset = "0x1FCFC14", VA = "0x1FCFC14")]
		public void SavePlayerRod(RodSO rod)
		{
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x1FD4598", Offset = "0x1FD4598", VA = "0x1FD4598")]
		public void SavePlayerLureMode(LureSO lure)
		{
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x1FD45B8", Offset = "0x1FD45B8", VA = "0x1FD45B8")]
		public void SavePlayerLure(LureSO lure)
		{
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x1FCFBC4", Offset = "0x1FCFBC4", VA = "0x1FCFBC4")]
		public void SavePlayerCharm(CharmSO charm)
		{
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0x1FD0418", Offset = "0x1FD0418", VA = "0x1FD0418")]
		public void SaveMusicVolume(float vol)
		{
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x1FD0508", Offset = "0x1FD0508", VA = "0x1FD0508")]
		public void SaveShowFishFinder(bool val)
		{
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x1FD0518", Offset = "0x1FD0518", VA = "0x1FD0518")]
		public void SaveShowLureBeam(bool val)
		{
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0x1FD1B04", Offset = "0x1FD1B04", VA = "0x1FD1B04")]
		public void LoadAllDic(int selectedIndex = 0)
		{
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0x1FCF654", Offset = "0x1FCF654", VA = "0x1FCF654")]
		public void ResetAllProgress(MissionSO mission, bool loadAfterReset = false)
		{
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x1FD3148", Offset = "0x1FD3148", VA = "0x1FD3148")]
		private void InitDic()
		{
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0x1FD45F0", Offset = "0x1FD45F0", VA = "0x1FD45F0")]
		public bool CheckVersion(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0x1FD45F8", Offset = "0x1FD45F8", VA = "0x1FD45F8")]
		private bool CheckWithCurrentVersion(int[] versions)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0x1FD4714", Offset = "0x1FD4714", VA = "0x1FD4714")]
		public PlayerProgressSO()
		{
		}
	}
	[Token(Token = "0x200025E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xAC017C", Offset = "0xAC017C")]
	public class PopDataSO : ScriptableObject
	{
		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string popDataName;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool popVisible;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool popFlyRight;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool popPortIn;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		public bool popPortOut;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int popDataIndex;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int popDataLang;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LipSyncData popLipSyncData;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LipSyncData popLipSyncDataCN;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xAC5338", Offset = "0xAC5338")]
		public string popLipSyncScripts;

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x1FD66D0", Offset = "0x1FD66D0", VA = "0x1FD66D0")]
		public PopDataSO()
		{
		}
	}
	[Token(Token = "0x200025F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xAC01DC", Offset = "0xAC01DC")]
	public class RodSO : ItemSO
	{
		[Token(Token = "0x20004B7")]
		public enum BoostType
		{
			[Token(Token = "0x4001E1A")]
			PowerReel,
			[Token(Token = "0x4001E1B")]
			Stun,
			[Token(Token = "0x4001E1C")]
			Teleport
		}

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public BoostType boostType;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int BoostCharge;

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0xD56550", Offset = "0xD56550", VA = "0xD56550")]
		public RodSO()
		{
		}
	}
	[Token(Token = "0x2000260")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xAC023C", Offset = "0xAC023C")]
	public class SubtitlesSO : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20004B8")]
		public class Subtitle
		{
			[Token(Token = "0x4001E1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string textKey;

			[Token(Token = "0x6001E7A")]
			[Address(RVA = "0xD147F4", Offset = "0xD147F4", VA = "0xD147F4")]
			public Subtitle()
			{
			}
		}

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Subtitle[] localizedString;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string textID;

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0xD1458C", Offset = "0xD1458C", VA = "0xD1458C")]
		public string GetSubtitle(string language)
		{
			return null;
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0xD147EC", Offset = "0xD147EC", VA = "0xD147EC")]
		public SubtitlesSO()
		{
		}
	}
	[Token(Token = "0x2000261")]
	public class GoLanguageMenu : MonoBehaviour
	{
		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject LanguageWindow;

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0xE00FFC", Offset = "0xE00FFC", VA = "0xE00FFC")]
		public void OnClick()
		{
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0xE0101C", Offset = "0xE0101C", VA = "0xE0101C")]
		public void OnCloseClick()
		{
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0xE0103C", Offset = "0xE0103C", VA = "0xE0103C")]
		public GoLanguageMenu()
		{
		}
	}
	[Token(Token = "0x2000262")]
	public static class GenerateHaptics
	{
		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0xDFF9A8", Offset = "0xDFF9A8", VA = "0xDFF9A8")]
		public static void MakeHaptics(HapticsClipSO hapticsClip)
		{
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0xDFFFFC", Offset = "0xDFFFFC", VA = "0xDFFFFC")]
		private static float ComputeRMS(float[] buffer, int offset, int length)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000263")]
	public class Haptics : MonoBehaviour
	{
		[Token(Token = "0x20004B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0F10", Offset = "0xAC0F10")]
		private sealed class <PlayHaptics>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Handside side;

			[Token(Token = "0x4001E21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HapticsClipSO clip;

			[Token(Token = "0x4001E22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float speed;

			[Token(Token = "0x4001E23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float gain;

			[Token(Token = "0x4001E24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <frame>5__2;

			[Token(Token = "0x4001E25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <frameIncrement>5__3;

			[Token(Token = "0x17000301")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E7E")]
				[Address(RVA = "0xE01608", Offset = "0xE01608", VA = "0xE01608", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000302")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E80")]
				[Address(RVA = "0xE01670", Offset = "0xE01670", VA = "0xE01670", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E7B")]
			[Address(RVA = "0xE013CC", Offset = "0xE013CC", VA = "0xE013CC")]
			[DebuggerHidden]
			public <PlayHaptics>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001E7C")]
			[Address(RVA = "0xE01400", Offset = "0xE01400", VA = "0xE01400", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E7D")]
			[Address(RVA = "0xE01404", Offset = "0xE01404", VA = "0xE01404", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E7F")]
			[Address(RVA = "0xE01610", Offset = "0xE01610", VA = "0xE01610", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Haptics instance;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticsClipSO clip;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSource audio;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine playingLeft;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine playingRight;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HapticsPriority priorityL;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private HapticsPriority priorityR;

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0xE01044", Offset = "0xE01044", VA = "0xE01044")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0xE010C8", Offset = "0xE010C8", VA = "0xE010C8")]
		public static void StopHaptics(Handside side)
		{
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0xE01148", Offset = "0xE01148", VA = "0xE01148")]
		public static void Play(Handside side, float amplitude, float duration, HapticsPriority priority = HapticsPriority.low)
		{
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0xE0131C", Offset = "0xE0131C", VA = "0xE0131C")]
		private void DisablePriorityOverrideL()
		{
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0xE01324", Offset = "0xE01324", VA = "0xE01324")]
		private void DisablePriorityOverrideR()
		{
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0xDF3E14", Offset = "0xDF3E14", VA = "0xDF3E14")]
		public static void Play(Handside side, HapticsClipSO hapticsClip, float speed, float gain, HapticsPriority priority = HapticsPriority.low)
		{
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0xE0132C", Offset = "0xE0132C", VA = "0xE0132C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACBB8C", Offset = "0xACBB8C")]
		private IEnumerator PlayHaptics(Handside side, HapticsClipSO clip, float speed, float gain = 1f)
		{
			return null;
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0xE013F8", Offset = "0xE013F8", VA = "0xE013F8")]
		public Haptics()
		{
		}
	}
	[Token(Token = "0x2000264")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xAC029C", Offset = "0xAC029C")]
	public class HapticsClipSO : ScriptableObject
	{
		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC5350", Offset = "0xAC5350")]
		public string clipName;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip audioClip;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float[] frameData;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float duration;

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0xE01678", Offset = "0xE01678", VA = "0xE01678")]
		public void Generate()
		{
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0xE0167C", Offset = "0xE0167C", VA = "0xE0167C")]
		public HapticsClipSO()
		{
		}
	}
	[Token(Token = "0x2000265")]
	public class HapticsDebugController : MonoBehaviour
	{
		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSource haptAudio;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip audioClip;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip h07;

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip h08;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Button h1;

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Button h2;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Button h3;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Button h4;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Button h5;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Button h6;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Button h7;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Button h8;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public HapticsClipSO clipH1;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public HapticsClipSO clipH2;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public HapticsClipSO clipH3;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public HapticsClipSO clipH4;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public HapticsClipSO clipH5;

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public HapticsClipSO clipH6;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public HapticsClipSO clipH7;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public HapticsClipSO clipH8;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float speed;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public TextMeshProUGUI speedVal;

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0xE01684", Offset = "0xE01684", VA = "0xE01684")]
		public void OnClick(Button but)
		{
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0xE01944", Offset = "0xE01944", VA = "0xE01944")]
		private void PlayClip(HapticsClipSO clip)
		{
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0xE01A48", Offset = "0xE01A48", VA = "0xE01A48")]
		public void SetSpeed(float spd)
		{
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0xE01AD8", Offset = "0xE01AD8", VA = "0xE01AD8")]
		public HapticsDebugController()
		{
		}
	}
	[Token(Token = "0x2000266")]
	public class HookedFishController : MonoBehaviour
	{
		[Token(Token = "0x20004BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0F20", Offset = "0xAC0F20")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x4001E26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public HookedFishController <>4__this;

			[Token(Token = "0x4001E27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float startY;

			[Token(Token = "0x6001E81")]
			[Address(RVA = "0xE031F8", Offset = "0xE031F8", VA = "0xE031F8")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x6001E82")]
			[Address(RVA = "0xE03484", Offset = "0xE03484", VA = "0xE03484")]
			internal void <SnapBreach>b__0()
			{
			}
		}

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float rotateDuration;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Vector3 modelRotation;

		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FishTypeSO m_fishType;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private FishAnimationController m_fishAnimationController;

		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Tween posTween;

		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Tween rotTween;

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isJumping;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject jumpTrail;

		[Token(Token = "0x17000150")]
		public FishTypeSO FishType
		{
			[Token(Token = "0x6000DEC")]
			[Address(RVA = "0xE01AE8", Offset = "0xE01AE8", VA = "0xE01AE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000151")]
		public FishAnimationController FishAnimator
		{
			[Token(Token = "0x6000DED")]
			[Address(RVA = "0xE01AF0", Offset = "0xE01AF0", VA = "0xE01AF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000152")]
		public bool IsJumping
		{
			[Token(Token = "0x6000DEE")]
			[Address(RVA = "0xE01AF8", Offset = "0xE01AF8", VA = "0xE01AF8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0xE01B00", Offset = "0xE01B00", VA = "0xE01B00")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0xE01D14", Offset = "0xE01D14", VA = "0xE01D14")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0xE01F10", Offset = "0xE01F10", VA = "0xE01F10")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0xE021C4", Offset = "0xE021C4", VA = "0xE021C4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0xE02380", Offset = "0xE02380", VA = "0xE02380")]
		private void OnFishStartedFleeing(Vector3 fleeDirection, bool isFish, bool directionChange)
		{
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0xE0257C", Offset = "0xE0257C", VA = "0xE0257C")]
		private void OnFishStoppedFleeing(bool isFish)
		{
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0xE026F0", Offset = "0xE026F0", VA = "0xE026F0")]
		public void SetModel(Transform hookedFish, FishTypeSO fishType)
		{
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0xE02948", Offset = "0xE02948", VA = "0xE02948")]
		public void ResetModel()
		{
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0xDF41F0", Offset = "0xDF41F0", VA = "0xDF41F0")]
		public void JumpEscape()
		{
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0xE0299C", Offset = "0xE0299C", VA = "0xE0299C")]
		public void JumpReleased()
		{
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0xE029A0", Offset = "0xE029A0", VA = "0xE029A0")]
		public void JumpKept()
		{
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0xE029A4", Offset = "0xE029A4", VA = "0xE029A4")]
		public void SnapJump(Arrow arrowDir, float arrowVisibleTime)
		{
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0xE02B88", Offset = "0xE02B88", VA = "0xE02B88")]
		public void JumpRecover()
		{
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0xE02C1C", Offset = "0xE02C1C", VA = "0xE02C1C")]
		public void JumpReturn()
		{
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0xE02CB0", Offset = "0xE02CB0", VA = "0xE02CB0")]
		public void OutOfWater()
		{
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0xE029A8", Offset = "0xE029A8", VA = "0xE029A8")]
		private void Jump(Arrow arrowDir, float jumpTime)
		{
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0xE02EC4", Offset = "0xE02EC4", VA = "0xE02EC4")]
		private void OnSnapDragSlip()
		{
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0xE02808", Offset = "0xE02808", VA = "0xE02808")]
		private void ResetLocalTransform()
		{
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0xE02088", Offset = "0xE02088", VA = "0xE02088")]
		private float GetUnderwaterDepth()
		{
			return default(float);
		}

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0xE03000", Offset = "0xE03000", VA = "0xE03000")]
		public void SnapBreach(Arrow arrowDir)
		{
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0xE03200", Offset = "0xE03200", VA = "0xE03200")]
		private void BreachSubmerge(float endY)
		{
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0xE02D44", Offset = "0xE02D44", VA = "0xE02D44")]
		private void SetSnapRotation(Arrow arrowDir)
		{
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0xE032E4", Offset = "0xE032E4", VA = "0xE032E4")]
		public HookedFishController()
		{
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0xE03354", Offset = "0xE03354", VA = "0xE03354")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACBBF0", Offset = "0xACBBF0")]
		private void <Jump>b__29_0()
		{
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0xE033E4", Offset = "0xE033E4", VA = "0xE033E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACBC00", Offset = "0xACBC00")]
		private void <BreachSubmerge>b__34_0()
		{
		}
	}
	[Token(Token = "0x2000267")]
	public class IngredientSlot : MonoBehaviour
	{
		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IngredientsSO ingredientSO;

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0xE034AC", Offset = "0xE034AC", VA = "0xE034AC")]
		public IngredientSlot()
		{
		}
	}
	[Token(Token = "0x2000268")]
	public class InteriorToggleImageOnOff : MonoBehaviour
	{
		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Toggle toggle;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject toggleImageOn;

		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject toggleImageOff;

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0xE035C4", Offset = "0xE035C4", VA = "0xE035C4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0xE035C8", Offset = "0xE035C8", VA = "0xE035C8")]
		public void SetToggleImage()
		{
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0xE036C4", Offset = "0xE036C4", VA = "0xE036C4")]
		public InteriorToggleImageOnOff()
		{
		}
	}
	[Token(Token = "0x2000269")]
	public enum LootCrateType
	{
		[Token(Token = "0x4001023")]
		FloatingCrate,
		[Token(Token = "0x4001024")]
		MovingCrate,
		[Token(Token = "0x4001025")]
		SinkingCrate,
		[Token(Token = "0x4001026")]
		Iceberg,
		[Token(Token = "0x4001027")]
		ToxicBarrel,
		[Token(Token = "0x4001028")]
		SpaceCrate
	}
	[Token(Token = "0x200026A")]
	public enum LootCrateSkin
	{
		[Token(Token = "0x400102A")]
		TournamentLogo,
		[Token(Token = "0x400102B")]
		MysteriousLogo,
		[Token(Token = "0x400102C")]
		Iceberg1,
		[Token(Token = "0x400102D")]
		Iceberg2,
		[Token(Token = "0x400102E")]
		Iceberg3
	}
	[Serializable]
	[Token(Token = "0x200026B")]
	public class LootCrate
	{
		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LootCrateType type;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public LootCrateSkin skin;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int size;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int numItems;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ItemSO[] contentItems;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float[] contentProbabilities;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool visible;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector2 location;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float probability;

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0xE07C50", Offset = "0xE07C50", VA = "0xE07C50")]
		public LootCrate()
		{
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0xE07C58", Offset = "0xE07C58", VA = "0xE07C58")]
		public LootCrate(LootCrate lootCrate)
		{
		}
	}
	[Token(Token = "0x200026C")]
	public class LootCrateController : MonoBehaviour
	{
		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LootCrateSpawner spawner;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<LpCrate> crates;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LpCrate crateShowingHint;

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0xE07CE0", Offset = "0xE07CE0", VA = "0xE07CE0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0xE07DAC", Offset = "0xE07DAC", VA = "0xE07DAC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0xE07E1C", Offset = "0xE07E1C", VA = "0xE07E1C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0xE07EE8", Offset = "0xE07EE8", VA = "0xE07EE8")]
		private void LocationChange(LocationSO locationSO, bool comingFromShip)
		{
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0xE07FE0", Offset = "0xE07FE0", VA = "0xE07FE0")]
		private void EventHub_OnFishTaken(FpFish fish)
		{
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0xE07F7C", Offset = "0xE07F7C", VA = "0xE07F7C")]
		private void RemoveAllCrates()
		{
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0xE08184", Offset = "0xE08184", VA = "0xE08184")]
		public void HideAllCrates()
		{
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0xE07FE4", Offset = "0xE07FE4", VA = "0xE07FE4")]
		public void ShowAllVisibleCrates()
		{
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0xE08410", Offset = "0xE08410", VA = "0xE08410")]
		public void RemoveRecoveredCrate(LpCrate crate)
		{
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0xE084C0", Offset = "0xE084C0", VA = "0xE084C0")]
		public void ShowAllCrates()
		{
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0xE085BC", Offset = "0xE085BC", VA = "0xE085BC")]
		public void ReelInMinigameStarted()
		{
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0xE086EC", Offset = "0xE086EC", VA = "0xE086EC")]
		public LootCrateController()
		{
		}
	}
	[Token(Token = "0x200026D")]
	public class LootCrateSpawner : MonoBehaviour
	{
		[Token(Token = "0x20004BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0F30", Offset = "0xAC0F30")]
		private sealed class <StartCrateSpawn>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LootCrateSpawner <>4__this;

			[Token(Token = "0x17000303")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E86")]
				[Address(RVA = "0xE09920", Offset = "0xE09920", VA = "0xE09920", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000304")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E88")]
				[Address(RVA = "0xE09988", Offset = "0xE09988", VA = "0xE09988", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E83")]
			[Address(RVA = "0xE08E3C", Offset = "0xE08E3C", VA = "0xE08E3C")]
			[DebuggerHidden]
			public <StartCrateSpawn>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001E84")]
			[Address(RVA = "0xE0973C", Offset = "0xE0973C", VA = "0xE0973C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E85")]
			[Address(RVA = "0xE09740", Offset = "0xE09740", VA = "0xE09740", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E87")]
			[Address(RVA = "0xE09928", Offset = "0xE09928", VA = "0xE09928", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0F40", Offset = "0xAC0F40")]
		private sealed class <SpawnCrateKeptReleasedCR>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LootCrateSpawner <>4__this;

			[Token(Token = "0x4001E2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x17000305")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E8C")]
				[Address(RVA = "0xE096CC", Offset = "0xE096CC", VA = "0xE096CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000306")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E8E")]
				[Address(RVA = "0xE09734", Offset = "0xE09734", VA = "0xE09734", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E89")]
			[Address(RVA = "0xE090D4", Offset = "0xE090D4", VA = "0xE090D4")]
			[DebuggerHidden]
			public <SpawnCrateKeptReleasedCR>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001E8A")]
			[Address(RVA = "0xE09528", Offset = "0xE09528", VA = "0xE09528", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E8B")]
			[Address(RVA = "0xE0952C", Offset = "0xE0952C", VA = "0xE0952C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E8D")]
			[Address(RVA = "0xE096D4", Offset = "0xE096D4", VA = "0xE096D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SpawnPool pool;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LootCratePoolSO lootCratePool;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LootCrateController lootCrateCtrl;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform cratePrefab;

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0xE08AA0", Offset = "0xE08AA0", VA = "0xE08AA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0xE08BE4", Offset = "0xE08BE4", VA = "0xE08BE4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0xE08C44", Offset = "0xE08C44", VA = "0xE08C44")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0xE08D88", Offset = "0xE08D88", VA = "0xE08D88")]
		public void SpawnCrates(LootCratePoolSO lcp)
		{
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0xE08114", Offset = "0xE08114", VA = "0xE08114")]
		public void DespawnAllCrates()
		{
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0xE084A4", Offset = "0xE084A4", VA = "0xE084A4")]
		public void DespawnCrate(Transform crate)
		{
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0xE08DC0", Offset = "0xE08DC0", VA = "0xE08DC0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACBC10", Offset = "0xACBC10")]
		private IEnumerator StartCrateSpawn()
		{
			return null;
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0xE08E68", Offset = "0xE08E68", VA = "0xE08E68")]
		public LpCrate SpawnCrate(Vector3 pos, LootCrate lc)
		{
			return null;
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0xE0902C", Offset = "0xE0902C", VA = "0xE0902C")]
		private void SpawnCrateKeptReleased(FpFish fish)
		{
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0xE09058", Offset = "0xE09058", VA = "0xE09058")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACBC74", Offset = "0xACBC74")]
		private IEnumerator SpawnCrateKeptReleasedCR()
		{
			return null;
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0xE09100", Offset = "0xE09100", VA = "0xE09100")]
		private void RestockPool()
		{
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0xE09308", Offset = "0xE09308", VA = "0xE09308")]
		private void EventHub_OnFishCaught(FpFish fish, bool isCheating)
		{
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0xE0919C", Offset = "0xE0919C", VA = "0xE0919C")]
		private void DoSpawn(LootCrate ltCrate)
		{
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0xE09520", Offset = "0xE09520", VA = "0xE09520")]
		public LootCrateSpawner()
		{
		}
	}
	[Token(Token = "0x200026E")]
	public class LpCrate : MonoBehaviour
	{
		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LootCrate lootCrate;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ItemSO[] items;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FpFish fpFish;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Collider col;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject[] crateModels;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<float, ItemSO> m_Data_Dic;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Dictionary<ItemSO, int> UnboxingResult;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float showHintDuration;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform bubbles;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public LootCrateController lootCrateCtrl;

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0xE099A8", Offset = "0xE099A8", VA = "0xE099A8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0xE09AEC", Offset = "0xE09AEC", VA = "0xE09AEC")]
		private ItemSO GetResult()
		{
			return null;
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0xE09C18", Offset = "0xE09C18", VA = "0xE09C18")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0xE09CE4", Offset = "0xE09CE4", VA = "0xE09CE4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0xE09DF0", Offset = "0xE09DF0", VA = "0xE09DF0")]
		private void ShowHint()
		{
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0xE0864C", Offset = "0xE0864C", VA = "0xE0864C")]
		public void RemoveHint()
		{
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0xE099AC", Offset = "0xE099AC", VA = "0xE099AC")]
		private void Init()
		{
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0xE0937C", Offset = "0xE0937C", VA = "0xE0937C")]
		public void Inititalize()
		{
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0xE082FC", Offset = "0xE082FC", VA = "0xE082FC")]
		public void SetVisible(bool state, bool collider = false)
		{
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0xE09F30", Offset = "0xE09F30", VA = "0xE09F30")]
		private void DisableAllSkins()
		{
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0xE09CB4", Offset = "0xE09CB4", VA = "0xE09CB4")]
		public void SetCollider(bool state)
		{
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0xE09FA0", Offset = "0xE09FA0", VA = "0xE09FA0")]
		public LpCrate()
		{
		}
	}
	[Token(Token = "0x200026F")]
	public class LureCylinderScaler : MonoBehaviour
	{
		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float waterYPos;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject scalerParent;

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0xE0A204", Offset = "0xE0A204", VA = "0xE0A204")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0xE0A3F8", Offset = "0xE0A3F8", VA = "0xE0A3F8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0xE0A46C", Offset = "0xE0A46C", VA = "0xE0A46C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0xE0A608", Offset = "0xE0A608", VA = "0xE0A608")]
		private void OnPlayerSettingChanged(PlayerSetting setting)
		{
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0xE0A6FC", Offset = "0xE0A6FC", VA = "0xE0A6FC")]
		public LureCylinderScaler()
		{
		}
	}
	[Token(Token = "0x2000270")]
	public class LureLineController : MonoBehaviour
	{
		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material material;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObiRopeSection section;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ObiRope rope;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ObiRopeBlueprint blueprint;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ObiRopeExtrudedRenderer ropeRenderer;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ObiRopeCursor cursor;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform RootTrans;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform TargetTrans;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ObiParticleAttachment attachmentStart;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ObiParticleAttachment attachmentEnd;

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0xE0A70C", Offset = "0xE0A70C", VA = "0xE0A70C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0xE0A8F8", Offset = "0xE0A8F8", VA = "0xE0A8F8")]
		public void CreateLureLine()
		{
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0xE0A960", Offset = "0xE0A960", VA = "0xE0A960")]
		public void HideRope()
		{
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0xE0A9C8", Offset = "0xE0A9C8", VA = "0xE0A9C8")]
		public LureLineController()
		{
		}
	}
	[Token(Token = "0x2000271")]
	public enum lureOptions
	{
		[Token(Token = "0x4001056")]
		LureRing,
		[Token(Token = "0x4001057")]
		LureBeam,
		[Token(Token = "0x4001058")]
		LurePulse,
		[Token(Token = "0x4001059")]
		LurePulse3D
	}
	[Token(Token = "0x2000272")]
	public class LureOptions : MonoBehaviour
	{
		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static LureOptions instance;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject lureRing;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject lureBeam;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject lurePulse;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject lurePulse3D;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool lureRingOn;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool lureBeamOn;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		public bool lurePulseOn;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		public bool lurePulse3DOn;

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0xE0A9D0", Offset = "0xE0A9D0", VA = "0xE0A9D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0xE0AA30", Offset = "0xE0AA30", VA = "0xE0AA30")]
		public void setVisibility()
		{
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0xE0AADC", Offset = "0xE0AADC", VA = "0xE0AADC")]
		public static void SetLureOption(lureOptions option, bool state)
		{
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0xE0ABF8", Offset = "0xE0ABF8", VA = "0xE0ABF8")]
		public LureOptions()
		{
		}
	}
	[Token(Token = "0x2000273")]
	public class LureOptionsUI : MonoBehaviour
	{
		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public lureOptions option;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle tog;

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0xE0AC08", Offset = "0xE0AC08", VA = "0xE0AC08")]
		public void OnToggleChanged()
		{
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0xE0ACC4", Offset = "0xE0ACC4", VA = "0xE0ACC4")]
		public LureOptionsUI()
		{
		}
	}
	[Token(Token = "0x2000274")]
	public class LureRadiusColor : MonoBehaviour
	{
		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ParticleSystem ps;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ParticleSystem.ColorOverLifetimeModule psCol;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Gradient colNoFish;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Gradient colWithFish;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool isAnyFishInRadius;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<FishAI> fishInRadius;

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0xE0ACCC", Offset = "0xE0ACCC", VA = "0xE0ACCC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0xE0AE0C", Offset = "0xE0AE0C", VA = "0xE0AE0C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0xE0AEA8", Offset = "0xE0AEA8", VA = "0xE0AEA8")]
		private void OnRodReset()
		{
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0xE0AF18", Offset = "0xE0AF18", VA = "0xE0AF18")]
		private void OnFirstFishEntered()
		{
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0xE0AFB8", Offset = "0xE0AFB8", VA = "0xE0AFB8")]
		private void OnLastFishLeft()
		{
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0xE0B054", Offset = "0xE0B054", VA = "0xE0B054")]
		public void AddFish(FishAI fish)
		{
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0xE0B0F4", Offset = "0xE0B0F4", VA = "0xE0B0F4")]
		public void RemoveFish(FishAI fish)
		{
		}

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0xE0B1A4", Offset = "0xE0B1A4", VA = "0xE0B1A4")]
		public LureRadiusColor()
		{
		}
	}
	[Token(Token = "0x2000275")]
	public class LureRing3DPulse : MonoBehaviour
	{
		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxSize;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float pulseTime;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Tween pulseTween;

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0xE0B1AC", Offset = "0xE0B1AC", VA = "0xE0B1AC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0xE0B2F0", Offset = "0xE0B2F0", VA = "0xE0B2F0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0xE0B1B0", Offset = "0xE0B1B0", VA = "0xE0B1B0")]
		private void DoPulse()
		{
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0xE0B38C", Offset = "0xE0B38C", VA = "0xE0B38C")]
		public LureRing3DPulse()
		{
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0xE0B394", Offset = "0xE0B394", VA = "0xE0B394")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACBCD8", Offset = "0xACBCD8")]
		private void <DoPulse>b__5_0()
		{
		}
	}
	[Token(Token = "0x2000276")]
	public class MakeResourceCoin : MonoBehaviour
	{
		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform resourceCoin;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpawnPool spawnPool;

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0xE433A0", Offset = "0xE433A0", VA = "0xE433A0")]
		public Transform MakeCoin(Sprite icon)
		{
			return null;
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0xE43480", Offset = "0xE43480", VA = "0xE43480")]
		public MakeResourceCoin()
		{
		}
	}
	[Token(Token = "0x2000277")]
	public class MapController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004BD")]
		private struct LocationBtn
		{
			[Token(Token = "0x4001E2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public UI_WorldButton WorldBtn;

			[Token(Token = "0x4001E30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public UI_MapButton[] LocationBtns;
		}

		[Token(Token = "0x20004BE")]
		private enum LocationType
		{
			[Token(Token = "0x4001E32")]
			A,
			[Token(Token = "0x4001E33")]
			B,
			[Token(Token = "0x4001E34")]
			C
		}

		[Token(Token = "0x20004BF")]
		private enum TimeOfDayType
		{
			[Token(Token = "0x4001E36")]
			Day,
			[Token(Token = "0x4001E37")]
			Night
		}

		[Token(Token = "0x20004C0")]
		public delegate void LocationUnlockAction(LocationSO location);

		[Token(Token = "0x20004C1")]
		public delegate void ArriveNewLocationAction(LocationSO location);

		[Token(Token = "0x20004C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0F50", Offset = "0xAC0F50")]
		private sealed class <SetWorld>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MapController <>4__this;

			[Token(Token = "0x4001E3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool toCurrentWorld;

			[Token(Token = "0x4001E3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string locBCID;

			[Token(Token = "0x17000307")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E9A")]
				[Address(RVA = "0xE450DC", Offset = "0xE450DC", VA = "0xE450DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000308")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E9C")]
				[Address(RVA = "0xE45144", Offset = "0xE45144", VA = "0xE45144", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E97")]
			[Address(RVA = "0xE44BE8", Offset = "0xE44BE8", VA = "0xE44BE8")]
			[DebuggerHidden]
			public <SetWorld>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x6001E98")]
			[Address(RVA = "0xE44DAC", Offset = "0xE44DAC", VA = "0xE44DAC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E99")]
			[Address(RVA = "0xE44DB0", Offset = "0xE44DB0", VA = "0xE44DB0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E9B")]
			[Address(RVA = "0xE450E4", Offset = "0xE450E4", VA = "0xE450E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LocationBtn[] Btns;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Button m_UnlockAllLocationBtn;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC53D8", Offset = "0xAC53D8")]
		[SerializeField]
		private GameObject[] locationPanels;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static MapController instance;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LocationSO m_Location;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool isInit;

		[Token(Token = "0x17000153")]
		public static Button UnlockAllLocationBtn
		{
			[Token(Token = "0x6000E52")]
			[Address(RVA = "0xE43488", Offset = "0xE43488", VA = "0xE43488")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400001C")]
		public static event LocationUnlockAction OnLocationUnlock
		{
			[Token(Token = "0x6000E53")]
			[Address(RVA = "0xE434E4", Offset = "0xE434E4", VA = "0xE434E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACBCE8", Offset = "0xACBCE8")]
			add
			{
			}
			[Token(Token = "0x6000E54")]
			[Address(RVA = "0xE4359C", Offset = "0xE4359C", VA = "0xE4359C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACBCF8", Offset = "0xACBCF8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001D")]
		public static event ArriveNewLocationAction OnArriveNewLocation
		{
			[Token(Token = "0x6000E55")]
			[Address(RVA = "0xE43654", Offset = "0xE43654", VA = "0xE43654")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACBD08", Offset = "0xACBD08")]
			add
			{
			}
			[Token(Token = "0x6000E56")]
			[Address(RVA = "0xE4370C", Offset = "0xE4370C", VA = "0xE4370C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACBD18", Offset = "0xACBD18")]
			remove
			{
			}
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0xE437C4", Offset = "0xE437C4", VA = "0xE437C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0xE4388C", Offset = "0xE4388C", VA = "0xE4388C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0xE43AB0", Offset = "0xE43AB0", VA = "0xE43AB0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0xE43B5C", Offset = "0xE43B5C", VA = "0xE43B5C")]
		public void ChangeLocation()
		{
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0xE43BD8", Offset = "0xE43BD8", VA = "0xE43BD8")]
		public static void UnlockLocation(LocationSO location)
		{
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0xE4409C", Offset = "0xE4409C", VA = "0xE4409C")]
		public void ChangeLocation(LocationSO location)
		{
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0xE43890", Offset = "0xE43890", VA = "0xE43890")]
		private void InitBtns()
		{
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0xE4459C", Offset = "0xE4459C", VA = "0xE4459C")]
		private void EventHub_OnMissionLoad(MissionSO mission)
		{
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0xE43FE4", Offset = "0xE43FE4", VA = "0xE43FE4")]
		private void UnlockButtons(LocationSO loc)
		{
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0xE444E4", Offset = "0xE444E4", VA = "0xE444E4")]
		private void DisableMapNotifs(LocationSO loc)
		{
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0xE44910", Offset = "0xE44910", VA = "0xE44910")]
		public void SetShipPanel()
		{
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0xE44964", Offset = "0xE44964", VA = "0xE44964")]
		private void SetLocationPanel(string locBCID, bool toCurrentWorld = false)
		{
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0xE44AE8", Offset = "0xE44AE8", VA = "0xE44AE8")]
		private void SetWorldOnArrival()
		{
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0xE44A44", Offset = "0xE44A44", VA = "0xE44A44")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACBD28", Offset = "0xACBD28")]
		private IEnumerator SetWorld(string locBCID, bool toCurrentWorld = false)
		{
			return null;
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0xE44C14", Offset = "0xE44C14", VA = "0xE44C14")]
		public static void OpenMapToLocation(string locationBCID)
		{
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0xE44C8C", Offset = "0xE44C8C", VA = "0xE44C8C")]
		public void OpenDefaultLocationCard(int worldIndex = 0)
		{
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0xE44DA4", Offset = "0xE44DA4", VA = "0xE44DA4")]
		public MapController()
		{
		}
	}
	[Token(Token = "0x2000278")]
	public enum MissionRewardType
	{
		[Token(Token = "0x4001079")]
		gear,
		[Token(Token = "0x400107A")]
		resource,
		[Token(Token = "0x400107B")]
		recipe,
		[Token(Token = "0x400107C")]
		generic,
		[Token(Token = "0x400107D")]
		deco
	}
	[Token(Token = "0x2000279")]
	public class MissionRewardBGSelect : MonoBehaviour
	{
		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject gear;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject resource;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject recipe;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject generic;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject deco;

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Image mask;

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0xE4E4D4", Offset = "0xE4E4D4", VA = "0xE4E4D4")]
		public void SetBG(MissionRewardType type = MissionRewardType.generic)
		{
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0xE4E5F4", Offset = "0xE4E5F4", VA = "0xE4E5F4")]
		public MissionRewardBGSelect()
		{
		}
	}
	[Token(Token = "0x200027A")]
	public class MissionTarget : MonoBehaviour
	{
		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image ResourceIcon;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Localize ResourceName;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TMP_Text ResourceCount;

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0xE4EB1C", Offset = "0xE4EB1C", VA = "0xE4EB1C")]
		public MissionTarget()
		{
		}
	}
	[Token(Token = "0x200027B")]
	public class MoveArrow : MonoBehaviour
	{
		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Tween moveTween;

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0xE4F7C8", Offset = "0xE4F7C8", VA = "0xE4F7C8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0xE4F850", Offset = "0xE4F850", VA = "0xE4F850")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0xE4F930", Offset = "0xE4F930", VA = "0xE4F930")]
		public MoveArrow()
		{
		}
	}
	[Token(Token = "0x200027C")]
	public class MoveFishingPad : MonoBehaviour
	{
		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 shipPos;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 shipRot;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 summonedPos;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 summonedRot;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 dismissedPos;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 dismissedRot;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 summonedScale;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 dismissedScale;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Tween scaleTween;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool fishingPadIsDismissed;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		private bool fishingPadIsMoving;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static MoveFishingPad instance;

		[Token(Token = "0x4001094")]
		public const float fishingPadMinHeight = 0.3f;

		[Token(Token = "0x4001095")]
		public const float heightOffset = -0.1f;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
		private bool cutsceneInProgress;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool allowOpenMenu;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Button mapButton;

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0xE4F938", Offset = "0xE4F938", VA = "0xE4F938")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0xE4FB74", Offset = "0xE4FB74", VA = "0xE4FB74")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0xE4FCC8", Offset = "0xE4FCC8", VA = "0xE4FCC8")]
		private void CutsceneStarted()
		{
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0xE4FCD4", Offset = "0xE4FCD4", VA = "0xE4FCD4")]
		private void CutsceneFinished(bool isSpecialCutscene)
		{
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0xE4FCDC", Offset = "0xE4FCDC", VA = "0xE4FCDC")]
		private void CutsceneSkipped(MissionSO mission, bool isCheating)
		{
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0xE4FCE4", Offset = "0xE4FCE4", VA = "0xE4FCE4")]
		private void SceneLoadFinished()
		{
		}

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0xE4FF1C", Offset = "0xE4FF1C", VA = "0xE4FF1C")]
		private void SummonFishingPad()
		{
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0xE50440", Offset = "0xE50440", VA = "0xE50440")]
		private void CheckOpenFishPadToPage()
		{
		}

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0xE504BC", Offset = "0xE504BC", VA = "0xE504BC")]
		public static void DismissFishingPad()
		{
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0xE50568", Offset = "0xE50568", VA = "0xE50568")]
		private void OnMenu()
		{
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0xE5079C", Offset = "0xE5079C", VA = "0xE5079C")]
		public static void ActivateFishPad()
		{
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0xE50848", Offset = "0xE50848", VA = "0xE50848")]
		public MoveFishingPad()
		{
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0xE50914", Offset = "0xE50914", VA = "0xE50914")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACBD8C", Offset = "0xACBD8C")]
		private void <SummonFishingPad>b__23_0()
		{
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0xE50950", Offset = "0xE50950", VA = "0xE50950")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACBD9C", Offset = "0xACBD9C")]
		private void <SummonFishingPad>b__23_1()
		{
		}
	}
	[Token(Token = "0x200027D")]
	public class MovePlayer : MonoBehaviour
	{
		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 shipPos;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 shipRot;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 aquariumPos;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 aquariumRot;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 fishingPlatformPos;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 fishingPlatformRot;

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0xE50958", Offset = "0xE50958", VA = "0xE50958")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0xE509EC", Offset = "0xE509EC", VA = "0xE509EC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0xE50A80", Offset = "0xE50A80", VA = "0xE50A80")]
		private void LocationChanged(LocationSO locationSO, bool comingFromShip)
		{
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0xE51238", Offset = "0xE51238", VA = "0xE51238")]
		public MovePlayer()
		{
		}
	}
	[Token(Token = "0x200027E")]
	public enum Music
	{
		[Token(Token = "0x40010A0")]
		FishingAction,
		[Token(Token = "0x40010A1")]
		TugOfWar,
		[Token(Token = "0x40010A2")]
		Fishing,
		[Token(Token = "0x40010A3")]
		FishRecovery
	}
	[Token(Token = "0x200027F")]
	public class MusicAudio : MonoBehaviour
	{
		[Token(Token = "0x20004C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0F60", Offset = "0xAC0F60")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x4001E3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioSource source;

			[Token(Token = "0x6001E9D")]
			[Address(RVA = "0xE51BCC", Offset = "0xE51BCC", VA = "0xE51BCC")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x6001E9E")]
			[Address(RVA = "0xE51BE8", Offset = "0xE51BE8", VA = "0xE51BE8")]
			internal void <MusicFadeOut>b__0()
			{
			}
		}

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static MusicAudio instance;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioMixer mixer;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource musicA;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioSource musicB;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioSource musicMixA;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioSource musicMixB;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioSource musicStings;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC54A4", Offset = "0xAC54A4")]
		public AudioClip fishingBattleLevel1;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioClip fishingBattleLevel2;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip fishingBattleLevel3;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AudioClip W1ADay;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioClip W1BDay;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AudioClip W1CDay;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AudioClip W2ADay;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AudioClip W2BDay;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public AudioClip W2CDay;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AudioClip Ship;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public AudioClip success;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public AudioClip fishRecoveryCommon;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public AudioClip fishRecoveryUncommon;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public AudioClip fishRecoveryRare;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public AudioClip fishRecoveryEpic;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public AudioClip fishRecoveryLegendary;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Tween musicFadeTween;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float duckFadeInDur;

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0xE512C0", Offset = "0xE512C0", VA = "0xE512C0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0xE51318", Offset = "0xE51318", VA = "0xE51318")]
		public static void Play(Music music, float volume = 0.5f)
		{
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0xE51A18", Offset = "0xE51A18", VA = "0xE51A18")]
		public static void Play(Music music, FishTypeSO.Grade grade, float volume = 0.5f)
		{
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0xE518B0", Offset = "0xE518B0", VA = "0xE518B0")]
		public static void MusicFadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0xE51B48", Offset = "0xE51B48", VA = "0xE51B48")]
		private void DuckNonStingMusic(float duckDur, float fadeOutDur, float fadeInDur)
		{
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0xE51BD4", Offset = "0xE51BD4", VA = "0xE51BD4")]
		private void DuckFadeIn()
		{
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0xE51844", Offset = "0xE51844", VA = "0xE51844")]
		private void SetReverbSendLevel(float level)
		{
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0xE51BE0", Offset = "0xE51BE0", VA = "0xE51BE0")]
		public MusicAudio()
		{
		}
	}
	[Token(Token = "0x2000280")]
	public class OverrideFFRToggle : MonoBehaviour
	{
		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Toggle tog;

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0xE5254C", Offset = "0xE5254C", VA = "0xE5254C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0xE525F0", Offset = "0xE525F0", VA = "0xE525F0")]
		public void OnToggleChange()
		{
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0xE52690", Offset = "0xE52690", VA = "0xE52690")]
		public OverrideFFRToggle()
		{
		}
	}
	[Token(Token = "0x2000281")]
	public class ParticleSystemController : MonoBehaviour
	{
		[Token(Token = "0x20004C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0F70", Offset = "0xAC0F70")]
		private sealed class <PlayFXs>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ParticleSystemController <>4__this;

			[Token(Token = "0x4001E41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float duration;

			[Token(Token = "0x4001E42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private ParticleSystem[] <>7__wrap1;

			[Token(Token = "0x4001E43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <>7__wrap2;

			[Token(Token = "0x4001E44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private ParticleSystem <ps>5__4;

			[Token(Token = "0x17000309")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EA2")]
				[Address(RVA = "0xE52B1C", Offset = "0xE52B1C", VA = "0xE52B1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700030A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EA4")]
				[Address(RVA = "0xE52B84", Offset = "0xE52B84", VA = "0xE52B84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E9F")]
			[Address(RVA = "0xE52900", Offset = "0xE52900", VA = "0xE52900")]
			[DebuggerHidden]
			public <PlayFXs>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001EA0")]
			[Address(RVA = "0xE52970", Offset = "0xE52970", VA = "0xE52970", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EA1")]
			[Address(RVA = "0xE52974", Offset = "0xE52974", VA = "0xE52974", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EA3")]
			[Address(RVA = "0xE52B24", Offset = "0xE52B24", VA = "0xE52B24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color startColor;

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float opacity;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private bool controlChildrenColor;

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0xE52698", Offset = "0xE52698", VA = "0xE52698")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0xE526A0", Offset = "0xE526A0", VA = "0xE526A0")]
		public void SetOpacity(float alpha = 1f)
		{
		}

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0xE52844", Offset = "0xE52844", VA = "0xE52844")]
		public void Warmup()
		{
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0xE52874", Offset = "0xE52874", VA = "0xE52874")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACBDAC", Offset = "0xACBDAC")]
		private IEnumerator PlayFXs(float duration = 0.5f)
		{
			return null;
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0xE5292C", Offset = "0xE5292C", VA = "0xE5292C")]
		public ParticleSystemController()
		{
		}
	}
	[Token(Token = "0x2000282")]
	public enum Arrow
	{
		[Token(Token = "0x40010C2")]
		Left,
		[Token(Token = "0x40010C3")]
		Right,
		[Token(Token = "0x40010C4")]
		Up,
		[Token(Token = "0x40010C5")]
		SnapLeft,
		[Token(Token = "0x40010C6")]
		SnapRight,
		[Token(Token = "0x40010C7")]
		SnapUp,
		[Token(Token = "0x40010C8")]
		JumpLeft,
		[Token(Token = "0x40010C9")]
		JumpRight,
		[Token(Token = "0x40010CA")]
		None
	}
	[Token(Token = "0x2000283")]
	public class PatternController : MonoBehaviour
	{
		[Token(Token = "0x20004C5")]
		public delegate void OnSnapEvent(Arrow direction);

		[Token(Token = "0x20004C6")]
		public delegate void OnLeanStartEvent(Arrow direction);

		[Token(Token = "0x20004C7")]
		public delegate void OnLeanStopEvent();

		[Token(Token = "0x20004C8")]
		public delegate void OnLeanDirectionChangeEvent(Arrow dir);

		[Token(Token = "0x20004C9")]
		public delegate void OnPatternStepFailedEvent();

		[Token(Token = "0x20004CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0F80", Offset = "0xAC0F80")]
		private sealed class <HandleArrowStay>d__106 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PatternController <>4__this;

			[Token(Token = "0x1700030B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EBC")]
				[Address(RVA = "0xE57370", Offset = "0xE57370", VA = "0xE57370", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700030C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EBE")]
				[Address(RVA = "0xE573D8", Offset = "0xE573D8", VA = "0xE573D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EB9")]
			[Address(RVA = "0xE5523C", Offset = "0xE5523C", VA = "0xE5523C")]
			[DebuggerHidden]
			public <HandleArrowStay>d__106(int <>1__state)
			{
			}

			[Token(Token = "0x6001EBA")]
			[Address(RVA = "0xE571E8", Offset = "0xE571E8", VA = "0xE571E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EBB")]
			[Address(RVA = "0xE571EC", Offset = "0xE571EC", VA = "0xE571EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EBD")]
			[Address(RVA = "0xE57378", Offset = "0xE57378", VA = "0xE57378", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject arrowLeft;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject arrowRight;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject arrowUp;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject arrowSnapLeft;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject arrowSnapRight;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject arrowSnapUp;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Image arrowFillLeft;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Image arrowFillRight;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Image arrowFillUp;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject arrowSnapSuccessLeft;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject arrowSnapSuccessRight;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject arrowSnapSuccessUp;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject arrowLeanSuccessLeft;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject arrowLeanSuccessRight;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject arrowLeanSuccessUp;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Arrow arrowToSolve;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public SpawnPool VFX;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject arrowSolvedVfxPrefab;

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GameObject patternSolvedVfxPrefab;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GameObject arrowSolvedVfxPosLeft;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public GameObject arrowSolvedVfxPosRight;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public GameObject arrowSolvedVfxPosUp;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public GameObject patternSolvedVfxPos;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Transform snapLeftParticles;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Transform snapRightParticles;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Transform snapLeftParticles_special;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Transform snapRightParticles_special;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Transform snapUpParticles;

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Transform jumpOutParticles;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Transform jumpLandParticles;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public Transform leanRipples;

		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool doLeanRipples;

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public float vfxDisableTime;

		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Image arrowFill;

		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private float _arrowFillAmount;

		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public SetScaleBasedOnDistance uiScaler;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float arrowTotalFillDuration;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private float arrowTargetFillDuration;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float arrowFilledTime;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private bool finalLeanInSequence;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private float thisFishArrowSolveTime;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private List<PatternSO> patterns;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public PatternSO pattern;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private int numLeans;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private int numLeansSolved;

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private int numArrows;

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private int numArrowsSolved;

		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private int patternIndex;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private int lastSnapIndex;

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private Tween arrowTween;

		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public bool allowArrowSolve;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x179")]
		public bool isSolvingArrow;

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17A")]
		private bool leanPoseIsCorrectWorldCollider;

		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17B")]
		private bool leanPoseIsCorrectRodCollider;

		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		public bool useVisibleColliders;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17D")]
		private bool showPatternBCID;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Transform jumpSplash;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private Arrow lastArrow;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private float leanDirChangeLikelihood;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private float leanDirChangeInterval;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		public bool doLeanDirChange;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x195")]
		public bool jumpSuccess;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public EnergyValue[] energyValues;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private int currentEnergyVal;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public Transform energyValuePosUp;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public Transform energyValuePosLeft;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public Transform energyValuePosRight;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public Transform energyValuePosSnapUp;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public Transform energyValuePosSnapLeft;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public Transform energyValuePosSnapRight;

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public float energyFinalVal;

		[Token(Token = "0x17000154")]
		public float ArrowFillAmount
		{
			[Token(Token = "0x6000E91")]
			[Address(RVA = "0xE52B94", Offset = "0xE52B94", VA = "0xE52B94")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E92")]
			[Address(RVA = "0xE52B9C", Offset = "0xE52B9C", VA = "0xE52B9C")]
			set
			{
			}
		}

		[Token(Token = "0x1400001E")]
		public static event OnSnapEvent OnSnap
		{
			[Token(Token = "0x6000E93")]
			[Address(RVA = "0xE52BC0", Offset = "0xE52BC0", VA = "0xE52BC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACBE10", Offset = "0xACBE10")]
			add
			{
			}
			[Token(Token = "0x6000E94")]
			[Address(RVA = "0xE52C74", Offset = "0xE52C74", VA = "0xE52C74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACBE20", Offset = "0xACBE20")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001F")]
		public static event OnLeanStartEvent OnLeanStart
		{
			[Token(Token = "0x6000E95")]
			[Address(RVA = "0xE52D28", Offset = "0xE52D28", VA = "0xE52D28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACBE30", Offset = "0xACBE30")]
			add
			{
			}
			[Token(Token = "0x6000E96")]
			[Address(RVA = "0xE52DE0", Offset = "0xE52DE0", VA = "0xE52DE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACBE40", Offset = "0xACBE40")]
			remove
			{
			}
		}

		[Token(Token = "0x14000020")]
		public static event OnLeanStopEvent OnLeanStop
		{
			[Token(Token = "0x6000E97")]
			[Address(RVA = "0xE52E98", Offset = "0xE52E98", VA = "0xE52E98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACBE50", Offset = "0xACBE50")]
			add
			{
			}
			[Token(Token = "0x6000E98")]
			[Address(RVA = "0xE52F50", Offset = "0xE52F50", VA = "0xE52F50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACBE60", Offset = "0xACBE60")]
			remove
			{
			}
		}

		[Token(Token = "0x14000021")]
		public static event OnLeanDirectionChangeEvent OnLeanDirectionChange
		{
			[Token(Token = "0x6000E99")]
			[Address(RVA = "0xE53008", Offset = "0xE53008", VA = "0xE53008")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACBE70", Offset = "0xACBE70")]
			add
			{
			}
			[Token(Token = "0x6000E9A")]
			[Address(RVA = "0xE530C0", Offset = "0xE530C0", VA = "0xE530C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACBE80", Offset = "0xACBE80")]
			remove
			{
			}
		}

		[Token(Token = "0x14000022")]
		public static event OnPatternStepFailedEvent OnPatternStepFailed
		{
			[Token(Token = "0x6000E9B")]
			[Address(RVA = "0xE53178", Offset = "0xE53178", VA = "0xE53178")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACBE90", Offset = "0xACBE90")]
			add
			{
			}
			[Token(Token = "0x6000E9C")]
			[Address(RVA = "0xE53230", Offset = "0xE53230", VA = "0xE53230")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACBEA0", Offset = "0xACBEA0")]
			remove
			{
			}
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0xE532E8", Offset = "0xE532E8", VA = "0xE532E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0xE53374", Offset = "0xE53374", VA = "0xE53374")]
		public void setVisibleColliders(bool val)
		{
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0xE53400", Offset = "0xE53400", VA = "0xE53400")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0xE5360C", Offset = "0xE5360C", VA = "0xE5360C")]
		public void SetArrow(Arrow dir, float arrowVisibleTime)
		{
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0xE54468", Offset = "0xE54468", VA = "0xE54468")]
		private void SetArrowToFill(Arrow arrow)
		{
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0xE545DC", Offset = "0xE545DC", VA = "0xE545DC")]
		private void LeanInit(float arrowVisibleTime)
		{
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0xE54C20", Offset = "0xE54C20", VA = "0xE54C20")]
		private void ChangeLeanDir()
		{
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0xE54AB4", Offset = "0xE54AB4", VA = "0xE54AB4")]
		private void CalculateArrowFillDuration()
		{
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0xE544A4", Offset = "0xE544A4", VA = "0xE544A4")]
		private void ArrowAppearTween(RectTransform rt)
		{
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0xE55068", Offset = "0xE55068", VA = "0xE55068")]
		private void OnArrowFullyVisible()
		{
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0xE550A4", Offset = "0xE550A4", VA = "0xE550A4")]
		private void EnableSnapColliders()
		{
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0xE54DF4", Offset = "0xE54DF4", VA = "0xE54DF4")]
		private void EnableLeanColliders()
		{
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0xE54BA4", Offset = "0xE54BA4", VA = "0xE54BA4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACBEB0", Offset = "0xACBEB0")]
		private IEnumerator HandleArrowStay()
		{
			return null;
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0xE55268", Offset = "0xE55268", VA = "0xE55268")]
		private void HandleArrowFill()
		{
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0xE553BC", Offset = "0xE553BC", VA = "0xE553BC")]
		private void EnableLeanSuccessArrow()
		{
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0xE554F8", Offset = "0xE554F8", VA = "0xE554F8")]
		private void ArrowSolved()
		{
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0xE55870", Offset = "0xE55870", VA = "0xE55870")]
		private void HandleEnergyValue(Arrow arrow)
		{
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0xE53454", Offset = "0xE53454", VA = "0xE53454")]
		private void DisablePatternColliders()
		{
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0xE5571C", Offset = "0xE5571C", VA = "0xE5571C")]
		private void ReduceStamina(Arrow arrow)
		{
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0xE55D8C", Offset = "0xE55D8C", VA = "0xE55D8C")]
		public void JumpSuccessEnd()
		{
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0xE55BEC", Offset = "0xE55BEC", VA = "0xE55BEC")]
		private void PatternCompleted(bool lastArrowSuccess = true)
		{
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0xE55E58", Offset = "0xE55E58", VA = "0xE55E58")]
		private bool CheckCanRest()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0xE55EC8", Offset = "0xE55EC8", VA = "0xE55EC8")]
		private void PatternCompletedStaminaReductionBonus(bool wasPerfect)
		{
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0xE53540", Offset = "0xE53540", VA = "0xE53540")]
		public void DisableArrow()
		{
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0xE54D60", Offset = "0xE54D60", VA = "0xE54D60")]
		private void HideAllArrows()
		{
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0xE54980", Offset = "0xE54980", VA = "0xE54980")]
		private void ShowArrow(Arrow arrow)
		{
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0xE55B00", Offset = "0xE55B00", VA = "0xE55B00")]
		private void ArrowSolvedFX()
		{
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0xE56340", Offset = "0xE56340", VA = "0xE56340")]
		internal Arrow GetFleeDirection(FishTypeSO fish, Arrow overrideArrow = Arrow.None)
		{
			return default(Arrow);
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0xE566C0", Offset = "0xE566C0", VA = "0xE566C0")]
		private Arrow CheckSwapArrowDir(Arrow arrow)
		{
			return default(Arrow);
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0xE567BC", Offset = "0xE567BC", VA = "0xE567BC")]
		private float bobberXPos()
		{
			return default(float);
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0xE564F0", Offset = "0xE564F0", VA = "0xE564F0")]
		private void PatternInit(FishTypeSO fish)
		{
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0xE56838", Offset = "0xE56838", VA = "0xE56838")]
		private void SetLeanDirChangeValues(FishTypeSO fish)
		{
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0xE56974", Offset = "0xE56974", VA = "0xE56974")]
		private int CountSnapArrows()
		{
			return default(int);
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0xE569FC", Offset = "0xE569FC", VA = "0xE569FC")]
		public void ArrowFailed(Arrow arrow)
		{
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0xE5563C", Offset = "0xE5563C", VA = "0xE5563C")]
		private void LastLean()
		{
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0xE56CFC", Offset = "0xE56CFC", VA = "0xE56CFC")]
		internal void HandleSnapCollider(Arrow direction)
		{
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0xE57008", Offset = "0xE57008", VA = "0xE57008")]
		internal void HandleLeanCollider(bool isCorrectLean, bool isWorldCollider)
		{
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0xE56880", Offset = "0xE56880", VA = "0xE56880")]
		public void GetPatternsFromFish(FishTypeSO fish)
		{
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0xE57020", Offset = "0xE57020", VA = "0xE57020")]
		public void SetShowPatternBCID(bool val)
		{
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0xE5702C", Offset = "0xE5702C", VA = "0xE5702C")]
		private void LeanRipples()
		{
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0xE55CAC", Offset = "0xE55CAC", VA = "0xE55CAC")]
		private Vector3 GetEnergyValuePosition(Arrow arrow)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0xE5718C", Offset = "0xE5718C", VA = "0xE5718C")]
		public PatternController()
		{
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0xE571AC", Offset = "0xE571AC", VA = "0xE571AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACBF14", Offset = "0xACBF14")]
		private void <ArrowAppearTween>b__102_0()
		{
		}
	}
	[Token(Token = "0x2000284")]
	public class PatternDebug : MonoBehaviour
	{
		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PatternSO testPattern;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Arrow> arrows;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI fishTypeDisplayText;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI patternDisplayText;

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0xE5767C", Offset = "0xE5767C", VA = "0xE5767C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0xE57880", Offset = "0xE57880", VA = "0xE57880")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0xE57914", Offset = "0xE57914", VA = "0xE57914")]
		private void FishChanged(FishTypeSO fish)
		{
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0xE57944", Offset = "0xE57944", VA = "0xE57944")]
		public void AddStep(Arrow arrow)
		{
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0xE57804", Offset = "0xE57804", VA = "0xE57804")]
		public void ClearPattern()
		{
		}

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0xE57B4C", Offset = "0xE57B4C", VA = "0xE57B4C")]
		public void UpdatePattern()
		{
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0xE579F4", Offset = "0xE579F4", VA = "0xE579F4")]
		private void UpdateDisplay()
		{
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0xE57D5C", Offset = "0xE57D5C", VA = "0xE57D5C")]
		public PatternDebug()
		{
		}
	}
	[Token(Token = "0x2000285")]
	public class PatternStepButton : MonoBehaviour
	{
		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Arrow arrow;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PatternDebug patternDebug;

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0xE57D6C", Offset = "0xE57D6C", VA = "0xE57D6C")]
		public void OnClick()
		{
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0xE57D8C", Offset = "0xE57D8C", VA = "0xE57D8C")]
		public PatternStepButton()
		{
		}
	}
	[Token(Token = "0x2000286")]
	public class PauseGame : MonoBehaviour
	{
		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject leftHand;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject rightHand;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool isPaused;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform rodParent;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 rodPosOffset;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion rodRotOffset;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static PauseGame instance;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Handside rodSide;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool isInSceneLoaderScene;

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0xE57D9C", Offset = "0xE57D9C", VA = "0xE57D9C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0xE57E0C", Offset = "0xE57E0C", VA = "0xE57E0C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0xE57E10", Offset = "0xE57E10", VA = "0xE57E10")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0xE57E14", Offset = "0xE57E14", VA = "0xE57E14")]
		private void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0xE582BC", Offset = "0xE582BC", VA = "0xE582BC")]
		private void OnHMDMounted()
		{
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0xE5833C", Offset = "0xE5833C", VA = "0xE5833C")]
		private void OnHMDUnmounted()
		{
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0xE57E20", Offset = "0xE57E20", VA = "0xE57E20")]
		private void Pause()
		{
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0xE5805C", Offset = "0xE5805C", VA = "0xE5805C")]
		private void Resume()
		{
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0xE583BC", Offset = "0xE583BC", VA = "0xE583BC")]
		public PauseGame()
		{
		}
	}
	[Token(Token = "0x2000287")]
	public class PeasAnimationController : CharacterAnimationController
	{
		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0xE58424", Offset = "0xE58424", VA = "0xE58424")]
		public void Notice()
		{
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0xE58480", Offset = "0xE58480", VA = "0xE58480")]
		public void Surprise()
		{
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0xE584DC", Offset = "0xE584DC", VA = "0xE584DC")]
		public void StartSleep()
		{
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0xE5853C", Offset = "0xE5853C", VA = "0xE5853C")]
		public void StartIdle()
		{
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0xE58598", Offset = "0xE58598", VA = "0xE58598")]
		public void StopSleep()
		{
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0xE585F8", Offset = "0xE585F8", VA = "0xE585F8")]
		public void StartBeam()
		{
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0xE58674", Offset = "0xE58674", VA = "0xE58674")]
		public void StopBeam()
		{
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0xE586F0", Offset = "0xE586F0", VA = "0xE586F0")]
		public PeasAnimationController()
		{
		}
	}
	[Token(Token = "0x2000288")]
	public enum Peas
	{
		[Token(Token = "0x4001127")]
		Vocalize,
		[Token(Token = "0x4001128")]
		Bark,
		[Token(Token = "0x4001129")]
		Jets,
		[Token(Token = "0x400112A")]
		BeamStart,
		[Token(Token = "0x400112B")]
		BeamEnd
	}
	[Token(Token = "0x2000289")]
	public class PeasAudio : MonoBehaviour
	{
		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PeasAudio instance;

		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip[] PeasVocalize;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip[] PeasJets;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip[] PeasBark;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip BeamStart;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip BeamLoop;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioClip BeamEnd;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioSource PeasVoxAS;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioSource PeasJetsAS;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioSource Beam;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AudioSource BeamLp;

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0xE586F8", Offset = "0xE586F8", VA = "0xE586F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0xE58750", Offset = "0xE58750", VA = "0xE58750")]
		public static void Play(Peas sfx)
		{
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0xE589A8", Offset = "0xE589A8", VA = "0xE589A8")]
		public PeasAudio()
		{
		}
	}
	[Token(Token = "0x200028A")]
	public enum PeasState
	{
		[Token(Token = "0x4001138")]
		resting,
		[Token(Token = "0x4001139")]
		followingFishing,
		[Token(Token = "0x400113A")]
		recoveringFish
	}
	[Token(Token = "0x200028B")]
	public class PeasFishingController : MonoBehaviour
	{
		[Token(Token = "0x20004CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0F90", Offset = "0xAC0F90")]
		private sealed class <WaitToStartResting>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PeasFishingController <>4__this;

			[Token(Token = "0x1700030D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EC2")]
				[Address(RVA = "0x1FCA07C", Offset = "0x1FCA07C", VA = "0x1FCA07C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700030E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EC4")]
				[Address(RVA = "0x1FCA0E4", Offset = "0x1FCA0E4", VA = "0x1FCA0E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EBF")]
			[Address(RVA = "0x1FC9F54", Offset = "0x1FC9F54", VA = "0x1FC9F54")]
			[DebuggerHidden]
			public <WaitToStartResting>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001EC0")]
			[Address(RVA = "0x1FC9F80", Offset = "0x1FC9F80", VA = "0x1FC9F80", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EC1")]
			[Address(RVA = "0x1FC9F84", Offset = "0x1FC9F84", VA = "0x1FC9F84", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EC3")]
			[Address(RVA = "0x1FCA084", Offset = "0x1FCA084", VA = "0x1FCA084", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0FA0", Offset = "0xAC0FA0")]
		private sealed class <UpdateBeamVfx>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PeasFishingController <>4__this;

			[Token(Token = "0x1700030F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EC8")]
				[Address(RVA = "0x1FC9EE4", Offset = "0x1FC9EE4", VA = "0x1FC9EE4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000310")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001ECA")]
				[Address(RVA = "0x1FC9F4C", Offset = "0x1FC9F4C", VA = "0x1FC9F4C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EC5")]
			[Address(RVA = "0x1FC9918", Offset = "0x1FC9918", VA = "0x1FC9918")]
			[DebuggerHidden]
			public <UpdateBeamVfx>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001EC6")]
			[Address(RVA = "0x1FC9944", Offset = "0x1FC9944", VA = "0x1FC9944", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EC7")]
			[Address(RVA = "0x1FC9948", Offset = "0x1FC9948", VA = "0x1FC9948", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EC9")]
			[Address(RVA = "0x1FC9EEC", Offset = "0x1FC9EEC", VA = "0x1FC9EEC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PeasState state;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PeasAnimationController anim;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform recoveredFish;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 waitPos;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PeasTractorBeam beam;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform beamEnd;

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0xE589B0", Offset = "0xE589B0", VA = "0xE589B0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0xE58A6C", Offset = "0xE58A6C", VA = "0xE58A6C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0xE58B00", Offset = "0xE58B00", VA = "0xE58B00")]
		private void LocationChanged(LocationSO locationSO, bool comingFromShip)
		{
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0xE58BB0", Offset = "0xE58BB0", VA = "0xE58BB0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACBF24", Offset = "0xACBF24")]
		private IEnumerator WaitToStartResting()
		{
			return null;
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0xE58C2C", Offset = "0xE58C2C", VA = "0xE58C2C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0xE58E7C", Offset = "0xE58E7C", VA = "0xE58E7C")]
		public void StartResting()
		{
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0xE58F5C", Offset = "0xE58F5C", VA = "0xE58F5C")]
		public void StartFollowingFishing()
		{
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0xE58FD8", Offset = "0xE58FD8", VA = "0xE58FD8")]
		private void StartRecoveringFish()
		{
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0xE58FE4", Offset = "0xE58FE4", VA = "0xE58FE4")]
		public void MoveToCatchPos(Vector3 fishInUiPos, Transform recvrdFish)
		{
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0xE590E4", Offset = "0xE590E4", VA = "0xE590E4")]
		public void ShootBeam(Transform target)
		{
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0xE5911C", Offset = "0xE5911C", VA = "0xE5911C")]
		private void StartBeamAnim()
		{
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0xE59164", Offset = "0xE59164", VA = "0xE59164")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACBF88", Offset = "0xACBF88")]
		private IEnumerator UpdateBeamVfx()
		{
			return null;
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0xE591E0", Offset = "0xE591E0", VA = "0xE591E0")]
		public void MoveToWaitPos()
		{
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0xE59314", Offset = "0xE59314", VA = "0xE59314")]
		public void Wait()
		{
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0xE593D8", Offset = "0xE593D8", VA = "0xE593D8")]
		private void Bark()
		{
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0xE593E0", Offset = "0xE593E0", VA = "0xE593E0")]
		private void Vocalize()
		{
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0xE593E8", Offset = "0xE593E8", VA = "0xE593E8")]
		private void Jets()
		{
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0xE593F0", Offset = "0xE593F0", VA = "0xE593F0")]
		public PeasFishingController()
		{
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0xE593F8", Offset = "0xE593F8", VA = "0xE593F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACBFEC", Offset = "0xACBFEC")]
		private void <MoveToCatchPos>b__14_0()
		{
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0xE593FC", Offset = "0xE593FC", VA = "0xE593FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACBFFC", Offset = "0xACBFFC")]
		private void <MoveToWaitPos>b__18_0()
		{
		}
	}
	[Token(Token = "0x200028C")]
	public class PeasTractorBeam : MonoBehaviour
	{
		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject beamStart;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject beamEnd;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject beam;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LineRenderer line;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC555C", Offset = "0xAC555C")]
		public float textureScrollSpeed;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float textureLengthScale;

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x1FCA0EC", Offset = "0x1FCA0EC", VA = "0x1FCA0EC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x1FCA258", Offset = "0x1FCA258", VA = "0x1FCA258")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x1FC9C34", Offset = "0x1FC9C34", VA = "0x1FC9C34")]
		public void UpdateBeam()
		{
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x1FC9ABC", Offset = "0x1FC9ABC", VA = "0x1FC9ABC")]
		public void SpawnBeam()
		{
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x1FCA0F0", Offset = "0x1FCA0F0", VA = "0x1FCA0F0")]
		public void RemoveBeam()
		{
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x1FCA25C", Offset = "0x1FCA25C", VA = "0x1FCA25C")]
		public PeasTractorBeam()
		{
		}
	}
	[Token(Token = "0x200028D")]
	public class PerlinMover : MonoBehaviour
	{
		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC5594", Offset = "0xAC5594")]
		public float _scale;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float _seed;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC55AC", Offset = "0xAC55AC")]
		public float _speed;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float increment;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 posScale;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 rotScale;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 m_posScaleBuffer;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 m_rotScaleBuffer;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float easeScalerVal;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Tween easeTween;

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x1FCA26C", Offset = "0x1FCA26C", VA = "0x1FCA26C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x1FCA328", Offset = "0x1FCA328", VA = "0x1FCA328")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x1FCA430", Offset = "0x1FCA430", VA = "0x1FCA430")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x1FCA534", Offset = "0x1FCA534", VA = "0x1FCA534")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x1FCA744", Offset = "0x1FCA744", VA = "0x1FCA744")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x1FCA7F0", Offset = "0x1FCA7F0", VA = "0x1FCA7F0")]
		private void EventHub_OnFishTaken(FpFish fish)
		{
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x1FCA818", Offset = "0x1FCA818", VA = "0x1FCA818")]
		private void EventHub_OnFishCaught(FpFish fish, bool isCheating)
		{
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x1FCA81C", Offset = "0x1FCA81C", VA = "0x1FCA81C")]
		private void StopMoving()
		{
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0x1FCA804", Offset = "0x1FCA804", VA = "0x1FCA804")]
		private void ResetMoving()
		{
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x1FCA89C", Offset = "0x1FCA89C", VA = "0x1FCA89C")]
		public void EaseMover(float endVal)
		{
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0x1FCA9D0", Offset = "0x1FCA9D0", VA = "0x1FCA9D0")]
		private void StartedPatternPlay(Vector3 fleeDirection, bool isFish, bool directionChange)
		{
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x1FCA9D8", Offset = "0x1FCA9D8", VA = "0x1FCA9D8")]
		private void StartedResisting(Vector3 fleeDirection, bool isFish, bool directionChange)
		{
		}

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0x1FCA9E0", Offset = "0x1FCA9E0", VA = "0x1FCA9E0")]
		private void StartedResting(bool isFish)
		{
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0x1FCA9E8", Offset = "0x1FCA9E8", VA = "0x1FCA9E8")]
		public PerlinMover()
		{
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0x1FCA9F8", Offset = "0x1FCA9F8", VA = "0x1FCA9F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC00C", Offset = "0xACC00C")]
		private float <EaseMover>b__19_0()
		{
			return default(float);
		}

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0x1FCAA00", Offset = "0x1FCAA00", VA = "0x1FCAA00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC01C", Offset = "0xACC01C")]
		private void <EaseMover>b__19_1(float x)
		{
		}
	}
	[Token(Token = "0x200028E")]
	public enum BobberMoverSettings
	{
		[Token(Token = "0x4001152")]
		normal,
		[Token(Token = "0x4001153")]
		reelingFish,
		[Token(Token = "0x4001154")]
		inPatternLean
	}
	[Token(Token = "0x200028F")]
	public class PerlinMoverSettings : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004CD")]
		public struct settings
		{
			[Token(Token = "0x4001E4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float scale;

			[Token(Token = "0x4001E4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float seed;

			[Token(Token = "0x4001E50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float speed;

			[Token(Token = "0x4001E51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 posScale;

			[Token(Token = "0x4001E52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 rotScale;
		}

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PerlinMover mover;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC55C8", Offset = "0xAC55C8")]
		public float maxScale;

		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float minScale;

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public settings normalSettings;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public settings reelInFishSettings;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public settings inPatternLeanSettings;

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private BobberMoverSettings currentSettings;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public AnimationCurve curve;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Tween scaleTween;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float scaleVal;

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x1FCAA08", Offset = "0x1FCAA08", VA = "0x1FCAA08")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x1FCABDC", Offset = "0x1FCABDC", VA = "0x1FCABDC")]
		public void ApplySettings(BobberMoverSettings type)
		{
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x1FCAC5C", Offset = "0x1FCAC5C", VA = "0x1FCAC5C")]
		private void Apply(settings sets)
		{
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0x1FCAE20", Offset = "0x1FCAE20", VA = "0x1FCAE20")]
		public PerlinMoverSettings()
		{
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0x1FCAE28", Offset = "0x1FCAE28", VA = "0x1FCAE28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC02C", Offset = "0xACC02C")]
		private float <Apply>b__13_0()
		{
			return default(float);
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0x1FCAE30", Offset = "0x1FCAE30", VA = "0x1FCAE30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC03C", Offset = "0xACC03C")]
		private void <Apply>b__13_1(float x)
		{
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0x1FCAE38", Offset = "0x1FCAE38", VA = "0x1FCAE38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC04C", Offset = "0xACC04C")]
		private void <Apply>b__13_2()
		{
		}
	}
	[Token(Token = "0x2000290")]
	public class PlayRandomClip : MonoBehaviour
	{
		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC5600", Offset = "0xAC5600")]
		public AudioClip[] clips;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC5638", Offset = "0xAC5638")]
		public float baseTimeInterval;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC5670", Offset = "0xAC5670")]
		public float randomTimeDeviation;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC56A8", Offset = "0xAC56A8")]
		public float randomPosInRadius;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AudioSource audio;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 originalPos;

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0x1FCAF34", Offset = "0x1FCAF34", VA = "0x1FCAF34")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0x1FCAFC4", Offset = "0x1FCAFC4", VA = "0x1FCAFC4")]
		private void ScheduleNextPlay()
		{
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0x1FCB02C", Offset = "0x1FCB02C", VA = "0x1FCB02C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0x1FCB034", Offset = "0x1FCB034", VA = "0x1FCB034")]
		private void PlayClip()
		{
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0x1FCB14C", Offset = "0x1FCB14C", VA = "0x1FCB14C")]
		public PlayRandomClip()
		{
		}
	}
	[Token(Token = "0x2000291")]
	public class PlayTimelineFromMarker : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0FB0", Offset = "0xAC0FB0")]
		private sealed class <>c
		{
			[Token(Token = "0x4001E53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001E54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<IMarker, double> <>9__3_0;

			[Token(Token = "0x6001ECC")]
			[Address(RVA = "0x1FCB4A8", Offset = "0x1FCB4A8", VA = "0x1FCB4A8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001ECD")]
			[Address(RVA = "0x1FCB4B0", Offset = "0x1FCB4B0", VA = "0x1FCB4B0")]
			internal double <OnEnable>b__3_0(IMarker marker)
			{
				return default(double);
			}
		}

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PlayTimelineFromMarker instance;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IMarker[] markers;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PlayableDirector playableDirector;

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0x1FCB154", Offset = "0x1FCB154", VA = "0x1FCB154")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0x1FCB318", Offset = "0x1FCB318", VA = "0x1FCB318")]
		public static void Play(int markerIndex)
		{
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0x1FCB438", Offset = "0x1FCB438", VA = "0x1FCB438")]
		public PlayTimelineFromMarker()
		{
		}
	}
	[Token(Token = "0x2000292")]
	public class PlayUiAudio : MonoBehaviour
	{
		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool playOnEnable;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SfxUI sfx;

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0x1FCB55C", Offset = "0x1FCB55C", VA = "0x1FCB55C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0x1FCB578", Offset = "0x1FCB578", VA = "0x1FCB578")]
		public PlayUiAudio()
		{
		}
	}
	[Token(Token = "0x2000293")]
	public class DisableNonXrCameras : MonoBehaviour
	{
		[Token(Token = "0x6000F22")]
		[Address(RVA = "0xD00FA8", Offset = "0xD00FA8", VA = "0xD00FA8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0xD00FAC", Offset = "0xD00FAC", VA = "0xD00FAC")]
		public void Init()
		{
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0xD010EC", Offset = "0xD010EC", VA = "0xD010EC")]
		public DisableNonXrCameras()
		{
		}
	}
	[Token(Token = "0x2000294")]
	public class DisableOtherAudioListeners : MonoBehaviour
	{
		[Token(Token = "0x6000F25")]
		[Address(RVA = "0xD010F4", Offset = "0xD010F4", VA = "0xD010F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0xD010F8", Offset = "0xD010F8", VA = "0xD010F8")]
		public void Init()
		{
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0xD0124C", Offset = "0xD0124C", VA = "0xD0124C")]
		public DisableOtherAudioListeners()
		{
		}
	}
	[Token(Token = "0x2000295")]
	public class Door : MonoBehaviour
	{
		[Token(Token = "0x20004CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0FC0", Offset = "0xAC0FC0")]
		private sealed class <CloseDoor>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Door <>4__this;

			[Token(Token = "0x17000311")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001ED1")]
				[Address(RVA = "0xD020BC", Offset = "0xD020BC", VA = "0xD020BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000312")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001ED3")]
				[Address(RVA = "0xD02124", Offset = "0xD02124", VA = "0xD02124", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001ECE")]
			[Address(RVA = "0xD01F30", Offset = "0xD01F30", VA = "0xD01F30")]
			[DebuggerHidden]
			public <CloseDoor>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001ECF")]
			[Address(RVA = "0xD01F64", Offset = "0xD01F64", VA = "0xD01F64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001ED0")]
			[Address(RVA = "0xD01F68", Offset = "0xD01F68", VA = "0xD01F68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001ED2")]
			[Address(RVA = "0xD020C4", Offset = "0xD020C4", VA = "0xD020C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Coroutine m_coroutine;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_waitingHolder;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject highlightObject;

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0xD01CF0", Offset = "0xD01CF0", VA = "0xD01CF0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0xD01D88", Offset = "0xD01D88", VA = "0xD01D88")]
		public void OnHoverEnter()
		{
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0xD01E6C", Offset = "0xD01E6C", VA = "0xD01E6C")]
		public void OnHoverExit()
		{
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0xD01EB4", Offset = "0xD01EB4", VA = "0xD01EB4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACC05C", Offset = "0xACC05C")]
		private IEnumerator CloseDoor()
		{
			return null;
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0xD01F5C", Offset = "0xD01F5C", VA = "0xD01F5C")]
		public Door()
		{
		}
	}
	[Token(Token = "0x2000296")]
	public class Fader : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0FD0", Offset = "0xAC0FD0")]
		private sealed class <>c
		{
			[Token(Token = "0x4001E58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001E59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static TweenCallback <>9__10_0;

			[Token(Token = "0x4001E5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static TweenCallback <>9__10_1;

			[Token(Token = "0x6001ED5")]
			[Address(RVA = "0xE6AAE8", Offset = "0xE6AAE8", VA = "0xE6AAE8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001ED6")]
			[Address(RVA = "0xE6AAF0", Offset = "0xE6AAF0", VA = "0xE6AAF0")]
			internal void <DoFade>b__10_0()
			{
			}

			[Token(Token = "0x6001ED7")]
			[Address(RVA = "0xE6AB4C", Offset = "0xE6AB4C", VA = "0xE6AB4C")]
			internal void <DoFade>b__10_1()
			{
			}
		}

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color colorFadeOut;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color colorFadeIn;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Fader instance;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material fadeMat;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Tween fadeTween;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static UnityEvent OnFadeInComplete;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static UnityEvent OnFadeOutComplete;

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0xE6A664", Offset = "0xE6A664", VA = "0xE6A664")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0xE6A77C", Offset = "0xE6A77C", VA = "0xE6A77C")]
		public static void FadeIn(float time)
		{
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0xE6AA0C", Offset = "0xE6AA0C", VA = "0xE6AA0C")]
		public static void FadeOut(float time)
		{
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0xE6A7E8", Offset = "0xE6A7E8", VA = "0xE6A7E8")]
		private void DoFade(float time, bool isFadeOut)
		{
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0xE6AA78", Offset = "0xE6AA78", VA = "0xE6AA78")]
		public Fader()
		{
		}
	}
	[Token(Token = "0x2000297")]
	public class InitializeCanvasses : MonoBehaviour
	{
		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Canvas[] canvasses;

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0xE034CC", Offset = "0xE034CC", VA = "0xE034CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0xE034D0", Offset = "0xE034D0", VA = "0xE034D0")]
		public void Init()
		{
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0xE035BC", Offset = "0xE035BC", VA = "0xE035BC")]
		public InitializeCanvasses()
		{
		}
	}
	[Token(Token = "0x2000298")]
	public enum PlayerSetting
	{
		[Token(Token = "0x4001177")]
		oneHandedReeling,
		[Token(Token = "0x4001178")]
		globalTeleport,
		[Token(Token = "0x4001179")]
		showFishingUI,
		[Token(Token = "0x400117A")]
		playerHeight,
		[Token(Token = "0x400117B")]
		showLureBeam,
		[Token(Token = "0x400117C")]
		showLureRing,
		[Token(Token = "0x400117D")]
		musicVolume,
		[Token(Token = "0x400117E")]
		showFishFinder,
		[Token(Token = "0x400117F")]
		languageSetting
	}
	[Token(Token = "0x2000299")]
	public static class PlayerSettings
	{
		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool oneHandedReeling;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool showFishingUI;

		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static float playerHeight;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static float musicVolume;

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static bool showLureBeam;

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		private static bool showLureRing;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
		private static bool showFishFinder;

		[Token(Token = "0x17000155")]
		public static bool OneHandedReeling
		{
			[Token(Token = "0x6000F35")]
			[Address(RVA = "0x1FD49E0", Offset = "0x1FD49E0", VA = "0x1FD49E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F36")]
			[Address(RVA = "0x1FD4A48", Offset = "0x1FD4A48", VA = "0x1FD4A48")]
			set
			{
			}
		}

		[Token(Token = "0x17000156")]
		public static bool ShowFishingUI
		{
			[Token(Token = "0x6000F37")]
			[Address(RVA = "0x1FD4AE8", Offset = "0x1FD4AE8", VA = "0x1FD4AE8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F38")]
			[Address(RVA = "0x1FD4B50", Offset = "0x1FD4B50", VA = "0x1FD4B50")]
			set
			{
			}
		}

		[Token(Token = "0x17000157")]
		public static float PlayerHeight
		{
			[Token(Token = "0x6000F39")]
			[Address(RVA = "0x1FD4BC8", Offset = "0x1FD4BC8", VA = "0x1FD4BC8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F3A")]
			[Address(RVA = "0x1FD4C30", Offset = "0x1FD4C30", VA = "0x1FD4C30")]
			set
			{
			}
		}

		[Token(Token = "0x17000158")]
		public static float MusicVolume
		{
			[Token(Token = "0x6000F3B")]
			[Address(RVA = "0x1FD4CAC", Offset = "0x1FD4CAC", VA = "0x1FD4CAC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F3C")]
			[Address(RVA = "0x1FD4D14", Offset = "0x1FD4D14", VA = "0x1FD4D14")]
			set
			{
			}
		}

		[Token(Token = "0x17000159")]
		public static bool ShowLureBeam
		{
			[Token(Token = "0x6000F3D")]
			[Address(RVA = "0x1FD4D90", Offset = "0x1FD4D90", VA = "0x1FD4D90")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F3E")]
			[Address(RVA = "0x1FD4DF8", Offset = "0x1FD4DF8", VA = "0x1FD4DF8")]
			set
			{
			}
		}

		[Token(Token = "0x1700015A")]
		public static bool ShowLureRing
		{
			[Token(Token = "0x6000F3F")]
			[Address(RVA = "0x1FD4E70", Offset = "0x1FD4E70", VA = "0x1FD4E70")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F40")]
			[Address(RVA = "0x1FD4ED8", Offset = "0x1FD4ED8", VA = "0x1FD4ED8")]
			set
			{
			}
		}

		[Token(Token = "0x1700015B")]
		public static bool ShowFishFinder
		{
			[Token(Token = "0x6000F41")]
			[Address(RVA = "0x1FD4F50", Offset = "0x1FD4F50", VA = "0x1FD4F50")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F42")]
			[Address(RVA = "0x1FD4FB8", Offset = "0x1FD4FB8", VA = "0x1FD4FB8")]
			set
			{
			}
		}
	}
	[Token(Token = "0x200029A")]
	public class Portal : MonoBehaviour
	{
		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LocationSO TargetLocation;

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Sequence m_sequence;

		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool isOpen;

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0x1FD7D9C", Offset = "0x1FD7D9C", VA = "0x1FD7D9C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0x1FD7DA0", Offset = "0x1FD7DA0", VA = "0x1FD7DA0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0x1FD7DA4", Offset = "0x1FD7DA4", VA = "0x1FD7DA4")]
		public void OnHoverEnter()
		{
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x1FD7E10", Offset = "0x1FD7E10", VA = "0x1FD7E10")]
		public void OnHoverExit()
		{
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0x1FD7E7C", Offset = "0x1FD7E7C", VA = "0x1FD7E7C")]
		public void OnSelectEnter()
		{
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0x1FD7EE8", Offset = "0x1FD7EE8", VA = "0x1FD7EE8")]
		public void OnSelectExit()
		{
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0x1FD7F98", Offset = "0x1FD7F98", VA = "0x1FD7F98")]
		public Portal()
		{
		}
	}
	[Token(Token = "0x200029B")]
	public class SceneLoadManager : MonoBehaviour
	{
		[Token(Token = "0x20004D1")]
		public delegate void SceneLoadAction();

		[Token(Token = "0x20004D2")]
		public delegate void HideHandsEvent();

		[Token(Token = "0x20004D3")]
		public delegate void ShowHandsEvent();

		[Token(Token = "0x20004D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0FE0", Offset = "0xAC0FE0")]
		private sealed class <LoadFishing>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneLoadManager <>4__this;

			[Token(Token = "0x4001E5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AsyncOperation <asyncLoad>5__2;

			[Token(Token = "0x17000313")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EE7")]
				[Address(RVA = "0xD5C320", Offset = "0xD5C320", VA = "0xD5C320", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000314")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EE9")]
				[Address(RVA = "0xD5C388", Offset = "0xD5C388", VA = "0xD5C388", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EE4")]
			[Address(RVA = "0xD59510", Offset = "0xD59510", VA = "0xD59510")]
			[DebuggerHidden]
			public <LoadFishing>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x6001EE5")]
			[Address(RVA = "0xD5C210", Offset = "0xD5C210", VA = "0xD5C210", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EE6")]
			[Address(RVA = "0xD5C214", Offset = "0xD5C214", VA = "0xD5C214", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EE8")]
			[Address(RVA = "0xD5C328", Offset = "0xD5C328", VA = "0xD5C328", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0FF0", Offset = "0xAC0FF0")]
		private sealed class <LoadDebug>d__59 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneLoadManager <>4__this;

			[Token(Token = "0x4001E62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AsyncOperation <asyncLoad>5__2;

			[Token(Token = "0x17000315")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EED")]
				[Address(RVA = "0xD5BE74", Offset = "0xD5BE74", VA = "0xD5BE74", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000316")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EEF")]
				[Address(RVA = "0xD5BEDC", Offset = "0xD5BEDC", VA = "0xD5BEDC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EEA")]
			[Address(RVA = "0xD595B8", Offset = "0xD595B8", VA = "0xD595B8")]
			[DebuggerHidden]
			public <LoadDebug>d__59(int <>1__state)
			{
			}

			[Token(Token = "0x6001EEB")]
			[Address(RVA = "0xD5BD64", Offset = "0xD5BD64", VA = "0xD5BD64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EEC")]
			[Address(RVA = "0xD5BD68", Offset = "0xD5BD68", VA = "0xD5BD68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EEE")]
			[Address(RVA = "0xD5BE7C", Offset = "0xD5BE7C", VA = "0xD5BE7C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1000", Offset = "0xAC1000")]
		private sealed class <>c__DisplayClass61_0
		{
			[Token(Token = "0x4001E63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SceneLoadManager <>4__this;

			[Token(Token = "0x4001E64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AsyncOperation asyncLoad;

			[Token(Token = "0x6001EF0")]
			[Address(RVA = "0xD5B06C", Offset = "0xD5B06C", VA = "0xD5B06C")]
			public <>c__DisplayClass61_0()
			{
			}

			[Token(Token = "0x6001EF1")]
			[Address(RVA = "0xD5B074", Offset = "0xD5B074", VA = "0xD5B074")]
			internal bool <LoadEnviron>b__0()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EF2")]
			[Address(RVA = "0xD5B0A8", Offset = "0xD5B0A8", VA = "0xD5B0A8")]
			internal bool <LoadEnviron>b__1()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1010", Offset = "0xAC1010")]
		private sealed class <LoadEnviron>d__61 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneLoadManager <>4__this;

			[Token(Token = "0x4001E68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass61_0 <>8__1;

			[Token(Token = "0x17000317")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EF6")]
				[Address(RVA = "0xD5C1A0", Offset = "0xD5C1A0", VA = "0xD5C1A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000318")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EF8")]
				[Address(RVA = "0xD5C208", Offset = "0xD5C208", VA = "0xD5C208", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EF3")]
			[Address(RVA = "0xD59660", Offset = "0xD59660", VA = "0xD59660")]
			[DebuggerHidden]
			public <LoadEnviron>d__61(int <>1__state)
			{
			}

			[Token(Token = "0x6001EF4")]
			[Address(RVA = "0xD5BEE4", Offset = "0xD5BEE4", VA = "0xD5BEE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EF5")]
			[Address(RVA = "0xD5BEE8", Offset = "0xD5BEE8", VA = "0xD5BEE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EF7")]
			[Address(RVA = "0xD5C1A8", Offset = "0xD5C1A8", VA = "0xD5C1A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1020", Offset = "0xAC1020")]
		private sealed class <AllDone>d__62 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneLoadManager <>4__this;

			[Token(Token = "0x17000319")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EFC")]
				[Address(RVA = "0xD5B6BC", Offset = "0xD5B6BC", VA = "0xD5B6BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700031A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EFE")]
				[Address(RVA = "0xD5B724", Offset = "0xD5B724", VA = "0xD5B724", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EF9")]
			[Address(RVA = "0xD5968C", Offset = "0xD5968C", VA = "0xD5968C")]
			[DebuggerHidden]
			public <AllDone>d__62(int <>1__state)
			{
			}

			[Token(Token = "0x6001EFA")]
			[Address(RVA = "0xD5B3F8", Offset = "0xD5B3F8", VA = "0xD5B3F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EFB")]
			[Address(RVA = "0xD5B3FC", Offset = "0xD5B3FC", VA = "0xD5B3FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EFD")]
			[Address(RVA = "0xD5B6C4", Offset = "0xD5B6C4", VA = "0xD5B6C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1030", Offset = "0xAC1030")]
		private sealed class <AfterInit>d__65 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneLoadManager <>4__this;

			[Token(Token = "0x4001E6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AsyncOperation <async>5__2;

			[Token(Token = "0x1700031B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F02")]
				[Address(RVA = "0xD5B388", Offset = "0xD5B388", VA = "0xD5B388", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700031C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F04")]
				[Address(RVA = "0xD5B3F0", Offset = "0xD5B3F0", VA = "0xD5B3F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EFF")]
			[Address(RVA = "0xD5987C", Offset = "0xD5987C", VA = "0xD5987C")]
			[DebuggerHidden]
			public <AfterInit>d__65(int <>1__state)
			{
			}

			[Token(Token = "0x6001F00")]
			[Address(RVA = "0xD5B0E8", Offset = "0xD5B0E8", VA = "0xD5B0E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F01")]
			[Address(RVA = "0xD5B0EC", Offset = "0xD5B0EC", VA = "0xD5B0EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F03")]
			[Address(RVA = "0xD5B390", Offset = "0xD5B390", VA = "0xD5B390", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1040", Offset = "0xAC1040")]
		private sealed class <SequentialUnloadLoad>d__69 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneLoadManager <>4__this;

			[Token(Token = "0x1700031D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F08")]
				[Address(RVA = "0xD5C650", Offset = "0xD5C650", VA = "0xD5C650", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700031E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F0A")]
				[Address(RVA = "0xD5C6B8", Offset = "0xD5C6B8", VA = "0xD5C6B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F05")]
			[Address(RVA = "0xD5A0D4", Offset = "0xD5A0D4", VA = "0xD5A0D4")]
			[DebuggerHidden]
			public <SequentialUnloadLoad>d__69(int <>1__state)
			{
			}

			[Token(Token = "0x6001F06")]
			[Address(RVA = "0xD5C390", Offset = "0xD5C390", VA = "0xD5C390", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F07")]
			[Address(RVA = "0xD5C394", Offset = "0xD5C394", VA = "0xD5C394", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F09")]
			[Address(RVA = "0xD5C658", Offset = "0xD5C658", VA = "0xD5C658", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1050", Offset = "0xAC1050")]
		private sealed class <>c__DisplayClass71_0
		{
			[Token(Token = "0x4001E73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AsyncOperation asyncUnload;

			[Token(Token = "0x6001F0B")]
			[Address(RVA = "0xD5B0C4", Offset = "0xD5B0C4", VA = "0xD5B0C4")]
			public <>c__DisplayClass71_0()
			{
			}

			[Token(Token = "0x6001F0C")]
			[Address(RVA = "0xD5B0CC", Offset = "0xD5B0CC", VA = "0xD5B0CC")]
			internal bool <Unload>b__0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1060", Offset = "0xAC1060")]
		private sealed class <Unload>d__71 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string sceneName;

			[Token(Token = "0x4001E77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SceneLoadManager <>4__this;

			[Token(Token = "0x4001E78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AsyncOperation <async>5__2;

			[Token(Token = "0x1700031F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F10")]
				[Address(RVA = "0xD5C9E4", Offset = "0xD5C9E4", VA = "0xD5C9E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000320")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F12")]
				[Address(RVA = "0xD5CA4C", Offset = "0xD5CA4C", VA = "0xD5CA4C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F0D")]
			[Address(RVA = "0xD5A1C4", Offset = "0xD5A1C4", VA = "0xD5A1C4")]
			[DebuggerHidden]
			public <Unload>d__71(int <>1__state)
			{
			}

			[Token(Token = "0x6001F0E")]
			[Address(RVA = "0xD5C6C0", Offset = "0xD5C6C0", VA = "0xD5C6C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F0F")]
			[Address(RVA = "0xD5C6C4", Offset = "0xD5C6C4", VA = "0xD5C6C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F11")]
			[Address(RVA = "0xD5C9EC", Offset = "0xD5C9EC", VA = "0xD5C9EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004DD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1070", Offset = "0xAC1070")]
		private sealed class <CheckOutroVideoDone>d__79 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneLoadManager <>4__this;

			[Token(Token = "0x17000321")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F16")]
				[Address(RVA = "0xD5BCF4", Offset = "0xD5BCF4", VA = "0xD5BCF4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000322")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F18")]
				[Address(RVA = "0xD5BD5C", Offset = "0xD5BD5C", VA = "0xD5BD5C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F13")]
			[Address(RVA = "0xD5AEB0", Offset = "0xD5AEB0", VA = "0xD5AEB0")]
			[DebuggerHidden]
			public <CheckOutroVideoDone>d__79(int <>1__state)
			{
			}

			[Token(Token = "0x6001F14")]
			[Address(RVA = "0xD5B72C", Offset = "0xD5B72C", VA = "0xD5B72C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F15")]
			[Address(RVA = "0xD5B730", Offset = "0xD5B730", VA = "0xD5B730", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F17")]
			[Address(RVA = "0xD5BCFC", Offset = "0xD5BCFC", VA = "0xD5BCFC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool fishingDone;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool environDone;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		private bool loadingScreenActive;

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		private bool debugDone;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InitializeCanvasses initCanvas;

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DisableNonXrCameras disableCams;

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DisableOtherAudioListeners disableAL;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string fishingSceneName;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool locationIsChanging;

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SceneLoadManager instance;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private LocationSO playerShip;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private LocationSO startingLocation;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private LocationSO[] locations;

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject loadingScreen;

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Localize loadingScreenTip;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Material loadingScreenSkybox;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material W2C_Skybox;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Color W2C_SkyColor;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Scene W2C_ActiveScene;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public List<Sprite> loadingScreenImages;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public List<string> loadingScreenTips;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GameObject postcard;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float loadingScreenRenderScale;

		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC5740", Offset = "0xAC5740")]
		public GameObject notificationUI;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC5778", Offset = "0xAC5778")]
		public LocationSO destination;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC57B0", Offset = "0xAC57B0")]
		public bool sceneOverride;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
		public bool showFps;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
		private bool fromSceneLoaderScene;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCB")]
		private bool unloadCompleted;

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private bool fishingVFXPrewarmed;

		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static bool canShowHands;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static bool isFading;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		public bool outroIsPlaying;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public VideoPlayer player;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private VideoClip OutroEnglish;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private VideoClip OutroChinese;

		[Token(Token = "0x1700015C")]
		public static bool LocationIsChanging
		{
			[Token(Token = "0x6000F4B")]
			[Address(RVA = "0xD53DF0", Offset = "0xD53DF0", VA = "0xD53DF0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700015D")]
		public static LocationSO PlayerShip
		{
			[Token(Token = "0x6000F4C")]
			[Address(RVA = "0xD58578", Offset = "0xD58578", VA = "0xD58578")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000023")]
		public static event SceneLoadAction OnSceneLoad
		{
			[Token(Token = "0x6000F4D")]
			[Address(RVA = "0xD585EC", Offset = "0xD585EC", VA = "0xD585EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC0C0", Offset = "0xACC0C0")]
			add
			{
			}
			[Token(Token = "0x6000F4E")]
			[Address(RVA = "0xD586DC", Offset = "0xD586DC", VA = "0xD586DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC0D0", Offset = "0xACC0D0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000024")]
		public static event HideHandsEvent HideHands
		{
			[Token(Token = "0x6000F4F")]
			[Address(RVA = "0xD587CC", Offset = "0xD587CC", VA = "0xD587CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC0E0", Offset = "0xACC0E0")]
			add
			{
			}
			[Token(Token = "0x6000F50")]
			[Address(RVA = "0xD588BC", Offset = "0xD588BC", VA = "0xD588BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC0F0", Offset = "0xACC0F0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000025")]
		public static event ShowHandsEvent ShowHands
		{
			[Token(Token = "0x6000F51")]
			[Address(RVA = "0xD589AC", Offset = "0xD589AC", VA = "0xD589AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC100", Offset = "0xACC100")]
			add
			{
			}
			[Token(Token = "0x6000F52")]
			[Address(RVA = "0xD58A9C", Offset = "0xD58A9C", VA = "0xD58A9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC110", Offset = "0xACC110")]
			remove
			{
			}
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0xD58B8C", Offset = "0xD58B8C", VA = "0xD58B8C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0xD58C04", Offset = "0xD58C04", VA = "0xD58C04")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0xD58D44", Offset = "0xD58D44", VA = "0xD58D44")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0xD59250", Offset = "0xD59250", VA = "0xD59250")]
		private LocationSO GetDestinationFromLocationBCID(string locationBCID)
		{
			return null;
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0xD592FC", Offset = "0xD592FC", VA = "0xD592FC")]
		private void LoadFishingScene()
		{
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0xD59494", Offset = "0xD59494", VA = "0xD59494")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACC120", Offset = "0xACC120")]
		private IEnumerator LoadFishing()
		{
			return null;
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0xD593B0", Offset = "0xD593B0", VA = "0xD593B0")]
		private void LoadDebugScene()
		{
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0xD5953C", Offset = "0xD5953C", VA = "0xD5953C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACC184", Offset = "0xACC184")]
		private IEnumerator LoadDebug()
		{
			return null;
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0xD59468", Offset = "0xD59468", VA = "0xD59468")]
		private void LoadEnvironmentScene()
		{
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0xD595E4", Offset = "0xD595E4", VA = "0xD595E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACC1E8", Offset = "0xACC1E8")]
		private IEnumerator LoadEnviron()
		{
			return null;
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0xD591D4", Offset = "0xD591D4", VA = "0xD591D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACC24C", Offset = "0xACC24C")]
		private IEnumerator AllDone()
		{
			return null;
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0xD596B8", Offset = "0xD596B8", VA = "0xD596B8")]
		private void InitAll()
		{
		}

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0xD58FF8", Offset = "0xD58FF8", VA = "0xD58FF8")]
		private void InitAllSceneOverride()
		{
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0xD59800", Offset = "0xD59800", VA = "0xD59800")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACC2B0", Offset = "0xACC2B0")]
		private IEnumerator AfterInit()
		{
			return null;
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0xD598A8", Offset = "0xD598A8", VA = "0xD598A8")]
		private void FadeFinished()
		{
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0xD59914", Offset = "0xD59914", VA = "0xD59914")]
		public void ChangeLocation(LocationSO loc)
		{
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0xD59B3C", Offset = "0xD59B3C", VA = "0xD59B3C")]
		private void SetEnvironScene()
		{
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0xD5A058", Offset = "0xD5A058", VA = "0xD5A058")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACC314", Offset = "0xACC314")]
		private IEnumerator SequentialUnloadLoad()
		{
			return null;
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0xD5A100", Offset = "0xD5A100", VA = "0xD5A100")]
		public void UnloadScene(string sceneName)
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0xD5A12C", Offset = "0xD5A12C", VA = "0xD5A12C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACC378", Offset = "0xACC378")]
		public IEnumerator Unload(string sceneName)
		{
			return null;
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0xD59044", Offset = "0xD59044", VA = "0xD59044")]
		private void UnloadAll()
		{
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0xD59E0C", Offset = "0xD59E0C", VA = "0xD59E0C")]
		private void ShowLoadingScreen()
		{
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0xD5A3FC", Offset = "0xD5A3FC", VA = "0xD5A3FC")]
		private void SelectLoadingScreenImage()
		{
		}

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0xD5A504", Offset = "0xD5A504", VA = "0xD5A504")]
		private void PrewarmFishingVFX()
		{
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0xD5A96C", Offset = "0xD5A96C", VA = "0xD5A96C")]
		public static void PlayOutroVideo()
		{
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0xD5AB10", Offset = "0xD5AB10", VA = "0xD5AB10")]
		private void ShowVideoScreen()
		{
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0xD5AEA8", Offset = "0xD5AEA8", VA = "0xD5AEA8")]
		private void ShortVid()
		{
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0xD5AE2C", Offset = "0xD5AE2C", VA = "0xD5AE2C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACC3DC", Offset = "0xACC3DC")]
		private IEnumerator CheckOutroVideoDone()
		{
			return null;
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0xD5AEDC", Offset = "0xD5AEDC", VA = "0xD5AEDC")]
		private void OutroVideoFinished(VideoPlayer source)
		{
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0xD5AF88", Offset = "0xD5AF88", VA = "0xD5AF88")]
		private void OnApplicationFocus(bool isFocused)
		{
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0xD5B040", Offset = "0xD5B040", VA = "0xD5B040")]
		public SceneLoadManager()
		{
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0xD5B05C", Offset = "0xD5B05C", VA = "0xD5B05C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC440", Offset = "0xACC440")]
		private void <ChangeLocation>b__67_0()
		{
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0xD5B060", Offset = "0xD5B060", VA = "0xD5B060")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC450", Offset = "0xACC450")]
		private void <ShowLoadingScreen>b__73_0()
		{
		}
	}
	[Token(Token = "0x200029C")]
	internal enum RaycastState
	{
		[Token(Token = "0x40011B2")]
		Interact,
		[Token(Token = "0x40011B3")]
		Teleport
	}
	[Token(Token = "0x200029D")]
	public class TeleporationManager : MonoBehaviour
	{
		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private InputActionAsset m_actionAsset;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TeleportationProvider m_teleportProvider;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private XRRayInteractor m_leftRay;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private XRRayInteractor m_rightRay;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_RayDistance;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private XRRayInteractor m_currentRay;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private InputAction activateR;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private InputAction activateL;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RaycastState rayState;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool isNavigating;

		[Token(Token = "0x1700015E")]
		public XRRayInteractor LeftRay
		{
			[Token(Token = "0x6000F75")]
			[Address(RVA = "0xD14FA0", Offset = "0xD14FA0", VA = "0xD14FA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015F")]
		public XRRayInteractor RightRay
		{
			[Token(Token = "0x6000F76")]
			[Address(RVA = "0xD14FA8", Offset = "0xD14FA8", VA = "0xD14FA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0xD14FB0", Offset = "0xD14FB0", VA = "0xD14FB0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0xD1533C", Offset = "0xD1533C", VA = "0xD1533C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0xD15728", Offset = "0xD15728", VA = "0xD15728")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0xD15870", Offset = "0xD15870", VA = "0xD15870")]
		private void OnInteractActive(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0xD15878", Offset = "0xD15878", VA = "0xD15878")]
		private void OnTeleportActive(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0xD15A78", Offset = "0xD15A78", VA = "0xD15A78")]
		private bool IsAllowTeleport()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0xD151CC", Offset = "0xD151CC", VA = "0xD151CC")]
		public void EnableInteractMode(bool active)
		{
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0xD15CE8", Offset = "0xD15CE8", VA = "0xD15CE8")]
		public void SetRayActive(bool right, bool left)
		{
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0xD15D34", Offset = "0xD15D34", VA = "0xD15D34")]
		public TeleporationManager()
		{
		}
	}
	[Token(Token = "0x200029E")]
	public class XRInputSender : MonoBehaviour, XRIDefaultInputActions.IXRILeftHandActions, XRIDefaultInputActions.IXRIRightHandActions
	{
		[Token(Token = "0x20004DE")]
		public delegate void SelectEvent(InputAction.CallbackContext context);

		[Token(Token = "0x20004DF")]
		public delegate void ActivateEvent(InputAction.CallbackContext context);

		[Token(Token = "0x20004E0")]
		public delegate void BoostEvent(InputAction.CallbackContext context);

		[Token(Token = "0x20004E1")]
		public delegate void GrabHandleEvent(InputAction.CallbackContext context);

		[Token(Token = "0x20004E2")]
		public delegate void SwitchPreviousLureEvent();

		[Token(Token = "0x20004E3")]
		public delegate void SwitchNextLureEvent();

		[Token(Token = "0x20004E4")]
		public delegate void SwitchRodEvent(int next);

		[Token(Token = "0x20004E5")]
		public delegate void ResetEvent();

		[Token(Token = "0x20004E6")]
		public delegate void TeleportEvent();

		[Token(Token = "0x20004E7")]
		public delegate void MenuEvent();

		[Token(Token = "0x20004E8")]
		public delegate void PickupEvent();

		[Token(Token = "0x20004E9")]
		public delegate void AnimateLeftIndexEvent(float value);

		[Token(Token = "0x20004EA")]
		public delegate void AnimateRightIndexEvent(float value);

		[Token(Token = "0x20004EB")]
		public delegate void AnimateLeftFingersEvent(float value);

		[Token(Token = "0x20004EC")]
		public delegate void AnimateRightFingersEvent(float value);

		[Token(Token = "0x20004ED")]
		public delegate void AnimateLeftThumbEvent(bool down);

		[Token(Token = "0x20004EE")]
		public delegate void AnimateRightThumbEvent(bool down);

		[Token(Token = "0x20004EF")]
		public delegate void ThumbUpEvent();

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public XRIDefaultInputActions inputActions;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool dialogAdvanceKeepoutActive;

		[Token(Token = "0x14000026")]
		public static event SelectEvent Select
		{
			[Token(Token = "0x6000F80")]
			[Address(RVA = "0xE1E3CC", Offset = "0xE1E3CC", VA = "0xE1E3CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC460", Offset = "0xACC460")]
			add
			{
			}
			[Token(Token = "0x6000F81")]
			[Address(RVA = "0xE1E480", Offset = "0xE1E480", VA = "0xE1E480")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC470", Offset = "0xACC470")]
			remove
			{
			}
		}

		[Token(Token = "0x14000027")]
		public static event ActivateEvent Activate
		{
			[Token(Token = "0x6000F82")]
			[Address(RVA = "0xE1E534", Offset = "0xE1E534", VA = "0xE1E534")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC480", Offset = "0xACC480")]
			add
			{
			}
			[Token(Token = "0x6000F83")]
			[Address(RVA = "0xE1E5EC", Offset = "0xE1E5EC", VA = "0xE1E5EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC490", Offset = "0xACC490")]
			remove
			{
			}
		}

		[Token(Token = "0x14000028")]
		public static event BoostEvent Boost
		{
			[Token(Token = "0x6000F84")]
			[Address(RVA = "0xE1E6A4", Offset = "0xE1E6A4", VA = "0xE1E6A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC4A0", Offset = "0xACC4A0")]
			add
			{
			}
			[Token(Token = "0x6000F85")]
			[Address(RVA = "0xE1E75C", Offset = "0xE1E75C", VA = "0xE1E75C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC4B0", Offset = "0xACC4B0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000029")]
		public static event GrabHandleEvent GrabHandle
		{
			[Token(Token = "0x6000F86")]
			[Address(RVA = "0xE1E814", Offset = "0xE1E814", VA = "0xE1E814")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC4C0", Offset = "0xACC4C0")]
			add
			{
			}
			[Token(Token = "0x6000F87")]
			[Address(RVA = "0xE1E8CC", Offset = "0xE1E8CC", VA = "0xE1E8CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC4D0", Offset = "0xACC4D0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002A")]
		public static event SwitchPreviousLureEvent SwitchPreviousLure
		{
			[Token(Token = "0x6000F88")]
			[Address(RVA = "0xE1E984", Offset = "0xE1E984", VA = "0xE1E984")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC4E0", Offset = "0xACC4E0")]
			add
			{
			}
			[Token(Token = "0x6000F89")]
			[Address(RVA = "0xE1EA3C", Offset = "0xE1EA3C", VA = "0xE1EA3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC4F0", Offset = "0xACC4F0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002B")]
		public static event SwitchNextLureEvent SwitchNextLure
		{
			[Token(Token = "0x6000F8A")]
			[Address(RVA = "0xE1EAF4", Offset = "0xE1EAF4", VA = "0xE1EAF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC500", Offset = "0xACC500")]
			add
			{
			}
			[Token(Token = "0x6000F8B")]
			[Address(RVA = "0xE1EBAC", Offset = "0xE1EBAC", VA = "0xE1EBAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC510", Offset = "0xACC510")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002C")]
		public static event SwitchRodEvent SwitchRod
		{
			[Token(Token = "0x6000F8C")]
			[Address(RVA = "0xE1EC64", Offset = "0xE1EC64", VA = "0xE1EC64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC520", Offset = "0xACC520")]
			add
			{
			}
			[Token(Token = "0x6000F8D")]
			[Address(RVA = "0xE1ED1C", Offset = "0xE1ED1C", VA = "0xE1ED1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC530", Offset = "0xACC530")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002D")]
		public static event ResetEvent Reset
		{
			[Token(Token = "0x6000F8E")]
			[Address(RVA = "0xE1EDD4", Offset = "0xE1EDD4", VA = "0xE1EDD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC540", Offset = "0xACC540")]
			add
			{
			}
			[Token(Token = "0x6000F8F")]
			[Address(RVA = "0xE1EE8C", Offset = "0xE1EE8C", VA = "0xE1EE8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC550", Offset = "0xACC550")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002E")]
		public static event TeleportEvent Teleport
		{
			[Token(Token = "0x6000F90")]
			[Address(RVA = "0xE1EF44", Offset = "0xE1EF44", VA = "0xE1EF44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC560", Offset = "0xACC560")]
			add
			{
			}
			[Token(Token = "0x6000F91")]
			[Address(RVA = "0xE1EFFC", Offset = "0xE1EFFC", VA = "0xE1EFFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC570", Offset = "0xACC570")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002F")]
		public static event MenuEvent Menu
		{
			[Token(Token = "0x6000F92")]
			[Address(RVA = "0xE1F0B4", Offset = "0xE1F0B4", VA = "0xE1F0B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC580", Offset = "0xACC580")]
			add
			{
			}
			[Token(Token = "0x6000F93")]
			[Address(RVA = "0xE1F16C", Offset = "0xE1F16C", VA = "0xE1F16C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC590", Offset = "0xACC590")]
			remove
			{
			}
		}

		[Token(Token = "0x14000030")]
		public static event PickupEvent Pickup
		{
			[Token(Token = "0x6000F94")]
			[Address(RVA = "0xE1F224", Offset = "0xE1F224", VA = "0xE1F224")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC5A0", Offset = "0xACC5A0")]
			add
			{
			}
			[Token(Token = "0x6000F95")]
			[Address(RVA = "0xE1F2DC", Offset = "0xE1F2DC", VA = "0xE1F2DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC5B0", Offset = "0xACC5B0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000031")]
		public static event AnimateLeftIndexEvent AnimateLeftIndex
		{
			[Token(Token = "0x6000F96")]
			[Address(RVA = "0xE1F394", Offset = "0xE1F394", VA = "0xE1F394")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC5C0", Offset = "0xACC5C0")]
			add
			{
			}
			[Token(Token = "0x6000F97")]
			[Address(RVA = "0xE1F44C", Offset = "0xE1F44C", VA = "0xE1F44C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC5D0", Offset = "0xACC5D0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000032")]
		public static event AnimateRightIndexEvent AnimateRightIndex
		{
			[Token(Token = "0x6000F98")]
			[Address(RVA = "0xE1F504", Offset = "0xE1F504", VA = "0xE1F504")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC5E0", Offset = "0xACC5E0")]
			add
			{
			}
			[Token(Token = "0x6000F99")]
			[Address(RVA = "0xE1F5BC", Offset = "0xE1F5BC", VA = "0xE1F5BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC5F0", Offset = "0xACC5F0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000033")]
		public static event AnimateLeftFingersEvent AnimateLeftFingers
		{
			[Token(Token = "0x6000F9A")]
			[Address(RVA = "0xE1F674", Offset = "0xE1F674", VA = "0xE1F674")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC600", Offset = "0xACC600")]
			add
			{
			}
			[Token(Token = "0x6000F9B")]
			[Address(RVA = "0xE1F72C", Offset = "0xE1F72C", VA = "0xE1F72C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC610", Offset = "0xACC610")]
			remove
			{
			}
		}

		[Token(Token = "0x14000034")]
		public static event AnimateRightFingersEvent AnimateRightFingers
		{
			[Token(Token = "0x6000F9C")]
			[Address(RVA = "0xE1F7E4", Offset = "0xE1F7E4", VA = "0xE1F7E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC620", Offset = "0xACC620")]
			add
			{
			}
			[Token(Token = "0x6000F9D")]
			[Address(RVA = "0xE1F89C", Offset = "0xE1F89C", VA = "0xE1F89C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC630", Offset = "0xACC630")]
			remove
			{
			}
		}

		[Token(Token = "0x14000035")]
		public static event AnimateLeftThumbEvent AnimateLeftThumb
		{
			[Token(Token = "0x6000F9E")]
			[Address(RVA = "0xE1F954", Offset = "0xE1F954", VA = "0xE1F954")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC640", Offset = "0xACC640")]
			add
			{
			}
			[Token(Token = "0x6000F9F")]
			[Address(RVA = "0xE1FA0C", Offset = "0xE1FA0C", VA = "0xE1FA0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC650", Offset = "0xACC650")]
			remove
			{
			}
		}

		[Token(Token = "0x14000036")]
		public static event AnimateRightThumbEvent AnimateRightThumb
		{
			[Token(Token = "0x6000FA0")]
			[Address(RVA = "0xE1FAC4", Offset = "0xE1FAC4", VA = "0xE1FAC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC660", Offset = "0xACC660")]
			add
			{
			}
			[Token(Token = "0x6000FA1")]
			[Address(RVA = "0xE1FB7C", Offset = "0xE1FB7C", VA = "0xE1FB7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC670", Offset = "0xACC670")]
			remove
			{
			}
		}

		[Token(Token = "0x14000037")]
		public static event ThumbUpEvent ThumbUp
		{
			[Token(Token = "0x6000FA2")]
			[Address(RVA = "0xE1FC34", Offset = "0xE1FC34", VA = "0xE1FC34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC680", Offset = "0xACC680")]
			add
			{
			}
			[Token(Token = "0x6000FA3")]
			[Address(RVA = "0xE1FCEC", Offset = "0xE1FCEC", VA = "0xE1FCEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC690", Offset = "0xACC690")]
			remove
			{
			}
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0xE1FDA4", Offset = "0xE1FDA4", VA = "0xE1FDA4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0xE1FE18", Offset = "0xE1FE18", VA = "0xE1FE18")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0xE1FEFC", Offset = "0xE1FEFC", VA = "0xE1FEFC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0xE1FF78", Offset = "0xE1FF78", VA = "0xE1FF78")]
		private void SafeDispose(XRIDefaultInputActions self)
		{
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0xE20020", Offset = "0xE20020", VA = "0xE20020", Slot = "55")]
		public virtual void OnPosition(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0xE20024", Offset = "0xE20024", VA = "0xE20024", Slot = "56")]
		public virtual void OnRotation(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0xE20028", Offset = "0xE20028", VA = "0xE20028", Slot = "57")]
		public virtual void OnSelect(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0xE200A8", Offset = "0xE200A8", VA = "0xE200A8", Slot = "58")]
		public virtual void OnActivate(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0xE20128", Offset = "0xE20128", VA = "0xE20128", Slot = "59")]
		public virtual void OnUIPress(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0xE2012C", Offset = "0xE2012C", VA = "0xE2012C", Slot = "60")]
		public virtual void OnHapticDevice(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0xE20130", Offset = "0xE20130", VA = "0xE20130", Slot = "61")]
		public virtual void OnTeleportSelect(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0xE20134", Offset = "0xE20134", VA = "0xE20134", Slot = "62")]
		public virtual void OnTeleportModeActivate(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0xE20138", Offset = "0xE20138", VA = "0xE20138", Slot = "63")]
		public virtual void OnTeleportModeCancel(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0xE2019C", Offset = "0xE2019C", VA = "0xE2019C", Slot = "64")]
		public virtual void OnTurn(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0xE20200", Offset = "0xE20200", VA = "0xE20200", Slot = "65")]
		public virtual void OnMove(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0xE20204", Offset = "0xE20204", VA = "0xE20204", Slot = "66")]
		public virtual void OnRotateAnchor(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0xE20208", Offset = "0xE20208", VA = "0xE20208", Slot = "67")]
		public virtual void OnTranslateAnchor(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0xE2020C", Offset = "0xE2020C", VA = "0xE2020C", Slot = "68")]
		public virtual void OnReset(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0xE20270", Offset = "0xE20270", VA = "0xE20270", Slot = "69")]
		public virtual void OnAutoReel(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0xE20274", Offset = "0xE20274", VA = "0xE20274", Slot = "70")]
		public virtual void OnMenu(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0xE20310", Offset = "0xE20310", VA = "0xE20310", Slot = "51")]
		public void OnDialogAdvance(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0xE20314", Offset = "0xE20314", VA = "0xE20314", Slot = "71")]
		public virtual void OnBoost(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0xE20394", Offset = "0xE20394", VA = "0xE20394", Slot = "72")]
		public virtual void OnGrabHandle(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0xE20414", Offset = "0xE20414", VA = "0xE20414")]
		private void SnapTurnProviderBase_OnStickTurn(float turnAmount, Handside handside)
		{
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0xE2055C", Offset = "0xE2055C", VA = "0xE2055C", Slot = "44")]
		public void OnSwitchRod(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0xE206C4", Offset = "0xE206C4", VA = "0xE206C4", Slot = "48")]
		public void OnEditorPause(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0xE2073C", Offset = "0xE2073C", VA = "0xE2073C", Slot = "50")]
		public void OnPickup(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0xE207A0", Offset = "0xE207A0", VA = "0xE207A0", Slot = "26")]
		public void OnAnimateIndexLeft(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0xE20860", Offset = "0xE20860", VA = "0xE20860", Slot = "27")]
		public void OnAnimateFingersLeft(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0xE20920", Offset = "0xE20920", VA = "0xE20920", Slot = "28")]
		public void OnAnimateThumbLeft(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0xE209D8", Offset = "0xE209D8", VA = "0xE209D8", Slot = "52")]
		public void OnAnimateIndexRight(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0xE20A98", Offset = "0xE20A98", VA = "0xE20A98", Slot = "53")]
		public void OnAnimateFingersRight(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0xE20B58", Offset = "0xE20B58", VA = "0xE20B58", Slot = "54")]
		public void OnAnimateThumbRight(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0xE20C10", Offset = "0xE20C10", VA = "0xE20C10", Slot = "39")]
		public void OnThumbUp(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0xE20D88", Offset = "0xE20D88", VA = "0xE20D88")]
		private void DisableDialogAdvanceKeepout()
		{
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0xE20D90", Offset = "0xE20D90", VA = "0xE20D90")]
		public XRInputSender()
		{
		}
	}
	[Token(Token = "0x200029F")]
	public class XRInputSenderSceneloader : MonoBehaviour, XRIDefaultInputActions.IXRILeftHandActions, XRIDefaultInputActions.IXRIRightHandActions
	{
		[Token(Token = "0x20004F0")]
		public delegate void SelectEvent(InputAction.CallbackContext context);

		[Token(Token = "0x20004F1")]
		public delegate void ActivateEvent(InputAction.CallbackContext context);

		[Token(Token = "0x20004F2")]
		public delegate void BoostEvent(InputAction.CallbackContext context);

		[Token(Token = "0x20004F3")]
		public delegate void GrabHandleEvent(InputAction.CallbackContext context);

		[Token(Token = "0x20004F4")]
		public delegate void SwitchPreviousLureEvent();

		[Token(Token = "0x20004F5")]
		public delegate void SwitchNextLureEvent();

		[Token(Token = "0x20004F6")]
		public delegate void ResetEvent();

		[Token(Token = "0x20004F7")]
		public delegate void TeleportEvent();

		[Token(Token = "0x20004F8")]
		public delegate void MenuEvent();

		[Token(Token = "0x20004F9")]
		public delegate void PickupEvent();

		[Token(Token = "0x20004FA")]
		public delegate void DialogAdvanceEvent();

		[Token(Token = "0x20004FB")]
		public delegate void AnimateLeftIndexEvent(float value);

		[Token(Token = "0x20004FC")]
		public delegate void AnimateRightIndexEvent(float value);

		[Token(Token = "0x20004FD")]
		public delegate void AnimateLeftFingersEvent(float value);

		[Token(Token = "0x20004FE")]
		public delegate void AnimateRightFingersEvent(float value);

		[Token(Token = "0x20004FF")]
		public delegate void AnimateLeftThumbEvent(bool down);

		[Token(Token = "0x2000500")]
		public delegate void AnimateRightThumbEvent(bool down);

		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public XRIDefaultInputActions inputActions;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool dialogAdvanceKeepoutActive;

		[Token(Token = "0x14000038")]
		public static event SelectEvent Select
		{
			[Token(Token = "0x6000FC8")]
			[Address(RVA = "0x1060C14", Offset = "0x1060C14", VA = "0x1060C14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC6A0", Offset = "0xACC6A0")]
			add
			{
			}
			[Token(Token = "0x6000FC9")]
			[Address(RVA = "0x1060CC8", Offset = "0x1060CC8", VA = "0x1060CC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC6B0", Offset = "0xACC6B0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000039")]
		public static event ActivateEvent Activate
		{
			[Token(Token = "0x6000FCA")]
			[Address(RVA = "0x1060D7C", Offset = "0x1060D7C", VA = "0x1060D7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC6C0", Offset = "0xACC6C0")]
			add
			{
			}
			[Token(Token = "0x6000FCB")]
			[Address(RVA = "0x1060E34", Offset = "0x1060E34", VA = "0x1060E34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC6D0", Offset = "0xACC6D0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003A")]
		public static event BoostEvent Boost
		{
			[Token(Token = "0x6000FCC")]
			[Address(RVA = "0x1060EEC", Offset = "0x1060EEC", VA = "0x1060EEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC6E0", Offset = "0xACC6E0")]
			add
			{
			}
			[Token(Token = "0x6000FCD")]
			[Address(RVA = "0x1060FA4", Offset = "0x1060FA4", VA = "0x1060FA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC6F0", Offset = "0xACC6F0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003B")]
		public static event GrabHandleEvent GrabHandle
		{
			[Token(Token = "0x6000FCE")]
			[Address(RVA = "0x106105C", Offset = "0x106105C", VA = "0x106105C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC700", Offset = "0xACC700")]
			add
			{
			}
			[Token(Token = "0x6000FCF")]
			[Address(RVA = "0x1061114", Offset = "0x1061114", VA = "0x1061114")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC710", Offset = "0xACC710")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003C")]
		public static event SwitchPreviousLureEvent SwitchPreviousLure
		{
			[Token(Token = "0x6000FD0")]
			[Address(RVA = "0x10611CC", Offset = "0x10611CC", VA = "0x10611CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC720", Offset = "0xACC720")]
			add
			{
			}
			[Token(Token = "0x6000FD1")]
			[Address(RVA = "0x1061284", Offset = "0x1061284", VA = "0x1061284")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC730", Offset = "0xACC730")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003D")]
		public static event SwitchNextLureEvent SwitchNextLure
		{
			[Token(Token = "0x6000FD2")]
			[Address(RVA = "0x106133C", Offset = "0x106133C", VA = "0x106133C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC740", Offset = "0xACC740")]
			add
			{
			}
			[Token(Token = "0x6000FD3")]
			[Address(RVA = "0x10613F4", Offset = "0x10613F4", VA = "0x10613F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC750", Offset = "0xACC750")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003E")]
		public static event ResetEvent Reset
		{
			[Token(Token = "0x6000FD4")]
			[Address(RVA = "0x10614AC", Offset = "0x10614AC", VA = "0x10614AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC760", Offset = "0xACC760")]
			add
			{
			}
			[Token(Token = "0x6000FD5")]
			[Address(RVA = "0x1061564", Offset = "0x1061564", VA = "0x1061564")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC770", Offset = "0xACC770")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003F")]
		public static event TeleportEvent Teleport
		{
			[Token(Token = "0x6000FD6")]
			[Address(RVA = "0x106161C", Offset = "0x106161C", VA = "0x106161C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC780", Offset = "0xACC780")]
			add
			{
			}
			[Token(Token = "0x6000FD7")]
			[Address(RVA = "0x10616D4", Offset = "0x10616D4", VA = "0x10616D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC790", Offset = "0xACC790")]
			remove
			{
			}
		}

		[Token(Token = "0x14000040")]
		public static event MenuEvent Menu
		{
			[Token(Token = "0x6000FD8")]
			[Address(RVA = "0x106178C", Offset = "0x106178C", VA = "0x106178C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC7A0", Offset = "0xACC7A0")]
			add
			{
			}
			[Token(Token = "0x6000FD9")]
			[Address(RVA = "0x1061844", Offset = "0x1061844", VA = "0x1061844")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC7B0", Offset = "0xACC7B0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000041")]
		public static event PickupEvent Pickup
		{
			[Token(Token = "0x6000FDA")]
			[Address(RVA = "0x10618FC", Offset = "0x10618FC", VA = "0x10618FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC7C0", Offset = "0xACC7C0")]
			add
			{
			}
			[Token(Token = "0x6000FDB")]
			[Address(RVA = "0x10619B4", Offset = "0x10619B4", VA = "0x10619B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC7D0", Offset = "0xACC7D0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000042")]
		public static event DialogAdvanceEvent DialogAdvance
		{
			[Token(Token = "0x6000FDC")]
			[Address(RVA = "0x1061A6C", Offset = "0x1061A6C", VA = "0x1061A6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC7E0", Offset = "0xACC7E0")]
			add
			{
			}
			[Token(Token = "0x6000FDD")]
			[Address(RVA = "0x1061B24", Offset = "0x1061B24", VA = "0x1061B24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC7F0", Offset = "0xACC7F0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000043")]
		public static event AnimateLeftIndexEvent AnimateLeftIndex
		{
			[Token(Token = "0x6000FDE")]
			[Address(RVA = "0x1061BDC", Offset = "0x1061BDC", VA = "0x1061BDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC800", Offset = "0xACC800")]
			add
			{
			}
			[Token(Token = "0x6000FDF")]
			[Address(RVA = "0x1061C94", Offset = "0x1061C94", VA = "0x1061C94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC810", Offset = "0xACC810")]
			remove
			{
			}
		}

		[Token(Token = "0x14000044")]
		public static event AnimateRightIndexEvent AnimateRightIndex
		{
			[Token(Token = "0x6000FE0")]
			[Address(RVA = "0x1061D4C", Offset = "0x1061D4C", VA = "0x1061D4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC820", Offset = "0xACC820")]
			add
			{
			}
			[Token(Token = "0x6000FE1")]
			[Address(RVA = "0x1061E04", Offset = "0x1061E04", VA = "0x1061E04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC830", Offset = "0xACC830")]
			remove
			{
			}
		}

		[Token(Token = "0x14000045")]
		public static event AnimateLeftFingersEvent AnimateLeftFingers
		{
			[Token(Token = "0x6000FE2")]
			[Address(RVA = "0x1061EBC", Offset = "0x1061EBC", VA = "0x1061EBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC840", Offset = "0xACC840")]
			add
			{
			}
			[Token(Token = "0x6000FE3")]
			[Address(RVA = "0x1061F74", Offset = "0x1061F74", VA = "0x1061F74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC850", Offset = "0xACC850")]
			remove
			{
			}
		}

		[Token(Token = "0x14000046")]
		public static event AnimateRightFingersEvent AnimateRightFingers
		{
			[Token(Token = "0x6000FE4")]
			[Address(RVA = "0x106202C", Offset = "0x106202C", VA = "0x106202C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC860", Offset = "0xACC860")]
			add
			{
			}
			[Token(Token = "0x6000FE5")]
			[Address(RVA = "0x10620E4", Offset = "0x10620E4", VA = "0x10620E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC870", Offset = "0xACC870")]
			remove
			{
			}
		}

		[Token(Token = "0x14000047")]
		public static event AnimateLeftThumbEvent AnimateLeftThumb
		{
			[Token(Token = "0x6000FE6")]
			[Address(RVA = "0x106219C", Offset = "0x106219C", VA = "0x106219C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC880", Offset = "0xACC880")]
			add
			{
			}
			[Token(Token = "0x6000FE7")]
			[Address(RVA = "0x1062254", Offset = "0x1062254", VA = "0x1062254")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC890", Offset = "0xACC890")]
			remove
			{
			}
		}

		[Token(Token = "0x14000048")]
		public static event AnimateRightThumbEvent AnimateRightThumb
		{
			[Token(Token = "0x6000FE8")]
			[Address(RVA = "0x106230C", Offset = "0x106230C", VA = "0x106230C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC8A0", Offset = "0xACC8A0")]
			add
			{
			}
			[Token(Token = "0x6000FE9")]
			[Address(RVA = "0x10623C4", Offset = "0x10623C4", VA = "0x10623C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC8B0", Offset = "0xACC8B0")]
			remove
			{
			}
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x106247C", Offset = "0x106247C", VA = "0x106247C", Slot = "29")]
		public void OnPosition(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x1062480", Offset = "0x1062480", VA = "0x1062480", Slot = "30")]
		public void OnRotation(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x1062484", Offset = "0x1062484", VA = "0x1062484", Slot = "31")]
		public void OnSelect(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x1062488", Offset = "0x1062488", VA = "0x1062488", Slot = "32")]
		public void OnActivate(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x106248C", Offset = "0x106248C", VA = "0x106248C", Slot = "33")]
		public void OnUIPress(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x1062490", Offset = "0x1062490", VA = "0x1062490", Slot = "34")]
		public void OnHapticDevice(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x1062494", Offset = "0x1062494", VA = "0x1062494", Slot = "35")]
		public void OnTeleportSelect(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x1062498", Offset = "0x1062498", VA = "0x1062498", Slot = "36")]
		public void OnTeleportModeActivate(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x106249C", Offset = "0x106249C", VA = "0x106249C", Slot = "37")]
		public void OnTeleportModeCancel(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x10624A0", Offset = "0x10624A0", VA = "0x10624A0", Slot = "38")]
		public void OnTurn(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x10624A4", Offset = "0x10624A4", VA = "0x10624A4", Slot = "40")]
		public void OnMove(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x10624A8", Offset = "0x10624A8", VA = "0x10624A8", Slot = "41")]
		public void OnRotateAnchor(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x10624AC", Offset = "0x10624AC", VA = "0x10624AC", Slot = "42")]
		public void OnTranslateAnchor(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x10624B0", Offset = "0x10624B0", VA = "0x10624B0", Slot = "43")]
		public void OnReset(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x10624B4", Offset = "0x10624B4", VA = "0x10624B4", Slot = "45")]
		public void OnAutoReel(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x10624B8", Offset = "0x10624B8", VA = "0x10624B8", Slot = "46")]
		public void OnBoost(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x10624BC", Offset = "0x10624BC", VA = "0x10624BC", Slot = "47")]
		public void OnGrabHandle(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x10624C0", Offset = "0x10624C0", VA = "0x10624C0", Slot = "49")]
		public void OnMenu(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0x10624C4", Offset = "0x10624C4", VA = "0x10624C4", Slot = "50")]
		public void OnPickup(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0x10624C8", Offset = "0x10624C8", VA = "0x10624C8", Slot = "48")]
		public void OnEditorPause(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0x10624CC", Offset = "0x10624CC", VA = "0x10624CC", Slot = "44")]
		public void OnSwitchRod(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0x10624D0", Offset = "0x10624D0", VA = "0x10624D0", Slot = "39")]
		public void OnThumbUp(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0x10624D4", Offset = "0x10624D4", VA = "0x10624D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0x10625B8", Offset = "0x10625B8", VA = "0x10625B8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0x10625C0", Offset = "0x10625C0", VA = "0x10625C0")]
		private void SafeDispose(XRIDefaultInputActions self)
		{
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0x1062668", Offset = "0x1062668", VA = "0x1062668", Slot = "26")]
		public void OnAnimateIndexLeft(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0x1062984", Offset = "0x1062984", VA = "0x1062984", Slot = "27")]
		public void OnAnimateFingersLeft(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0x1062CA0", Offset = "0x1062CA0", VA = "0x1062CA0", Slot = "28")]
		public void OnAnimateThumbLeft(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0x1062FC4", Offset = "0x1062FC4", VA = "0x1062FC4", Slot = "52")]
		public void OnAnimateIndexRight(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001007")]
		[Address(RVA = "0x10632E0", Offset = "0x10632E0", VA = "0x10632E0", Slot = "53")]
		public void OnAnimateFingersRight(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0x10635FC", Offset = "0x10635FC", VA = "0x10635FC", Slot = "54")]
		public void OnAnimateThumbRight(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0x1063920", Offset = "0x1063920", VA = "0x1063920", Slot = "51")]
		public void OnDialogAdvance(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0x1063A04", Offset = "0x1063A04", VA = "0x1063A04")]
		public XRInputSenderSceneloader()
		{
		}
	}
	[Token(Token = "0x20002A0")]
	public enum SfxPlayer
	{
		[Token(Token = "0x40011E6")]
		TeleportJet,
		[Token(Token = "0x40011E7")]
		SnapturnJetL,
		[Token(Token = "0x40011E8")]
		SnapturnJetR
	}
	[Token(Token = "0x20002A1")]
	public class PlayerAudio : MonoBehaviour
	{
		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PlayerAudio instance;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSource playerAudio;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC5AB8", Offset = "0xAC5AB8")]
		public AudioClip[] teleportJet;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip[] snapturnJetL;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip[] snapturnJetR;

		[Token(Token = "0x600100B")]
		[Address(RVA = "0x1FCDD28", Offset = "0x1FCDD28", VA = "0x1FCDD28")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0x1FCDDB8", Offset = "0x1FCDDB8", VA = "0x1FCDDB8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0x1FCDE2C", Offset = "0x1FCDE2C", VA = "0x1FCDE2C")]
		private void OnTeleport()
		{
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0x1FCDF24", Offset = "0x1FCDF24", VA = "0x1FCDF24")]
		public static void PlayAt(SfxPlayer sfx, Vector3 position)
		{
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0x1FCE198", Offset = "0x1FCE198", VA = "0x1FCE198")]
		public PlayerAudio()
		{
		}
	}
	[Token(Token = "0x20002A2")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAC0308", Offset = "0xAC0308")]
	public class PopMouthAnim : MonoBehaviour
	{
		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float rmsValAbs;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material popFacialMat;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float gain;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int requestedFps;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float frameInterval;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float nextFrameTime;

		[Token(Token = "0x6001010")]
		[Address(RVA = "0x1FD7830", Offset = "0x1FD7830", VA = "0x1FD7830")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0x1FD7848", Offset = "0x1FD7848", VA = "0x1FD7848")]
		private void Update()
		{
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0x1FD78D4", Offset = "0x1FD78D4", VA = "0x1FD78D4")]
		private void OnAudioFilterRead(float[] data, int channels)
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0x1FD7A00", Offset = "0x1FD7A00", VA = "0x1FD7A00")]
		public PopMouthAnim()
		{
		}
	}
	[Token(Token = "0x20002A3")]
	public class PopulateMissionRewardsSpecial : MonoBehaviour
	{
		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MissionSO mission;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Localize missionTitle;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UI_TakeFishController.MissionRewardItem[] rewardItems;

		[Token(Token = "0x6001014")]
		[Address(RVA = "0x1FD7A14", Offset = "0x1FD7A14", VA = "0x1FD7A14")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0x1FD7A60", Offset = "0x1FD7A60", VA = "0x1FD7A60")]
		private void FillUpMissionRewards(UI_TakeFishController.MissionRewardItem[] rewardsArray, MissionSO.Reward[] missionRewards)
		{
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0x1FD7D94", Offset = "0x1FD7D94", VA = "0x1FD7D94")]
		public PopulateMissionRewardsSpecial()
		{
		}
	}
	[Token(Token = "0x20002A4")]
	public class PredatorSystemDebugUI : MonoBehaviour
	{
		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC5B20", Offset = "0xAC5B20")]
		public Toggle activeInPool;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Slider maxNumberSlider;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Slider initialNumberSlider;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Slider numSpawnAtOnceSlider;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Slider spawnRateSlider;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Slider lifetimeSlider;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Slider speedSlider;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Slider systemActiveDurationSlider;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Slider systemInactiveDurationSlider;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TextMeshProUGUI maxNumberValText;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TextMeshProUGUI initialNumberValText;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public TextMeshProUGUI numSpawnAtOnceValText;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public TextMeshProUGUI spawnRateValText;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public TextMeshProUGUI lifetimeValText;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public TextMeshProUGUI speedValText;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public TextMeshProUGUI systemActiveDurationValTextSlider;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public TextMeshProUGUI systemInactiveDurationValText;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC5B58", Offset = "0xAC5B58")]
		public Toggle rplntActiveInPool;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Slider rplntMaxNumberSlider;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Slider rplntInitialNumberSlider;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Slider rplntNumSpawnAtOnceSlider;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Slider rplntSpawnRateSlider;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Slider rplntLifetimeSlider;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Slider rplntSystemActiveDurationSlider;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Slider rplntSystemInactiveDurationSlider;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public TextMeshProUGUI rplntMaxNumberValText;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public TextMeshProUGUI rplntInitialNumberValText;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public TextMeshProUGUI rplntNumSpawnAtOnceValText;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public TextMeshProUGUI rplntSpawnRateValText;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public TextMeshProUGUI rplntLifetimeValText;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public TextMeshProUGUI rplntSystemActiveDurationValTextSlider;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public TextMeshProUGUI rplntSystemInactiveDurationValText;

		[Token(Token = "0x6001017")]
		[Address(RVA = "0x1FD8EBC", Offset = "0x1FD8EBC", VA = "0x1FD8EBC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0x1FD9034", Offset = "0x1FD9034", VA = "0x1FD9034")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0x1FD90A8", Offset = "0x1FD90A8", VA = "0x1FD90A8")]
		private void fishPoolChanged()
		{
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0x1FD9010", Offset = "0x1FD9010", VA = "0x1FD9010")]
		private void InitUI()
		{
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0x1FD90CC", Offset = "0x1FD90CC", VA = "0x1FD90CC")]
		public void InitPredatorUI()
		{
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0x1FD92C8", Offset = "0x1FD92C8", VA = "0x1FD92C8")]
		public void InitRepellentUI()
		{
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0x1FD9498", Offset = "0x1FD9498", VA = "0x1FD9498")]
		public void UpdatePredatorValueText()
		{
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0x1FD9704", Offset = "0x1FD9704", VA = "0x1FD9704")]
		public void UpdateRepellentValueText()
		{
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0x1FD9928", Offset = "0x1FD9928", VA = "0x1FD9928")]
		public void RestorePredatorPoolValues()
		{
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0x1FD99E4", Offset = "0x1FD99E4", VA = "0x1FD99E4")]
		public void RestoreRepellentPoolValues()
		{
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0x1FD9AA0", Offset = "0x1FD9AA0", VA = "0x1FD9AA0")]
		public void OverridePredatorValues()
		{
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0x1FD9CA8", Offset = "0x1FD9CA8", VA = "0x1FD9CA8")]
		public void OverrideRepellentValues()
		{
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0x1FD9ECC", Offset = "0x1FD9ECC", VA = "0x1FD9ECC")]
		public PredatorSystemDebugUI()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	public class PressBuildSaveFile : MonoBehaviour
	{
		[Token(Token = "0x6001024")]
		[Address(RVA = "0x1FDA020", Offset = "0x1FDA020", VA = "0x1FDA020")]
		private void Start()
		{
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0x1FDA0DC", Offset = "0x1FDA0DC", VA = "0x1FDA0DC")]
		public PressBuildSaveFile()
		{
		}
	}
	[Token(Token = "0x20002A6")]
	public class PressBuildWelcomeController : MonoBehaviour
	{
		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject pressbuildWelcomeMessage;

		[Token(Token = "0x6001026")]
		[Address(RVA = "0x1FDA0E4", Offset = "0x1FDA0E4", VA = "0x1FDA0E4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0x1FDA170", Offset = "0x1FDA170", VA = "0x1FDA170")]
		public PressBuildWelcomeController()
		{
		}
	}
	[Token(Token = "0x20002A7")]
	public class PrewarmShaders : MonoBehaviour
	{
		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ShaderVariantCollection[] shaderVariantCollections;

		[Token(Token = "0x6001028")]
		[Address(RVA = "0x1FDA178", Offset = "0x1FDA178", VA = "0x1FDA178")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001029")]
		[Address(RVA = "0x1FDA2A8", Offset = "0x1FDA2A8", VA = "0x1FDA2A8")]
		public PrewarmShaders()
		{
		}
	}
	[Token(Token = "0x20002A8")]
	public class Protector : MonoBehaviour
	{
		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ParticleSystem system;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Tween bobTween;

		[Token(Token = "0x600102A")]
		[Address(RVA = "0x1FDA2B0", Offset = "0x1FDA2B0", VA = "0x1FDA2B0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0x1FDA3A0", Offset = "0x1FDA3A0", VA = "0x1FDA3A0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0x1FDA3B0", Offset = "0x1FDA3B0", VA = "0x1FDA3B0")]
		private void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x600102D")]
		[Address(RVA = "0x1FDA2B4", Offset = "0x1FDA2B4", VA = "0x1FDA2B4")]
		private void Bobbing()
		{
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0x1FDA40C", Offset = "0x1FDA40C", VA = "0x1FDA40C")]
		private void LowerToSurface()
		{
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0x1FDA50C", Offset = "0x1FDA50C", VA = "0x1FDA50C")]
		private void RaiseUp()
		{
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0x1FDA60C", Offset = "0x1FDA60C", VA = "0x1FDA60C")]
		public Protector()
		{
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0x1FDA614", Offset = "0x1FDA614", VA = "0x1FDA614")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC8C0", Offset = "0xACC8C0")]
		private void <LowerToSurface>b__6_0()
		{
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0x1FDA618", Offset = "0x1FDA618", VA = "0x1FDA618")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC8D0", Offset = "0xACC8D0")]
		private void <RaiseUp>b__7_0()
		{
		}
	}
	[Token(Token = "0x20002A9")]
	public class ProtectorManager : MonoBehaviour
	{
		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ProtectorSpawner spawner;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Protector> protectors;

		[Token(Token = "0x6001033")]
		[Address(RVA = "0x1FDA61C", Offset = "0x1FDA61C", VA = "0x1FDA61C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0x1FDA68C", Offset = "0x1FDA68C", VA = "0x1FDA68C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0x1FDA700", Offset = "0x1FDA700", VA = "0x1FDA700")]
		public void AddProtectors(int numProtectors)
		{
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0x1FDA690", Offset = "0x1FDA690", VA = "0x1FDA690")]
		public void RemoveAll()
		{
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0x1FDA994", Offset = "0x1FDA994", VA = "0x1FDA994")]
		public ProtectorManager()
		{
		}
	}
	[Token(Token = "0x20002AA")]
	public class ProtectorSpawner : MonoBehaviour
	{
		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SpawnPool pool;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ProtectorManager protectorMngr;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform protector;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float minSpawnDistance;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float maxSpawnDistance;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float minDistanceBetween;

		[Token(Token = "0x6001038")]
		[Address(RVA = "0x1FDA99C", Offset = "0x1FDA99C", VA = "0x1FDA99C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0x1FDA978", Offset = "0x1FDA978", VA = "0x1FDA978")]
		internal void DespawnAll()
		{
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0x1FDA7A4", Offset = "0x1FDA7A4", VA = "0x1FDA7A4")]
		internal Protector SpawnProtector()
		{
			return null;
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0x1FDAA20", Offset = "0x1FDAA20", VA = "0x1FDAA20")]
		private Vector3 GetPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0x1FDAC5C", Offset = "0x1FDAC5C", VA = "0x1FDAC5C")]
		public ProtectorSpawner()
		{
		}
	}
	[Token(Token = "0x20002AB")]
	public class ProtectorsToggle : MonoBehaviour
	{
		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Toggle tog;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ProtectorManager protectorMngr;

		[Token(Token = "0x600103D")]
		[Address(RVA = "0x1FDAC78", Offset = "0x1FDAC78", VA = "0x1FDAC78")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0x1FDACD8", Offset = "0x1FDACD8", VA = "0x1FDACD8")]
		public void OnToggle()
		{
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0x1FDAD10", Offset = "0x1FDAD10", VA = "0x1FDAD10")]
		public ProtectorsToggle()
		{
		}
	}
	[Token(Token = "0x20002AC")]
	public class AllowCrankGrab : MonoBehaviour
	{
		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AllowCrankGrab instance;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshRenderer highlightRend;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool canGrab;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool isGrabbed;

		[Token(Token = "0x17000160")]
		public static bool CanGrab
		{
			[Token(Token = "0x6001040")]
			[Address(RVA = "0xD6A0FC", Offset = "0xD6A0FC", VA = "0xD6A0FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000161")]
		public static bool IsGrabbed
		{
			[Token(Token = "0x6001041")]
			[Address(RVA = "0xD6A158", Offset = "0xD6A158", VA = "0xD6A158")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001042")]
			[Address(RVA = "0xD6A1B4", Offset = "0xD6A1B4", VA = "0xD6A1B4")]
			set
			{
			}
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0xD6A218", Offset = "0xD6A218", VA = "0xD6A218")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0xD6A288", Offset = "0xD6A288", VA = "0xD6A288")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0xD6A378", Offset = "0xD6A378", VA = "0xD6A378")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0xD6A3D4", Offset = "0xD6A3D4", VA = "0xD6A3D4")]
		public static void turnOffHighlight()
		{
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0xD6A43C", Offset = "0xD6A43C", VA = "0xD6A43C")]
		public AllowCrankGrab()
		{
		}
	}
	[Token(Token = "0x20002AD")]
	public class AmbientAudioController : MonoBehaviour
	{
		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform ship;

		[Token(Token = "0x6001048")]
		[Address(RVA = "0xD6A878", Offset = "0xD6A878", VA = "0xD6A878")]
		private void Start()
		{
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0xD6A938", Offset = "0xD6A938", VA = "0xD6A938")]
		public AmbientAudioController()
		{
		}
	}
	[Token(Token = "0x20002AE")]
	public class AutoLoadScene : MonoBehaviour
	{
		[Token(Token = "0x2000501")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1080", Offset = "0xAC1080")]
		private sealed class <LoadSceneAsync>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int sceneNum;

			[Token(Token = "0x4001E7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AutoLoadScene <>4__this;

			[Token(Token = "0x4001E80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AsyncOperation <op>5__2;

			[Token(Token = "0x17000323")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FA8")]
				[Address(RVA = "0xD75D48", Offset = "0xD75D48", VA = "0xD75D48", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000324")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FAA")]
				[Address(RVA = "0xD75DB0", Offset = "0xD75DB0", VA = "0xD75DB0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FA5")]
			[Address(RVA = "0xD75B70", Offset = "0xD75B70", VA = "0xD75B70")]
			[DebuggerHidden]
			public <LoadSceneAsync>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001FA6")]
			[Address(RVA = "0xD75BB0", Offset = "0xD75BB0", VA = "0xD75BB0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FA7")]
			[Address(RVA = "0xD75BB4", Offset = "0xD75BB4", VA = "0xD75BB4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FA9")]
			[Address(RVA = "0xD75D50", Offset = "0xD75D50", VA = "0xD75D50", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float waitTimeSeconds;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int sceneNumToLoad;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool isFading;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float startTime;

		[Token(Token = "0x600104A")]
		[Address(RVA = "0xD75A74", Offset = "0xD75A74", VA = "0xD75A74")]
		private void Start()
		{
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0xD75AB4", Offset = "0xD75AB4", VA = "0xD75AB4")]
		private void LoadScene()
		{
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0xD75AE4", Offset = "0xD75AE4", VA = "0xD75AE4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACC8E0", Offset = "0xACC8E0")]
		private IEnumerator LoadSceneAsync(int sceneNum)
		{
			return null;
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0xD75B9C", Offset = "0xD75B9C", VA = "0xD75B9C")]
		public AutoLoadScene()
		{
		}
	}
	[Token(Token = "0x20002AF")]
	public class Barrel : MonoBehaviour
	{
		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Rigidbody rb;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 oldPos;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion oldRot;

		[Token(Token = "0x600104E")]
		[Address(RVA = "0xD762AC", Offset = "0xD762AC", VA = "0xD762AC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0xD76354", Offset = "0xD76354", VA = "0xD76354")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0xD764BC", Offset = "0xD764BC", VA = "0xD764BC")]
		public Barrel()
		{
		}
	}
	[Token(Token = "0x20002B0")]
	public class BarrelManager : MonoBehaviour
	{
		[Token(Token = "0x2000502")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1090", Offset = "0xAC1090")]
		private sealed class <Initialize>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BarrelManager <>4__this;

			[Token(Token = "0x17000325")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FAE")]
				[Address(RVA = "0xD76E08", Offset = "0xD76E08", VA = "0xD76E08", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000326")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FB0")]
				[Address(RVA = "0xD76E70", Offset = "0xD76E70", VA = "0xD76E70", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FAB")]
			[Address(RVA = "0xD76670", Offset = "0xD76670", VA = "0xD76670")]
			[DebuggerHidden]
			public <Initialize>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6001FAC")]
			[Address(RVA = "0xD76CAC", Offset = "0xD76CAC", VA = "0xD76CAC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FAD")]
			[Address(RVA = "0xD76CB0", Offset = "0xD76CB0", VA = "0xD76CB0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FAF")]
			[Address(RVA = "0xD76E10", Offset = "0xD76E10", VA = "0xD76E10", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static BarrelManager instance;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float areaSize;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int numBarrels;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpawnPool items;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SpawnPool vfx;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int maxBarrels;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform barrelPrefab;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<ExplodingBarrel> barrels;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TextMeshProUGUI NumBarrelsText;

		[Token(Token = "0x17000162")]
		public static SpawnPool VFX
		{
			[Token(Token = "0x6001051")]
			[Address(RVA = "0xD764C4", Offset = "0xD764C4", VA = "0xD764C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0xD76520", Offset = "0xD76520", VA = "0xD76520")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0xD76570", Offset = "0xD76570", VA = "0xD76570")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0xD765C8", Offset = "0xD765C8", VA = "0xD765C8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0xD765F4", Offset = "0xD765F4", VA = "0xD765F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACC944", Offset = "0xACC944")]
		private IEnumerator Initialize()
		{
			return null;
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0xD7669C", Offset = "0xD7669C", VA = "0xD7669C")]
		public void SpawnBarrels()
		{
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0xD7693C", Offset = "0xD7693C", VA = "0xD7693C")]
		private void RemoveAllBarrels()
		{
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0xD76A5C", Offset = "0xD76A5C", VA = "0xD76A5C")]
		public static void RemoveMe(ExplodingBarrel barrel, bool reset = false)
		{
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0xD76ACC", Offset = "0xD76ACC", VA = "0xD76ACC")]
		private void RemoveBarrel(ExplodingBarrel barrel, bool reset)
		{
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0xD76BD0", Offset = "0xD76BD0", VA = "0xD76BD0")]
		public void IncreaseBarrels()
		{
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0xD76C54", Offset = "0xD76C54", VA = "0xD76C54")]
		public void DecreaseBarrels()
		{
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0xD76C10", Offset = "0xD76C10", VA = "0xD76C10")]
		private void InitBarrelUi()
		{
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0xD76C94", Offset = "0xD76C94", VA = "0xD76C94")]
		public BarrelManager()
		{
		}
	}
	[Token(Token = "0x20002B1")]
	public class Barrels : MonoBehaviour
	{
		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Barrel[] barrels;

		[Token(Token = "0x600105E")]
		[Address(RVA = "0xD76E78", Offset = "0xD76E78", VA = "0xD76E78")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0xD76ED8", Offset = "0xD76ED8", VA = "0xD76ED8")]
		public void ResetBarrels()
		{
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0xD76F40", Offset = "0xD76F40", VA = "0xD76F40")]
		public Barrels()
		{
		}
	}
	[Token(Token = "0x20002B2")]
	public class Bobber : MonoBehaviour
	{
		[Token(Token = "0x2000503")]
		public delegate void BobberEnteredWater();

		[Token(Token = "0x2000504")]
		public delegate void BobberExitedWater();

		[Token(Token = "0x2000505")]
		private struct jointSettings
		{
			[Token(Token = "0x4001E84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Rigidbody connectedBody;

			[Token(Token = "0x4001E85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 anchor;

			[Token(Token = "0x4001E86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 connectedAnchor;

			[Token(Token = "0x4001E87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float springStrength;

			[Token(Token = "0x4001E88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float jointMinDistance;

			[Token(Token = "0x4001E89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float jointMaxDistance;
		}

		[Token(Token = "0x2000506")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC10A0", Offset = "0xAC10A0")]
		private sealed class <Init>d__84 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Bobber <>4__this;

			[Token(Token = "0x17000327")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FBC")]
				[Address(RVA = "0xCEE8DC", Offset = "0xCEE8DC", VA = "0xCEE8DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000328")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FBE")]
				[Address(RVA = "0xCEE944", Offset = "0xCEE944", VA = "0xCEE944", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FB9")]
			[Address(RVA = "0xCEE68C", Offset = "0xCEE68C", VA = "0xCEE68C")]
			[DebuggerHidden]
			public <Init>d__84(int <>1__state)
			{
			}

			[Token(Token = "0x6001FBA")]
			[Address(RVA = "0xCEE6B8", Offset = "0xCEE6B8", VA = "0xCEE6B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FBB")]
			[Address(RVA = "0xCEE6BC", Offset = "0xCEE6BC", VA = "0xCEE6BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FBD")]
			[Address(RVA = "0xCEE8E4", Offset = "0xCEE8E4", VA = "0xCEE8E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000507")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC10B0", Offset = "0xAC10B0")]
		private sealed class <CastCo>d__88 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Bobber <>4__this;

			[Token(Token = "0x4001E90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float speed;

			[Token(Token = "0x4001E91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <i>5__2;

			[Token(Token = "0x17000329")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FC2")]
				[Address(RVA = "0xCEDB38", Offset = "0xCEDB38", VA = "0xCEDB38", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700032A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FC4")]
				[Address(RVA = "0xCEDBA0", Offset = "0xCEDBA0", VA = "0xCEDBA0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FBF")]
			[Address(RVA = "0xCED4B8", Offset = "0xCED4B8", VA = "0xCED4B8")]
			[DebuggerHidden]
			public <CastCo>d__88(int <>1__state)
			{
			}

			[Token(Token = "0x6001FC0")]
			[Address(RVA = "0xCED4E4", Offset = "0xCED4E4", VA = "0xCED4E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FC1")]
			[Address(RVA = "0xCED4E8", Offset = "0xCED4E8", VA = "0xCED4E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FC3")]
			[Address(RVA = "0xCEDB40", Offset = "0xCEDB40", VA = "0xCEDB40", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000508")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC10C0", Offset = "0xAC10C0")]
		private sealed class <CastCourseCorrect>d__89 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Bobber <>4__this;

			[Token(Token = "0x1700032B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FC8")]
				[Address(RVA = "0xCEDF84", Offset = "0xCEDF84", VA = "0xCEDF84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700032C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FCA")]
				[Address(RVA = "0xCEDFEC", Offset = "0xCEDFEC", VA = "0xCEDFEC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FC5")]
			[Address(RVA = "0xCEDBA8", Offset = "0xCEDBA8", VA = "0xCEDBA8")]
			[DebuggerHidden]
			public <CastCourseCorrect>d__89(int <>1__state)
			{
			}

			[Token(Token = "0x6001FC6")]
			[Address(RVA = "0xCEDBD4", Offset = "0xCEDBD4", VA = "0xCEDBD4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FC7")]
			[Address(RVA = "0xCEDBD8", Offset = "0xCEDBD8", VA = "0xCEDBD8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FC9")]
			[Address(RVA = "0xCEDF8C", Offset = "0xCEDF8C", VA = "0xCEDF8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000509")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC10D0", Offset = "0xAC10D0")]
		private sealed class <BobberSnapBack>d__94 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Bobber <>4__this;

			[Token(Token = "0x4001E98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float times;

			[Token(Token = "0x4001E99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action callback;

			[Token(Token = "0x1700032D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FCE")]
				[Address(RVA = "0xCED448", Offset = "0xCED448", VA = "0xCED448", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700032E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FD0")]
				[Address(RVA = "0xCED4B0", Offset = "0xCED4B0", VA = "0xCED4B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FCB")]
			[Address(RVA = "0xCED048", Offset = "0xCED048", VA = "0xCED048")]
			[DebuggerHidden]
			public <BobberSnapBack>d__94(int <>1__state)
			{
			}

			[Token(Token = "0x6001FCC")]
			[Address(RVA = "0xCED074", Offset = "0xCED074", VA = "0xCED074", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FCD")]
			[Address(RVA = "0xCED078", Offset = "0xCED078", VA = "0xCED078", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FCF")]
			[Address(RVA = "0xCED450", Offset = "0xCED450", VA = "0xCED450", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200050A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC10E0", Offset = "0xAC10E0")]
		private sealed class <FishChurn>d__106 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Bobber <>4__this;

			[Token(Token = "0x4001E9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FriMinigameState state;

			[Token(Token = "0x1700032F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FD4")]
				[Address(RVA = "0xCEE61C", Offset = "0xCEE61C", VA = "0xCEE61C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000330")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FD6")]
				[Address(RVA = "0xCEE684", Offset = "0xCEE684", VA = "0xCEE684", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FD1")]
			[Address(RVA = "0xCEE424", Offset = "0xCEE424", VA = "0xCEE424")]
			[DebuggerHidden]
			public <FishChurn>d__106(int <>1__state)
			{
			}

			[Token(Token = "0x6001FD2")]
			[Address(RVA = "0xCEE450", Offset = "0xCEE450", VA = "0xCEE450", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FD3")]
			[Address(RVA = "0xCEE454", Offset = "0xCEE454", VA = "0xCEE454", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FD5")]
			[Address(RVA = "0xCEE624", Offset = "0xCEE624", VA = "0xCEE624", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200050B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC10F0", Offset = "0xAC10F0")]
		private sealed class <RunRageChurn>d__107 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Bobber <>4__this;

			[Token(Token = "0x4001EA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FriMinigameState state;

			[Token(Token = "0x17000331")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FDA")]
				[Address(RVA = "0xCEEE8C", Offset = "0xCEEE8C", VA = "0xCEEE8C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000332")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FDC")]
				[Address(RVA = "0xCEEEF4", Offset = "0xCEEEF4", VA = "0xCEEEF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FD7")]
			[Address(RVA = "0xCEEC94", Offset = "0xCEEC94", VA = "0xCEEC94")]
			[DebuggerHidden]
			public <RunRageChurn>d__107(int <>1__state)
			{
			}

			[Token(Token = "0x6001FD8")]
			[Address(RVA = "0xCEECC0", Offset = "0xCEECC0", VA = "0xCEECC0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FD9")]
			[Address(RVA = "0xCEECC4", Offset = "0xCEECC4", VA = "0xCEECC4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FDB")]
			[Address(RVA = "0xCEEE94", Offset = "0xCEEE94", VA = "0xCEEE94", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200050C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1100", Offset = "0xAC1100")]
		private sealed class <CheckBelowSurface>d__109 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Bobber <>4__this;

			[Token(Token = "0x17000333")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FE0")]
				[Address(RVA = "0xCEE230", Offset = "0xCEE230", VA = "0xCEE230", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000334")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FE2")]
				[Address(RVA = "0xCEE298", Offset = "0xCEE298", VA = "0xCEE298", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FDD")]
			[Address(RVA = "0xCEDFF4", Offset = "0xCEDFF4", VA = "0xCEDFF4")]
			[DebuggerHidden]
			public <CheckBelowSurface>d__109(int <>1__state)
			{
			}

			[Token(Token = "0x6001FDE")]
			[Address(RVA = "0xCEE020", Offset = "0xCEE020", VA = "0xCEE020", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FDF")]
			[Address(RVA = "0xCEE024", Offset = "0xCEE024", VA = "0xCEE024", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FE1")]
			[Address(RVA = "0xCEE238", Offset = "0xCEE238", VA = "0xCEE238", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200050D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1110", Offset = "0xAC1110")]
		private sealed class <CheckDistance>d__110 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Bobber <>4__this;

			[Token(Token = "0x17000335")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FE6")]
				[Address(RVA = "0xCEE3B4", Offset = "0xCEE3B4", VA = "0xCEE3B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000336")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FE8")]
				[Address(RVA = "0xCEE41C", Offset = "0xCEE41C", VA = "0xCEE41C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FE3")]
			[Address(RVA = "0xCEE2A0", Offset = "0xCEE2A0", VA = "0xCEE2A0")]
			[DebuggerHidden]
			public <CheckDistance>d__110(int <>1__state)
			{
			}

			[Token(Token = "0x6001FE4")]
			[Address(RVA = "0xCEE2CC", Offset = "0xCEE2CC", VA = "0xCEE2CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FE5")]
			[Address(RVA = "0xCEE2D0", Offset = "0xCEE2D0", VA = "0xCEE2D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FE7")]
			[Address(RVA = "0xCEE3BC", Offset = "0xCEE3BC", VA = "0xCEE3BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200050E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1120", Offset = "0xAC1120")]
		private sealed class <ReelIn>d__111 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Bobber <>4__this;

			[Token(Token = "0x17000337")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FEC")]
				[Address(RVA = "0xCEEC24", Offset = "0xCEEC24", VA = "0xCEEC24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000338")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FEE")]
				[Address(RVA = "0xCEEC8C", Offset = "0xCEEC8C", VA = "0xCEEC8C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FE9")]
			[Address(RVA = "0xCEE94C", Offset = "0xCEE94C", VA = "0xCEE94C")]
			[DebuggerHidden]
			public <ReelIn>d__111(int <>1__state)
			{
			}

			[Token(Token = "0x6001FEA")]
			[Address(RVA = "0xCEE978", Offset = "0xCEE978", VA = "0xCEE978", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FEB")]
			[Address(RVA = "0xCEE97C", Offset = "0xCEE97C", VA = "0xCEE97C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FED")]
			[Address(RVA = "0xCEEC2C", Offset = "0xCEEC2C", VA = "0xCEEC2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200050F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1130", Offset = "0xAC1130")]
		private sealed class <AddReelForceFixedUpdate>d__113 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Bobber <>4__this;

			[Token(Token = "0x17000339")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FF2")]
				[Address(RVA = "0xD7D42C", Offset = "0xD7D42C", VA = "0xD7D42C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700033A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FF4")]
				[Address(RVA = "0xD7D494", Offset = "0xD7D494", VA = "0xD7D494", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FEF")]
			[Address(RVA = "0xD79F48", Offset = "0xD79F48", VA = "0xD79F48")]
			[DebuggerHidden]
			public <AddReelForceFixedUpdate>d__113(int <>1__state)
			{
			}

			[Token(Token = "0x6001FF0")]
			[Address(RVA = "0xD7CD54", Offset = "0xD7CD54", VA = "0xD7CD54", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FF1")]
			[Address(RVA = "0xD7CD58", Offset = "0xD7CD58", VA = "0xD7CD58", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FF3")]
			[Address(RVA = "0xD7D434", Offset = "0xD7D434", VA = "0xD7D434", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000510")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1140", Offset = "0xAC1140")]
		private sealed class <AddFishForceFixedUpdate>d__115 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Bobber <>4__this;

			[Token(Token = "0x4001EB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 direction;

			[Token(Token = "0x1700033B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FF8")]
				[Address(RVA = "0xD7C9E8", Offset = "0xD7C9E8", VA = "0xD7C9E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700033C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FFA")]
				[Address(RVA = "0xD7CA50", Offset = "0xD7CA50", VA = "0xD7CA50", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FF5")]
			[Address(RVA = "0xD7A040", Offset = "0xD7A040", VA = "0xD7A040")]
			[DebuggerHidden]
			public <AddFishForceFixedUpdate>d__115(int <>1__state)
			{
			}

			[Token(Token = "0x6001FF6")]
			[Address(RVA = "0xD7C150", Offset = "0xD7C150", VA = "0xD7C150", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FF7")]
			[Address(RVA = "0xD7C154", Offset = "0xD7C154", VA = "0xD7C154", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FF9")]
			[Address(RVA = "0xD7C9F0", Offset = "0xD7C9F0", VA = "0xD7C9F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000511")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1150", Offset = "0xAC1150")]
		private sealed class <AddFishImpulseFixedUpdate>d__117 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Bobber <>4__this;

			[Token(Token = "0x4001EB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 direction;

			[Token(Token = "0x1700033D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FFE")]
				[Address(RVA = "0xD7CCE4", Offset = "0xD7CCE4", VA = "0xD7CCE4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700033E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002000")]
				[Address(RVA = "0xD7CD4C", Offset = "0xD7CD4C", VA = "0xD7CD4C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FFB")]
			[Address(RVA = "0xD7A138", Offset = "0xD7A138", VA = "0xD7A138")]
			[DebuggerHidden]
			public <AddFishImpulseFixedUpdate>d__117(int <>1__state)
			{
			}

			[Token(Token = "0x6001FFC")]
			[Address(RVA = "0xD7CA58", Offset = "0xD7CA58", VA = "0xD7CA58", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FFD")]
			[Address(RVA = "0xD7CA5C", Offset = "0xD7CA5C", VA = "0xD7CA5C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FFF")]
			[Address(RVA = "0xD7CCEC", Offset = "0xD7CCEC", VA = "0xD7CCEC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000512")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1160", Offset = "0xAC1160")]
		private sealed class <TeleportDestination>d__124 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Bobber <>4__this;

			[Token(Token = "0x4001EB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float distanceReduction;

			[Token(Token = "0x1700033F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002004")]
				[Address(RVA = "0xCEF570", Offset = "0xCEF570", VA = "0xCEF570", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000340")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002006")]
				[Address(RVA = "0xCEF5D8", Offset = "0xCEF5D8", VA = "0xCEF5D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002001")]
			[Address(RVA = "0xCEF138", Offset = "0xCEF138", VA = "0xCEF138")]
			[DebuggerHidden]
			public <TeleportDestination>d__124(int <>1__state)
			{
			}

			[Token(Token = "0x6002002")]
			[Address(RVA = "0xCEF164", Offset = "0xCEF164", VA = "0xCEF164", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002003")]
			[Address(RVA = "0xCEF168", Offset = "0xCEF168", VA = "0xCEF168", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002005")]
			[Address(RVA = "0xCEF578", Offset = "0xCEF578", VA = "0xCEF578", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000513")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1170", Offset = "0xAC1170")]
		private sealed class <AddRodForceFixedUpdate>d__127 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 direction;

			[Token(Token = "0x17000341")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600200A")]
				[Address(RVA = "0xCECFD8", Offset = "0xCECFD8", VA = "0xCECFD8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000342")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600200C")]
				[Address(RVA = "0xCED040", Offset = "0xCED040", VA = "0xCED040", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002007")]
			[Address(RVA = "0xCECCE4", Offset = "0xCECCE4", VA = "0xCECCE4")]
			[DebuggerHidden]
			public <AddRodForceFixedUpdate>d__127(int <>1__state)
			{
			}

			[Token(Token = "0x6002008")]
			[Address(RVA = "0xCECD10", Offset = "0xCECD10", VA = "0xCECD10", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002009")]
			[Address(RVA = "0xCECD14", Offset = "0xCECD14", VA = "0xCECD14", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600200B")]
			[Address(RVA = "0xCECFE0", Offset = "0xCECFE0", VA = "0xCECFE0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000514")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1180", Offset = "0xAC1180")]
		private sealed class <SetHookPosition>d__144 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Bobber <>4__this;

			[Token(Token = "0x4001EC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 Gotoposition;

			[Token(Token = "0x4001EC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float duration;

			[Token(Token = "0x4001EC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x4001EC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 <startPos>5__3;

			[Token(Token = "0x17000343")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002010")]
				[Address(RVA = "0xCEF0C8", Offset = "0xCEF0C8", VA = "0xCEF0C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000344")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002012")]
				[Address(RVA = "0xCEF130", Offset = "0xCEF130", VA = "0xCEF130", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600200D")]
			[Address(RVA = "0xCEEEFC", Offset = "0xCEEEFC", VA = "0xCEEEFC")]
			[DebuggerHidden]
			public <SetHookPosition>d__144(int <>1__state)
			{
			}

			[Token(Token = "0x600200E")]
			[Address(RVA = "0xCEEF28", Offset = "0xCEEF28", VA = "0xCEEF28", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600200F")]
			[Address(RVA = "0xCEEF2C", Offset = "0xCEEF2C", VA = "0xCEEF2C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002011")]
			[Address(RVA = "0xCEF0D0", Offset = "0xCEF0D0", VA = "0xCEF0D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000515")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1190", Offset = "0xAC1190")]
		private sealed class <ToggleCollider>d__148 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Bobber <>4__this;

			[Token(Token = "0x17000345")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002016")]
				[Address(RVA = "0xCEF6A4", Offset = "0xCEF6A4", VA = "0xCEF6A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000346")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002018")]
				[Address(RVA = "0xCEF70C", Offset = "0xCEF70C", VA = "0xCEF70C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002013")]
			[Address(RVA = "0xCEF5E0", Offset = "0xCEF5E0", VA = "0xCEF5E0")]
			[DebuggerHidden]
			public <ToggleCollider>d__148(int <>1__state)
			{
			}

			[Token(Token = "0x6002014")]
			[Address(RVA = "0xCEF60C", Offset = "0xCEF60C", VA = "0xCEF60C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002015")]
			[Address(RVA = "0xCEF610", Offset = "0xCEF610", VA = "0xCEF610", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002017")]
			[Address(RVA = "0xCEF6AC", Offset = "0xCEF6AC", VA = "0xCEF6AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Bobber instance;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private jointSettings jointSet;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Rigidbody rb;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform rodEnd;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AudioSource audio;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool isCasting;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SpawnPool vfx;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SpawnPool creaturePool;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public SpawnPool itemPool;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform fishFleeSplashPrefab;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform fishRunRageSplashPrefab;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public TrailRenderer tr;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool canPlayReelClick;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float rippleInterval;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float lastRipple;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool isJumping;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Tween jumpTween;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GameObject recoverBobber;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool canRecoverBobber;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		private bool deferSmallBite;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public GameObject smallBiteAlert;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public bool inBaitArea;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
		private bool inHotspot;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Transform baitHitVfx;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool inBaitAreaLastState;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float bobberToRodTipDistance;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float bobberToOriginDistance;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Collider col;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public GameObject model;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public PerlinMover mover;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private float reelPower;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private float reelMaxSpeed;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public float reelingSpeedMultiplier;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private float continuousRodReelTimeCounter;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float continuousRodRestTimeCounter;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private float attractionRadiusMultiplier;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private float attractionRadiusUpdateInterval;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private bool lastIsReeling;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public GameObject bobberPosition;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private bool doingBite;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public GameObject underwaterFish;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public float boostPowerReel;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public GameObject powerReelParticles;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public Transform hookedFish;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public bool isTakingFish;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Tween recoverFishTween;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public bool isTaken;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
		public bool isAttractive;

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x162")]
		public bool leanDirChangeBoost;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private CharmSO.CharmType m_CharmType;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private float bobberVelo;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		public bool debugFishForceDir;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public LineRenderer forceDebugLR;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public bool debugReelForceDir;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public LineRenderer reelForceDebugLR;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private Transform hookTrans;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private WaterInteractor waterInteractor;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static float staminaEffectiveness;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private bool isReeling;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public Transform teleportOrigin;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public Transform teleportDestination;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private float bobberMaxVelo;

		[Token(Token = "0x17000163")]
		public Transform rodTip
		{
			[Token(Token = "0x6001061")]
			[Address(RVA = "0xD77150", Offset = "0xD77150", VA = "0xD77150")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000164")]
		public static TrailRenderer trailRend
		{
			[Token(Token = "0x6001062")]
			[Address(RVA = "0xD77158", Offset = "0xD77158", VA = "0xD77158")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000165")]
		public bool IsJumping
		{
			[Token(Token = "0x6001063")]
			[Address(RVA = "0xD771CC", Offset = "0xD771CC", VA = "0xD771CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000166")]
		public float distanceToRodTip
		{
			[Token(Token = "0x6001064")]
			[Address(RVA = "0xD771D4", Offset = "0xD771D4", VA = "0xD771D4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000167")]
		public float distanceToOrigin
		{
			[Token(Token = "0x6001065")]
			[Address(RVA = "0xD771DC", Offset = "0xD771DC", VA = "0xD771DC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000168")]
		public CharmSO.CharmType CurrentCharmType
		{
			[Token(Token = "0x6001066")]
			[Address(RVA = "0xD771E4", Offset = "0xD771E4", VA = "0xD771E4")]
			get
			{
				return default(CharmSO.CharmType);
			}
		}

		[Token(Token = "0x14000049")]
		public static event BobberEnteredWater OnBobberEnteredWater
		{
			[Token(Token = "0x6001067")]
			[Address(RVA = "0xD771EC", Offset = "0xD771EC", VA = "0xD771EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC9A8", Offset = "0xACC9A8")]
			add
			{
			}
			[Token(Token = "0x6001068")]
			[Address(RVA = "0xD772DC", Offset = "0xD772DC", VA = "0xD772DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC9B8", Offset = "0xACC9B8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004A")]
		public static event BobberExitedWater OnBobberExitedWater
		{
			[Token(Token = "0x6001069")]
			[Address(RVA = "0xD773CC", Offset = "0xD773CC", VA = "0xD773CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC9C8", Offset = "0xACC9C8")]
			add
			{
			}
			[Token(Token = "0x600106A")]
			[Address(RVA = "0xD774BC", Offset = "0xD774BC", VA = "0xD774BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACC9D8", Offset = "0xACC9D8")]
			remove
			{
			}
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0xD775AC", Offset = "0xD775AC", VA = "0xD775AC")]
		public static float GetVelocity()
		{
			return default(float);
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0xD77620", Offset = "0xD77620", VA = "0xD77620")]
		private void Awake()
		{
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0xD7764C", Offset = "0xD7764C", VA = "0xD7764C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACC9E8", Offset = "0xACC9E8")]
		private IEnumerator Init()
		{
			return null;
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0xD776C8", Offset = "0xD776C8", VA = "0xD776C8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0xD7777C", Offset = "0xD7777C", VA = "0xD7777C")]
		public static void Cast(float speed)
		{
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0xD77810", Offset = "0xD77810", VA = "0xD77810")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACCA4C", Offset = "0xACCA4C")]
		private IEnumerator CastCo(float speed)
		{
			return null;
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0xD7789C", Offset = "0xD7789C", VA = "0xD7789C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACCAB0", Offset = "0xACCAB0")]
		private IEnumerator CastCourseCorrect()
		{
			return null;
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0xD77918", Offset = "0xD77918", VA = "0xD77918")]
		public static void AddJoint()
		{
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0xD77B24", Offset = "0xD77B24", VA = "0xD77B24")]
		public static void ResetBobber()
		{
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0xD782C8", Offset = "0xD782C8", VA = "0xD782C8")]
		private void BobberJump(float force)
		{
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0xD787F0", Offset = "0xD787F0", VA = "0xD787F0")]
		public void PerformSnapBack(float times, Action callback)
		{
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0xD7881C", Offset = "0xD7881C", VA = "0xD7881C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACCB14", Offset = "0xACCB14")]
		private IEnumerator BobberSnapBack(float times, Action callback)
		{
			return null;
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0xD788C4", Offset = "0xD788C4", VA = "0xD788C4")]
		public void SnapFailFallback()
		{
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0xD78B64", Offset = "0xD78B64", VA = "0xD78B64")]
		private void CompleteJump()
		{
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0xD78E24", Offset = "0xD78E24", VA = "0xD78E24")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0xD79498", Offset = "0xD79498", VA = "0xD79498")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0xD7974C", Offset = "0xD7974C", VA = "0xD7974C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0xD796EC", Offset = "0xD796EC", VA = "0xD796EC")]
		private void SetIsTaken()
		{
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0xD78234", Offset = "0xD78234", VA = "0xD78234")]
		public void ResetIsTaken()
		{
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0xD78BB4", Offset = "0xD78BB4", VA = "0xD78BB4")]
		private void MakeSplash(bool recoverFish = false)
		{
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0xD79750", Offset = "0xD79750", VA = "0xD79750")]
		private void MakeRipples()
		{
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0xD79964", Offset = "0xD79964", VA = "0xD79964")]
		private void MakeDisturbance()
		{
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0xD79AE8", Offset = "0xD79AE8", VA = "0xD79AE8")]
		private bool IsSameReelState(FriMinigameState state)
		{
			return default(bool);
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0xD79B74", Offset = "0xD79B74", VA = "0xD79B74")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACCB78", Offset = "0xACCB78")]
		public IEnumerator FishChurn(FriMinigameState state)
		{
			return null;
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0xD79C00", Offset = "0xD79C00", VA = "0xD79C00")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACCBDC", Offset = "0xACCBDC")]
		public IEnumerator RunRageChurn(FriMinigameState state)
		{
			return null;
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0xD79C8C", Offset = "0xD79C8C", VA = "0xD79C8C")]
		public void BigBiteChurn()
		{
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0xD79DA8", Offset = "0xD79DA8", VA = "0xD79DA8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACCC40", Offset = "0xACCC40")]
		private IEnumerator CheckBelowSurface()
		{
			return null;
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0xD79E24", Offset = "0xD79E24", VA = "0xD79E24")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACCCA4", Offset = "0xACCCA4")]
		private IEnumerator CheckDistance()
		{
			return null;
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0xD7941C", Offset = "0xD7941C", VA = "0xD7941C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACCD08", Offset = "0xACCD08")]
		private IEnumerator ReelIn()
		{
			return null;
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0xD79EA0", Offset = "0xD79EA0", VA = "0xD79EA0")]
		public void AddReelForce()
		{
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0xD79ECC", Offset = "0xD79ECC", VA = "0xD79ECC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACCD6C", Offset = "0xACCD6C")]
		private IEnumerator AddReelForceFixedUpdate()
		{
			return null;
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0xD79F74", Offset = "0xD79F74", VA = "0xD79F74")]
		public void AddFishForce(Vector3 direction)
		{
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0xD79FA0", Offset = "0xD79FA0", VA = "0xD79FA0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACCDD0", Offset = "0xACCDD0")]
		private IEnumerator AddFishForceFixedUpdate(Vector3 direction)
		{
			return null;
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0xD7A06C", Offset = "0xD7A06C", VA = "0xD7A06C")]
		public void AddFishImpulse(Vector3 direction)
		{
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0xD7A098", Offset = "0xD7A098", VA = "0xD7A098")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACCE34", Offset = "0xACCE34")]
		private IEnumerator AddFishImpulseFixedUpdate(Vector3 direction)
		{
			return null;
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0xD7A164", Offset = "0xD7A164", VA = "0xD7A164")]
		private void UpdateFishForceDebug(Vector3 fleeDir)
		{
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0xD7A330", Offset = "0xD7A330", VA = "0xD7A330")]
		private void SetForceDebugColor(Color color)
		{
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0xD7A3B8", Offset = "0xD7A3B8", VA = "0xD7A3B8")]
		private void UpdateReelForceDebug(Vector3 reelForceDir)
		{
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0xD7A5CC", Offset = "0xD7A5CC", VA = "0xD7A5CC")]
		private bool OutOfFishingCone(Vector3 forceDebugPos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0xD7A644", Offset = "0xD7A644", VA = "0xD7A644")]
		public void AddShockPullForce(float multiplier)
		{
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0xD7A828", Offset = "0xD7A828", VA = "0xD7A828")]
		public void Teleport(float distanceReduction)
		{
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0xD7A854", Offset = "0xD7A854", VA = "0xD7A854")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACCE98", Offset = "0xACCE98")]
		private IEnumerator TeleportDestination(float distanceReduction)
		{
			return null;
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0xD7A8E0", Offset = "0xD7A8E0", VA = "0xD7A8E0")]
		public bool DirectionOutOfBounds(Vector3 direction)
		{
			return default(bool);
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0xD7AAAC", Offset = "0xD7AAAC", VA = "0xD7AAAC")]
		public static void AddRodForce(Vector3 direction)
		{
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0xD7AB54", Offset = "0xD7AB54", VA = "0xD7AB54")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACCEFC", Offset = "0xACCEFC")]
		private IEnumerator AddRodForceFixedUpdate(Vector3 direction)
		{
			return null;
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0xD7ABE0", Offset = "0xD7ABE0", VA = "0xD7ABE0")]
		private void PositionRecoverBobber()
		{
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0xD7ACB0", Offset = "0xD7ACB0", VA = "0xD7ACB0")]
		private void CheckBobberDistance()
		{
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0xD7AFCC", Offset = "0xD7AFCC", VA = "0xD7AFCC")]
		private void CheckCanRecover()
		{
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0xD7B348", Offset = "0xD7B348", VA = "0xD7B348")]
		private void SetupRecoverBobber()
		{
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0xD7B214", Offset = "0xD7B214", VA = "0xD7B214")]
		private void StartReadyToRecover()
		{
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0xD78040", Offset = "0xD78040", VA = "0xD78040")]
		private void DisableRecoverBobber()
		{
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0xD785FC", Offset = "0xD785FC", VA = "0xD785FC")]
		private void RecoverBobber(float force = 0f)
		{
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0xD7B478", Offset = "0xD7B478", VA = "0xD7B478")]
		private void TrySubstitueTutFish()
		{
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0xD78C4C", Offset = "0xD78C4C", VA = "0xD78C4C")]
		public void SmallBite()
		{
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0xD7B590", Offset = "0xD7B590", VA = "0xD7B590")]
		public void BigBite()
		{
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0xD7B66C", Offset = "0xD7B66C", VA = "0xD7B66C")]
		public void Hooked()
		{
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0xD7B7B4", Offset = "0xD7B7B4", VA = "0xD7B7B4")]
		public static void setTrigger(bool state)
		{
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0xD78078", Offset = "0xD78078", VA = "0xD78078")]
		public static void SetHidden(bool state)
		{
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0xD7B838", Offset = "0xD7B838", VA = "0xD7B838")]
		public static void SpawnSelectedFish(FishTypeSO fishType, [Optional] Transform trns)
		{
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0xD7BAC0", Offset = "0xD7BAC0", VA = "0xD7BAC0")]
		public static void ReparentHookTrans(Transform trns)
		{
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0xD7BB90", Offset = "0xD7BB90", VA = "0xD7BB90")]
		public static void DespawnSelectedFish()
		{
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0xD7BD50", Offset = "0xD7BD50", VA = "0xD7BD50")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACCF60", Offset = "0xACCF60")]
		private IEnumerator SetHookPosition(Vector3 Gotoposition, float duration)
		{
			return null;
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0xD79334", Offset = "0xD79334", VA = "0xD79334")]
		private void StartBobberAttraction()
		{
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0xD781C0", Offset = "0xD781C0", VA = "0xD781C0")]
		private void StopBobberAttraction()
		{
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0xD7BDF4", Offset = "0xD7BDF4", VA = "0xD7BDF4")]
		private void UpdateAttractionRadius()
		{
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0xD7BFB0", Offset = "0xD7BFB0", VA = "0xD7BFB0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACCFC4", Offset = "0xACCFC4")]
		private IEnumerator ToggleCollider()
		{
			return null;
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0xD7C02C", Offset = "0xD7C02C", VA = "0xD7C02C")]
		public float GetAttractionRadius()
		{
			return default(float);
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0xD7B418", Offset = "0xD7B418", VA = "0xD7B418")]
		private void BossFishCaught()
		{
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0xD7C064", Offset = "0xD7C064", VA = "0xD7C064")]
		public Bobber()
		{
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0xD7C0FC", Offset = "0xD7C0FC", VA = "0xD7C0FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE028", Offset = "0xACE028")]
		private void <BobberJump>b__92_0()
		{
		}

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0xD7C100", Offset = "0xD7C100", VA = "0xD7C100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE038", Offset = "0xACE038")]
		private void <SnapFailFallback>b__95_0()
		{
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0xD7C104", Offset = "0xD7C104", VA = "0xD7C104")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE048", Offset = "0xACE048")]
		private void <SmallBite>b__136_0()
		{
		}
	}
	[Token(Token = "0x20002B3")]
	public class Bobbing : MonoBehaviour
	{
		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Tween bobTween;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Tween rotTween;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float duration;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float rotation;

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0xCF044C", Offset = "0xCF044C", VA = "0xCF044C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0xCF0450", Offset = "0xCF0450", VA = "0xCF0450")]
		private void DoBob()
		{
		}

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0xCF0610", Offset = "0xCF0610", VA = "0xCF0610")]
		public Bobbing()
		{
		}
	}
	[Token(Token = "0x20002B4")]
	public class CharmModel : MonoBehaviour
	{
		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CharmModel instance;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform model;

		[Token(Token = "0x17000169")]
		public static Transform Model
		{
			[Token(Token = "0x60010B7")]
			[Address(RVA = "0xCF8748", Offset = "0xCF8748", VA = "0xCF8748")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0xCF87A4", Offset = "0xCF87A4", VA = "0xCF87A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0xCF87FC", Offset = "0xCF87FC", VA = "0xCF87FC")]
		public CharmModel()
		{
		}
	}
	[Token(Token = "0x20002B5")]
	public class GetCloudPathController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000516")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC11A0", Offset = "0xAC11A0")]
		private sealed class <>c
		{
			[Token(Token = "0x4001EC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001EC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Message<PlatformInitialize>.Callback <>9__3_0;

			[Token(Token = "0x600201A")]
			[Address(RVA = "0xE00D24", Offset = "0xE00D24", VA = "0xE00D24")]
			public <>c()
			{
			}

			[Token(Token = "0x600201B")]
			[Address(RVA = "0xE00D2C", Offset = "0xE00D2C", VA = "0xE00D2C")]
			internal void <GetRemotePath>b__3_0(Message<PlatformInitialize> r)
			{
			}
		}

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayerProgressSO PlayerProgressSO;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string CloudPath;

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0xE00930", Offset = "0xE00930", VA = "0xE00930")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0xE00934", Offset = "0xE00934", VA = "0xE00934")]
		private void GetRemotePath()
		{
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0xE00AD0", Offset = "0xE00AD0", VA = "0xE00AD0")]
		public void QuitAndSaveInRemote()
		{
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0xE00B30", Offset = "0xE00B30", VA = "0xE00B30")]
		public GetCloudPathController()
		{
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0xE00B90", Offset = "0xE00B90", VA = "0xE00B90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE058", Offset = "0xACE058")]
		private void <GetRemotePath>b__3_1(Message<string> res)
		{
		}
	}
	[Token(Token = "0x20002B6")]
	public class UI_CraftingController : MonoBehaviour
	{
		[Token(Token = "0x2000517")]
		public delegate bool CraftingAction(CraftingRecipesSO craftingRecipes, int multiple);

		[Token(Token = "0x2000518")]
		public delegate void CraftingSuccessAction();

		[Token(Token = "0x2000519")]
		public delegate void CraftingFailedAction();

		[Token(Token = "0x200051A")]
		public delegate void UpdateNewRecipeAction(int newRecipeCount);

		[Token(Token = "0x200051B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC11B0", Offset = "0xAC11B0")]
		private sealed class <>c__DisplayClass72_0
		{
			[Token(Token = "0x4001EC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CraftingRecipesSO recipe;

			[Token(Token = "0x4001ECA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UI_CraftingController <>4__this;

			[Token(Token = "0x600202C")]
			[Address(RVA = "0xD1CAB4", Offset = "0xD1CAB4", VA = "0xD1CAB4")]
			public <>c__DisplayClass72_0()
			{
			}

			[Token(Token = "0x600202D")]
			[Address(RVA = "0xD1E054", Offset = "0xD1E054", VA = "0xD1E054")]
			internal void <ChangeRecipe>b__0()
			{
			}
		}

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static UI_CraftingController Instance;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CraftingRecipesSO[] Recipes;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Sprite DefaultIcon;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite ErrorIcon;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UI_CraftingIngredient[] ItemIngredients;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Localize ItemName;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Localize ItemDescription;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Image ItemDetailIcon;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UI_CraftingItem[] ItemIcon;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button ItemCraftButton;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject ItemDetails;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject ItemPage;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject NewAllIcon;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject NewLureIcon;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject NewRodIcon;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private GameObject NewCharmIcon;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private GameObject NewDecoIcon;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private TMP_Text NewAllCount;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private TMP_Text NewLureCount;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private TMP_Text NewRodCount;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private TMP_Text NewCharmCount;

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private TMP_Text NewDecoCount;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Button AllButton;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Button LureButton;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private Button RodButton;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Button CharmButton;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private Button DecoButton;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private Color EnoughIngredients;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private Color NotEnoughIngredients;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private TMP_Text CraftedItemCount;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private GameObject DetailNewIcon;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private GameObject CraftingSuccessPopup;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private Image CraftingSuccessIcon;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private Localize CraftingSuccessName;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private Localize CraftingSuccessDescription;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private Button ArrowNext;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private Button ArrowPrev;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private GameObject InfoPanel;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private int m_index;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private List<CraftingRecipesSO> m_Recipes;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private List<CraftingRecipesSO> currentRecipes;

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private int m_multiple;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private CraftingRecipesSO awaitCraftingOfRecipe;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private ItemTypeSO m_itemType;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private int ListAmount;

		[Token(Token = "0x1400004B")]
		public static event CraftingAction OnCraftStarted
		{
			[Token(Token = "0x60010BF")]
			[Address(RVA = "0xD1A980", Offset = "0xD1A980", VA = "0xD1A980")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE068", Offset = "0xACE068")]
			add
			{
			}
			[Token(Token = "0x60010C0")]
			[Address(RVA = "0xD1AA38", Offset = "0xD1AA38", VA = "0xD1AA38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE078", Offset = "0xACE078")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004C")]
		public static event CraftingSuccessAction OnCraftFX
		{
			[Token(Token = "0x60010C1")]
			[Address(RVA = "0xD1AAF0", Offset = "0xD1AAF0", VA = "0xD1AAF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE088", Offset = "0xACE088")]
			add
			{
			}
			[Token(Token = "0x60010C2")]
			[Address(RVA = "0xD1ABA8", Offset = "0xD1ABA8", VA = "0xD1ABA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE098", Offset = "0xACE098")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004D")]
		public static event CraftingFailedAction OnCraftFailFX
		{
			[Token(Token = "0x60010C3")]
			[Address(RVA = "0xD1AC60", Offset = "0xD1AC60", VA = "0xD1AC60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE0A8", Offset = "0xACE0A8")]
			add
			{
			}
			[Token(Token = "0x60010C4")]
			[Address(RVA = "0xD1AD18", Offset = "0xD1AD18", VA = "0xD1AD18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE0B8", Offset = "0xACE0B8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004E")]
		public static event UpdateNewRecipeAction OnNewRecipeUpdated
		{
			[Token(Token = "0x60010C5")]
			[Address(RVA = "0xD1ADD0", Offset = "0xD1ADD0", VA = "0xD1ADD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE0C8", Offset = "0xACE0C8")]
			add
			{
			}
			[Token(Token = "0x60010C6")]
			[Address(RVA = "0xD1AE88", Offset = "0xD1AE88", VA = "0xD1AE88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE0D8", Offset = "0xACE0D8")]
			remove
			{
			}
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0xD1AF40", Offset = "0xD1AF40", VA = "0xD1AF40")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0xD1B0AC", Offset = "0xD1B0AC", VA = "0xD1B0AC")]
		private void Start()
		{
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0xD1B3D8", Offset = "0xD1B3D8", VA = "0xD1B3D8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0xD1B14C", Offset = "0xD1B14C", VA = "0xD1B14C")]
		private void SetMenuNewIcon()
		{
		}

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0xD1B658", Offset = "0xD1B658", VA = "0xD1B658")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0xD1B704", Offset = "0xD1B704", VA = "0xD1B704")]
		private void EventHub_OnSummonFP()
		{
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0xD1B98C", Offset = "0xD1B98C", VA = "0xD1B98C")]
		private void GenerateRecipeList(ItemTypeSO itemType)
		{
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0xD1B70C", Offset = "0xD1B70C", VA = "0xD1B70C")]
		public void OnTabClick(ItemTypeSO itemType)
		{
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0xD1C750", Offset = "0xD1C750", VA = "0xD1C750")]
		private void setArrows()
		{
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0xD1C870", Offset = "0xD1C870", VA = "0xD1C870")]
		public void OnIncreaseCharm()
		{
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0xD1C994", Offset = "0xD1C994", VA = "0xD1C994")]
		public void OnDecreaseCharm()
		{
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0xD1BF7C", Offset = "0xD1BF7C", VA = "0xD1BF7C")]
		private void ChangeRecipe(bool isOnShip = false)
		{
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0xD1CABC", Offset = "0xD1CABC", VA = "0xD1CABC")]
		public void onItemClick(CraftingRecipesSO recipe)
		{
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0xD1D5C0", Offset = "0xD1D5C0", VA = "0xD1D5C0")]
		public void OnCreate()
		{
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0xD1DAE4", Offset = "0xD1DAE4", VA = "0xD1DAE4")]
		public void OnItemCrafted(CraftingRecipesSO recipeCrafted)
		{
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0xD1DBE4", Offset = "0xD1DBE4", VA = "0xD1DBE4")]
		private void CraftSuccessFX()
		{
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0xD1DC48", Offset = "0xD1DC48", VA = "0xD1DC48")]
		public void OnCreateEquipment()
		{
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0xD1DD30", Offset = "0xD1DD30", VA = "0xD1DD30")]
		public static void CraftingFailed()
		{
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0xD17E5C", Offset = "0xD17E5C", VA = "0xD17E5C")]
		public void ResetRecipes()
		{
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0xD1DC28", Offset = "0xD1DC28", VA = "0xD1DC28")]
		public void EnableCraftButton()
		{
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0xD1DF9C", Offset = "0xD1DF9C", VA = "0xD1DF9C")]
		public UI_CraftingController()
		{
		}
	}
	[Token(Token = "0x20002B7")]
	public class UI_CraftingIngredient : MonoBehaviour
	{
		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Localize Name;

		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TMP_Text Name_TMP;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TMP_Text Amount;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image Icon;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Localize Tooltip;

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0xD1E4A0", Offset = "0xD1E4A0", VA = "0xD1E4A0")]
		public UI_CraftingIngredient()
		{
		}
	}
	[Token(Token = "0x20002B8")]
	public class UI_CraftingItem : MonoBehaviour
	{
		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject New;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isNew;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject Check;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject Outline;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image QuestionMark;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Image Locker;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Image Bg;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Button btn;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public CraftingRecipesSO recipe;

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0xD1E4A8", Offset = "0xD1E4A8", VA = "0xD1E4A8")]
		public UI_CraftingItem()
		{
		}
	}
	[Token(Token = "0x20002B9")]
	public class UI_CraftingRodItem : MonoBehaviour
	{
		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject New;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject Check;

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image Icon;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image QuestionMark;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Button btn;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Localize RodName;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public CraftingRecipesSO recipe;

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0xD1E4B0", Offset = "0xD1E4B0", VA = "0xD1E4B0")]
		public UI_CraftingRodItem()
		{
		}
	}
	[Token(Token = "0x20002BA")]
	public class CutsceneController : MonoBehaviour
	{
		[Token(Token = "0x200051C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC11C0", Offset = "0xAC11C0")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4001ECB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AsyncOperation async;

			[Token(Token = "0x600202E")]
			[Address(RVA = "0xCFF3C0", Offset = "0xCFF3C0", VA = "0xCFF3C0")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x600202F")]
			[Address(RVA = "0xCFF3C8", Offset = "0xCFF3C8", VA = "0xCFF3C8")]
			internal bool <LoadAni>b__0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200051D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC11D0", Offset = "0xAC11D0")]
		private sealed class <LoadAni>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001ECC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001ECD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001ECE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CutsceneController <>4__this;

			[Token(Token = "0x4001ECF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string scene;

			[Token(Token = "0x17000347")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002033")]
				[Address(RVA = "0xCFF644", Offset = "0xCFF644", VA = "0xCFF644", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000348")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002035")]
				[Address(RVA = "0xCFF6AC", Offset = "0xCFF6AC", VA = "0xCFF6AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002030")]
			[Address(RVA = "0xCFE4A8", Offset = "0xCFE4A8", VA = "0xCFE4A8")]
			[DebuggerHidden]
			public <LoadAni>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6002031")]
			[Address(RVA = "0xCFF3E4", Offset = "0xCFF3E4", VA = "0xCFF3E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002032")]
			[Address(RVA = "0xCFF3E8", Offset = "0xCFF3E8", VA = "0xCFF3E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002034")]
			[Address(RVA = "0xCFF64C", Offset = "0xCFF64C", VA = "0xCFF64C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200051E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC11E0", Offset = "0xAC11E0")]
		private sealed class <OpenMap>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001ED0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001ED1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001ED2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string locBCID;

			[Token(Token = "0x17000349")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002039")]
				[Address(RVA = "0xCFF7E8", Offset = "0xCFF7E8", VA = "0xCFF7E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700034A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600203B")]
				[Address(RVA = "0xCFF850", Offset = "0xCFF850", VA = "0xCFF850", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002036")]
			[Address(RVA = "0xCFF314", Offset = "0xCFF314", VA = "0xCFF314")]
			[DebuggerHidden]
			public <OpenMap>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x6002037")]
			[Address(RVA = "0xCFF6B4", Offset = "0xCFF6B4", VA = "0xCFF6B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002038")]
			[Address(RVA = "0xCFF6B8", Offset = "0xCFF6B8", VA = "0xCFF6B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600203A")]
			[Address(RVA = "0xCFF7F0", Offset = "0xCFF7F0", VA = "0xCFF7F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CutsceneController Instance;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SignalAsset timelineStartedSignal;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SignalAsset timelineFinishedSignal;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent timelineStartedReaction;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent timelineFinishedReaction;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string currentAniScene;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PlayableDirector currentTimeline;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool SpecialCutscene;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool gameCompleted;

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0xCFC158", Offset = "0xCFC158", VA = "0xCFC158")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0xCFC880", Offset = "0xCFC880", VA = "0xCFC880")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0xCFCE94", Offset = "0xCFCE94", VA = "0xCFCE94")]
		public void OnTimelineStarted()
		{
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0xCFCEFC", Offset = "0xCFCEFC", VA = "0xCFCEFC")]
		public void OnTimelineFinished()
		{
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0xCFCF70", Offset = "0xCFCF70", VA = "0xCFCF70")]
		public void OnCutsceneLoaded()
		{
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0xCFD4C8", Offset = "0xCFD4C8", VA = "0xCFD4C8")]
		private void OnPlayerLocationChange()
		{
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0xCFDF4C", Offset = "0xCFDF4C", VA = "0xCFDF4C")]
		private void TryTriggerCutscene()
		{
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0xCFE3C4", Offset = "0xCFE3C4", VA = "0xCFE3C4")]
		public void ClearCutscene()
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0xCFE280", Offset = "0xCFE280", VA = "0xCFE280")]
		public void LoadAniScene(string sceneName, bool isSpecialCutscene = false)
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0xCFE410", Offset = "0xCFE410", VA = "0xCFE410")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACE0E8", Offset = "0xACE0E8")]
		private IEnumerator LoadAni(string scene)
		{
			return null;
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0xCFDDAC", Offset = "0xCFDDAC", VA = "0xCFDDAC")]
		public void UnloadAniScenes()
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0xCFE600", Offset = "0xCFE600", VA = "0xCFE600")]
		private void CastArmed()
		{
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0xCFE604", Offset = "0xCFE604", VA = "0xCFE604")]
		private void OnFishHooked_003()
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0xCFE714", Offset = "0xCFE714", VA = "0xCFE714")]
		private void OnFishCaught(FpFish fish, bool isCheating)
		{
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0xCFE718", Offset = "0xCFE718", VA = "0xCFE718")]
		private void OnFishKept(FpFish fish)
		{
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0xCFE71C", Offset = "0xCFE71C", VA = "0xCFE71C")]
		private void OnFishReleased(FpFish fish)
		{
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0xCFE720", Offset = "0xCFE720", VA = "0xCFE720")]
		private void OnFishTaken(FpFish fish)
		{
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0xCFE724", Offset = "0xCFE724", VA = "0xCFE724")]
		private void OnPlayerLureEquip_04(LureSO lure)
		{
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0xCFDC04", Offset = "0xCFDC04", VA = "0xCFDC04")]
		private void AllowInteraction()
		{
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0xCFE80C", Offset = "0xCFE80C", VA = "0xCFE80C")]
		private void DisallowInteraction()
		{
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0xCFCF74", Offset = "0xCFCF74", VA = "0xCFCF74")]
		public void AttachCustomEventTriggers()
		{
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0xCFD4F0", Offset = "0xCFD4F0", VA = "0xCFD4F0")]
		private void DetachCustomEventTriggers()
		{
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0xCFF234", Offset = "0xCFF234", VA = "0xCFF234")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACE14C", Offset = "0xACE14C")]
		private IEnumerator OpenMap(string locBCID)
		{
			return null;
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0xCFF340", Offset = "0xCFF340", VA = "0xCFF340")]
		private void ContinueTimeline()
		{
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0xCFF34C", Offset = "0xCFF34C", VA = "0xCFF34C")]
		public void Play()
		{
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0xCFF350", Offset = "0xCFF350", VA = "0xCFF350")]
		public void Pause()
		{
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0xCFF354", Offset = "0xCFF354", VA = "0xCFF354")]
		private void ReturnRod()
		{
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0xCFF3B8", Offset = "0xCFF3B8", VA = "0xCFF3B8")]
		public CutsceneController()
		{
		}
	}
	[Token(Token = "0x20002BB")]
	public class UI_CutsceneController : MonoBehaviour
	{
		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image MainPanel;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Localize MainPanelText;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image ActionPanel;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image SkipPanel;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button CutsceneDismissButton;

		[Token(Token = "0x40012D7")]
		private const int buttonCharacterLimit = 55;

		[Token(Token = "0x40012D8")]
		private const float buttonMinimumWidth = 800f;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UI_CutsceneController Instance;

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0xD1E4B8", Offset = "0xD1E4B8", VA = "0xD1E4B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0xD1E510", Offset = "0xD1E510", VA = "0xD1E510")]
		private void Start()
		{
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0xD1E514", Offset = "0xD1E514", VA = "0xD1E514")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0xD1E518", Offset = "0xD1E518", VA = "0xD1E518")]
		private void OnCutsceneFinished(bool isSpecialCutscene)
		{
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0xD1E51C", Offset = "0xD1E51C", VA = "0xD1E51C")]
		private void EventHub_OnMissionLoad(MissionSO mission)
		{
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0xD17F34", Offset = "0xD17F34", VA = "0xD17F34")]
		public static void ResetCutscene()
		{
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0xD1E520", Offset = "0xD1E520", VA = "0xD1E520")]
		private void SetupContinueButton(MissionSO mission)
		{
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0xD1E7C0", Offset = "0xD1E7C0", VA = "0xD1E7C0")]
		public UI_CutsceneController()
		{
		}
	}
	[Token(Token = "0x20002BC")]
	public class FishPoolManager : MonoBehaviour
	{
		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FishPoolSO[] Pools;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Text PoolNow;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UpdateFishDataDebug updateFishDataDebug;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int index;

		[Token(Token = "0x6001103")]
		[Address(RVA = "0xE75668", Offset = "0xE75668", VA = "0xE75668")]
		private void Start()
		{
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0xE7566C", Offset = "0xE7566C", VA = "0xE7566C")]
		public void OnPoolNext()
		{
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0xE756A0", Offset = "0xE756A0", VA = "0xE756A0")]
		public void OnPoolPrevious()
		{
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0xE7569C", Offset = "0xE7569C", VA = "0xE7569C")]
		private void ChangePool()
		{
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0xE756D0", Offset = "0xE756D0", VA = "0xE756D0")]
		private void SetPool()
		{
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0xE7576C", Offset = "0xE7576C", VA = "0xE7576C")]
		public FishPoolManager()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	public class Test_GettingFishController : MonoBehaviour
	{
		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FishTypeSO[] fish;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Localize FishName;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TMP_Text FishWeight;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MissionSO[] Mission;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Localize MissionName;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TMP_Text MissionBCID;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ItemSO[] Item;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private ItemSO[] Recipes;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TMP_Text ItemName;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private TMP_Text ItemAmount;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int m_index;

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float m_star;

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int m_Mission_index;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int m_Item_index;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int m_Item_Amount;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Dictionary<ItemSO, CraftingRecipesSO> m_itemCraft_Dic;

		[Token(Token = "0x6001109")]
		[Address(RVA = "0xD16D20", Offset = "0xD16D20", VA = "0xD16D20")]
		private void Awake()
		{
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0xD16EEC", Offset = "0xD16EEC", VA = "0xD16EEC")]
		private void Start()
		{
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0xD1700C", Offset = "0xD1700C", VA = "0xD1700C")]
		public void OnIncreaseFish()
		{
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0xD17074", Offset = "0xD17074", VA = "0xD17074")]
		public void OnDecreaseFish()
		{
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0xD170EC", Offset = "0xD170EC", VA = "0xD170EC")]
		public void OnIncreaseWeight()
		{
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0xD17114", Offset = "0xD17114", VA = "0xD17114")]
		public void OnDecreaseWeight()
		{
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0xD1713C", Offset = "0xD1713C", VA = "0xD1713C")]
		public void OnGetFish()
		{
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0xD172B0", Offset = "0xD172B0", VA = "0xD172B0")]
		private void FishCaught(FpFish fishtype)
		{
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0xD17398", Offset = "0xD17398", VA = "0xD17398")]
		private void LootCrateCaught(LpCrate crate)
		{
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0xD17494", Offset = "0xD17494", VA = "0xD17494")]
		public void OnIncreaseMission()
		{
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0xD17548", Offset = "0xD17548", VA = "0xD17548")]
		public void OnDecreaseMission()
		{
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0xD1760C", Offset = "0xD1760C", VA = "0xD1760C")]
		public void OnSetMission()
		{
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0xD180B0", Offset = "0xD180B0", VA = "0xD180B0")]
		public void OnIncreaseItem()
		{
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0xD18120", Offset = "0xD18120", VA = "0xD18120")]
		public void OnDecreaseItem()
		{
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0xD181A0", Offset = "0xD181A0", VA = "0xD181A0")]
		public void OnGetItem()
		{
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0xD182A4", Offset = "0xD182A4", VA = "0xD182A4")]
		public void OnIncreaseItemAmount()
		{
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0xD182BC", Offset = "0xD182BC", VA = "0xD182BC")]
		public void OnDecreaseItemAmount()
		{
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0xD182DC", Offset = "0xD182DC", VA = "0xD182DC")]
		public void OnResetProgress()
		{
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0xD16EC0", Offset = "0xD16EC0", VA = "0xD16EC0")]
		private void ChangeOnUI(TMP_Text _Text, string str)
		{
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0xD16E74", Offset = "0xD16E74", VA = "0xD16E74")]
		private void ChangeOnUI(TMP_Text _Text, float str)
		{
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0xD16E54", Offset = "0xD16E54", VA = "0xD16E54")]
		private void ChangeOnUI(Localize localize, string str)
		{
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0xD1849C", Offset = "0xD1849C", VA = "0xD1849C")]
		public void OnUnlockAllLocation()
		{
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0xD18730", Offset = "0xD18730", VA = "0xD18730")]
		public void OnActiveDebugUI(bool b)
		{
		}

		[Token(Token = "0x6001120")]
		[Address(RVA = "0xD18870", Offset = "0xD18870", VA = "0xD18870")]
		public void OnActiveInfinityBoost(bool b)
		{
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0xD189B0", Offset = "0xD189B0", VA = "0xD189B0")]
		public void OnChangeItemToRecipe()
		{
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0xD18AA0", Offset = "0xD18AA0", VA = "0xD18AA0")]
		public void OnUnlockAllItems()
		{
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0xD18B18", Offset = "0xD18B18", VA = "0xD18B18")]
		public void OnUnlockAllRecipes()
		{
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0xD18B90", Offset = "0xD18B90", VA = "0xD18B90")]
		public void OnUnlockAllFish()
		{
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0xD18D14", Offset = "0xD18D14", VA = "0xD18D14")]
		public Test_GettingFishController()
		{
		}
	}
	[Token(Token = "0x20002BE")]
	[ExecuteInEditMode]
	public class UI_AnimationSceneController : MonoBehaviour
	{
		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Dropdown aniScenesDropdown;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Button aniScenePlayBtn;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button aniScenePauseBtn;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button aniSceneRewindBtn;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<string> aniScenes;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private PlayerProgressSO PlayerProgress;

		[Token(Token = "0x6001126")]
		[Address(RVA = "0xD19B24", Offset = "0xD19B24", VA = "0xD19B24")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0xD19C40", Offset = "0xD19C40", VA = "0xD19C40")]
		private void Start()
		{
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0xD19E50", Offset = "0xD19E50", VA = "0xD19E50")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0xD19C44", Offset = "0xD19C44", VA = "0xD19C44")]
		private void SetOptions()
		{
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0xD19EB4", Offset = "0xD19EB4", VA = "0xD19EB4")]
		public void SetAniScene(int option)
		{
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0xD19F68", Offset = "0xD19F68", VA = "0xD19F68")]
		private void OnPlay()
		{
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0xD19FC4", Offset = "0xD19FC4", VA = "0xD19FC4")]
		private void OnPause()
		{
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0xD1A020", Offset = "0xD1A020", VA = "0xD1A020")]
		private void OnRewind()
		{
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0xD1A07C", Offset = "0xD1A07C", VA = "0xD1A07C")]
		public UI_AnimationSceneController()
		{
		}
	}
	[Token(Token = "0x20002BF")]
	public class UpdateFishDataDebug : MonoBehaviour
	{
		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text[] FishDatas;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image[] FishImage;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TMP_Text PoolInfo;

		[Token(Token = "0x600112F")]
		[Address(RVA = "0xE1AC08", Offset = "0xE1AC08", VA = "0xE1AC08")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0xE1ACB4", Offset = "0xE1ACB4", VA = "0xE1ACB4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0xE1BBF4", Offset = "0xE1BBF4", VA = "0xE1BBF4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0xE1BCA0", Offset = "0xE1BCA0", VA = "0xE1BCA0")]
		private void OnPoolChanged()
		{
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0xE1ACB8", Offset = "0xE1ACB8", VA = "0xE1ACB8")]
		public void UpdateData()
		{
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0xE1BCA4", Offset = "0xE1BCA4", VA = "0xE1BCA4")]
		public UpdateFishDataDebug()
		{
		}
	}
	[Token(Token = "0x20002C0")]
	public class UpdateHookedDebug : MonoBehaviour
	{
		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI waitTime;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI selectedFish;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI selectedFishDifficulty;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI selectedFishStars;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI selectedFishDangerousZone;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshProUGUI timeSpentReeling;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TextMeshProUGUI timeSpentTotal;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool ShowLootCrate;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private FishHookMinigame fishHook;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float reelInMgStartTime;

		[Token(Token = "0x6001135")]
		[Address(RVA = "0xE1BCAC", Offset = "0xE1BCAC", VA = "0xE1BCAC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0xE1BDAC", Offset = "0xE1BDAC", VA = "0xE1BDAC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0xE1BE58", Offset = "0xE1BE58", VA = "0xE1BE58")]
		private void Update()
		{
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0xE1BFC8", Offset = "0xE1BFC8", VA = "0xE1BFC8")]
		private void UpdateStats()
		{
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0xE1BFCC", Offset = "0xE1BFCC", VA = "0xE1BFCC")]
		public void OnWaitTimeClick(bool b)
		{
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0xE1BFEC", Offset = "0xE1BFEC", VA = "0xE1BFEC")]
		public void OnShowLootCrateClick(bool b)
		{
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0xE1C0EC", Offset = "0xE1C0EC", VA = "0xE1C0EC")]
		private void EventHub_OnReelInMinigameStarted()
		{
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0xE1C114", Offset = "0xE1C114", VA = "0xE1C114")]
		private void EventHub_OnFishCaught(FpFish fish, bool isCheating = false)
		{
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0xE1C270", Offset = "0xE1C270", VA = "0xE1C270")]
		public UpdateHookedDebug()
		{
		}
	}
	[Token(Token = "0x20002C1")]
	public class DebugHUD : MonoBehaviour
	{
		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI message;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string myLog;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string output;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string stack;

		[Token(Token = "0x600113F")]
		[Address(RVA = "0xCFF8C8", Offset = "0xCFF8C8", VA = "0xCFF8C8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0xCFF93C", Offset = "0xCFF93C", VA = "0xCFF93C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0xCFF9B0", Offset = "0xCFF9B0", VA = "0xCFF9B0")]
		public void Log(string logString, string stackTrace, LogType type)
		{
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0xCFFB34", Offset = "0xCFFB34", VA = "0xCFFB34")]
		public DebugHUD()
		{
		}
	}
	[Token(Token = "0x20002C2")]
	public class DebugText : MonoBehaviour
	{
		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI message;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static DebugText instance;

		[Token(Token = "0x6001144")]
		[Address(RVA = "0xCFFC74", Offset = "0xCFFC74", VA = "0xCFFC74")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0xCFFCCC", Offset = "0xCFFCCC", VA = "0xCFFCCC")]
		public static void DebugMessage(string msg)
		{
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0xCFFD40", Offset = "0xCFFD40", VA = "0xCFFD40")]
		public static void DebugMessage(string msg, float duration)
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0xCFFDE8", Offset = "0xCFFDE8", VA = "0xCFFDE8")]
		private void ClearMessage()
		{
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0xCFFE60", Offset = "0xCFFE60", VA = "0xCFFE60")]
		public DebugText()
		{
		}
	}
	[Token(Token = "0x20002C3")]
	public class DifficultyManager : MonoBehaviour
	{
		[Token(Token = "0x200051F")]
		public enum Diff
		{
			[Token(Token = "0x4001ED4")]
			Default = 0,
			[Token(Token = "0x4001ED5")]
			Easy = 0,
			[Token(Token = "0x4001ED6")]
			Medium = 1,
			[Token(Token = "0x4001ED7")]
			Hard = 2
		}

		[Token(Token = "0x2000520")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC11F0", Offset = "0xAC11F0")]
		private sealed class <Initialize>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001ED8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001ED9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DifficultyManager <>4__this;

			[Token(Token = "0x1700034B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600203F")]
				[Address(RVA = "0xD00EE8", Offset = "0xD00EE8", VA = "0xD00EE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700034C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002041")]
				[Address(RVA = "0xD00F50", Offset = "0xD00F50", VA = "0xD00F50", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600203C")]
			[Address(RVA = "0xD00AC8", Offset = "0xD00AC8", VA = "0xD00AC8")]
			[DebuggerHidden]
			public <Initialize>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x600203D")]
			[Address(RVA = "0xD00D54", Offset = "0xD00D54", VA = "0xD00D54", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600203E")]
			[Address(RVA = "0xD00D58", Offset = "0xD00D58", VA = "0xD00D58", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002040")]
			[Address(RVA = "0xD00EF0", Offset = "0xD00EF0", VA = "0xD00EF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Button[] Buttons;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Text[] Texts;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color32 EnableColor_Text;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Color32 DisableColor_Text;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int Barrel_Easy;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int Barrel_Medium;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int Barrel_Hard;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int Predator_Easy;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int Predator_Medium;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int Predator_Hard;

		[Token(Token = "0x6001149")]
		[Address(RVA = "0xD008E8", Offset = "0xD008E8", VA = "0xD008E8")]
		private void Start()
		{
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0xD00990", Offset = "0xD00990", VA = "0xD00990")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0xD00A24", Offset = "0xD00A24", VA = "0xD00A24")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0xD00AB8", Offset = "0xD00AB8", VA = "0xD00AB8")]
		private void LocationChanged(LocationSO locationSO, bool comingFromShip)
		{
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0xD00914", Offset = "0xD00914", VA = "0xD00914")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACE1B0", Offset = "0xACE1B0")]
		private IEnumerator Initialize()
		{
			return null;
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0xD00AF4", Offset = "0xD00AF4", VA = "0xD00AF4")]
		private void InitDiff()
		{
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0xD00B20", Offset = "0xD00B20", VA = "0xD00B20")]
		public void OnDiffChangeEvent(int diff)
		{
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0xD00AC0", Offset = "0xD00AC0", VA = "0xD00AC0")]
		private void SetEasy()
		{
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0xD00B74", Offset = "0xD00B74", VA = "0xD00B74")]
		private void SetMedium()
		{
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0xD00B7C", Offset = "0xD00B7C", VA = "0xD00B7C")]
		private void SetHard()
		{
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0xD00C5C", Offset = "0xD00C5C", VA = "0xD00C5C")]
		private void CheckBarrel(int Num)
		{
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0xD00D38", Offset = "0xD00D38", VA = "0xD00D38")]
		private void CheckPredator(int Num)
		{
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0xD00B84", Offset = "0xD00B84", VA = "0xD00B84")]
		private void ChangeColor(int diff)
		{
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0xD00D3C", Offset = "0xD00D3C", VA = "0xD00D3C")]
		public DifficultyManager()
		{
		}
	}
	[Token(Token = "0x20002C4")]
	public class DisableSelf : MonoBehaviour
	{
		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float disableTime;

		[Token(Token = "0x6001157")]
		[Address(RVA = "0xD01254", Offset = "0xD01254", VA = "0xD01254")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0xD012AC", Offset = "0xD012AC", VA = "0xD012AC")]
		private void Disable()
		{
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0xD012D4", Offset = "0xD012D4", VA = "0xD012D4")]
		public DisableSelf()
		{
		}
	}
	[Token(Token = "0x20002C5")]
	public class EnableButtonAfterPause : MonoBehaviour
	{
		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Button but;

		[Token(Token = "0x600115A")]
		[Address(RVA = "0xD02230", Offset = "0xD02230", VA = "0xD02230")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0xD02288", Offset = "0xD02288", VA = "0xD02288")]
		private void SetButtonInteractable()
		{
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0xD022A8", Offset = "0xD022A8", VA = "0xD022A8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0xD022C8", Offset = "0xD022C8", VA = "0xD022C8")]
		public EnableButtonAfterPause()
		{
		}
	}
	[Token(Token = "0x20002C6")]
	public class ExplodingBarrel : MonoBehaviour
	{
		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform explosion;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform debris;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Animator anim;

		[Token(Token = "0x600115E")]
		[Address(RVA = "0xE69DA8", Offset = "0xE69DA8", VA = "0xE69DA8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0xE69DAC", Offset = "0xE69DAC", VA = "0xE69DAC")]
		private void RandomizeAnimation()
		{
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0xE69E4C", Offset = "0xE69E4C", VA = "0xE69E4C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0xE6A000", Offset = "0xE6A000", VA = "0xE6A000")]
		public ExplodingBarrel()
		{
		}
	}
	[Token(Token = "0x20002C7")]
	public class FacePlayer : MonoBehaviour
	{
		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool ignoreY;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool rotate180;

		[Token(Token = "0x6001162")]
		[Address(RVA = "0xE6A38C", Offset = "0xE6A38C", VA = "0xE6A38C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0xE6A50C", Offset = "0xE6A50C", VA = "0xE6A50C")]
		public FacePlayer()
		{
		}
	}
	[Token(Token = "0x20002C8")]
	public enum FhMinigameState
	{
		[Token(Token = "0x4001319")]
		idle,
		[Token(Token = "0x400131A")]
		awaitFish,
		[Token(Token = "0x400131B")]
		awaitCanHook,
		[Token(Token = "0x400131C")]
		canHook
	}
	[Token(Token = "0x20002C9")]
	public class FishHookMinigame : MonoBehaviour
	{
		[Token(Token = "0x2000521")]
		public delegate void FishSpooked();

		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FhMinigameState state;

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FishHookReticle fishHookReticle;

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject tooSoon;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject tooSlow;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform tooSlowVfx;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SpawnPool VFX;

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int numSmallBites;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public UpdateHookedDebug debugUI;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool useShortWaitTime;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float shortWaitTime;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float durationModifier;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FishAI selectedFishAi;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool allowHookFishTut;

		[Token(Token = "0x1400004F")]
		public static event FishSpooked OnFishSpooked
		{
			[Token(Token = "0x6001164")]
			[Address(RVA = "0xE6AFC4", Offset = "0xE6AFC4", VA = "0xE6AFC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE214", Offset = "0xACE214")]
			add
			{
			}
			[Token(Token = "0x6001165")]
			[Address(RVA = "0xE6B2B8", Offset = "0xE6B2B8", VA = "0xE6B2B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE224", Offset = "0xACE224")]
			remove
			{
			}
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0xE717C8", Offset = "0xE717C8", VA = "0xE717C8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0xE71874", Offset = "0xE71874", VA = "0xE71874")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0xE71920", Offset = "0xE71920", VA = "0xE71920")]
		private void HandleFlick(float force)
		{
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0xE71B48", Offset = "0xE71B48", VA = "0xE71B48")]
		private void HandleJerk(float force)
		{
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0xE71924", Offset = "0xE71924", VA = "0xE71924")]
		private void CheckCanHook()
		{
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0xE71FBC", Offset = "0xE71FBC", VA = "0xE71FBC")]
		public void StartMinigame(GameObject hookedObject)
		{
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0xE725FC", Offset = "0xE725FC", VA = "0xE725FC")]
		private void SetAwaitFish()
		{
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0xE72670", Offset = "0xE72670", VA = "0xE72670")]
		private void SetAwaitSmallBite()
		{
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0xE72770", Offset = "0xE72770", VA = "0xE72770")]
		private void SetCanHook()
		{
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0xE72940", Offset = "0xE72940", VA = "0xE72940")]
		private void RetrySetCanHook()
		{
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0xE6BD74", Offset = "0xE6BD74", VA = "0xE6BD74")]
		public void ResetMinigame()
		{
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0xE72944", Offset = "0xE72944", VA = "0xE72944")]
		public void RestartMinigame()
		{
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0xE729B4", Offset = "0xE729B4", VA = "0xE729B4")]
		private void TooLateToHook()
		{
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0xE71B4C", Offset = "0xE71B4C", VA = "0xE71B4C")]
		private void TooEarlyToHook()
		{
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0xE72DCC", Offset = "0xE72DCC", VA = "0xE72DCC")]
		public void UseShortWaitTime(bool state)
		{
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0xE72DD8", Offset = "0xE72DD8", VA = "0xE72DD8")]
		public void AdjustDurationModifier(float modifier)
		{
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0xE72DE8", Offset = "0xE72DE8", VA = "0xE72DE8")]
		public FishHookMinigame()
		{
		}
	}
	[Token(Token = "0x20002CA")]
	public class FishHookReticle : MonoBehaviour
	{
		[Token(Token = "0x2000522")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1200", Offset = "0xAC1200")]
		private sealed class <CountDown>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FishHookReticle <>4__this;

			[Token(Token = "0x4001EDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4001EDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <progress>5__3;

			[Token(Token = "0x1700034D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002049")]
				[Address(RVA = "0xE73148", Offset = "0xE73148", VA = "0xE73148", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700034E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600204B")]
				[Address(RVA = "0xE731B0", Offset = "0xE731B0", VA = "0xE731B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002046")]
			[Address(RVA = "0xE72FB4", Offset = "0xE72FB4", VA = "0xE72FB4")]
			[DebuggerHidden]
			public <CountDown>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6002047")]
			[Address(RVA = "0xE72FF0", Offset = "0xE72FF0", VA = "0xE72FF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002048")]
			[Address(RVA = "0xE72FF4", Offset = "0xE72FF4", VA = "0xE72FF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600204A")]
			[Address(RVA = "0xE73150", Offset = "0xE73150", VA = "0xE73150", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timeToHook;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image animatedReticle;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform bobber;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 bobberPos;

		[Token(Token = "0x6001177")]
		[Address(RVA = "0xE72E3C", Offset = "0xE72E3C", VA = "0xE72E3C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0xE72E88", Offset = "0xE72E88", VA = "0xE72E88")]
		private void SetPosition()
		{
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0xE72F38", Offset = "0xE72F38", VA = "0xE72F38")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACE234", Offset = "0xACE234")]
		private IEnumerator CountDown()
		{
			return null;
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0xE72FE0", Offset = "0xE72FE0", VA = "0xE72FE0")]
		public FishHookReticle()
		{
		}
	}
	[Token(Token = "0x20002CB")]
	public class FishOPediaController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000523")]
		public class FishOPedia_ : FishOPedia
		{
			[Token(Token = "0x4001EE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FishTypeSO Fish;

			[Token(Token = "0x600204C")]
			[Address(RVA = "0xE74974", Offset = "0xE74974", VA = "0xE74974")]
			public FishOPedia_()
			{
			}
		}

		[Token(Token = "0x2000524")]
		public delegate void FishSOGeneratedAction(FpFish[] fishTypeSOs);

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static FishOPediaController Instance;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FishTypeSO[] Fishes;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FishTypeSO[] AquariumFishes;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LoreSO[] Lores;

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<FishTypeSO, FishOPedia_> m_FishOPedia_Dic;

		[Token(Token = "0x1700016A")]
		public static Dictionary<FishTypeSO, FishOPedia_> FishOPedia_Dic
		{
			[Token(Token = "0x600117D")]
			[Address(RVA = "0xE7439C", Offset = "0xE7439C", VA = "0xE7439C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000050")]
		public static event FishSOGeneratedAction OnFishSOGenerated
		{
			[Token(Token = "0x600117B")]
			[Address(RVA = "0xE7422C", Offset = "0xE7422C", VA = "0xE7422C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE298", Offset = "0xACE298")]
			add
			{
			}
			[Token(Token = "0x600117C")]
			[Address(RVA = "0xE742E4", Offset = "0xE742E4", VA = "0xE742E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE2A8", Offset = "0xACE2A8")]
			remove
			{
			}
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0xE743F8", Offset = "0xE743F8", VA = "0xE743F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0xE74494", Offset = "0xE74494", VA = "0xE74494")]
		private void Start()
		{
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0xE74D10", Offset = "0xE74D10", VA = "0xE74D10")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0xE74D90", Offset = "0xE74D90", VA = "0xE74D90")]
		private void EventHub_OnFishCaught(FpFish fish, bool isCheating)
		{
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0xE7507C", Offset = "0xE7507C", VA = "0xE7507C")]
		public void ResetFishOPedia()
		{
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0xE75180", Offset = "0xE75180", VA = "0xE75180")]
		public static bool IsNewFish(FpFish fish)
		{
			return default(bool);
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0xE7524C", Offset = "0xE7524C", VA = "0xE7524C")]
		public static FishTypeSO[] GetAllFishes()
		{
			return null;
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0xE752A8", Offset = "0xE752A8", VA = "0xE752A8")]
		public static LoreSO[] GetAllLores()
		{
			return null;
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0xE75304", Offset = "0xE75304", VA = "0xE75304")]
		public static int GetFishCaughtAmount(FishTypeSO fish)
		{
			return default(int);
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0xE75394", Offset = "0xE75394", VA = "0xE75394")]
		public static FishTypeSO GetFishTypeByBCID(string fishBCID)
		{
			return null;
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0xE75488", Offset = "0xE75488", VA = "0xE75488")]
		public FishOPediaController()
		{
		}
	}
	[Token(Token = "0x20002CC")]
	public class UI_FishOPediaController : MonoBehaviour
	{
		[Token(Token = "0x2000525")]
		public delegate void NewFishInfoUpdatedAction(int amount);

		[Token(Token = "0x2000526")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1210", Offset = "0xAC1210")]
		private sealed class <>c__DisplayClass36_0
		{
			[Token(Token = "0x4001EE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UI_FishOPedia_Fish UI_fish;

			[Token(Token = "0x4001EE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UI_FishOPediaController <>4__this;

			[Token(Token = "0x6002055")]
			[Address(RVA = "0xD1F88C", Offset = "0xD1F88C", VA = "0xD1F88C")]
			public <>c__DisplayClass36_0()
			{
			}

			[Token(Token = "0x6002056")]
			[Address(RVA = "0xD21950", Offset = "0xD21950", VA = "0xD21950")]
			internal void <ShowLoreList>b__0()
			{
			}
		}

		[Token(Token = "0x2000527")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1220", Offset = "0xAC1220")]
		private sealed class <>c__DisplayClass37_0
		{
			[Token(Token = "0x4001EE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UI_FishOPedia_Fish UI_fish;

			[Token(Token = "0x4001EE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FpFish fish;

			[Token(Token = "0x4001EE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UI_FishOPediaController <>4__this;

			[Token(Token = "0x6002057")]
			[Address(RVA = "0xD1F8F0", Offset = "0xD1F8F0", VA = "0xD1F8F0")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x6002058")]
			[Address(RVA = "0xD21A14", Offset = "0xD21A14", VA = "0xD21A14")]
			internal void <FishOPediaController_OnFishSOGenerated>b__0()
			{
			}
		}

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LocationSO[] Locations;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform FishOPedia_Fish;

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform FishPanel;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject UI_FishInfo;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject UI_LoreInfo;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject UI_List;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button FishTabBtn;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button LoreTabBtn;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private UI_FishOPedia_FishInfo FishInfo;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private UI_FishOPedia_LoreInfo LoreInfo;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RectTransform Content;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private UI_PageDotController m_dotController;

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GestureScrollRect m_gestureScrollRect;

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Button m_nextButton;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Button m_prevButton;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Localize TitleText;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<FpFish, UI_FishOPedia_Fish> m_Fish_UI_Dic;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<FpFish, bool> m_UnlockedFish_Dic;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Dictionary<FishTypeSO, FpFish> m_FpFish_Dic;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float m_MoveDuration;

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float m_ContantSize;

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int m_NewFishCount;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int m_FishInfo_Index;

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int m_LoreInfo_Index;

		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private FpFish[] allFishes;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private LoreSO[] allLores;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private List<UI_FishOPedia_Fish> m_FishInfo_FishUnlocked;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Dictionary<UI_FishOPedia_Fish, int> m_FishInfo_FishUnlocked_Dic;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Dictionary<int, UI_FishOPedia_Fish> m_FishInfo_FishUnlockedIndex_Dic;

		[Token(Token = "0x14000051")]
		public static event NewFishInfoUpdatedAction OnNewFishInfoUpdated
		{
			[Token(Token = "0x6001189")]
			[Address(RVA = "0xD1E7C8", Offset = "0xD1E7C8", VA = "0xD1E7C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE2B8", Offset = "0xACE2B8")]
			add
			{
			}
			[Token(Token = "0x600118A")]
			[Address(RVA = "0xD1E87C", Offset = "0xD1E87C", VA = "0xD1E87C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE2C8", Offset = "0xACE2C8")]
			remove
			{
			}
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0xD1E930", Offset = "0xD1E930", VA = "0xD1E930")]
		private void Awake()
		{
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0xD1ED50", Offset = "0xD1ED50", VA = "0xD1ED50")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0xD1F070", Offset = "0xD1F070", VA = "0xD1F070")]
		private void ShowFishList()
		{
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0xD1F470", Offset = "0xD1F470", VA = "0xD1F470")]
		private void ShowLoreList()
		{
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0xD1F078", Offset = "0xD1F078", VA = "0xD1F078")]
		private void FishOPediaController_OnFishSOGenerated(FpFish[] fishes)
		{
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0xD1F798", Offset = "0xD1F798", VA = "0xD1F798")]
		private void UIFishReset()
		{
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0xD1FAAC", Offset = "0xD1FAAC", VA = "0xD1FAAC")]
		private void OnFishWeightUpdated(FpFish fish)
		{
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0xD1FF10", Offset = "0xD1FF10", VA = "0xD1FF10")]
		private void OnFishUnlocked(FpFish fish)
		{
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0xD1F8F8", Offset = "0xD1F8F8", VA = "0xD1F8F8")]
		private void FillFishBtn(FishTypeSO fish)
		{
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0xD202DC", Offset = "0xD202DC", VA = "0xD202DC")]
		public void OnIncreaseFishPanelPos()
		{
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0xD1F894", Offset = "0xD1F894", VA = "0xD1F894")]
		public void SetPageTitle()
		{
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0xD202E4", Offset = "0xD202E4", VA = "0xD202E4")]
		private void OnIncreaseFishPanelPos(int page = 1)
		{
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0xD2045C", Offset = "0xD2045C", VA = "0xD2045C")]
		public void OnDecreaseFishPanelPos()
		{
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0xD20464", Offset = "0xD20464", VA = "0xD20464")]
		private void OnDecreaseFishPanelPos(int page = 1)
		{
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0xD1FA7C", Offset = "0xD1FA7C", VA = "0xD1FA7C")]
		private void ChangeToPage(int target_page = 0)
		{
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0xD205D4", Offset = "0xD205D4", VA = "0xD205D4")]
		private void OnFishClicked(UI_FishOPedia_Fish UI_fish)
		{
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0xD21404", Offset = "0xD21404", VA = "0xD21404")]
		private void OnLoreClicked(LoreSO UI_lore, int index)
		{
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0xD20650", Offset = "0xD20650", VA = "0xD20650")]
		private void FillFishInfoUI(FpFish fish)
		{
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0xD2140C", Offset = "0xD2140C", VA = "0xD2140C")]
		private void FillLoreInfoUI(LoreSO lore)
		{
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0xD1FFC0", Offset = "0xD1FFC0", VA = "0xD1FFC0")]
		private void OnFishInfoUnlockedFishUpdated(UI_FishOPedia_Fish fish)
		{
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0xD214A0", Offset = "0xD214A0", VA = "0xD214A0")]
		private void OnFishTotalWeightUpdated(FishOPediaController.FishOPedia_ fishOPedia)
		{
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0xD21514", Offset = "0xD21514", VA = "0xD21514")]
		public void OnFishPadClosed()
		{
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0xD215C8", Offset = "0xD215C8", VA = "0xD215C8")]
		public void OnIncreaseFishInfo()
		{
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0xD2167C", Offset = "0xD2167C", VA = "0xD2167C")]
		public void OnDecreaseFishInfo()
		{
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0xD21730", Offset = "0xD21730", VA = "0xD21730")]
		public UI_FishOPediaController()
		{
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0xD218BC", Offset = "0xD218BC", VA = "0xD218BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE2D8", Offset = "0xACE2D8")]
		private void <OnIncreaseFishPanelPos>b__44_0(float x)
		{
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0xD21908", Offset = "0xD21908", VA = "0xD21908")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE2E8", Offset = "0xACE2E8")]
		private void <OnDecreaseFishPanelPos>b__46_0(float x)
		{
		}
	}
	[Token(Token = "0x20002CD")]
	public class UI_FishOPedia_Fish : MonoBehaviour
	{
		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject UnknownFish;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject KnownFish;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image FishIcon;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image FishGradeIcon;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Localize FishName;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Button FishInfoBtn;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Localize NewIcon;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int Index;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public FpFish Fish;

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0xD21C74", Offset = "0xD21C74", VA = "0xD21C74")]
		public UI_FishOPedia_Fish()
		{
		}
	}
	[Token(Token = "0x20002CE")]
	public class UI_FishOPedia_FishInfo : MonoBehaviour
	{
		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Localize FishName;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image FishIcon;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image GradeIcon;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TMP_Text GradeTooltipText;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Localize GradeTooltipTextLoc;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Localize BestRecord;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject BestRecordInfo;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public TMP_Text BestWeight_Text;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TMP_Text BestLength_Text;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Image[] Stars;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Localize Total;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public TMP_Text Total_Text;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Localize Location;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public TMP_Text Location_Text;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Localize PreferredFloatingLure_TitleText;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Localize PreferredSwimmingLure_TitleText;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Image[] PreferredFloatingLure_Imgs;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Image[] PreferredSwimmingLure_Imgs;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Image[] Resources_Imgs;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Image[] Size_Imgs;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Localize Description;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Button IncreaseBtn;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Button DecreaseBtn;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Color GradeColorCommon;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Color GradeColorUncommon;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Color GradeColorRare;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Color GradeColorEpic;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Color GradeColorLegendary;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public Localize[] FloatingLuresTooltip;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public Localize[] SwimmingLuresTooltip;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public TMP_Text[] StarTooltip;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public Localize[] ResourcesTooltip;

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0xD21C7C", Offset = "0xD21C7C", VA = "0xD21C7C")]
		public UI_FishOPedia_FishInfo()
		{
		}
	}
	[Token(Token = "0x20002CF")]
	public class UI_FishOPedia_LoreInfo : MonoBehaviour
	{
		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Localize Title;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Localize Description;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image Icon;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image HeadlineImage;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Button IncreaseBtn;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Button DecreaseBtn;

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0xD21C84", Offset = "0xD21C84", VA = "0xD21C84")]
		public UI_FishOPedia_LoreInfo()
		{
		}
	}
	[Token(Token = "0x20002D0")]
	public class UI_PageDot : MonoBehaviour
	{
		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int index;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Button PageDot;

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0xE0F0D0", Offset = "0xE0F0D0", VA = "0xE0F0D0")]
		public UI_PageDot()
		{
		}
	}
	[Token(Token = "0x20002D1")]
	public class UI_PageDotController : MonoBehaviour
	{
		[Token(Token = "0x2000528")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1230", Offset = "0xAC1230")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4001EE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<int> callback;

			[Token(Token = "0x6002059")]
			[Address(RVA = "0xE0F4A4", Offset = "0xE0F4A4", VA = "0xE0F4A4")]
			public <>c__DisplayClass7_0()
			{
			}
		}

		[Token(Token = "0x2000529")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1240", Offset = "0xAC1240")]
		private sealed class <>c__DisplayClass7_1
		{
			[Token(Token = "0x4001EE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UI_PageDot pageDot;

			[Token(Token = "0x4001EE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass7_0 CS$<>8__locals1;

			[Token(Token = "0x600205A")]
			[Address(RVA = "0xE0F4AC", Offset = "0xE0F4AC", VA = "0xE0F4AC")]
			public <>c__DisplayClass7_1()
			{
			}

			[Token(Token = "0x600205B")]
			[Address(RVA = "0xE0F7A8", Offset = "0xE0F7A8", VA = "0xE0F7A8")]
			internal void <Init>b__0()
			{
			}
		}

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int m_pageNum;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int m_currentIndex;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int PageCount;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform PageDot;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<UI_PageDot> m_PageDots;

		[Token(Token = "0x1700016B")]
		public int CurrentID
		{
			[Token(Token = "0x60011AA")]
			[Address(RVA = "0xE0F0D8", Offset = "0xE0F0D8", VA = "0xE0F0D8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0xE0F0E0", Offset = "0xE0F0E0", VA = "0xE0F0E0")]
		public void Init(int element_count, Action<int> callback)
		{
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0xE0F4BC", Offset = "0xE0F4BC", VA = "0xE0F4BC")]
		public void Init(int element_count)
		{
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0xE0F554", Offset = "0xE0F554", VA = "0xE0F554")]
		public void ChangeIndex(int offset)
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0xE0F4B4", Offset = "0xE0F4B4", VA = "0xE0F4B4")]
		private void SetIndex(int target)
		{
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0xE0F574", Offset = "0xE0F574", VA = "0xE0F574")]
		private void RefreshPageDot()
		{
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0xE0F724", Offset = "0xE0F724", VA = "0xE0F724")]
		public UI_PageDotController()
		{
		}
	}
	[Token(Token = "0x20002D2")]
	public class UI_FishPad_MenuBar : MonoBehaviour
	{
		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Notice_FishOPedia;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject Notice_Map;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject Notice_Inventory;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject Notice_Mission;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject Notice_Crafting;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TMP_Text Notice_Text_FishOPedia;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private LocationSO newLocation;

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0xD21C8C", Offset = "0xD21C8C", VA = "0xD21C8C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0xD21E48", Offset = "0xD21E48", VA = "0xD21E48")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0xD22004", Offset = "0xD22004", VA = "0xD22004")]
		public void closeFishingPad()
		{
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0xD22064", Offset = "0xD22064", VA = "0xD22064")]
		public void removeInventoryNotice()
		{
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0xD22084", Offset = "0xD22084", VA = "0xD22084")]
		public void removeMissionNotice()
		{
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0xD220A4", Offset = "0xD220A4", VA = "0xD220A4")]
		private void EventHub_MissionCompleted(MissionSO mission)
		{
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0xD220C4", Offset = "0xD220C4", VA = "0xD220C4")]
		private void UI_CraftingController_OnNewRecipeUpdated(int recipeCount)
		{
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0xD220E8", Offset = "0xD220E8", VA = "0xD220E8")]
		private void InventoryController_OnItemGet(ItemSO item, int amount)
		{
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0xD22218", Offset = "0xD22218", VA = "0xD22218")]
		private void LoadLocation_OnLocationUnlock(LocationSO location)
		{
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0xD2227C", Offset = "0xD2227C", VA = "0xD2227C")]
		private void DisableMapNotify(LocationSO location)
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0xD22360", Offset = "0xD22360", VA = "0xD22360")]
		private void UI_FishOPediaController_OnNewFishInfoUpdated(int amount)
		{
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0xD2246C", Offset = "0xD2246C", VA = "0xD2246C")]
		public UI_FishPad_MenuBar()
		{
		}
	}
	[Token(Token = "0x20002D3")]
	public class UI_MapButton : MonoBehaviour
	{
		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Button MapButton;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public GameObject DisabledMapButton;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public Localize MapName;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public GameObject Notify;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public LocationSO locationSO;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public Image lockedIcon;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public Image lockedButton;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public Image locker;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		public Image pin;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		public Image selectedPinHighlight;

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0xD248A8", Offset = "0xD248A8", VA = "0xD248A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0xD24CB4", Offset = "0xD24CB4", VA = "0xD24CB4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0xD24D28", Offset = "0xD24D28", VA = "0xD24D28")]
		public void LoadLocation_OnLocationUnlock(LocationSO location)
		{
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0xD24D88", Offset = "0xD24D88", VA = "0xD24D88")]
		public void DisableMapNotify(LocationSO location)
		{
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0xD24924", Offset = "0xD24924", VA = "0xD24924")]
		public void setLocationCard()
		{
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0xD24E94", Offset = "0xD24E94", VA = "0xD24E94")]
		public void onClick()
		{
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0xD25020", Offset = "0xD25020", VA = "0xD25020")]
		public void EventHub_SummonFishingPad()
		{
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0xD251AC", Offset = "0xD251AC", VA = "0xD251AC")]
		public UI_MapButton()
		{
		}
	}
	[Token(Token = "0x20002D4")]
	public class UI_WorldButton : MonoBehaviour
	{
		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Button MapButton;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public GameObject Notify;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public GameObject LockIcon;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public LocationSO[] nextNewLocation;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int locationIndex;

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0xE18C28", Offset = "0xE18C28", VA = "0xE18C28")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0xE18E2C", Offset = "0xE18E2C", VA = "0xE18E2C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0xE18CDC", Offset = "0xE18CDC", VA = "0xE18CDC")]
		private void UnlockWorld()
		{
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0xE18ED8", Offset = "0xE18ED8", VA = "0xE18ED8")]
		private void LoadLocation_OnLocationUnlock(LocationSO location)
		{
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0xE19014", Offset = "0xE19014", VA = "0xE19014")]
		private void DisableMapNotify(LocationSO location)
		{
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0xE19120", Offset = "0xE19120", VA = "0xE19120")]
		public UI_WorldButton()
		{
		}
	}
	[Token(Token = "0x20002D5")]
	public enum FriMinigameState
	{
		[Token(Token = "0x40013A0")]
		idle,
		[Token(Token = "0x40013A1")]
		fishIsResting,
		[Token(Token = "0x40013A2")]
		fishIsResisting,
		[Token(Token = "0x40013A3")]
		fishIsInPattern,
		[Token(Token = "0x40013A4")]
		fishIsStunned,
		[Token(Token = "0x40013A5")]
		fishIsRunning,
		[Token(Token = "0x40013A6")]
		fishIsRaging
	}
	[Token(Token = "0x20002D6")]
	public enum TensionAlert
	{
		[Token(Token = "0x40013A8")]
		under,
		[Token(Token = "0x40013A9")]
		over,
		[Token(Token = "0x40013AA")]
		normal
	}
	[Token(Token = "0x20002D7")]
	public enum ResistDir
	{
		[Token(Token = "0x40013AC")]
		left,
		[Token(Token = "0x40013AD")]
		right,
		[Token(Token = "0x40013AE")]
		none
	}
	[Token(Token = "0x20002D8")]
	public class FishReelInMinigame : MonoBehaviour
	{
		[Token(Token = "0x200052A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1250", Offset = "0xAC1250")]
		private sealed class <DangerAlert>d__85 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FishReelInMinigame <>4__this;

			[Token(Token = "0x1700034F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600205F")]
				[Address(RVA = "0xDF3FC8", Offset = "0xDF3FC8", VA = "0xDF3FC8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000350")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002061")]
				[Address(RVA = "0xDF4030", Offset = "0xDF4030", VA = "0xDF4030", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600205C")]
			[Address(RVA = "0xDF3BF4", Offset = "0xDF3BF4", VA = "0xDF3BF4")]
			[DebuggerHidden]
			public <DangerAlert>d__85(int <>1__state)
			{
			}

			[Token(Token = "0x600205D")]
			[Address(RVA = "0xDF3C20", Offset = "0xDF3C20", VA = "0xDF3C20", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600205E")]
			[Address(RVA = "0xDF3C24", Offset = "0xDF3C24", VA = "0xDF3C24", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002060")]
			[Address(RVA = "0xDF3FD0", Offset = "0xDF3FD0", VA = "0xDF3FD0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200052B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1260", Offset = "0xAC1260")]
		private sealed class <Escape>d__87 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FishReelInMinigame <>4__this;

			[Token(Token = "0x17000351")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002065")]
				[Address(RVA = "0xDF41F4", Offset = "0xDF41F4", VA = "0xDF41F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000352")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002067")]
				[Address(RVA = "0xDF425C", Offset = "0xDF425C", VA = "0xDF425C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002062")]
			[Address(RVA = "0xDF4038", Offset = "0xDF4038", VA = "0xDF4038")]
			[DebuggerHidden]
			public <Escape>d__87(int <>1__state)
			{
			}

			[Token(Token = "0x6002063")]
			[Address(RVA = "0xDF4064", Offset = "0xDF4064", VA = "0xDF4064", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002064")]
			[Address(RVA = "0xDF4068", Offset = "0xDF4068", VA = "0xDF4068", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002066")]
			[Address(RVA = "0xDF41FC", Offset = "0xDF41FC", VA = "0xDF41FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FriMinigameState state;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ReelInUI reelInUi;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SpawnPool vfx;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform fishLostPrefab;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject fishLostGO;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float maxFishForce;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float restForce;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 patternFleeVector;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool alertIsActive;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int dangerLevel;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float maxDangerLevel;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int numTimesHasFled;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public TensionAlert alert;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public HapticsClipSO alertHapticsClip;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int patternIndex;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public PatternSO pattern;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float resistForce;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float fleeForce;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private double timeDebug;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private double rageEndTime;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private double rageDirTime;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool isRagingLeft;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private double runEndTime;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private double runDirTime;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3 runTarget;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool isRunningLeft;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3 runDirection;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float restTime;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool hasFled;

		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private FishTypeSO fish;

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float timer;

		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private bool showTimer;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Arrow arrow;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine danger;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Vector3[] boundaryPoints;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public FishAI hookedFishAi;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool allowPattern;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
		private bool allowPatternNoStamina;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x112")]
		private bool hasDonePattern;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private float runRageStartTime;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private float initialDelayTime;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private float tensionMinimumUpperLimit;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public Transform bigSplash;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public Transform smallSplash;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public Transform ripples;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private ResistDir resistDir;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private float snapForceMultiplier;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private float jumpForceMultiplier;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private int runRageAlertKeepout;

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0xE7577C", Offset = "0xE7577C", VA = "0xE7577C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0xE75814", Offset = "0xE75814", VA = "0xE75814")]
		public void ResetMinigame()
		{
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0xE71D7C", Offset = "0xE71D7C", VA = "0xE71D7C")]
		public void StartMinigame(float modifier = 1f)
		{
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0xE759C8", Offset = "0xE759C8", VA = "0xE759C8")]
		private void SetInitialMode(FishTypeSO fish, float modifier = 1f)
		{
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0xE7620C", Offset = "0xE7620C", VA = "0xE7620C")]
		public void Update()
		{
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0xE770C4", Offset = "0xE770C4", VA = "0xE770C4")]
		public void SetShowTimer(bool val)
		{
		}

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0xE76570", Offset = "0xE76570", VA = "0xE76570")]
		private void SetAlert()
		{
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0xE766F0", Offset = "0xE766F0", VA = "0xE766F0")]
		private void CheckAllowPattern()
		{
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0xE771BC", Offset = "0xE771BC", VA = "0xE771BC")]
		private void CheckForcePattern(float distance)
		{
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0xE75F34", Offset = "0xE75F34", VA = "0xE75F34")]
		private void StartRunning(float modifier = 1f, float predatorDur = 0f)
		{
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0xE75C7C", Offset = "0xE75C7C", VA = "0xE75C7C")]
		private void StartRaging(float endTime)
		{
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0xE77694", Offset = "0xE77694", VA = "0xE77694")]
		private void StartResting()
		{
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0xE75A5C", Offset = "0xE75A5C", VA = "0xE75A5C")]
		public void StartResisting()
		{
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0xE77784", Offset = "0xE77784", VA = "0xE77784")]
		private void SetResistValues()
		{
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0xE77B88", Offset = "0xE77B88", VA = "0xE77B88")]
		private void PickDir()
		{
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0xE7792C", Offset = "0xE7792C", VA = "0xE7792C")]
		private Vector3 SetResistDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0xE778C8", Offset = "0xE778C8", VA = "0xE778C8")]
		public void ChangeResistDirection()
		{
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0xE77BC4", Offset = "0xE77BC4", VA = "0xE77BC4")]
		public void StartPatternPlay()
		{
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0xE7726C", Offset = "0xE7726C", VA = "0xE7726C")]
		public void StartPatternPlay(bool forcePattern)
		{
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0xE77D44", Offset = "0xE77D44", VA = "0xE77D44")]
		public void StartPowerReel(float duration)
		{
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0xE77E04", Offset = "0xE77E04", VA = "0xE77E04")]
		public void StartStunned(float duration)
		{
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0xE77F04", Offset = "0xE77F04", VA = "0xE77F04")]
		private void OnArrowFailed()
		{
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0xE78050", Offset = "0xE78050", VA = "0xE78050")]
		public void CancelFleeing(bool nextArrow, bool doRestState)
		{
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0xE77BCC", Offset = "0xE77BCC", VA = "0xE77BCC")]
		private void SetFleeValues(Arrow dir)
		{
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0xE780B4", Offset = "0xE780B4", VA = "0xE780B4")]
		public void SetFleeVector(Arrow dir)
		{
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0xE770C0", Offset = "0xE770C0", VA = "0xE770C0")]
		private void Stun()
		{
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0xE766EC", Offset = "0xE766EC", VA = "0xE766EC")]
		private void Rest()
		{
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0xE76830", Offset = "0xE76830", VA = "0xE76830")]
		private void Resist()
		{
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0xE768AC", Offset = "0xE768AC", VA = "0xE768AC")]
		private void Flee()
		{
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0xE76994", Offset = "0xE76994", VA = "0xE76994")]
		private void Rage()
		{
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0xE76D04", Offset = "0xE76D04", VA = "0xE76D04")]
		private void Run()
		{
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0xE78560", Offset = "0xE78560", VA = "0xE78560")]
		private float GetDistance()
		{
			return default(float);
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0xE78474", Offset = "0xE78474", VA = "0xE78474")]
		private float GetDistanceFromBobberTo(Vector3 target)
		{
			return default(float);
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0xE78680", Offset = "0xE78680", VA = "0xE78680")]
		public void ReelInSuccess()
		{
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0xE770D0", Offset = "0xE770D0", VA = "0xE770D0")]
		private void StartDangerAlert()
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0xE758F8", Offset = "0xE758F8", VA = "0xE758F8")]
		public void StopDangerAlert()
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0xE78748", Offset = "0xE78748", VA = "0xE78748")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACE2F8", Offset = "0xACE2F8")]
		private IEnumerator DangerAlert()
		{
			return null;
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0xE787C4", Offset = "0xE787C4", VA = "0xE787C4")]
		public void DoEscape()
		{
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0xE787F0", Offset = "0xE787F0", VA = "0xE787F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACE35C", Offset = "0xACE35C")]
		private IEnumerator Escape()
		{
			return null;
		}

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0xE7886C", Offset = "0xE7886C", VA = "0xE7886C")]
		private void FishLost()
		{
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0xE774C4", Offset = "0xE774C4", VA = "0xE774C4")]
		public Vector3 GetRunDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0xE78B04", Offset = "0xE78B04", VA = "0xE78B04")]
		private void SetBoundaryPoints(LocationSO locationSO, bool comingFromShip)
		{
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0xE78D04", Offset = "0xE78D04", VA = "0xE78D04")]
		public void PredatorCollision()
		{
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0xE78D94", Offset = "0xE78D94", VA = "0xE78D94")]
		public FishReelInMinigame()
		{
		}
	}
	[Token(Token = "0x20002D9")]
	public class FishFleeVFXController : MonoBehaviour
	{
		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform VFX;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ParticleSystem Particle;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_startSize;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ParticleSystem.MainModule m_Particle_Main;

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0xE71358", Offset = "0xE71358", VA = "0xE71358")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0xE714B0", Offset = "0xE714B0", VA = "0xE714B0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0xE715E4", Offset = "0xE715E4", VA = "0xE715E4")]
		private void FishReelInMinigame_OnFishStartedFleeing(Vector3 fleeDirection, bool isFish, bool directionChange)
		{
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0xE71744", Offset = "0xE71744", VA = "0xE71744")]
		private void FishReelInMinigame_OnFishStoppedFleeing(bool isFish)
		{
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0xE717B8", Offset = "0xE717B8", VA = "0xE717B8")]
		public FishFleeVFXController()
		{
		}
	}
	[Token(Token = "0x20002DA")]
	internal enum RopeStatus
	{
		[Token(Token = "0x40013E5")]
		Idle,
		[Token(Token = "0x40013E6")]
		Stretch,
		[Token(Token = "0x40013E7")]
		Shrink
	}
	[Token(Token = "0x20002DB")]
	public class FishingLineController : MonoBehaviour, IEventListener
	{
		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool IsSlack;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static float CacheLimitDistance;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator ReelineAnim;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float speed;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LineRenderer connecting_line;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Transform> RodJointList;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ObiRopeCursor cursor;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ObiRope rope;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ObiRopeExtrudedRenderer obiRopeExtrudedRenderer;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RopeStatus m_nowState;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_InitLength;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool lastIsReelingState;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float lastIsReelingTime;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC6380", Offset = "0xAC6380")]
		private float m_limitStraightLength;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FishingLineColor lineColor;

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static FishingLineController instance;

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0xDF6B38", Offset = "0xDF6B38", VA = "0xDF6B38")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0xDF6C18", Offset = "0xDF6C18", VA = "0xDF6C18")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0xDF6CE0", Offset = "0xDF6CE0", VA = "0xDF6CE0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0xDF6D74", Offset = "0xDF6D74", VA = "0xDF6D74")]
		private void Start()
		{
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0xDF6F38", Offset = "0xDF6F38", VA = "0xDF6F38")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0xDF75A8", Offset = "0xDF75A8", VA = "0xDF75A8", Slot = "4")]
		public void OnEvent(EventArgs args)
		{
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0xDF76D0", Offset = "0xDF76D0", VA = "0xDF76D0")]
		public void AddLineLength(float extraLength = 1f)
		{
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0xDF776C", Offset = "0xDF776C", VA = "0xDF776C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0xDF7828", Offset = "0xDF7828", VA = "0xDF7828")]
		public static void PlayReelLine(float speed)
		{
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0xDF7148", Offset = "0xDF7148", VA = "0xDF7148")]
		private void UpdateRodLine()
		{
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0xDF7914", Offset = "0xDF7914", VA = "0xDF7914")]
		private void ShrinkOnBobberHitWater()
		{
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0xDF79DC", Offset = "0xDF79DC", VA = "0xDF79DC")]
		public FishingLineController()
		{
		}
	}
	[Token(Token = "0x20002DC")]
	public class ObiGenerator : MonoBehaviour
	{
		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform start;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform end;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ObiSolver solver;

		[Token(Token = "0x6001209")]
		[Address(RVA = "0xE51C04", Offset = "0xE51C04", VA = "0xE51C04")]
		private void Start()
		{
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0xE51C08", Offset = "0xE51C08", VA = "0xE51C08")]
		public void GenerateHookLine()
		{
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0xE5222C", Offset = "0xE5222C", VA = "0xE5222C")]
		public ObiGenerator()
		{
		}
	}
	[Token(Token = "0x20002DD")]
	public class FishingManager : MonoBehaviour
	{
		[Token(Token = "0x200052C")]
		public delegate void WaterChangeAction();

		[Token(Token = "0x200052D")]
		public delegate void DebugFishChanged(FishTypeSO fish);

		[Token(Token = "0x200052E")]
		public delegate void FishStartedPanicking(Vector3 fleeDirection, bool isFish, bool directionChange);

		[Token(Token = "0x200052F")]
		public delegate void FishStoppedPanicking(bool isFish);

		[Token(Token = "0x2000530")]
		public delegate void FishStartedFleeing(Vector3 fleeDirection, bool isFish, bool directionChange);

		[Token(Token = "0x2000531")]
		public delegate void FishStartedResisting(Vector3 fleeDirection, bool isFish, bool directionChange);

		[Token(Token = "0x2000532")]
		public delegate void FishStoppedFleeing(bool isFish);

		[Token(Token = "0x2000533")]
		public delegate void FishStoppedResisting(bool isFish);

		[Token(Token = "0x2000534")]
		public delegate void FishStunned();

		[Token(Token = "0x2000535")]
		public delegate void FishPowerReel();

		[Token(Token = "0x2000536")]
		public delegate void StopPowerReel();

		[Token(Token = "0x2000537")]
		public delegate void FishPool2Changed(FishPool2SO fp2);

		[Token(Token = "0x2000538")]
		public delegate void LootCratePoolChanged(LootCratePoolSO lcp);

		[Token(Token = "0x2000539")]
		public delegate void RodReset();

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static FishingManager instance;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RodCast rodCast;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RodReel rodReel;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RodChange rodChange;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private FishHookMinigame fishHookMg;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private FishReelInMinigame fishReelInMg;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private LineTension lineTension;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BoostBar boostBar;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool StaminaVisible;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public static bool IsShowingChallengeRewardsPanel;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Stamina stamina;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private RodBoost rodBoost;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private UI_TakeFishController ui_TakeFishController;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private LootCratePoolSO lootCratePoolSO;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private LootCrateController lootCrateController;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private FishAiController fishAiController;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private LureRadiusColor lureRadiusColor;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private UnderwaterLureController underwaterLureController;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private FishingLineController fishLine;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public XRIDefaultInputActions inputActions;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private XRInputSender inputSender;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private FishPool2SO fishPool2SO;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private FpFish selectedFish;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private LpCrate selectedCrate;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Bobber bobber;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private PerlinMoverSettings bobberMoverSettings;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Transform rodHand;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Transform lastRodHand;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Handside lastRodSide;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Transform nonRodHand;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Handside rodSide;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Handside reelSide;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private RecoverFish recoverFish;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private RodLean rodLean;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private ItemSO rodSO;

		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private RodStand rodStand;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private Transform water;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private PatternController patternController;

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private Transform arrowSnapCollidersRod;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private Transform arrowSnapCollidersWorld;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private Transform arrowLeanCollidersRod;

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private Transform arrowLeanCollidersWorld;

		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private Transform rodSnapArrowCollider;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private GameObject rodVisibleSnapCollider;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private GameObject tutPop;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private Animator tutPopAnimator;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private ReelInUI reelInUI;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private HookedFishController hookedFishController;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private FishingLineColor fishingLineColor;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private PeasFishingController peasFishingController;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		public FishTypeSO debugFish;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private float hookedFishMaxScale;

		[Token(Token = "0x1700016C")]
		public static RodCast RodCast
		{
			[Token(Token = "0x600120C")]
			[Address(RVA = "0xDF7A08", Offset = "0xDF7A08", VA = "0xDF7A08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016D")]
		public static RodReel RodReel
		{
			[Token(Token = "0x600120D")]
			[Address(RVA = "0xDF7A7C", Offset = "0xDF7A7C", VA = "0xDF7A7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016E")]
		public static RodChange RodChange
		{
			[Token(Token = "0x600120E")]
			[Address(RVA = "0xDF7AF0", Offset = "0xDF7AF0", VA = "0xDF7AF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016F")]
		public static FishHookMinigame FishHookMg
		{
			[Token(Token = "0x600120F")]
			[Address(RVA = "0xDF627C", Offset = "0xDF627C", VA = "0xDF627C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000170")]
		public static FishReelInMinigame FishReelInMg
		{
			[Token(Token = "0x6001210")]
			[Address(RVA = "0xDF62F0", Offset = "0xDF62F0", VA = "0xDF62F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000171")]
		public static LineTension LineTension
		{
			[Token(Token = "0x6001211")]
			[Address(RVA = "0xDF63D8", Offset = "0xDF63D8", VA = "0xDF63D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000172")]
		public static BoostBar BoostBar
		{
			[Token(Token = "0x6001212")]
			[Address(RVA = "0xDF7B64", Offset = "0xDF7B64", VA = "0xDF7B64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000173")]
		public static Stamina Stamina
		{
			[Token(Token = "0x6001213")]
			[Address(RVA = "0xDF7BD8", Offset = "0xDF7BD8", VA = "0xDF7BD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000174")]
		public static RodBoost RodBoost
		{
			[Token(Token = "0x6001214")]
			[Address(RVA = "0xDF6364", Offset = "0xDF6364", VA = "0xDF6364")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000175")]
		public static UI_TakeFishController UI_TakeFishController
		{
			[Token(Token = "0x6001215")]
			[Address(RVA = "0xDF7C4C", Offset = "0xDF7C4C", VA = "0xDF7C4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000176")]
		public static LootCratePoolSO LootCratePoolSO
		{
			[Token(Token = "0x6001216")]
			[Address(RVA = "0xDF7CC0", Offset = "0xDF7CC0", VA = "0xDF7CC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001217")]
			[Address(RVA = "0xDF4AD0", Offset = "0xDF4AD0", VA = "0xDF4AD0")]
			set
			{
			}
		}

		[Token(Token = "0x17000177")]
		public static LootCrateController LootCrateController
		{
			[Token(Token = "0x6001218")]
			[Address(RVA = "0xDF80C8", Offset = "0xDF80C8", VA = "0xDF80C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000178")]
		public static FishAiController FishAiController
		{
			[Token(Token = "0x6001219")]
			[Address(RVA = "0xDF813C", Offset = "0xDF813C", VA = "0xDF813C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000179")]
		public static LureRadiusColor LureRadiusColor
		{
			[Token(Token = "0x600121A")]
			[Address(RVA = "0xDF81B0", Offset = "0xDF81B0", VA = "0xDF81B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017A")]
		public static UnderwaterLureController UnderwaterLureController
		{
			[Token(Token = "0x600121B")]
			[Address(RVA = "0xDF8224", Offset = "0xDF8224", VA = "0xDF8224")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017B")]
		public static FishingLineController FishLine
		{
			[Token(Token = "0x600121C")]
			[Address(RVA = "0xDF8298", Offset = "0xDF8298", VA = "0xDF8298")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017C")]
		public static XRInputSender XRInputSender
		{
			[Token(Token = "0x600121D")]
			[Address(RVA = "0xDF830C", Offset = "0xDF830C", VA = "0xDF830C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017D")]
		public static FishPool2SO FishPool2SO
		{
			[Token(Token = "0x600121E")]
			[Address(RVA = "0xDF8380", Offset = "0xDF8380", VA = "0xDF8380")]
			get
			{
				return null;
			}
			[Token(Token = "0x600121F")]
			[Address(RVA = "0xDF4770", Offset = "0xDF4770", VA = "0xDF4770")]
			set
			{
			}
		}

		[Token(Token = "0x1700017E")]
		public static FpFish SelectedFish
		{
			[Token(Token = "0x6001220")]
			[Address(RVA = "0xDF4D6C", Offset = "0xDF4D6C", VA = "0xDF4D6C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001221")]
			[Address(RVA = "0xDF8788", Offset = "0xDF8788", VA = "0xDF8788")]
			set
			{
			}
		}

		[Token(Token = "0x1700017F")]
		public static LpCrate SelectedCrate
		{
			[Token(Token = "0x6001222")]
			[Address(RVA = "0xDF8804", Offset = "0xDF8804", VA = "0xDF8804")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001223")]
			[Address(RVA = "0xDF8878", Offset = "0xDF8878", VA = "0xDF8878")]
			set
			{
			}
		}

		[Token(Token = "0x17000180")]
		public static Bobber Bobber
		{
			[Token(Token = "0x6001224")]
			[Address(RVA = "0xDF7534", Offset = "0xDF7534", VA = "0xDF7534")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001225")]
			[Address(RVA = "0xDF88F4", Offset = "0xDF88F4", VA = "0xDF88F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000181")]
		public static PerlinMoverSettings BobberMoverSettings
		{
			[Token(Token = "0x6001226")]
			[Address(RVA = "0xDF8970", Offset = "0xDF8970", VA = "0xDF8970")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000182")]
		public static Transform RodHand
		{
			[Token(Token = "0x6001227")]
			[Address(RVA = "0xDF89E4", Offset = "0xDF89E4", VA = "0xDF89E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001228")]
			[Address(RVA = "0xDF8A58", Offset = "0xDF8A58", VA = "0xDF8A58")]
			set
			{
			}
		}

		[Token(Token = "0x17000183")]
		public static Transform LastRodHand
		{
			[Token(Token = "0x6001229")]
			[Address(RVA = "0xDF8AD4", Offset = "0xDF8AD4", VA = "0xDF8AD4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000184")]
		public static Handside LastRodSide
		{
			[Token(Token = "0x600122A")]
			[Address(RVA = "0xDF8B48", Offset = "0xDF8B48", VA = "0xDF8B48")]
			get
			{
				return default(Handside);
			}
		}

		[Token(Token = "0x17000185")]
		public static Transform NonRodHand
		{
			[Token(Token = "0x600122B")]
			[Address(RVA = "0xDF8BBC", Offset = "0xDF8BBC", VA = "0xDF8BBC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600122C")]
			[Address(RVA = "0xDF8C30", Offset = "0xDF8C30", VA = "0xDF8C30")]
			set
			{
			}
		}

		[Token(Token = "0x17000186")]
		public static Vector3 BetweenHandVec3
		{
			[Token(Token = "0x600122D")]
			[Address(RVA = "0xDF8CAC", Offset = "0xDF8CAC", VA = "0xDF8CAC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000187")]
		public static Handside RodSide
		{
			[Token(Token = "0x600122E")]
			[Address(RVA = "0xDF8DB8", Offset = "0xDF8DB8", VA = "0xDF8DB8")]
			get
			{
				return default(Handside);
			}
			[Token(Token = "0x600122F")]
			[Address(RVA = "0xDF8E2C", Offset = "0xDF8E2C", VA = "0xDF8E2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000188")]
		public static Handside ReelSide
		{
			[Token(Token = "0x6001230")]
			[Address(RVA = "0xDF8EA4", Offset = "0xDF8EA4", VA = "0xDF8EA4")]
			get
			{
				return default(Handside);
			}
			[Token(Token = "0x6001231")]
			[Address(RVA = "0xDF8F18", Offset = "0xDF8F18", VA = "0xDF8F18")]
			set
			{
			}
		}

		[Token(Token = "0x17000189")]
		public static RecoverFish RecoverFish
		{
			[Token(Token = "0x6001232")]
			[Address(RVA = "0xDF8F90", Offset = "0xDF8F90", VA = "0xDF8F90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018A")]
		public static RodLean RodLean
		{
			[Token(Token = "0x6001233")]
			[Address(RVA = "0xDF9004", Offset = "0xDF9004", VA = "0xDF9004")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018B")]
		public static ItemSO Rod
		{
			[Token(Token = "0x6001234")]
			[Address(RVA = "0xDF9078", Offset = "0xDF9078", VA = "0xDF9078")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001235")]
			[Address(RVA = "0xDF90EC", Offset = "0xDF90EC", VA = "0xDF90EC")]
			set
			{
			}
		}

		[Token(Token = "0x1700018C")]
		public static RodStand RodStand
		{
			[Token(Token = "0x6001236")]
			[Address(RVA = "0xDF46FC", Offset = "0xDF46FC", VA = "0xDF46FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018D")]
		public static Transform Water
		{
			[Token(Token = "0x6001237")]
			[Address(RVA = "0xDF916C", Offset = "0xDF916C", VA = "0xDF916C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001238")]
			[Address(RVA = "0xDF91E0", Offset = "0xDF91E0", VA = "0xDF91E0")]
			set
			{
			}
		}

		[Token(Token = "0x1700018E")]
		public static PatternController PatternController
		{
			[Token(Token = "0x6001239")]
			[Address(RVA = "0xDF94B4", Offset = "0xDF94B4", VA = "0xDF94B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018F")]
		public static Transform ArrowSnapCollidersRod
		{
			[Token(Token = "0x600123A")]
			[Address(RVA = "0xDF9528", Offset = "0xDF9528", VA = "0xDF9528")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000190")]
		public static Transform ArrowSnapCollidersWorld
		{
			[Token(Token = "0x600123B")]
			[Address(RVA = "0xDF959C", Offset = "0xDF959C", VA = "0xDF959C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000191")]
		public static Transform ArrowLeanCollidersRod
		{
			[Token(Token = "0x600123C")]
			[Address(RVA = "0xDF9610", Offset = "0xDF9610", VA = "0xDF9610")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000192")]
		public static Transform ArrowLeanCollidersWorld
		{
			[Token(Token = "0x600123D")]
			[Address(RVA = "0xDF9684", Offset = "0xDF9684", VA = "0xDF9684")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000193")]
		public static Transform RodSnapArrowCollider
		{
			[Token(Token = "0x600123E")]
			[Address(RVA = "0xDF96F8", Offset = "0xDF96F8", VA = "0xDF96F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000194")]
		public static GameObject RodVisibleSnapCollider
		{
			[Token(Token = "0x600123F")]
			[Address(RVA = "0xDF976C", Offset = "0xDF976C", VA = "0xDF976C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000195")]
		public static GameObject TutPop
		{
			[Token(Token = "0x6001240")]
			[Address(RVA = "0xDF97E0", Offset = "0xDF97E0", VA = "0xDF97E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000196")]
		public static Animator TutPopAnimator
		{
			[Token(Token = "0x6001241")]
			[Address(RVA = "0xDF9854", Offset = "0xDF9854", VA = "0xDF9854")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000197")]
		public static ReelInUI ReelInUI
		{
			[Token(Token = "0x6001242")]
			[Address(RVA = "0xDF98C8", Offset = "0xDF98C8", VA = "0xDF98C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000198")]
		public static HookedFishController HookedFishController
		{
			[Token(Token = "0x6001243")]
			[Address(RVA = "0xDF417C", Offset = "0xDF417C", VA = "0xDF417C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000199")]
		public static FishingLineColor FishingLineColor
		{
			[Token(Token = "0x6001244")]
			[Address(RVA = "0xDF993C", Offset = "0xDF993C", VA = "0xDF993C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019A")]
		public static PeasFishingController PeasFishingController
		{
			[Token(Token = "0x6001245")]
			[Address(RVA = "0xDF99B0", Offset = "0xDF99B0", VA = "0xDF99B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019B")]
		public static FishTypeSO DebugFish
		{
			[Token(Token = "0x6001246")]
			[Address(RVA = "0xDF9A24", Offset = "0xDF9A24", VA = "0xDF9A24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019C")]
		public static float HookedFishMaxScale
		{
			[Token(Token = "0x6001247")]
			[Address(RVA = "0xDF9A98", Offset = "0xDF9A98", VA = "0xDF9A98")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x14000052")]
		public static event WaterChangeAction OnWaterChanged
		{
			[Token(Token = "0x6001248")]
			[Address(RVA = "0xDF9B0C", Offset = "0xDF9B0C", VA = "0xDF9B0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE3C0", Offset = "0xACE3C0")]
			add
			{
			}
			[Token(Token = "0x6001249")]
			[Address(RVA = "0xDF9BFC", Offset = "0xDF9BFC", VA = "0xDF9BFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE3D0", Offset = "0xACE3D0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000053")]
		public static event DebugFishChanged OnDebugFishChanged
		{
			[Token(Token = "0x600124A")]
			[Address(RVA = "0xDF9CEC", Offset = "0xDF9CEC", VA = "0xDF9CEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE3E0", Offset = "0xACE3E0")]
			add
			{
			}
			[Token(Token = "0x600124B")]
			[Address(RVA = "0xDF9DDC", Offset = "0xDF9DDC", VA = "0xDF9DDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE3F0", Offset = "0xACE3F0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000054")]
		public static event FishStartedPanicking OnFishStartedPanicking
		{
			[Token(Token = "0x600124C")]
			[Address(RVA = "0xDF9ECC", Offset = "0xDF9ECC", VA = "0xDF9ECC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE400", Offset = "0xACE400")]
			add
			{
			}
			[Token(Token = "0x600124D")]
			[Address(RVA = "0xDF9FBC", Offset = "0xDF9FBC", VA = "0xDF9FBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE410", Offset = "0xACE410")]
			remove
			{
			}
		}

		[Token(Token = "0x14000055")]
		public static event FishStoppedPanicking OnFishStoppedPanicking
		{
			[Token(Token = "0x600124E")]
			[Address(RVA = "0xDFA0AC", Offset = "0xDFA0AC", VA = "0xDFA0AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE420", Offset = "0xACE420")]
			add
			{
			}
			[Token(Token = "0x600124F")]
			[Address(RVA = "0xDFA19C", Offset = "0xDFA19C", VA = "0xDFA19C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE430", Offset = "0xACE430")]
			remove
			{
			}
		}

		[Token(Token = "0x14000056")]
		public static event FishStartedFleeing OnFishStartedFleeing
		{
			[Token(Token = "0x6001250")]
			[Address(RVA = "0xDFA28C", Offset = "0xDFA28C", VA = "0xDFA28C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE440", Offset = "0xACE440")]
			add
			{
			}
			[Token(Token = "0x6001251")]
			[Address(RVA = "0xDFA37C", Offset = "0xDFA37C", VA = "0xDFA37C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE450", Offset = "0xACE450")]
			remove
			{
			}
		}

		[Token(Token = "0x14000057")]
		public static event FishStartedResisting OnFishStartedResisting
		{
			[Token(Token = "0x6001252")]
			[Address(RVA = "0xDFA46C", Offset = "0xDFA46C", VA = "0xDFA46C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE460", Offset = "0xACE460")]
			add
			{
			}
			[Token(Token = "0x6001253")]
			[Address(RVA = "0xDFA55C", Offset = "0xDFA55C", VA = "0xDFA55C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE470", Offset = "0xACE470")]
			remove
			{
			}
		}

		[Token(Token = "0x14000058")]
		public static event FishStoppedFleeing OnFishStoppedFleeing
		{
			[Token(Token = "0x6001254")]
			[Address(RVA = "0xDFA64C", Offset = "0xDFA64C", VA = "0xDFA64C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE480", Offset = "0xACE480")]
			add
			{
			}
			[Token(Token = "0x6001255")]
			[Address(RVA = "0xDFA73C", Offset = "0xDFA73C", VA = "0xDFA73C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE490", Offset = "0xACE490")]
			remove
			{
			}
		}

		[Token(Token = "0x14000059")]
		public static event FishStoppedResisting OnFishStoppedResisting
		{
			[Token(Token = "0x6001256")]
			[Address(RVA = "0xDFA82C", Offset = "0xDFA82C", VA = "0xDFA82C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE4A0", Offset = "0xACE4A0")]
			add
			{
			}
			[Token(Token = "0x6001257")]
			[Address(RVA = "0xDFA91C", Offset = "0xDFA91C", VA = "0xDFA91C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE4B0", Offset = "0xACE4B0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005A")]
		public static event FishStunned OnFishStunned
		{
			[Token(Token = "0x6001258")]
			[Address(RVA = "0xDFAA0C", Offset = "0xDFAA0C", VA = "0xDFAA0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE4C0", Offset = "0xACE4C0")]
			add
			{
			}
			[Token(Token = "0x6001259")]
			[Address(RVA = "0xDFAAFC", Offset = "0xDFAAFC", VA = "0xDFAAFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE4D0", Offset = "0xACE4D0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005B")]
		public static event FishPowerReel OnFishRodBoost
		{
			[Token(Token = "0x600125A")]
			[Address(RVA = "0xDFABEC", Offset = "0xDFABEC", VA = "0xDFABEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE4E0", Offset = "0xACE4E0")]
			add
			{
			}
			[Token(Token = "0x600125B")]
			[Address(RVA = "0xDFACDC", Offset = "0xDFACDC", VA = "0xDFACDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE4F0", Offset = "0xACE4F0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005C")]
		public static event StopPowerReel OnFishStopRodBoost
		{
			[Token(Token = "0x600125C")]
			[Address(RVA = "0xDFADCC", Offset = "0xDFADCC", VA = "0xDFADCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE500", Offset = "0xACE500")]
			add
			{
			}
			[Token(Token = "0x600125D")]
			[Address(RVA = "0xDFAEBC", Offset = "0xDFAEBC", VA = "0xDFAEBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE510", Offset = "0xACE510")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005D")]
		public static event FishPool2Changed OnFishPool2Changed
		{
			[Token(Token = "0x600125E")]
			[Address(RVA = "0xDFAFAC", Offset = "0xDFAFAC", VA = "0xDFAFAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE520", Offset = "0xACE520")]
			add
			{
			}
			[Token(Token = "0x600125F")]
			[Address(RVA = "0xDFB09C", Offset = "0xDFB09C", VA = "0xDFB09C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE530", Offset = "0xACE530")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005E")]
		public static event LootCratePoolChanged OnLootCratePoolChanged
		{
			[Token(Token = "0x6001260")]
			[Address(RVA = "0xDFB18C", Offset = "0xDFB18C", VA = "0xDFB18C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE540", Offset = "0xACE540")]
			add
			{
			}
			[Token(Token = "0x6001261")]
			[Address(RVA = "0xDFB27C", Offset = "0xDFB27C", VA = "0xDFB27C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE550", Offset = "0xACE550")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005F")]
		public static event RodReset OnRodReset
		{
			[Token(Token = "0x6001262")]
			[Address(RVA = "0xDF5918", Offset = "0xDF5918", VA = "0xDF5918")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE560", Offset = "0xACE560")]
			add
			{
			}
			[Token(Token = "0x6001263")]
			[Address(RVA = "0xDF5AA4", Offset = "0xDF5AA4", VA = "0xDF5AA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE570", Offset = "0xACE570")]
			remove
			{
			}
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0xDFB36C", Offset = "0xDFB36C", VA = "0xDFB36C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0xDFB7DC", Offset = "0xDFB7DC", VA = "0xDFB7DC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0xDFB884", Offset = "0xDFB884", VA = "0xDFB884")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0xDFB634", Offset = "0xDFB634", VA = "0xDFB634")]
		private void LoadChangePlayerSetting()
		{
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0xDFB968", Offset = "0xDFB968", VA = "0xDFB968")]
		private void LocationChanged(LocationSO locationSO, bool comingFromShip)
		{
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0xDFBA5C", Offset = "0xDFBA5C", VA = "0xDFBA5C")]
		public static void SetInputActions(Handside side)
		{
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0xDFBC68", Offset = "0xDFBC68", VA = "0xDFBC68")]
		public static void CallStartPattern(Vector3 fleeDirection, bool isFish)
		{
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0xDFC020", Offset = "0xDFC020", VA = "0xDFC020")]
		public static void CallStartResisting(Vector3 fleeDirection, bool isFish, bool directionChange = false)
		{
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0xDFC3E8", Offset = "0xDFC3E8", VA = "0xDFC3E8")]
		public static void CallStopPattern(bool isFish)
		{
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0xDFC704", Offset = "0xDFC704", VA = "0xDFC704")]
		public static void CallStopResisting(bool isFish)
		{
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0xDFCA20", Offset = "0xDFCA20", VA = "0xDFCA20")]
		public static void CallStartPanicking(Vector3 fleeDirection, bool isFish)
		{
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0xDFCDD8", Offset = "0xDFCDD8", VA = "0xDFCDD8")]
		public static void CallStopPanicking(bool isFish)
		{
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0xDFD0F4", Offset = "0xDFD0F4", VA = "0xDFD0F4")]
		public static void CallFishStunned()
		{
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0xDFD3A4", Offset = "0xDFD3A4", VA = "0xDFD3A4")]
		public static void CallFishRodBoost()
		{
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0xDFD654", Offset = "0xDFD654", VA = "0xDFD654")]
		public static void CallFishStopRodBoost()
		{
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0xDFD904", Offset = "0xDFD904", VA = "0xDFD904")]
		public static void CallRodReset()
		{
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0xDFDBB4", Offset = "0xDFDBB4", VA = "0xDFDBB4")]
		public static void UpdateLastRodhand()
		{
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0xDFDC50", Offset = "0xDFDC50", VA = "0xDFDC50")]
		public static void ReturnRod(bool interactable = true)
		{
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0xDFDCD8", Offset = "0xDFDCD8", VA = "0xDFDCD8")]
		public static void SetRodHand(Handside side)
		{
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0xDFDEA4", Offset = "0xDFDEA4", VA = "0xDFDEA4")]
		public void SetVisibleStamina(bool visible)
		{
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0xDF48A4", Offset = "0xDF48A4", VA = "0xDF48A4")]
		public static void ChangeDebugFish(FishTypeSO fish)
		{
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0xDFE2DC", Offset = "0xDFE2DC", VA = "0xDFE2DC")]
		public FishingManager()
		{
		}
	}
	[Token(Token = "0x20002DE")]
	public class FpsToggle : MonoBehaviour
	{
		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Toggle tog;

		[Token(Token = "0x600127B")]
		[Address(RVA = "0xDFF678", Offset = "0xDFF678", VA = "0xDFF678")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0xDFF71C", Offset = "0xDFF71C", VA = "0xDFF71C")]
		public void OnToggleChange()
		{
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0xDFF7BC", Offset = "0xDFF7BC", VA = "0xDFF7BC")]
		public FpsToggle()
		{
		}
	}
	[Token(Token = "0x20002DF")]
	public class GetSheetData : MonoBehaviour
	{
		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TestSheetRoot testSheet;

		[Token(Token = "0x600127E")]
		[Address(RVA = "0xE00E14", Offset = "0xE00E14", VA = "0xE00E14")]
		private void Start()
		{
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0xE00FF4", Offset = "0xE00FF4", VA = "0xE00FF4")]
		public GetSheetData()
		{
		}
	}
	[Token(Token = "0x20002E0")]
	public class EquipController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200053A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1270", Offset = "0xAC1270")]
		private sealed class <>c
		{
			[Token(Token = "0x4001EEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001EF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<RodSO> <>9__33_1;

			[Token(Token = "0x4001EF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Predicate<LureSO> <>9__45_0;

			[Token(Token = "0x60020A1")]
			[Address(RVA = "0xD059DC", Offset = "0xD059DC", VA = "0xD059DC")]
			public <>c()
			{
			}

			[Token(Token = "0x60020A2")]
			[Address(RVA = "0xD059E4", Offset = "0xD059E4", VA = "0xD059E4")]
			internal int <EventHub_OnItemGot>b__33_1(RodSO x, RodSO y)
			{
				return default(int);
			}

			[Token(Token = "0x60020A3")]
			[Address(RVA = "0xD05A10", Offset = "0xD05A10", VA = "0xD05A10")]
			internal bool <EquipLureBySaving>b__45_0(LureSO x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static EquipController Instance;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool allowSwitchingDuringTutorial;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RodSO m_Rod;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LureSO m_Lure;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private CharmSO m_Charm;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private RodSO DefaultRod;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private LureSO DefaultFloatingLure;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform m_Equip_Rod;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform m_Equip_Lure;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform m_Equip_Charm;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<RodSO> m_UnlockedRod;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<RodSO, int> m_UnlockedRod_Dic;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int m_UnlockedRodIndex;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<LureSO> m_UnlockedLures;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Dictionary<LureSO, int> m_UnlockedLures_Dic;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int m_UnlockedLureIndex;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private LureSO.Type m_currentLureMode;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int m_floatingLureIndex;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int m_swimingLureIndex;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private List<LureSO> m_UnlockedSelectLures;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private SpawnPool Pool;

		[Token(Token = "0x1700019D")]
		public static RodSO RodData
		{
			[Token(Token = "0x6001280")]
			[Address(RVA = "0xD02A20", Offset = "0xD02A20", VA = "0xD02A20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019E")]
		public static LureSO LureData
		{
			[Token(Token = "0x6001281")]
			[Address(RVA = "0xD02A7C", Offset = "0xD02A7C", VA = "0xD02A7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019F")]
		public static CharmSO CharmData
		{
			[Token(Token = "0x6001282")]
			[Address(RVA = "0xD02AD8", Offset = "0xD02AD8", VA = "0xD02AD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0xD02B34", Offset = "0xD02B34", VA = "0xD02B34")]
		private void Start()
		{
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0xD02E10", Offset = "0xD02E10", VA = "0xD02E10")]
		private void SetDefaultEquipment()
		{
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0xD02FB8", Offset = "0xD02FB8", VA = "0xD02FB8")]
		public void Init()
		{
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0xD031F4", Offset = "0xD031F4", VA = "0xD031F4")]
		private void InitUnlockedItems()
		{
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0xD03EE0", Offset = "0xD03EE0", VA = "0xD03EE0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0xD042F0", Offset = "0xD042F0", VA = "0xD042F0")]
		private void OnApplicationPause(bool pauseStatus)
		{
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0xD0438C", Offset = "0xD0438C", VA = "0xD0438C")]
		public void EventHub_OnItemGot(ItemSO itemSO, int amount)
		{
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0xD0488C", Offset = "0xD0488C", VA = "0xD0488C")]
		private void Player_OnLocationChanged(LocationSO locationSO, bool comingFromShip)
		{
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0xD04930", Offset = "0xD04930", VA = "0xD04930")]
		public void ReEquipAll()
		{
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0xD04968", Offset = "0xD04968", VA = "0xD04968")]
		public void DespawnAllEquipments()
		{
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0xD042FC", Offset = "0xD042FC", VA = "0xD042FC")]
		private void OnSaveLureData()
		{
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0xD0379C", Offset = "0xD0379C", VA = "0xD0379C")]
		public void OnEquipEvent(ItemSO equipment)
		{
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0xD04FF8", Offset = "0xD04FF8", VA = "0xD04FF8")]
		public ItemSO GetEquipmentByType(ItemTypeSO.ItemType type)
		{
			return null;
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0xD05034", Offset = "0xD05034", VA = "0xD05034")]
		public bool IsEquippable(ItemTypeSO itemType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0xD04B78", Offset = "0xD04B78", VA = "0xD04B78")]
		private Transform ChangeEquipModel(ItemSO item, Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0xD05058", Offset = "0xD05058", VA = "0xD05058")]
		public void AddEquipWithoutCharm()
		{
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0xD049A0", Offset = "0xD049A0", VA = "0xD049A0")]
		private void DespawnEquipment(ItemSO equipment)
		{
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0xD05084", Offset = "0xD05084", VA = "0xD05084")]
		private void EquipLureByCurrentMode()
		{
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0xD03CE4", Offset = "0xD03CE4", VA = "0xD03CE4")]
		private void EquipLureBySaving()
		{
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0xD0513C", Offset = "0xD0513C", VA = "0xD0513C")]
		private void CacheLureIndexByMode()
		{
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0xD05164", Offset = "0xD05164", VA = "0xD05164")]
		private void SwitchPreviousLure()
		{
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0xD05280", Offset = "0xD05280", VA = "0xD05280")]
		private void SwitchNextLure()
		{
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0xD0538C", Offset = "0xD0538C", VA = "0xD0538C")]
		private void SwitchLureType()
		{
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0xD05620", Offset = "0xD05620", VA = "0xD05620")]
		private void SwitchPole(int offset)
		{
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0xD056E8", Offset = "0xD056E8", VA = "0xD056E8")]
		private void OnPoleCrafted(CraftingRecipesSO recipe)
		{
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0xD05774", Offset = "0xD05774", VA = "0xD05774")]
		public EquipController()
		{
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0xD058C0", Offset = "0xD058C0", VA = "0xD058C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE580", Offset = "0xACE580")]
		private bool <InitUnlockedItems>b__30_0(LureSO x)
		{
			return default(bool);
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0xD058E4", Offset = "0xD058E4", VA = "0xD058E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE590", Offset = "0xACE590")]
		private bool <EventHub_OnItemGot>b__33_0(LureSO x)
		{
			return default(bool);
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0xD05908", Offset = "0xD05908", VA = "0xD05908")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE5A0", Offset = "0xACE5A0")]
		private bool <OnEquipEvent>b__38_0(LureSO x)
		{
			return default(bool);
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0xD0592C", Offset = "0xD0592C", VA = "0xD0592C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE5B0", Offset = "0xACE5B0")]
		private bool <SwitchLureType>b__49_0(LureSO x)
		{
			return default(bool);
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0xD05950", Offset = "0xD05950", VA = "0xD05950")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE5C0", Offset = "0xACE5C0")]
		private bool <SwitchLureType>b__49_1(LureSO x)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002E1")]
	public class InventoryController : MonoBehaviour
	{
		[Token(Token = "0x200053B")]
		public delegate void ItemGetAction(ItemSO item, int amount);

		[Token(Token = "0x200053C")]
		public delegate void PoleGetAction(RodSO rod);

		[Token(Token = "0x200053D")]
		public delegate void CharmGetAction(CharmSO charm);

		[Token(Token = "0x200053E")]
		public delegate void IngredientGetAction(IngredientsSO ingredient);

		[Token(Token = "0x200053F")]
		public delegate void RecipeGetAction(CraftingRecipesSO recipe);

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static InventoryController Instance;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool isLoaded;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public ItemSO[] Items;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<ItemSO, int> m_items;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool wasInitialized;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string lastItemReceivedBCID;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int lastItemReceivedAmount;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private double lastItemReceivedTime;

		[Token(Token = "0x170001A0")]
		public static Dictionary<ItemSO, int> InventoryItems
		{
			[Token(Token = "0x60012A2")]
			[Address(RVA = "0xE036CC", Offset = "0xE036CC", VA = "0xE036CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000060")]
		public static event ItemGetAction OnItemGet
		{
			[Token(Token = "0x60012A3")]
			[Address(RVA = "0xE03740", Offset = "0xE03740", VA = "0xE03740")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE5D0", Offset = "0xACE5D0")]
			add
			{
			}
			[Token(Token = "0x60012A4")]
			[Address(RVA = "0xE03830", Offset = "0xE03830", VA = "0xE03830")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE5E0", Offset = "0xACE5E0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000061")]
		public static event PoleGetAction OnPoleGet
		{
			[Token(Token = "0x60012A5")]
			[Address(RVA = "0xE03920", Offset = "0xE03920", VA = "0xE03920")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE5F0", Offset = "0xACE5F0")]
			add
			{
			}
			[Token(Token = "0x60012A6")]
			[Address(RVA = "0xE03A10", Offset = "0xE03A10", VA = "0xE03A10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE600", Offset = "0xACE600")]
			remove
			{
			}
		}

		[Token(Token = "0x14000062")]
		public static event CharmGetAction OnCharmGet
		{
			[Token(Token = "0x60012A7")]
			[Address(RVA = "0xE03B00", Offset = "0xE03B00", VA = "0xE03B00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE610", Offset = "0xACE610")]
			add
			{
			}
			[Token(Token = "0x60012A8")]
			[Address(RVA = "0xE03BF0", Offset = "0xE03BF0", VA = "0xE03BF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE620", Offset = "0xACE620")]
			remove
			{
			}
		}

		[Token(Token = "0x14000063")]
		public static event IngredientGetAction OnIngredientGet
		{
			[Token(Token = "0x60012A9")]
			[Address(RVA = "0xE03CE0", Offset = "0xE03CE0", VA = "0xE03CE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE630", Offset = "0xACE630")]
			add
			{
			}
			[Token(Token = "0x60012AA")]
			[Address(RVA = "0xE03DD0", Offset = "0xE03DD0", VA = "0xE03DD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE640", Offset = "0xACE640")]
			remove
			{
			}
		}

		[Token(Token = "0x14000064")]
		public static event RecipeGetAction OnRecipeGet
		{
			[Token(Token = "0x60012AB")]
			[Address(RVA = "0xE03EC0", Offset = "0xE03EC0", VA = "0xE03EC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE650", Offset = "0xACE650")]
			add
			{
			}
			[Token(Token = "0x60012AC")]
			[Address(RVA = "0xE03FB0", Offset = "0xE03FB0", VA = "0xE03FB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE660", Offset = "0xACE660")]
			remove
			{
			}
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0xE040A0", Offset = "0xE040A0", VA = "0xE040A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0xE04118", Offset = "0xE04118", VA = "0xE04118")]
		public void Init()
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0xE0424C", Offset = "0xE0424C", VA = "0xE0424C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0xE042F8", Offset = "0xE042F8", VA = "0xE042F8")]
		private void OnMissionCompleted(MissionSO.MissionTypes type, MissionSO.Reward[] rewards, bool isCheating)
		{
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0xE04600", Offset = "0xE04600", VA = "0xE04600")]
		public void AddItem(ItemSO item, int amount)
		{
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0xE05598", Offset = "0xE05598", VA = "0xE05598")]
		public void RemoveItem(ItemSO item)
		{
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0xE0611C", Offset = "0xE0611C", VA = "0xE0611C")]
		private bool UI_CharmCraftingController_OnCraftStarted(CraftingRecipesSO craftingRecipes, int multiple)
		{
			return default(bool);
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0xE06258", Offset = "0xE06258", VA = "0xE06258")]
		private bool IsEnoughStock(CraftingRecipesSO craftingRecipes, int multiple)
		{
			return default(bool);
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0xE04AB4", Offset = "0xE04AB4", VA = "0xE04AB4")]
		private void CreateItem(CraftingRecipesSO craftingRecipes, int multiple, bool isCheating = false)
		{
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0xE06210", Offset = "0xE06210", VA = "0xE06210")]
		public int GetMaxInStock(CraftingRecipesSO craftingRecipes)
		{
			return default(int);
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0xE0633C", Offset = "0xE0633C", VA = "0xE0633C")]
		public void ResetInventory()
		{
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0xE06474", Offset = "0xE06474", VA = "0xE06474")]
		public InventoryController()
		{
		}
	}
	[Token(Token = "0x20002E2")]
	public class Test_InventoryController : MonoBehaviour
	{
		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UI_InventoryController UI_InventoryController;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ItemSO[] Items;

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0xD18DA0", Offset = "0xD18DA0", VA = "0xD18DA0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0xD18E34", Offset = "0xD18E34", VA = "0xD18E34")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0xD18EC8", Offset = "0xD18EC8", VA = "0xD18EC8")]
		private void Start()
		{
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0xD195B0", Offset = "0xD195B0", VA = "0xD195B0")]
		private void LocationChanged(LocationSO locationSO, bool comingFromShip)
		{
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0xD195B4", Offset = "0xD195B4", VA = "0xD195B4")]
		public Test_InventoryController()
		{
		}
	}
	[Token(Token = "0x20002E3")]
	public class UI_InventoryController : MonoBehaviour
	{
		[Token(Token = "0x2000540")]
		public delegate void EquipAction(ItemSO item);

		[Serializable]
		[Token(Token = "0x2000541")]
		private struct Equipped
		{
			[Token(Token = "0x4001EF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Button btn;

			[Token(Token = "0x4001EF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ItemTypeSO itemType;
		}

		[Serializable]
		[Token(Token = "0x2000542")]
		private struct Rods
		{
			[Token(Token = "0x4001EF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Button btn;

			[Token(Token = "0x4001EF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Image RodIcon;

			[Token(Token = "0x4001EF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Localize RodName;
		}

		[Token(Token = "0x2000543")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1280", Offset = "0xAC1280")]
		private sealed class <>c__DisplayClass53_0
		{
			[Token(Token = "0x4001EF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UI_InventoryController <>4__this;

			[Token(Token = "0x4001EF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ItemSO item;

			[Token(Token = "0x60020BC")]
			[Address(RVA = "0xD242C4", Offset = "0xD242C4", VA = "0xD242C4")]
			public <>c__DisplayClass53_0()
			{
			}

			[Token(Token = "0x60020BD")]
			[Address(RVA = "0xD247B0", Offset = "0xD247B0", VA = "0xD247B0")]
			internal void <OnGenerateItemEvent>b__0()
			{
			}
		}

		[Token(Token = "0x2000544")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1290", Offset = "0xAC1290")]
		private sealed class <>c__DisplayClass54_0
		{
			[Token(Token = "0x4001EF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RodSO rod;

			[Token(Token = "0x4001EFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UI_InventoryController <>4__this;

			[Token(Token = "0x60020BE")]
			[Address(RVA = "0xD24310", Offset = "0xD24310", VA = "0xD24310")]
			public <>c__DisplayClass54_0()
			{
			}

			[Token(Token = "0x60020BF")]
			[Address(RVA = "0xD247D0", Offset = "0xD247D0", VA = "0xD247D0")]
			internal void <ItemFilter>b__0()
			{
			}

			[Token(Token = "0x60020C0")]
			[Address(RVA = "0xD247F0", Offset = "0xD247F0", VA = "0xD247F0")]
			internal void <ItemFilter>b__1()
			{
			}

			[Token(Token = "0x60020C1")]
			[Address(RVA = "0xD24810", Offset = "0xD24810", VA = "0xD24810")]
			internal void <ItemFilter>b__2()
			{
			}
		}

		[Token(Token = "0x2000545")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC12A0", Offset = "0xAC12A0")]
		private sealed class <>c__DisplayClass56_0
		{
			[Token(Token = "0x4001EFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UI_InventoryController <>4__this;

			[Token(Token = "0x4001EFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ItemSO item;

			[Token(Token = "0x4001EFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityAction <>9__0;

			[Token(Token = "0x60020C2")]
			[Address(RVA = "0xD243B8", Offset = "0xD243B8", VA = "0xD243B8")]
			public <>c__DisplayClass56_0()
			{
			}

			[Token(Token = "0x60020C3")]
			[Address(RVA = "0xD24830", Offset = "0xD24830", VA = "0xD24830")]
			internal void <CheckEquipped>b__0()
			{
			}
		}

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color32 DefaultColor;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Color32 SelectColor;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Equipped[] Equipped_btns;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button[] Tab_btns;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Localize Title;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Localize Description;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Image DetailIcon;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Image SwimmingLureIcon;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UI_InventoryItem ItemPrefab;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform ItemGenerate;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Image CheckIcon;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Rods PowerReelRod;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Rods StunRod;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Rods TeleportRod;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private GameObject ItemList;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private GameObject RodList;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private RectTransform ItemScrollView;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private RectTransform ItemContent;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private GridLayoutGroup ItemLayout;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private UI_PageDotController m_dotController;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private Button ArrowNext;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private Button ArrowPrev;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private GestureScrollRect m_gestureScrollRect;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private GameObject RodChargeUI;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private Slider RodChargeSlider;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private TextMeshProUGUI RodChargeText;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Dictionary<ItemSO, UI_InventoryItem> m_Item_Dic;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private ItemTypeSO m_itemType;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Vector3 CheckIcon_Scale;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private float m_MoveDuration;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float m_ContantSize;

		[Token(Token = "0x14000065")]
		public static event EquipAction OnEquiped
		{
			[Token(Token = "0x60012BF")]
			[Address(RVA = "0xD2247C", Offset = "0xD2247C", VA = "0xD2247C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE670", Offset = "0xACE670")]
			add
			{
			}
			[Token(Token = "0x60012C0")]
			[Address(RVA = "0xD22530", Offset = "0xD22530", VA = "0xD22530")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE680", Offset = "0xACE680")]
			remove
			{
			}
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0xD225E4", Offset = "0xD225E4", VA = "0xD225E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0xD2290C", Offset = "0xD2290C", VA = "0xD2290C")]
		private void Start()
		{
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0xD22CC0", Offset = "0xD22CC0", VA = "0xD22CC0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0xD22EF0", Offset = "0xD22EF0", VA = "0xD22EF0")]
		private void EventHub_ItemGot(ItemSO item, int amount)
		{
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0xD23720", Offset = "0xD23720", VA = "0xD23720")]
		private void OnItemGet(ItemSO item, int amount)
		{
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0xD22FB4", Offset = "0xD22FB4", VA = "0xD22FB4")]
		private void ChangeAmountOnUI(ItemSO item)
		{
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0xD23724", Offset = "0xD23724", VA = "0xD23724")]
		public void OnItemClick(ItemSO item)
		{
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0xD23978", Offset = "0xD23978", VA = "0xD23978")]
		private void UpdateRodChargeDisplay(ItemSO item)
		{
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0xD23CFC", Offset = "0xD23CFC", VA = "0xD23CFC")]
		private void UpdateCurrentRodStatus(float charge)
		{
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0xD23BEC", Offset = "0xD23BEC", VA = "0xD23BEC")]
		private void UpdateBoostSlider(float rodCurrentCharge, float rodFullCharge)
		{
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0xD19278", Offset = "0xD19278", VA = "0xD19278")]
		public void OnTabClick(ItemTypeSO itemType)
		{
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0xD23DD0", Offset = "0xD23DD0", VA = "0xD23DD0")]
		private void ShowEquippedCharm()
		{
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0xD23DA4", Offset = "0xD23DA4", VA = "0xD23DA4")]
		private void ShowEquippedLure()
		{
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0xD23D28", Offset = "0xD23D28", VA = "0xD23D28")]
		private void ShowEquippedRod()
		{
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0xD23E68", Offset = "0xD23E68", VA = "0xD23E68")]
		public void OnEquippedClick(ItemSO item)
		{
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0xD23B68", Offset = "0xD23B68", VA = "0xD23B68")]
		public void OnEquip([Optional] ItemSO item)
		{
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0xD18F9C", Offset = "0xD18F9C", VA = "0xD18F9C")]
		public void OnGenerateItemEvent(ItemSO item)
		{
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0xD2309C", Offset = "0xD2309C", VA = "0xD2309C")]
		public void ItemFilter(ItemTypeSO itemType)
		{
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0xD242CC", Offset = "0xD242CC", VA = "0xD242CC")]
		private bool CheckItemAmount(ItemSO item)
		{
			return default(bool);
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0xD229BC", Offset = "0xD229BC", VA = "0xD229BC")]
		private void CheckEquipped(ItemSO item)
		{
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0xD243C0", Offset = "0xD243C0", VA = "0xD243C0")]
		public void OnNextArrowClick()
		{
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0xD24400", Offset = "0xD24400", VA = "0xD24400")]
		private void OnIncreaseScrollPos(int page = 1)
		{
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0xD24528", Offset = "0xD24528", VA = "0xD24528")]
		public void OnPreviousArrowClick()
		{
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0xD24318", Offset = "0xD24318", VA = "0xD24318")]
		private void setArrow(int idx = 0)
		{
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0xD24568", Offset = "0xD24568", VA = "0xD24568")]
		private void OnDecreaseScrollPos(int page = 1)
		{
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0xD24690", Offset = "0xD24690", VA = "0xD24690")]
		public UI_InventoryController()
		{
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0xD2471C", Offset = "0xD2471C", VA = "0xD2471C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE690", Offset = "0xACE690")]
		private void <OnIncreaseScrollPos>b__58_0(float x)
		{
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0xD24768", Offset = "0xD24768", VA = "0xD24768")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE6A0", Offset = "0xACE6A0")]
		private void <OnDecreaseScrollPos>b__61_0(float x)
		{
		}
	}
	[Token(Token = "0x20002E4")]
	public class UI_InventoryItem : MonoBehaviour
	{
		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Button Btn;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image IconImage;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject AmountGO;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TMP_Text Amount;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image SwimmingLureIcon;

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0xD24894", Offset = "0xD24894", VA = "0xD24894")]
		public UI_InventoryItem()
		{
		}
	}
	[Token(Token = "0x20002E5")]
	public class UI_ScreenSaverController : MonoBehaviour
	{
		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Localize TabTo;

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0xE1081C", Offset = "0xE1081C", VA = "0xE1081C")]
		public UI_ScreenSaverController()
		{
		}
	}
	[Token(Token = "0x20002E6")]
	public class Jellyfish : MonoBehaviour
	{
		[Token(Token = "0x2000546")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC12B0", Offset = "0xAC12B0")]
		private sealed class <swimming>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float duration;

			[Token(Token = "0x4001F01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Jellyfish <>4__this;

			[Token(Token = "0x4001F02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 targetVector;

			[Token(Token = "0x4001F03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <targetTime>5__2;

			[Token(Token = "0x17000353")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020C7")]
				[Address(RVA = "0xE06A8C", Offset = "0xE06A8C", VA = "0xE06A8C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000354")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020C9")]
				[Address(RVA = "0xE06AF4", Offset = "0xE06AF4", VA = "0xE06AF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020C4")]
			[Address(RVA = "0xE06994", Offset = "0xE06994", VA = "0xE06994")]
			[DebuggerHidden]
			public <swimming>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x60020C5")]
			[Address(RVA = "0xE069C8", Offset = "0xE069C8", VA = "0xE069C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020C6")]
			[Address(RVA = "0xE069CC", Offset = "0xE069CC", VA = "0xE069CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020C8")]
			[Address(RVA = "0xE06A94", Offset = "0xE06A94", VA = "0xE06A94", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Rigidbody rb;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform target;

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0xE066F8", Offset = "0xE066F8", VA = "0xE066F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0xE067AC", Offset = "0xE067AC", VA = "0xE067AC")]
		private void swim()
		{
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0xE068EC", Offset = "0xE068EC", VA = "0xE068EC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACE6B0", Offset = "0xACE6B0")]
		private IEnumerator swimming(Vector3 targetVector, float duration)
		{
			return null;
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0xE069C0", Offset = "0xE069C0", VA = "0xE069C0")]
		public Jellyfish()
		{
		}
	}
	[Token(Token = "0x20002E7")]
	public class LineTension : MonoBehaviour
	{
		[Token(Token = "0x2000547")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC12C0", Offset = "0xAC12C0")]
		private sealed class <RunRageTensionDrop>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LineTension <>4__this;

			[Token(Token = "0x17000355")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020CD")]
				[Address(RVA = "0xE07B98", Offset = "0xE07B98", VA = "0xE07B98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000356")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020CF")]
				[Address(RVA = "0xE07C00", Offset = "0xE07C00", VA = "0xE07C00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020CA")]
			[Address(RVA = "0xE0793C", Offset = "0xE0793C", VA = "0xE0793C")]
			[DebuggerHidden]
			public <RunRageTensionDrop>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x60020CB")]
			[Address(RVA = "0xE07B08", Offset = "0xE07B08", VA = "0xE07B08", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020CC")]
			[Address(RVA = "0xE07B0C", Offset = "0xE07B0C", VA = "0xE07B0C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020CE")]
			[Address(RVA = "0xE07BA0", Offset = "0xE07BA0", VA = "0xE07BA0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000548")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC12D0", Offset = "0xAC12D0")]
		private sealed class <>c__DisplayClass36_0
		{
			[Token(Token = "0x4001F07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LineTension <>4__this;

			[Token(Token = "0x4001F08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float val;

			[Token(Token = "0x60020D0")]
			[Address(RVA = "0xE07968", Offset = "0xE07968", VA = "0xE07968")]
			public <>c__DisplayClass36_0()
			{
			}

			[Token(Token = "0x60020D1")]
			[Address(RVA = "0xE07A8C", Offset = "0xE07A8C", VA = "0xE07A8C")]
			internal float <OverrideLineTension>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x60020D2")]
			[Address(RVA = "0xE07AA8", Offset = "0xE07AA8", VA = "0xE07AA8")]
			internal void <OverrideLineTension>b__1(float x)
			{
			}

			[Token(Token = "0x60020D3")]
			[Address(RVA = "0xE07AC4", Offset = "0xE07AC4", VA = "0xE07AC4")]
			internal void <OverrideLineTension>b__2()
			{
			}
		}

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RodBender rodBender;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float tension;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float tensionMinimum;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float redZoneStart;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float tensionRiseNormal;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float tensionRisePatternPlay;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float tensionRisePatternPlayFillingLean;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float tensionRisePatternPlayNotFillingLean;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float tensionRiseRunRage;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float tensionFallNormal;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float tensionFallPatternPlay;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float tensionFallPatternPlayFillingLean;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float tensionFallPatternPlayNotFillingLean;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float tensionFallRunRage;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float maxCrankTension;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly float lineTensionMax;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int crankSmoothing;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float[] crankTensionValsNew;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int crankSmoothIndex;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float crankTensionSmoothed;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float tensionOverrideBounceDuration;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Tween rlsTension;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Tween tensionBounce;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float tensionOverride;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool isBoosting;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float postBoostTensionVal;

		[Token(Token = "0x170001A1")]
		public float Tension
		{
			[Token(Token = "0x60012E3")]
			[Address(RVA = "0xDF644C", Offset = "0xDF644C", VA = "0xDF644C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0xE06AFC", Offset = "0xE06AFC", VA = "0xE06AFC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0xE06C10", Offset = "0xE06C10", VA = "0xE06C10")]
		private void RodReset()
		{
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0xE06E3C", Offset = "0xE06E3C", VA = "0xE06E3C")]
		private void Update()
		{
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0xE07278", Offset = "0xE07278", VA = "0xE07278")]
		private void UpdateRodBend()
		{
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0xE0740C", Offset = "0xE0740C", VA = "0xE0740C")]
		internal void UpdateCrankTension(float crankVelo)
		{
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0xE07598", Offset = "0xE07598", VA = "0xE07598")]
		public void ReleaseMaxTension()
		{
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0xE078C0", Offset = "0xE078C0", VA = "0xE078C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACE714", Offset = "0xACE714")]
		private IEnumerator RunRageTensionDrop()
		{
			return null;
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0xE07120", Offset = "0xE07120", VA = "0xE07120")]
		private void StopReleaseTension()
		{
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0xE06C1C", Offset = "0xE06C1C", VA = "0xE06C1C")]
		public void OverrideLineTension(float val = 0f, bool isImmediate = false)
		{
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0xE07970", Offset = "0xE07970", VA = "0xE07970")]
		public void OverrideTensionVals(float val)
		{
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0xE07160", Offset = "0xE07160", VA = "0xE07160")]
		private void SmoothLineTensionNew(float val)
		{
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0xE071A0", Offset = "0xE071A0", VA = "0xE071A0")]
		private float CrankTensionSmoothed()
		{
			return default(float);
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0xE06BE4", Offset = "0xE06BE4", VA = "0xE06BE4")]
		public void ResetTensionRiseFallDefaults()
		{
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0xE079D0", Offset = "0xE079D0", VA = "0xE079D0")]
		public void TensionMeterBoost(bool state)
		{
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0xE07A3C", Offset = "0xE07A3C", VA = "0xE07A3C")]
		public LineTension()
		{
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0xE07A5C", Offset = "0xE07A5C", VA = "0xE07A5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE778", Offset = "0xACE778")]
		private float <ReleaseMaxTension>b__33_0()
		{
			return default(float);
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0xE07A64", Offset = "0xE07A64", VA = "0xE07A64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE788", Offset = "0xACE788")]
		private void <ReleaseMaxTension>b__33_1(float x)
		{
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0xE07A6C", Offset = "0xE07A6C", VA = "0xE07A6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE798", Offset = "0xACE798")]
		private float <ReleaseMaxTension>b__33_2()
		{
			return default(float);
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0xE07A74", Offset = "0xE07A74", VA = "0xE07A74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE7A8", Offset = "0xACE7A8")]
		private void <ReleaseMaxTension>b__33_3(float x)
		{
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0xE07A7C", Offset = "0xE07A7C", VA = "0xE07A7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE7B8", Offset = "0xACE7B8")]
		private float <ReleaseMaxTension>b__33_4()
		{
			return default(float);
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0xE07A84", Offset = "0xE07A84", VA = "0xE07A84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE7C8", Offset = "0xACE7C8")]
		private void <ReleaseMaxTension>b__33_5(float x)
		{
		}
	}
	[Token(Token = "0x20002E8")]
	public class LootBox_Slot : MonoBehaviour
	{
		[Token(Token = "0x60012F9")]
		[Address(RVA = "0xE07C48", Offset = "0xE07C48", VA = "0xE07C48")]
		public LootBox_Slot()
		{
		}
	}
	[Token(Token = "0x20002E9")]
	public class Lure : MonoBehaviour
	{
		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Lure instance;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject model;

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0xE0A058", Offset = "0xE0A058", VA = "0xE0A058")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0xE0A0E8", Offset = "0xE0A0E8", VA = "0xE0A0E8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0xE0A15C", Offset = "0xE0A15C", VA = "0xE0A15C")]
		private void LureEquip(LureSO lure)
		{
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0xE0A1FC", Offset = "0xE0A1FC", VA = "0xE0A1FC")]
		public Lure()
		{
		}
	}
	[Token(Token = "0x20002EA")]
	public class ChallengeMissionController : MonoBehaviour
	{
		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ChallengeMissionController instance;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<MissionSO, bool> m_UnlockedChallengeMission_Dic;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<MissionSO> m_UnlockedChallengeMission;

		[Token(Token = "0x170001A2")]
		public static MissionSO[] UnlockedChallengeMissions
		{
			[Token(Token = "0x60012FE")]
			[Address(RVA = "0xCF63F8", Offset = "0xCF63F8", VA = "0xCF63F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A3")]
		public static MissionSO CurrentChallengeMission
		{
			[Token(Token = "0x60012FF")]
			[Address(RVA = "0xCF6464", Offset = "0xCF6464", VA = "0xCF6464")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0xCF64E0", Offset = "0xCF64E0", VA = "0xCF64E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0xCF692C", Offset = "0xCF692C", VA = "0xCF692C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0xCF6BB8", Offset = "0xCF6BB8", VA = "0xCF6BB8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0xCF6FA0", Offset = "0xCF6FA0", VA = "0xCF6FA0")]
		private void EventHub_OnChallengeMissionAccepted(MissionSO mission)
		{
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0xCF700C", Offset = "0xCF700C", VA = "0xCF700C")]
		private void EventHub_OnMissionLoad(MissionSO mission)
		{
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0xCF7030", Offset = "0xCF7030", VA = "0xCF7030")]
		private void EventHub_OnFishCaught(FpFish fish, bool isCheating)
		{
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0xCF7108", Offset = "0xCF7108", VA = "0xCF7108")]
		private void EventHub_OnItemGot(ItemSO itemSO, int amount)
		{
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0xCF6B00", Offset = "0xCF6B00", VA = "0xCF6B00")]
		private void OnChallengeMissionLoad(MissionSO mission)
		{
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0xCF71E0", Offset = "0xCF71E0", VA = "0xCF71E0")]
		public ChallengeMissionController()
		{
		}
	}
	[Token(Token = "0x20002EB")]
	public class MissionController : MonoBehaviour
	{
		[Token(Token = "0x2000549")]
		public delegate void MissionCompleteAction(MissionSO.MissionTypes type, MissionSO.Reward[] rewards, bool isCheating);

		[Token(Token = "0x200054A")]
		public delegate void McFishCaughtAction(MissionSO.TargetFish targetFish);

		[Token(Token = "0x200054B")]
		public delegate void McItemGotAction(MissionSO.TargetItem targetItem);

		[Token(Token = "0x200054C")]
		public delegate void McLocationChangedAction(LocationSO location);

		[Token(Token = "0x200054D")]
		public delegate void McOnAquariumMissionClearedAction();

		[Token(Token = "0x200054E")]
		private class FishGoal
		{
			[Token(Token = "0x4001F09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FishTypeSO TargetFish;

			[Token(Token = "0x4001F0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int GoalStarRating;

			[Token(Token = "0x4001F0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public FishTypeSO.Grade GoalGrade;

			[Token(Token = "0x4001F0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int GoalAmount;

			[Token(Token = "0x4001F0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int Goaled;

			[Token(Token = "0x4001F0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool IsAnyofTarget;

			[Token(Token = "0x4001F0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
			public bool IsClear;

			[Token(Token = "0x60020E8")]
			[Address(RVA = "0xE47874", Offset = "0xE47874", VA = "0xE47874")]
			public FishGoal()
			{
			}
		}

		[Token(Token = "0x200054F")]
		private class ItemGoal
		{
			[Token(Token = "0x4001F10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ItemSO TargetItem;

			[Token(Token = "0x4001F11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int GoalAmount;

			[Token(Token = "0x4001F12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int Goaled;

			[Token(Token = "0x4001F13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool IsClear;

			[Token(Token = "0x60020E9")]
			[Address(RVA = "0xE4787C", Offset = "0xE4787C", VA = "0xE4787C")]
			public ItemGoal()
			{
			}
		}

		[Token(Token = "0x2000550")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC12E0", Offset = "0xAC12E0")]
		private sealed class <>c__DisplayClass82_0
		{
			[Token(Token = "0x4001F14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float timer;

			[Token(Token = "0x4001F15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MissionController <>4__this;

			[Token(Token = "0x60020EA")]
			[Address(RVA = "0xE4BEA0", Offset = "0xE4BEA0", VA = "0xE4BEA0")]
			public <>c__DisplayClass82_0()
			{
			}

			[Token(Token = "0x60020EB")]
			[Address(RVA = "0xE4DEF4", Offset = "0xE4DEF4", VA = "0xE4DEF4")]
			internal void <OnSetupTimedMission>b__0(float x)
			{
			}

			[Token(Token = "0x60020EC")]
			[Address(RVA = "0xE4DEFC", Offset = "0xE4DEFC", VA = "0xE4DEFC")]
			internal void <OnSetupTimedMission>b__1()
			{
			}

			[Token(Token = "0x60020ED")]
			[Address(RVA = "0xE4DF78", Offset = "0xE4DF78", VA = "0xE4DF78")]
			internal void <OnSetupTimedMission>b__2()
			{
			}
		}

		[Token(Token = "0x2000551")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC12F0", Offset = "0xAC12F0")]
		private sealed class <LoadPopScene>d__113 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MissionController <>4__this;

			[Token(Token = "0x17000357")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020F1")]
				[Address(RVA = "0xE4E048", Offset = "0xE4E048", VA = "0xE4E048", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000358")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020F3")]
				[Address(RVA = "0xE4E0B0", Offset = "0xE4E0B0", VA = "0xE4E0B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020EE")]
			[Address(RVA = "0xE4DC58", Offset = "0xE4DC58", VA = "0xE4DC58")]
			[DebuggerHidden]
			public <LoadPopScene>d__113(int <>1__state)
			{
			}

			[Token(Token = "0x60020EF")]
			[Address(RVA = "0xE4DF84", Offset = "0xE4DF84", VA = "0xE4DF84", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020F0")]
			[Address(RVA = "0xE4DF88", Offset = "0xE4DF88", VA = "0xE4DF88", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020F2")]
			[Address(RVA = "0xE4E050", Offset = "0xE4E050", VA = "0xE4E050", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000552")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1300", Offset = "0xAC1300")]
		private sealed class <UnLoadPopScene>d__114 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MissionController <>4__this;

			[Token(Token = "0x17000359")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020F7")]
				[Address(RVA = "0xE4E178", Offset = "0xE4E178", VA = "0xE4E178", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700035A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020F9")]
				[Address(RVA = "0xE4E1E0", Offset = "0xE4E1E0", VA = "0xE4E1E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020F4")]
			[Address(RVA = "0xE4DC84", Offset = "0xE4DC84", VA = "0xE4DC84")]
			[DebuggerHidden]
			public <UnLoadPopScene>d__114(int <>1__state)
			{
			}

			[Token(Token = "0x60020F5")]
			[Address(RVA = "0xE4E0B8", Offset = "0xE4E0B8", VA = "0xE4E0B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020F6")]
			[Address(RVA = "0xE4E0BC", Offset = "0xE4E0BC", VA = "0xE4E0BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020F8")]
			[Address(RVA = "0xE4E180", Offset = "0xE4E180", VA = "0xE4E180", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static MissionController Instance;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FishTypeSO[] AnyFishable;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ItemSO[] AnyItemable;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MissionSO[] Mission;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string popScene;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool popVisible;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private FishTypeSO finalFish;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MissionSO m_Data;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MissionSO currentStoryMission;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MissionSO m_NextMission;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Tween TimedMission;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<MissionSO, bool> m_CompletedMission_Dic;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MissionSO m_CompletedMission;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Dictionary<FishTypeSO, List<FishGoal>> m_FishGoal_Dic;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Dictionary<FishTypeSO.FishableType, FishTypeSO> m_AnyFishAble_Dic;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Dictionary<FishTypeSO, int> m_AnyFish_Dic;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float m_FishGoalTotalWeight;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int m_FishGoalTotalStar;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<ItemSO, List<ItemGoal>> m_ItemGoal_Dic;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<ItemSO, int> m_AnyItem_Dic;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Dictionary<FishGoal, int> m_FishFailTime_Dic;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int m_FishCatchingCount;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private bool skippingMission;

		[Token(Token = "0x170001A4")]
		public static FishTypeSO[] AnyFishes
		{
			[Token(Token = "0x6001313")]
			[Address(RVA = "0xE45914", Offset = "0xE45914", VA = "0xE45914")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A5")]
		public static MissionSO DefaultMission
		{
			[Token(Token = "0x6001314")]
			[Address(RVA = "0xE448B0", Offset = "0xE448B0", VA = "0xE448B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A6")]
		public static Dictionary<MissionSO, bool> CompletedMission_Dic
		{
			[Token(Token = "0x6001315")]
			[Address(RVA = "0xE45970", Offset = "0xE45970", VA = "0xE45970")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A7")]
		public static MissionSO CompletedMission
		{
			[Token(Token = "0x6001316")]
			[Address(RVA = "0xE459CC", Offset = "0xE459CC", VA = "0xE459CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A8")]
		public static Dictionary<FishTypeSO.FishableType, FishTypeSO> AnyFishable_Dic
		{
			[Token(Token = "0x6001317")]
			[Address(RVA = "0xE45A28", Offset = "0xE45A28", VA = "0xE45A28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A9")]
		public static Dictionary<FishTypeSO, int> AnyFish_Dic
		{
			[Token(Token = "0x6001318")]
			[Address(RVA = "0xE45A84", Offset = "0xE45A84", VA = "0xE45A84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AA")]
		public static Dictionary<ItemSO, int> AnyItem_Dic
		{
			[Token(Token = "0x6001319")]
			[Address(RVA = "0xE45AE0", Offset = "0xE45AE0", VA = "0xE45AE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000066")]
		public static event MissionCompleteAction OnMissionCompleted
		{
			[Token(Token = "0x6001309")]
			[Address(RVA = "0xE451E4", Offset = "0xE451E4", VA = "0xE451E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE7D8", Offset = "0xACE7D8")]
			add
			{
			}
			[Token(Token = "0x600130A")]
			[Address(RVA = "0xE4529C", Offset = "0xE4529C", VA = "0xE4529C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE7E8", Offset = "0xACE7E8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000067")]
		public static event McFishCaughtAction McOnFishCaught
		{
			[Token(Token = "0x600130B")]
			[Address(RVA = "0xE45354", Offset = "0xE45354", VA = "0xE45354")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE7F8", Offset = "0xACE7F8")]
			add
			{
			}
			[Token(Token = "0x600130C")]
			[Address(RVA = "0xE4540C", Offset = "0xE4540C", VA = "0xE4540C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE808", Offset = "0xACE808")]
			remove
			{
			}
		}

		[Token(Token = "0x14000068")]
		public static event McItemGotAction McOnItemGot
		{
			[Token(Token = "0x600130D")]
			[Address(RVA = "0xE454C4", Offset = "0xE454C4", VA = "0xE454C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE818", Offset = "0xACE818")]
			add
			{
			}
			[Token(Token = "0x600130E")]
			[Address(RVA = "0xE4557C", Offset = "0xE4557C", VA = "0xE4557C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE828", Offset = "0xACE828")]
			remove
			{
			}
		}

		[Token(Token = "0x14000069")]
		public static event McLocationChangedAction McOnLocationChanged
		{
			[Token(Token = "0x600130F")]
			[Address(RVA = "0xE45634", Offset = "0xE45634", VA = "0xE45634")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE838", Offset = "0xACE838")]
			add
			{
			}
			[Token(Token = "0x6001310")]
			[Address(RVA = "0xE456EC", Offset = "0xE456EC", VA = "0xE456EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE848", Offset = "0xACE848")]
			remove
			{
			}
		}

		[Token(Token = "0x1400006A")]
		public static event McOnAquariumMissionClearedAction McOnAquariumMissionCleared
		{
			[Token(Token = "0x6001311")]
			[Address(RVA = "0xE457A4", Offset = "0xE457A4", VA = "0xE457A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE858", Offset = "0xACE858")]
			add
			{
			}
			[Token(Token = "0x6001312")]
			[Address(RVA = "0xE4585C", Offset = "0xE4585C", VA = "0xE4585C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACE868", Offset = "0xACE868")]
			remove
			{
			}
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0xE45B3C", Offset = "0xE45B3C", VA = "0xE45B3C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0xE4667C", Offset = "0xE4667C", VA = "0xE4667C")]
		private void Start()
		{
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0xE46E58", Offset = "0xE46E58", VA = "0xE46E58")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0xE4714C", Offset = "0xE4714C", VA = "0xE4714C")]
		private void EventHub_OnSideMissionQuitted()
		{
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0xE47340", Offset = "0xE47340", VA = "0xE47340")]
		private void EventHub_OnSideMissionAccepted(MissionSO mission)
		{
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0xE4741C", Offset = "0xE4741C", VA = "0xE4741C")]
		public void InitAnyFish([Optional] FishTypeSO[] fishes)
		{
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0xE4742C", Offset = "0xE4742C", VA = "0xE4742C")]
		public void InitAnyItem([Optional] ItemSO[] items)
		{
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0xE4743C", Offset = "0xE4743C", VA = "0xE4743C")]
		public void InitNextMission(MissionSO mission)
		{
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0xE47480", Offset = "0xE47480", VA = "0xE47480")]
		private void LoadData()
		{
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0xE47204", Offset = "0xE47204", VA = "0xE47204")]
		private void MissionLoad(MissionSO mission)
		{
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0xE46794", Offset = "0xE46794", VA = "0xE46794")]
		public void SetMissionDic(MissionSO mission)
		{
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0xE47B04", Offset = "0xE47B04", VA = "0xE47B04")]
		private void OnCheckFishMissionComplete(FpFish fish)
		{
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0xE47B8C", Offset = "0xE47B8C", VA = "0xE47B8C")]
		public void checkFishMissionComplete(FpFish fish, MissionSO mission, LocationSO location)
		{
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0xE4A81C", Offset = "0xE4A81C", VA = "0xE4A81C")]
		private void OnCheckItemMissionComplete(ItemSO item, int amount)
		{
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0xE4A8E8", Offset = "0xE4A8E8", VA = "0xE4A8E8")]
		public void checkItemMissionComplete(ItemSO item, int amount, MissionSO mission, [Optional] LocationSO location)
		{
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0xE4AFF0", Offset = "0xE4AFF0", VA = "0xE4AFF0")]
		private void CheckAquariumMissionComplete()
		{
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0xE4B354", Offset = "0xE4B354", VA = "0xE4B354")]
		private void CheckItemMission()
		{
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0xE4B35C", Offset = "0xE4B35C", VA = "0xE4B35C")]
		public bool CheckAllMission(MissionSO mission)
		{
			return default(bool);
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0xE4B88C", Offset = "0xE4B88C", VA = "0xE4B88C")]
		private void ToNextMission(MissionSO mission)
		{
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0xE4BBAC", Offset = "0xE4BBAC", VA = "0xE4BBAC")]
		private void OnMissionComplete(MissionSO mission, bool isCheating = false)
		{
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0xE4BBB8", Offset = "0xE4BBB8", VA = "0xE4BBB8")]
		private void OnMissionComplete(MissionSO mission)
		{
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0xE4BAF0", Offset = "0xE4BAF0", VA = "0xE4BAF0")]
		private void ChangePlayerLocation(LocationSO location)
		{
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0xE4BC24", Offset = "0xE4BC24", VA = "0xE4BC24")]
		private void Player_OnLocationChanged(LocationSO locationSO, bool comingFromShip)
		{
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0xE4BC9C", Offset = "0xE4BC9C", VA = "0xE4BC9C")]
		private void OnSetupTimedMission(float time)
		{
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0xE48390", Offset = "0xE48390", VA = "0xE48390")]
		private bool CheckMissionLocation(MissionSO mission, LocationSO locationSO)
		{
			return default(bool);
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0xE475F8", Offset = "0xE475F8", VA = "0xE475F8")]
		private void ChangeAllPool(MissionSO mission, LocationSO location)
		{
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0xE4C0C0", Offset = "0xE4C0C0", VA = "0xE4C0C0")]
		private FishGoal GetNonpassedFish()
		{
			return null;
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0xE4C330", Offset = "0xE4C330", VA = "0xE4C330")]
		private void CheckFishGuarantee(FishGoal fishGoal)
		{
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0xE4A6DC", Offset = "0xE4A6DC", VA = "0xE4A6DC")]
		public static bool CheckIsAnyFishable(MissionSO mission)
		{
			return default(bool);
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0xE4AF0C", Offset = "0xE4AF0C", VA = "0xE4AF0C")]
		public static bool CheckIsAnyItemable(MissionSO mission)
		{
			return default(bool);
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0xE48490", Offset = "0xE48490", VA = "0xE48490")]
		private void CheckFishableMission(FpFish fish, MissionSO mission, [Optional] FpFish anyFishable)
		{
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0xE4AA08", Offset = "0xE4AA08", VA = "0xE4AA08")]
		private void CheckAnyItemableMission(ItemSO item, int amount, MissionSO mission)
		{
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0xE4A7C0", Offset = "0xE4A7C0", VA = "0xE4A7C0")]
		private void CheckFishCatchCount(MissionSO mission)
		{
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0xE4BEA8", Offset = "0xE4BEA8", VA = "0xE4BEA8")]
		private void ChangeFishPool(FishPool2SO fishPool, MissionSO mission)
		{
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0xE4BFE4", Offset = "0xE4BFE4", VA = "0xE4BFE4")]
		private void ChangeLootCratePool(LootCratePoolSO lootCratePool, MissionSO mission)
		{
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0xE4C3DC", Offset = "0xE4C3DC", VA = "0xE4C3DC")]
		private bool IsValidMission(MissionSO mission)
		{
			return default(bool);
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0xE4B810", Offset = "0xE4B810", VA = "0xE4B810")]
		private void GetRewards()
		{
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0xE4CD78", Offset = "0xE4CD78", VA = "0xE4CD78")]
		public void ResetMission()
		{
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0xE4CF8C", Offset = "0xE4CF8C", VA = "0xE4CF8C")]
		public void ResetCurrentMission()
		{
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0xE47730", Offset = "0xE47730", VA = "0xE47730")]
		private void ClearAllDic()
		{
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0xE4D28C", Offset = "0xE4D28C", VA = "0xE4D28C")]
		public static MissionSO GetCurrentMission()
		{
			return null;
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0xE4D2E8", Offset = "0xE4D2E8", VA = "0xE4D2E8")]
		public static bool IsMission()
		{
			return default(bool);
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0xE4D354", Offset = "0xE4D354", VA = "0xE4D354")]
		private bool IsMission(MissionSO mission)
		{
			return default(bool);
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0xE4D374", Offset = "0xE4D374", VA = "0xE4D374")]
		public static bool IsNextMission()
		{
			return default(bool);
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0xE46480", Offset = "0xE46480", VA = "0xE46480")]
		public static bool IsMissionCompleted(MissionSO mission)
		{
			return default(bool);
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0xE47D60", Offset = "0xE47D60", VA = "0xE47D60")]
		public static bool IsMissionTarget(FpFish fish, [Optional] MissionSO mission)
		{
			return default(bool);
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0xE4D430", Offset = "0xE4D430", VA = "0xE4D430")]
		public static bool IsMissionTarget(ItemSO item, [Optional] MissionSO mission)
		{
			return default(bool);
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0xE4D59C", Offset = "0xE4D59C", VA = "0xE4D59C")]
		public static bool IsSingleTarget(MissionSO mission)
		{
			return default(bool);
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0xE4D644", Offset = "0xE4D644", VA = "0xE4D644")]
		public static bool IsNewLoaded(MissionSO mission)
		{
			return default(bool);
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0xE4D878", Offset = "0xE4D878", VA = "0xE4D878")]
		public static bool CheckMissionLocation(MissionSO mission)
		{
			return default(bool);
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0xE4D904", Offset = "0xE4D904", VA = "0xE4D904")]
		public static MissionSO GetNextChallenge()
		{
			return null;
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0xE4DA54", Offset = "0xE4DA54", VA = "0xE4DA54")]
		private int GetChallengeIndex(MissionSO missionToFind)
		{
			return default(int);
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0xE46790", Offset = "0xE46790", VA = "0xE46790")]
		public void StartMission(MissionSO mission)
		{
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0xE4DB28", Offset = "0xE4DB28", VA = "0xE4DB28")]
		public void PopVisibility(bool popVisible)
		{
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0xE4DB60", Offset = "0xE4DB60", VA = "0xE4DB60")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACE878", Offset = "0xACE878")]
		private IEnumerator LoadPopScene()
		{
			return null;
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0xE4DBDC", Offset = "0xE4DBDC", VA = "0xE4DBDC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACE8DC", Offset = "0xACE8DC")]
		private IEnumerator UnLoadPopScene()
		{
			return null;
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0xE4DCB0", Offset = "0xE4DCB0", VA = "0xE4DCB0")]
		public void CatchFinalFish()
		{
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0xE4DD40", Offset = "0xE4DD40", VA = "0xE4DD40")]
		public MissionController()
		{
		}
	}
	[Token(Token = "0x20002EC")]
	public class PlayerProgressController : MonoBehaviour
	{
		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PlayerProgressController Instance;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SaveFileIndex;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlayerProgressSO playerProgress;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ItemSO[] DefaultEquipment;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ItemSO[] ItemSOs;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<string, ItemSO> m_Item_Dic;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public LocationSO[] LocationSOs;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<string, LocationSO> m_Location_Dic;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public MissionSO[] MissionSOs;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<string, MissionSO> m_Mission_Dic;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private MissionSO FirstNonTutorialMission;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<MissionSO, int> m_missionSO_Index_Dic;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private FishTypeSO[] Fishes;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Dictionary<string, FishTypeSO> m_Fish_Dic;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Dictionary<string, FishOPediaController.FishOPedia_> m_FishOPedia_Dic;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static List<AquariumPreset> AquariumCustomizations;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static int CurrentAquariumIndex;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static float BoostTimer;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static float BoostLevelPowerReel;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static float BoostLevelStun;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static float BoostLevelTeleport;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private bool m_IsItemCraftUnlocked;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		[SerializeField]
		private bool m_IsCharmCraftUnlocked;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		[SerializeField]
		private bool m_IsCraftingSceneShowed;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
		[SerializeField]
		private bool m_IsAquariumSceneShowed;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static bool IsSubscripted;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private bool m_autoReeling;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		[SerializeField]
		private bool m_showFishingUI;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private float m_playerHeight;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private float m_musicVolume;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private bool m_showFishFinder;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		[SerializeField]
		private bool m_showLureBeam;

		[Token(Token = "0x170001AB")]
		public static PlayerProgressSO PlayerProgress
		{
			[Token(Token = "0x6001354")]
			[Address(RVA = "0x1FCE1A0", Offset = "0x1FCE1A0", VA = "0x1FCE1A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AC")]
		public static Dictionary<string, ItemSO> Item_Dic
		{
			[Token(Token = "0x6001355")]
			[Address(RVA = "0x1FCE214", Offset = "0x1FCE214", VA = "0x1FCE214")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AD")]
		public static Dictionary<string, LocationSO> Location_Dic
		{
			[Token(Token = "0x6001356")]
			[Address(RVA = "0x1FCE288", Offset = "0x1FCE288", VA = "0x1FCE288")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AE")]
		public static Dictionary<string, MissionSO> Mission_Dic
		{
			[Token(Token = "0x6001357")]
			[Address(RVA = "0x1FCE2FC", Offset = "0x1FCE2FC", VA = "0x1FCE2FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AF")]
		public static MissionSO DefaultMissionSO
		{
			[Token(Token = "0x6001358")]
			[Address(RVA = "0x1FCE370", Offset = "0x1FCE370", VA = "0x1FCE370")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B0")]
		public static Dictionary<MissionSO, int> MissionSO_Index_Dic
		{
			[Token(Token = "0x6001359")]
			[Address(RVA = "0x1FCE45C", Offset = "0x1FCE45C", VA = "0x1FCE45C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B1")]
		public static Dictionary<string, FishTypeSO> Fish_Dic
		{
			[Token(Token = "0x600135A")]
			[Address(RVA = "0x1FCE4D0", Offset = "0x1FCE4D0", VA = "0x1FCE4D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B2")]
		public static Dictionary<string, FishOPediaController.FishOPedia_> FishOPedia_Dic
		{
			[Token(Token = "0x600135B")]
			[Address(RVA = "0x1FCE544", Offset = "0x1FCE544", VA = "0x1FCE544")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B3")]
		public static bool IsItemCraftUnlocked
		{
			[Token(Token = "0x600135C")]
			[Address(RVA = "0x1FCD1A8", Offset = "0x1FCD1A8", VA = "0x1FCD1A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600135D")]
			[Address(RVA = "0x1FCE5B8", Offset = "0x1FCE5B8", VA = "0x1FCE5B8")]
			set
			{
			}
		}

		[Token(Token = "0x170001B4")]
		public static bool IsCharmCraftUnlocked
		{
			[Token(Token = "0x600135E")]
			[Address(RVA = "0x1FCD21C", Offset = "0x1FCD21C", VA = "0x1FCD21C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600135F")]
			[Address(RVA = "0x1FCE634", Offset = "0x1FCE634", VA = "0x1FCE634")]
			set
			{
			}
		}

		[Token(Token = "0x170001B5")]
		public static bool IsCraftingSceneShowed
		{
			[Token(Token = "0x6001360")]
			[Address(RVA = "0x1FCD290", Offset = "0x1FCD290", VA = "0x1FCD290")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001361")]
			[Address(RVA = "0x1FCE6B0", Offset = "0x1FCE6B0", VA = "0x1FCE6B0")]
			set
			{
			}
		}

		[Token(Token = "0x170001B6")]
		public static bool IsAquariumSceneShowed
		{
			[Token(Token = "0x6001362")]
			[Address(RVA = "0x1FCD304", Offset = "0x1FCD304", VA = "0x1FCD304")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001363")]
			[Address(RVA = "0x1FCE72C", Offset = "0x1FCE72C", VA = "0x1FCE72C")]
			set
			{
			}
		}

		[Token(Token = "0x170001B7")]
		public static bool PlayerSetting_AutoReeling
		{
			[Token(Token = "0x6001364")]
			[Address(RVA = "0x1FCE7A8", Offset = "0x1FCE7A8", VA = "0x1FCE7A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001365")]
			[Address(RVA = "0x1FCE81C", Offset = "0x1FCE81C", VA = "0x1FCE81C")]
			set
			{
			}
		}

		[Token(Token = "0x170001B8")]
		public static bool PlayerSetting_ShowFishingUI
		{
			[Token(Token = "0x6001366")]
			[Address(RVA = "0x1FCE898", Offset = "0x1FCE898", VA = "0x1FCE898")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001367")]
			[Address(RVA = "0x1FCE90C", Offset = "0x1FCE90C", VA = "0x1FCE90C")]
			set
			{
			}
		}

		[Token(Token = "0x170001B9")]
		public static float PlayerSetting_PlayerHeight
		{
			[Token(Token = "0x6001368")]
			[Address(RVA = "0x1FCE988", Offset = "0x1FCE988", VA = "0x1FCE988")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001369")]
			[Address(RVA = "0x1FCE9FC", Offset = "0x1FCE9FC", VA = "0x1FCE9FC")]
			set
			{
			}
		}

		[Token(Token = "0x170001BA")]
		public static float PlayerSetting_MusicVolume
		{
			[Token(Token = "0x600136A")]
			[Address(RVA = "0x1FCEA7C", Offset = "0x1FCEA7C", VA = "0x1FCEA7C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600136B")]
			[Address(RVA = "0x1FCEAF0", Offset = "0x1FCEAF0", VA = "0x1FCEAF0")]
			set
			{
			}
		}

		[Token(Token = "0x170001BB")]
		public static bool PlayerSetting_ShowFishFinder
		{
			[Token(Token = "0x600136C")]
			[Address(RVA = "0x1FCEB70", Offset = "0x1FCEB70", VA = "0x1FCEB70")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600136D")]
			[Address(RVA = "0x1FCEBE4", Offset = "0x1FCEBE4", VA = "0x1FCEBE4")]
			set
			{
			}
		}

		[Token(Token = "0x170001BC")]
		public static bool PlayerSetting_ShowLureBeam
		{
			[Token(Token = "0x600136E")]
			[Address(RVA = "0x1FCEC60", Offset = "0x1FCEC60", VA = "0x1FCEC60")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600136F")]
			[Address(RVA = "0x1FCECD4", Offset = "0x1FCECD4", VA = "0x1FCECD4")]
			set
			{
			}
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0x1FCED50", Offset = "0x1FCED50", VA = "0x1FCED50")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0x1FCF888", Offset = "0x1FCF888", VA = "0x1FCF888")]
		private void EventHub_OnFishKept(FpFish fish)
		{
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0x1FCFBAC", Offset = "0x1FCFBAC", VA = "0x1FCFBAC")]
		private void EventHub_OnPlayerCharmEquip(CharmSO charm)
		{
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0x1FCFBFC", Offset = "0x1FCFBFC", VA = "0x1FCFBFC")]
		private void EventHub_OnPlayerRodEquip(RodSO rod)
		{
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0x1FCFC4C", Offset = "0x1FCFC4C", VA = "0x1FCFC4C")]
		private void LoadLocation_OnLocationUnlock(LocationSO location)
		{
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0x1FCFDC4", Offset = "0x1FCFDC4", VA = "0x1FCFDC4")]
		private void LoadLocation_OnArriveNewLocation(LocationSO location)
		{
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0x1FCFF90", Offset = "0x1FCFF90", VA = "0x1FCFF90")]
		private void EventHub_OnPlayerSettingChanged(PlayerSetting setting)
		{
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0x1FD0528", Offset = "0x1FD0528", VA = "0x1FD0528")]
		private void EventHub_OnPlayerTournamentPointGot(int tp)
		{
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0x1FD055C", Offset = "0x1FD055C", VA = "0x1FD055C")]
		private void EventHub_OnItemCraftUnlocked(bool locked)
		{
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0x1FD0590", Offset = "0x1FD0590", VA = "0x1FD0590")]
		private void EventHub_OnCharmCraftUnlocked(bool locked)
		{
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0x1FD05C4", Offset = "0x1FD05C4", VA = "0x1FD05C4")]
		private void EventHub_OnSaveCraftingSceneStat()
		{
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0x1FD05F8", Offset = "0x1FD05F8", VA = "0x1FD05F8")]
		private void EventHub_OnSaveAquariumSceneStat()
		{
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0x1FD062C", Offset = "0x1FD062C", VA = "0x1FD062C")]
		private void EventHub_OnBoostTimerUpdated(float timer)
		{
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0x1FD0858", Offset = "0x1FD0858", VA = "0x1FD0858")]
		private void EventHub_OnPlayerLevelUp(int level)
		{
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0x1FD088C", Offset = "0x1FD088C", VA = "0x1FD088C")]
		private void EventHub_OnPlayerXPGot(int xp)
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0x1FD08C0", Offset = "0x1FD08C0", VA = "0x1FD08C0")]
		private void OnItemGet(ItemSO item, int amount)
		{
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0x1FD0B54", Offset = "0x1FD0B54", VA = "0x1FD0B54")]
		private void OnMissionLoad(MissionSO mission)
		{
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0x1FD0BC0", Offset = "0x1FD0BC0", VA = "0x1FD0BC0")]
		private void EventHub_OnMissionConfirmed(MissionSO mission)
		{
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0x1FD1638", Offset = "0x1FD1638", VA = "0x1FD1638")]
		private void OnFishOPediaUpdated(FpFish fish)
		{
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0x1FD172C", Offset = "0x1FD172C", VA = "0x1FD172C")]
		private void EventHub_OnFishTotalWeightUpdated(FishOPediaController.FishOPedia_ fishOPedia)
		{
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0x1FD1744", Offset = "0x1FD1744", VA = "0x1FD1744")]
		public void ResetProgress(MissionSO mission)
		{
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0x1FD1A4C", Offset = "0x1FD1A4C", VA = "0x1FD1A4C")]
		public static void StartGame(int index)
		{
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0x1FD2794", Offset = "0x1FD2794", VA = "0x1FD2794")]
		public static void ClearGame(int index)
		{
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0x1FD2964", Offset = "0x1FD2964", VA = "0x1FD2964")]
		public static void LoadSaveFile(int index)
		{
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0x1FD29E4", Offset = "0x1FD29E4", VA = "0x1FD29E4")]
		public static void RemoveAquaFishOfType(int presetIndex, FishTypeSO _fish)
		{
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0x1FD2BE4", Offset = "0x1FD2BE4", VA = "0x1FD2BE4")]
		public static void RemoveDecoration(AquariumPreset preset, int slotIndex)
		{
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0x1FD2CB0", Offset = "0x1FD2CB0", VA = "0x1FD2CB0")]
		public static void AddDecoration(AquariumPreset preset, string BCID, int slotIndex)
		{
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0x1FD2D48", Offset = "0x1FD2D48", VA = "0x1FD2D48")]
		public PlayerProgressController()
		{
		}
	}
	[Token(Token = "0x20002ED")]
	public class PopController : MonoBehaviour
	{
		[Token(Token = "0x2000553")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1310", Offset = "0xAC1310")]
		private sealed class <CheckPopPosition>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PopController <>4__this;

			[Token(Token = "0x1700035B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020FD")]
				[Address(RVA = "0x1FD6374", Offset = "0x1FD6374", VA = "0x1FD6374", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700035C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020FF")]
				[Address(RVA = "0x1FD63DC", Offset = "0x1FD63DC", VA = "0x1FD63DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020FA")]
			[Address(RVA = "0x1FD607C", Offset = "0x1FD607C", VA = "0x1FD607C")]
			[DebuggerHidden]
			public <CheckPopPosition>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x60020FB")]
			[Address(RVA = "0x1FD6110", Offset = "0x1FD6110", VA = "0x1FD6110", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020FC")]
			[Address(RVA = "0x1FD6114", Offset = "0x1FD6114", VA = "0x1FD6114", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020FE")]
			[Address(RVA = "0x1FD637C", Offset = "0x1FD637C", VA = "0x1FD637C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000554")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1320", Offset = "0xAC1320")]
		private sealed class <CheckPopTeleport>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float sec;

			[Token(Token = "0x4001F22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PopController <>4__this;

			[Token(Token = "0x4001F23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool state;

			[Token(Token = "0x1700035D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002103")]
				[Address(RVA = "0x1FD64C4", Offset = "0x1FD64C4", VA = "0x1FD64C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700035E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002105")]
				[Address(RVA = "0x1FD652C", Offset = "0x1FD652C", VA = "0x1FD652C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002100")]
			[Address(RVA = "0x1FD60A8", Offset = "0x1FD60A8", VA = "0x1FD60A8")]
			[DebuggerHidden]
			public <CheckPopTeleport>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x6002101")]
			[Address(RVA = "0x1FD63E4", Offset = "0x1FD63E4", VA = "0x1FD63E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002102")]
			[Address(RVA = "0x1FD63E8", Offset = "0x1FD63E8", VA = "0x1FD63E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002104")]
			[Address(RVA = "0x1FD64CC", Offset = "0x1FD64CC", VA = "0x1FD64CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000555")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1330", Offset = "0xAC1330")]
		private sealed class <PlayTutorial>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PopController <>4__this;

			[Token(Token = "0x4001F27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float sec;

			[Token(Token = "0x1700035F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002109")]
				[Address(RVA = "0x1FD6660", Offset = "0x1FD6660", VA = "0x1FD6660", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000360")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600210B")]
				[Address(RVA = "0x1FD66C8", Offset = "0x1FD66C8", VA = "0x1FD66C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002106")]
			[Address(RVA = "0x1FD60D4", Offset = "0x1FD60D4", VA = "0x1FD60D4")]
			[DebuggerHidden]
			public <PlayTutorial>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6002107")]
			[Address(RVA = "0x1FD6534", Offset = "0x1FD6534", VA = "0x1FD6534", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002108")]
			[Address(RVA = "0x1FD6538", Offset = "0x1FD6538", VA = "0x1FD6538", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600210A")]
			[Address(RVA = "0x1FD6668", Offset = "0x1FD6668", VA = "0x1FD6668", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public PopDataSO[] popData;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject pop_Avatar;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LipSync popAvatar;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LipSyncData popTutData;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int popTutIndex;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool popVisible;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PopDataSO p_Data;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PopFlyController popFlyController;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public PopDissolve popDissolve;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string cutsceneLanguageCode;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool popPortIn;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool popPortOut;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool popFlyRight;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		[SerializeField]
		private bool isFadeFinished;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float delayFly;

		[Token(Token = "0x600138D")]
		[Address(RVA = "0x1FD50B8", Offset = "0x1FD50B8", VA = "0x1FD50B8")]
		public void Awake()
		{
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0x1FD5210", Offset = "0x1FD5210", VA = "0x1FD5210")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0x1FD52F4", Offset = "0x1FD52F4", VA = "0x1FD52F4")]
		public void Start()
		{
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0x1FD52F8", Offset = "0x1FD52F8", VA = "0x1FD52F8")]
		public void LoadSavedFile()
		{
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0x1FD5540", Offset = "0x1FD5540", VA = "0x1FD5540")]
		public void CheckCutscene()
		{
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0x1FD540C", Offset = "0x1FD540C", VA = "0x1FD540C")]
		public void CheckPopVisible()
		{
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0x1FD5A18", Offset = "0x1FD5A18", VA = "0x1FD5A18")]
		public void PopVisibleScene(bool state)
		{
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0x1FD5A48", Offset = "0x1FD5A48", VA = "0x1FD5A48")]
		public void OnCutsceneLoaded()
		{
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0x1FD5A4C", Offset = "0x1FD5A4C", VA = "0x1FD5A4C")]
		private void CheckTutorials()
		{
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0x1FD5D5C", Offset = "0x1FD5D5C", VA = "0x1FD5D5C")]
		public void ReadPopData(int index)
		{
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0x1FD554C", Offset = "0x1FD554C", VA = "0x1FD554C")]
		public void TutIndexFlow()
		{
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0x1FD5B90", Offset = "0x1FD5B90", VA = "0x1FD5B90")]
		public void StartPlay(bool visibleStates, string lang, int popTutIndex = 49)
		{
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0x1FD6000", Offset = "0x1FD6000", VA = "0x1FD6000")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACE940", Offset = "0xACE940")]
		private IEnumerator CheckPopPosition()
		{
			return null;
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0x1FD5ED4", Offset = "0x1FD5ED4", VA = "0x1FD5ED4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACE9A4", Offset = "0xACE9A4")]
		private IEnumerator CheckPopTeleport(float sec, bool state)
		{
			return null;
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0x1FD5F74", Offset = "0x1FD5F74", VA = "0x1FD5F74")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACEA08", Offset = "0xACEA08")]
		private IEnumerator PlayTutorial(float sec = 0f)
		{
			return null;
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0x1FD6100", Offset = "0x1FD6100", VA = "0x1FD6100")]
		public PopController()
		{
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0x1FD6108", Offset = "0x1FD6108", VA = "0x1FD6108")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACEA6C", Offset = "0xACEA6C")]
		private bool <PlayTutorial>b__29_0()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002EE")]
	public class PopFlyController : MonoBehaviour
	{
		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int speed;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform popPos;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform startPoint;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform endPoint;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Animator animator;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PopFlyController instance;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool onRight;

		[Token(Token = "0x600139E")]
		[Address(RVA = "0x1FD7308", Offset = "0x1FD7308", VA = "0x1FD7308")]
		private void Awake()
		{
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0x1FD7410", Offset = "0x1FD7410", VA = "0x1FD7410")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0x1FD74CC", Offset = "0x1FD74CC", VA = "0x1FD74CC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0x1FD748C", Offset = "0x1FD748C", VA = "0x1FD748C")]
		public void InitPosition()
		{
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0x1FD7540", Offset = "0x1FD7540", VA = "0x1FD7540")]
		public void FlyToRight(bool fly)
		{
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0x1FD61DC", Offset = "0x1FD61DC", VA = "0x1FD61DC")]
		public void CheckPosition()
		{
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0x1FD76FC", Offset = "0x1FD76FC", VA = "0x1FD76FC")]
		public void ChangePosition(bool onRight)
		{
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0x1FD770C", Offset = "0x1FD770C", VA = "0x1FD770C")]
		private void StartCallback()
		{
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0x1FD7768", Offset = "0x1FD7768", VA = "0x1FD7768")]
		private void UpdateCallback()
		{
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0x1FD77C4", Offset = "0x1FD77C4", VA = "0x1FD77C4")]
		private void CompleteCallback()
		{
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0x1FD7820", Offset = "0x1FD7820", VA = "0x1FD7820")]
		public PopFlyController()
		{
		}
	}
	[Token(Token = "0x20002EF")]
	public class SideMissionController : MonoBehaviour
	{
		[Token(Token = "0x2000556")]
		public delegate void McFishCaughtAction(MissionSO.TargetFish targetFish);

		[Token(Token = "0x2000557")]
		public delegate void McItemGotAction(MissionSO.TargetItem targetItem);

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SideMissionController instance;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<MissionSO, bool> m_UnlockedSideMission_Dic;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<MissionSO> m_UnlockedSideMission;

		[Token(Token = "0x170001BD")]
		public static MissionSO[] UnlockedSideMissions
		{
			[Token(Token = "0x60013AD")]
			[Address(RVA = "0xD63A74", Offset = "0xD63A74", VA = "0xD63A74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BE")]
		public static MissionSO CurrentSideMission
		{
			[Token(Token = "0x60013AE")]
			[Address(RVA = "0xD63AE0", Offset = "0xD63AE0", VA = "0xD63AE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400006B")]
		public static event McFishCaughtAction McOnFishCaught
		{
			[Token(Token = "0x60013A9")]
			[Address(RVA = "0xD63794", Offset = "0xD63794", VA = "0xD63794")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACEA7C", Offset = "0xACEA7C")]
			add
			{
			}
			[Token(Token = "0x60013AA")]
			[Address(RVA = "0xD6384C", Offset = "0xD6384C", VA = "0xD6384C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACEA8C", Offset = "0xACEA8C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400006C")]
		public static event McItemGotAction McOnItemGot
		{
			[Token(Token = "0x60013AB")]
			[Address(RVA = "0xD63904", Offset = "0xD63904", VA = "0xD63904")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACEA9C", Offset = "0xACEA9C")]
			add
			{
			}
			[Token(Token = "0x60013AC")]
			[Address(RVA = "0xD639BC", Offset = "0xD639BC", VA = "0xD639BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACEAAC", Offset = "0xACEAAC")]
			remove
			{
			}
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0xD63B5C", Offset = "0xD63B5C", VA = "0xD63B5C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0xD63D4C", Offset = "0xD63D4C", VA = "0xD63D4C")]
		private void Start()
		{
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0xD63FD8", Offset = "0xD63FD8", VA = "0xD63FD8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0xD6412C", Offset = "0xD6412C", VA = "0xD6412C")]
		private void EventHub_OnPlayerLocationChange()
		{
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0xD643E0", Offset = "0xD643E0", VA = "0xD643E0")]
		public static bool IsSideMissionActivated()
		{
			return default(bool);
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0xD64534", Offset = "0xD64534", VA = "0xD64534")]
		private void InitSideMission()
		{
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0xD645F8", Offset = "0xD645F8", VA = "0xD645F8")]
		private void EventHub_OnMissionLoad(MissionSO mission)
		{
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0xD6461C", Offset = "0xD6461C", VA = "0xD6461C")]
		private void EventHub_OnMissionCompleted(MissionSO mission)
		{
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0xD646A0", Offset = "0xD646A0", VA = "0xD646A0")]
		private void EventHub_OnFishCaught(FpFish fish, bool isCheating)
		{
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0xD65030", Offset = "0xD65030", VA = "0xD65030")]
		private void EventHub_OnItemGot(ItemSO itemSO, int amount)
		{
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0xD65148", Offset = "0xD65148", VA = "0xD65148")]
		private void EventHub_OnSideMissionChanged(MissionSO mission)
		{
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0xD63F20", Offset = "0xD63F20", VA = "0xD63F20")]
		private void OnSideMissionLoad(MissionSO mission)
		{
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0xD647DC", Offset = "0xD647DC", VA = "0xD647DC")]
		private void CheckMissionProgress(MissionSO mission, FpFish fish)
		{
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0xD64224", Offset = "0xD64224", VA = "0xD64224")]
		private bool CheckAllMission(MissionSO mission)
		{
			return default(bool);
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0xD65298", Offset = "0xD65298", VA = "0xD65298")]
		public SideMissionController()
		{
		}
	}
	[Token(Token = "0x20002F0")]
	public class UI_GoalFish : MonoBehaviour
	{
		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UI_SingleChallenge.GoalFish GoalFish;

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0xD22474", Offset = "0xD22474", VA = "0xD22474")]
		public UI_GoalFish()
		{
		}
	}
	[Token(Token = "0x20002F1")]
	public class UI_MissionController : MonoBehaviour
	{
		[Token(Token = "0x2000558")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1340", Offset = "0xAC1340")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x4001F28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MissionSO mission;

			[Token(Token = "0x4001F29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Button button;

			[Token(Token = "0x6002114")]
			[Address(RVA = "0xE0C42C", Offset = "0xE0C42C", VA = "0xE0C42C")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x6002115")]
			[Address(RVA = "0xE0C434", Offset = "0xE0C434", VA = "0xE0C434")]
			internal void <FillTimedMissionBtn>b__0()
			{
			}
		}

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UI_SingleChallenge[] Challenges;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Sprite DefaultIcon;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button DecreasStoryMissionBtn;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button IncreasStoryMissionBtn;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button StoryMissionBtn;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button SideMissionBtn;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button ChallengeMissionBtn;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Sprite Star;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC6B94", Offset = "0xAC6B94")]
		[SerializeField]
		private Button MissionBtn;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private MissionSO tutorialMission;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MissionSO m_mission;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MissionSO m_SideMission;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private LocationSO m_location;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool IsTimerStart;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool IsFailBtnSet;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int m_StoryMission_Index;

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0xD251B4", Offset = "0xD251B4", VA = "0xD251B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0xD255FC", Offset = "0xD255FC", VA = "0xD255FC")]
		private void Start()
		{
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0xD2585C", Offset = "0xD2585C", VA = "0xD2585C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0xD25B44", Offset = "0xD25B44", VA = "0xD25B44")]
		private void EventHub_OnPlayerLocationChange()
		{
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0xD25B48", Offset = "0xD25B48", VA = "0xD25B48")]
		private void EventHub_OnChallengeMissionAccepted(MissionSO mission)
		{
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0xD25C14", Offset = "0xD25C14", VA = "0xD25C14")]
		private void EventHub_OnSideMissionAccepted(MissionSO mission)
		{
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0xD25CE0", Offset = "0xD25CE0", VA = "0xD25CE0")]
		private void EventHub_OnChallengeMissionQuitted()
		{
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0xD25DAC", Offset = "0xD25DAC", VA = "0xD25DAC")]
		private void EventHub_OnSideMissionQuitted()
		{
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0xD25E78", Offset = "0xD25E78", VA = "0xD25E78")]
		private void FillMission(MissionSO mission, UI_SingleChallenge uiSingle)
		{
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0xD27814", Offset = "0xD27814", VA = "0xD27814")]
		private void FillTimedMissionBtn(MissionSO mission, Button button)
		{
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0xD27B1C", Offset = "0xD27B1C", VA = "0xD27B1C")]
		private void EventHub_OnMissionLoad(MissionSO mission)
		{
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0xD27B24", Offset = "0xD27B24", VA = "0xD27B24")]
		private void MissionController_OnMissionLoad(MissionSO mission)
		{
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0xD28D88", Offset = "0xD28D88", VA = "0xD28D88")]
		private void MissionController_OnFishCaught(MissionSO.TargetFish targetFish)
		{
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0xD28E34", Offset = "0xD28E34", VA = "0xD28E34")]
		private void MissionController_McOnItemGot(MissionSO.TargetItem targetItem)
		{
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0xD28ED8", Offset = "0xD28ED8", VA = "0xD28ED8")]
		private void OnAquariumMissionCleared()
		{
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0xD28D7C", Offset = "0xD28D7C", VA = "0xD28D7C")]
		private void OnMissionChange()
		{
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0xD28EDC", Offset = "0xD28EDC", VA = "0xD28EDC")]
		private void EventHub_OnMissionFailed(MissionSO mission)
		{
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0xD28EE0", Offset = "0xD28EE0", VA = "0xD28EE0")]
		private void MissionController_McOnLocationChanged(LocationSO location)
		{
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0xD27A10", Offset = "0xD27A10", VA = "0xD27A10")]
		private bool IsValid_TimedMission()
		{
			return default(bool);
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0xD28F5C", Offset = "0xD28F5C", VA = "0xD28F5C")]
		private void EventHub_OnMissionRewardGot()
		{
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0xD27B20", Offset = "0xD27B20", VA = "0xD27B20")]
		private void LoadMission(MissionSO mission)
		{
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0xD28F88", Offset = "0xD28F88", VA = "0xD28F88")]
		private void InceaseStoryMission()
		{
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0xD290AC", Offset = "0xD290AC", VA = "0xD290AC")]
		private void DecreaseStoryMission()
		{
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0xD27C74", Offset = "0xD27C74", VA = "0xD27C74")]
		private void ChangeMission()
		{
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0xD27B6C", Offset = "0xD27B6C", VA = "0xD27B6C")]
		private void CheckMissionProgressAmount()
		{
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0xD275DC", Offset = "0xD275DC", VA = "0xD275DC")]
		private void CheckCompleted(MissionSO mission, UI_SingleChallenge uiSingle)
		{
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0xD290C0", Offset = "0xD290C0", VA = "0xD290C0")]
		private void OnLoadStoryMission()
		{
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0xD29110", Offset = "0xD29110", VA = "0xD29110")]
		private void OnLoadSideMission()
		{
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0xD29160", Offset = "0xD29160", VA = "0xD29160")]
		private void OnLoadChallengeMission()
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0xD291B0", Offset = "0xD291B0", VA = "0xD291B0")]
		public UI_MissionController()
		{
		}
	}
	[Token(Token = "0x20002F2")]
	public class UI_MissionTimer : MonoBehaviour
	{
		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text Timer;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject UI;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_Timer;

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0xE0C47C", Offset = "0xE0C47C", VA = "0xE0C47C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0xE0C598", Offset = "0xE0C598", VA = "0xE0C598")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0xE0C6B4", Offset = "0xE0C6B4", VA = "0xE0C6B4")]
		private void EventHub_OnTimedMissionSetuped(float time)
		{
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0xE0C708", Offset = "0xE0C708", VA = "0xE0C708")]
		private void EventHub_OnMissionLoad(MissionSO mission)
		{
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0xE0C764", Offset = "0xE0C764", VA = "0xE0C764")]
		private void EventHub_OnTimedMissionUpdateTimer(float time)
		{
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0xE0C860", Offset = "0xE0C860", VA = "0xE0C860")]
		private void EventHub_OnMissionFailed(MissionSO mission)
		{
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0xE0C8B0", Offset = "0xE0C8B0", VA = "0xE0C8B0")]
		public UI_MissionTimer()
		{
		}
	}
	[Token(Token = "0x20002F3")]
	public class UI_PlayerProgressController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000559")]
		public struct SaveFileBtn
		{
			[Token(Token = "0x4001F2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TMP_Text SaveFileInfo;

			[Token(Token = "0x4001F2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Localize SaveFileTitle;

			[Token(Token = "0x4001F2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Localize Clear;

			[Token(Token = "0x4001F2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject ClearBtn;
		}

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SaveFileBtn[] SaveFiles;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int SelectedIndex;

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0xE0F814", Offset = "0xE0F814", VA = "0xE0F814")]
		private void Start()
		{
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0xE0FC24", Offset = "0xE0FC24", VA = "0xE0FC24")]
		public void OnPlayBtnClick()
		{
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0xE0FD70", Offset = "0xE0FD70", VA = "0xE0FD70")]
		public void OnClearBtnClick()
		{
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0xE0FD94", Offset = "0xE0FD94", VA = "0xE0FD94")]
		public void OnClearConfirmClick()
		{
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0xE0FF50", Offset = "0xE0FF50", VA = "0xE0FF50")]
		public void OnClearAllConfirmClick()
		{
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0xE0FC9C", Offset = "0xE0FC9C", VA = "0xE0FC9C")]
		private int GetSaveFileIndex()
		{
			return default(int);
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0xE100AC", Offset = "0xE100AC", VA = "0xE100AC")]
		public UI_PlayerProgressController()
		{
		}
	}
	[Token(Token = "0x20002F4")]
	public class UI_SideMissionController : MonoBehaviour
	{
		[Token(Token = "0x200055A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1350", Offset = "0xAC1350")]
		private sealed class <>c__DisplayClass37_0
		{
			[Token(Token = "0x4001F2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MissionSO mission;

			[Token(Token = "0x4001F2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Button button;

			[Token(Token = "0x6002116")]
			[Address(RVA = "0xE12A80", Offset = "0xE12A80", VA = "0xE12A80")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x6002117")]
			[Address(RVA = "0xE13254", Offset = "0xE13254", VA = "0xE13254")]
			internal void <FillTimedMissionBtn>b__0()
			{
			}
		}

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Button Failed_OKBtn;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject Failed_Panel;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite DefaultIcon;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Sprite Star;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button SideMissionBtn;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button ChallengeMissionBtn;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Color32 SelectedColor;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject SideMissionInfo;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Localize SuggetedEquipment_Text_S;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Image[] SuggetedEquipment_Icons_S;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Localize Rewards_Text_S;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Image[] Rewards_Icons_S;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private UI_GoalFish[] GoalFishs_S;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private UI_GoalFish GoalFish_1st_H_S;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Image MissionImage_S;

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Localize Title_S;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Localize Description_S;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private TMP_Text Location_S;

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Button StartTimerBtn_S;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Button DecreaseMissionBtn;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Button IncreaseMissionBtn;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Button AcceptBtn;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Image ActiveStamp;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool IsTimerStart;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool IsFailBtnSet;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int m_MissionIndex;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private MissionSO.MissionTypes m_MissionType;

		[Token(Token = "0x170001BF")]
		private LocationSO m_location
		{
			[Token(Token = "0x60013EC")]
			[Address(RVA = "0xE10824", Offset = "0xE10824", VA = "0xE10824")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0xE10884", Offset = "0xE10884", VA = "0xE10884")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0xE10AB8", Offset = "0xE10AB8", VA = "0xE10AB8")]
		private void Start()
		{
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0xE10ABC", Offset = "0xE10ABC", VA = "0xE10ABC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0xE10B88", Offset = "0xE10B88", VA = "0xE10B88")]
		private void Player_OnLocationChanged(LocationSO locationSO, bool comingFromShip)
		{
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0xE10FC0", Offset = "0xE10FC0", VA = "0xE10FC0")]
		private void EventHub_OnMissionLoad(MissionSO mission)
		{
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0xE10FE8", Offset = "0xE10FE8", VA = "0xE10FE8")]
		private void MissionLoad(MissionSO mission)
		{
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0xE10DC0", Offset = "0xE10DC0", VA = "0xE10DC0")]
		private void LoadMission(MissionSO mission)
		{
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0xE12768", Offset = "0xE12768", VA = "0xE12768")]
		private bool IsValid_TimedMission(MissionSO mission)
		{
			return default(bool);
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0xE12884", Offset = "0xE12884", VA = "0xE12884")]
		private void FillTimedMissionBtn(MissionSO mission, Button button)
		{
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0xE11074", Offset = "0xE11074", VA = "0xE11074")]
		private void FillSideMission(MissionSO mission)
		{
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0xE12A88", Offset = "0xE12A88", VA = "0xE12A88")]
		private void OnChallengeMissionChange()
		{
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0xE12BB8", Offset = "0xE12BB8", VA = "0xE12BB8")]
		private void OnSideMissionChange()
		{
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0xE12CE8", Offset = "0xE12CE8", VA = "0xE12CE8")]
		public void Init()
		{
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0xE12D64", Offset = "0xE12D64", VA = "0xE12D64")]
		private void OnIncreaseMission()
		{
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0xE12F08", Offset = "0xE12F08", VA = "0xE12F08")]
		private void OnDecreaseMission()
		{
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0xE1306C", Offset = "0xE1306C", VA = "0xE1306C")]
		private void OnAcceptMission()
		{
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0xE13240", Offset = "0xE13240", VA = "0xE13240")]
		public UI_SideMissionController()
		{
		}
	}
	[Token(Token = "0x20002F5")]
	public class UI_SingleChallenge : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200055B")]
		public struct GoalFish
		{
			[Token(Token = "0x4001F30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject GO;

			[Token(Token = "0x4001F31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Localize Name;

			[Token(Token = "0x4001F32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TMP_Text GoalAmount;

			[Token(Token = "0x4001F33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Image[] GoalStarRating;

			[Token(Token = "0x4001F34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Localize GoalGrade;

			[Token(Token = "0x4001F35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TMP_Text ProgressAmount;

			[Token(Token = "0x4001F36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Image Icon;

			[Token(Token = "0x4001F37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Image ProgressBar;
		}

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Localize Title;

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public Localize Description;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public Localize Location;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public Localize Rewards_Text;

		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public Image[] Rewards_Icons;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public Localize[] Rewards_Name;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public GoalFish[] GoalFishs;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public GoalFish GoalFish_1st_H;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		public Image MissionImage;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		public Button StartTimerBtn;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		public GameObject CompletedIcon;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		public GameObject CompletedBackground;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		public GameObject ActivedBackground;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		public Sprite Star;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		public Image ActiveStamp;

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0xE1329C", Offset = "0xE1329C", VA = "0xE1329C")]
		public UI_SingleChallenge()
		{
		}
	}
	[Token(Token = "0x20002F6")]
	public class UI_NewsController : MonoBehaviour
	{
		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text XP;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Text Level;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Localize NewsTitle;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image NewsImage;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UI_News_LeaderboardChallenger[] LeaderboardChallengers;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UI_News_LeaderboardChallenger LeaderboardPlayer;

		[Token(Token = "0x6001400")]
		[Address(RVA = "0xE0C8B8", Offset = "0xE0C8B8", VA = "0xE0C8B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0xE0CA98", Offset = "0xE0CA98", VA = "0xE0CA98")]
		private void Start()
		{
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0xE0CC54", Offset = "0xE0CC54", VA = "0xE0CC54")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0xE0CD70", Offset = "0xE0CD70", VA = "0xE0CD70")]
		private void EventHub_OnMissionCompleted(MissionSO mission)
		{
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0xE0CE24", Offset = "0xE0CE24", VA = "0xE0CE24")]
		private void SetTeamsPoint()
		{
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0xE0D0F8", Offset = "0xE0D0F8", VA = "0xE0D0F8")]
		private void EventHub_OnMissionLoad(MissionSO mission)
		{
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0xE0CABC", Offset = "0xE0CABC", VA = "0xE0CABC")]
		private void EventHub_OnPlayerXPGot(int xp)
		{
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0xE0CB88", Offset = "0xE0CB88", VA = "0xE0CB88")]
		private void EventHub_OnPlayerLevelUp(int level)
		{
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0xE0D144", Offset = "0xE0D144", VA = "0xE0D144")]
		public UI_NewsController()
		{
		}
	}
	[Token(Token = "0x20002F7")]
	public class UI_News_LeaderboardChallenger : MonoBehaviour
	{
		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image Icon;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TMP_Text TP;

		[Token(Token = "0x6001409")]
		[Address(RVA = "0xE0D14C", Offset = "0xE0D14C", VA = "0xE0D14C")]
		public UI_News_LeaderboardChallenger()
		{
		}
	}
	[Token(Token = "0x20002F8")]
	public class UI_NotificationController : MonoBehaviour
	{
		[Token(Token = "0x200055C")]
		public enum MissionNotificationType
		{
			[Token(Token = "0x4001F39")]
			Unlocked,
			[Token(Token = "0x4001F3A")]
			Updated,
			[Token(Token = "0x4001F3B")]
			Completed
		}

		[Token(Token = "0x200055D")]
		public struct MissionNotification
		{
			[Token(Token = "0x4001F3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MissionNotificationType NType;

			[Token(Token = "0x4001F3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string TypeTitle;

			[Token(Token = "0x4001F3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string Title;

			[Token(Token = "0x4001F3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string Detail;

			[Token(Token = "0x4001F40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MissionSO.Reward[] Rewards;

			[Token(Token = "0x4001F41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float Timestamp;

			[Token(Token = "0x6002118")]
			[Address(RVA = "0xE0D6A4", Offset = "0xE0D6A4", VA = "0xE0D6A4")]
			public MissionNotification(MissionSO mission, MissionNotificationType NType)
			{
			}
		}

		[Token(Token = "0x200055E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1360", Offset = "0xAC1360")]
		private sealed class <NotifyCoroutine>d__40 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UI_NotificationController <>4__this;

			[Token(Token = "0x17000361")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600211C")]
				[Address(RVA = "0xE0F060", Offset = "0xE0F060", VA = "0xE0F060", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000362")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600211E")]
				[Address(RVA = "0xE0F0C8", Offset = "0xE0F0C8", VA = "0xE0F0C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002119")]
			[Address(RVA = "0xE0E5CC", Offset = "0xE0E5CC", VA = "0xE0E5CC")]
			[DebuggerHidden]
			public <NotifyCoroutine>d__40(int <>1__state)
			{
			}

			[Token(Token = "0x600211A")]
			[Address(RVA = "0xE0EE70", Offset = "0xE0EE70", VA = "0xE0EE70", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600211B")]
			[Address(RVA = "0xE0EE74", Offset = "0xE0EE74", VA = "0xE0EE74", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600211D")]
			[Address(RVA = "0xE0F068", Offset = "0xE0F068", VA = "0xE0F068", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int maxQueueLength;

		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float notifyRate;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float fadeInTime;

		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float stayTime;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float fadeOutTime;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float waitTimeBetweenNotifications;

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject notificationCanvas;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject mission_TitlesPanel;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject mission_DetailPanel;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject mission_RewardsPanel;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject[] mission_RewardsItemPanels;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private CanvasGroup mission_CanvasGroup;

		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Localize mission_TypeTitleText;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Localize mission_TitleText;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Localize mission_DetailText;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private RectTransform mission_DetailRT;

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Localize mission_RewardsText;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Localize[] mission_RewardsNameTexts;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Image[] mission_RewardsIcons;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private TMP_Text[] mission_RewardsQuantityTexts;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<MissionNotification> missionNotifications;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Stack<MissionNotification> missionNotificationHistory;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool isNotifying;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Tween tween;

		[Token(Token = "0x170001C0")]
		private MissionSO currentMission
		{
			[Token(Token = "0x600140A")]
			[Address(RVA = "0xE0D154", Offset = "0xE0D154", VA = "0xE0D154")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C1")]
		private MissionSO completedMission
		{
			[Token(Token = "0x600140B")]
			[Address(RVA = "0xE0D15C", Offset = "0xE0D15C", VA = "0xE0D15C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0xE0D164", Offset = "0xE0D164", VA = "0xE0D164")]
		private void Awake()
		{
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0xE0D38C", Offset = "0xE0D38C", VA = "0xE0D38C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0xE0D390", Offset = "0xE0D390", VA = "0xE0D390")]
		private void OnMissionCompleted(MissionSO mission)
		{
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0xE0D484", Offset = "0xE0D484", VA = "0xE0D484")]
		private void EventHub_OnMissionUpdated()
		{
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0xE0D598", Offset = "0xE0D598", VA = "0xE0D598")]
		private void EventHub_OnMissionRewardGot()
		{
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0xE0D518", Offset = "0xE0D518", VA = "0xE0D518")]
		private void NotifyMissionUpdate(MissionSO mission)
		{
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0xE0E454", Offset = "0xE0E454", VA = "0xE0E454")]
		private void NotifyMissionCompletion(MissionSO mission)
		{
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0xE0D3CC", Offset = "0xE0D3CC", VA = "0xE0D3CC")]
		private void NotifyMissionUnlock(MissionSO mission)
		{
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0xE0D5E8", Offset = "0xE0D5E8", VA = "0xE0D5E8")]
		private bool CheckCanNotify(MissionSO mission)
		{
			return default(bool);
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0xE0E4C0", Offset = "0xE0E4C0", VA = "0xE0E4C0")]
		private void TryNotify()
		{
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0xE0E550", Offset = "0xE0E550", VA = "0xE0E550")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACEABC", Offset = "0xACEABC")]
		private IEnumerator NotifyCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0xE0D86C", Offset = "0xE0D86C", VA = "0xE0D86C")]
		private void PushMissionNotification(MissionNotification notification)
		{
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0xE0E5F8", Offset = "0xE0E5F8", VA = "0xE0E5F8")]
		private void FillMissionNotificationUI(MissionNotification notification)
		{
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0xE0EA60", Offset = "0xE0EA60", VA = "0xE0EA60")]
		private void DisplayMissionNotificationUI(MissionNotification notification)
		{
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0xE0D168", Offset = "0xE0D168", VA = "0xE0D168")]
		private void ResetMissionNotificationUI()
		{
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0xE0EB7C", Offset = "0xE0EB7C", VA = "0xE0EB7C")]
		public void OnSkipMissionNotification()
		{
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0xE0EBF8", Offset = "0xE0EBF8", VA = "0xE0EBF8")]
		private static string Capitalize(string str)
		{
			return null;
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0xE0ECC4", Offset = "0xE0ECC4", VA = "0xE0ECC4")]
		public UI_NotificationController()
		{
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0xE0ED90", Offset = "0xE0ED90", VA = "0xE0ED90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACEB20", Offset = "0xACEB20")]
		private void <DisplayMissionNotificationUI>b__43_0()
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0xE0EE6C", Offset = "0xE0EE6C", VA = "0xE0EE6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACEB30", Offset = "0xACEB30")]
		private void <DisplayMissionNotificationUI>b__43_1()
		{
		}
	}
	[Token(Token = "0x20002F9")]
	public class Test_CloudStorage2 : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200055F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1370", Offset = "0xAC1370")]
		private sealed class <>c
		{
			[Token(Token = "0x4001F45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001F46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Message<string>.Callback <>9__1_0;

			[Token(Token = "0x6002120")]
			[Address(RVA = "0xD16C30", Offset = "0xD16C30", VA = "0xD16C30")]
			public <>c()
			{
			}

			[Token(Token = "0x6002121")]
			[Address(RVA = "0xD16C38", Offset = "0xD16C38", VA = "0xD16C38")]
			internal void <GetUserDirectory>b__1_0(Message<string> res)
			{
			}
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0xD16A50", Offset = "0xD16A50", VA = "0xD16A50")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0xD16A54", Offset = "0xD16A54", VA = "0xD16A54")]
		public void GetUserDirectory()
		{
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0xD16B60", Offset = "0xD16B60", VA = "0xD16B60")]
		public void QuitGame()
		{
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0xD16BC0", Offset = "0xD16BC0", VA = "0xD16BC0")]
		public Test_CloudStorage2()
		{
		}
	}
	[Token(Token = "0x20002FA")]
	public class OpenUiPanel : MonoBehaviour
	{
		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject uiPanel;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject[] additionalPanels;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image gearIcon;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color gearActiveColor;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool craftingMinigame;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool craftingMinigameState;

		[Token(Token = "0x6001424")]
		[Address(RVA = "0xE52234", Offset = "0xE52234", VA = "0xE52234")]
		private void Start()
		{
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0xE52380", Offset = "0xE52380", VA = "0xE52380")]
		public void ToggleVisibility()
		{
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0xE52524", Offset = "0xE52524", VA = "0xE52524")]
		private void ToggleCraftingMinigame()
		{
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0xE52544", Offset = "0xE52544", VA = "0xE52544")]
		public OpenUiPanel()
		{
		}
	}
	[Token(Token = "0x20002FB")]
	public enum Platform
	{
		[Token(Token = "0x4001568")]
		Quest,
		[Token(Token = "0x4001569")]
		Pico
	}
	[Token(Token = "0x20002FC")]
	public static class Persist
	{
		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool overrideFFR;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static int overrideFFRLevel;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool showFps;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public static bool skipTutorials;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		public static bool disablePredators;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
		public static bool showDebugUI;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Dictionary<LocationSO, int> ambientAnimationIndex;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Gradient hoverGradient;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Gradient nonHoverGradient;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static bool aquariumDebug;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public static Platform platform;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static bool isPressBuild;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public static bool allowDebugOptions;
	}
	[Token(Token = "0x20002FD")]
	public enum Handside
	{
		[Token(Token = "0x4001578")]
		left,
		[Token(Token = "0x4001579")]
		right,
		[Token(Token = "0x400157A")]
		none,
		[Token(Token = "0x400157B")]
		both
	}
	[Token(Token = "0x20002FE")]
	public class Player : MonoBehaviour
	{
		[Token(Token = "0x2000560")]
		public delegate void LocationChangedAction(LocationSO locationSO, bool comingFromShip);

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Player instance;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform xrRig;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform hmd;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Camera xrCam;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform leftHand;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private XRBaseController leftController;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform rightHand;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private XRBaseController rightController;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ControllerModel modelL;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerModel modelR;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform fishpad;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool charmCraftingUnlocked;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool itemCraftingUnlocked;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		private bool craftingCutsceneShowed;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		private bool aquariumCutsceneShowed;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int newRodRecipe;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int newLureRecipe;

		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int newCharmRecipe;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int newDecoRecipe;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform grabL;

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform grabR;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private LocationSO location;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private InventoryController inventoryController;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private TeleporationManager teleportController;

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int m_XP;

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int m_Level;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly int XP_TO_NEXT_LEVEL;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int m_TournamentPoint;

		[Token(Token = "0x170001C2")]
		public static Transform XrRig
		{
			[Token(Token = "0x6001429")]
			[Address(RVA = "0x1FCB580", Offset = "0x1FCB580", VA = "0x1FCB580")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C3")]
		public static Transform Hmd
		{
			[Token(Token = "0x600142A")]
			[Address(RVA = "0x1FCB5F4", Offset = "0x1FCB5F4", VA = "0x1FCB5F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C4")]
		public static Camera XrCam
		{
			[Token(Token = "0x600142B")]
			[Address(RVA = "0x1FCB668", Offset = "0x1FCB668", VA = "0x1FCB668")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C5")]
		public static Transform LeftHand
		{
			[Token(Token = "0x600142C")]
			[Address(RVA = "0x1FCB6DC", Offset = "0x1FCB6DC", VA = "0x1FCB6DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C6")]
		public static XRBaseController LeftController
		{
			[Token(Token = "0x600142D")]
			[Address(RVA = "0x1FCB750", Offset = "0x1FCB750", VA = "0x1FCB750")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C7")]
		public static Transform RightHand
		{
			[Token(Token = "0x600142E")]
			[Address(RVA = "0x1FCB7C4", Offset = "0x1FCB7C4", VA = "0x1FCB7C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C8")]
		public static XRBaseController RightController
		{
			[Token(Token = "0x600142F")]
			[Address(RVA = "0x1FCB838", Offset = "0x1FCB838", VA = "0x1FCB838")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C9")]
		public static ControllerModel ModelL
		{
			[Token(Token = "0x6001430")]
			[Address(RVA = "0x1FCB8AC", Offset = "0x1FCB8AC", VA = "0x1FCB8AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001431")]
			[Address(RVA = "0x1FCB920", Offset = "0x1FCB920", VA = "0x1FCB920")]
			set
			{
			}
		}

		[Token(Token = "0x170001CA")]
		public static ControllerModel ModelR
		{
			[Token(Token = "0x6001432")]
			[Address(RVA = "0x1FCB99C", Offset = "0x1FCB99C", VA = "0x1FCB99C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001433")]
			[Address(RVA = "0x1FCBA10", Offset = "0x1FCBA10", VA = "0x1FCBA10")]
			set
			{
			}
		}

		[Token(Token = "0x170001CB")]
		public static Transform Fishpad
		{
			[Token(Token = "0x6001434")]
			[Address(RVA = "0x1FCBA8C", Offset = "0x1FCBA8C", VA = "0x1FCBA8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CC")]
		public static bool CharmCraftingUnlocked
		{
			[Token(Token = "0x6001435")]
			[Address(RVA = "0x1FCBB00", Offset = "0x1FCBB00", VA = "0x1FCBB00")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001436")]
			[Address(RVA = "0x1FCBB74", Offset = "0x1FCBB74", VA = "0x1FCBB74")]
			set
			{
			}
		}

		[Token(Token = "0x170001CD")]
		public static bool ItemCraftingUnlocked
		{
			[Token(Token = "0x6001437")]
			[Address(RVA = "0x1FCBC24", Offset = "0x1FCBC24", VA = "0x1FCBC24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001438")]
			[Address(RVA = "0x1FCBC98", Offset = "0x1FCBC98", VA = "0x1FCBC98")]
			set
			{
			}
		}

		[Token(Token = "0x170001CE")]
		public static bool CraftingCutsceneShowed
		{
			[Token(Token = "0x6001439")]
			[Address(RVA = "0x1FCBD48", Offset = "0x1FCBD48", VA = "0x1FCBD48")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600143A")]
			[Address(RVA = "0x1FCBDBC", Offset = "0x1FCBDBC", VA = "0x1FCBDBC")]
			set
			{
			}
		}

		[Token(Token = "0x170001CF")]
		public static bool AquariumCutsceneShowed
		{
			[Token(Token = "0x600143B")]
			[Address(RVA = "0x1FCBE38", Offset = "0x1FCBE38", VA = "0x1FCBE38")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600143C")]
			[Address(RVA = "0x1FCBEAC", Offset = "0x1FCBEAC", VA = "0x1FCBEAC")]
			set
			{
			}
		}

		[Token(Token = "0x170001D0")]
		public static int NewRodRecipe
		{
			[Token(Token = "0x600143D")]
			[Address(RVA = "0x1FCBF28", Offset = "0x1FCBF28", VA = "0x1FCBF28")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600143E")]
			[Address(RVA = "0x1FCBF9C", Offset = "0x1FCBF9C", VA = "0x1FCBF9C")]
			set
			{
			}
		}

		[Token(Token = "0x170001D1")]
		public static int NewLureRecipe
		{
			[Token(Token = "0x600143F")]
			[Address(RVA = "0x1FCC014", Offset = "0x1FCC014", VA = "0x1FCC014")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001440")]
			[Address(RVA = "0x1FCC088", Offset = "0x1FCC088", VA = "0x1FCC088")]
			set
			{
			}
		}

		[Token(Token = "0x170001D2")]
		public static int NewCharmRecipe
		{
			[Token(Token = "0x6001441")]
			[Address(RVA = "0x1FCC100", Offset = "0x1FCC100", VA = "0x1FCC100")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001442")]
			[Address(RVA = "0x1FCC174", Offset = "0x1FCC174", VA = "0x1FCC174")]
			set
			{
			}
		}

		[Token(Token = "0x170001D3")]
		public static int NewDecoRecipe
		{
			[Token(Token = "0x6001443")]
			[Address(RVA = "0x1FCC1EC", Offset = "0x1FCC1EC", VA = "0x1FCC1EC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001444")]
			[Address(RVA = "0x1FCC260", Offset = "0x1FCC260", VA = "0x1FCC260")]
			set
			{
			}
		}

		[Token(Token = "0x170001D4")]
		public static Transform GrabL
		{
			[Token(Token = "0x6001445")]
			[Address(RVA = "0x1FCC2D8", Offset = "0x1FCC2D8", VA = "0x1FCC2D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D5")]
		public static Transform GrabR
		{
			[Token(Token = "0x6001446")]
			[Address(RVA = "0x1FCC34C", Offset = "0x1FCC34C", VA = "0x1FCC34C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D6")]
		public static LocationSO Location
		{
			[Token(Token = "0x6001449")]
			[Address(RVA = "0x1FCAB68", Offset = "0x1FCAB68", VA = "0x1FCAB68")]
			get
			{
				return null;
			}
			[Token(Token = "0x600144A")]
			[Address(RVA = "0x1FCC5A0", Offset = "0x1FCC5A0", VA = "0x1FCC5A0")]
			set
			{
			}
		}

		[Token(Token = "0x170001D7")]
		public static InventoryController InventoryController
		{
			[Token(Token = "0x600144B")]
			[Address(RVA = "0x1FCCB54", Offset = "0x1FCCB54", VA = "0x1FCCB54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D8")]
		public static TeleporationManager TeleportController
		{
			[Token(Token = "0x600144C")]
			[Address(RVA = "0x1FCCBC8", Offset = "0x1FCCBC8", VA = "0x1FCCBC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D9")]
		public static int XP
		{
			[Token(Token = "0x600144D")]
			[Address(RVA = "0x1FCCC3C", Offset = "0x1FCCC3C", VA = "0x1FCCC3C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001DA")]
		public static int Level
		{
			[Token(Token = "0x600144E")]
			[Address(RVA = "0x1FCCCBC", Offset = "0x1FCCCBC", VA = "0x1FCCCBC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001DB")]
		public static int TurnamentPoint
		{
			[Token(Token = "0x600144F")]
			[Address(RVA = "0x1FCCD30", Offset = "0x1FCCD30", VA = "0x1FCCD30")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1400006D")]
		public static event LocationChangedAction OnLocationChanged
		{
			[Token(Token = "0x6001447")]
			[Address(RVA = "0x1FCC3C0", Offset = "0x1FCC3C0", VA = "0x1FCC3C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACEB40", Offset = "0xACEB40")]
			add
			{
			}
			[Token(Token = "0x6001448")]
			[Address(RVA = "0x1FCC4B0", Offset = "0x1FCC4B0", VA = "0x1FCC4B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACEB50", Offset = "0xACEB50")]
			remove
			{
			}
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0x1FCCDA4", Offset = "0x1FCCDA4", VA = "0x1FCCDA4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0x1FCCF98", Offset = "0x1FCCF98", VA = "0x1FCCF98")]
		private void Start()
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0x1FCD468", Offset = "0x1FCD468", VA = "0x1FCD468")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0x1FCD5A4", Offset = "0x1FCD5A4", VA = "0x1FCD5A4")]
		public void InitLocation([Optional] LocationSO LSO)
		{
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0x1FCD640", Offset = "0x1FCD640", VA = "0x1FCD640")]
		private void EventHub_OnMissionCompleted(MissionSO mission)
		{
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0x1FCD7AC", Offset = "0x1FCD7AC", VA = "0x1FCD7AC")]
		private void EventHub_OnFishCaught(FpFish fish, bool isCheating)
		{
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0x1FCD7B8", Offset = "0x1FCD7B8", VA = "0x1FCD7B8")]
		private void EventHub_OnPlayerXPGot(int xp)
		{
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0x1FCD7D0", Offset = "0x1FCD7D0", VA = "0x1FCD7D0")]
		private void CheckNextLevelXP()
		{
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0x1FCD878", Offset = "0x1FCD878", VA = "0x1FCD878")]
		public void ResetPlayerLevel()
		{
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0x1FCD8C4", Offset = "0x1FCD8C4", VA = "0x1FCD8C4")]
		private void RecipeUnlocked(CraftingRecipesSO recipe)
		{
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0x1FCD960", Offset = "0x1FCD960", VA = "0x1FCD960")]
		public void ResetCraftingStation()
		{
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0x1FCD994", Offset = "0x1FCD994", VA = "0x1FCD994")]
		public static void SetControllerModelVisible(Handside side, bool state)
		{
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0x1FCD378", Offset = "0x1FCD378", VA = "0x1FCD378")]
		public static void SetPlayerHeight(float offset)
		{
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0x1FCDC04", Offset = "0x1FCDC04", VA = "0x1FCDC04")]
		public Player()
		{
		}
	}
	[Token(Token = "0x20002FF")]
	public class PredatorController : MonoBehaviour
	{
		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PredatorController Instance;

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_PredatorDiveTime;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SpawnPool pool;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform Predator;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private DOTweenPath[] Path;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<DOTweenPath> paths;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Tween m_tween;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<SharkController> predators;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PredatorSkin skin;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int maxNumber;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int initialNumber;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int numSpawnAtOnce;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float spawnRate;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float speed;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool initialSpawn;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int numHiddenPredators;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly float speedScalingFactor;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private readonly float predatorsHiddenDuration;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string lastLocationBCID;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float SystemActivatedTime;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float systemActivateKeepout;

		[Token(Token = "0x600145F")]
		[Address(RVA = "0x1FD7FA0", Offset = "0x1FD7FA0", VA = "0x1FD7FA0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0x1FD8134", Offset = "0x1FD8134", VA = "0x1FD8134")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0x1FD81B4", Offset = "0x1FD81B4", VA = "0x1FD81B4")]
		private void FishpoolChanged()
		{
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0x1FD81B8", Offset = "0x1FD81B8", VA = "0x1FD81B8")]
		public void SystemInit()
		{
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0x1FD8538", Offset = "0x1FD8538", VA = "0x1FD8538")]
		public void SystemInit(PredatorSkin _skin, int _maxNumber, int _initialNumber, int _numSpawnAtOnce, float _spawnRate, float _lifeTime, float _speed, float _systemActiveDur, float _systemInactiveDur)
		{
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0x1FD847C", Offset = "0x1FD847C", VA = "0x1FD847C")]
		private void SystemEnable()
		{
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0x1FD883C", Offset = "0x1FD883C", VA = "0x1FD883C")]
		public void SystemDisable(float inactiveDur)
		{
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0x1FD8568", Offset = "0x1FD8568", VA = "0x1FD8568")]
		private void PrepPredatorList()
		{
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0x1FD8348", Offset = "0x1FD8348", VA = "0x1FD8348")]
		private void ClearAllPredators()
		{
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0x1FD861C", Offset = "0x1FD861C", VA = "0x1FD861C")]
		private void Spawn()
		{
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0x1FD8B0C", Offset = "0x1FD8B0C", VA = "0x1FD8B0C")]
		private void SpawnSingle()
		{
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0x1FD8038", Offset = "0x1FD8038", VA = "0x1FD8038")]
		public void InitPredator()
		{
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0x1FD8A5C", Offset = "0x1FD8A5C", VA = "0x1FD8A5C")]
		public void DespawnPredator(SharkController predator, DOTweenPath tweenPath)
		{
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0x1FD8DD8", Offset = "0x1FD8DD8", VA = "0x1FD8DD8")]
		public PredatorController()
		{
		}
	}
	[Token(Token = "0x2000300")]
	public class SharkController : MonoBehaviour
	{
		[Token(Token = "0x2000561")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1380", Offset = "0xAC1380")]
		private sealed class <GetAnimator>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SharkController <>4__this;

			[Token(Token = "0x17000363")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002129")]
				[Address(RVA = "0xD63440", Offset = "0xD63440", VA = "0xD63440", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000364")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600212B")]
				[Address(RVA = "0xD634A8", Offset = "0xD634A8", VA = "0xD634A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002126")]
			[Address(RVA = "0xD62DD0", Offset = "0xD62DD0", VA = "0xD62DD0")]
			[DebuggerHidden]
			public <GetAnimator>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002127")]
			[Address(RVA = "0xD63378", Offset = "0xD63378", VA = "0xD63378", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002128")]
			[Address(RVA = "0xD6337C", Offset = "0xD6337C", VA = "0xD6337C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600212A")]
			[Address(RVA = "0xD63448", Offset = "0xD63448", VA = "0xD63448", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PredatorDataSO Data;

		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject[] Skins;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform Ring;

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform Fin;

		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public DOTweenPath path;

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Tween pathTween;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Tween diveTween;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public HapticsClipSO crunch;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject exclamations;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public PredatorSkin skin;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Animator anim;

		[Token(Token = "0x600146D")]
		[Address(RVA = "0xD62BEC", Offset = "0xD62BEC", VA = "0xD62BEC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0xD62D98", Offset = "0xD62D98", VA = "0xD62D98")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0xD62CCC", Offset = "0xD62CCC", VA = "0xD62CCC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACEB60", Offset = "0xACEB60")]
		private IEnumerator GetAnimator()
		{
			return null;
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0xD62DFC", Offset = "0xD62DFC", VA = "0xD62DFC")]
		public void setSkin()
		{
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0xD62EB0", Offset = "0xD62EB0", VA = "0xD62EB0")]
		private void DisableAllSkins()
		{
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0xD62F20", Offset = "0xD62F20", VA = "0xD62F20")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0xD62F74", Offset = "0xD62F74", VA = "0xD62F74")]
		private void FishCollision()
		{
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0xD63184", Offset = "0xD63184", VA = "0xD63184")]
		private void SetDefaultAnimSpeed()
		{
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0xD631A4", Offset = "0xD631A4", VA = "0xD631A4")]
		public void Dive()
		{
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0xD63208", Offset = "0xD63208", VA = "0xD63208")]
		private void DoDive()
		{
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0xD63304", Offset = "0xD63304", VA = "0xD63304")]
		private void RemoveSelf()
		{
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0xD62D48", Offset = "0xD62D48", VA = "0xD62D48")]
		private void Surface()
		{
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0xD6336C", Offset = "0xD6336C", VA = "0xD6336C")]
		public SharkController()
		{
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0xD63374", Offset = "0xD63374", VA = "0xD63374")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACEBC4", Offset = "0xACEBC4")]
		private void <DoDive>b__20_0()
		{
		}
	}
	[Token(Token = "0x2000301")]
	public class UI_PredatorController : MonoBehaviour
	{
		[Token(Token = "0x600147B")]
		[Address(RVA = "0xE100B4", Offset = "0xE100B4", VA = "0xE100B4")]
		public UI_PredatorController()
		{
		}
	}
	[Token(Token = "0x2000302")]
	public class PredatorToggle : MonoBehaviour
	{
		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Toggle tog;

		[Token(Token = "0x600147C")]
		[Address(RVA = "0x1FD9ED4", Offset = "0x1FD9ED4", VA = "0x1FD9ED4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0x1FD9F78", Offset = "0x1FD9F78", VA = "0x1FD9F78")]
		public void OnToggleChange()
		{
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0x1FDA018", Offset = "0x1FDA018", VA = "0x1FDA018")]
		public PredatorToggle()
		{
		}
	}
	[Token(Token = "0x2000303")]
	public class RecoverFish : MonoBehaviour
	{
		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform recoveredFish;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpawnPool creaturePool;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SpawnPool itemPool;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SpawnPool vfx;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject takeFishUi;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject missionUnlocked;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform takeFishFx;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private FishTypeSO fishCaught;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Localize fishNameText;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TextMeshProUGUI fishWeightText;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Image[] stars;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UI_FishOPediaController fishCheckist;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UI_TakeFishController takeFishUiCtrl;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Tween airRotate;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool showFishInHand;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int fishScale;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float airTime;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GameObject jumpTrail;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Transform jumpTrailParent;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Transform largeObjectRecoverSplash;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 releaseSplashPos;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private FishTypeSO.FishScale releaseSplashScale;

		[Token(Token = "0x600147F")]
		[Address(RVA = "0x1FDAF7C", Offset = "0x1FDAF7C", VA = "0x1FDAF7C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0x1FDAF80", Offset = "0x1FDAF80", VA = "0x1FDAF80")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0x1FDAF84", Offset = "0x1FDAF84", VA = "0x1FDAF84")]
		private void MissionCompleted(MissionSO.MissionTypes type, MissionSO.Reward[] rewards)
		{
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0x1FDB004", Offset = "0x1FDB004", VA = "0x1FDB004")]
		public void TakeFish(Vector3 position)
		{
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0x1FDBBA4", Offset = "0x1FDBBA4", VA = "0x1FDBBA4")]
		public void JumpAndRelease()
		{
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0x1FDBF2C", Offset = "0x1FDBF2C", VA = "0x1FDBF2C")]
		private void ReleaseSplash()
		{
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0x1FDC05C", Offset = "0x1FDC05C", VA = "0x1FDC05C")]
		private void PlaySplashFizz()
		{
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0x1FDC0EC", Offset = "0x1FDC0EC", VA = "0x1FDC0EC")]
		public void JumpAndKeep()
		{
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0x1FDC328", Offset = "0x1FDC328", VA = "0x1FDC328")]
		private void SloMoStart()
		{
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0x1FDC398", Offset = "0x1FDC398", VA = "0x1FDC398")]
		private void SloMoEnd()
		{
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0x1FDC3A4", Offset = "0x1FDC3A4", VA = "0x1FDC3A4")]
		private void ShowFishInUI()
		{
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0x1FDC768", Offset = "0x1FDC768", VA = "0x1FDC768")]
		private void SetStars()
		{
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0x1FDC898", Offset = "0x1FDC898", VA = "0x1FDC898")]
		public void RemoveFishInHand()
		{
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0x1FDCA54", Offset = "0x1FDCA54", VA = "0x1FDCA54")]
		private void EnableMissionCompleted()
		{
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0x1FDCA74", Offset = "0x1FDCA74", VA = "0x1FDCA74")]
		public RecoverFish()
		{
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0x1FDCA84", Offset = "0x1FDCA84", VA = "0x1FDCA84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACEBD4", Offset = "0xACEBD4")]
		private void <TakeFish>b__25_0()
		{
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0x1FDCA88", Offset = "0x1FDCA88", VA = "0x1FDCA88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACEBE4", Offset = "0xACEBE4")]
		private void <JumpAndRelease>b__26_0()
		{
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0x1FDCAAC", Offset = "0x1FDCAAC", VA = "0x1FDCAAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACEBF4", Offset = "0xACEBF4")]
		private void <JumpAndKeep>b__29_0()
		{
		}
	}
	[Token(Token = "0x2000304")]
	public class ReelInUI : MonoBehaviour
	{
		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RectTransform guage;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image guageFill;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image blueZone;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image redZone;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform needle;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SpriteRenderer dangerGlow;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Tween dangerColorPulse;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Color dangerOverOn;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Color dangerOverOff;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Color dangerUnderOn;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Color dangerUnderOff;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Color patternStepSuccessOn;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Color patternStepSuccessOff;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private GameObject blueZoneOutline;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private GameObject redZoneOutline;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private GameObject powerReel;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public GameObject[] meterObjectsToHide;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public GameObject[] staminaObjectsToHide;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public int dangerLevel;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public bool meterIsHidden;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ReelInUI instance;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float cachedCurrentRedzone;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float cachedCurrentBluezone;

		[Token(Token = "0x6001491")]
		[Address(RVA = "0x1FDD08C", Offset = "0x1FDD08C", VA = "0x1FDD08C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0x1FDD164", Offset = "0x1FDD164", VA = "0x1FDD164")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0x1FDD458", Offset = "0x1FDD458", VA = "0x1FDD458")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0x1FDD6C8", Offset = "0x1FDD6C8", VA = "0x1FDD6C8")]
		public void DoAlert(TensionAlert alert)
		{
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0x1FDD740", Offset = "0x1FDD740", VA = "0x1FDD740")]
		private void TurnOutlinesOff()
		{
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0x1FDD784", Offset = "0x1FDD784", VA = "0x1FDD784")]
		public void PatternStepSuccessFlash()
		{
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0x1FDD82C", Offset = "0x1FDD82C", VA = "0x1FDD82C")]
		private void SetBlueZone(float val)
		{
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0x1FDD878", Offset = "0x1FDD878", VA = "0x1FDD878")]
		private void SetRedZone(float val)
		{
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0x1FDD8C4", Offset = "0x1FDD8C4", VA = "0x1FDD8C4")]
		public void SetDangerZones(float blueVal, float redVal, float time = 0.5f)
		{
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0x1FDD2C0", Offset = "0x1FDD2C0", VA = "0x1FDD2C0")]
		public void HideMeter(bool state)
		{
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0x1FDD8F8", Offset = "0x1FDD8F8", VA = "0x1FDD8F8")]
		private void OnPowerReelStart()
		{
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0x1FDD528", Offset = "0x1FDD528", VA = "0x1FDD528")]
		private void OnPowerReelStop()
		{
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0x1FDDAC8", Offset = "0x1FDDAC8", VA = "0x1FDDAC8")]
		public ReelInUI()
		{
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0x1FDDAD0", Offset = "0x1FDDAD0", VA = "0x1FDDAD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACEC04", Offset = "0xACEC04")]
		private void <OnPowerReelStart>b__33_0(float val)
		{
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0x1FDDAEC", Offset = "0x1FDDAEC", VA = "0x1FDDAEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACEC14", Offset = "0xACEC14")]
		private void <OnPowerReelStart>b__33_1(float val)
		{
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0x1FDDB08", Offset = "0x1FDDB08", VA = "0x1FDDB08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACEC24", Offset = "0xACEC24")]
		private void <OnPowerReelStop>b__34_0(float val)
		{
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0x1FDDB24", Offset = "0x1FDDB24", VA = "0x1FDDB24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACEC34", Offset = "0xACEC34")]
		private void <OnPowerReelStop>b__34_1(float val)
		{
		}
	}
	[Token(Token = "0x2000305")]
	public class ResetTextColor : MonoBehaviour
	{
		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color color;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshProUGUI text;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private DOTweenAnimation anim;

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0x1FDED68", Offset = "0x1FDED68", VA = "0x1FDED68")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0x1FDEDB8", Offset = "0x1FDEDB8", VA = "0x1FDEDB8")]
		public ResetTextColor()
		{
		}
	}
	[Token(Token = "0x2000306")]
	public enum SfxRod
	{
		[Token(Token = "0x40015EB")]
		Cast,
		[Token(Token = "0x40015EC")]
		ReelIn,
		[Token(Token = "0x40015ED")]
		OutOfBounds,
		[Token(Token = "0x40015EE")]
		Reset,
		[Token(Token = "0x40015EF")]
		Splash,
		[Token(Token = "0x40015F0")]
		CastArm,
		[Token(Token = "0x40015F1")]
		CastRelease,
		[Token(Token = "0x40015F2")]
		FishHookSplash,
		[Token(Token = "0x40015F3")]
		FishHookSplash2,
		[Token(Token = "0x40015F4")]
		FishSplashSingle,
		[Token(Token = "0x40015F5")]
		FishSplashFlee,
		[Token(Token = "0x40015F6")]
		FishSplashFleeEnd,
		[Token(Token = "0x40015F7")]
		RodWhip,
		[Token(Token = "0x40015F8")]
		BoostReady,
		[Token(Token = "0x40015F9")]
		CastWhip,
		[Token(Token = "0x40015FA")]
		PowerReelWindup,
		[Token(Token = "0x40015FB")]
		PowerReelEnd,
		[Token(Token = "0x40015FC")]
		RodTipSplash,
		[Token(Token = "0x40015FD")]
		BoostFail,
		[Token(Token = "0x40015FE")]
		RunRageSplash,
		[Token(Token = "0x40015FF")]
		IsRunning,
		[Token(Token = "0x4001600")]
		RodStretch,
		[Token(Token = "0x4001601")]
		ReelJump,
		[Token(Token = "0x4001602")]
		ReelLean,
		[Token(Token = "0x4001603")]
		ReelLeanGood,
		[Token(Token = "0x4001604")]
		ReelLeanBad,
		[Token(Token = "0x4001605")]
		IsRaging,
		[Token(Token = "0x4001606")]
		RodEquip,
		[Token(Token = "0x4001607")]
		JumpOutSplash,
		[Token(Token = "0x4001608")]
		JumpLandSplash,
		[Token(Token = "0x4001609")]
		BobberBite,
		[Token(Token = "0x400160A")]
		BobberBiteBig,
		[Token(Token = "0x400160B")]
		RecoverSplash,
		[Token(Token = "0x400160C")]
		SnapSplash,
		[Token(Token = "0x400160D")]
		BoostPistonS,
		[Token(Token = "0x400160E")]
		BoostPistonM,
		[Token(Token = "0x400160F")]
		BoostPistonL,
		[Token(Token = "0x4001610")]
		FishReleaseSplash,
		[Token(Token = "0x4001611")]
		SplashFizz,
		[Token(Token = "0x4001612")]
		ReelWhine,
		[Token(Token = "0x4001613")]
		ElectricHum,
		[Token(Token = "0x4001614")]
		ElectricZap,
		[Token(Token = "0x4001615")]
		LureEquip,
		[Token(Token = "0x4001616")]
		LineStress
	}
	[Token(Token = "0x2000307")]
	public class RodAudio : MonoBehaviour
	{
		[Token(Token = "0x2000562")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1390", Offset = "0xAC1390")]
		private sealed class <LowerPitch>d__71 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RodAudio <>4__this;

			[Token(Token = "0x17000365")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600212F")]
				[Address(RVA = "0xD4C520", Offset = "0xD4C520", VA = "0xD4C520", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000366")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002131")]
				[Address(RVA = "0xD4C588", Offset = "0xD4C588", VA = "0xD4C588", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600212C")]
			[Address(RVA = "0xD4C404", Offset = "0xD4C404", VA = "0xD4C404")]
			[DebuggerHidden]
			public <LowerPitch>d__71(int <>1__state)
			{
			}

			[Token(Token = "0x600212D")]
			[Address(RVA = "0xD4C430", Offset = "0xD4C430", VA = "0xD4C430", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600212E")]
			[Address(RVA = "0xD4C434", Offset = "0xD4C434", VA = "0xD4C434", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002130")]
			[Address(RVA = "0xD4C528", Offset = "0xD4C528", VA = "0xD4C528", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000563")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC13A0", Offset = "0xAC13A0")]
		private sealed class <RaiseBoostAudioPitch>d__73 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RodAudio <>4__this;

			[Token(Token = "0x17000367")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002135")]
				[Address(RVA = "0xD4C6AC", Offset = "0xD4C6AC", VA = "0xD4C6AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000368")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002137")]
				[Address(RVA = "0xD4C714", Offset = "0xD4C714", VA = "0xD4C714", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002132")]
			[Address(RVA = "0xD4C590", Offset = "0xD4C590", VA = "0xD4C590")]
			[DebuggerHidden]
			public <RaiseBoostAudioPitch>d__73(int <>1__state)
			{
			}

			[Token(Token = "0x6002133")]
			[Address(RVA = "0xD4C5BC", Offset = "0xD4C5BC", VA = "0xD4C5BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002134")]
			[Address(RVA = "0xD4C5C0", Offset = "0xD4C5C0", VA = "0xD4C5C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002136")]
			[Address(RVA = "0xD4C6B4", Offset = "0xD4C6B4", VA = "0xD4C6B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC7240", Offset = "0xAC7240")]
		public AudioSource lineAudio;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource reelAudio;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioSource reelBoostAudio;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioSource reelWhineAudio;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioSource bobberAudio;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioSource rodTipAudio;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioSource rodBodyAudio;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioSource releaseSplashAudio;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioSource reelElectricity;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static RodAudio instance;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC7278", Offset = "0xAC7278")]
		public AudioClip castReelSfx;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioClip[] reelPingSfx;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AudioClip outOfBounds;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AudioClip rodReset;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AudioClip bobberSplash;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public AudioClip castArm;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AudioClip castRelease;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public AudioClip boostReady;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public AudioClip powerReelWindup;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public AudioClip powerReelEnd;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public AudioClip boostPiston;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public AudioClip fishHookSplash;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public HapticsClipSO fishHookSplashHaptics;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public AudioClip fishHookSplash2;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public HapticsClipSO fishHookSplash2Haptics;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public AudioClip[] splashSingle;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public AudioClip[] splashFlee;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public AudioClip splashFleeEnd;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public HapticsClipSO[] splashSingleHaptics;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public HapticsClipSO[] splashFleeHaptics;

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public AudioClip[] rodWhip;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public HapticsClipSO[] rodWhipHaptics;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public AudioClip[] castWhip;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private int lastFishSplashSingle;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private int lastFishSplashFlee;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public AudioClip[] rodTipSplash;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public AudioClip boostFail;

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public AudioClip runRageSplash;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public AudioClip[] rodStretch;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public AudioClip[] reelJump;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public AudioClip reelLean;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public AudioClip[] rodEquip;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public AudioClip[] jumpOutSplash;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public AudioClip[] jumpLandSplash;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public AudioClip[] bobberBite;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public AudioClip[] bobberBiteBig;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public AudioClip recoverSplashSmall;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public AudioClip recoverSplashMedium;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public AudioClip recoverSplashLarge;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public AudioClip recoverSplashXLarge;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public AudioClip[] snapSplashes;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public AudioClip releaseSplashSmall;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public AudioClip releaseSplashLarge;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public AudioClip splashFizz;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public AudioClip reelWhine;

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public AudioClip[] zaps;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public AudioClip hum;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public AudioClip[] equipmentChange;

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public AudioClip lineStress;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private int rodStretchIndex;

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		private int reelJumpIndex;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool playingFishFlee;

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0x1FDF070", Offset = "0x1FDF070", VA = "0x1FDF070")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x1FDF0E0", Offset = "0x1FDF0E0", VA = "0x1FDF0E0")]
		private void FishFlee()
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x1FDF1C8", Offset = "0x1FDF1C8", VA = "0x1FDF1C8")]
		public static void Play(SfxRod sfx, FishTypeSO.FishScale size = FishTypeSO.FishScale.Small)
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x1FE0E68", Offset = "0x1FE0E68", VA = "0x1FE0E68")]
		public static void Play(SfxRod sfx, float pitchFloat)
		{
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0x1FDB718", Offset = "0x1FDB718", VA = "0x1FDB718")]
		public static void PlayAt(SfxRod sfx, Vector3 position, FishTypeSO.FishScale size = FishTypeSO.FishScale.Small)
		{
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0x1FE0F44", Offset = "0x1FE0F44", VA = "0x1FE0F44")]
		public static void Stop()
		{
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x1FE10B8", Offset = "0x1FE10B8", VA = "0x1FE10B8")]
		public static void StopBobberAudio()
		{
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0x1FE1134", Offset = "0x1FE1134", VA = "0x1FE1134")]
		public static void ReelWhine(float tension)
		{
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0x1FE103C", Offset = "0x1FE103C", VA = "0x1FE103C")]
		public static void ReelWhineStop()
		{
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0x1FE0D70", Offset = "0x1FE0D70", VA = "0x1FE0D70")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACEC44", Offset = "0xACEC44")]
		private IEnumerator LowerPitch()
		{
			return null;
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0x1FE0D54", Offset = "0x1FE0D54", VA = "0x1FE0D54")]
		private float map(float x, float in_min, float in_max, float out_min, float out_max)
		{
			return default(float);
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0x1FE0DEC", Offset = "0x1FE0DEC", VA = "0x1FE0DEC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACECA8", Offset = "0xACECA8")]
		private IEnumerator RaiseBoostAudioPitch()
		{
			return null;
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0x1FE12B8", Offset = "0x1FE12B8", VA = "0x1FE12B8")]
		internal static void Stop(SfxRod lineStress)
		{
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0x1FE1334", Offset = "0x1FE1334", VA = "0x1FE1334")]
		public RodAudio()
		{
		}
	}
	[Token(Token = "0x2000308")]
	public enum RodBendStatus
	{
		[Token(Token = "0x4001656")]
		Idle,
		[Token(Token = "0x4001657")]
		Tautness
	}
	[Token(Token = "0x2000309")]
	public class RodBender : MonoBehaviour
	{
		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TMP_Text Debugtext;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator rodAnim;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform bendyGuide;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float minZRot;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float maxZRot;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform armature;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float largestDeflection;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float TensionForce;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform m_rodSecEnd;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform m_rodEndTrans;

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform m_rodEndTrans2;

		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform m_bobberTrans;

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float tensionForceOverride;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static RodBender instance;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Tween overrideTween;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 preVecNorm;

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0xD4C71C", Offset = "0xD4C71C", VA = "0xD4C71C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0xD4C774", Offset = "0xD4C774", VA = "0xD4C774")]
		private void Start()
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xD4C7EC", Offset = "0xD4C7EC", VA = "0xD4C7EC")]
		public void Update()
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xD4CB14", Offset = "0xD4CB14", VA = "0xD4CB14")]
		public static void ResetBender()
		{
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xD4CB90", Offset = "0xD4CB90", VA = "0xD4CB90")]
		private RodBendStatus GetBendStatus()
		{
			return default(RodBendStatus);
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xD4CA84", Offset = "0xD4CA84", VA = "0xD4CA84")]
		private void UpdateRodAnimation(Vector3 outputV3)
		{
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0xD4CC08", Offset = "0xD4CC08", VA = "0xD4CC08")]
		private void showMaxMin()
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0xD4CCF4", Offset = "0xD4CCF4", VA = "0xD4CCF4")]
		private float map(float x, float in_min, float in_max, float out_min, float out_max)
		{
			return default(float);
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0xD4CD10", Offset = "0xD4CD10", VA = "0xD4CD10")]
		public static void SmallBite()
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0xD4CD68", Offset = "0xD4CD68", VA = "0xD4CD68")]
		private void DoSmallBite()
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0xD4CEDC", Offset = "0xD4CEDC", VA = "0xD4CEDC")]
		public static void BigBite()
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0xD4CF34", Offset = "0xD4CF34", VA = "0xD4CF34")]
		private void DoBigBite()
		{
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0xD4D0A8", Offset = "0xD4D0A8", VA = "0xD4D0A8")]
		private void AwaitPullup()
		{
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0xD4D238", Offset = "0xD4D238", VA = "0xD4D238")]
		public static void StopAwaitPullup()
		{
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0xD4D2B4", Offset = "0xD4D2B4", VA = "0xD4D2B4")]
		public RodBender()
		{
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0xD4D2C4", Offset = "0xD4D2C4", VA = "0xD4D2C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACED0C", Offset = "0xACED0C")]
		private float <DoSmallBite>b__25_0()
		{
			return default(float);
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0xD4D2CC", Offset = "0xD4D2CC", VA = "0xD4D2CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACED1C", Offset = "0xACED1C")]
		private void <DoSmallBite>b__25_1(float x)
		{
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0xD4D2D4", Offset = "0xD4D2D4", VA = "0xD4D2D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACED2C", Offset = "0xACED2C")]
		private void <DoSmallBite>b__25_2()
		{
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0xD4D2DC", Offset = "0xD4D2DC", VA = "0xD4D2DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACED3C", Offset = "0xACED3C")]
		private float <DoBigBite>b__27_0()
		{
			return default(float);
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0xD4D2E4", Offset = "0xD4D2E4", VA = "0xD4D2E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACED4C", Offset = "0xACED4C")]
		private void <DoBigBite>b__27_1(float x)
		{
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0xD4D2EC", Offset = "0xD4D2EC", VA = "0xD4D2EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACED5C", Offset = "0xACED5C")]
		private void <DoBigBite>b__27_2()
		{
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0xD4D2F0", Offset = "0xD4D2F0", VA = "0xD4D2F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACED6C", Offset = "0xACED6C")]
		private float <AwaitPullup>b__28_0()
		{
			return default(float);
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0xD4D2F8", Offset = "0xD4D2F8", VA = "0xD4D2F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACED7C", Offset = "0xACED7C")]
		private void <AwaitPullup>b__28_1(float x)
		{
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0xD4D300", Offset = "0xD4D300", VA = "0xD4D300")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACED8C", Offset = "0xACED8C")]
		private void <AwaitPullup>b__28_2()
		{
		}
	}
	[Token(Token = "0x200030A")]
	public enum CastPhase
	{
		[Token(Token = "0x4001669")]
		ready,
		[Token(Token = "0x400166A")]
		armed,
		[Token(Token = "0x400166B")]
		released,
		[Token(Token = "0x400166C")]
		inWater
	}
	[Token(Token = "0x200030B")]
	public class RodCast : MonoBehaviour, XRIDefaultInputActions.IXRILeftHandActions, XRIDefaultInputActions.IXRIRightHandActions
	{
		[Serializable]
		[Token(Token = "0x2000564")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC13B0", Offset = "0xAC13B0")]
		private sealed class <>c
		{
			[Token(Token = "0x4001F50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001F51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__14_0;

			[Token(Token = "0x6002139")]
			[Address(RVA = "0xD511B8", Offset = "0xD511B8", VA = "0xD511B8")]
			public <>c()
			{
			}

			[Token(Token = "0x600213A")]
			[Address(RVA = "0xD511C0", Offset = "0xD511C0", VA = "0xD511C0")]
			internal void <LostResetRod>b__14_0()
			{
			}
		}

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CastPhase cast;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float castSpeedMultiplier;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HapticsClipSO castHaptics;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static RodCast instance;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool isCastAllowed;

		[Token(Token = "0x170001DC")]
		public static CastPhase Cast
		{
			[Token(Token = "0x60014CB")]
			[Address(RVA = "0xD4CBAC", Offset = "0xD4CBAC", VA = "0xD4CBAC")]
			get
			{
				return default(CastPhase);
			}
			[Token(Token = "0x60014CC")]
			[Address(RVA = "0xD4FFFC", Offset = "0xD4FFFC", VA = "0xD4FFFC")]
			set
			{
			}
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0xD5005C", Offset = "0xD5005C", VA = "0xD5005C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0xD500B4", Offset = "0xD500B4", VA = "0xD500B4", Slot = "32")]
		public void OnActivate(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0xD503F0", Offset = "0xD503F0", VA = "0xD503F0", Slot = "43")]
		public void OnReset(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0xD50758", Offset = "0xD50758", VA = "0xD50758", Slot = "45")]
		public void OnAutoReel(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0xD500B8", Offset = "0xD500B8", VA = "0xD500B8")]
		private void HandleCast(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0xD50504", Offset = "0xD50504", VA = "0xD50504")]
		public static void ResetRod(bool mute = false)
		{
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0xD50E70", Offset = "0xD50E70", VA = "0xD50E70")]
		public static void LostResetRod()
		{
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0xD50B50", Offset = "0xD50B50", VA = "0xD50B50")]
		private void PerformCastOut()
		{
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0xD50F90", Offset = "0xD50F90", VA = "0xD50F90")]
		private bool isRodTipUnderWater()
		{
			return default(bool);
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0xD51044", Offset = "0xD51044", VA = "0xD51044")]
		public void AllowCast()
		{
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0xD510BC", Offset = "0xD510BC", VA = "0xD510BC")]
		public void DisallowCast()
		{
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0xD510C4", Offset = "0xD510C4", VA = "0xD510C4", Slot = "34")]
		public void OnHapticDevice(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0xD510C8", Offset = "0xD510C8", VA = "0xD510C8", Slot = "40")]
		public void OnMove(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0xD510CC", Offset = "0xD510CC", VA = "0xD510CC", Slot = "29")]
		public void OnPosition(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0xD510D0", Offset = "0xD510D0", VA = "0xD510D0", Slot = "41")]
		public void OnRotateAnchor(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0xD510D4", Offset = "0xD510D4", VA = "0xD510D4", Slot = "30")]
		public void OnRotation(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0xD510D8", Offset = "0xD510D8", VA = "0xD510D8", Slot = "31")]
		public void OnSelect(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0xD510DC", Offset = "0xD510DC", VA = "0xD510DC", Slot = "36")]
		public void OnTeleportModeActivate(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0xD510E0", Offset = "0xD510E0", VA = "0xD510E0", Slot = "37")]
		public void OnTeleportModeCancel(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0xD510E4", Offset = "0xD510E4", VA = "0xD510E4", Slot = "35")]
		public void OnTeleportSelect(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0xD510E8", Offset = "0xD510E8", VA = "0xD510E8", Slot = "42")]
		public void OnTranslateAnchor(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0xD510EC", Offset = "0xD510EC", VA = "0xD510EC", Slot = "38")]
		public void OnTurn(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0xD510F0", Offset = "0xD510F0", VA = "0xD510F0", Slot = "33")]
		public void OnUIPress(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0xD510F4", Offset = "0xD510F4", VA = "0xD510F4", Slot = "49")]
		public void OnMenu(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0xD510F8", Offset = "0xD510F8", VA = "0xD510F8", Slot = "46")]
		public void OnBoost(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0xD510FC", Offset = "0xD510FC", VA = "0xD510FC", Slot = "47")]
		public void OnGrabHandle(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0xD51100", Offset = "0xD51100", VA = "0xD51100", Slot = "48")]
		public void OnEditorPause(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0xD51104", Offset = "0xD51104", VA = "0xD51104", Slot = "50")]
		public void OnPickup(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0xD51108", Offset = "0xD51108", VA = "0xD51108", Slot = "51")]
		public void OnDialogAdvance(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0xD5110C", Offset = "0xD5110C", VA = "0xD5110C")]
		public void OnAnimateRightHand(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0xD51110", Offset = "0xD51110", VA = "0xD51110")]
		public void OnAnimateLeftHand(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0xD51114", Offset = "0xD51114", VA = "0xD51114", Slot = "26")]
		public void OnAnimateIndexLeft(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0xD51118", Offset = "0xD51118", VA = "0xD51118", Slot = "52")]
		public void OnAnimateIndexRight(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0xD5111C", Offset = "0xD5111C", VA = "0xD5111C", Slot = "53")]
		public void OnAnimateFingersRight(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0xD51120", Offset = "0xD51120", VA = "0xD51120", Slot = "54")]
		public void OnAnimateThumbRight(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0xD51124", Offset = "0xD51124", VA = "0xD51124", Slot = "27")]
		public void OnAnimateFingersLeft(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0xD51128", Offset = "0xD51128", VA = "0xD51128", Slot = "28")]
		public void OnAnimateThumbLeft(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0xD5112C", Offset = "0xD5112C", VA = "0xD5112C", Slot = "44")]
		public void OnSwitchRod(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0xD51130", Offset = "0xD51130", VA = "0xD51130", Slot = "39")]
		public void OnThumbUp(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0xD51134", Offset = "0xD51134", VA = "0xD51134")]
		public RodCast()
		{
		}
	}
	[Token(Token = "0x200030C")]
	public class RodFlick : MonoBehaviour
	{
		[Token(Token = "0x2000565")]
		public delegate void FlickAction(float force);

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 lastFwd;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float curAngleX;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float angleDifference;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float largestDifference;

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform controllerTransform;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float flickThreshold;

		[Token(Token = "0x1400006E")]
		public static event FlickAction OnFlick
		{
			[Token(Token = "0x60014F5")]
			[Address(RVA = "0xD519B8", Offset = "0xD519B8", VA = "0xD519B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACED9C", Offset = "0xACED9C")]
			add
			{
			}
			[Token(Token = "0x60014F6")]
			[Address(RVA = "0xD51A6C", Offset = "0xD51A6C", VA = "0xD51A6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACEDAC", Offset = "0xACEDAC")]
			remove
			{
			}
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0xD51B20", Offset = "0xD51B20", VA = "0xD51B20")]
		private void Update()
		{
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0xD51D24", Offset = "0xD51D24", VA = "0xD51D24")]
		public void AssignControllerTransform(Transform trns)
		{
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0xD51B24", Offset = "0xD51B24", VA = "0xD51B24")]
		private void DetectRodFlick()
		{
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0xD51DD4", Offset = "0xD51DD4", VA = "0xD51DD4")]
		private void Flick(float force)
		{
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0xD52110", Offset = "0xD52110", VA = "0xD52110")]
		public RodFlick()
		{
		}
	}
	[Token(Token = "0x200030D")]
	public class RodJerk : MonoBehaviour
	{
		[Token(Token = "0x2000566")]
		public delegate void JerkAction(float force);

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int smoothing;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float[] movedVals;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int smoothIndex;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float smoothedMovement;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 lastPosition;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC7320", Offset = "0xAC7320")]
		private float triggerLevel;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool awaitReset;

		[Token(Token = "0x1400006F")]
		public static event JerkAction OnJerk
		{
			[Token(Token = "0x60014FC")]
			[Address(RVA = "0xD521CC", Offset = "0xD521CC", VA = "0xD521CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACEDBC", Offset = "0xACEDBC")]
			add
			{
			}
			[Token(Token = "0x60014FD")]
			[Address(RVA = "0xD52280", Offset = "0xD52280", VA = "0xD52280")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACEDCC", Offset = "0xACEDCC")]
			remove
			{
			}
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0xD52334", Offset = "0xD52334", VA = "0xD52334")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0xD523B8", Offset = "0xD523B8", VA = "0xD523B8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0xD52558", Offset = "0xD52558", VA = "0xD52558")]
		private void DetectRodJerk()
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0xD523C8", Offset = "0xD523C8", VA = "0xD523C8")]
		private void DetectReset()
		{
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0xD526FC", Offset = "0xD526FC", VA = "0xD526FC")]
		private void Jerk(float force)
		{
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0xD529D0", Offset = "0xD529D0", VA = "0xD529D0")]
		public RodJerk()
		{
		}
	}
	[Token(Token = "0x200030E")]
	public class RodPickup : MonoBehaviour
	{
		[Token(Token = "0x2000567")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC13C0", Offset = "0xAC13C0")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4001F52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RodPickup <>4__this;

			[Token(Token = "0x4001F53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SelectEnterEventArgs args;

			[Token(Token = "0x6002143")]
			[Address(RVA = "0xD53740", Offset = "0xD53740", VA = "0xD53740")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6002144")]
			[Address(RVA = "0xD54558", Offset = "0xD54558", VA = "0xD54558")]
			internal void <OnAttach>b__0()
			{
			}
		}

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static RodPickup instance;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public XRRayInteractor rayInteractor;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private XRBaseInteractable interactable;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public XRBaseInteractable rodStandInteractable;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RodFlick rodFlick;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HoverEnterEventArgs allowRodPickupArgs;

		[Token(Token = "0x6001504")]
		[Address(RVA = "0xD52EC8", Offset = "0xD52EC8", VA = "0xD52EC8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0xD53010", Offset = "0xD53010", VA = "0xD53010")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0xD530F4", Offset = "0xD530F4", VA = "0xD530F4")]
		private void PickUpRod()
		{
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0xD53598", Offset = "0xD53598", VA = "0xD53598")]
		public void AllowRodPickup(HoverEnterEventArgs args)
		{
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0xD535A0", Offset = "0xD535A0", VA = "0xD535A0")]
		public void CancelAllowRodPickup()
		{
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0xD535AC", Offset = "0xD535AC", VA = "0xD535AC")]
		public void OnAttach(SelectEnterEventArgs args)
		{
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0xD53748", Offset = "0xD53748", VA = "0xD53748")]
		private void CompleteNormalPickupRod(SelectEnterEventArgs args)
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0xD53C08", Offset = "0xD53C08", VA = "0xD53C08")]
		public void AutoPickupRod(FpFish fish)
		{
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0xD53E64", Offset = "0xD53E64", VA = "0xD53E64")]
		private void CompleteAutoPickupRod()
		{
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0xD5421C", Offset = "0xD5421C", VA = "0xD5421C")]
		private void AutoArmCast()
		{
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0xD50A48", Offset = "0xD50A48", VA = "0xD50A48")]
		public static void CancelAutoArmCast()
		{
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0xD53B50", Offset = "0xD53B50", VA = "0xD53B50")]
		private Handside GetHandSide(SelectEnterEventArgs args)
		{
			return default(Handside);
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0xD5338C", Offset = "0xD5338C", VA = "0xD5338C")]
		private Handside GetHandSide(HoverEnterEventArgs args)
		{
			return default(Handside);
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0xD54320", Offset = "0xD54320", VA = "0xD54320")]
		private void EndRodPickupTimer()
		{
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0xD54390", Offset = "0xD54390", VA = "0xD54390")]
		public void ResetRayInteractor()
		{
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0xD5454C", Offset = "0xD5454C", VA = "0xD5454C")]
		public RodPickup()
		{
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0xD54554", Offset = "0xD54554", VA = "0xD54554")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACEDDC", Offset = "0xACEDDC")]
		private void <AutoPickupRod>b__13_0()
		{
		}
	}
	[Token(Token = "0x200030F")]
	public class RodReel : MonoBehaviour, XRIDefaultInputActions.IXRILeftHandActions, XRIDefaultInputActions.IXRIRightHandActions
	{
		[Token(Token = "0x2000568")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC13D0", Offset = "0xAC13D0")]
		private sealed class <ReelLightning>d__59 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RodReel <>4__this;

			[Token(Token = "0x17000369")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002148")]
				[Address(RVA = "0xD564E0", Offset = "0xD564E0", VA = "0xD564E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700036A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600214A")]
				[Address(RVA = "0xD56548", Offset = "0xD56548", VA = "0xD56548", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002145")]
			[Address(RVA = "0xD55828", Offset = "0xD55828", VA = "0xD55828")]
			[DebuggerHidden]
			public <ReelLightning>d__59(int <>1__state)
			{
			}

			[Token(Token = "0x6002146")]
			[Address(RVA = "0xD5631C", Offset = "0xD5631C", VA = "0xD5631C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002147")]
			[Address(RVA = "0xD56320", Offset = "0xD56320", VA = "0xD56320", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002149")]
			[Address(RVA = "0xD564E8", Offset = "0xD564E8", VA = "0xD564E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000569")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC13E0", Offset = "0xAC13E0")]
		private sealed class <HandFacesCrank>d__62 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RodReel <>4__this;

			[Token(Token = "0x1700036B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600214E")]
				[Address(RVA = "0xD562AC", Offset = "0xD562AC", VA = "0xD562AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700036C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002150")]
				[Address(RVA = "0xD56314", Offset = "0xD56314", VA = "0xD56314", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600214B")]
			[Address(RVA = "0xD55BE8", Offset = "0xD55BE8", VA = "0xD55BE8")]
			[DebuggerHidden]
			public <HandFacesCrank>d__62(int <>1__state)
			{
			}

			[Token(Token = "0x600214C")]
			[Address(RVA = "0xD56148", Offset = "0xD56148", VA = "0xD56148", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600214D")]
			[Address(RVA = "0xD5614C", Offset = "0xD5614C", VA = "0xD5614C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600214F")]
			[Address(RVA = "0xD562B4", Offset = "0xD562B4", VA = "0xD562B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static RodReel instance;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject reelCrank;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform handPosition;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ReelSimulator reelSimulator;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly float maxVelo;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float reelMaxVelo;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject AutoReelTag;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool debug;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Collider rodStandCollider;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform reel;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC7340", Offset = "0xAC7340")]
		public LightningBoltScript reelLightningScr;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject reelLightning;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform lightningPointA;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform lightningPointB;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject reelPowerInputL;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject reelPowerInputR;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform powerInputPointL;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform powerInputPointR;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float maxLineLength;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public bool isReeling;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float lastXRot;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private Handside reelSide;

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float crankVelo;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float maxCrankVelo;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Transform reelingHandParent;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Transform reelingHand;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private GameObject reelingHandVfxStart;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public GameObject reelsideVfxStart;

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Transform powerInput;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private GameObject powerModel;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float allowedHandReelDistance;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private bool handWentOutOfRange;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
		private bool lastIsReeling;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float lastPingTime;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float pingInterval;

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool reelInMgStarted;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private float reelingTimer;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float hapticsFishScale;

		[Token(Token = "0x170001DD")]
		public static float CrankVelo
		{
			[Token(Token = "0x6001515")]
			[Address(RVA = "0xD54578", Offset = "0xD54578", VA = "0xD54578")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001DE")]
		public float ReelingTimer
		{
			[Token(Token = "0x6001516")]
			[Address(RVA = "0xD545D4", Offset = "0xD545D4", VA = "0xD545D4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001DF")]
		public static float HapticsFishScale
		{
			[Token(Token = "0x6001517")]
			[Address(RVA = "0xD545DC", Offset = "0xD545DC", VA = "0xD545DC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0xD54638", Offset = "0xD54638", VA = "0xD54638")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0xD54728", Offset = "0xD54728", VA = "0xD54728")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0xD54864", Offset = "0xD54864", VA = "0xD54864")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0xD549A0", Offset = "0xD549A0", VA = "0xD549A0")]
		private void Update()
		{
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0xD54E60", Offset = "0xD54E60", VA = "0xD54E60")]
		private void BobberEnteredWater()
		{
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0xD54FC4", Offset = "0xD54FC4", VA = "0xD54FC4", Slot = "31")]
		public void OnSelect(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0xD55054", Offset = "0xD55054", VA = "0xD55054")]
		private void PlrSettingChanged(PlayerSetting setting)
		{
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0xD54FC8", Offset = "0xD54FC8", VA = "0xD54FC8")]
		private void HandleGrab(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0xD551B4", Offset = "0xD551B4", VA = "0xD551B4")]
		private void GrabCrank(Handside side)
		{
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0xD555F0", Offset = "0xD555F0", VA = "0xD555F0")]
		public void ForceReleaseCrank()
		{
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0xD55378", Offset = "0xD55378", VA = "0xD55378")]
		private void ReleaseCrank(Handside side)
		{
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0xD55408", Offset = "0xD55408", VA = "0xD55408")]
		private void SetSide(Handside side)
		{
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0xD556CC", Offset = "0xD556CC", VA = "0xD556CC")]
		private bool CheckHandReelDistance()
		{
			return default(bool);
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0xD5552C", Offset = "0xD5552C", VA = "0xD5552C")]
		private void StartReelLightning()
		{
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0xD50D6C", Offset = "0xD50D6C", VA = "0xD50D6C")]
		public void StopReelLightning()
		{
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0xD557AC", Offset = "0xD557AC", VA = "0xD557AC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACEDEC", Offset = "0xACEDEC")]
		private IEnumerator ReelLightning()
		{
			return null;
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0xD55854", Offset = "0xD55854", VA = "0xD55854")]
		private void AttachHandToCrank(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0xD55AB0", Offset = "0xD55AB0", VA = "0xD55AB0")]
		private void DetachHandFromCrank()
		{
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0xD55A34", Offset = "0xD55A34", VA = "0xD55A34")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACEE50", Offset = "0xACEE50")]
		private IEnumerator HandFacesCrank()
		{
			return null;
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0xD55C14", Offset = "0xD55C14", VA = "0xD55C14")]
		private bool isTickReeling()
		{
			return default(bool);
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0xD55CE4", Offset = "0xD55CE4", VA = "0xD55CE4")]
		public void UpdateTension(float OutputVel)
		{
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0xD54E64", Offset = "0xD54E64", VA = "0xD54E64")]
		public void SetFishScaleMult()
		{
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0xD55DF8", Offset = "0xD55DF8", VA = "0xD55DF8")]
		private void PerformReel()
		{
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0xD54D50", Offset = "0xD54D50", VA = "0xD54D50")]
		public void ResistHaptic()
		{
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0xD53444", Offset = "0xD53444", VA = "0xD53444")]
		public void SetReelModelSide()
		{
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0xD56068", Offset = "0xD56068", VA = "0xD56068")]
		public bool CheckIsReelingValueChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0xD55130", Offset = "0xD55130", VA = "0xD55130")]
		public Handside GetReelSide(InputAction.CallbackContext context)
		{
			return default(Handside);
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0xD56088", Offset = "0xD56088", VA = "0xD56088")]
		private void EventHub_OnReelInMinigameStarted()
		{
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0xD56098", Offset = "0xD56098", VA = "0xD56098")]
		private void EventHub_OnFishCaught(FpFish fish, bool isCheating = false)
		{
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0xD560A0", Offset = "0xD560A0", VA = "0xD560A0", Slot = "43")]
		public void OnReset(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0xD560A4", Offset = "0xD560A4", VA = "0xD560A4", Slot = "32")]
		public void OnActivate(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0xD560A8", Offset = "0xD560A8", VA = "0xD560A8", Slot = "34")]
		public void OnHapticDevice(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0xD560AC", Offset = "0xD560AC", VA = "0xD560AC", Slot = "40")]
		public void OnMove(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0xD560B0", Offset = "0xD560B0", VA = "0xD560B0", Slot = "29")]
		public void OnPosition(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0xD560B4", Offset = "0xD560B4", VA = "0xD560B4", Slot = "41")]
		public void OnRotateAnchor(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0xD560B8", Offset = "0xD560B8", VA = "0xD560B8", Slot = "30")]
		public void OnRotation(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0xD560BC", Offset = "0xD560BC", VA = "0xD560BC", Slot = "36")]
		public void OnTeleportModeActivate(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0xD560C0", Offset = "0xD560C0", VA = "0xD560C0", Slot = "37")]
		public void OnTeleportModeCancel(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0xD560C4", Offset = "0xD560C4", VA = "0xD560C4", Slot = "35")]
		public void OnTeleportSelect(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0xD560C8", Offset = "0xD560C8", VA = "0xD560C8", Slot = "42")]
		public void OnTranslateAnchor(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0xD560CC", Offset = "0xD560CC", VA = "0xD560CC", Slot = "38")]
		public void OnTurn(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0xD560D0", Offset = "0xD560D0", VA = "0xD560D0", Slot = "33")]
		public void OnUIPress(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0xD560D4", Offset = "0xD560D4", VA = "0xD560D4", Slot = "45")]
		public void OnAutoReel(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0xD560D8", Offset = "0xD560D8", VA = "0xD560D8", Slot = "49")]
		public void OnMenu(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0xD560DC", Offset = "0xD560DC", VA = "0xD560DC", Slot = "46")]
		public void OnBoost(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0xD560E0", Offset = "0xD560E0", VA = "0xD560E0", Slot = "47")]
		public void OnGrabHandle(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0xD560E4", Offset = "0xD560E4", VA = "0xD560E4", Slot = "48")]
		public void OnEditorPause(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0xD560E8", Offset = "0xD560E8", VA = "0xD560E8", Slot = "50")]
		public void OnPickup(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0xD560EC", Offset = "0xD560EC", VA = "0xD560EC", Slot = "44")]
		public void OnSwitchRod(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0xD560F0", Offset = "0xD560F0", VA = "0xD560F0", Slot = "51")]
		public void OnDialogAdvance(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0xD560F4", Offset = "0xD560F4", VA = "0xD560F4")]
		public void OnAnimateRightHand(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0xD560F8", Offset = "0xD560F8", VA = "0xD560F8")]
		public void OnAnimateLeftHand(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0xD560FC", Offset = "0xD560FC", VA = "0xD560FC", Slot = "26")]
		public void OnAnimateIndexLeft(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0xD56100", Offset = "0xD56100", VA = "0xD56100", Slot = "52")]
		public void OnAnimateIndexRight(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0xD56104", Offset = "0xD56104", VA = "0xD56104", Slot = "53")]
		public void OnAnimateFingersRight(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0xD56108", Offset = "0xD56108", VA = "0xD56108", Slot = "54")]
		public void OnAnimateThumbRight(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0xD5610C", Offset = "0xD5610C", VA = "0xD5610C", Slot = "27")]
		public void OnAnimateFingersLeft(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0xD56110", Offset = "0xD56110", VA = "0xD56110", Slot = "28")]
		public void OnAnimateThumbLeft(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0xD56114", Offset = "0xD56114", VA = "0xD56114", Slot = "39")]
		public void OnThumbUp(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0xD56118", Offset = "0xD56118", VA = "0xD56118")]
		public RodReel()
		{
		}
	}
	[Token(Token = "0x2000310")]
	public class RodStand : MonoBehaviour
	{
		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static RodStand instance;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform rod;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 rodPosInStand;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 rodRotInStand;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform rodOriginalParent;

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public XRBaseInteractable interactable;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public XRBaseInteractable rodInteractable;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public RodFlick rodFlick;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool isInStand;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject socketRodModel;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool rodHover;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool wasPickingUpRod;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SetRodStandHighlight rodStandHighlight;

		[Token(Token = "0x6001554")]
		[Address(RVA = "0xD56AEC", Offset = "0xD56AEC", VA = "0xD56AEC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0xD56B44", Offset = "0xD56B44", VA = "0xD56B44")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0xD56C08", Offset = "0xD56C08", VA = "0xD56C08")]
		public void OnSelect(SelectEnterEventArgs args)
		{
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0xD50858", Offset = "0xD50858", VA = "0xD50858")]
		public void ReturnRodToStand(bool allowInteraction = true)
		{
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0xD56C0C", Offset = "0xD56C0C", VA = "0xD56C0C")]
		private void SetRodInteractable(bool state)
		{
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0xD56C60", Offset = "0xD56C60", VA = "0xD56C60")]
		public void AllowPickupRod()
		{
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0xD54214", Offset = "0xD54214", VA = "0xD54214")]
		public void DisallowPickupRod()
		{
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0xD56C68", Offset = "0xD56C68", VA = "0xD56C68")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0xD56D08", Offset = "0xD56D08", VA = "0xD56D08")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0xD56D90", Offset = "0xD56D90", VA = "0xD56D90")]
		public RodStand()
		{
		}
	}
	[Token(Token = "0x2000311")]
	public class SceneLoadButton : MonoBehaviour
	{
		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int sceneNum;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string sceneName;

		[Token(Token = "0x600155E")]
		[Address(RVA = "0xD5840C", Offset = "0xD5840C", VA = "0xD5840C")]
		public void OnClick()
		{
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0xD58570", Offset = "0xD58570", VA = "0xD58570")]
		public SceneLoadButton()
		{
		}
	}
	[Token(Token = "0x2000312")]
	[ExecuteInEditMode]
	public class SceneLoader : MonoBehaviour
	{
		[Token(Token = "0x200056A")]
		public delegate void HideHandsEvent();

		[Token(Token = "0x200056B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC13F0", Offset = "0xAC13F0")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x4001F5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int sceneNum;

			[Token(Token = "0x6002155")]
			[Address(RVA = "0xD5D258", Offset = "0xD5D258", VA = "0xD5D258")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x6002156")]
			[Address(RVA = "0xD5D69C", Offset = "0xD5D69C", VA = "0xD5D69C")]
			internal void <loadSceneNormal>b__0()
			{
			}
		}

		[Token(Token = "0x200056C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1400", Offset = "0xAC1400")]
		private sealed class <LoadSceneAsync>d__35 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneLoader <>4__this;

			[Token(Token = "0x4001F5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int sceneNum;

			[Token(Token = "0x1700036D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600215A")]
				[Address(RVA = "0xD5D9B8", Offset = "0xD5D9B8", VA = "0xD5D9B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700036E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600215C")]
				[Address(RVA = "0xD5DA20", Offset = "0xD5DA20", VA = "0xD5DA20", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002157")]
			[Address(RVA = "0xD5D260", Offset = "0xD5D260", VA = "0xD5D260")]
			[DebuggerHidden]
			public <LoadSceneAsync>d__35(int <>1__state)
			{
			}

			[Token(Token = "0x6002158")]
			[Address(RVA = "0xD5D7EC", Offset = "0xD5D7EC", VA = "0xD5D7EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002159")]
			[Address(RVA = "0xD5D7F0", Offset = "0xD5D7F0", VA = "0xD5D7F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600215B")]
			[Address(RVA = "0xD5D9C0", Offset = "0xD5D9C0", VA = "0xD5D9C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200056D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1410", Offset = "0xAC1410")]
		private sealed class <>c__DisplayClass36_0
		{
			[Token(Token = "0x4001F5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SceneLoader <>4__this;

			[Token(Token = "0x4001F60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool isNewGame;

			[Token(Token = "0x600215D")]
			[Address(RVA = "0xD5D708", Offset = "0xD5D708", VA = "0xD5D708")]
			public <>c__DisplayClass36_0()
			{
			}

			[Token(Token = "0x600215E")]
			[Address(RVA = "0xD5D710", Offset = "0xD5D710", VA = "0xD5D710")]
			internal void <ShowLoadingScreen>b__0()
			{
			}

			[Token(Token = "0x600215F")]
			[Address(RVA = "0xD5D7C4", Offset = "0xD5D7C4", VA = "0xD5D7C4")]
			internal bool <ShowLoadingScreen>b__1()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200056E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1420", Offset = "0xAC1420")]
		private sealed class <ShowLoadingScreen>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneLoader <>4__this;

			[Token(Token = "0x4001F64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isNewGame;

			[Token(Token = "0x1700036F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002163")]
				[Address(RVA = "0xD5E298", Offset = "0xD5E298", VA = "0xD5E298", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000370")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002165")]
				[Address(RVA = "0xD5E300", Offset = "0xD5E300", VA = "0xD5E300", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002160")]
			[Address(RVA = "0xD5D31C", Offset = "0xD5D31C", VA = "0xD5D31C")]
			[DebuggerHidden]
			public <ShowLoadingScreen>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x6002161")]
			[Address(RVA = "0xD5DCDC", Offset = "0xD5DCDC", VA = "0xD5DCDC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002162")]
			[Address(RVA = "0xD5DCE0", Offset = "0xD5DCE0", VA = "0xD5DCE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002164")]
			[Address(RVA = "0xD5E2A0", Offset = "0xD5E2A0", VA = "0xD5E2A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200056F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1430", Offset = "0xAC1430")]
		private sealed class <PerformAsyncLoadingScene>d__38 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneLoader <>4__this;

			[Token(Token = "0x17000371")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002169")]
				[Address(RVA = "0xD5DABC", Offset = "0xD5DABC", VA = "0xD5DABC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000372")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600216B")]
				[Address(RVA = "0xD5DB24", Offset = "0xD5DB24", VA = "0xD5DB24", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002166")]
			[Address(RVA = "0xD5D3F4", Offset = "0xD5D3F4", VA = "0xD5D3F4")]
			[DebuggerHidden]
			public <PerformAsyncLoadingScene>d__38(int <>1__state)
			{
			}

			[Token(Token = "0x6002167")]
			[Address(RVA = "0xD5DA28", Offset = "0xD5DA28", VA = "0xD5DA28", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002168")]
			[Address(RVA = "0xD5DA2C", Offset = "0xD5DA2C", VA = "0xD5DA2C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600216A")]
			[Address(RVA = "0xD5DAC4", Offset = "0xD5DAC4", VA = "0xD5DAC4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000570")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1440", Offset = "0xAC1440")]
		private sealed class <PerformHoldingSkip>d__41 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneLoader <>4__this;

			[Token(Token = "0x4001F6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <counter>5__2;

			[Token(Token = "0x17000373")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600216F")]
				[Address(RVA = "0xD5DC6C", Offset = "0xD5DC6C", VA = "0xD5DC6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000374")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002171")]
				[Address(RVA = "0xD5DCD4", Offset = "0xD5DCD4", VA = "0xD5DCD4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600216C")]
			[Address(RVA = "0xD5D538", Offset = "0xD5D538", VA = "0xD5D538")]
			[DebuggerHidden]
			public <PerformHoldingSkip>d__41(int <>1__state)
			{
			}

			[Token(Token = "0x600216D")]
			[Address(RVA = "0xD5DB2C", Offset = "0xD5DB2C", VA = "0xD5DB2C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600216E")]
			[Address(RVA = "0xD5DB30", Offset = "0xD5DB30", VA = "0xD5DB30", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002170")]
			[Address(RVA = "0xD5DC74", Offset = "0xD5DC74", VA = "0xD5DC74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isMainMenu;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public List<string> Scene_Name;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private XRRayInteractor leftRay;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private XRRayInteractor rightRay;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SceneLoader instance;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject loadingScreen;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SpriteRenderer loadingScreenImage;

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform xrRig;

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Material loadingScreenSkybox;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float loadingScreenRenderScale;

		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float HoldTimer;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Image HoldingBar;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public RawImage StoryVideoImage;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool sceneIsLoading;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool sceneIsFadingOut;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		private bool isNewGame;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		public bool introIsPlaying;

		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public VideoPlayer player;

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private IEnumerator holdingCoroutine;

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int cache_sceneNum;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private AsyncOperation asyncLoad;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public VideoClip[] introVideos;

		[Token(Token = "0x14000070")]
		public static event HideHandsEvent HideHands
		{
			[Token(Token = "0x6001560")]
			[Address(RVA = "0xD5CB38", Offset = "0xD5CB38", VA = "0xD5CB38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACEEB4", Offset = "0xACEEB4")]
			add
			{
			}
			[Token(Token = "0x6001561")]
			[Address(RVA = "0xD5CBF0", Offset = "0xD5CBF0", VA = "0xD5CBF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACEEC4", Offset = "0xACEEC4")]
			remove
			{
			}
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0xD5CCA8", Offset = "0xD5CCA8", VA = "0xD5CCA8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0xD5CD00", Offset = "0xD5CD00", VA = "0xD5CD00")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0xD5CDE0", Offset = "0xD5CDE0", VA = "0xD5CDE0")]
		public void Player_prepareCompleted(VideoPlayer source)
		{
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0xD5CE6C", Offset = "0xD5CE6C", VA = "0xD5CE6C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0xD58450", Offset = "0xD58450", VA = "0xD58450")]
		public static void Load(int sceneNum, bool newGame = false)
		{
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0xD58510", Offset = "0xD58510", VA = "0xD58510")]
		public static void Load(string sceneName)
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0xD5CF88", Offset = "0xD5CF88", VA = "0xD5CF88")]
		public void LoadScene(int sceneNum)
		{
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0xD5CFE0", Offset = "0xD5CFE0", VA = "0xD5CFE0")]
		public void LoadScene(string sceneName)
		{
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0xD5D048", Offset = "0xD5D048", VA = "0xD5D048")]
		private void loadSceneNormal(int sceneNum)
		{
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0xD5D1CC", Offset = "0xD5D1CC", VA = "0xD5D1CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACEED4", Offset = "0xACEED4")]
		private IEnumerator LoadSceneAsync(int sceneNum)
		{
			return null;
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0xD5D28C", Offset = "0xD5D28C", VA = "0xD5D28C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACEF38", Offset = "0xACEF38")]
		private IEnumerator ShowLoadingScreen(bool isNewGame)
		{
			return null;
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0xD5D348", Offset = "0xD5D348", VA = "0xD5D348")]
		private void IntroVideoFinished(VideoPlayer source)
		{
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0xD5D378", Offset = "0xD5D378", VA = "0xD5D378")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACEF9C", Offset = "0xACEF9C")]
		private IEnumerator PerformAsyncLoadingScene()
		{
			return null;
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0xD5D420", Offset = "0xD5D420", VA = "0xD5D420")]
		public void TrySkipIntroVideo()
		{
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0xD5D4D8", Offset = "0xD5D4D8", VA = "0xD5D4D8")]
		public void ResetHoldingSkip()
		{
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0xD5D45C", Offset = "0xD5D45C", VA = "0xD5D45C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACF000", Offset = "0xACF000")]
		private IEnumerator PerformHoldingSkip()
		{
			return null;
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0xD5D564", Offset = "0xD5D564", VA = "0xD5D564")]
		private void OnChangeLanguage(ToggleLanguage language)
		{
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0xD5D5DC", Offset = "0xD5D5DC", VA = "0xD5D5DC")]
		public void SetIntroVideoLanguage(ToggleLanguage language)
		{
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0xD5D654", Offset = "0xD5D654", VA = "0xD5D654")]
		private void OnApplicationFocus(bool isFocused)
		{
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0xD5D688", Offset = "0xD5D688", VA = "0xD5D688")]
		public SceneLoader()
		{
		}
	}
	[Token(Token = "0x2000313")]
	public class ShowVersionNumber : MonoBehaviour
	{
		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI versionText;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI buildTargetText;

		[Token(Token = "0x6001576")]
		[Address(RVA = "0xD6374C", Offset = "0xD6374C", VA = "0xD6374C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0xD6378C", Offset = "0xD6378C", VA = "0xD6378C")]
		public ShowVersionNumber()
		{
		}
	}
	[Token(Token = "0x2000314")]
	public class SwapRodSet : MonoBehaviour
	{
		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Material originalMaterial;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Material recolorMaterial;

		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject[] objectsToRecolor;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject lure1;

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject lure2;

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int rodSet;

		[Token(Token = "0x6001578")]
		[Address(RVA = "0xD1490C", Offset = "0xD1490C", VA = "0xD1490C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0xD14910", Offset = "0xD14910", VA = "0xD14910")]
		public float GetRodMaxVelo()
		{
			return default(float);
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0xD14934", Offset = "0xD14934", VA = "0xD14934")]
		public float GetReelMaxVelo()
		{
			return default(float);
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0xD14960", Offset = "0xD14960", VA = "0xD14960")]
		public void SetRod(int num)
		{
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0xD14970", Offset = "0xD14970", VA = "0xD14970")]
		public SwapRodSet()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000315")]
	public class TestObject
	{
		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string FishName;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int TestInt;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool TestBool;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float TestFloat;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] TestStringArray;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int[] TestIntArray;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool[] TestBoolArray;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float[] TestFloatArray;

		[Token(Token = "0x600157D")]
		[Address(RVA = "0xD16A40", Offset = "0xD16A40", VA = "0xD16A40")]
		public TestObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000316")]
	public class TestSheetRoot
	{
		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TestObject[] testObjects;

		[Token(Token = "0x600157E")]
		[Address(RVA = "0xD16A48", Offset = "0xD16A48", VA = "0xD16A48")]
		public TestSheetRoot()
		{
		}
	}
	[Token(Token = "0x2000317")]
	public class UI_TutorialController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000571")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1450", Offset = "0xAC1450")]
		private sealed class <>c
		{
			[Token(Token = "0x4001F6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001F6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static TweenCallback <>9__13_0;

			[Token(Token = "0x6002173")]
			[Address(RVA = "0xE18BC8", Offset = "0xE18BC8", VA = "0xE18BC8")]
			public <>c()
			{
			}

			[Token(Token = "0x6002174")]
			[Address(RVA = "0xE18BD0", Offset = "0xE18BD0", VA = "0xE18BD0")]
			internal void <HideAll>b__13_0()
			{
			}
		}

		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CanvasGroup canvasGroup;

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float fadeInTime;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float fadeOutTime;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC7448", Offset = "0xAC7448")]
		public Animator[] Animators;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UI_TutorialController instance;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<string, int> animDict;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Tween fadeTween;

		[Token(Token = "0x170001E0")]
		public static UI_TutorialController Instance
		{
			[Token(Token = "0x600157F")]
			[Address(RVA = "0xE1831C", Offset = "0xE1831C", VA = "0xE1831C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0xE1836C", Offset = "0xE1836C", VA = "0xE1836C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0xE18538", Offset = "0xE18538", VA = "0xE18538")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0xE185AC", Offset = "0xE185AC", VA = "0xE185AC")]
		private void EventHub_OnCutsceneAnimationResumed()
		{
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0xE18694", Offset = "0xE18694", VA = "0xE18694")]
		public static void Show(Animator anim, [Optional] Transform target)
		{
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0xE18988", Offset = "0xE18988", VA = "0xE18988")]
		public static void HideAll()
		{
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0xE185B0", Offset = "0xE185B0", VA = "0xE185B0")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0xE18AD8", Offset = "0xE18AD8", VA = "0xE18AD8")]
		public UI_TutorialController()
		{
		}
	}
	[Token(Token = "0x2000318")]
	public class TutorialToggle : MonoBehaviour
	{
		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Toggle tog;

		[Token(Token = "0x6001587")]
		[Address(RVA = "0xD199D8", Offset = "0xD199D8", VA = "0xD199D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0xD19A7C", Offset = "0xD19A7C", VA = "0xD19A7C")]
		public void OnToggleChange()
		{
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0xD19B1C", Offset = "0xD19B1C", VA = "0xD19B1C")]
		public TutorialToggle()
		{
		}
	}
	[Token(Token = "0x2000319")]
	public class UnderwaterFish : MonoBehaviour
	{
		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Rigidbody rb;

		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float nextMoveTime;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform target;

		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject[] models;

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool canLookAt;

		[Token(Token = "0x600158A")]
		[Address(RVA = "0xE19128", Offset = "0xE19128", VA = "0xE19128")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0xE191BC", Offset = "0xE191BC", VA = "0xE191BC")]
		private void Start()
		{
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0xE1924C", Offset = "0xE1924C", VA = "0xE1924C")]
		public void UpdateFish()
		{
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0xE193F4", Offset = "0xE193F4", VA = "0xE193F4")]
		private void FaceTarget()
		{
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0xE19204", Offset = "0xE19204", VA = "0xE19204")]
		private void GetNextMoveTime()
		{
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0xE1930C", Offset = "0xE1930C", VA = "0xE1930C")]
		private void Move()
		{
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0xE19508", Offset = "0xE19508", VA = "0xE19508")]
		public UnderwaterFish()
		{
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0xE19518", Offset = "0xE19518", VA = "0xE19518")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF064", Offset = "0xACF064")]
		private void <FaceTarget>b__8_0()
		{
		}
	}
	[Token(Token = "0x200031A")]
	public class UnderwaterFishController : MonoBehaviour
	{
		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform fishPrefab;

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int numFish;

		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnderwaterFish[] fish;

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int fishIndex;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject jellyPrefab;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private int numJellies;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform pool;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SpawnPool fishSpawnPool;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnderwaterFishTarget target;

		[Token(Token = "0x6001592")]
		[Address(RVA = "0xE19524", Offset = "0xE19524", VA = "0xE19524")]
		private void Start()
		{
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0xE1968C", Offset = "0xE1968C", VA = "0xE1968C")]
		private void SpawnFish()
		{
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0xE1991C", Offset = "0xE1991C", VA = "0xE1991C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0xE199B0", Offset = "0xE199B0", VA = "0xE199B0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0xE19A9C", Offset = "0xE19A9C", VA = "0xE19A9C")]
		private void LocationChanged(LocationSO locationSO, bool comingFromShip)
		{
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0xE19B20", Offset = "0xE19B20", VA = "0xE19B20")]
		private void Update()
		{
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0xE19B8C", Offset = "0xE19B8C", VA = "0xE19B8C")]
		private void WaterLevelChanged()
		{
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0xE195C8", Offset = "0xE195C8", VA = "0xE195C8")]
		private void RemoveAllFish()
		{
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0xE19C50", Offset = "0xE19C50", VA = "0xE19C50")]
		public UnderwaterFishController()
		{
		}
	}
	[Token(Token = "0x200031B")]
	public class UnderwaterFishTarget : MonoBehaviour
	{
		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform pool;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 xRange;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 yRange;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2 zRange;

		[Token(Token = "0x600159B")]
		[Address(RVA = "0xE19C58", Offset = "0xE19C58", VA = "0xE19C58")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0xE19E14", Offset = "0xE19E14", VA = "0xE19E14")]
		private void Move()
		{
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0xE19C7C", Offset = "0xE19C7C", VA = "0xE19C7C")]
		public void SetBounds()
		{
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0xE19F50", Offset = "0xE19F50", VA = "0xE19F50")]
		public UnderwaterFishTarget()
		{
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0xE19F58", Offset = "0xE19F58", VA = "0xE19F58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF074", Offset = "0xACF074")]
		private void <Move>b__5_0()
		{
		}
	}
	[Token(Token = "0x200031C")]
	public enum SfxWorld
	{
		[Token(Token = "0x40016FF")]
		BarrelExplode,
		[Token(Token = "0x4001700")]
		FishFail,
		[Token(Token = "0x4001701")]
		FishHooked,
		[Token(Token = "0x4001702")]
		FishInHand,
		[Token(Token = "0x4001703")]
		TakeFish,
		[Token(Token = "0x4001704")]
		Crunch,
		[Token(Token = "0x4001705")]
		FishDanger,
		[Token(Token = "0x4001706")]
		RedZoneAlertLoop,
		[Token(Token = "0x4001707")]
		RedZoneAlertStart,
		[Token(Token = "0x4001708")]
		FishLost,
		[Token(Token = "0x4001709")]
		Success,
		[Token(Token = "0x400170A")]
		Success02,
		[Token(Token = "0x400170B")]
		Gasp,
		[Token(Token = "0x400170C")]
		Splash,
		[Token(Token = "0x400170D")]
		ArrowSolved,
		[Token(Token = "0x400170E")]
		ArrowAppears,
		[Token(Token = "0x400170F")]
		ArrowFail,
		[Token(Token = "0x4001710")]
		PatternSolved,
		[Token(Token = "0x4001711")]
		BoostReady,
		[Token(Token = "0x4001712")]
		BoostDischarge,
		[Token(Token = "0x4001713")]
		ElectricZap,
		[Token(Token = "0x4001714")]
		LineSnap,
		[Token(Token = "0x4001715")]
		PredatorHit,
		[Token(Token = "0x4001716")]
		BossPredatorHit,
		[Token(Token = "0x4001717")]
		SporePodSplash,
		[Token(Token = "0x4001718")]
		SporePodHiss,
		[Token(Token = "0x4001719")]
		LeanDirectionChange,
		[Token(Token = "0x400171A")]
		Error01,
		[Token(Token = "0x400171B")]
		FishHandImpact,
		[Token(Token = "0x400171C")]
		FishEscape,
		[Token(Token = "0x400171D")]
		ResourceCoin,
		[Token(Token = "0x400171E")]
		Swoosh,
		[Token(Token = "0x400171F")]
		ReleaseWhoosh,
		[Token(Token = "0x4001720")]
		BoosPointZap,
		[Token(Token = "0x4001721")]
		TeleportBoostStart,
		[Token(Token = "0x4001722")]
		TeleportBoostArrive
	}
	[Token(Token = "0x200031D")]
	public enum SfxAmbience
	{
		[Token(Token = "0x4001724")]
		Water1,
		[Token(Token = "0x4001725")]
		ShipDrone1
	}
	[Token(Token = "0x200031E")]
	public class WorldAudio : MonoBehaviour
	{
		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static WorldAudio instance;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSource worldAudio;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource worldAudioNonSpatialized;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioSource[] loopingAmbience;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioSource music;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioSource resourceCoins;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC74E0", Offset = "0xAC74E0")]
		public AudioClip barrelExplode;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip fishFail;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioClip fishHooked;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip fishInHand;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AudioClip takeFish;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioClip crunch;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AudioClip fishDanger;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AudioClip redZoneAlertLoop;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AudioClip redZoneAlertStart;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public AudioClip fishLost;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AudioClip lineSnap;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public AudioClip fishEscape;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public AudioClip splash;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public AudioClip arrowSolve;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public AudioClip arrowFail;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public AudioClip patternSolve;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public AudioClip boostReady;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public AudioClip electricZap;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public AudioClip boostDischarge;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public AudioClip predatorHit;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public AudioClip bossPredatorHit;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public AudioClip sporePodSplash;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public AudioClip sporePodHiss;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public AudioClip leanDirectionChange;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public AudioClip success;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public AudioClip error01;

		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public AudioClip success02;

		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public AudioClip fishHandImpact;

		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public AudioClip swoosh;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public AudioClip teleportBoostStart;

		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public AudioClip teleportBoostArrive;

		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC7518", Offset = "0xAC7518")]
		public AudioClip[] applause;

		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public AudioClip[] gasp;

		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public AudioClip[] coins;

		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public AudioClip[] releaseWhoosh;

		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public AudioClip[] boostPointZaps;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC7550", Offset = "0xAC7550")]
		public AudioClip water1;

		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public AudioClip shipDrone1;

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC7588", Offset = "0xAC7588")]
		public HapticsClipSO halfSecondFade;

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private Tween musicFadeTween;

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0xE1DC98", Offset = "0xE1DC98", VA = "0xE1DC98")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0xE16F3C", Offset = "0xE16F3C", VA = "0xE16F3C")]
		public static void Play(SfxWorld sfx, float pitch = 1f)
		{
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0xE1DCF0", Offset = "0xE1DCF0", VA = "0xE1DCF0")]
		public static void PlayAt(SfxWorld sfx, Vector3 position)
		{
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0xE1E0B8", Offset = "0xE1E0B8", VA = "0xE1E0B8")]
		public static void PlayAmbience(SfxAmbience sfx, float volume, Vector3 position)
		{
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0xE1E298", Offset = "0xE1E298", VA = "0xE1E298")]
		private AudioSource GetLoopingAmbienceSource()
		{
			return null;
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0xE1E3C4", Offset = "0xE1E3C4", VA = "0xE1E3C4")]
		public WorldAudio()
		{
		}
	}
	[Token(Token = "0x200031F")]
	public class SnapTurnProvider : ActionBasedSnapTurnProvider
	{
		[Token(Token = "0x2000572")]
		public delegate void StickTurnEvent(float turnAmount, Handside handside);

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool EnableXRRigRotate;

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		public bool EnableSwitchLure;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float m_CurrentTurnAmount_;

		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float m_TimeStarted_;

		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Handside m_HandSide;

		[Token(Token = "0x14000071")]
		public static event StickTurnEvent OnStickTurn
		{
			[Token(Token = "0x60015A6")]
			[Address(RVA = "0xD11268", Offset = "0xD11268", VA = "0xD11268")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF084", Offset = "0xACF084")]
			add
			{
			}
			[Token(Token = "0x60015A7")]
			[Address(RVA = "0xD1131C", Offset = "0xD1131C", VA = "0xD1131C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF094", Offset = "0xACF094")]
			remove
			{
			}
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0xD113D0", Offset = "0xD113D0", VA = "0xD113D0")]
		private new void Update()
		{
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0xD11608", Offset = "0xD11608", VA = "0xD11608")]
		private new void StartTurn(float amount)
		{
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0xD118D4", Offset = "0xD118D4", VA = "0xD118D4", Slot = "5")]
		protected override Vector2 ReadInput()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0xD11AA8", Offset = "0xD11AA8", VA = "0xD11AA8")]
		public SnapTurnProvider()
		{
		}
	}
	[Token(Token = "0x2000320")]
	public class QuestEntitlement : MonoBehaviour
	{
		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool checkEntitlement;

		[Token(Token = "0x400175B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool isEntitled;

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0x1FDAD18", Offset = "0x1FDAD18", VA = "0x1FDAD18")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0x1FDAEC0", Offset = "0x1FDAEC0", VA = "0x1FDAEC0")]
		private void EntitlementCallback(Message msg)
		{
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0x1FDAF74", Offset = "0x1FDAF74", VA = "0x1FDAF74")]
		public QuestEntitlement()
		{
		}
	}
	[Token(Token = "0x2000321")]
	public class ReelChanger : MonoBehaviour
	{
		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ReelChanger instance;

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] reels;

		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject UI;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject powerInputL;

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject powerInputR;

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0x1FDCAB0", Offset = "0x1FDCAB0", VA = "0x1FDCAB0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0x1FDCB08", Offset = "0x1FDCB08", VA = "0x1FDCB08")]
		public static void SetReel(string BCID)
		{
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0x1FDCB68", Offset = "0x1FDCB68", VA = "0x1FDCB68")]
		private void setReel(string BCID)
		{
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0x1FDCE04", Offset = "0x1FDCE04", VA = "0x1FDCE04")]
		private int GetReelIndex(string BCID)
		{
			return default(int);
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0x1FDCD94", Offset = "0x1FDCD94", VA = "0x1FDCD94")]
		private void DisableAll()
		{
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0x1FDD084", Offset = "0x1FDD084", VA = "0x1FDD084")]
		public ReelChanger()
		{
		}
	}
	[Token(Token = "0x2000322")]
	public class ReelSimulator : MonoBehaviour
	{
		[Token(Token = "0x2000573")]
		public enum rotateDirection
		{
			[Token(Token = "0x4001F6F")]
			clockwise = -1,
			[Token(Token = "0x4001F70")]
			anticlockwise = 1
		}

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool autoReel;

		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isStopReel;

		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool handReel;

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform grabTransform;

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_output;

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private rotateDirection reelDirection;

		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float angVelo;

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform ledCollarR;

		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform ledCollarL;

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Animator reelAnim;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float apparentReelSpeed;

		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float maxApparentReelSpeed;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isGrabbed;

		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 grabTrnsLastPos;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 handleStartRot;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float m_angVeloReplace;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static ReelSimulator instance;

		[Token(Token = "0x170001E1")]
		public static bool HandReel
		{
			[Token(Token = "0x60015B5")]
			[Address(RVA = "0x1FDDB40", Offset = "0x1FDDB40", VA = "0x1FDDB40")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015B6")]
			[Address(RVA = "0x1FDDB9C", Offset = "0x1FDDB9C", VA = "0x1FDDB9C")]
			set
			{
			}
		}

		[Token(Token = "0x170001E2")]
		public static float ApparentReelSpeed
		{
			[Token(Token = "0x60015B7")]
			[Address(RVA = "0x1FDDC18", Offset = "0x1FDDC18", VA = "0x1FDDC18")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001E3")]
		public float Output
		{
			[Token(Token = "0x60015B8")]
			[Address(RVA = "0x1FDDC74", Offset = "0x1FDDC74", VA = "0x1FDDC74")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001E4")]
		public bool IsGrabbed
		{
			[Token(Token = "0x60015BA")]
			[Address(RVA = "0x1FDDCD4", Offset = "0x1FDDCD4", VA = "0x1FDDCD4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015BB")]
			[Address(RVA = "0x1FDDCDC", Offset = "0x1FDDCDC", VA = "0x1FDDCDC")]
			set
			{
			}
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0x1FDDC7C", Offset = "0x1FDDC7C", VA = "0x1FDDC7C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x1FDDD1C", Offset = "0x1FDDD1C", VA = "0x1FDDD1C")]
		public void SetDirection()
		{
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0x1FDDD28", Offset = "0x1FDDD28", VA = "0x1FDDD28")]
		private void Update()
		{
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0x1FDE0E8", Offset = "0x1FDE0E8", VA = "0x1FDE0E8")]
		private void ReelRunOut()
		{
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0x1FDE4C0", Offset = "0x1FDE4C0", VA = "0x1FDE4C0")]
		public float CheckAngVelo()
		{
			return default(float);
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0x1FDE1D4", Offset = "0x1FDE1D4", VA = "0x1FDE1D4")]
		public void UpdateCrankPos(float angVelo)
		{
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0x1FDE600", Offset = "0x1FDE600", VA = "0x1FDE600")]
		public void ResetCrankPos()
		{
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0x1FDE2D8", Offset = "0x1FDE2D8", VA = "0x1FDE2D8")]
		public void SetReelAnimSpeed(float speed = 0f)
		{
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0x1FDE638", Offset = "0x1FDE638", VA = "0x1FDE638")]
		public void SetPistonHeight(float height)
		{
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0x1FDE6A4", Offset = "0x1FDE6A4", VA = "0x1FDE6A4")]
		public ReelSimulator()
		{
		}
	}
	[Token(Token = "0x2000323")]
	public class RepellentManager : MonoBehaviour
	{
		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SpawnPool pool;

		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<SporePod> pods;

		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform sporePod;

		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RepellentSkin skin;

		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int maxNumber;

		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int initialNumber;

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int numSpawnAtOnce;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float spawnRate;

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float lifetime;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float repellentEffectiveDuration;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool initialSpawn;

		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float startTime;

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static RepellentManager Instance;

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0x1FDE71C", Offset = "0x1FDE71C", VA = "0x1FDE71C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0x1FDE774", Offset = "0x1FDE774", VA = "0x1FDE774")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0x1FD8704", Offset = "0x1FD8704", VA = "0x1FD8704")]
		public void SystemInit()
		{
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0x1FD9E9C", Offset = "0x1FD9E9C", VA = "0x1FD9E9C")]
		public void SystemInit(RepellentSkin _skin, int _maxNumber, int _initialNumber, int _numSpawnAtOnce, float _spawnRate, float _lifeTime, float _systemActiveDur, float _systemInactiveDur)
		{
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0x1FDE8C0", Offset = "0x1FDE8C0", VA = "0x1FDE8C0")]
		private void SystemEnable()
		{
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0x1FD898C", Offset = "0x1FD898C", VA = "0x1FD898C")]
		public void SystemDisable()
		{
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0x1FDE77C", Offset = "0x1FDE77C", VA = "0x1FDE77C")]
		private void ClearAllPods()
		{
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0x1FDE95C", Offset = "0x1FDE95C", VA = "0x1FDE95C")]
		public void PrepPodsList()
		{
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0x1FDEA10", Offset = "0x1FDEA10", VA = "0x1FDEA10")]
		public void Spawn()
		{
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0x1FDEC18", Offset = "0x1FDEC18", VA = "0x1FDEC18")]
		public void RemovePod(SporePod pod)
		{
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0x1FDEC80", Offset = "0x1FDEC80", VA = "0x1FDEC80")]
		public RepellentManager()
		{
		}
	}
	[Token(Token = "0x2000324")]
	public class ResetDebugOptions : MonoBehaviour
	{
		[Token(Token = "0x60015D0")]
		[Address(RVA = "0x1FDEC88", Offset = "0x1FDEC88", VA = "0x1FDEC88")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0x1FDECF0", Offset = "0x1FDECF0", VA = "0x1FDECF0")]
		public ResetDebugOptions()
		{
		}
	}
	[Token(Token = "0x2000325")]
	public class ResetLureScale : MonoBehaviour
	{
		[Token(Token = "0x60015D2")]
		[Address(RVA = "0x1FDECF8", Offset = "0x1FDECF8", VA = "0x1FDECF8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0x1FDED60", Offset = "0x1FDED60", VA = "0x1FDED60")]
		public ResetLureScale()
		{
		}
	}
	[Token(Token = "0x2000326")]
	public class ReturnToMainMenu : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000574")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1460", Offset = "0xAC1460")]
		private sealed class <>c
		{
			[Token(Token = "0x4001F71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001F72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__0_0;

			[Token(Token = "0x600217A")]
			[Address(RVA = "0x1FDEF8C", Offset = "0x1FDEF8C", VA = "0x1FDEF8C")]
			public <>c()
			{
			}

			[Token(Token = "0x600217B")]
			[Address(RVA = "0x1FDEF94", Offset = "0x1FDEF94", VA = "0x1FDEF94")]
			internal void <OnClick>b__0_0()
			{
			}
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0x1FDEDC0", Offset = "0x1FDEDC0", VA = "0x1FDEDC0")]
		public void OnClick()
		{
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0x1FDEF1C", Offset = "0x1FDEF1C", VA = "0x1FDEF1C")]
		public ReturnToMainMenu()
		{
		}
	}
	[Token(Token = "0x2000327")]
	public class RodBoost : MonoBehaviour, IEventListener
	{
		[Token(Token = "0x2000575")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1470", Offset = "0xAC1470")]
		private sealed class <BoostVFX>d__42 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float boostDuration;

			[Token(Token = "0x4001F76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RodBoost <>4__this;

			[Token(Token = "0x4001F77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startTime>5__2;

			[Token(Token = "0x4001F78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <endTime>5__3;

			[Token(Token = "0x17000375")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600217F")]
				[Address(RVA = "0xD4FB7C", Offset = "0xD4FB7C", VA = "0xD4FB7C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000376")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002181")]
				[Address(RVA = "0xD4FBE4", Offset = "0xD4FBE4", VA = "0xD4FBE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600217C")]
			[Address(RVA = "0xD4F348", Offset = "0xD4F348", VA = "0xD4F348")]
			[DebuggerHidden]
			public <BoostVFX>d__42(int <>1__state)
			{
			}

			[Token(Token = "0x600217D")]
			[Address(RVA = "0xD4FAA0", Offset = "0xD4FAA0", VA = "0xD4FAA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600217E")]
			[Address(RVA = "0xD4FAA4", Offset = "0xD4FAA4", VA = "0xD4FAA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002180")]
			[Address(RVA = "0xD4FB84", Offset = "0xD4FB84", VA = "0xD4FB84", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RodSO rod;

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RodSO.BoostType boostType;

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RodBoostFX boostFX;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int boostLevel;

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool isBoosting;

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float boostDuration;

		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float fishStunnedDuration;

		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly float chargeBase;

		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float chargeOffset;

		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Tween cooldownTask;

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static float currentBoost;

		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static RodBoost instance;

		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isCheating;

		[Token(Token = "0x400178C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float boostModifier;

		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Material rodCrystalGlowMaterial;

		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float autosaveTimer;

		[Token(Token = "0x400178F")]
		private const float autosaveTimeInterval = 5f;

		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Gradient boostGradient;

		[Token(Token = "0x170001E5")]
		public static float MaxCharge
		{
			[Token(Token = "0x60015D6")]
			[Address(RVA = "0xD4D304", Offset = "0xD4D304", VA = "0xD4D304")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001E6")]
		public static float currentBoostNormalized
		{
			[Token(Token = "0x60015D7")]
			[Address(RVA = "0xD4D3C0", Offset = "0xD4D3C0", VA = "0xD4D3C0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001E7")]
		public bool IsCheating
		{
			[Token(Token = "0x60015D8")]
			[Address(RVA = "0xD4D468", Offset = "0xD4D468", VA = "0xD4D468")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015D9")]
			[Address(RVA = "0xD4D470", Offset = "0xD4D470", VA = "0xD4D470")]
			set
			{
			}
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0xD4D6BC", Offset = "0xD4D6BC", VA = "0xD4D6BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0xD4D92C", Offset = "0xD4D92C", VA = "0xD4D92C")]
		private void Start()
		{
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0xD4D9C8", Offset = "0xD4D9C8", VA = "0xD4D9C8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0xD4DB54", Offset = "0xD4DB54", VA = "0xD4DB54")]
		private void OnRodReset()
		{
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0xD4DBA8", Offset = "0xD4DBA8", VA = "0xD4DBA8")]
		public static void ResetBoost()
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0xD4DB58", Offset = "0xD4DB58", VA = "0xD4DB58")]
		private void Reset()
		{
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0xD4D554", Offset = "0xD4D554", VA = "0xD4D554")]
		private void setBoost(float energy = 0f)
		{
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0xD4DE78", Offset = "0xD4DE78", VA = "0xD4DE78")]
		public void SetBoostReady()
		{
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0xD4D9C4", Offset = "0xD4D9C4", VA = "0xD4D9C4")]
		private void EventHub_OnPlayerLevelUp(int level)
		{
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0xD4DEDC", Offset = "0xD4DEDC", VA = "0xD4DEDC")]
		private void EventHub_OnFishKept(FpFish fish)
		{
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0xD4E064", Offset = "0xD4E064", VA = "0xD4E064")]
		public static void AddEnergy(float val)
		{
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0xD4E0CC", Offset = "0xD4E0CC", VA = "0xD4E0CC")]
		private void EventHub_OnFishReleased(FpFish fish)
		{
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0xD4E27C", Offset = "0xD4E27C", VA = "0xD4E27C")]
		private void EventHub_OnPlayerXPGot(int xp)
		{
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0xD4E280", Offset = "0xD4E280", VA = "0xD4E280")]
		private void HandleBoost(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0xD4E718", Offset = "0xD4E718", VA = "0xD4E718")]
		private void OnRodEquip(RodSO _rod)
		{
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0xD4E540", Offset = "0xD4E540", VA = "0xD4E540")]
		public void DoBoost()
		{
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0xD4E92C", Offset = "0xD4E92C", VA = "0xD4E92C")]
		private void StaminaReduction(RodSO _rod)
		{
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0xD4F2BC", Offset = "0xD4F2BC", VA = "0xD4F2BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACF0A4", Offset = "0xACF0A4")]
		private IEnumerator BoostVFX(float boostDuration)
		{
			return null;
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0xD4DC00", Offset = "0xD4DC00", VA = "0xD4DC00")]
		private void StopBoosting()
		{
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0xD4EDA4", Offset = "0xD4EDA4", VA = "0xD4EDA4")]
		private void StartPowerReel()
		{
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0xD4DCC4", Offset = "0xD4DCC4", VA = "0xD4DCC4")]
		private void StopPowerReel()
		{
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0xD4EF94", Offset = "0xD4EF94", VA = "0xD4EF94")]
		private void StartStun()
		{
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0xD4F130", Offset = "0xD4F130", VA = "0xD4F130")]
		private void StartTeleport()
		{
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0xD4F670", Offset = "0xD4F670", VA = "0xD4F670", Slot = "4")]
		public void OnEvent(EventArgs args)
		{
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0xD4DD64", Offset = "0xD4DD64", VA = "0xD4DD64")]
		public void SetBoostLevelUI(float level)
		{
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0xD4FA80", Offset = "0xD4FA80", VA = "0xD4FA80")]
		public RodBoost()
		{
		}
	}
	[Token(Token = "0x2000328")]
	public class RodBoostFX : MonoBehaviour
	{
		[Token(Token = "0x2000576")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1480", Offset = "0xAC1480")]
		private sealed class <ShockPullFX>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RodBoostFX <>4__this;

			[Token(Token = "0x17000377")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002185")]
				[Address(RVA = "0xD4FF8C", Offset = "0xD4FF8C", VA = "0xD4FF8C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000378")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002187")]
				[Address(RVA = "0xD4FFF4", Offset = "0xD4FFF4", VA = "0xD4FFF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002182")]
			[Address(RVA = "0xD4FDB0", Offset = "0xD4FDB0", VA = "0xD4FDB0")]
			[DebuggerHidden]
			public <ShockPullFX>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6002183")]
			[Address(RVA = "0xD4FDE4", Offset = "0xD4FDE4", VA = "0xD4FDE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002184")]
			[Address(RVA = "0xD4FDE8", Offset = "0xD4FDE8", VA = "0xD4FDE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002186")]
			[Address(RVA = "0xD4FF94", Offset = "0xD4FF94", VA = "0xD4FF94", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RodBoost rodBoost;

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC75E0", Offset = "0xAC75E0")]
		public GameObject lightning;

		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform lightningPointA;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform lightningPointB;

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC7618", Offset = "0xAC7618")]
		public GameObject powerReelFX;

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0xD4F604", Offset = "0xD4F604", VA = "0xD4F604")]
		public void StartShockPullFX()
		{
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0xD4FBEC", Offset = "0xD4FBEC", VA = "0xD4FBEC")]
		public void StartShockPullFXDelayed()
		{
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0xD4FD34", Offset = "0xD4FD34", VA = "0xD4FD34")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACF108", Offset = "0xACF108")]
		public IEnumerator ShockPullFX()
		{
			return null;
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0xD4F374", Offset = "0xD4F374", VA = "0xD4F374")]
		public void StartPowerReelFX()
		{
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0xD4F4BC", Offset = "0xD4F4BC", VA = "0xD4F4BC")]
		public void StopPowerReelFX()
		{
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0xD4FDDC", Offset = "0xD4FDDC", VA = "0xD4FDDC")]
		public RodBoostFX()
		{
		}
	}
	[Token(Token = "0x2000329")]
	public class RodChange : MonoBehaviour
	{
		[Token(Token = "0x2000577")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1490", Offset = "0xAC1490")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x4001F7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float value;

			[Token(Token = "0x4001F7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RodChange <>4__this;

			[Token(Token = "0x6002188")]
			[Address(RVA = "0xD517E0", Offset = "0xD517E0", VA = "0xD517E0")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x6002189")]
			[Address(RVA = "0xD51948", Offset = "0xD51948", VA = "0xD51948")]
			internal float <EnergyFilledBounce>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x600218A")]
			[Address(RVA = "0xD51950", Offset = "0xD51950", VA = "0xD51950")]
			internal void <EnergyFilledBounce>b__1(float x)
			{
			}

			[Token(Token = "0x600218B")]
			[Address(RVA = "0xD51958", Offset = "0xD51958", VA = "0xD51958")]
			internal void <EnergyFilledBounce>b__2()
			{
			}

			[Token(Token = "0x600218C")]
			[Address(RVA = "0xD51978", Offset = "0xD51978", VA = "0xD51978")]
			internal void <EnergyFilledBounce>b__3()
			{
			}
		}

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SkinnedMeshRenderer rod;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshFilter reelHighlight;

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material FullChargedMaterial;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material DefaultMaterial;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material EmptyChargedMaterial;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Tween energyBounce;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isBouncing;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private Color powerColorYellow;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private Color powerCoreColorYellow;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private Color powerColorBlue;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Color powerCoreColorBlue;

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0xD512E4", Offset = "0xD512E4", VA = "0xD512E4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0xD51358", Offset = "0xD51358", VA = "0xD51358")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0xD513CC", Offset = "0xD513CC", VA = "0xD513CC")]
		public void ChangeRod(Transform newRod, ItemSO rodSO)
		{
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0xD4F858", Offset = "0xD4F858", VA = "0xD4F858")]
		public void SetRodChargerMaterial(float val)
		{
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0xD515F8", Offset = "0xD515F8", VA = "0xD515F8")]
		private void EnergyFilledBounce()
		{
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0xD517E8", Offset = "0xD517E8", VA = "0xD517E8")]
		private void BounceUpdate(float val)
		{
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0xD51940", Offset = "0xD51940", VA = "0xD51940")]
		public RodChange()
		{
		}
	}
	[Token(Token = "0x200032A")]
	public enum Lean
	{
		[Token(Token = "0x40017A2")]
		Left,
		[Token(Token = "0x40017A3")]
		Right,
		[Token(Token = "0x40017A4")]
		Up,
		[Token(Token = "0x40017A5")]
		None
	}
	[Token(Token = "0x200032B")]
	public class RodLean : MonoBehaviour
	{
		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform rodReel;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform referenceObject;

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector2 debugDif;

		[Token(Token = "0x6001601")]
		[Address(RVA = "0xD52A90", Offset = "0xD52A90", VA = "0xD52A90")]
		public Lean CheckLeanDir(Arrow dir)
		{
			return default(Lean);
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0xD52D78", Offset = "0xD52D78", VA = "0xD52D78")]
		public Vector3 GetHandForwardVector(float times = 1.5f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0xD52EC0", Offset = "0xD52EC0", VA = "0xD52EC0")]
		public RodLean()
		{
		}
	}
	[Token(Token = "0x200032C")]
	public class RodShake : MonoBehaviour
	{
		[Token(Token = "0x2000578")]
		public delegate void ShakeAction();

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float veloMagnitude;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 lastVelo;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 lastPos;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float threshold;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool awaitOver;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int counter;

		[Token(Token = "0x14000072")]
		public static event ShakeAction OnShake
		{
			[Token(Token = "0x6001604")]
			[Address(RVA = "0xD56558", Offset = "0xD56558", VA = "0xD56558")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF16C", Offset = "0xACF16C")]
			add
			{
			}
			[Token(Token = "0x6001605")]
			[Address(RVA = "0xD5660C", Offset = "0xD5660C", VA = "0xD5660C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF17C", Offset = "0xACF17C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0xD566C0", Offset = "0xD566C0", VA = "0xD566C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0xD56A84", Offset = "0xD56A84", VA = "0xD56A84")]
		public RodShake()
		{
		}
	}
	[Token(Token = "0x200032D")]
	public class RodTip : MonoBehaviour
	{
		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static RodTip instance;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SpawnPool Vfx;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform ripples;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool isUnder;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3[] change;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int changeIndex;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int avgWindow;

		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 lastPos;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float cooloff;

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float lastTime;

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float[] speedVals;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int speedIndex;

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int speedSmoothing;

		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float validSpeedLimit;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float lastValidSpeed;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float lastValidSpeedTime;

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float validSpeedWindow;

		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float speed;

		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 oldpos;

		[Token(Token = "0x170001E8")]
		public static float Speed
		{
			[Token(Token = "0x6001608")]
			[Address(RVA = "0xD50AB0", Offset = "0xD50AB0", VA = "0xD50AB0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0xD56D98", Offset = "0xD56D98", VA = "0xD56D98")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0xD56E5C", Offset = "0xD56E5C", VA = "0xD56E5C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0xD574B0", Offset = "0xD574B0", VA = "0xD574B0")]
		private void UpdateSpeed()
		{
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0xD570A8", Offset = "0xD570A8", VA = "0xD570A8")]
		private void UpdateChangeXZ(Vector3 changeXZ)
		{
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0xD5727C", Offset = "0xD5727C", VA = "0xD5727C")]
		private void HasGoneUnder()
		{
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0xD574A8", Offset = "0xD574A8", VA = "0xD574A8")]
		private void HasSurfaced()
		{
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0xD50CE8", Offset = "0xD50CE8", VA = "0xD50CE8")]
		public static void Reset()
		{
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0xD57650", Offset = "0xD57650", VA = "0xD57650")]
		public RodTip()
		{
		}
	}
	[Token(Token = "0x200032E")]
	public class Rotator : MonoBehaviour
	{
		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float xSpeed;

		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float ySpeed;

		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float zSpeed;

		[Token(Token = "0x6001611")]
		[Address(RVA = "0xD57688", Offset = "0xD57688", VA = "0xD57688")]
		private void Update()
		{
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0xD57714", Offset = "0xD57714", VA = "0xD57714")]
		public Rotator()
		{
		}
	}
	[Token(Token = "0x200032F")]
	public class RunRageSpray : MonoBehaviour
	{
		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ParticleSystem ps;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool isActive;

		[Token(Token = "0x6001613")]
		[Address(RVA = "0xD5771C", Offset = "0xD5771C", VA = "0xD5771C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0xD577D4", Offset = "0xD577D4", VA = "0xD577D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0xD57ADC", Offset = "0xD57ADC", VA = "0xD57ADC")]
		private void Play()
		{
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0xD57AB8", Offset = "0xD57AB8", VA = "0xD57AB8")]
		private void Stop()
		{
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0xD57B04", Offset = "0xD57B04", VA = "0xD57B04")]
		public RunRageSpray()
		{
		}
	}
	[Token(Token = "0x2000330")]
	public class ScalePerlinMoveBasedOnVelocity : MonoBehaviour
	{
		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PerlinMover perlin;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 posMoveScale;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Rigidbody rbToFollow;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float moveVeloMax;

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float speedVeloMax;

		[Token(Token = "0x6001618")]
		[Address(RVA = "0xD58260", Offset = "0xD58260", VA = "0xD58260")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0xD58318", Offset = "0xD58318", VA = "0xD58318")]
		private void Update()
		{
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0xD583F8", Offset = "0xD583F8", VA = "0xD583F8")]
		public ScalePerlinMoveBasedOnVelocity()
		{
		}
	}
	[Token(Token = "0x2000331")]
	public class SceneloaderAudioFade : MonoBehaviour
	{
		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSource musicSource;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SceneloaderAudioFade instance;

		[Token(Token = "0x600161B")]
		[Address(RVA = "0xD5E64C", Offset = "0xD5E64C", VA = "0xD5E64C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0xD5E6AC", Offset = "0xD5E6AC", VA = "0xD5E6AC")]
		private void FadeIn()
		{
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0xD5E6F0", Offset = "0xD5E6F0", VA = "0xD5E6F0")]
		public static void FadeOut()
		{
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0xD5E77C", Offset = "0xD5E77C", VA = "0xD5E77C")]
		public SceneloaderAudioFade()
		{
		}
	}
	[Token(Token = "0x2000332")]
	public class SetDefaultLanguage : MonoBehaviour
	{
		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SceneLoader sceneLoader;

		[Token(Token = "0x600161F")]
		[Address(RVA = "0xD6197C", Offset = "0xD6197C", VA = "0xD6197C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0xD61ED4", Offset = "0xD61ED4", VA = "0xD61ED4")]
		private string CheckSupportedLanguage(string language)
		{
			return null;
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0xD61F98", Offset = "0xD61F98", VA = "0xD61F98")]
		public SetDefaultLanguage()
		{
		}
	}
	[Token(Token = "0x2000333")]
	public class SetInteractionLineColor : MonoBehaviour
	{
		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Gradient hoverLineColor;

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Gradient nonHoverLineColor;

		[Token(Token = "0x6001622")]
		[Address(RVA = "0xD61FA0", Offset = "0xD61FA0", VA = "0xD61FA0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0xD62030", Offset = "0xD62030", VA = "0xD62030")]
		public SetInteractionLineColor()
		{
		}
	}
	[Token(Token = "0x2000334")]
	public class SetMixerSnapshot : MonoBehaviour
	{
		[Token(Token = "0x2000579")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC14A0", Offset = "0xAC14A0")]
		private sealed class <CheckPlayerIsInAquarium>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SetMixerSnapshot <>4__this;

			[Token(Token = "0x17000379")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002194")]
				[Address(RVA = "0xD62378", Offset = "0xD62378", VA = "0xD62378", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700037A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002196")]
				[Address(RVA = "0xD623E0", Offset = "0xD623E0", VA = "0xD623E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002191")]
			[Address(RVA = "0xD62238", Offset = "0xD62238", VA = "0xD62238")]
			[DebuggerHidden]
			public <CheckPlayerIsInAquarium>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6002192")]
			[Address(RVA = "0xD6226C", Offset = "0xD6226C", VA = "0xD6226C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002193")]
			[Address(RVA = "0xD62270", Offset = "0xD62270", VA = "0xD62270", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002195")]
			[Address(RVA = "0xD62380", Offset = "0xD62380", VA = "0xD62380", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isShipEnvironment;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixer mixer;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioMixerSnapshot normal;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioMixerSnapshot underwater;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool isUnderwater;

		[Token(Token = "0x6001624")]
		[Address(RVA = "0xD62064", Offset = "0xD62064", VA = "0xD62064")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0xD62108", Offset = "0xD62108", VA = "0xD62108")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0xD62190", Offset = "0xD62190", VA = "0xD62190")]
		private void DistanceCheck()
		{
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0xD621BC", Offset = "0xD621BC", VA = "0xD621BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACF18C", Offset = "0xACF18C")]
		private IEnumerator CheckPlayerIsInAquarium()
		{
			return null;
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0xD62264", Offset = "0xD62264", VA = "0xD62264")]
		public SetMixerSnapshot()
		{
		}
	}
	[Token(Token = "0x2000335")]
	public class SetPlatform : MonoBehaviour
	{
		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Platform platform;

		[Token(Token = "0x6001629")]
		[Address(RVA = "0xD623E8", Offset = "0xD623E8", VA = "0xD623E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0xD624B0", Offset = "0xD624B0", VA = "0xD624B0")]
		public SetPlatform()
		{
		}
	}
	[Token(Token = "0x2000336")]
	public class SetRenderScaleSceneLoader : MonoBehaviour
	{
		[Token(Token = "0x600162B")]
		[Address(RVA = "0xD624B8", Offset = "0xD624B8", VA = "0xD624B8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0xD624C8", Offset = "0xD624C8", VA = "0xD624C8")]
		public SetRenderScaleSceneLoader()
		{
		}
	}
	[Token(Token = "0x2000337")]
	public class SetRodStandHighlight : MonoBehaviour
	{
		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer rodStandRenderer;

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material interactingMat;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material nonInteractingMat;

		[Token(Token = "0x600162D")]
		[Address(RVA = "0xD624D0", Offset = "0xD624D0", VA = "0xD624D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0xD625F0", Offset = "0xD625F0", VA = "0xD625F0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0xD62614", Offset = "0xD62614", VA = "0xD62614")]
		public SetRodStandHighlight()
		{
		}
	}
	[Token(Token = "0x2000338")]
	public class SetSceneQuality : MonoBehaviour
	{
		[Token(Token = "0x200057A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC14B0", Offset = "0xAC14B0")]
		private sealed class <QualityInit>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SetSceneQuality <>4__this;

			[Token(Token = "0x1700037B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600219A")]
				[Address(RVA = "0xD62B7C", Offset = "0xD62B7C", VA = "0xD62B7C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700037C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600219C")]
				[Address(RVA = "0xD62BE4", Offset = "0xD62BE4", VA = "0xD62BE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002197")]
			[Address(RVA = "0xD62A34", Offset = "0xD62A34", VA = "0xD62A34")]
			[DebuggerHidden]
			public <QualityInit>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6002198")]
			[Address(RVA = "0xD62A68", Offset = "0xD62A68", VA = "0xD62A68", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002199")]
			[Address(RVA = "0xD62A6C", Offset = "0xD62A6C", VA = "0xD62A6C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600219B")]
			[Address(RVA = "0xD62B84", Offset = "0xD62B84", VA = "0xD62B84", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int qualityLevel;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int ffrLevel;

		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float renderScale;

		[Token(Token = "0x6001630")]
		[Address(RVA = "0xD6298C", Offset = "0xD6298C", VA = "0xD6298C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0xD629B8", Offset = "0xD629B8", VA = "0xD629B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACF1F0", Offset = "0xACF1F0")]
		private IEnumerator QualityInit()
		{
			return null;
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0xD62A60", Offset = "0xD62A60", VA = "0xD62A60")]
		public SetSceneQuality()
		{
		}
	}
	[Token(Token = "0x2000339")]
	public class GameSettingController : MonoBehaviour
	{
		[Token(Token = "0x6001633")]
		[Address(RVA = "0xDFF7C4", Offset = "0xDFF7C4", VA = "0xDFF7C4")]
		public static void ActiveTeleport(bool active)
		{
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0xDFF844", Offset = "0xDFF844", VA = "0xDFF844")]
		public static void ActiveUiRay(bool active)
		{
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0xDFF8F8", Offset = "0xDFF8F8", VA = "0xDFF8F8")]
		public GameSettingController()
		{
		}
	}
	[Token(Token = "0x200033A")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xAC038C", Offset = "0xAC038C")]
	public class GameSettingSO : SingletonScriptableObject<GameSettingSO>
	{
		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC76B0", Offset = "0xAC76B0")]
		public bool TeleportActive;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool UiRayActive;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<string> TeleportSceneList;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC76E8", Offset = "0xAC76E8")]
		public float LineRad_Mag;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int Max_ReelSpeed;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC7704", Offset = "0xAC7704")]
		public int AutoReel_Acceleration;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float Rod_initTension;

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float Max_fishweight;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC7720", Offset = "0xAC7720")]
		public int SnapForce_scale;

		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC7738", Offset = "0xAC7738")]
		public float TimeToLure0Min;

		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float TimeToLure0Max;

		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float TimeToLure1Min;

		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float TimeToLure1Max;

		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float TimeToLure2Min;

		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float TimeToLure2Max;

		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float TimeToLure3Min;

		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float TimeToLure3Max;

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float TimeToLure4Min;

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float TimeToLure4Max;

		[Token(Token = "0x6001636")]
		[Address(RVA = "0xDFF900", Offset = "0xDFF900", VA = "0xDFF900")]
		public GameSettingSO()
		{
		}
	}
	[Token(Token = "0x200033B")]
	public abstract class SingletonScriptableObject<T> : ScriptableObject where T : ScriptableObject
	{
		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T m_Instance;

		[Token(Token = "0x40017F2")]
		private const string assetpath = "PersistSetting/GameSettingSO";

		[Token(Token = "0x170001E9")]
		public static T Instance
		{
			[Token(Token = "0x6001637")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001638")]
		protected SingletonScriptableObject()
		{
		}
	}
	[Token(Token = "0x200033C")]
	public enum SfxShip
	{
		[Token(Token = "0x40017F4")]
		AquariumDoor
	}
	[Token(Token = "0x200033D")]
	public class ShipAudio : MonoBehaviour
	{
		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSource shipAudio;

		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ShipAudio instance;

		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC7770", Offset = "0xAC7770")]
		public AudioClip aquariumDoor;

		[Token(Token = "0x600163A")]
		[Address(RVA = "0xD634B0", Offset = "0xD634B0", VA = "0xD634B0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0xD63508", Offset = "0xD63508", VA = "0xD63508")]
		public static void PlayAt(SfxShip sfx, Vector3 position)
		{
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0xD635F8", Offset = "0xD635F8", VA = "0xD635F8")]
		public ShipAudio()
		{
		}
	}
	[Token(Token = "0x200033E")]
	public class ShowDebugPressOptions : MonoBehaviour
	{
		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI textField;

		[Token(Token = "0x600163D")]
		[Address(RVA = "0xD63600", Offset = "0xD63600", VA = "0xD63600")]
		private void Start()
		{
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0xD636FC", Offset = "0xD636FC", VA = "0xD636FC")]
		public ShowDebugPressOptions()
		{
		}
	}
	[Token(Token = "0x200033F")]
	public class ShowFFRLevel : MonoBehaviour
	{
		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI ffrLevelText;

		[Token(Token = "0x600163F")]
		[Address(RVA = "0xD63704", Offset = "0xD63704", VA = "0xD63704")]
		private void Update()
		{
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0xD63744", Offset = "0xD63744", VA = "0xD63744")]
		public ShowFFRLevel()
		{
		}
	}
	[Token(Token = "0x2000340")]
	public class SlantedButton : MonoBehaviour
	{
		[Token(Token = "0x6001641")]
		[Address(RVA = "0xD10840", Offset = "0xD10840", VA = "0xD10840")]
		private void Start()
		{
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0xD108A8", Offset = "0xD108A8", VA = "0xD108A8")]
		public SlantedButton()
		{
		}
	}
	[Token(Token = "0x2000341")]
	public class SpawnDistanceDebug : MonoBehaviour
	{
		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI noPatternLimitValText;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI maxDistanceLimitValText;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI easyMinText;

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI easyMaxText;

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI mediumMinText;

		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshProUGUI mediumMaxText;

		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TextMeshProUGUI hardMinText;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public TextMeshProUGUI hardMaxText;

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TextMeshProUGUI expertMinText;

		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TextMeshProUGUI expertMaxText;

		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Slider easyMin;

		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Slider easyMax;

		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Slider mediumMin;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Slider mediumMax;

		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Slider hardMin;

		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Slider hardMax;

		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Slider expertMin;

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Slider expertMax;

		[Token(Token = "0x6001643")]
		[Address(RVA = "0xD11B84", Offset = "0xD11B84", VA = "0xD11B84")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0xD1213C", Offset = "0xD1213C", VA = "0xD1213C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0xD11C00", Offset = "0xD11C00", VA = "0xD11C00")]
		private void InitSliders()
		{
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0xD121B0", Offset = "0xD121B0", VA = "0xD121B0")]
		public void OnValueChanged(Slider slider)
		{
		}

		[Token(Token = "0x6001647")]
		[Address(RVA = "0xD12834", Offset = "0xD12834", VA = "0xD12834")]
		private void LocationChange()
		{
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0xD12990", Offset = "0xD12990", VA = "0xD12990")]
		public void ResetDefaults()
		{
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0xD12A14", Offset = "0xD12A14", VA = "0xD12A14")]
		public SpawnDistanceDebug()
		{
		}
	}
	[Token(Token = "0x2000342")]
	public class SpecialRodToStand : MonoBehaviour
	{
		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool noPickupOnDismiss;

		[Token(Token = "0x600164A")]
		[Address(RVA = "0xD12A1C", Offset = "0xD12A1C", VA = "0xD12A1C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0xD12A80", Offset = "0xD12A80", VA = "0xD12A80")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0xD12AF8", Offset = "0xD12AF8", VA = "0xD12AF8")]
		public SpecialRodToStand()
		{
		}
	}
	[Token(Token = "0x2000343")]
	public class Splash : MonoBehaviour
	{
		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Splash instance;

		[Token(Token = "0x600164D")]
		[Address(RVA = "0xD12B00", Offset = "0xD12B00", VA = "0xD12B00")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0xD12B58", Offset = "0xD12B58", VA = "0xD12B58")]
		public static void DoSplash()
		{
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0xD12B5C", Offset = "0xD12B5C", VA = "0xD12B5C")]
		public Splash()
		{
		}
	}
	[Token(Token = "0x2000344")]
	public class SporePod : MonoBehaviour
	{
		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float hiddenTime;

		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float lifetime;

		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float appearTime;

		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform tweenMover;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Tween moveTween;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Collider col;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public RepellentManager rplntManager;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform explosion;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform sporePuff;

		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform sporeDisperse;

		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public RepellentSkin skin;

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject[] skinModels;

		[Token(Token = "0x6001650")]
		[Address(RVA = "0xD12B64", Offset = "0xD12B64", VA = "0xD12B64")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0xD12DDC", Offset = "0xD12DDC", VA = "0xD12DDC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0xD12BD0", Offset = "0xD12BD0", VA = "0xD12BD0")]
		private void SetRandomPos(bool ignoreWater = false)
		{
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0xD12DE4", Offset = "0xD12DE4", VA = "0xD12DE4")]
		public void ShowPod()
		{
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0xD1300C", Offset = "0xD1300C", VA = "0xD1300C")]
		private void DisableAllSkins()
		{
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0xD1307C", Offset = "0xD1307C", VA = "0xD1307C")]
		public void RemovePod()
		{
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0xD13188", Offset = "0xD13188", VA = "0xD13188")]
		public void RemovePodInstant()
		{
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0xD13214", Offset = "0xD13214", VA = "0xD13214")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0xD134D0", Offset = "0xD134D0", VA = "0xD134D0")]
		public SporePod()
		{
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0xD134EC", Offset = "0xD134EC", VA = "0xD134EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF254", Offset = "0xACF254")]
		private void <RemovePod>b__17_0()
		{
		}
	}
	[Token(Token = "0x2000345")]
	public class Stamina : MonoBehaviour
	{
		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float maxStamina;

		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float currentStamina;

		[Token(Token = "0x170001EA")]
		public float CurrentStamina
		{
			[Token(Token = "0x600165A")]
			[Address(RVA = "0xD1352C", Offset = "0xD1352C", VA = "0xD1352C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001EB")]
		public float CurrentStaminaScaled
		{
			[Token(Token = "0x600165B")]
			[Address(RVA = "0xD13534", Offset = "0xD13534", VA = "0xD13534")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0xD13550", Offset = "0xD13550", VA = "0xD13550")]
		public void ResetStamina()
		{
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0xD13558", Offset = "0xD13558", VA = "0xD13558")]
		public void SetStaminaMax(float max)
		{
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0xD13560", Offset = "0xD13560", VA = "0xD13560")]
		public void ReduceStaminaBy(float val)
		{
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0xD1357C", Offset = "0xD1357C", VA = "0xD1357C")]
		public void ReduceStaminaByPercent(float percent)
		{
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0xD135A8", Offset = "0xD135A8", VA = "0xD135A8")]
		public Stamina()
		{
		}
	}
	[Token(Token = "0x2000346")]
	public class StaminaDebug : MonoBehaviour
	{
		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI staminaValue;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI staminaPercent;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI staminaEffectiveness;

		[Token(Token = "0x6001661")]
		[Address(RVA = "0xD135B0", Offset = "0xD135B0", VA = "0xD135B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0xD1376C", Offset = "0xD1376C", VA = "0xD1376C")]
		public void SetEffectiveness(float val)
		{
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0xD137E0", Offset = "0xD137E0", VA = "0xD137E0")]
		public StaminaDebug()
		{
		}
	}
	[Token(Token = "0x2000347")]
	public static class EventHub
	{
		[Token(Token = "0x200057B")]
		public delegate void FishCaughtAction(FpFish fish, bool isCheating = false);

		[Token(Token = "0x200057C")]
		public delegate void SummonFishingPadAction();

		[Token(Token = "0x200057D")]
		public delegate void CloseFishPadAction();

		[Token(Token = "0x200057E")]
		public delegate void GrabRodAction();

		[Token(Token = "0x200057F")]
		public delegate void ReleaseRodAction();

		[Token(Token = "0x2000580")]
		public delegate void GrabReelAction();

		[Token(Token = "0x2000581")]
		public delegate void ReleaseReelAction();

		[Token(Token = "0x2000582")]
		public delegate void PlayerSettingHasChanged(PlayerSetting setting);

		[Token(Token = "0x2000583")]
		public delegate void PlayerXPGotAction(int xp);

		[Token(Token = "0x2000584")]
		public delegate void PlayerLevelUpAction(int level);

		[Token(Token = "0x2000585")]
		public delegate void PlayerTournamentPointGotAction(int tp);

		[Token(Token = "0x2000586")]
		public delegate void PlayerRodEquipAction(RodSO rod);

		[Token(Token = "0x2000587")]
		public delegate void PlayerLureEquipAction(LureSO lure);

		[Token(Token = "0x2000588")]
		public delegate void PlayerCharmEquipAction(CharmSO charm);

		[Token(Token = "0x2000589")]
		public delegate void PlayerLocationChangeAction();

		[Token(Token = "0x200058A")]
		public delegate void PlayerSnapSuccessAction();

		[Token(Token = "0x200058B")]
		public delegate void MissionChangedAction(MissionSO mission);

		[Token(Token = "0x200058C")]
		public delegate void SideMissionAcceptedAction(MissionSO mission);

		[Token(Token = "0x200058D")]
		public delegate void SideMissionQuittedAction();

		[Token(Token = "0x200058E")]
		public delegate void ChallengeMissionAcceptedAction(MissionSO mission);

		[Token(Token = "0x200058F")]
		public delegate void ChallengeMissionQuittedAction();

		[Token(Token = "0x2000590")]
		public delegate void Mission_TutorialClearAction(MissionSO mission, bool isCheating = false);

		[Token(Token = "0x2000591")]
		public delegate void TeleportEnabledAction();

		[Token(Token = "0x2000592")]
		public delegate void TeleportDisabledAction();

		[Token(Token = "0x2000593")]
		public delegate void Mission_CutsceneClearAction(MissionSO mission, bool isCheating = false);

		[Token(Token = "0x2000594")]
		public delegate void Mission_FishPadClearAction(MissionSO mission, bool isCheating = false);

		[Token(Token = "0x2000595")]
		public delegate void MissionCompletedAction(MissionSO mission);

		[Token(Token = "0x2000596")]
		public delegate void MissionSkippedAction(MissionSO mission);

		[Token(Token = "0x2000597")]
		public delegate void ItemGotAction(ItemSO itemSO, int amount);

		[Token(Token = "0x2000598")]
		public delegate void ItemCraftedAction(CraftingRecipesSO recipe);

		[Token(Token = "0x2000599")]
		public delegate void FishCanHookAction();

		[Token(Token = "0x200059A")]
		public delegate void FishHookedAction();

		[Token(Token = "0x200059B")]
		public delegate void FishCanRecoverAction();

		[Token(Token = "0x200059C")]
		public delegate void BobberRecoverAction();

		[Token(Token = "0x200059D")]
		public delegate void FishTakenAction(FpFish fish);

		[Token(Token = "0x200059E")]
		public delegate void FishReleaseAction(FpFish fish);

		[Token(Token = "0x200059F")]
		public delegate void FishKeepAction(FpFish fish);

		[Token(Token = "0x20005A0")]
		public delegate void FishLostAction(FpFish fish);

		[Token(Token = "0x20005A1")]
		public delegate void PatternPlayStarted();

		[Token(Token = "0x20005A2")]
		public delegate void MissionLoadAction(MissionSO mission);

		[Token(Token = "0x20005A3")]
		public delegate void MissionConfirmedAction(MissionSO mission);

		[Token(Token = "0x20005A4")]
		public delegate void TimedMissionSetupedAction(float time);

		[Token(Token = "0x20005A5")]
		public delegate void TimedMissionUpdateTimerAction(float time);

		[Token(Token = "0x20005A6")]
		public delegate void MissionFailedAction(MissionSO mission);

		[Token(Token = "0x20005A7")]
		public delegate void FishOPediaFishUnlockedAction(FpFish fishType);

		[Token(Token = "0x20005A8")]
		public delegate void FishOPediaFishWeightUpdatedAction(FpFish fishType);

		[Token(Token = "0x20005A9")]
		public delegate void FishOPediaFishTotalWeightUpdatedAction(FishOPediaController.FishOPedia_ fishOPedia);

		[Token(Token = "0x20005AA")]
		public delegate void ItemCraftingUnlockedAction(bool locked);

		[Token(Token = "0x20005AB")]
		public delegate void SaveCraftingSceneStatAction();

		[Token(Token = "0x20005AC")]
		public delegate void SaveAquariumSceneStatAction();

		[Token(Token = "0x20005AD")]
		public delegate void CharmCraftingUnlockedAction(bool locked);

		[Token(Token = "0x20005AE")]
		public delegate void BoostTimerUpdateAction(float val);

		[Token(Token = "0x20005AF")]
		public delegate void MissionUpdatedAction();

		[Token(Token = "0x20005B0")]
		public delegate void MissionRewardGotAction();

		[Token(Token = "0x20005B1")]
		public delegate void DismissTakeFishUIAction();

		[Token(Token = "0x20005B2")]
		public delegate void FishPoolChangedAction();

		[Token(Token = "0x20005B3")]
		public delegate void FishPoolRestockAction();

		[Token(Token = "0x20005B4")]
		public delegate void SceneLoadFinishedAction();

		[Token(Token = "0x20005B5")]
		public delegate void SceneLoadFadeFinishedAction();

		[Token(Token = "0x20005B6")]
		public delegate void CutsceneLoadAction();

		[Token(Token = "0x20005B7")]
		public delegate void CutsceneUnloadAction();

		[Token(Token = "0x20005B8")]
		public delegate void CutsceneStartedAction();

		[Token(Token = "0x20005B9")]
		public delegate void CutsceneFinishedAction(bool isSpecialCutscene = false);

		[Token(Token = "0x20005BA")]
		public delegate void CutsceneTimelinePausedAction();

		[Token(Token = "0x20005BB")]
		public delegate void CutsceneTimelineResumedAction();

		[Token(Token = "0x20005BC")]
		public delegate void CutsceneTimelineFinishedAction();

		[Token(Token = "0x20005BD")]
		public delegate void ReelInMinigameStartedAction();

		[Token(Token = "0x20005BE")]
		public delegate void CastArmedAction();

		[Token(Token = "0x20005BF")]
		public delegate void CastTargetHitAction();

		[Token(Token = "0x20005C0")]
		public delegate void TensionOverAlertAction();

		[Token(Token = "0x20005C1")]
		public delegate void TensionUnderAlertAction();

		[Token(Token = "0x20005C2")]
		public delegate void ReturnMainMenuAction();

		[Token(Token = "0x20005C3")]
		public delegate void TakeTutCompleteRewardAction();

		[Token(Token = "0x20005C4")]
		public delegate void SetPopVisibilityAction(bool state);

		[Token(Token = "0x20005C5")]
		public delegate void SetPopFlyToRightAction(bool state);

		[Token(Token = "0x20005C6")]
		public delegate void ClearCutsceneViaButtonAction();

		[Token(Token = "0x20005C7")]
		public delegate void BoostReadyAction();

		[Token(Token = "0x20005C8")]
		public delegate void StartBoostAction();

		[Token(Token = "0x20005C9")]
		public delegate void StopBoostAction();

		[Token(Token = "0x20005CA")]
		public delegate void FailedBoostAction();

		[Token(Token = "0x20005CB")]
		public delegate void CraftingMinigameActivateAction(bool state);

		[Token(Token = "0x20005CC")]
		public delegate void NewChallengePanelDismissedAction();

		[Token(Token = "0x20005CD")]
		public delegate void FishRewardsSequenceFinished();

		[Token(Token = "0x20005CE")]
		public delegate void PlaceFishInAquariumAction();

		[Token(Token = "0x20005CF")]
		public delegate void AquariumCutsceneDismissedAction();

		[Token(Token = "0x20005D0")]
		public delegate void ReachedFinalCutsceneAction();

		[Token(Token = "0x14000073")]
		public static event FishCaughtAction OnFishCaught
		{
			[Token(Token = "0x6001664")]
			[Address(RVA = "0xCF6708", Offset = "0xCF6708", VA = "0xCF6708")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF264", Offset = "0xACF264")]
			add
			{
			}
			[Token(Token = "0x6001665")]
			[Address(RVA = "0xCF6D7C", Offset = "0xCF6D7C", VA = "0xCF6D7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF274", Offset = "0xACF274")]
			remove
			{
			}
		}

		[Token(Token = "0x14000074")]
		public static event SummonFishingPadAction OnSummonFP
		{
			[Token(Token = "0x6001666")]
			[Address(RVA = "0xD02F00", Offset = "0xD02F00", VA = "0xD02F00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF284", Offset = "0xACF284")]
			add
			{
			}
			[Token(Token = "0x6001667")]
			[Address(RVA = "0xD04238", Offset = "0xD04238", VA = "0xD04238")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF294", Offset = "0xACF294")]
			remove
			{
			}
		}

		[Token(Token = "0x14000075")]
		public static event CloseFishPadAction OnFishPadClosed
		{
			[Token(Token = "0x6001668")]
			[Address(RVA = "0xD05A94", Offset = "0xD05A94", VA = "0xD05A94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF2A4", Offset = "0xACF2A4")]
			add
			{
			}
			[Token(Token = "0x6001669")]
			[Address(RVA = "0xD05B4C", Offset = "0xD05B4C", VA = "0xD05B4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF2B4", Offset = "0xACF2B4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000076")]
		public static event GrabRodAction OnGrabRod
		{
			[Token(Token = "0x600166A")]
			[Address(RVA = "0xCF9084", Offset = "0xCF9084", VA = "0xCF9084")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF2C4", Offset = "0xACF2C4")]
			add
			{
			}
			[Token(Token = "0x600166B")]
			[Address(RVA = "0xCF9BD0", Offset = "0xCF9BD0", VA = "0xCF9BD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF2D4", Offset = "0xACF2D4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000077")]
		public static event ReleaseRodAction OnReleaseRod
		{
			[Token(Token = "0x600166C")]
			[Address(RVA = "0xCF913C", Offset = "0xCF913C", VA = "0xCF913C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF2E4", Offset = "0xACF2E4")]
			add
			{
			}
			[Token(Token = "0x600166D")]
			[Address(RVA = "0xCF9C88", Offset = "0xCF9C88", VA = "0xCF9C88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF2F4", Offset = "0xACF2F4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000078")]
		public static event GrabReelAction OnGrabReel
		{
			[Token(Token = "0x600166E")]
			[Address(RVA = "0xCF91F4", Offset = "0xCF91F4", VA = "0xCF91F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF304", Offset = "0xACF304")]
			add
			{
			}
			[Token(Token = "0x600166F")]
			[Address(RVA = "0xCF9D40", Offset = "0xCF9D40", VA = "0xCF9D40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF314", Offset = "0xACF314")]
			remove
			{
			}
		}

		[Token(Token = "0x14000079")]
		public static event ReleaseReelAction OnReleaseReel
		{
			[Token(Token = "0x6001670")]
			[Address(RVA = "0xCF92AC", Offset = "0xCF92AC", VA = "0xCF92AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF324", Offset = "0xACF324")]
			add
			{
			}
			[Token(Token = "0x6001671")]
			[Address(RVA = "0xCF9DF8", Offset = "0xCF9DF8", VA = "0xCF9DF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF334", Offset = "0xACF334")]
			remove
			{
			}
		}

		[Token(Token = "0x1400007A")]
		public static event PlayerSettingHasChanged OnPlayerSettingChanged
		{
			[Token(Token = "0x6001672")]
			[Address(RVA = "0xD05C04", Offset = "0xD05C04", VA = "0xD05C04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF344", Offset = "0xACF344")]
			add
			{
			}
			[Token(Token = "0x6001673")]
			[Address(RVA = "0xD05CBC", Offset = "0xD05CBC", VA = "0xD05CBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF354", Offset = "0xACF354")]
			remove
			{
			}
		}

		[Token(Token = "0x1400007B")]
		public static event PlayerXPGotAction OnPlayerXPGot
		{
			[Token(Token = "0x6001674")]
			[Address(RVA = "0xD05D74", Offset = "0xD05D74", VA = "0xD05D74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF364", Offset = "0xACF364")]
			add
			{
			}
			[Token(Token = "0x6001675")]
			[Address(RVA = "0xD05E2C", Offset = "0xD05E2C", VA = "0xD05E2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF374", Offset = "0xACF374")]
			remove
			{
			}
		}

		[Token(Token = "0x1400007C")]
		public static event PlayerLevelUpAction OnPlayerLevelUp
		{
			[Token(Token = "0x6001676")]
			[Address(RVA = "0xD05EE4", Offset = "0xD05EE4", VA = "0xD05EE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF384", Offset = "0xACF384")]
			add
			{
			}
			[Token(Token = "0x6001677")]
			[Address(RVA = "0xD05F9C", Offset = "0xD05F9C", VA = "0xD05F9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF394", Offset = "0xACF394")]
			remove
			{
			}
		}

		[Token(Token = "0x1400007D")]
		public static event PlayerTournamentPointGotAction OnPlayerTournamentPointGot
		{
			[Token(Token = "0x6001678")]
			[Address(RVA = "0xD06054", Offset = "0xD06054", VA = "0xD06054")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF3A4", Offset = "0xACF3A4")]
			add
			{
			}
			[Token(Token = "0x6001679")]
			[Address(RVA = "0xD0610C", Offset = "0xD0610C", VA = "0xD0610C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF3B4", Offset = "0xACF3B4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400007E")]
		public static event PlayerRodEquipAction OnPlayerRodEquip
		{
			[Token(Token = "0x600167A")]
			[Address(RVA = "0xD061C4", Offset = "0xD061C4", VA = "0xD061C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF3C4", Offset = "0xACF3C4")]
			add
			{
			}
			[Token(Token = "0x600167B")]
			[Address(RVA = "0xD0627C", Offset = "0xD0627C", VA = "0xD0627C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF3D4", Offset = "0xACF3D4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400007F")]
		public static event PlayerLureEquipAction OnPlayerLureEquip
		{
			[Token(Token = "0x600167C")]
			[Address(RVA = "0xCEFC34", Offset = "0xCEFC34", VA = "0xCEFC34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF3E4", Offset = "0xACF3E4")]
			add
			{
			}
			[Token(Token = "0x600167D")]
			[Address(RVA = "0xCEFD5C", Offset = "0xCEFD5C", VA = "0xCEFD5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF3F4", Offset = "0xACF3F4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000080")]
		public static event PlayerCharmEquipAction OnPlayerCharmEquip
		{
			[Token(Token = "0x600167E")]
			[Address(RVA = "0xD06334", Offset = "0xD06334", VA = "0xD06334")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF404", Offset = "0xACF404")]
			add
			{
			}
			[Token(Token = "0x600167F")]
			[Address(RVA = "0xD063EC", Offset = "0xD063EC", VA = "0xD063EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF414", Offset = "0xACF414")]
			remove
			{
			}
		}

		[Token(Token = "0x14000081")]
		public static event PlayerLocationChangeAction OnPlayerLocationChange
		{
			[Token(Token = "0x6001680")]
			[Address(RVA = "0xCFC430", Offset = "0xCFC430", VA = "0xCFC430")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF424", Offset = "0xACF424")]
			add
			{
			}
			[Token(Token = "0x6001681")]
			[Address(RVA = "0xCFCAFC", Offset = "0xCFCAFC", VA = "0xCFCAFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF434", Offset = "0xACF434")]
			remove
			{
			}
		}

		[Token(Token = "0x14000082")]
		public static event PlayerSnapSuccessAction OnPlayerSnapSuccess
		{
			[Token(Token = "0x6001682")]
			[Address(RVA = "0xD064A4", Offset = "0xD064A4", VA = "0xD064A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF444", Offset = "0xACF444")]
			add
			{
			}
			[Token(Token = "0x6001683")]
			[Address(RVA = "0xD0655C", Offset = "0xD0655C", VA = "0xD0655C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF454", Offset = "0xACF454")]
			remove
			{
			}
		}

		[Token(Token = "0x14000083")]
		public static event MissionChangedAction OnMissionChanged
		{
			[Token(Token = "0x6001684")]
			[Address(RVA = "0xD06614", Offset = "0xD06614", VA = "0xD06614")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF464", Offset = "0xACF464")]
			add
			{
			}
			[Token(Token = "0x6001685")]
			[Address(RVA = "0xD066CC", Offset = "0xD066CC", VA = "0xD066CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF474", Offset = "0xACF474")]
			remove
			{
			}
		}

		[Token(Token = "0x14000084")]
		public static event SideMissionAcceptedAction OnSideMissionAccepted
		{
			[Token(Token = "0x6001686")]
			[Address(RVA = "0xD06784", Offset = "0xD06784", VA = "0xD06784")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF484", Offset = "0xACF484")]
			add
			{
			}
			[Token(Token = "0x6001687")]
			[Address(RVA = "0xD0683C", Offset = "0xD0683C", VA = "0xD0683C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF494", Offset = "0xACF494")]
			remove
			{
			}
		}

		[Token(Token = "0x14000085")]
		public static event SideMissionQuittedAction OnSideMissionQuitted
		{
			[Token(Token = "0x6001688")]
			[Address(RVA = "0xD068F4", Offset = "0xD068F4", VA = "0xD068F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF4A4", Offset = "0xACF4A4")]
			add
			{
			}
			[Token(Token = "0x6001689")]
			[Address(RVA = "0xD069AC", Offset = "0xD069AC", VA = "0xD069AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF4B4", Offset = "0xACF4B4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000086")]
		public static event ChallengeMissionAcceptedAction OnChallengeMissionAccepted
		{
			[Token(Token = "0x600168A")]
			[Address(RVA = "0xCF6874", Offset = "0xCF6874", VA = "0xCF6874")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF4C4", Offset = "0xACF4C4")]
			add
			{
			}
			[Token(Token = "0x600168B")]
			[Address(RVA = "0xCF6EE8", Offset = "0xCF6EE8", VA = "0xCF6EE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF4D4", Offset = "0xACF4D4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000087")]
		public static event ChallengeMissionQuittedAction OnChallengeMissionQuitted
		{
			[Token(Token = "0x600168C")]
			[Address(RVA = "0xD06A64", Offset = "0xD06A64", VA = "0xD06A64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF4E4", Offset = "0xACF4E4")]
			add
			{
			}
			[Token(Token = "0x600168D")]
			[Address(RVA = "0xD06B1C", Offset = "0xD06B1C", VA = "0xD06B1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF4F4", Offset = "0xACF4F4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000088")]
		public static event Mission_TutorialClearAction OnMission_TutorialClear
		{
			[Token(Token = "0x600168E")]
			[Address(RVA = "0xD06BD4", Offset = "0xD06BD4", VA = "0xD06BD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF504", Offset = "0xACF504")]
			add
			{
			}
			[Token(Token = "0x600168F")]
			[Address(RVA = "0xD06C8C", Offset = "0xD06C8C", VA = "0xD06C8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF514", Offset = "0xACF514")]
			remove
			{
			}
		}

		[Token(Token = "0x14000089")]
		public static event TeleportEnabledAction OnTeleportEnabled
		{
			[Token(Token = "0x6001690")]
			[Address(RVA = "0xD013D8", Offset = "0xD013D8", VA = "0xD013D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF524", Offset = "0xACF524")]
			add
			{
			}
			[Token(Token = "0x6001691")]
			[Address(RVA = "0xD01644", Offset = "0xD01644", VA = "0xD01644")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF534", Offset = "0xACF534")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008A")]
		public static event TeleportDisabledAction OnTeleportDisabled
		{
			[Token(Token = "0x6001692")]
			[Address(RVA = "0xD01490", Offset = "0xD01490", VA = "0xD01490")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF544", Offset = "0xACF544")]
			add
			{
			}
			[Token(Token = "0x6001693")]
			[Address(RVA = "0xD016FC", Offset = "0xD016FC", VA = "0xD016FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF554", Offset = "0xACF554")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008B")]
		public static event Mission_CutsceneClearAction OnMission_CutsceneClear
		{
			[Token(Token = "0x6001694")]
			[Address(RVA = "0xD06D44", Offset = "0xD06D44", VA = "0xD06D44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF564", Offset = "0xACF564")]
			add
			{
			}
			[Token(Token = "0x6001695")]
			[Address(RVA = "0xD06DFC", Offset = "0xD06DFC", VA = "0xD06DFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF574", Offset = "0xACF574")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008C")]
		public static event Mission_FishPadClearAction OnMission_FishPadClear
		{
			[Token(Token = "0x6001696")]
			[Address(RVA = "0xD06EB4", Offset = "0xD06EB4", VA = "0xD06EB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF584", Offset = "0xACF584")]
			add
			{
			}
			[Token(Token = "0x6001697")]
			[Address(RVA = "0xD06F6C", Offset = "0xD06F6C", VA = "0xD06F6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF594", Offset = "0xACF594")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008D")]
		public static event MissionCompletedAction OnMissionCompleted
		{
			[Token(Token = "0x6001698")]
			[Address(RVA = "0xD07024", Offset = "0xD07024", VA = "0xD07024")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF5A4", Offset = "0xACF5A4")]
			add
			{
			}
			[Token(Token = "0x6001699")]
			[Address(RVA = "0xD070DC", Offset = "0xD070DC", VA = "0xD070DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF5B4", Offset = "0xACF5B4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008E")]
		public static event MissionSkippedAction OnMissionSkipped
		{
			[Token(Token = "0x600169A")]
			[Address(RVA = "0xD07194", Offset = "0xD07194", VA = "0xD07194")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF5C4", Offset = "0xACF5C4")]
			add
			{
			}
			[Token(Token = "0x600169B")]
			[Address(RVA = "0xD0724C", Offset = "0xD0724C", VA = "0xD0724C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF5D4", Offset = "0xACF5D4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008F")]
		public static event ItemGotAction OnItemGot
		{
			[Token(Token = "0x600169C")]
			[Address(RVA = "0xCF67BC", Offset = "0xCF67BC", VA = "0xCF67BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF5E4", Offset = "0xACF5E4")]
			add
			{
			}
			[Token(Token = "0x600169D")]
			[Address(RVA = "0xCF6E30", Offset = "0xCF6E30", VA = "0xCF6E30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF5F4", Offset = "0xACF5F4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000090")]
		public static event ItemCraftedAction OnItemCrafted
		{
			[Token(Token = "0x600169E")]
			[Address(RVA = "0xD02E48", Offset = "0xD02E48", VA = "0xD02E48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF604", Offset = "0xACF604")]
			add
			{
			}
			[Token(Token = "0x600169F")]
			[Address(RVA = "0xD04180", Offset = "0xD04180", VA = "0xD04180")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF614", Offset = "0xACF614")]
			remove
			{
			}
		}

		[Token(Token = "0x14000091")]
		public static event FishCanHookAction OnFishCanHook
		{
			[Token(Token = "0x60016A0")]
			[Address(RVA = "0xCFE994", Offset = "0xCFE994", VA = "0xCFE994")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF624", Offset = "0xACF624")]
			add
			{
			}
			[Token(Token = "0x60016A1")]
			[Address(RVA = "0xCFEDE4", Offset = "0xCFEDE4", VA = "0xCFEDE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF634", Offset = "0xACF634")]
			remove
			{
			}
		}

		[Token(Token = "0x14000092")]
		public static event FishHookedAction OnFishHooked
		{
			[Token(Token = "0x60016A2")]
			[Address(RVA = "0xCFEA4C", Offset = "0xCFEA4C", VA = "0xCFEA4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF644", Offset = "0xACF644")]
			add
			{
			}
			[Token(Token = "0x60016A3")]
			[Address(RVA = "0xCFEE9C", Offset = "0xCFEE9C", VA = "0xCFEE9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF654", Offset = "0xACF654")]
			remove
			{
			}
		}

		[Token(Token = "0x14000093")]
		public static event FishCanRecoverAction OnFishCanRecover
		{
			[Token(Token = "0x60016A4")]
			[Address(RVA = "0xCFEBBC", Offset = "0xCFEBBC", VA = "0xCFEBBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF664", Offset = "0xACF664")]
			add
			{
			}
			[Token(Token = "0x60016A5")]
			[Address(RVA = "0xCFF00C", Offset = "0xCFF00C", VA = "0xCFF00C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF674", Offset = "0xACF674")]
			remove
			{
			}
		}

		[Token(Token = "0x14000094")]
		public static event BobberRecoverAction OnBobberRecover
		{
			[Token(Token = "0x60016A6")]
			[Address(RVA = "0xD07304", Offset = "0xD07304", VA = "0xD07304")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF684", Offset = "0xACF684")]
			add
			{
			}
			[Token(Token = "0x60016A7")]
			[Address(RVA = "0xD073BC", Offset = "0xD073BC", VA = "0xD073BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF694", Offset = "0xACF694")]
			remove
			{
			}
		}

		[Token(Token = "0x14000095")]
		public static event FishTakenAction OnFishTaken
		{
			[Token(Token = "0x60016A8")]
			[Address(RVA = "0xD07474", Offset = "0xD07474", VA = "0xD07474")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF6A4", Offset = "0xACF6A4")]
			add
			{
			}
			[Token(Token = "0x60016A9")]
			[Address(RVA = "0xD0752C", Offset = "0xD0752C", VA = "0xD0752C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF6B4", Offset = "0xACF6B4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000096")]
		public static event FishReleaseAction OnFishReleased
		{
			[Token(Token = "0x60016AA")]
			[Address(RVA = "0xD075E4", Offset = "0xD075E4", VA = "0xD075E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF6C4", Offset = "0xACF6C4")]
			add
			{
			}
			[Token(Token = "0x60016AB")]
			[Address(RVA = "0xD0769C", Offset = "0xD0769C", VA = "0xD0769C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF6D4", Offset = "0xACF6D4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000097")]
		public static event FishKeepAction OnFishKept
		{
			[Token(Token = "0x60016AC")]
			[Address(RVA = "0xD07754", Offset = "0xD07754", VA = "0xD07754")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF6E4", Offset = "0xACF6E4")]
			add
			{
			}
			[Token(Token = "0x60016AD")]
			[Address(RVA = "0xD0780C", Offset = "0xD0780C", VA = "0xD0780C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF6F4", Offset = "0xACF6F4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000098")]
		public static event FishLostAction OnFishLost
		{
			[Token(Token = "0x60016AE")]
			[Address(RVA = "0xD078C4", Offset = "0xD078C4", VA = "0xD078C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF704", Offset = "0xACF704")]
			add
			{
			}
			[Token(Token = "0x60016AF")]
			[Address(RVA = "0xD0797C", Offset = "0xD0797C", VA = "0xD0797C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF714", Offset = "0xACF714")]
			remove
			{
			}
		}

		[Token(Token = "0x14000099")]
		public static event PatternPlayStarted OnPatternPlayStarted
		{
			[Token(Token = "0x60016B0")]
			[Address(RVA = "0xCFEB04", Offset = "0xCFEB04", VA = "0xCFEB04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF724", Offset = "0xACF724")]
			add
			{
			}
			[Token(Token = "0x60016B1")]
			[Address(RVA = "0xCFEF54", Offset = "0xCFEF54", VA = "0xCFEF54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF734", Offset = "0xACF734")]
			remove
			{
			}
		}

		[Token(Token = "0x1400009A")]
		public static event MissionLoadAction OnMissionLoad
		{
			[Token(Token = "0x60016B2")]
			[Address(RVA = "0xCF6650", Offset = "0xCF6650", VA = "0xCF6650")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF744", Offset = "0xACF744")]
			add
			{
			}
			[Token(Token = "0x60016B3")]
			[Address(RVA = "0xCF6CC4", Offset = "0xCF6CC4", VA = "0xCF6CC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF754", Offset = "0xACF754")]
			remove
			{
			}
		}

		[Token(Token = "0x1400009B")]
		public static event MissionConfirmedAction OnMissionConfirmed
		{
			[Token(Token = "0x60016B4")]
			[Address(RVA = "0xD07A34", Offset = "0xD07A34", VA = "0xD07A34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF764", Offset = "0xACF764")]
			add
			{
			}
			[Token(Token = "0x60016B5")]
			[Address(RVA = "0xD07AEC", Offset = "0xD07AEC", VA = "0xD07AEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF774", Offset = "0xACF774")]
			remove
			{
			}
		}

		[Token(Token = "0x1400009C")]
		public static event TimedMissionSetupedAction OnTimedMissionSetuped
		{
			[Token(Token = "0x60016B6")]
			[Address(RVA = "0xD07BA4", Offset = "0xD07BA4", VA = "0xD07BA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF784", Offset = "0xACF784")]
			add
			{
			}
			[Token(Token = "0x60016B7")]
			[Address(RVA = "0xD07C5C", Offset = "0xD07C5C", VA = "0xD07C5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF794", Offset = "0xACF794")]
			remove
			{
			}
		}

		[Token(Token = "0x1400009D")]
		public static event TimedMissionUpdateTimerAction OnTimedMissionUpdateTimer
		{
			[Token(Token = "0x60016B8")]
			[Address(RVA = "0xD07D14", Offset = "0xD07D14", VA = "0xD07D14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF7A4", Offset = "0xACF7A4")]
			add
			{
			}
			[Token(Token = "0x60016B9")]
			[Address(RVA = "0xD07DCC", Offset = "0xD07DCC", VA = "0xD07DCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF7B4", Offset = "0xACF7B4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400009E")]
		public static event MissionFailedAction OnMissionFailed
		{
			[Token(Token = "0x60016BA")]
			[Address(RVA = "0xD07E84", Offset = "0xD07E84", VA = "0xD07E84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF7C4", Offset = "0xACF7C4")]
			add
			{
			}
			[Token(Token = "0x60016BB")]
			[Address(RVA = "0xD07F3C", Offset = "0xD07F3C", VA = "0xD07F3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF7D4", Offset = "0xACF7D4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400009F")]
		public static event FishOPediaFishUnlockedAction OnFishUnlocked
		{
			[Token(Token = "0x60016BC")]
			[Address(RVA = "0xD07FF4", Offset = "0xD07FF4", VA = "0xD07FF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF7E4", Offset = "0xACF7E4")]
			add
			{
			}
			[Token(Token = "0x60016BD")]
			[Address(RVA = "0xD080AC", Offset = "0xD080AC", VA = "0xD080AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF7F4", Offset = "0xACF7F4")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A0")]
		public static event FishOPediaFishWeightUpdatedAction OnFishRecordWeightUpdated
		{
			[Token(Token = "0x60016BE")]
			[Address(RVA = "0xD08164", Offset = "0xD08164", VA = "0xD08164")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF804", Offset = "0xACF804")]
			add
			{
			}
			[Token(Token = "0x60016BF")]
			[Address(RVA = "0xD0821C", Offset = "0xD0821C", VA = "0xD0821C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF814", Offset = "0xACF814")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A1")]
		public static event FishOPediaFishTotalWeightUpdatedAction OnFishTotalWeightUpdated
		{
			[Token(Token = "0x60016C0")]
			[Address(RVA = "0xD082D4", Offset = "0xD082D4", VA = "0xD082D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF824", Offset = "0xACF824")]
			add
			{
			}
			[Token(Token = "0x60016C1")]
			[Address(RVA = "0xD0838C", Offset = "0xD0838C", VA = "0xD0838C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF834", Offset = "0xACF834")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A2")]
		public static event ItemCraftingUnlockedAction OnItemCraftUnlocked
		{
			[Token(Token = "0x60016C2")]
			[Address(RVA = "0xD08444", Offset = "0xD08444", VA = "0xD08444")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF844", Offset = "0xACF844")]
			add
			{
			}
			[Token(Token = "0x60016C3")]
			[Address(RVA = "0xD084FC", Offset = "0xD084FC", VA = "0xD084FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF854", Offset = "0xACF854")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A3")]
		public static event SaveCraftingSceneStatAction OnSaveCraftingSceneStat
		{
			[Token(Token = "0x60016C4")]
			[Address(RVA = "0xD085B4", Offset = "0xD085B4", VA = "0xD085B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF864", Offset = "0xACF864")]
			add
			{
			}
			[Token(Token = "0x60016C5")]
			[Address(RVA = "0xD0866C", Offset = "0xD0866C", VA = "0xD0866C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF874", Offset = "0xACF874")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A4")]
		public static event SaveAquariumSceneStatAction OnSaveAquariumSceneStat
		{
			[Token(Token = "0x60016C6")]
			[Address(RVA = "0xD08724", Offset = "0xD08724", VA = "0xD08724")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF884", Offset = "0xACF884")]
			add
			{
			}
			[Token(Token = "0x60016C7")]
			[Address(RVA = "0xD087DC", Offset = "0xD087DC", VA = "0xD087DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF894", Offset = "0xACF894")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A5")]
		public static event CharmCraftingUnlockedAction OnCharmCraftUnlocked
		{
			[Token(Token = "0x60016C8")]
			[Address(RVA = "0xD08894", Offset = "0xD08894", VA = "0xD08894")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF8A4", Offset = "0xACF8A4")]
			add
			{
			}
			[Token(Token = "0x60016C9")]
			[Address(RVA = "0xD0894C", Offset = "0xD0894C", VA = "0xD0894C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF8B4", Offset = "0xACF8B4")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A6")]
		public static event BoostTimerUpdateAction OnBoostUpdated
		{
			[Token(Token = "0x60016CA")]
			[Address(RVA = "0xCF0688", Offset = "0xCF0688", VA = "0xCF0688")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF8C4", Offset = "0xACF8C4")]
			add
			{
			}
			[Token(Token = "0x60016CB")]
			[Address(RVA = "0xCF0808", Offset = "0xCF0808", VA = "0xCF0808")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF8D4", Offset = "0xACF8D4")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A7")]
		public static event MissionUpdatedAction OnMissionUpdated
		{
			[Token(Token = "0x60016CC")]
			[Address(RVA = "0xD08A04", Offset = "0xD08A04", VA = "0xD08A04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF8E4", Offset = "0xACF8E4")]
			add
			{
			}
			[Token(Token = "0x60016CD")]
			[Address(RVA = "0xD08ABC", Offset = "0xD08ABC", VA = "0xD08ABC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF8F4", Offset = "0xACF8F4")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A8")]
		public static event MissionRewardGotAction OnMissionRewardGot
		{
			[Token(Token = "0x60016CE")]
			[Address(RVA = "0xCFC5A0", Offset = "0xCFC5A0", VA = "0xCFC5A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF904", Offset = "0xACF904")]
			add
			{
			}
			[Token(Token = "0x60016CF")]
			[Address(RVA = "0xCFCC6C", Offset = "0xCFCC6C", VA = "0xCFCC6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF914", Offset = "0xACF914")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A9")]
		public static event DismissTakeFishUIAction OnDismissTakeFishUI
		{
			[Token(Token = "0x60016D0")]
			[Address(RVA = "0xD08B74", Offset = "0xD08B74", VA = "0xD08B74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF924", Offset = "0xACF924")]
			add
			{
			}
			[Token(Token = "0x60016D1")]
			[Address(RVA = "0xD08C2C", Offset = "0xD08C2C", VA = "0xD08C2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF934", Offset = "0xACF934")]
			remove
			{
			}
		}

		[Token(Token = "0x140000AA")]
		public static event FishPoolChangedAction OnFishPoolChanged
		{
			[Token(Token = "0x60016D2")]
			[Address(RVA = "0xCF328C", Offset = "0xCF328C", VA = "0xCF328C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF944", Offset = "0xACF944")]
			add
			{
			}
			[Token(Token = "0x60016D3")]
			[Address(RVA = "0xCF3444", Offset = "0xCF3444", VA = "0xCF3444")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF954", Offset = "0xACF954")]
			remove
			{
			}
		}

		[Token(Token = "0x140000AB")]
		public static event FishPoolRestockAction OnFishPoolRestock
		{
			[Token(Token = "0x60016D4")]
			[Address(RVA = "0xD08CE4", Offset = "0xD08CE4", VA = "0xD08CE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF964", Offset = "0xACF964")]
			add
			{
			}
			[Token(Token = "0x60016D5")]
			[Address(RVA = "0xD08D9C", Offset = "0xD08D9C", VA = "0xD08D9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF974", Offset = "0xACF974")]
			remove
			{
			}
		}

		[Token(Token = "0x140000AC")]
		public static event SceneLoadFinishedAction OnSceneLoadFinished
		{
			[Token(Token = "0x60016D6")]
			[Address(RVA = "0xCF958C", Offset = "0xCF958C", VA = "0xCF958C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF984", Offset = "0xACF984")]
			add
			{
			}
			[Token(Token = "0x60016D7")]
			[Address(RVA = "0xCF9EB0", Offset = "0xCF9EB0", VA = "0xCF9EB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF994", Offset = "0xACF994")]
			remove
			{
			}
		}

		[Token(Token = "0x140000AD")]
		public static event SceneLoadFadeFinishedAction OnSceneLoadFadeFinished
		{
			[Token(Token = "0x60016D8")]
			[Address(RVA = "0xD08E54", Offset = "0xD08E54", VA = "0xD08E54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF9A4", Offset = "0xACF9A4")]
			add
			{
			}
			[Token(Token = "0x60016D9")]
			[Address(RVA = "0xD08F0C", Offset = "0xD08F0C", VA = "0xD08F0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF9B4", Offset = "0xACF9B4")]
			remove
			{
			}
		}

		[Token(Token = "0x140000AE")]
		public static event CutsceneLoadAction OnCutsceneLoaded
		{
			[Token(Token = "0x60016DA")]
			[Address(RVA = "0xCFC378", Offset = "0xCFC378", VA = "0xCFC378")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF9C4", Offset = "0xACF9C4")]
			add
			{
			}
			[Token(Token = "0x60016DB")]
			[Address(RVA = "0xCFCA44", Offset = "0xCFCA44", VA = "0xCFCA44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF9D4", Offset = "0xACF9D4")]
			remove
			{
			}
		}

		[Token(Token = "0x140000AF")]
		public static event CutsceneUnloadAction OnCutsceneUnloaded
		{
			[Token(Token = "0x60016DC")]
			[Address(RVA = "0xD08FC4", Offset = "0xD08FC4", VA = "0xD08FC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF9E4", Offset = "0xACF9E4")]
			add
			{
			}
			[Token(Token = "0x60016DD")]
			[Address(RVA = "0xD0907C", Offset = "0xD0907C", VA = "0xD0907C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACF9F4", Offset = "0xACF9F4")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B0")]
		public static event CutsceneStartedAction OnCutsceneStarted
		{
			[Token(Token = "0x60016DE")]
			[Address(RVA = "0xD09134", Offset = "0xD09134", VA = "0xD09134")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFA04", Offset = "0xACFA04")]
			add
			{
			}
			[Token(Token = "0x60016DF")]
			[Address(RVA = "0xD091EC", Offset = "0xD091EC", VA = "0xD091EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFA14", Offset = "0xACFA14")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B1")]
		public static event CutsceneFinishedAction OnCutsceneFinished
		{
			[Token(Token = "0x60016E0")]
			[Address(RVA = "0xD092A4", Offset = "0xD092A4", VA = "0xD092A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFA24", Offset = "0xACFA24")]
			add
			{
			}
			[Token(Token = "0x60016E1")]
			[Address(RVA = "0xD0935C", Offset = "0xD0935C", VA = "0xD0935C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFA34", Offset = "0xACFA34")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B2")]
		public static event CutsceneTimelinePausedAction OnCutsceneTimelinePaused
		{
			[Token(Token = "0x60016E2")]
			[Address(RVA = "0xD09414", Offset = "0xD09414", VA = "0xD09414")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFA44", Offset = "0xACFA44")]
			add
			{
			}
			[Token(Token = "0x60016E3")]
			[Address(RVA = "0xD094CC", Offset = "0xD094CC", VA = "0xD094CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFA54", Offset = "0xACFA54")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B3")]
		public static event CutsceneTimelineResumedAction OnCutsceneTimelineResumed
		{
			[Token(Token = "0x60016E4")]
			[Address(RVA = "0xD09584", Offset = "0xD09584", VA = "0xD09584")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFA64", Offset = "0xACFA64")]
			add
			{
			}
			[Token(Token = "0x60016E5")]
			[Address(RVA = "0xD0963C", Offset = "0xD0963C", VA = "0xD0963C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFA74", Offset = "0xACFA74")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B4")]
		public static event CutsceneTimelineFinishedAction OnCutsceneTimelineFinished
		{
			[Token(Token = "0x60016E6")]
			[Address(RVA = "0xD096F4", Offset = "0xD096F4", VA = "0xD096F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFA84", Offset = "0xACFA84")]
			add
			{
			}
			[Token(Token = "0x60016E7")]
			[Address(RVA = "0xD097AC", Offset = "0xD097AC", VA = "0xD097AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFA94", Offset = "0xACFA94")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B5")]
		public static event ReelInMinigameStartedAction OnReelInMinigameStarted
		{
			[Token(Token = "0x60016E8")]
			[Address(RVA = "0xD09864", Offset = "0xD09864", VA = "0xD09864")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFAA4", Offset = "0xACFAA4")]
			add
			{
			}
			[Token(Token = "0x60016E9")]
			[Address(RVA = "0xD0991C", Offset = "0xD0991C", VA = "0xD0991C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFAB4", Offset = "0xACFAB4")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B6")]
		public static event CastArmedAction OnCastArmed
		{
			[Token(Token = "0x60016EA")]
			[Address(RVA = "0xD099D4", Offset = "0xD099D4", VA = "0xD099D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFAC4", Offset = "0xACFAC4")]
			add
			{
			}
			[Token(Token = "0x60016EB")]
			[Address(RVA = "0xD09A8C", Offset = "0xD09A8C", VA = "0xD09A8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFAD4", Offset = "0xACFAD4")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B7")]
		public static event CastTargetHitAction OnCastTargetHit
		{
			[Token(Token = "0x60016EC")]
			[Address(RVA = "0xD09B44", Offset = "0xD09B44", VA = "0xD09B44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFAE4", Offset = "0xACFAE4")]
			add
			{
			}
			[Token(Token = "0x60016ED")]
			[Address(RVA = "0xD09BFC", Offset = "0xD09BFC", VA = "0xD09BFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFAF4", Offset = "0xACFAF4")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B8")]
		public static event TensionOverAlertAction OnTensionOverAlert
		{
			[Token(Token = "0x60016EE")]
			[Address(RVA = "0xD09CB4", Offset = "0xD09CB4", VA = "0xD09CB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFB04", Offset = "0xACFB04")]
			add
			{
			}
			[Token(Token = "0x60016EF")]
			[Address(RVA = "0xD09D6C", Offset = "0xD09D6C", VA = "0xD09D6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFB14", Offset = "0xACFB14")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B9")]
		public static event TensionUnderAlertAction OnTensionUnderAlert
		{
			[Token(Token = "0x60016F0")]
			[Address(RVA = "0xD09E24", Offset = "0xD09E24", VA = "0xD09E24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFB24", Offset = "0xACFB24")]
			add
			{
			}
			[Token(Token = "0x60016F1")]
			[Address(RVA = "0xD09EDC", Offset = "0xD09EDC", VA = "0xD09EDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFB34", Offset = "0xACFB34")]
			remove
			{
			}
		}

		[Token(Token = "0x140000BA")]
		public static event ReturnMainMenuAction OnReturnMainMenu
		{
			[Token(Token = "0x60016F2")]
			[Address(RVA = "0xCFC4E8", Offset = "0xCFC4E8", VA = "0xCFC4E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFB44", Offset = "0xACFB44")]
			add
			{
			}
			[Token(Token = "0x60016F3")]
			[Address(RVA = "0xCFCBB4", Offset = "0xCFCBB4", VA = "0xCFCBB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFB54", Offset = "0xACFB54")]
			remove
			{
			}
		}

		[Token(Token = "0x140000BB")]
		public static event TakeTutCompleteRewardAction OnTakeTutCompleteReward
		{
			[Token(Token = "0x60016F4")]
			[Address(RVA = "0xCFED2C", Offset = "0xCFED2C", VA = "0xCFED2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFB64", Offset = "0xACFB64")]
			add
			{
			}
			[Token(Token = "0x60016F5")]
			[Address(RVA = "0xCFF17C", Offset = "0xCFF17C", VA = "0xCFF17C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFB74", Offset = "0xACFB74")]
			remove
			{
			}
		}

		[Token(Token = "0x140000BC")]
		public static event SetPopVisibilityAction OnSetPopVisibility
		{
			[Token(Token = "0x60016F6")]
			[Address(RVA = "0xD09F94", Offset = "0xD09F94", VA = "0xD09F94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFB84", Offset = "0xACFB84")]
			add
			{
			}
			[Token(Token = "0x60016F7")]
			[Address(RVA = "0xD0A04C", Offset = "0xD0A04C", VA = "0xD0A04C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFB94", Offset = "0xACFB94")]
			remove
			{
			}
		}

		[Token(Token = "0x140000BD")]
		public static event SetPopFlyToRightAction OnSetPopFly
		{
			[Token(Token = "0x60016F8")]
			[Address(RVA = "0xD0A104", Offset = "0xD0A104", VA = "0xD0A104")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFBA4", Offset = "0xACFBA4")]
			add
			{
			}
			[Token(Token = "0x60016F9")]
			[Address(RVA = "0xD0A1BC", Offset = "0xD0A1BC", VA = "0xD0A1BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFBB4", Offset = "0xACFBB4")]
			remove
			{
			}
		}

		[Token(Token = "0x140000BE")]
		public static event ClearCutsceneViaButtonAction OnClearCutsceneViaButton
		{
			[Token(Token = "0x60016FA")]
			[Address(RVA = "0xCFC710", Offset = "0xCFC710", VA = "0xCFC710")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFBC4", Offset = "0xACFBC4")]
			add
			{
			}
			[Token(Token = "0x60016FB")]
			[Address(RVA = "0xCFCDDC", Offset = "0xCFCDDC", VA = "0xCFCDDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFBD4", Offset = "0xACFBD4")]
			remove
			{
			}
		}

		[Token(Token = "0x140000BF")]
		public static event BoostReadyAction OnBoostReady
		{
			[Token(Token = "0x60016FC")]
			[Address(RVA = "0xD0A274", Offset = "0xD0A274", VA = "0xD0A274")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFBE4", Offset = "0xACFBE4")]
			add
			{
			}
			[Token(Token = "0x60016FD")]
			[Address(RVA = "0xD0A32C", Offset = "0xD0A32C", VA = "0xD0A32C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFBF4", Offset = "0xACFBF4")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C0")]
		public static event StartBoostAction OnStartBoost
		{
			[Token(Token = "0x60016FE")]
			[Address(RVA = "0xCF9364", Offset = "0xCF9364", VA = "0xCF9364")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFC04", Offset = "0xACFC04")]
			add
			{
			}
			[Token(Token = "0x60016FF")]
			[Address(RVA = "0xCF9F68", Offset = "0xCF9F68", VA = "0xCF9F68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFC14", Offset = "0xACFC14")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C1")]
		public static event StopBoostAction OnStopBoost
		{
			[Token(Token = "0x6001700")]
			[Address(RVA = "0xCF941C", Offset = "0xCF941C", VA = "0xCF941C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFC24", Offset = "0xACFC24")]
			add
			{
			}
			[Token(Token = "0x6001701")]
			[Address(RVA = "0xCFA020", Offset = "0xCFA020", VA = "0xCFA020")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFC34", Offset = "0xACFC34")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C2")]
		public static event FailedBoostAction OnFailedBoost
		{
			[Token(Token = "0x6001702")]
			[Address(RVA = "0xCF94D4", Offset = "0xCF94D4", VA = "0xCF94D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFC44", Offset = "0xACFC44")]
			add
			{
			}
			[Token(Token = "0x6001703")]
			[Address(RVA = "0xD0A3E4", Offset = "0xD0A3E4", VA = "0xD0A3E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFC54", Offset = "0xACFC54")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C3")]
		public static event CraftingMinigameActivateAction OnCraftingMinigameActivate
		{
			[Token(Token = "0x6001704")]
			[Address(RVA = "0xCFBAC8", Offset = "0xCFBAC8", VA = "0xCFBAC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFC64", Offset = "0xACFC64")]
			add
			{
			}
			[Token(Token = "0x6001705")]
			[Address(RVA = "0xCFBBF0", Offset = "0xCFBBF0", VA = "0xCFBBF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFC74", Offset = "0xACFC74")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C4")]
		public static event NewChallengePanelDismissedAction OnNewChallengePanelDismissed
		{
			[Token(Token = "0x6001706")]
			[Address(RVA = "0xCFC658", Offset = "0xCFC658", VA = "0xCFC658")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFC84", Offset = "0xACFC84")]
			add
			{
			}
			[Token(Token = "0x6001707")]
			[Address(RVA = "0xCFCD24", Offset = "0xCFCD24", VA = "0xCFCD24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFC94", Offset = "0xACFC94")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C5")]
		public static event FishRewardsSequenceFinished OnFishRewardsSequenceFinished
		{
			[Token(Token = "0x6001708")]
			[Address(RVA = "0xCFEC74", Offset = "0xCFEC74", VA = "0xCFEC74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFCA4", Offset = "0xACFCA4")]
			add
			{
			}
			[Token(Token = "0x6001709")]
			[Address(RVA = "0xCFF0C4", Offset = "0xCFF0C4", VA = "0xCFF0C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFCB4", Offset = "0xACFCB4")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C6")]
		public static event PlaceFishInAquariumAction OnPlaceFishInAquarium
		{
			[Token(Token = "0x600170A")]
			[Address(RVA = "0xD0A49C", Offset = "0xD0A49C", VA = "0xD0A49C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFCC4", Offset = "0xACFCC4")]
			add
			{
			}
			[Token(Token = "0x600170B")]
			[Address(RVA = "0xD0A554", Offset = "0xD0A554", VA = "0xD0A554")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFCD4", Offset = "0xACFCD4")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C7")]
		public static event AquariumCutsceneDismissedAction OnAquariumCutsceneDismissed
		{
			[Token(Token = "0x600170C")]
			[Address(RVA = "0xD0A60C", Offset = "0xD0A60C", VA = "0xD0A60C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFCE4", Offset = "0xACFCE4")]
			add
			{
			}
			[Token(Token = "0x600170D")]
			[Address(RVA = "0xD0A6C4", Offset = "0xD0A6C4", VA = "0xD0A6C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFCF4", Offset = "0xACFCF4")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C8")]
		public static event ReachedFinalCutsceneAction OnReachedFinalCutscene
		{
			[Token(Token = "0x600170E")]
			[Address(RVA = "0xCFC7C8", Offset = "0xCFC7C8", VA = "0xCFC7C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFD04", Offset = "0xACFD04")]
			add
			{
			}
			[Token(Token = "0x600170F")]
			[Address(RVA = "0xD0A77C", Offset = "0xD0A77C", VA = "0xD0A77C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFD14", Offset = "0xACFD14")]
			remove
			{
			}
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0xD0A834", Offset = "0xD0A834", VA = "0xD0A834")]
		public static void FishCaught(FpFish fish, bool isCheating = false)
		{
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0xD0A8D8", Offset = "0xD0A8D8", VA = "0xD0A8D8")]
		public static void SummonFishingPad()
		{
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0xD0A93C", Offset = "0xD0A93C", VA = "0xD0A93C")]
		public static void FishPadClosed()
		{
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0xD0A9A0", Offset = "0xD0A9A0", VA = "0xD0A9A0")]
		public static void GrabRod()
		{
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0xD0AA04", Offset = "0xD0AA04", VA = "0xD0AA04")]
		public static void ReleaseRod()
		{
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0xD0AA68", Offset = "0xD0AA68", VA = "0xD0AA68")]
		public static void GrabReel()
		{
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0xD0AACC", Offset = "0xD0AACC", VA = "0xD0AACC")]
		public static void ReleaseReel()
		{
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0xD0AB30", Offset = "0xD0AB30", VA = "0xD0AB30")]
		public static void PlayerSettingChanged(PlayerSetting setting)
		{
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0xD0AB9C", Offset = "0xD0AB9C", VA = "0xD0AB9C")]
		public static void Mission_TutorialClear(MissionSO mission, bool isCheating = false)
		{
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0xCFE340", Offset = "0xCFE340", VA = "0xCFE340")]
		public static void Mission_CutsceneClear(MissionSO mission, bool isCheating = false)
		{
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0xD0AC80", Offset = "0xD0AC80", VA = "0xD0AC80")]
		public static void Mission_FishPadClear(MissionSO mission, bool isCheating = false)
		{
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0xD0AD00", Offset = "0xD0AD00", VA = "0xD0AD00")]
		public static void FishCanHook()
		{
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0xD0AD64", Offset = "0xD0AD64", VA = "0xD0AD64")]
		public static void FishHooked()
		{
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0xD0ADC8", Offset = "0xD0ADC8", VA = "0xD0ADC8")]
		public static void FishCanRecover()
		{
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0xD0AE2C", Offset = "0xD0AE2C", VA = "0xD0AE2C")]
		public static void BobberRecover()
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0xD0AE90", Offset = "0xD0AE90", VA = "0xD0AE90")]
		public static void ItemGot(ItemSO itemSO, int amount)
		{
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0xD0AF64", Offset = "0xD0AF64", VA = "0xD0AF64")]
		public static void FishTake(FpFish fish)
		{
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0xD0AFD0", Offset = "0xD0AFD0", VA = "0xD0AFD0")]
		public static void FishRelease(FpFish fish)
		{
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0xD0B0B8", Offset = "0xD0B0B8", VA = "0xD0B0B8")]
		public static void FishKeep(FpFish fish)
		{
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0xD0B198", Offset = "0xD0B198", VA = "0xD0B198")]
		public static void FishLost(FpFish fish)
		{
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0xD0B04C", Offset = "0xD0B04C", VA = "0xD0B04C")]
		public static void PlayerXPGet(int xp)
		{
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0xD0B204", Offset = "0xD0B204", VA = "0xD0B204")]
		public static void PlayerLevelUp(int level)
		{
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0xD0B270", Offset = "0xD0B270", VA = "0xD0B270")]
		public static void MissionLoad(MissionSO mission)
		{
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0xD0B2DC", Offset = "0xD0B2DC", VA = "0xD0B2DC")]
		public static void MissionChanged(MissionSO mission)
		{
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0xD0B348", Offset = "0xD0B348", VA = "0xD0B348")]
		public static void SideMissionAccepted(MissionSO mission)
		{
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0xD0B3B4", Offset = "0xD0B3B4", VA = "0xD0B3B4")]
		public static void ChallengeMissionAccepted(MissionSO mission)
		{
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0xD0B420", Offset = "0xD0B420", VA = "0xD0B420")]
		public static void MissionCompleted(MissionSO mission, bool isCheating = false)
		{
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0xD0B4CC", Offset = "0xD0B4CC", VA = "0xD0B4CC")]
		public static void MissionConfirmed(MissionSO mission)
		{
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0xD0B538", Offset = "0xD0B538", VA = "0xD0B538")]
		public static void MissionFailed(MissionSO mission)
		{
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0xD0B5A4", Offset = "0xD0B5A4", VA = "0xD0B5A4")]
		public static void TimedMissionSetuped(float time)
		{
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0xD0B61C", Offset = "0xD0B61C", VA = "0xD0B61C")]
		public static void TimedMissionUpdateTimer(float time)
		{
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0xD0B694", Offset = "0xD0B694", VA = "0xD0B694")]
		public static void FishUnlocked(FpFish fishType)
		{
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0xD0B700", Offset = "0xD0B700", VA = "0xD0B700")]
		public static void FishRecordWeightUpdated(FpFish fishType)
		{
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0xD0B76C", Offset = "0xD0B76C", VA = "0xD0B76C")]
		public static void FishTotalWeightUpdated(FishOPediaController.FishOPedia_ fishOPedia)
		{
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0xD0B7D8", Offset = "0xD0B7D8", VA = "0xD0B7D8")]
		public static void ItemCraftingUnlocked(bool locked)
		{
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0xCFE4D4", Offset = "0xCFE4D4", VA = "0xCFE4D4")]
		public static void SaveCraftingSceneStat()
		{
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0xCFE538", Offset = "0xCFE538", VA = "0xCFE538")]
		public static void SaveAquariumSceneStat()
		{
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0xD0B844", Offset = "0xD0B844", VA = "0xD0B844")]
		public static void CharmCraftingUnlocked(bool locked)
		{
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0xD0B8B0", Offset = "0xD0B8B0", VA = "0xD0B8B0")]
		public static void BoostUpdate(float val)
		{
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0xD0B928", Offset = "0xD0B928", VA = "0xD0B928")]
		public static void NotificationTrigger()
		{
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0xD0AC1C", Offset = "0xD0AC1C", VA = "0xD0AC1C")]
		public static void MissionRewardGet()
		{
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0xD0B98C", Offset = "0xD0B98C", VA = "0xD0B98C")]
		public static void DismissTakeFishUI()
		{
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0xD0B9F0", Offset = "0xD0B9F0", VA = "0xD0B9F0")]
		public static void PlayerTournmentPointGet(int tp)
		{
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0xD04EB4", Offset = "0xD04EB4", VA = "0xD04EB4")]
		public static void PlayerRodEquip(RodSO rod)
		{
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0xD04F20", Offset = "0xD04F20", VA = "0xD04F20")]
		public static void PlayerLureEquip(LureSO lure)
		{
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0xD04F8C", Offset = "0xD04F8C", VA = "0xD04F8C")]
		public static void PlayerCharmEquip(CharmSO charm)
		{
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0xD0BA5C", Offset = "0xD0BA5C", VA = "0xD0BA5C")]
		public static void FishPoolChange()
		{
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0xD0BAC0", Offset = "0xD0BAC0", VA = "0xD0BAC0")]
		public static void FishPoolRestock()
		{
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0xD0BB24", Offset = "0xD0BB24", VA = "0xD0BB24")]
		public static void ItemCrafting(CraftingRecipesSO craftingRecipe)
		{
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0xD0BB90", Offset = "0xD0BB90", VA = "0xD0BB90")]
		public static void SceneLoadFinish()
		{
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0xD0BBF4", Offset = "0xD0BBF4", VA = "0xD0BBF4")]
		public static void SceneLoadFadeFinish()
		{
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0xCFF5E0", Offset = "0xCFF5E0", VA = "0xCFF5E0")]
		public static void CutsceneLoad()
		{
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0xCFE59C", Offset = "0xCFE59C", VA = "0xCFE59C")]
		public static void CutsceneUnload()
		{
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0xCFCE98", Offset = "0xCFCE98", VA = "0xCFCE98")]
		public static void CutsceneStart()
		{
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0xCFCF04", Offset = "0xCFCF04", VA = "0xCFCF04")]
		public static void CutsceneFinish(bool isSpecialCutscene)
		{
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0xD0BC58", Offset = "0xD0BC58", VA = "0xD0BC58")]
		public static void CutsceneTimelinePause()
		{
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0xD0BCBC", Offset = "0xD0BCBC", VA = "0xD0BCBC")]
		public static void CutsceneTimelineResume()
		{
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0xD0BD20", Offset = "0xD0BD20", VA = "0xD0BD20")]
		public static void CutsceneTimelineFinish()
		{
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0xCFE7A8", Offset = "0xCFE7A8", VA = "0xCFE7A8")]
		public static void TeleportEnable()
		{
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0xCFE930", Offset = "0xCFE930", VA = "0xCFE930")]
		public static void TeleportDisable()
		{
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0xD0BD84", Offset = "0xD0BD84", VA = "0xD0BD84")]
		public static void PlayerLocationChange()
		{
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0xD0BDE8", Offset = "0xD0BDE8", VA = "0xD0BDE8")]
		public static void PlayerSnapSuccess()
		{
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0xD0BE4C", Offset = "0xD0BE4C", VA = "0xD0BE4C")]
		public static void SideMissionQuit()
		{
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0xD0BEB0", Offset = "0xD0BEB0", VA = "0xD0BEB0")]
		public static void ChallengeMissionQuit()
		{
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0xD0BF14", Offset = "0xD0BF14", VA = "0xD0BF14")]
		public static void ReelInMinigameStart()
		{
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0xCF56B4", Offset = "0xCF56B4", VA = "0xCF56B4")]
		public static void CastTargetHit()
		{
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0xD0BF78", Offset = "0xD0BF78", VA = "0xD0BF78")]
		public static void CastArmed()
		{
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0xD0BFDC", Offset = "0xD0BFDC", VA = "0xD0BFDC")]
		public static void TensionUnderAlert()
		{
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0xD0C040", Offset = "0xD0C040", VA = "0xD0C040")]
		public static void TensionOverAlert()
		{
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0xD0C0A4", Offset = "0xD0C0A4", VA = "0xD0C0A4")]
		public static void ReturnMainMenu()
		{
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0xD0C108", Offset = "0xD0C108", VA = "0xD0C108")]
		public static void TakeTutCompleteReward()
		{
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0xD0C16C", Offset = "0xD0C16C", VA = "0xD0C16C")]
		public static void SetPopVisibility(bool state)
		{
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0xD0C1D8", Offset = "0xD0C1D8", VA = "0xD0C1D8")]
		public static void SetPopFly(bool state)
		{
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0xCFF85C", Offset = "0xCFF85C", VA = "0xCFF85C")]
		public static void ClearCutsceneViaButton()
		{
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0xCF0AD8", Offset = "0xCF0AD8", VA = "0xCF0AD8")]
		public static void BoostReady()
		{
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0xD0C244", Offset = "0xD0C244", VA = "0xD0C244")]
		public static void StartBoost()
		{
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0xD0C2A8", Offset = "0xD0C2A8", VA = "0xD0C2A8")]
		public static void StopBoost()
		{
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0xD0C30C", Offset = "0xD0C30C", VA = "0xD0C30C")]
		public static void FailedBoost()
		{
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0xD0C370", Offset = "0xD0C370", VA = "0xD0C370")]
		public static void CraftingMiniGameActivate(bool state)
		{
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0xD0C3DC", Offset = "0xD0C3DC", VA = "0xD0C3DC")]
		public static void NewChallengePanelDismissed()
		{
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0xD0C440", Offset = "0xD0C440", VA = "0xD0C440")]
		public static void StartedPatternPlay()
		{
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0xD0C4A4", Offset = "0xD0C4A4", VA = "0xD0C4A4")]
		public static void FishRewardsSeqFinished()
		{
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0xD0C508", Offset = "0xD0C508", VA = "0xD0C508")]
		public static void PlaceFishInAquarium()
		{
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0xCFF2B0", Offset = "0xCFF2B0", VA = "0xCFF2B0")]
		public static void AquariumCutsceneDismissed()
		{
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0xD0C56C", Offset = "0xD0C56C", VA = "0xD0C56C")]
		public static void ReachedFinalCutscene()
		{
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0xD0C5D0", Offset = "0xD0C5D0", VA = "0xD0C5D0")]
		public static void ClearAll()
		{
		}
	}
	[Token(Token = "0x2000348")]
	public static class FFR
	{
		[Token(Token = "0x6001766")]
		[Address(RVA = "0xE6A008", Offset = "0xE6A008", VA = "0xE6A008")]
		public static void SetLevel(int lvl)
		{
		}

		[Token(Token = "0x6001767")]
		[Address(RVA = "0xE6A0E4", Offset = "0xE6A0E4", VA = "0xE6A0E4")]
		internal static string GetFFRLevelText()
		{
			return null;
		}
	}
	[Token(Token = "0x2000349")]
	public enum Stations
	{
		[Token(Token = "0x4001876")]
		CharmCrafter,
		[Token(Token = "0x4001877")]
		ItemCrafter,
		[Token(Token = "0x4001878")]
		Aquarium
	}
	[Token(Token = "0x200034A")]
	public class StationController : MonoBehaviour
	{
		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static StationController instance;

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject itemCraftingStation;

		[Token(Token = "0x6001768")]
		[Address(RVA = "0xD137E8", Offset = "0xD137E8", VA = "0xD137E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0xD13844", Offset = "0xD13844", VA = "0xD13844")]
		public static void ShowPanels()
		{
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0xD1395C", Offset = "0xD1395C", VA = "0xD1395C")]
		public static void ShowCraftingUI(bool state)
		{
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0xD139C8", Offset = "0xD139C8", VA = "0xD139C8")]
		public StationController()
		{
		}
	}
	[Token(Token = "0x200034B")]
	public class SubstituteTutPop : MonoBehaviour
	{
		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject LocalPop;

		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioFollower popAudioFollower;

		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PlayableDirector director;

		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PlayableAsset asset;

		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float tweenDuration;

		[Token(Token = "0x600176C")]
		[Address(RVA = "0xD139D0", Offset = "0xD139D0", VA = "0xD139D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0xD13F78", Offset = "0xD13F78", VA = "0xD13F78")]
		public SubstituteTutPop()
		{
		}
	}
	[Token(Token = "0x200034C")]
	public class SubtitlesBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SubtitlesSO subData;

		[Token(Token = "0x600176E")]
		[Address(RVA = "0xD140D8", Offset = "0xD140D8", VA = "0xD140D8", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0xD143D0", Offset = "0xD143D0", VA = "0xD143D0")]
		public SubtitlesBehaviour()
		{
		}
	}
	[Token(Token = "0x200034D")]
	public class SubtitlesClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SubtitlesBehaviour template;

		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SubtitlesSO subData;

		[Token(Token = "0x170001EC")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x6001770")]
			[Address(RVA = "0xD143D8", Offset = "0xD143D8", VA = "0xD143D8", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0xD143E0", Offset = "0xD143E0", VA = "0xD143E0", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0xD144C4", Offset = "0xD144C4", VA = "0xD144C4")]
		public SubtitlesClip()
		{
		}
	}
	[Token(Token = "0x200034E")]
	public class SubtitlesController : MonoBehaviour
	{
		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI subtitlesText;

		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string subtitlesContent;

		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject subtitlesBG;

		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string currentLanguageCode;

		[Token(Token = "0x6001773")]
		[Address(RVA = "0xD14538", Offset = "0xD14538", VA = "0xD14538")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0xD14168", Offset = "0xD14168", VA = "0xD14168")]
		public void TextLineOnUpdate(SubtitlesSO subtitles)
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0xD14658", Offset = "0xD14658", VA = "0xD14658")]
		public SubtitlesController()
		{
		}
	}
	[Token(Token = "0x200034F")]
	public class SubtitlesMixerBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x6001776")]
		[Address(RVA = "0xD146B8", Offset = "0xD146B8", VA = "0xD146B8", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0xD147E4", Offset = "0xD147E4", VA = "0xD147E4")]
		public SubtitlesMixerBehaviour()
		{
		}
	}
	[Token(Token = "0x2000350")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xAC03EC", Offset = "0xAC03EC")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xAC03EC", Offset = "0xAC03EC")]
	[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0xAC03EC", Offset = "0xAC03EC")]
	public class SubtitlesTrack : TrackAsset
	{
		[Token(Token = "0x6001778")]
		[Address(RVA = "0xD147FC", Offset = "0xD147FC", VA = "0xD147FC", Slot = "24")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0xD14894", Offset = "0xD14894", VA = "0xD14894")]
		public SubtitlesTrack()
		{
		}
	}
	[Token(Token = "0x2000351")]
	public class SummonFishingPad : MonoBehaviour
	{
		[Token(Token = "0x600177A")]
		[Address(RVA = "0xD148FC", Offset = "0xD148FC", VA = "0xD148FC")]
		public void SummonFP()
		{
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0xD14904", Offset = "0xD14904", VA = "0xD14904")]
		public SummonFishingPad()
		{
		}
	}
	[Token(Token = "0x2000352")]
	public class TakeTutCompleteRewardButton : MonoBehaviour
	{
		[Token(Token = "0x600177C")]
		[Address(RVA = "0xD14978", Offset = "0xD14978", VA = "0xD14978")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0xD14F80", Offset = "0xD14F80", VA = "0xD14F80")]
		public void OnClick()
		{
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0xD14F88", Offset = "0xD14F88", VA = "0xD14F88")]
		public TakeTutCompleteRewardButton()
		{
		}
	}
	[Token(Token = "0x2000353")]
	public class TeleportHotspotVisibility : MonoBehaviour
	{
		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Hotspot;

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject hotspotMarker;

		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject NavigateArrow;

		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool isUnlocked;

		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string UnlockBCID;

		[Token(Token = "0x600177F")]
		[Address(RVA = "0xD15D44", Offset = "0xD15D44", VA = "0xD15D44")]
		private void Start()
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0xD15FAC", Offset = "0xD15FAC", VA = "0xD15FAC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0xD15DC0", Offset = "0xD15DC0", VA = "0xD15DC0")]
		private void InitHotSpot()
		{
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0xD16020", Offset = "0xD16020", VA = "0xD16020")]
		private void UnlockHotSpot()
		{
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0xD1602C", Offset = "0xD1602C", VA = "0xD1602C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0xD1604C", Offset = "0xD1604C", VA = "0xD1604C")]
		public void SetUnlockVisible(bool visible)
		{
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0xD16088", Offset = "0xD16088", VA = "0xD16088")]
		public void SetVisible(bool visible)
		{
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0xD15708", Offset = "0xD15708", VA = "0xD15708")]
		public void OnSelectExit()
		{
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0xD160C4", Offset = "0xD160C4", VA = "0xD160C4")]
		public TeleportHotspotVisibility()
		{
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0xD160CC", Offset = "0xD160CC", VA = "0xD160CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFD24", Offset = "0xACFD24")]
		private bool <InitHotSpot>b__7_0(MissionProgress x)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000354")]
	public class TensionDebug : MonoBehaviour
	{
		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Slider sliderRiseNormal;

		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Slider sliderRisePatternPlay;

		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Slider sliderRiseRunRage;

		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Slider sliderFallNormal;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Slider sliderFallPatternPlay;

		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Slider sliderFallRunRage;

		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TextMeshProUGUI sliderRiseNormalValText;

		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public TextMeshProUGUI sliderRisePatternPlayValText;

		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TextMeshProUGUI sliderRiseRunRageValText;

		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TextMeshProUGUI sliderFallNormalValText;

		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TextMeshProUGUI sliderFallPatternPlayValText;

		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public TextMeshProUGUI sliderFallRunRageValText;

		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float val;

		[Token(Token = "0x6001789")]
		[Address(RVA = "0xD160F0", Offset = "0xD160F0", VA = "0xD160F0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0xD160F4", Offset = "0xD160F4", VA = "0xD160F4")]
		private void InitSliders()
		{
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0xD16490", Offset = "0xD16490", VA = "0xD16490")]
		public void OnValueChanged(Slider slider)
		{
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0xD169BC", Offset = "0xD169BC", VA = "0xD169BC")]
		public void ResetDefaults()
		{
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0xD16A38", Offset = "0xD16A38", VA = "0xD16A38")]
		public TensionDebug()
		{
		}
	}
	[Token(Token = "0x2000355")]
	public class TitleCardRenderScale : MonoBehaviour
	{
		[Token(Token = "0x600178E")]
		[Address(RVA = "0xD195BC", Offset = "0xD195BC", VA = "0xD195BC")]
		private void Start()
		{
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0xD195C8", Offset = "0xD195C8", VA = "0xD195C8")]
		public TitleCardRenderScale()
		{
		}
	}
	[Token(Token = "0x2000356")]
	public class ToggleActivation : MonoBehaviour
	{
		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] objectsToToggleOnOff;

		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool defaulEnabled;

		[Token(Token = "0x6001790")]
		[Address(RVA = "0xD195D0", Offset = "0xD195D0", VA = "0xD195D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0xD1965C", Offset = "0xD1965C", VA = "0xD1965C")]
		public void OnClick()
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0xD19700", Offset = "0xD19700", VA = "0xD19700")]
		public ToggleActivation()
		{
		}
	}
	[Token(Token = "0x2000357")]
	public class TransformFollower : MonoBehaviour
	{
		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform transformToFollow;

		[Token(Token = "0x6001793")]
		[Address(RVA = "0xD19708", Offset = "0xD19708", VA = "0xD19708")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0xD197A8", Offset = "0xD197A8", VA = "0xD197A8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0xD197F4", Offset = "0xD197F4", VA = "0xD197F4")]
		public TransformFollower()
		{
		}
	}
	[Token(Token = "0x2000358")]
	public class TugOfWar : MonoBehaviour
	{
		[Token(Token = "0x6001796")]
		[Address(RVA = "0xD197FC", Offset = "0xD197FC", VA = "0xD197FC")]
		public TugOfWar()
		{
		}
	}
	[Token(Token = "0x2000359")]
	public class TutCompleteChallengePanels : MonoBehaviour
	{
		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject challengeCompletePanel;

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject newChallengePanel;

		[Token(Token = "0x6001797")]
		[Address(RVA = "0xD19804", Offset = "0xD19804", VA = "0xD19804")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0xD19848", Offset = "0xD19848", VA = "0xD19848")]
		public void OnClickChallengeComplete()
		{
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0xD19904", Offset = "0xD19904", VA = "0xD19904")]
		private void ShowNewChallengePanel()
		{
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0xD199C4", Offset = "0xD199C4", VA = "0xD199C4")]
		public void OnClickNewChallenge()
		{
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0xD199CC", Offset = "0xD199CC", VA = "0xD199CC")]
		public TutCompleteChallengePanels()
		{
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0xD199D4", Offset = "0xD199D4", VA = "0xD199D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFD34", Offset = "0xACFD34")]
		private void <OnClickChallengeComplete>b__3_0()
		{
		}
	}
	[Token(Token = "0x200035A")]
	public class UI_QualityController : MonoBehaviour
	{
		[Token(Token = "0x20005D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC14C0", Offset = "0xAC14C0")]
		private sealed class <Init>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UI_QualityController <>4__this;

			[Token(Token = "0x1700037D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022F8")]
				[Address(RVA = "0xE10720", Offset = "0xE10720", VA = "0xE10720", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700037E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022FA")]
				[Address(RVA = "0xE10788", Offset = "0xE10788", VA = "0xE10788", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022F5")]
			[Address(RVA = "0xE103E4", Offset = "0xE103E4", VA = "0xE103E4")]
			[DebuggerHidden]
			public <Init>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x60022F6")]
			[Address(RVA = "0xE1042C", Offset = "0xE1042C", VA = "0xE1042C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022F7")]
			[Address(RVA = "0xE10430", Offset = "0xE10430", VA = "0xE10430", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022F9")]
			[Address(RVA = "0xE10728", Offset = "0xE10728", VA = "0xE10728", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Slider BuildInRP_Slider;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float BuildInRP_MinValue;

		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float BuildInRP_MaxValue;

		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TMP_Text BuildInRP_SliderValue_Text;

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TMP_Text FFR_Quality_Text;

		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int FFR_Quality;

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int FFR_Quality_Max;

		[Token(Token = "0x600179D")]
		[Address(RVA = "0xE100BC", Offset = "0xE100BC", VA = "0xE100BC")]
		private void Start()
		{
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0xE10164", Offset = "0xE10164", VA = "0xE10164")]
		public void OnBuildInRPQualityRenderScaleUp()
		{
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0xE10228", Offset = "0xE10228", VA = "0xE10228")]
		public void OnBuildInRPQualityRenderScaleDown()
		{
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0xE101A0", Offset = "0xE101A0", VA = "0xE101A0")]
		private void BuildInRPQulityRenderScaleTextChange()
		{
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0xE10264", Offset = "0xE10264", VA = "0xE10264")]
		private void InitBuiltInQualityRenderScale()
		{
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0xE102D4", Offset = "0xE102D4", VA = "0xE102D4")]
		public void OnFFRUp()
		{
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0xE10384", Offset = "0xE10384", VA = "0xE10384")]
		public void OnFFRDown()
		{
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0xE102EC", Offset = "0xE102EC", VA = "0xE102EC")]
		private void OnFFRChanged()
		{
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0xE103A4", Offset = "0xE103A4", VA = "0xE103A4")]
		private void InitFFRChangeText()
		{
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0xE100E8", Offset = "0xE100E8", VA = "0xE100E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACFD44", Offset = "0xACFD44")]
		private IEnumerator Init()
		{
			return null;
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0xE10410", Offset = "0xE10410", VA = "0xE10410")]
		public UI_QualityController()
		{
		}
	}
	[Token(Token = "0x200035B")]
	public class UI_TakeFishController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005D2")]
		public struct LootBox
		{
			[Token(Token = "0x4001F87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject LootBoxInfo;

			[Token(Token = "0x4001F88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Image icon;

			[Token(Token = "0x4001F89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Localize name;

			[Token(Token = "0x4001F8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ParticleSystem particle;

			[Token(Token = "0x4001F8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TMP_Text amount;
		}

		[Serializable]
		[Token(Token = "0x20005D3")]
		public struct RewardItem
		{
			[Token(Token = "0x4001F8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject panel;

			[Token(Token = "0x4001F8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Image icon;

			[Token(Token = "0x4001F8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Localize name;

			[Token(Token = "0x4001F8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ParticleSystem particle;

			[Token(Token = "0x4001F90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TMP_Text amount;
		}

		[Serializable]
		[Token(Token = "0x20005D4")]
		public struct MissionRewardItem
		{
			[Token(Token = "0x4001F91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject panel;

			[Token(Token = "0x4001F92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Image icon;

			[Token(Token = "0x4001F93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TMP_Text nameAmount;

			[Token(Token = "0x4001F94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MissionRewardBGSelect bgSelect;
		}

		[Token(Token = "0x20005D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC14D0", Offset = "0xAC14D0")]
		private sealed class <>c__DisplayClass93_0
		{
			[Token(Token = "0x4001F95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float currentValue;

			[Token(Token = "0x4001F96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UI_TakeFishController <>4__this;

			[Token(Token = "0x60022FB")]
			[Address(RVA = "0xE1474C", Offset = "0xE1474C", VA = "0xE1474C")]
			public <>c__DisplayClass93_0()
			{
			}
		}

		[Token(Token = "0x20005D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC14E0", Offset = "0xAC14E0")]
		private sealed class <>c__DisplayClass93_1
		{
			[Token(Token = "0x4001F97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float increasedValue;

			[Token(Token = "0x4001F98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass93_0 CS$<>8__locals1;

			[Token(Token = "0x60022FC")]
			[Address(RVA = "0xE14754", Offset = "0xE14754", VA = "0xE14754")]
			public <>c__DisplayClass93_1()
			{
			}

			[Token(Token = "0x60022FD")]
			[Address(RVA = "0xE17E24", Offset = "0xE17E24", VA = "0xE17E24")]
			internal float <EventHub_OnFishCaught>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x60022FE")]
			[Address(RVA = "0xE17E2C", Offset = "0xE17E2C", VA = "0xE17E2C")]
			internal void <EventHub_OnFishCaught>b__1(float x)
			{
			}

			[Token(Token = "0x60022FF")]
			[Address(RVA = "0xE17E34", Offset = "0xE17E34", VA = "0xE17E34")]
			internal void <EventHub_OnFishCaught>b__2()
			{
			}
		}

		[Token(Token = "0x20005D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC14F0", Offset = "0xAC14F0")]
		private sealed class <>c__DisplayClass110_0
		{
			[Token(Token = "0x4001F99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 coinFlyOutPos;

			[Token(Token = "0x4001F9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UI_TakeFishController <>4__this;

			[Token(Token = "0x4001F9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FishTypeSO.Resources[] resources;

			[Token(Token = "0x6002300")]
			[Address(RVA = "0xE163B0", Offset = "0xE163B0", VA = "0xE163B0")]
			public <>c__DisplayClass110_0()
			{
			}

			[Token(Token = "0x6002301")]
			[Address(RVA = "0xE16CBC", Offset = "0xE16CBC", VA = "0xE16CBC")]
			internal void <PlayGettingFishVFX>b__0()
			{
			}

			[Token(Token = "0x6002302")]
			[Address(RVA = "0xE17944", Offset = "0xE17944", VA = "0xE17944")]
			internal void <PlayGettingFishVFX>b__1()
			{
			}

			[Token(Token = "0x6002303")]
			[Address(RVA = "0xE17AA0", Offset = "0xE17AA0", VA = "0xE17AA0")]
			internal void <PlayGettingFishVFX>b__2()
			{
			}

			[Token(Token = "0x6002304")]
			[Address(RVA = "0xE17C70", Offset = "0xE17C70", VA = "0xE17C70")]
			internal void <PlayGettingFishVFX>b__3()
			{
			}
		}

		[Token(Token = "0x20005D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1500", Offset = "0xAC1500")]
		private sealed class <>c__DisplayClass110_1
		{
			[Token(Token = "0x4001F9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform coin;

			[Token(Token = "0x4001F9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass110_0 CS$<>8__locals1;

			[Token(Token = "0x6002305")]
			[Address(RVA = "0xE163B8", Offset = "0xE163B8", VA = "0xE163B8")]
			public <>c__DisplayClass110_1()
			{
			}

			[Token(Token = "0x6002306")]
			[Address(RVA = "0xE17CDC", Offset = "0xE17CDC", VA = "0xE17CDC")]
			internal void <PlayGettingFishVFX>b__4()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1510", Offset = "0xAC1510")]
		private struct <PlayUnboxingVFX>d__114 : IAsyncStateMachine
		{
			[Token(Token = "0x4001F9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001F9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001FA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UI_TakeFishController <>4__this;

			[Token(Token = "0x6002307")]
			[Address(RVA = "0xE17E7C", Offset = "0xE17E7C", VA = "0xE17E7C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002308")]
			[Address(RVA = "0xE18310", Offset = "0xE18310", VA = "0xE18310", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20005DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1520", Offset = "0xAC1520")]
		private sealed class <>c__DisplayClass119_0
		{
			[Token(Token = "0x4001FA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform rt;

			[Token(Token = "0x6002309")]
			[Address(RVA = "0xE1668C", Offset = "0xE1668C", VA = "0xE1668C")]
			public <>c__DisplayClass119_0()
			{
			}
		}

		[Token(Token = "0x20005DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1530", Offset = "0xAC1530")]
		private sealed class <>c__DisplayClass119_1
		{
			[Token(Token = "0x4001FA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 outPos;

			[Token(Token = "0x4001FA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public <>c__DisplayClass119_0 CS$<>8__locals1;

			[Token(Token = "0x600230A")]
			[Address(RVA = "0xE16694", Offset = "0xE16694", VA = "0xE16694")]
			public <>c__DisplayClass119_1()
			{
			}

			[Token(Token = "0x600230B")]
			[Address(RVA = "0xE17DF0", Offset = "0xE17DF0", VA = "0xE17DF0")]
			internal void <HideUi>b__0()
			{
			}
		}

		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Canvas Canvas;

		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform FishModelPoint;

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Button KeepButton;

		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Button ReleaseButton;

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Canvas RewardCanvas;

		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioSource RewardSfx;

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private CanvasGroup ChargeRewardPanel;

		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TMP_Text ChargeRewarded;

		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TMP_Text ChargeReadout;

		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private CanvasGroup FishingRewardPanel;

		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private CanvasGroup LootboxRewardPanel;

		[Token(Token = "0x40018B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC7E18", Offset = "0xAC7E18")]
		[SerializeField]
		private Canvas ChallengeCompleteCanvas;

		[Token(Token = "0x40018B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private TMP_Text ChallengeCompleteNameText;

		[Token(Token = "0x40018B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private TMP_Text ChallengeCompleteDescriptionText;

		[Token(Token = "0x40018B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Canvas NewChallengeCanvas;

		[Token(Token = "0x40018B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private TMP_Text NewChallengeNameText;

		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private TMP_Text NewChallengeDescriptionText;

		[Token(Token = "0x40018B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC7EB4", Offset = "0xAC7EB4")]
		[SerializeField]
		private GameObject MissionProgress;

		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Slider Charge_Slider;

		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private TMP_Text XP_LevelNumber;

		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private TMP_Text XP_NextLevelNumber;

		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private GameObject ChallengeMissionPanel;

		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Localize ChallengeMissionTitle;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private Localize ChallengeMissionDescription;

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Slider ChallengeMissionTargetSlider;

		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private GameObject ChallengeMissionTargetsPanel;

		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private MissionTarget[] ChallengeMissionTargets;

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private GameObject JobMissionPanel;

		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private Localize JobMissionTitle;

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private GameObject JobMissionTargetsPanel;

		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private MissionTarget[] JobMissionTargets;

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private GameObject TakeFishPanel;

		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private GameObject TakeLootboxPanel;

		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC7FF0", Offset = "0xAC7FF0")]
		[SerializeField]
		private Localize FishName;

		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private Image FishGradeIcon;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private GameObject ChargeInfo;

		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private Localize ChargeLabel;

		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private TMP_Text ChargeToBeGainedText;

		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private Image[] Stars;

		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private GameObject WeightLengthInfo;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private Localize Weight;

		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private TMP_Text Weight_Text;

		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private Color WeightColor;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private Color BonusWeightColor;

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private Image Weight_Charm1;

		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private Image Weight_Charm2;

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private Image Weight_Icon;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		private Localize Length;

		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private TMP_Text Length_Text;

		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private Localize PreviousRecord;

		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		private Image[] RecordStars;

		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[SerializeField]
		private Localize RecordWeight;

		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		private TMP_Text RecordWeight_Text;

		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		private Localize RecordLength;

		[Token(Token = "0x40018DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		private TMP_Text RecordLength_Text;

		[Token(Token = "0x40018DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		private GameObject TournamentPointInfo;

		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		private Localize TournamentPoint;

		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		private TMP_Text TournamentPoint_Text;

		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		private Localize TournamentScore;

		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[SerializeField]
		private TMP_Text TournamentScore_Text;

		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[SerializeField]
		private GameObject ResourceInfo;

		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[SerializeField]
		private LootBox[] Resources;

		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[SerializeField]
		private TMP_Text KeepChargeToBeGained;

		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[SerializeField]
		private Image NewIcon;

		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		[SerializeField]
		private MissionSO SpreeusCrafterMission;

		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAC822C", Offset = "0xAC822C")]
		[SerializeField]
		private RewardItem[] FishingRewards;

		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[SerializeField]
		private LootBox[] LootBoxes;

		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		[SerializeField]
		private MissionRewardItem[] MissionRewards;

		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[SerializeField]
		private RewardItem[] NewChallengeRewards;

		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		[SerializeField]
		private MakeResourceCoin makeResourceCoin;

		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		[SerializeField]
		private Transform resourceCoinRotator;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private List<Transform> resourceCoins;

		[Token(Token = "0x40018ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public Vector3 fishPosition;

		[Token(Token = "0x40018EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		[SerializeField]
		private Transform boostPointVFXPrefab;

		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		[SerializeField]
		private SpawnPool vfxPool;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private List<Transform> bpVFXs;

		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private FpFish m_fish;

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private Transform m_fishModel;

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private bool missionCompleted;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private Dictionary<MissionSO, bool> m_ShowedMissionDic;

		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private float m_heightOffset;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private Tween scaleTween;

		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private int substitutedBoostPoints;

		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
		private float keepBoostPts;

		[Token(Token = "0x170001ED")]
		private MissionSO m_completedMission
		{
			[Token(Token = "0x60017A8")]
			[Address(RVA = "0xE132A4", Offset = "0xE132A4", VA = "0xE132A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0xE132AC", Offset = "0xE132AC", VA = "0xE132AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0xE13390", Offset = "0xE13390", VA = "0xE13390")]
		private void Start()
		{
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0xE135A0", Offset = "0xE135A0", VA = "0xE135A0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0xE13684", Offset = "0xE13684", VA = "0xE13684")]
		private void OnMissionSkipped(MissionSO mission)
		{
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0xE13688", Offset = "0xE13688", VA = "0xE13688")]
		private void EventHub_OnFishCaught(FpFish fish, bool isCheating)
		{
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0xE134BC", Offset = "0xE134BC", VA = "0xE134BC")]
		private void FillUpXPInfo()
		{
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0xE13B68", Offset = "0xE13B68", VA = "0xE13B68")]
		private void FillUpProgressInfo(MissionSO challenge)
		{
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0xE1475C", Offset = "0xE1475C", VA = "0xE1475C")]
		public void SetHeight()
		{
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0xE13F84", Offset = "0xE13F84", VA = "0xE13F84")]
		private void FillUpFishableInfo()
		{
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0xE1482C", Offset = "0xE1482C", VA = "0xE1482C")]
		private void FillUpResources(FishTypeSO.Resources[] resources)
		{
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0xE14C4C", Offset = "0xE14C4C", VA = "0xE14C4C")]
		private void FillUpFishingRewards(FishTypeSO.Resources[] resources)
		{
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0xE14F9C", Offset = "0xE14F9C", VA = "0xE14F9C")]
		private void FillUpResourceCoins(FishTypeSO.Resources[] resources)
		{
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0xE1525C", Offset = "0xE1525C", VA = "0xE1525C")]
		private void FillUpLootboxRewards(ItemSO[] items)
		{
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0xE1547C", Offset = "0xE1547C", VA = "0xE1547C")]
		private void FillUpMissionRewards(MissionRewardItem[] rewardsArray, MissionSO.Reward[] missionRewards)
		{
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0xE157B0", Offset = "0xE157B0", VA = "0xE157B0")]
		public void OnKeep()
		{
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0xE15D4C", Offset = "0xE15D4C", VA = "0xE15D4C")]
		public void OnRelease()
		{
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0xE15E24", Offset = "0xE15E24", VA = "0xE15E24")]
		public void OnOpenLootbox()
		{
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0xE15FB0", Offset = "0xE15FB0", VA = "0xE15FB0")]
		public void OnReceiveMissionRewards()
		{
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0xE16074", Offset = "0xE16074", VA = "0xE16074")]
		private void ShowNewChallengePanel()
		{
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0xE161BC", Offset = "0xE161BC", VA = "0xE161BC")]
		public void OnDismissNewChallengePanel()
		{
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0xE1613C", Offset = "0xE1613C", VA = "0xE1613C")]
		private void FillNewChallangeCanvas()
		{
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0xE15A28", Offset = "0xE15A28", VA = "0xE15A28")]
		private void PlayGettingFishVFX()
		{
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0xE16444", Offset = "0xE16444", VA = "0xE16444")]
		private void PlayGettingBoostPointsFX()
		{
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0xE16448", Offset = "0xE16448", VA = "0xE16448")]
		private void UpdateBoostDisplay(float currentBoost, float increasedBoost)
		{
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0xE1644C", Offset = "0xE1644C", VA = "0xE1644C")]
		private void MissionCompletedSFX()
		{
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0xE15EE8", Offset = "0xE15EE8", VA = "0xE15EE8")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xACFDA8", Offset = "0xACFDA8")]
		private void PlayUnboxingVFX()
		{
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0xE14B1C", Offset = "0xE14B1C", VA = "0xE14B1C")]
		private void SetStars(FpFish fish, Image[] stars)
		{
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0xE1588C", Offset = "0xE1588C", VA = "0xE1588C")]
		private void Dismiss()
		{
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0xE16278", Offset = "0xE16278", VA = "0xE16278")]
		private string GetMissionName(MissionSO mission)
		{
			return null;
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0xE16314", Offset = "0xE16314", VA = "0xE16314")]
		private string GetMissionDescription(MissionSO mission)
		{
			return null;
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0xE16450", Offset = "0xE16450", VA = "0xE16450")]
		public void HideUi(bool state)
		{
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0xE1669C", Offset = "0xE1669C", VA = "0xE1669C")]
		private void FillUpBoostPoints(int boostPoint)
		{
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0xE163C0", Offset = "0xE163C0", VA = "0xE163C0")]
		private void AppendShowMissionCompleteCanvas(Sequence sequence)
		{
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0xE166A0", Offset = "0xE166A0", VA = "0xE166A0")]
		private void CheckIsSpreeusLure(CraftingRecipesSO recipe)
		{
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0xE168E0", Offset = "0xE168E0", VA = "0xE168E0")]
		public void FinalFishRewards()
		{
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0xE16760", Offset = "0xE16760", VA = "0xE16760")]
		private void ShowMissionRewards([Optional] MissionSO missionOverride)
		{
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0xE16914", Offset = "0xE16914", VA = "0xE16914")]
		public UI_TakeFishController()
		{
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0xE1699C", Offset = "0xE1699C", VA = "0xE1699C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFE0C", Offset = "0xACFE0C")]
		private void <OnReceiveMissionRewards>b__106_0()
		{
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0xE169A0", Offset = "0xE169A0", VA = "0xE169A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFE1C", Offset = "0xACFE1C")]
		private void <OnDismissNewChallengePanel>b__108_0()
		{
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0xE16A3C", Offset = "0xE16A3C", VA = "0xE16A3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFE2C", Offset = "0xACFE2C")]
		private void <PlayUnboxingVFX>b__114_0()
		{
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0xE16B2C", Offset = "0xE16B2C", VA = "0xE16B2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFE3C", Offset = "0xACFE3C")]
		private void <PlayUnboxingVFX>b__114_1()
		{
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0xE16C40", Offset = "0xE16C40", VA = "0xE16C40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFE4C", Offset = "0xACFE4C")]
		private void <AppendShowMissionCompleteCanvas>b__121_0()
		{
		}
	}
	[Token(Token = "0x200035C")]
	public class UnderwaterLureController : MonoBehaviour
	{
		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ParticleSystem ps;

		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ParticleSystem.ShapeModule psShape;

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystem.MainModule psMain;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Tween radiusTween;

		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float endRadius;

		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float currentRadius;

		[Token(Token = "0x40018FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float time;

		[Token(Token = "0x4001900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform connectedBody;

		[Token(Token = "0x4001901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject bobberModel;

		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform bobberModelLineConnectPoint;

		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform localParent;

		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform lureModelOldParent;

		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform lureModel;

		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 lureModelOriginalScale;

		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Material underwaterLureMat;

		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public LureLineController lureLineController;

		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GameObject lureFX;

		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject lureBeam;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GameObject lureBeamExpanding;

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float lureFxLastActivatedTime;

		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Material[] lureOriginalMats;

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool swapLureMat;

		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int originalLayer;

		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Material lureCylinderMaterial;

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0xE19F5C", Offset = "0xE19F5C", VA = "0xE19F5C")]
		private void Start()
		{
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0xE19FD0", Offset = "0xE19FD0", VA = "0xE19FD0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0xE1A660", Offset = "0xE1A660", VA = "0xE1A660")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0xE1A850", Offset = "0xE1A850", VA = "0xE1A850")]
		public void OpenLureRadius(float attractionRadius)
		{
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0xE1A968", Offset = "0xE1A968", VA = "0xE1A968")]
		public void CloseLureRadius()
		{
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0xE1A9C4", Offset = "0xE1A9C4", VA = "0xE1A9C4")]
		private void DelayCancelBobberAttraction()
		{
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0xE1AA34", Offset = "0xE1AA34", VA = "0xE1AA34")]
		private void UpdateRadius()
		{
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0xE1AA44", Offset = "0xE1AA44", VA = "0xE1AA44")]
		internal void ActivateLureFX(bool isActive, bool showBeam)
		{
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0xE1A528", Offset = "0xE1A528", VA = "0xE1A528")]
		public void ShowBeamSFX(PlayerSetting setting)
		{
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0xE1AB68", Offset = "0xE1AB68", VA = "0xE1AB68")]
		private void DelayDisableLureFX()
		{
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0xE1AB74", Offset = "0xE1AB74", VA = "0xE1AB74")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0xE1A8FC", Offset = "0xE1A8FC", VA = "0xE1A8FC")]
		public void SetLureCylinderColorOpacity(float opacity)
		{
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0xE1ABE8", Offset = "0xE1ABE8", VA = "0xE1ABE8")]
		public UnderwaterLureController()
		{
		}
	}
	[Token(Token = "0x200035D")]
	internal class AesUtil
	{
		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string _key;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string _iv;

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0xD694B8", Offset = "0xD694B8", VA = "0xD694B8")]
		public static byte[] Encrypt(string original)
		{
			return null;
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0xD69AD8", Offset = "0xD69AD8", VA = "0xD69AD8")]
		public static string Decrypt(byte[] encrypted)
		{
			return null;
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0xD69590", Offset = "0xD69590", VA = "0xD69590")]
		private static byte[] EncryptStringToBytes_Aes(string plainText, byte[] Key, byte[] IV)
		{
			return null;
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0xD69BB0", Offset = "0xD69BB0", VA = "0xD69BB0")]
		private static string DecryptStringFromBytes_Aes(byte[] cipherText, byte[] Key, byte[] IV)
		{
			return null;
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0xD6A07C", Offset = "0xD6A07C", VA = "0xD6A07C")]
		public AesUtil()
		{
		}
	}
	[Token(Token = "0x200035E")]
	public class DisplaySliderValue : MonoBehaviour
	{
		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Slider slider;

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TMP_Text text;

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform minValuePosition;

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform maxValuePosition;

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0xD018C0", Offset = "0xD018C0", VA = "0xD018C0")]
		private void Update()
		{
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0xD01A80", Offset = "0xD01A80", VA = "0xD01A80")]
		public DisplaySliderValue()
		{
		}
	}
	[Token(Token = "0x200035F")]
	public class FPSCounter : MonoBehaviour
	{
		[Token(Token = "0x4001917")]
		private const float fpsMeasurePeriod = 0.5f;

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_FpsAccumulator;

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_FpsNextPeriod;

		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_CurrentFps;

		[Token(Token = "0x400191B")]
		private const string display = "{0} FPS";

		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshPro m_Text;

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0xE6A1BC", Offset = "0xE6A1BC", VA = "0xE6A1BC")]
		private void Start()
		{
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0xE6A258", Offset = "0xE6A258", VA = "0xE6A258")]
		private void Update()
		{
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0xE6A384", Offset = "0xE6A384", VA = "0xE6A384")]
		public FPSCounter()
		{
		}
	}
	[Token(Token = "0x2000360")]
	public class FadeText : MonoBehaviour
	{
		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI text;

		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color startColor;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color endColor;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float time;

		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Tween fadeTween;

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0xE6A514", Offset = "0xE6A514", VA = "0xE6A514")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0xE6A568", Offset = "0xE6A568", VA = "0xE6A568")]
		private void DoFade()
		{
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0xE6A634", Offset = "0xE6A634", VA = "0xE6A634")]
		public FadeText()
		{
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0xE6A63C", Offset = "0xE6A63C", VA = "0xE6A63C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFE5C", Offset = "0xACFE5C")]
		private void <DoFade>b__6_0()
		{
		}
	}
	[Token(Token = "0x2000361")]
	public class GestureScrollRect : ScrollRect, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x20005DC")]
		public delegate void NextPageEvent();

		[Token(Token = "0x20005DD")]
		public delegate void PrevicousPageEvent();

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool IsPointEnter;

		[Token(Token = "0x140000C9")]
		public event NextPageEvent OnNextPage
		{
			[Token(Token = "0x60017EF")]
			[Address(RVA = "0xE00108", Offset = "0xE00108", VA = "0xE00108")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFE6C", Offset = "0xACFE6C")]
			add
			{
			}
			[Token(Token = "0x60017F0")]
			[Address(RVA = "0xE001B0", Offset = "0xE001B0", VA = "0xE001B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFE7C", Offset = "0xACFE7C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000CA")]
		public event PrevicousPageEvent OnPreviousPage
		{
			[Token(Token = "0x60017F1")]
			[Address(RVA = "0xE00258", Offset = "0xE00258", VA = "0xE00258")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFE8C", Offset = "0xACFE8C")]
			add
			{
			}
			[Token(Token = "0x60017F2")]
			[Address(RVA = "0xE00300", Offset = "0xE00300", VA = "0xE00300")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFE9C", Offset = "0xACFE9C")]
			remove
			{
			}
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0xE003A8", Offset = "0xE003A8", VA = "0xE003A8", Slot = "44")]
		public override void OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0xE003AC", Offset = "0xE003AC", VA = "0xE003AC", Slot = "46")]
		public override void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0xE003B0", Offset = "0xE003B0", VA = "0xE003B0", Slot = "45")]
		public override void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0xE003B4", Offset = "0xE003B4", VA = "0xE003B4", Slot = "61")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0xE003B8", Offset = "0xE003B8", VA = "0xE003B8", Slot = "62")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0xE003BC", Offset = "0xE003BC", VA = "0xE003BC")]
		private void SnapTurnProviderBase_OnStickTurn(float turnAmount, Handside handside)
		{
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0xE0088C", Offset = "0xE0088C", VA = "0xE0088C")]
		public GestureScrollRect()
		{
		}
	}
	[Token(Token = "0x2000362")]
	public class SaveFileUtils
	{
		[Token(Token = "0x60017FB")]
		[Address(RVA = "0xD57B0C", Offset = "0xD57B0C", VA = "0xD57B0C")]
		public static void ConvertAll()
		{
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0xD57BF8", Offset = "0xD57BF8", VA = "0xD57BF8")]
		private static void Convert(string filePath)
		{
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0xD57E4C", Offset = "0xD57E4C", VA = "0xD57E4C")]
		public static void ConvertAllDebug()
		{
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0xD57F38", Offset = "0xD57F38", VA = "0xD57F38")]
		private static void ConvertDebug(string filePath)
		{
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0xD58258", Offset = "0xD58258", VA = "0xD58258")]
		public SaveFileUtils()
		{
		}
	}
	[Token(Token = "0x2000363")]
	public class SetScaleBasedOnDistance : MonoBehaviour
	{
		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float minScale;

		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float maxScale;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RectTransform guageUi;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float maxDistance;

		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float minDistance;

		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve curve;

		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float currentScale;

		[Token(Token = "0x6001800")]
		[Address(RVA = "0xD6261C", Offset = "0xD6261C", VA = "0xD6261C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0xD626A8", Offset = "0xD626A8", VA = "0xD626A8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0xD62984", Offset = "0xD62984", VA = "0xD62984")]
		public SetScaleBasedOnDistance()
		{
		}
	}
	[Token(Token = "0x2000364")]
	public class SmoothFollowHeadset : MonoBehaviour
	{
		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC8338", Offset = "0xAC8338")]
		[SerializeField]
		private float distance;

		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC8384", Offset = "0xAC8384")]
		[SerializeField]
		private float height;

		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC83D0", Offset = "0xAC83D0")]
		[SerializeField]
		private float rotateSpeed;

		[Token(Token = "0x400192F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC841C", Offset = "0xAC841C")]
		[SerializeField]
		private float laziness;

		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform hmd;

		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 lastHmdPos;

		[Token(Token = "0x6001803")]
		[Address(RVA = "0xD108B0", Offset = "0xD108B0", VA = "0xD108B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0xD10944", Offset = "0xD10944", VA = "0xD10944")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0xD109D8", Offset = "0xD109D8", VA = "0xD109D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0xD10B8C", Offset = "0xD10B8C", VA = "0xD10B8C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0xD10D28", Offset = "0xD10D28", VA = "0xD10D28")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0xD111F4", Offset = "0xD111F4", VA = "0xD111F4")]
		private void Player_OnLocationChanged(LocationSO location, bool fromShip)
		{
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0xD10A74", Offset = "0xD10A74", VA = "0xD10A74")]
		private void InitializeTransform()
		{
		}

		[Token(Token = "0x600180A")]
		[Address(RVA = "0xD111BC", Offset = "0xD111BC", VA = "0xD111BC")]
		private float GetSightHeight()
		{
			return default(float);
		}

		[Token(Token = "0x600180B")]
		[Address(RVA = "0xD1104C", Offset = "0xD1104C", VA = "0xD1104C")]
		private Vector3 GetTargetPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600180C")]
		[Address(RVA = "0xD111F8", Offset = "0xD111F8", VA = "0xD111F8")]
		private Vector3 GetSightPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600180D")]
		[Address(RVA = "0xD1124C", Offset = "0xD1124C", VA = "0xD1124C")]
		public SmoothFollowHeadset()
		{
		}
	}
	[Token(Token = "0x2000365")]
	public static class Util
	{
		[Token(Token = "0x20005DE")]
		public struct LaunchData
		{
			[Token(Token = "0x4001FA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly Vector3 initialVelocity;

			[Token(Token = "0x4001FA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public readonly float timeToTarget;

			[Token(Token = "0x6002314")]
			[Address(RVA = "0xE1C6CC", Offset = "0xE1C6CC", VA = "0xE1C6CC")]
			public LaunchData(Vector3 initialVelocity, float timeToTarget)
			{
			}
		}

		[Token(Token = "0x170001EE")]
		public static float TargetFramerate
		{
			[Token(Token = "0x600180F")]
			[Address(RVA = "0xE1C298", Offset = "0xE1C298", VA = "0xE1C298")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001EF")]
		public static float FramerateMult
		{
			[Token(Token = "0x6001810")]
			[Address(RVA = "0xE1C2A4", Offset = "0xE1C2A4", VA = "0xE1C2A4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600180E")]
		[Address(RVA = "0xE1C27C", Offset = "0xE1C27C", VA = "0xE1C27C")]
		public static float Map(float x, float in_min, float in_max, float out_min, float out_max)
		{
			return default(float);
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0xE1C2C8", Offset = "0xE1C2C8", VA = "0xE1C2C8")]
		public static Vector3 BallisticVel(Vector3 origin, Vector3 target, float angle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001812")]
		[Address(RVA = "0xE1C4D8", Offset = "0xE1C4D8", VA = "0xE1C4D8")]
		public static LaunchData GetLaunchData(Vector3 target, Vector3 origin, float maxHeight, float gravityScale = 2f)
		{
			return default(LaunchData);
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0xE1C6D8", Offset = "0xE1C6D8", VA = "0xE1C6D8")]
		public static Vector3 PerlinPos(float input, float scale, float seed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0xE1C854", Offset = "0xE1C854", VA = "0xE1C854")]
		public static Vector3 GetSurfacePos(Vector3 underWaterPoint, Vector3 aboveWaterPoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0xE1CB40", Offset = "0xE1CB40", VA = "0xE1CB40")]
		public static Vector3 RandomPatrolTarget(Vector3 org, float minRadius, float maxRadius)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000366")]
	public class VFX : MonoBehaviour
	{
		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static VFX instance;

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SpawnPool vfx;

		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform rippleRingPrefab;

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform smallSplashPrefab;

		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject distanceRipple;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform lootCrateBubblesPrefab;

		[Token(Token = "0x170001F0")]
		public static GameObject DistanceRipple
		{
			[Token(Token = "0x6001816")]
			[Address(RVA = "0xE1CCA4", Offset = "0xE1CCA4", VA = "0xE1CCA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0xE1CD00", Offset = "0xE1CD00", VA = "0xE1CD00")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0xE1CD58", Offset = "0xE1CD58", VA = "0xE1CD58")]
		public static void DoRipple(Vector3 pos, float size)
		{
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0xE1CF14", Offset = "0xE1CF14", VA = "0xE1CF14")]
		internal static void DoSplash(Vector3 pos, float size)
		{
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0xE1D0B4", Offset = "0xE1D0B4", VA = "0xE1D0B4")]
		public static Transform ShowLootCrateBubbles(Vector3 pos)
		{
			return null;
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0xE1D1C8", Offset = "0xE1D1C8", VA = "0xE1D1C8")]
		public static void RemoveLootCrateBubbles(Transform bubbles)
		{
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0xE1D234", Offset = "0xE1D234", VA = "0xE1D234")]
		public VFX()
		{
		}
	}
	[Token(Token = "0x2000367")]
	public class WaterInteractor : MonoBehaviour
	{
		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MeshRenderer water;

		[Token(Token = "0x4001939")]
		private const float rippleDuration = 1f;

		[Token(Token = "0x400193A")]
		private const float rippleRadius = 1f;

		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float rippleTimer;

		[Token(Token = "0x600181D")]
		[Address(RVA = "0xE1D23C", Offset = "0xE1D23C", VA = "0xE1D23C")]
		private void Update()
		{
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0xE1D380", Offset = "0xE1D380", VA = "0xE1D380")]
		public void DoRipple(Vector3 pos, float sizeMultiplier)
		{
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0xE1D4D4", Offset = "0xE1D4D4", VA = "0xE1D4D4")]
		public WaterInteractor()
		{
		}
	}
	[Token(Token = "0x2000368")]
	public class WaterWake : MonoBehaviour
	{
		[Token(Token = "0x20005DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1540", Offset = "0xAC1540")]
		private sealed class <SetScale>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WaterWake <>4__this;

			[Token(Token = "0x4001FA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Arrow dir;

			[Token(Token = "0x4001FAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <i>5__2;

			[Token(Token = "0x1700037F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002318")]
				[Address(RVA = "0xE1DC28", Offset = "0xE1DC28", VA = "0xE1DC28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000380")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600231A")]
				[Address(RVA = "0xE1DC90", Offset = "0xE1DC90", VA = "0xE1DC90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002315")]
			[Address(RVA = "0xE1DA48", Offset = "0xE1DA48", VA = "0xE1DA48")]
			[DebuggerHidden]
			public <SetScale>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002316")]
			[Address(RVA = "0xE1DB44", Offset = "0xE1DB44", VA = "0xE1DB44", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002317")]
			[Address(RVA = "0xE1DB48", Offset = "0xE1DB48", VA = "0xE1DB48", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002319")]
			[Address(RVA = "0xE1DC30", Offset = "0xE1DC30", VA = "0xE1DC30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isActive;

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject wakeUp;

		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject wakeLeft;

		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject wakeRight;

		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject spray;

		[Token(Token = "0x6001820")]
		[Address(RVA = "0xE1D4DC", Offset = "0xE1D4DC", VA = "0xE1D4DC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0xE1D5C0", Offset = "0xE1D5C0", VA = "0xE1D5C0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001822")]
		[Address(RVA = "0xE1D6A4", Offset = "0xE1D6A4", VA = "0xE1D6A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0xE1D8FC", Offset = "0xE1D8FC", VA = "0xE1D8FC")]
		private void Play(Arrow dir)
		{
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0xE1D944", Offset = "0xE1D944", VA = "0xE1D944")]
		private void DisableAll()
		{
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0xE1D9B0", Offset = "0xE1D9B0", VA = "0xE1D9B0")]
		private void Stop()
		{
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0xE1D9B8", Offset = "0xE1D9B8", VA = "0xE1D9B8")]
		private void DirChange(Arrow dir)
		{
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0xE1D908", Offset = "0xE1D908", VA = "0xE1D908")]
		private void SetDir(Arrow dir)
		{
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0xE1D9BC", Offset = "0xE1D9BC", VA = "0xE1D9BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACFEAC", Offset = "0xACFEAC")]
		private IEnumerator SetScale(Arrow dir)
		{
			return null;
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0xE1DA74", Offset = "0xE1DA74", VA = "0xE1DA74")]
		private void SetSprayDir(Arrow dir, Vector3 sprayScale)
		{
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0xE1DB3C", Offset = "0xE1DB3C", VA = "0xE1DB3C")]
		public WaterWake()
		{
		}
	}
}
namespace DigitalRuby.LightningBolt
{
	[Token(Token = "0x2000369")]
	public enum LightningBoltAnimationMode
	{
		[Token(Token = "0x4001942")]
		None,
		[Token(Token = "0x4001943")]
		Random,
		[Token(Token = "0x4001944")]
		Loop,
		[Token(Token = "0x4001945")]
		PingPong
	}
	[Token(Token = "0x200036A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAC0498", Offset = "0xAC0498")]
	public class LightningBoltScript : MonoBehaviour
	{
		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC8488", Offset = "0xAC8488")]
		public GameObject StartObject;

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC84C0", Offset = "0xAC84C0")]
		public Vector3 StartPosition;

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC84F8", Offset = "0xAC84F8")]
		public GameObject EndObject;

		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC8530", Offset = "0xAC8530")]
		public Vector3 EndPosition;

		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC8568", Offset = "0xAC8568")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC8568", Offset = "0xAC8568")]
		public int Generations;

		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC85BC", Offset = "0xAC85BC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC85BC", Offset = "0xAC85BC")]
		public float Duration;

		[Token(Token = "0x400194C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float timer;

		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC8614", Offset = "0xAC8614")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC8614", Offset = "0xAC8614")]
		public float ChaosFactor;

		[Token(Token = "0x400194E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC8668", Offset = "0xAC8668")]
		public bool ManualMode;

		[Token(Token = "0x400194F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC86A0", Offset = "0xAC86A0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC86A0", Offset = "0xAC86A0")]
		public int Rows;

		[Token(Token = "0x4001950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAC86F8", Offset = "0xAC86F8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC86F8", Offset = "0xAC86F8")]
		public int Columns;

		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAC8750", Offset = "0xAC8750")]
		public LightningBoltAnimationMode AnimationMode;

		[NonSerialized]
		[Token(Token = "0x4001952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public System.Random RandomGenerator;

		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private LineRenderer lineRenderer;

		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<KeyValuePair<Vector3, Vector3>> segments;

		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int startIndex;

		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector2 size;

		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2[] offsets;

		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int animationOffsetIndex;

		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int animationPingPongDirection;

		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool orthographic;

		[Token(Token = "0x600182B")]
		[Address(RVA = "0x1074CD8", Offset = "0x1074CD8", VA = "0x1074CD8")]
		private void GetPerpendicularVector(ref Vector3 directionNormalized, out Vector3 side)
		{
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0x1074E84", Offset = "0x1074E84", VA = "0x1074E84")]
		private void GenerateLightningBolt(Vector3 start, Vector3 end, int generation, int totalGenerations, float offsetAmount)
		{
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0x1075280", Offset = "0x1075280", VA = "0x1075280")]
		public void RandomVector(ref Vector3 start, ref Vector3 end, float offsetAmount, out Vector3 result)
		{
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0x10754EC", Offset = "0x10754EC", VA = "0x10754EC")]
		private void SelectOffsetFromAnimationMode()
		{
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0x1075648", Offset = "0x1075648", VA = "0x1075648")]
		private void UpdateLineRenderer()
		{
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0x10757CC", Offset = "0x10757CC", VA = "0x10757CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0x1075A28", Offset = "0x1075A28", VA = "0x1075A28")]
		private void Update()
		{
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0x1075B34", Offset = "0x1075B34", VA = "0x1075B34")]
		public void Trigger()
		{
		}

		[Token(Token = "0x6001833")]
		[Address(RVA = "0x10758BC", Offset = "0x10758BC", VA = "0x10758BC")]
		public void UpdateFromMaterialChange()
		{
		}

		[Token(Token = "0x6001834")]
		[Address(RVA = "0x1075D80", Offset = "0x1075D80", VA = "0x1075D80")]
		public LightningBoltScript()
		{
		}
	}
}
namespace IE.ObjectGlitchShader
{
	[Token(Token = "0x200036B")]
	public class BandGlitchLooper : MonoBehaviour
	{
		[Token(Token = "0x20005E0")]
		private enum LoopType
		{
			[Token(Token = "0x4001FAC")]
			StartOver,
			[Token(Token = "0x4001FAD")]
			PingPong
		}

		[Token(Token = "0x20005E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1550", Offset = "0xAC1550")]
		private sealed class <BandLoop>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BandGlitchLooper <>4__this;

			[Token(Token = "0x4001FB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <looped>5__2;

			[Token(Token = "0x4001FB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <current>5__3;

			[Token(Token = "0x4001FB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <target>5__4;

			[Token(Token = "0x4001FB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private bool <pingPongToggle>5__5;

			[Token(Token = "0x4001FB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
			private bool <increment>5__6;

			[Token(Token = "0x4001FB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <i>5__7;

			[Token(Token = "0x17000381")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600231E")]
				[Address(RVA = "0x11A9564", Offset = "0x11A9564", VA = "0x11A9564", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000382")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002320")]
				[Address(RVA = "0x11A95CC", Offset = "0x11A95CC", VA = "0x11A95CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600231B")]
			[Address(RVA = "0x11A9324", Offset = "0x11A9324", VA = "0x11A9324")]
			[DebuggerHidden]
			public <BandLoop>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x600231C")]
			[Address(RVA = "0x11A935C", Offset = "0x11A935C", VA = "0x11A935C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600231D")]
			[Address(RVA = "0x11A9360", Offset = "0x11A9360", VA = "0x11A9360", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600231F")]
			[Address(RVA = "0x11A956C", Offset = "0x11A956C", VA = "0x11A956C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400195B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Material targetMaterial;

		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LoopType loopType;

		[Token(Token = "0x400195D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int loopCount;

		[Token(Token = "0x400195E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float loopDuration;

		[Token(Token = "0x400195F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float startFill;

		[Token(Token = "0x4001960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float targetFill;

		[Token(Token = "0x4001961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float lastFill;

		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float fillPercentage;

		[Token(Token = "0x6001835")]
		[Address(RVA = "0x11A9230", Offset = "0x11A9230", VA = "0x11A9230")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0x11A92A8", Offset = "0x11A92A8", VA = "0x11A92A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACFF10", Offset = "0xACFF10")]
		private IEnumerator BandLoop()
		{
			return null;
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0x11A9350", Offset = "0x11A9350", VA = "0x11A9350")]
		private void LoopCompleted()
		{
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0x11A9354", Offset = "0x11A9354", VA = "0x11A9354")]
		public BandGlitchLooper()
		{
		}
	}
	[Token(Token = "0x200036C")]
	public class CameraController : MonoBehaviour
	{
		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector2 sensitivity;

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector2 smooth;

		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float minY;

		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float maxY;

		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float speed;

		[Token(Token = "0x4001968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector2 mouseInputs;

		[Token(Token = "0x4001969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector2 smoothedInputs;

		[Token(Token = "0x400196A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector2 refInputs;

		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion thisRotation;

		[Token(Token = "0x6001839")]
		[Address(RVA = "0x11A95D4", Offset = "0x11A95D4", VA = "0x11A95D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0x11A9610", Offset = "0x11A9610", VA = "0x11A9610")]
		private void Update()
		{
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0x11A99EC", Offset = "0x11A99EC", VA = "0x11A99EC")]
		public CameraController()
		{
		}
	}
	[Token(Token = "0x200036D")]
	public class ExamplePropertyController : MonoBehaviour
	{
		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Material targetMaterial;

		[Token(Token = "0x400196D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Slider transitionLengthSlider;

		[Token(Token = "0x400196E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text sliderValueText;

		[Token(Token = "0x400196F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private InputField moveSpeedField;

		[Token(Token = "0x4001970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string sliderProperty;

		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private string inputFieldProperty;

		[Token(Token = "0x600183C")]
		[Address(RVA = "0x11A9A74", Offset = "0x11A9A74", VA = "0x11A9A74")]
		public void SliderChanged()
		{
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0x11A9BA8", Offset = "0x11A9BA8", VA = "0x11A9BA8")]
		public void InputFieldChanged()
		{
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0x11A9C68", Offset = "0x11A9C68", VA = "0x11A9C68")]
		public ExamplePropertyController()
		{
		}
	}
}
namespace I2.Loc
{
	[Token(Token = "0x200036E")]
	public class CallbackNotification : MonoBehaviour
	{
		[Token(Token = "0x600183F")]
		[Address(RVA = "0x14039F8", Offset = "0x14039F8", VA = "0x14039F8")]
		public void OnModifyLocalization()
		{
		}

		[Token(Token = "0x6001840")]
		[Address(RVA = "0x1403B00", Offset = "0x1403B00", VA = "0x1403B00")]
		public CallbackNotification()
		{
		}
	}
	[Token(Token = "0x200036F")]
	public class Example_ChangeLanguage : MonoBehaviour
	{
		[Token(Token = "0x6001841")]
		[Address(RVA = "0x1404054", Offset = "0x1404054", VA = "0x1404054")]
		public void SetLanguage_English()
		{
		}

		[Token(Token = "0x6001842")]
		[Address(RVA = "0x1404144", Offset = "0x1404144", VA = "0x1404144")]
		public void SetLanguage_French()
		{
		}

		[Token(Token = "0x6001843")]
		[Address(RVA = "0x140418C", Offset = "0x140418C", VA = "0x140418C")]
		public void SetLanguage_Spanish()
		{
		}

		[Token(Token = "0x6001844")]
		[Address(RVA = "0x140409C", Offset = "0x140409C", VA = "0x140409C")]
		public void SetLanguage(string LangName)
		{
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0x14041D4", Offset = "0x14041D4", VA = "0x14041D4")]
		public Example_ChangeLanguage()
		{
		}
	}
	[Token(Token = "0x2000370")]
	public class Example_LocalizedString : MonoBehaviour
	{
		[Token(Token = "0x4001972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LocalizedString _MyLocalizedString;

		[Token(Token = "0x4001973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string _NormalString;

		[Token(Token = "0x4001974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TermsPopup", RVA = "0xAC88B8", Offset = "0xAC88B8")]
		public string _StringWithTermPopup;

		[Token(Token = "0x6001846")]
		[Address(RVA = "0x14041DC", Offset = "0x14041DC", VA = "0x14041DC")]
		public void Start()
		{
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0x14044D0", Offset = "0x14044D0", VA = "0x14044D0")]
		public Example_LocalizedString()
		{
		}
	}
	[Token(Token = "0x2000371")]
	public class GlobalParametersExample : RegisterGlobalParameters
	{
		[Token(Token = "0x6001848")]
		[Address(RVA = "0x14044D8", Offset = "0x14044D8", VA = "0x14044D8", Slot = "7")]
		public override string GetParameterValue(string ParamName)
		{
			return null;
		}

		[Token(Token = "0x6001849")]
		[Address(RVA = "0x1404588", Offset = "0x1404588", VA = "0x1404588")]
		public GlobalParametersExample()
		{
		}
	}
	[Token(Token = "0x2000372")]
	public class RealTimeTranslation : MonoBehaviour
	{
		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string OriginalText;

		[Token(Token = "0x4001976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string TranslatedText;

		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool IsTranslating;

		[Token(Token = "0x600184A")]
		[Address(RVA = "0x119E3EC", Offset = "0x119E3EC", VA = "0x119E3EC")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0x119EA40", Offset = "0x119EA40", VA = "0x119EA40")]
		public void StartTranslating(string fromCode, string toCode)
		{
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0x119EC54", Offset = "0x119EC54", VA = "0x119EC54")]
		private void OnTranslationReady(string Translation, string errorMsg)
		{
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0x119ECF0", Offset = "0x119ECF0", VA = "0x119ECF0")]
		public void ExampleMultiTranslations_Blocking()
		{
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0x119EB04", Offset = "0x119EB04", VA = "0x119EB04")]
		public void ExampleMultiTranslations_Async()
		{
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0x119EF08", Offset = "0x119EF08", VA = "0x119EF08")]
		private void OnMultitranslationReady(Dictionary<string, TranslationQuery> dict, string errorMsg)
		{
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0x119F138", Offset = "0x119F138", VA = "0x119F138")]
		public bool IsWaitingForTranslation()
		{
			return default(bool);
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0x119F140", Offset = "0x119F140", VA = "0x119F140")]
		public string GetTranslatedText()
		{
			return null;
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0x119F148", Offset = "0x119F148", VA = "0x119F148")]
		public void SetOriginalText(string text)
		{
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0x119F150", Offset = "0x119F150", VA = "0x119F150")]
		public RealTimeTranslation()
		{
		}
	}
	[Token(Token = "0x2000373")]
	public class RegisterBundlesManager : MonoBehaviour, IResourceManager_Bundles
	{
		[Token(Token = "0x6001854")]
		[Address(RVA = "0x119F1D0", Offset = "0x119F1D0", VA = "0x119F1D0")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0x119F5EC", Offset = "0x119F5EC", VA = "0x119F5EC")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0x119F650", Offset = "0x119F650", VA = "0x119F650", Slot = "5")]
		public virtual UnityEngine.Object LoadFromBundle(string path, Type assetType)
		{
			return null;
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0x119F658", Offset = "0x119F658", VA = "0x119F658")]
		public RegisterBundlesManager()
		{
		}
	}
	[Token(Token = "0x2000374")]
	public class ToggleLanguage : MonoBehaviour
	{
		[Token(Token = "0x6001858")]
		[Address(RVA = "0x11A779C", Offset = "0x11A779C", VA = "0x11A779C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001859")]
		[Address(RVA = "0x11A77F4", Offset = "0x11A77F4", VA = "0x11A77F4")]
		private void test()
		{
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0x11A78A4", Offset = "0x11A78A4", VA = "0x11A78A4")]
		public ToggleLanguage()
		{
		}
	}
	[Token(Token = "0x2000375")]
	public static class PersistentStorage
	{
		[Token(Token = "0x20005E2")]
		public enum eFileType
		{
			[Token(Token = "0x4001FB8")]
			Raw,
			[Token(Token = "0x4001FB9")]
			Persistent,
			[Token(Token = "0x4001FBA")]
			Temporal,
			[Token(Token = "0x4001FBB")]
			Streaming
		}

		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static I2CustomPersistentStorage mStorage;

		[Token(Token = "0x600185B")]
		[Address(RVA = "0x119B8D8", Offset = "0x119B8D8", VA = "0x119B8D8")]
		public static void SetSetting_String(string key, string value)
		{
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0x119B990", Offset = "0x119B990", VA = "0x119B990")]
		public static string GetSetting_String(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0x119BA48", Offset = "0x119BA48", VA = "0x119BA48")]
		public static void DeleteSetting(string key)
		{
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0x119BAF8", Offset = "0x119BAF8", VA = "0x119BAF8")]
		public static bool HasSetting(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0x119BBA8", Offset = "0x119BBA8", VA = "0x119BBA8")]
		public static void ForceSaveSettings()
		{
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0x119BC48", Offset = "0x119BC48", VA = "0x119BC48")]
		public static bool CanAccessFiles()
		{
			return default(bool);
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0x119BCE8", Offset = "0x119BCE8", VA = "0x119BCE8")]
		public static bool SaveFile(eFileType fileType, string fileName, string data, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0x119BDB8", Offset = "0x119BDB8", VA = "0x119BDB8")]
		public static string LoadFile(eFileType fileType, string fileName, bool logExceptions = true)
		{
			return null;
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0x119BE80", Offset = "0x119BE80", VA = "0x119BE80")]
		public static bool DeleteFile(eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0x119BF48", Offset = "0x119BF48", VA = "0x119BF48")]
		public static bool HasFile(eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000376")]
	public abstract class I2BasePersistentStorage
	{
		[Token(Token = "0x6001865")]
		[Address(RVA = "0x140FD04", Offset = "0x140FD04", VA = "0x140FD04", Slot = "4")]
		public virtual void SetSetting_String(string key, string value)
		{
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0x140FFC4", Offset = "0x140FFC4", VA = "0x140FFC4", Slot = "5")]
		public virtual string GetSetting_String(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0x14101F8", Offset = "0x14101F8", VA = "0x14101F8", Slot = "6")]
		public virtual void DeleteSetting(string key)
		{
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0x14103F4", Offset = "0x14103F4", VA = "0x14103F4", Slot = "7")]
		public virtual void ForceSaveSettings()
		{
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0x14103FC", Offset = "0x14103FC", VA = "0x14103FC", Slot = "8")]
		public virtual bool HasSetting(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0x1410408", Offset = "0x1410408", VA = "0x1410408", Slot = "9")]
		public virtual bool CanAccessFiles()
		{
			return default(bool);
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0x1410410", Offset = "0x1410410", VA = "0x1410410")]
		private string UpdateFilename(PersistentStorage.eFileType fileType, string fileName)
		{
			return null;
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0x14104BC", Offset = "0x14104BC", VA = "0x14104BC", Slot = "10")]
		public virtual bool SaveFile(PersistentStorage.eFileType fileType, string fileName, string data, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0x1410758", Offset = "0x1410758", VA = "0x1410758", Slot = "11")]
		public virtual string LoadFile(PersistentStorage.eFileType fileType, string fileName, bool logExceptions = true)
		{
			return null;
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0x14109E4", Offset = "0x14109E4", VA = "0x14109E4", Slot = "12")]
		public virtual bool DeleteFile(PersistentStorage.eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0x1410C60", Offset = "0x1410C60", VA = "0x1410C60", Slot = "13")]
		public virtual bool HasFile(PersistentStorage.eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0x1410EDC", Offset = "0x1410EDC", VA = "0x1410EDC")]
		protected I2BasePersistentStorage()
		{
		}
	}
	[Token(Token = "0x2000377")]
	public class I2CustomPersistentStorage : I2BasePersistentStorage
	{
		[Token(Token = "0x6001871")]
		[Address(RVA = "0x1410EE4", Offset = "0x1410EE4", VA = "0x1410EE4")]
		public I2CustomPersistentStorage()
		{
		}
	}
	[Token(Token = "0x2000378")]
	public class BaseSpecializationManager
	{
		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] mSpecializations;

		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<string, string> mSpecializationsFallbacks;

		[Token(Token = "0x6001872")]
		[Address(RVA = "0x140343C", Offset = "0x140343C", VA = "0x140343C", Slot = "4")]
		public virtual void InitializeSpecializations()
		{
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0x14038E8", Offset = "0x14038E8", VA = "0x14038E8", Slot = "5")]
		public virtual string GetCurrentSpecialization()
		{
			return null;
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0x140394C", Offset = "0x140394C", VA = "0x140394C", Slot = "6")]
		public virtual string GetFallbackSpecialization(string specialization)
		{
			return null;
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0x14039F0", Offset = "0x14039F0", VA = "0x14039F0")]
		public BaseSpecializationManager()
		{
		}
	}
	[Token(Token = "0x2000379")]
	public class SpecializationManager : BaseSpecializationManager
	{
		[Token(Token = "0x400197B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SpecializationManager Singleton;

		[Token(Token = "0x6001876")]
		[Address(RVA = "0x11A5E14", Offset = "0x11A5E14", VA = "0x11A5E14")]
		private SpecializationManager()
		{
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0x11A5E44", Offset = "0x11A5E44", VA = "0x11A5E44")]
		public static string GetSpecializedText(string text, [Optional] string specialization)
		{
			return null;
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0x11A602C", Offset = "0x11A602C", VA = "0x11A602C")]
		public static string SetSpecializedText(string text, string newText, string specialization)
		{
			return null;
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0x11A6310", Offset = "0x11A6310", VA = "0x11A6310")]
		public static string SetSpecializedText(Dictionary<string, string> specializations)
		{
			return null;
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0x11A6138", Offset = "0x11A6138", VA = "0x11A6138")]
		public static Dictionary<string, string> GetSpecializations(string text, [Optional] Dictionary<string, string> buffer)
		{
			return null;
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0x11A6698", Offset = "0x11A6698", VA = "0x11A6698")]
		public static void AppendSpecializations(string text, [Optional] List<string> list)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200037A")]
	public class EventCallback
	{
		[Token(Token = "0x400197C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MonoBehaviour Target;

		[Token(Token = "0x400197D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string MethodName;

		[Token(Token = "0x600187D")]
		[Address(RVA = "0x1403EF0", Offset = "0x1403EF0", VA = "0x1403EF0")]
		public void Execute([Optional] UnityEngine.Object Sender)
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0x1403F58", Offset = "0x1403F58", VA = "0x1403F58")]
		public bool HasCallback()
		{
			return default(bool);
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0x1403FEC", Offset = "0x1403FEC", VA = "0x1403FEC")]
		public EventCallback()
		{
		}
	}
	[Token(Token = "0x200037B")]
	public enum ePluralType
	{
		[Token(Token = "0x400197F")]
		Zero,
		[Token(Token = "0x4001980")]
		One,
		[Token(Token = "0x4001981")]
		Two,
		[Token(Token = "0x4001982")]
		Few,
		[Token(Token = "0x4001983")]
		Many,
		[Token(Token = "0x4001984")]
		Plural
	}
	[Token(Token = "0x200037C")]
	public static class GoogleLanguages
	{
		[Token(Token = "0x20005E3")]
		public struct LanguageCodeDef
		{
			[Token(Token = "0x4001FBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Code;

			[Token(Token = "0x4001FBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string GoogleCode;

			[Token(Token = "0x4001FBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool HasJoinedWords;

			[Token(Token = "0x4001FBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int PluralRule;
		}

		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<string, LanguageCodeDef> mLanguageDef;

		[Token(Token = "0x6001880")]
		[Address(RVA = "0x1404590", Offset = "0x1404590", VA = "0x1404590")]
		public static string GetLanguageCode(string Filter, bool ShowWarnings = false)
		{
			return null;
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0x1404920", Offset = "0x1404920", VA = "0x1404920")]
		public static List<string> GetLanguagesForDropdown(string Filter, string CodesToExclude)
		{
			return null;
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0x14047C8", Offset = "0x14047C8", VA = "0x14047C8")]
		private static bool LanguageMatchesFilter(string Language, string[] Filters)
		{
			return default(bool);
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0x1404DBC", Offset = "0x1404DBC", VA = "0x1404DBC")]
		public static string GetFormatedLanguageName(string Language)
		{
			return null;
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0x1404EE8", Offset = "0x1404EE8", VA = "0x1404EE8")]
		public static string GetCodedLanguage(string Language, string code)
		{
			return null;
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0x1404FB0", Offset = "0x1404FB0", VA = "0x1404FB0")]
		public static void UnPackCodeFromLanguageName(string CodedLanguage, out string Language, out string code)
		{
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0x1405120", Offset = "0x1405120", VA = "0x1405120")]
		public static string GetGoogleLanguageCode(string InternationalCode)
		{
			return null;
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0x1405290", Offset = "0x1405290", VA = "0x1405290")]
		public static string GetLanguageName(string code, bool useParenthesesForRegion = false, bool allowDiscardRegion = true)
		{
			return null;
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0x1405510", Offset = "0x1405510", VA = "0x1405510")]
		public static List<string> GetAllInternationalCodes()
		{
			return null;
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0x140569C", Offset = "0x140569C", VA = "0x140569C")]
		public static bool LanguageCode_HasJoinedWord(string languageCode)
		{
			return default(bool);
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0x1405808", Offset = "0x1405808", VA = "0x1405808")]
		private static int GetPluralRule(string langCode)
		{
			return default(int);
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0x140598C", Offset = "0x140598C", VA = "0x140598C")]
		public static bool LanguageHasPluralType(string langCode, string pluralType)
		{
			return default(bool);
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0x1405B10", Offset = "0x1405B10", VA = "0x1405B10")]
		public static ePluralType GetPluralType(string langCode, int n)
		{
			return default(ePluralType);
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0x1406228", Offset = "0x1406228", VA = "0x1406228")]
		public static int GetPluralTestNumber(string langCode, ePluralType pluralType)
		{
			return default(int);
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0x1406210", Offset = "0x1406210", VA = "0x1406210")]
		private static bool inRange(int amount, int min, int max)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200037D")]
	public static class GoogleTranslation
	{
		[Token(Token = "0x20005E4")]
		public delegate void fnOnTranslated(string Translation, string Error);

		[Token(Token = "0x20005E5")]
		public delegate void fnOnTranslationReady(Dictionary<string, TranslationQuery> dict, string error);

		[Token(Token = "0x20005E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1560", Offset = "0xAC1560")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001FC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public fnOnTranslated OnTranslationReady;

			[Token(Token = "0x4001FC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string text;

			[Token(Token = "0x4001FC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dictionary<string, TranslationQuery> queries;

			[Token(Token = "0x4001FC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string LanguageCodeTo;

			[Token(Token = "0x6002329")]
			[Address(RVA = "0x140C2A8", Offset = "0x140C2A8", VA = "0x140C2A8")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x600232A")]
			[Address(RVA = "0x140F0CC", Offset = "0x140F0CC", VA = "0x140F0CC")]
			internal void <Translate>b__0(Dictionary<string, TranslationQuery> results, string error)
			{
			}
		}

		[Token(Token = "0x20005E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1570", Offset = "0xAC1570")]
		private sealed class <WaitForTranslations>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000383")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600232E")]
				[Address(RVA = "0x140F344", Offset = "0x140F344", VA = "0x140F344", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000384")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002330")]
				[Address(RVA = "0x140F3AC", Offset = "0x140F3AC", VA = "0x140F3AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600232B")]
			[Address(RVA = "0x140D4B0", Offset = "0x140D4B0", VA = "0x140D4B0")]
			[DebuggerHidden]
			public <WaitForTranslations>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x600232C")]
			[Address(RVA = "0x140F1AC", Offset = "0x140F1AC", VA = "0x140F1AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600232D")]
			[Address(RVA = "0x140F1B0", Offset = "0x140F1B0", VA = "0x140F1B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600232F")]
			[Address(RVA = "0x140F34C", Offset = "0x140F34C", VA = "0x140F34C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<UnityWebRequest> mCurrentTranslations;

		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<TranslationJob> mTranslationJobs;

		[Token(Token = "0x6001890")]
		[Address(RVA = "0x140BFA0", Offset = "0x140BFA0", VA = "0x140BFA0")]
		public static bool CanTranslate()
		{
			return default(bool);
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0x140C054", Offset = "0x140C054", VA = "0x140C054")]
		public static void Translate(string text, string LanguageCodeFrom, string LanguageCodeTo, fnOnTranslated OnTranslationReady)
		{
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0x140C900", Offset = "0x140C900", VA = "0x140C900")]
		public static string ForceTranslate(string text, string LanguageCodeFrom, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0x140C86C", Offset = "0x140C86C", VA = "0x140C86C")]
		public static void Translate(Dictionary<string, TranslationQuery> requests, fnOnTranslationReady OnTranslationReady, bool usePOST = true)
		{
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0x140CEEC", Offset = "0x140CEEC", VA = "0x140CEEC")]
		public static bool ForceTranslate(Dictionary<string, TranslationQuery> requests, bool usePOST = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0x140CF74", Offset = "0x140CF74", VA = "0x140CF74")]
		public static List<string> ConvertTranslationRequest(Dictionary<string, TranslationQuery> requests, bool encodeGET)
		{
			return null;
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0x140CE24", Offset = "0x140CE24", VA = "0x140CE24")]
		private static void AddTranslationJob(TranslationJob job)
		{
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0x140D450", Offset = "0x140D450", VA = "0x140D450")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xACFF74", Offset = "0xACFF74")]
		private static IEnumerator WaitForTranslations()
		{
			return null;
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0x140D4DC", Offset = "0x140D4DC", VA = "0x140D4DC")]
		public static string ParseTranslationResult(string html, Dictionary<string, TranslationQuery> requests)
		{
			return null;
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0x140DB74", Offset = "0x140DB74", VA = "0x140DB74")]
		public static bool IsTranslating()
		{
			return default(bool);
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0x140DC28", Offset = "0x140DC28", VA = "0x140DC28")]
		public static void CancelCurrentGoogleTranslations()
		{
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0x140C698", Offset = "0x140C698", VA = "0x140C698")]
		public static void CreateQueries(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0x140DDA0", Offset = "0x140DDA0", VA = "0x140DDA0")]
		private static void CreateQueries_Plurals(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0x140CA3C", Offset = "0x140CA3C", VA = "0x140CA3C")]
		public static void AddQuery(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0x140E73C", Offset = "0x140E73C", VA = "0x140E73C")]
		private static string GetTranslation(string text, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
			return null;
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0x140D948", Offset = "0x140D948", VA = "0x140D948")]
		private static TranslationQuery FindQueryFromOrigText(string origText, Dictionary<string, TranslationQuery> dict)
		{
			return default(TranslationQuery);
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0x140E00C", Offset = "0x140E00C", VA = "0x140E00C")]
		public static bool HasParameters(string text)
		{
			return default(bool);
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0x140E1C0", Offset = "0x140E1C0", VA = "0x140E1C0")]
		public static string GetPluralParameter(string text, bool forceTag)
		{
			return null;
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0x140E09C", Offset = "0x140E09C", VA = "0x140E09C")]
		public static string GetPluralText(string text, string pluralType)
		{
			return null;
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0x140E828", Offset = "0x140E828", VA = "0x140E828")]
		private static int FindClosingTag(string tag, MatchCollection matches, int startIndex)
		{
			return default(int);
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0x140DAD4", Offset = "0x140DAD4", VA = "0x140DAD4")]
		private static string GetGoogleNoTranslateTag(int tagNumber)
		{
			return null;
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0x140E2A4", Offset = "0x140E2A4", VA = "0x140E2A4")]
		private static void ParseNonTranslatableElements(ref TranslationQuery query)
		{
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0x140CD14", Offset = "0x140CD14", VA = "0x140CD14")]
		public static string GetQueryResult(string text, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
			return null;
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0x140E9A0", Offset = "0x140E9A0", VA = "0x140E9A0")]
		public static string RebuildTranslation(string text, Dictionary<string, TranslationQuery> dict, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0x140EBE4", Offset = "0x140EBE4", VA = "0x140EBE4")]
		private static string RebuildTranslation_Plural(string text, Dictionary<string, TranslationQuery> dict, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0x140EF28", Offset = "0x140EF28", VA = "0x140EF28")]
		public static string UppercaseFirst(string s)
		{
			return null;
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0x140D398", Offset = "0x140D398", VA = "0x140D398")]
		public static string TitleCase(string s)
		{
			return null;
		}
	}
	[Token(Token = "0x200037E")]
	public struct TranslationQuery
	{
		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string OrigText;

		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Text;

		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string LanguageCode;

		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] TargetLanguagesCode;

		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] Results;

		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] Tags;
	}
	[Token(Token = "0x200037F")]
	public class TranslationJob : IDisposable
	{
		[Token(Token = "0x20005E8")]
		public enum eJobState
		{
			[Token(Token = "0x4001FC7")]
			Running,
			[Token(Token = "0x4001FC8")]
			Succeeded,
			[Token(Token = "0x4001FC9")]
			Failed
		}

		[Token(Token = "0x400198E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public eJobState mJobState;

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0x11A78AC", Offset = "0x11A78AC", VA = "0x11A78AC", Slot = "5")]
		public virtual eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0x11A78B4", Offset = "0x11A78B4", VA = "0x11A78B4", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0x11A78B8", Offset = "0x11A78B8", VA = "0x11A78B8")]
		public TranslationJob()
		{
		}
	}
	[Token(Token = "0x2000380")]
	public class TranslationJob_WWW : TranslationJob
	{
		[Token(Token = "0x400198F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityWebRequest www;

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0x11A91F8", Offset = "0x11A91F8", VA = "0x11A91F8", Slot = "6")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0x11A7988", Offset = "0x11A7988", VA = "0x11A7988")]
		public TranslationJob_WWW()
		{
		}
	}
	[Token(Token = "0x2000381")]
	public class TranslationJob_GET : TranslationJob_WWW
	{
		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<string> mQueries;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string mErrorMessage;

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0x11A78C0", Offset = "0x11A78C0", VA = "0x11A78C0")]
		public TranslationJob_GET(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0x11A7990", Offset = "0x11A7990", VA = "0x11A7990")]
		private void ExecuteNextQuery()
		{
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0x11A7A84", Offset = "0x11A7A84", VA = "0x11A7A84", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0x11A7B3C", Offset = "0x11A7B3C", VA = "0x11A7B3C")]
		public void ProcessResult(byte[] bytes, string errorMsg)
		{
		}
	}
	[Token(Token = "0x2000382")]
	public class TranslationJob_Main : TranslationJob
	{
		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TranslationJob_WEB mWeb;

		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TranslationJob_POST mPost;

		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TranslationJob_GET mGet;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string mErrorMessage;

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0x11A7C60", Offset = "0x11A7C60", VA = "0x11A7C60")]
		public TranslationJob_Main(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0x11A7E88", Offset = "0x11A7E88", VA = "0x11A7E88", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0x11A8088", Offset = "0x11A8088", VA = "0x11A8088", Slot = "6")]
		public override void Dispose()
		{
		}
	}
	[Token(Token = "0x2000383")]
	public class TranslationJob_POST : TranslationJob_WWW
	{
		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0x11A7D08", Offset = "0x11A7D08", VA = "0x11A7D08")]
		public TranslationJob_POST(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0x11A80EC", Offset = "0x11A80EC", VA = "0x11A80EC", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0x11A8194", Offset = "0x11A8194", VA = "0x11A8194")]
		public void ProcessResult(byte[] bytes, string errorMsg)
		{
		}
	}
	[Token(Token = "0x2000384")]
	public class TranslationJob_WEB : TranslationJob_WWW
	{
		[Serializable]
		[Token(Token = "0x20005E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1580", Offset = "0xAC1580")]
		private sealed class <>c
		{
			[Token(Token = "0x4001FCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001FCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<KeyValuePair<string, string>> <>9__8_0;

			[Token(Token = "0x4001FCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static MatchEvaluator <>9__12_0;

			[Token(Token = "0x4001FCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static MatchEvaluator <>9__12_1;

			[Token(Token = "0x6002332")]
			[Address(RVA = "0x11A9034", Offset = "0x11A9034", VA = "0x11A9034")]
			public <>c()
			{
			}

			[Token(Token = "0x6002333")]
			[Address(RVA = "0x11A903C", Offset = "0x11A903C", VA = "0x11A903C")]
			internal int <FindAllQueries>b__8_0(KeyValuePair<string, string> a, KeyValuePair<string, string> b)
			{
				return default(int);
			}

			[Token(Token = "0x6002334")]
			[Address(RVA = "0x11A909C", Offset = "0x11A909C", VA = "0x11A909C")]
			internal string <ParseTranslationResult>b__12_0(Match match)
			{
				return null;
			}

			[Token(Token = "0x6002335")]
			[Address(RVA = "0x11A914C", Offset = "0x11A914C", VA = "0x11A914C")]
			internal string <ParseTranslationResult>b__12_1(Match match)
			{
				return null;
			}
		}

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string mErrorMessage;

		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string mCurrentBatch_ToLanguageCode;

		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string mCurrentBatch_FromLanguageCode;

		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<string> mCurrentBatch_Text;

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<KeyValuePair<string, string>> mQueries;

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0x11A828C", Offset = "0x11A828C", VA = "0x11A828C")]
		public TranslationJob_WEB(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0x11A82EC", Offset = "0x11A82EC", VA = "0x11A82EC")]
		private void FindAllQueries()
		{
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0x11A85B8", Offset = "0x11A85B8", VA = "0x11A85B8")]
		private void ExecuteNextBatch()
		{
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0x11A8920", Offset = "0x11A8920", VA = "0x11A8920", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0x11A89D8", Offset = "0x11A89D8", VA = "0x11A89D8")]
		public void ProcessResult(byte[] bytes, string errorMsg)
		{
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0x11A8B08", Offset = "0x11A8B08", VA = "0x11A8B08")]
		private string ParseTranslationResult(string html, string OriginalText)
		{
			return null;
		}
	}
	[Token(Token = "0x2000385")]
	public enum eLanguageDataFlags
	{
		[Token(Token = "0x40019A4")]
		DISABLED = 1,
		[Token(Token = "0x40019A5")]
		KEEP_LOADED = 2,
		[Token(Token = "0x40019A6")]
		NOT_LOADED = 4
	}
	[Serializable]
	[Token(Token = "0x2000386")]
	public class LanguageData
	{
		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Code;

		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public byte Flags;

		[NonSerialized]
		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool Compressed;

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0x1411DCC", Offset = "0x1411DCC", VA = "0x1411DCC")]
		public bool IsEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0x1411DDC", Offset = "0x1411DDC", VA = "0x1411DDC")]
		public void SetEnabled(bool bEnabled)
		{
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0x1411DF8", Offset = "0x1411DF8", VA = "0x1411DF8")]
		public bool IsLoaded()
		{
			return default(bool);
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0x1411E08", Offset = "0x1411E08", VA = "0x1411E08")]
		public bool CanBeUnloaded()
		{
			return default(bool);
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0x1411E18", Offset = "0x1411E18", VA = "0x1411E18")]
		public void SetLoaded(bool loaded)
		{
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0x1411E34", Offset = "0x1411E34", VA = "0x1411E34")]
		public void SetCanBeUnLoaded(bool allowUnloading)
		{
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0x1411E50", Offset = "0x1411E50", VA = "0x1411E50")]
		public LanguageData()
		{
		}
	}
	[Token(Token = "0x2000387")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAC04FC", Offset = "0xAC04FC")]
	[ExecuteInEditMode]
	public class LanguageSource : MonoBehaviour, ISerializationCallbackReceiver, ILanguageSource
	{
		[Token(Token = "0x20005EA")]
		public delegate void fnOnSourceUpdated(LanguageSourceData source, bool ReceivedNewData, string errorMsg);

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LanguageSourceData mSource;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int version;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool NeverDestroy;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool UserAgreesToHaveItOnTheScene;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool UserAgreesToHaveItInsideThePluginsFolder;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
		public bool GoogleLiveSyncIsUptoDate;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<UnityEngine.Object> Assets;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Google_WebServiceURL;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string Google_SpreadsheetKey;

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string Google_SpreadsheetName;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string Google_LastUpdatedVersion;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LanguageSourceData.eGoogleUpdateFrequency GoogleUpdateFrequency;

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float GoogleUpdateDelay;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<LanguageData> mLanguages;

		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool IgnoreDeviceLanguage;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public LanguageSourceData.eAllowUnloadLanguages _AllowUnloadingLanguages;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<TermData> mTerms;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool CaseInsensitiveTerms;

		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public LanguageSourceData.MissingTranslationAction OnMissingTranslation;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string mTerm_AppName;

		[Token(Token = "0x170001F1")]
		public LanguageSourceData SourceData
		{
			[Token(Token = "0x60018C8")]
			[Address(RVA = "0x1411E58", Offset = "0x1411E58", VA = "0x1411E58", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018C9")]
			[Address(RVA = "0x1411E60", Offset = "0x1411E60", VA = "0x1411E60", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x140000CB")]
		public event fnOnSourceUpdated Event_OnSourceUpdateFromGoogle
		{
			[Token(Token = "0x60018CA")]
			[Address(RVA = "0x1411E68", Offset = "0x1411E68", VA = "0x1411E68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFFD8", Offset = "0xACFFD8")]
			add
			{
			}
			[Token(Token = "0x60018CB")]
			[Address(RVA = "0x1411F0C", Offset = "0x1411F0C", VA = "0x1411F0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFFE8", Offset = "0xACFFE8")]
			remove
			{
			}
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0x1411FB0", Offset = "0x1411FB0", VA = "0x1411FB0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0x1411FF0", Offset = "0x1411FF0", VA = "0x1411FF0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0x1412014", Offset = "0x1412014", VA = "0x1412014")]
		public string GetSourceName()
		{
			return null;
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0x1412108", Offset = "0x1412108", VA = "0x1412108", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0x1412114", Offset = "0x1412114", VA = "0x1412114", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0x1412470", Offset = "0x1412470", VA = "0x1412470")]
		public LanguageSource()
		{
		}
	}
	[Token(Token = "0x2000388")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xAC0548", Offset = "0xAC0548")]
	public class LanguageSourceAsset : ScriptableObject, ILanguageSource
	{
		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LanguageSourceData mSource;

		[Token(Token = "0x170001F2")]
		public LanguageSourceData SourceData
		{
			[Token(Token = "0x60018D2")]
			[Address(RVA = "0x1077370", Offset = "0x1077370", VA = "0x1077370", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018D3")]
			[Address(RVA = "0x1077378", Offset = "0x1077378", VA = "0x1077378", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0x1077380", Offset = "0x1077380", VA = "0x1077380")]
		public LanguageSourceAsset()
		{
		}
	}
	[Token(Token = "0x2000389")]
	public interface ILanguageSource
	{
		[Token(Token = "0x170001F3")]
		LanguageSourceData SourceData
		{
			[Token(Token = "0x60018D5")]
			get;
			[Token(Token = "0x60018D6")]
			set;
		}
	}
	[Serializable]
	[Token(Token = "0x200038A")]
	[ExecuteInEditMode]
	public class LanguageSourceData
	{
		[Token(Token = "0x20005EB")]
		public enum MissingTranslationAction
		{
			[Token(Token = "0x4001FCF")]
			Empty,
			[Token(Token = "0x4001FD0")]
			Fallback,
			[Token(Token = "0x4001FD1")]
			ShowWarning,
			[Token(Token = "0x4001FD2")]
			ShowTerm
		}

		[Token(Token = "0x20005EC")]
		public enum eAllowUnloadLanguages
		{
			[Token(Token = "0x4001FD4")]
			Never,
			[Token(Token = "0x4001FD5")]
			OnlyInDevice,
			[Token(Token = "0x4001FD6")]
			EditorAndDevice
		}

		[Token(Token = "0x20005ED")]
		public enum eGoogleUpdateFrequency
		{
			[Token(Token = "0x4001FD8")]
			Always,
			[Token(Token = "0x4001FD9")]
			Never,
			[Token(Token = "0x4001FDA")]
			Daily,
			[Token(Token = "0x4001FDB")]
			Weekly,
			[Token(Token = "0x4001FDC")]
			Monthly,
			[Token(Token = "0x4001FDD")]
			OnlyOnce,
			[Token(Token = "0x4001FDE")]
			EveryOtherDay
		}

		[Token(Token = "0x20005EE")]
		public enum eGoogleUpdateSynchronization
		{
			[Token(Token = "0x4001FE0")]
			Manual,
			[Token(Token = "0x4001FE1")]
			OnSceneLoaded,
			[Token(Token = "0x4001FE2")]
			AsSoonAsDownloaded
		}

		[Serializable]
		[Token(Token = "0x20005EF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1590", Offset = "0xAC1590")]
		private sealed class <>c
		{
			[Token(Token = "0x4001FE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001FE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<UnityEngine.Object> <>9__39_0;

			[Token(Token = "0x4001FE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<UnityEngine.Object, string> <>9__39_1;

			[Token(Token = "0x4001FE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<IGrouping<string, UnityEngine.Object>, string> <>9__39_2;

			[Token(Token = "0x4001FE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<IGrouping<string, UnityEngine.Object>, UnityEngine.Object> <>9__39_3;

			[Token(Token = "0x4001FE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Comparison<TermData> <>9__43_0;

			[Token(Token = "0x4001FE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Comparison<TermData> <>9__47_0;

			[Token(Token = "0x600233B")]
			[Address(RVA = "0x107F74C", Offset = "0x107F74C", VA = "0x107F74C")]
			public <>c()
			{
			}

			[Token(Token = "0x600233C")]
			[Address(RVA = "0x107F754", Offset = "0x107F754", VA = "0x107F754")]
			internal bool <UpdateAssetDictionary>b__39_0(UnityEngine.Object x)
			{
				return default(bool);
			}

			[Token(Token = "0x600233D")]
			[Address(RVA = "0x107F7C0", Offset = "0x107F7C0", VA = "0x107F7C0")]
			internal string <UpdateAssetDictionary>b__39_1(UnityEngine.Object o)
			{
				return null;
			}

			[Token(Token = "0x600233E")]
			[Address(RVA = "0x107F7DC", Offset = "0x107F7DC", VA = "0x107F7DC")]
			internal string <UpdateAssetDictionary>b__39_2(IGrouping<string, UnityEngine.Object> g)
			{
				return null;
			}

			[Token(Token = "0x600233F")]
			[Address(RVA = "0x107F888", Offset = "0x107F888", VA = "0x107F888")]
			internal UnityEngine.Object <UpdateAssetDictionary>b__39_3(IGrouping<string, UnityEngine.Object> g)
			{
				return null;
			}

			[Token(Token = "0x6002340")]
			[Address(RVA = "0x107F8D8", Offset = "0x107F8D8", VA = "0x107F8D8")]
			internal int <Export_I2CSV>b__43_0(TermData a, TermData b)
			{
				return default(int);
			}

			[Token(Token = "0x6002341")]
			[Address(RVA = "0x107F900", Offset = "0x107F900", VA = "0x107F900")]
			internal int <Export_CSV>b__47_0(TermData a, TermData b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x20005F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC15A0", Offset = "0xAC15A0")]
		private sealed class <Import_Google_Coroutine>d__65 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LanguageSourceData <>4__this;

			[Token(Token = "0x4001FED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool JustCheck;

			[Token(Token = "0x4001FEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x17000385")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002345")]
				[Address(RVA = "0x107FBF4", Offset = "0x107FBF4", VA = "0x107FBF4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000386")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002347")]
				[Address(RVA = "0x107FC5C", Offset = "0x107FC5C", VA = "0x107FC5C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002342")]
			[Address(RVA = "0x107D350", Offset = "0x107D350", VA = "0x107D350")]
			[DebuggerHidden]
			public <Import_Google_Coroutine>d__65(int <>1__state)
			{
			}

			[Token(Token = "0x6002343")]
			[Address(RVA = "0x107F928", Offset = "0x107F928", VA = "0x107F928", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002344")]
			[Address(RVA = "0x107F92C", Offset = "0x107F92C", VA = "0x107F92C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002346")]
			[Address(RVA = "0x107FBFC", Offset = "0x107FBFC", VA = "0x107FBFC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[NonSerialized]
		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ILanguageSource owner;

		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool UserAgreesToHaveItOnTheScene;

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool UserAgreesToHaveItInsideThePluginsFolder;

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool GoogleLiveSyncIsUptoDate;

		[NonSerialized]
		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool mIsGlobalSource;

		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<TermData> mTerms;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool CaseInsensitiveTerms;

		[NonSerialized]
		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dictionary<string, TermData> mDictionary;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MissingTranslationAction OnMissingTranslation;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string mTerm_AppName;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<LanguageData> mLanguages;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool IgnoreDeviceLanguage;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public eAllowUnloadLanguages _AllowUnloadingLanguages;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string Google_WebServiceURL;

		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string Google_SpreadsheetKey;

		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string Google_SpreadsheetName;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string Google_LastUpdatedVersion;

		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public eGoogleUpdateFrequency GoogleUpdateFrequency;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public eGoogleUpdateFrequency GoogleInEditorCheckFrequency;

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public eGoogleUpdateSynchronization GoogleUpdateSynchronization;

		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float GoogleUpdateDelay;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<UnityEngine.Object> Assets;

		[NonSerialized]
		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Dictionary<string, UnityEngine.Object> mAssetDictionary;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private string mDelayedGoogleData;

		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string EmptyCategory;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static char[] CategorySeparators;

		[Token(Token = "0x170001F4")]
		public UnityEngine.Object ownerObject
		{
			[Token(Token = "0x60018D7")]
			[Address(RVA = "0x1077620", Offset = "0x1077620", VA = "0x1077620")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x140000CC")]
		public event LanguageSource.fnOnSourceUpdated Event_OnSourceUpdateFromGoogle
		{
			[Token(Token = "0x60018D8")]
			[Address(RVA = "0x10776A4", Offset = "0x10776A4", VA = "0x10776A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xACFFF8", Offset = "0xACFFF8")]
			add
			{
			}
			[Token(Token = "0x60018D9")]
			[Address(RVA = "0x1077748", Offset = "0x1077748", VA = "0x1077748")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAD0008", Offset = "0xAD0008")]
			remove
			{
			}
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0x10777EC", Offset = "0x10777EC", VA = "0x10777EC")]
		public void Awake()
		{
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0x10781AC", Offset = "0x10781AC", VA = "0x10781AC")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0x1078294", Offset = "0x1078294", VA = "0x1078294")]
		public bool IsEqualTo(LanguageSourceData Source)
		{
			return default(bool);
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0x10787BC", Offset = "0x10787BC", VA = "0x10787BC")]
		internal bool ManagerHasASimilarSource()
		{
			return default(bool);
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0x10788D0", Offset = "0x10788D0", VA = "0x10788D0")]
		public void ClearAllData()
		{
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0x1078970", Offset = "0x1078970", VA = "0x1078970")]
		public bool IsGlobalSource()
		{
			return default(bool);
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0x1078978", Offset = "0x1078978", VA = "0x1078978")]
		public void Editor_SetDirty()
		{
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0x1077D74", Offset = "0x1077D74", VA = "0x1077D74")]
		public void UpdateAssetDictionary()
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0x107897C", Offset = "0x107897C", VA = "0x107897C")]
		public UnityEngine.Object FindAsset(string Name)
		{
			return null;
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0x1078A40", Offset = "0x1078A40", VA = "0x1078A40")]
		public bool HasAsset(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0x1078AA8", Offset = "0x1078AA8", VA = "0x1078AA8")]
		public void AddAsset(UnityEngine.Object Obj)
		{
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0x1078B48", Offset = "0x1078B48", VA = "0x1078B48")]
		public string Export_I2CSV(string Category, char Separator = ',', bool specializationsAsRows = true)
		{
			return null;
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0x1079154", Offset = "0x1079154", VA = "0x1079154")]
		private static void AppendI2Term(StringBuilder Builder, int nLanguages, string Term, TermData termData, char Separator, string forceSpecialization)
		{
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0x10793CC", Offset = "0x10793CC", VA = "0x10793CC")]
		private static void AppendI2Text(StringBuilder Builder, string text)
		{
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0x10794A0", Offset = "0x10794A0", VA = "0x10794A0")]
		private string Export_Language_to_Cache(int langIndex, bool fillTermWithFallback)
		{
			return null;
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0x1079A28", Offset = "0x1079A28", VA = "0x1079A28")]
		public string Export_CSV(string Category, char Separator = ',', bool specializationsAsRows = true)
		{
			return null;
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0x107A254", Offset = "0x107A254", VA = "0x107A254")]
		private static void AppendTerm(StringBuilder Builder, int nLanguages, string Term, TermData termData, string specialization, char Separator)
		{
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0x107A124", Offset = "0x107A124", VA = "0x107A124")]
		private static void AppendString(StringBuilder Builder, string Text, char Separator)
		{
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0x107A4E0", Offset = "0x107A4E0", VA = "0x107A4E0")]
		private static void AppendTranslation(StringBuilder Builder, string Text, char Separator, string tags)
		{
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0x107A630", Offset = "0x107A630", VA = "0x107A630")]
		public UnityWebRequest Export_Google_CreateWWWcall(eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0x107A7B0", Offset = "0x107A7B0", VA = "0x107A7B0")]
		private string Export_Google_CreateData()
		{
			return null;
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0x107AD30", Offset = "0x107AD30", VA = "0x107AD30")]
		public string Import_CSV(string Category, string CSVstring, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace, char Separator = ',')
		{
			return null;
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0x107B94C", Offset = "0x107B94C", VA = "0x107B94C")]
		public string Import_I2CSV(string Category, string I2CSVstring, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0x107AE4C", Offset = "0x107AE4C", VA = "0x107AE4C")]
		public string Import_CSV(string Category, List<string[]> CSV, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0x107BB54", Offset = "0x107BB54", VA = "0x107BB54")]
		private bool ArrayContains(string MainText, params string[] texts)
		{
			return default(bool);
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0x107BF94", Offset = "0x107BF94", VA = "0x107BF94")]
		public static eTermType GetTermType(string type)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0x107C22C", Offset = "0x107C22C", VA = "0x107C22C")]
		private void Import_Language_from_Cache(int langIndex, string langData, bool useFallback, bool onlyCurrentSpecialization)
		{
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0x107C454", Offset = "0x107C454", VA = "0x107C454")]
		public static void FreeUnusedLanguages()
		{
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0x107C618", Offset = "0x107C618", VA = "0x107C618")]
		public void Import_Google_FromCache()
		{
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0x107CA10", Offset = "0x107CA10", VA = "0x107CA10")]
		private bool IsNewerVersion(string currentVersion, string newVersion)
		{
			return default(bool);
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0x107D03C", Offset = "0x107D03C", VA = "0x107D03C")]
		public void Import_Google(bool ForceUpdate, bool justCheck)
		{
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0x107C860", Offset = "0x107C860", VA = "0x107C860")]
		private string GetSourcePlayerPrefName()
		{
			return null;
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0x107D2C0", Offset = "0x107D2C0", VA = "0x107D2C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAD0018", Offset = "0xAD0018")]
		private IEnumerator Import_Google_Coroutine(bool JustCheck)
		{
			return null;
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0x107D37C", Offset = "0x107D37C", VA = "0x107D37C")]
		private void ApplyDownloadedDataOnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0x107D420", Offset = "0x107D420", VA = "0x107D420")]
		public void ApplyDownloadedDataFromGoogle()
		{
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0x107D564", Offset = "0x107D564", VA = "0x107D564")]
		public UnityWebRequest Import_Google_CreateWWWcall(bool ForceUpdate, bool justCheck)
		{
			return null;
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0x107D6B8", Offset = "0x107D6B8", VA = "0x107D6B8")]
		public bool HasGoogleSpreadsheet()
		{
			return default(bool);
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0x107CAA0", Offset = "0x107CAA0", VA = "0x107CAA0")]
		public string Import_Google_Result(string JsonString, eSpreadsheetUpdateMode UpdateMode, bool saveInPlayerPrefs = false)
		{
			return null;
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0x10783F4", Offset = "0x10783F4", VA = "0x10783F4")]
		public int GetLanguageIndex(string language, bool AllowDiscartingRegion = true, bool SkipDisabled = true)
		{
			return default(int);
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0x107D938", Offset = "0x107D938", VA = "0x107D938")]
		public LanguageData GetLanguageData(string language, bool AllowDiscartingRegion = true)
		{
			return null;
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0x107D9D8", Offset = "0x107D9D8", VA = "0x107D9D8")]
		public bool IsCurrentLanguage(int languageIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0x107BBF8", Offset = "0x107BBF8", VA = "0x107BBF8")]
		public int GetLanguageIndexFromCode(string Code, bool exactMatch = true, bool ignoreDisabled = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0x107D760", Offset = "0x107D760", VA = "0x107D760")]
		public static int GetCommonWordInLanguageNames(string Language1, string Language2)
		{
			return default(int);
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0x107DA88", Offset = "0x107DA88", VA = "0x107DA88")]
		public static bool AreTheSameLanguage(string Language1, string Language2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0x107DB24", Offset = "0x107DB24", VA = "0x107DB24")]
		public static string GetLanguageWithoutRegion(string Language)
		{
			return null;
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0x107DBC4", Offset = "0x107DBC4", VA = "0x107DBC4")]
		public void AddLanguage(string LanguageName)
		{
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0x107DC4C", Offset = "0x107DC4C", VA = "0x107DC4C")]
		public void AddLanguage(string LanguageName, string LanguageCode)
		{
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0x107DDE0", Offset = "0x107DDE0", VA = "0x107DDE0")]
		public void RemoveLanguage(string LanguageName)
		{
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0x107E0D8", Offset = "0x107E0D8", VA = "0x107E0D8")]
		public List<string> GetLanguages(bool skipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0x107E208", Offset = "0x107E208", VA = "0x107E208")]
		public List<string> GetLanguagesCode(bool allowRegions = true, bool skipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0x107E3A0", Offset = "0x107E3A0", VA = "0x107E3A0")]
		public bool IsLanguageEnabled(string Language)
		{
			return default(bool);
		}

		[Token(Token = "0x600190D")]
		[Address(RVA = "0x107E450", Offset = "0x107E450", VA = "0x107E450")]
		public void EnableLanguage(string Language, bool bEnabled)
		{
		}

		[Token(Token = "0x600190E")]
		[Address(RVA = "0x107E504", Offset = "0x107E504", VA = "0x107E504")]
		public bool AllowUnloadingLanguages()
		{
			return default(bool);
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0x107E514", Offset = "0x107E514", VA = "0x107E514")]
		private string GetSavedLanguageFileName(int languageIndex)
		{
			return null;
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0x107E724", Offset = "0x107E724", VA = "0x107E724")]
		public void LoadLanguage(int languageIndex, bool UnloadOtherLanguages, bool useFallback, bool onlyCurrentSpecialization, bool forceLoad)
		{
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0x107EAE4", Offset = "0x107EAE4", VA = "0x107EAE4")]
		public void LoadAllLanguages(bool forceLoad = false)
		{
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0x107E8B0", Offset = "0x107E8B0", VA = "0x107E8B0")]
		public void UnloadLanguage(int languageIndex)
		{
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0x107C10C", Offset = "0x107C10C", VA = "0x107C10C")]
		public void SaveLanguages(bool unloadAll, PersistentStorage.eFileType fileLocation = PersistentStorage.eFileType.Temporal)
		{
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0x107C064", Offset = "0x107C064", VA = "0x107C064")]
		public bool HasUnloadedLanguages()
		{
			return default(bool);
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0x107AB58", Offset = "0x107AB58", VA = "0x107AB58")]
		public List<string> GetCategories(bool OnlyMainCategory = false, [Optional] List<string> Categories)
		{
			return null;
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0x107EC80", Offset = "0x107EC80", VA = "0x107EC80")]
		public static string GetKeyFromFullTerm(string FullTerm, bool OnlyMainCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0x107EB78", Offset = "0x107EB78", VA = "0x107EB78")]
		public static string GetCategoryFromFullTerm(string FullTerm, bool OnlyMainCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0x107ED64", Offset = "0x107ED64", VA = "0x107ED64")]
		public static void DeserializeFullTerm(string FullTerm, out string Key, out string Category, bool OnlyMainCategory = false)
		{
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0x1077A84", Offset = "0x1077A84", VA = "0x1077A84")]
		public void UpdateDictionary(bool force = false)
		{
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0x107EEBC", Offset = "0x107EEBC", VA = "0x107EEBC")]
		public string GetTranslation(string term, [Optional] string overrideLanguage, [Optional] string overrideSpecialization, bool skipDisabled = false, bool allowCategoryMistmatch = false)
		{
			return null;
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0x107EF68", Offset = "0x107EF68", VA = "0x107EF68")]
		public bool TryGetTranslation(string term, out string Translation, [Optional] string overrideLanguage, [Optional] string overrideSpecialization, bool skipDisabled = false, bool allowCategoryMistmatch = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0x1079734", Offset = "0x1079734", VA = "0x1079734")]
		private bool TryGetFallbackTranslation(TermData termData, out string Translation, int langIndex, [Optional] string overrideSpecialization, bool skipDisabled = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0x107F1B0", Offset = "0x107F1B0", VA = "0x107F1B0")]
		public TermData AddTerm(string term)
		{
			return null;
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0x10785E8", Offset = "0x10785E8", VA = "0x10785E8")]
		public TermData GetTermData(string term, bool allowCategoryMistmatch = false)
		{
			return null;
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0x107F370", Offset = "0x107F370", VA = "0x107F370")]
		public bool ContainsTerm(string term)
		{
			return default(bool);
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0x107F390", Offset = "0x107F390", VA = "0x107F390")]
		public List<string> GetTermsList([Optional] string Category)
		{
			return null;
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0x107F1BC", Offset = "0x107F1BC", VA = "0x107F1BC")]
		public TermData AddTerm(string NewTerm, eTermType termType, bool SaveSource = true)
		{
			return null;
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0x107F54C", Offset = "0x107F54C", VA = "0x107F54C")]
		public void RemoveTerm(string term)
		{
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0x107BDC0", Offset = "0x107BDC0", VA = "0x107BDC0")]
		public static void ValidateFullTerm(ref string Term)
		{
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0x10773F0", Offset = "0x10773F0", VA = "0x10773F0")]
		public LanguageSourceData()
		{
		}
	}
	[Token(Token = "0x200038B")]
	public enum eSpreadsheetUpdateMode
	{
		[Token(Token = "0x40019DD")]
		None,
		[Token(Token = "0x40019DE")]
		Replace,
		[Token(Token = "0x40019DF")]
		Merge,
		[Token(Token = "0x40019E0")]
		AddNewTerms
	}
	[Token(Token = "0x200038C")]
	public class LocalizationReader
	{
		[Token(Token = "0x6001926")]
		[Address(RVA = "0x1087754", Offset = "0x1087754", VA = "0x1087754")]
		public static Dictionary<string, string> ReadTextAsset(TextAsset asset)
		{
			return null;
		}

		[Token(Token = "0x6001927")]
		[Address(RVA = "0x1087994", Offset = "0x1087994", VA = "0x1087994")]
		public static bool TextAsset_ReadLine(string line, out string key, out string value, out string category, out string comment, out string termType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0x1087DDC", Offset = "0x1087DDC", VA = "0x1087DDC")]
		public static string ReadCSVfile(string Path, Encoding encoding)
		{
			return null;
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0x107AD78", Offset = "0x107AD78", VA = "0x107AD78")]
		public static List<string[]> ReadCSV(string Text, char Separator = ',')
		{
			return null;
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0x1087F60", Offset = "0x1087F60", VA = "0x1087F60")]
		private static string[] ParseCSVline(string Line, ref int iStart, char Separator)
		{
			return null;
		}

		[Token(Token = "0x600192B")]
		[Address(RVA = "0x1088140", Offset = "0x1088140", VA = "0x1088140")]
		private static void AddCSVtoken(ref List<string> list, ref string Line, int iEnd, ref int iWordStart)
		{
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0x107B990", Offset = "0x107B990", VA = "0x107B990")]
		public static List<string[]> ReadI2CSV(string Text)
		{
			return null;
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0x1087D30", Offset = "0x1087D30", VA = "0x1087D30")]
		public static void ValidateFullTerm(ref string Term)
		{
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0x1088268", Offset = "0x1088268", VA = "0x1088268")]
		public static string EncodeString(string str)
		{
			return null;
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0x1087C98", Offset = "0x1087C98", VA = "0x1087C98")]
		public static string DecodeString(string str)
		{
			return null;
		}

		[Token(Token = "0x6001930")]
		[Address(RVA = "0x1088338", Offset = "0x1088338", VA = "0x1088338")]
		public LocalizationReader()
		{
		}
	}
	[Token(Token = "0x200038D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAC05C4", Offset = "0xAC05C4")]
	public class Localize : MonoBehaviour
	{
		[Token(Token = "0x20005F1")]
		public enum TermModification
		{
			[Token(Token = "0x4001FF0")]
			DontModify,
			[Token(Token = "0x4001FF1")]
			ToUpper,
			[Token(Token = "0x4001FF2")]
			ToLower,
			[Token(Token = "0x4001FF3")]
			ToUpperFirst,
			[Token(Token = "0x4001FF4")]
			ToTitle
		}

		[Serializable]
		[Token(Token = "0x20005F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC15B0", Offset = "0xAC15B0")]
		private sealed class <>c
		{
			[Token(Token = "0x4001FF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001FF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<UnityEngine.Object> <>9__50_0;

			[Token(Token = "0x4001FF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<UnityEngine.Object, string> <>9__50_1;

			[Token(Token = "0x4001FF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<IGrouping<string, UnityEngine.Object>, string> <>9__50_2;

			[Token(Token = "0x4001FF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<IGrouping<string, UnityEngine.Object>, UnityEngine.Object> <>9__50_3;

			[Token(Token = "0x6002349")]
			[Address(RVA = "0x10894DC", Offset = "0x10894DC", VA = "0x10894DC")]
			public <>c()
			{
			}

			[Token(Token = "0x600234A")]
			[Address(RVA = "0x10894E4", Offset = "0x10894E4", VA = "0x10894E4")]
			internal bool <UpdateAssetDictionary>b__50_0(UnityEngine.Object x)
			{
				return default(bool);
			}

			[Token(Token = "0x600234B")]
			[Address(RVA = "0x1089550", Offset = "0x1089550", VA = "0x1089550")]
			internal string <UpdateAssetDictionary>b__50_1(UnityEngine.Object o)
			{
				return null;
			}

			[Token(Token = "0x600234C")]
			[Address(RVA = "0x108956C", Offset = "0x108956C", VA = "0x108956C")]
			internal string <UpdateAssetDictionary>b__50_2(IGrouping<string, UnityEngine.Object> g)
			{
				return null;
			}

			[Token(Token = "0x600234D")]
			[Address(RVA = "0x1089618", Offset = "0x1089618", VA = "0x1089618")]
			internal UnityEngine.Object <UpdateAssetDictionary>b__50_3(IGrouping<string, UnityEngine.Object> g)
			{
				return null;
			}
		}

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string mTerm;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string mTermSecondary;

		[NonSerialized]
		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string FinalTerm;

		[NonSerialized]
		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string FinalSecondaryTerm;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TermModification PrimaryTermModifier;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public TermModification SecondaryTermModifier;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string TermPrefix;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string TermSuffix;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool LocalizeOnAwake;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string LastLocalizedLanguage;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool IgnoreRTL;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int MaxCharactersInRTL;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool IgnoreNumbersInRTL;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool CorrectAlignmentForRTL;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		public bool AddSpacesToJoinedLanguages;

		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		public bool AllowLocalizedParameters;

		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool AllowParameters;

		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<UnityEngine.Object> TranslatedObjects;

		[NonSerialized]
		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Dictionary<string, UnityEngine.Object> mAssetDictionary;

		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEvent LocalizeEvent;

		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string MainTranslation;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string SecondaryTranslation;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string CallBackTerm;

		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string CallBackSecondaryTerm;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Localize CurrentLocalizeComponent;

		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool AlwaysForceLocalize;

		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		public EventCallback LocalizeCallBack;

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool mGUI_ShowReferences;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool mGUI_ShowTems;

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		public bool mGUI_ShowCallback;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public ILocalizeTarget mLocalizeTarget;

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public string mLocalizeTargetName;

		[Token(Token = "0x170001F5")]
		public string Term
		{
			[Token(Token = "0x6001931")]
			[Address(RVA = "0x1088340", Offset = "0x1088340", VA = "0x1088340")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001932")]
			[Address(RVA = "0x1088348", Offset = "0x1088348", VA = "0x1088348")]
			set
			{
			}
		}

		[Token(Token = "0x170001F6")]
		public string SecondaryTerm
		{
			[Token(Token = "0x6001933")]
			[Address(RVA = "0x10883A4", Offset = "0x10883A4", VA = "0x10883A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001934")]
			[Address(RVA = "0x10883AC", Offset = "0x10883AC", VA = "0x10883AC")]
			set
			{
			}
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0x108843C", Offset = "0x108843C", VA = "0x108843C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0x1088CAC", Offset = "0x1088CAC", VA = "0x1088CAC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0x1088CB4", Offset = "0x1088CB4", VA = "0x1088CB4")]
		public bool HasCallback()
		{
			return default(bool);
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0x1085500", Offset = "0x1085500", VA = "0x1085500")]
		public void OnLocalize(bool Force = false)
		{
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0x10887B0", Offset = "0x10887B0", VA = "0x10887B0")]
		public bool FindTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0x1088D08", Offset = "0x1088D08", VA = "0x1088D08")]
		public void GetFinalTerms(out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0x1088EB8", Offset = "0x1088EB8", VA = "0x1088EB8")]
		public string GetMainTargetsText()
		{
			return null;
		}

		[Token(Token = "0x600193C")]
		[Address(RVA = "0x1088F90", Offset = "0x1088F90", VA = "0x1088F90")]
		public void SetFinalTerms(string Main, string Secondary, out string primaryTerm, out string secondaryTerm, bool RemoveNonASCII)
		{
		}

		[Token(Token = "0x600193D")]
		[Address(RVA = "0x108834C", Offset = "0x108834C", VA = "0x108834C")]
		public void SetTerm(string primary)
		{
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0x10883B8", Offset = "0x10883B8", VA = "0x10883B8")]
		public void SetTerm(string primary, string secondary)
		{
		}

		[Token(Token = "0x600193F")]
		internal T GetSecondaryTranslatedObj<T>(ref string mainTranslation, ref string secondaryTranslation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001940")]
		[Address(RVA = "0x1088480", Offset = "0x1088480", VA = "0x1088480")]
		public void UpdateAssetDictionary()
		{
		}

		[Token(Token = "0x6001941")]
		internal T GetObject<T>(string Translation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001942")]
		private T GetTranslatedObject<T>(string Translation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001943")]
		[Address(RVA = "0x1088FEC", Offset = "0x1088FEC", VA = "0x1088FEC")]
		private void DeserializeTranslation(string translation, out string value, out string secondary)
		{
		}

		[Token(Token = "0x6001944")]
		public T FindTranslatedObject<T>(string value) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001945")]
		[Address(RVA = "0x1089104", Offset = "0x1089104", VA = "0x1089104")]
		public bool HasTranslatedObject(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0x108919C", Offset = "0x108919C", VA = "0x108919C")]
		public void AddTranslatedObject(UnityEngine.Object Obj)
		{
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0x108923C", Offset = "0x108923C", VA = "0x108923C")]
		public void SetGlobalLanguage(string Language)
		{
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0x10892A0", Offset = "0x10892A0", VA = "0x10892A0")]
		public Localize()
		{
		}
	}
	[Token(Token = "0x200038E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAC05FC", Offset = "0xAC05FC")]
	public class LocalizeDropdown : MonoBehaviour
	{
		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> _Terms;

		[Token(Token = "0x6001949")]
		[Address(RVA = "0x1089668", Offset = "0x1089668", VA = "0x1089668")]
		public void Start()
		{
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0x1089804", Offset = "0x1089804", VA = "0x1089804")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x600194B")]
		[Address(RVA = "0x10898A0", Offset = "0x10898A0", VA = "0x10898A0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600194C")]
		[Address(RVA = "0x108970C", Offset = "0x108970C", VA = "0x108970C")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0x1089900", Offset = "0x1089900", VA = "0x1089900")]
		private void FillValues()
		{
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0x1089A90", Offset = "0x1089A90", VA = "0x1089A90")]
		public void UpdateLocalization()
		{
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0x1089E38", Offset = "0x1089E38", VA = "0x1089E38")]
		public void UpdateLocalizationTMPro()
		{
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0x1089CC0", Offset = "0x1089CC0", VA = "0x1089CC0")]
		private void FillValuesTMPro()
		{
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0x108A05C", Offset = "0x108A05C", VA = "0x108A05C")]
		public LocalizeDropdown()
		{
		}
	}
	[Token(Token = "0x200038F")]
	public static class LocalizationManager
	{
		[Token(Token = "0x20005F3")]
		public delegate object _GetParam(string param);

		[Token(Token = "0x20005F4")]
		public delegate void OnLocalizeCallback();

		[Token(Token = "0x20005F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC15C0", Offset = "0xAC15C0")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x4001FFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<string> Languages;

			[Token(Token = "0x4001FFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<string, bool> <>9__0;

			[Token(Token = "0x6002356")]
			[Address(RVA = "0x1081E08", Offset = "0x1081E08", VA = "0x1081E08")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x6002357")]
			[Address(RVA = "0x1086D30", Offset = "0x1086D30", VA = "0x1086D30")]
			internal bool <GetAllLanguages>b__0(string x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC15D0", Offset = "0xAC15D0")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x4001FFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<string> Languages;

			[Token(Token = "0x4001FFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<string, bool> <>9__0;

			[Token(Token = "0x6002358")]
			[Address(RVA = "0x1082030", Offset = "0x1082030", VA = "0x1082030")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x6002359")]
			[Address(RVA = "0x1086DA4", Offset = "0x1086DA4", VA = "0x1086DA4")]
			internal bool <GetAllLanguagesCode>b__0(string x)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20005F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC15E0", Offset = "0xAC15E0")]
		private sealed class <>c
		{
			[Token(Token = "0x4001FFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001FFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static _GetParam <>9__41_0;

			[Token(Token = "0x600235B")]
			[Address(RVA = "0x1086CC0", Offset = "0x1086CC0", VA = "0x1086CC0")]
			public <>c()
			{
			}

			[Token(Token = "0x600235C")]
			[Address(RVA = "0x1086CC8", Offset = "0x1086CC8", VA = "0x1086CC8")]
			internal object <ApplyLocalizationParams>b__41_0(string p)
			{
				return null;
			}
		}

		[Token(Token = "0x20005F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC15F0", Offset = "0xAC15F0")]
		private sealed class <>c__DisplayClass42_0
		{
			[Token(Token = "0x4002000")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject root;

			[Token(Token = "0x600235D")]
			[Address(RVA = "0x10829B4", Offset = "0x10829B4", VA = "0x10829B4")]
			public <>c__DisplayClass42_0()
			{
			}

			[Token(Token = "0x600235E")]
			[Address(RVA = "0x1086E18", Offset = "0x1086E18", VA = "0x1086E18")]
			internal object <ApplyLocalizationParams>b__0(string p)
			{
				return null;
			}
		}

		[Token(Token = "0x20005F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1600", Offset = "0xAC1600")]
		private sealed class <>c__DisplayClass43_0
		{
			[Token(Token = "0x4002001")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Dictionary<string, object> parameters;

			[Token(Token = "0x600235F")]
			[Address(RVA = "0x1082AA4", Offset = "0x1082AA4", VA = "0x1082AA4")]
			public <>c__DisplayClass43_0()
			{
			}

			[Token(Token = "0x6002360")]
			[Address(RVA = "0x1086E90", Offset = "0x1086E90", VA = "0x1086E90")]
			internal object <ApplyLocalizationParams>b__0(string p)
			{
				return null;
			}
		}

		[Token(Token = "0x20005FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1610", Offset = "0xAC1610")]
		private sealed class <Delayed_Import_Google>d__61 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002002")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002003")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002004")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4002005")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LanguageSourceData source;

			[Token(Token = "0x4002006")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool justCheck;

			[Token(Token = "0x17000387")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002364")]
				[Address(RVA = "0x1087160", Offset = "0x1087160", VA = "0x1087160", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000388")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002366")]
				[Address(RVA = "0x10871C8", Offset = "0x10871C8", VA = "0x10871C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002361")]
			[Address(RVA = "0x1083F34", Offset = "0x1083F34", VA = "0x1083F34")]
			[DebuggerHidden]
			public <Delayed_Import_Google>d__61(int <>1__state)
			{
			}

			[Token(Token = "0x6002362")]
			[Address(RVA = "0x108709C", Offset = "0x108709C", VA = "0x108709C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002363")]
			[Address(RVA = "0x10870A0", Offset = "0x10870A0", VA = "0x10870A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002365")]
			[Address(RVA = "0x1087168", Offset = "0x1087168", VA = "0x1087168", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1620", Offset = "0xAC1620")]
		private sealed class <>c__DisplayClass71_0
		{
			[Token(Token = "0x4002007")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ILocalizeTargetDescriptor desc;

			[Token(Token = "0x6002367")]
			[Address(RVA = "0x1084B14", Offset = "0x1084B14", VA = "0x1084B14")]
			public <>c__DisplayClass71_0()
			{
			}

			[Token(Token = "0x6002368")]
			[Address(RVA = "0x1086F10", Offset = "0x1086F10", VA = "0x1086F10")]
			internal bool <RegisterTarget>b__0(ILocalizeTargetDescriptor x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1630", Offset = "0xAC1630")]
		private sealed class <Coroutine_LocalizeAll>d__86 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002008")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002009")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000389")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600236C")]
				[Address(RVA = "0x108702C", Offset = "0x108702C", VA = "0x108702C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700038A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600236E")]
				[Address(RVA = "0x1087094", Offset = "0x1087094", VA = "0x1087094", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002369")]
			[Address(RVA = "0x10854D4", Offset = "0x10854D4", VA = "0x10854D4")]
			[DebuggerHidden]
			public <Coroutine_LocalizeAll>d__86(int <>1__state)
			{
			}

			[Token(Token = "0x600236A")]
			[Address(RVA = "0x1086F3C", Offset = "0x1086F3C", VA = "0x1086F3C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600236B")]
			[Address(RVA = "0x1086F40", Offset = "0x1086F40", VA = "0x1086F40", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600236D")]
			[Address(RVA = "0x1087034", Offset = "0x1087034", VA = "0x1087034", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string mCurrentLanguage;

		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string mLanguageCode;

		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static CultureInfo mCurrentCulture;

		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static bool mChangeCultureInfo;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public static bool IsRight2Left;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public static bool HasJoinedWords;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static List<ILocalizationParamsManager> ParamManagers;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static string[] LanguagesRTL;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static List<LanguageSourceData> Sources;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static string[] GlobalSources;

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Func<LanguageSourceData, bool> Callback_AllowSyncFromGoogle;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static string mCurrentDeviceLanguage;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static List<ILocalizeTargetDescriptor> mLocalizeTargets;

		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static bool mLocalizeIsScheduled;

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private static bool mLocalizeIsScheduledWithForcedValue;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		public static bool HighlightLocalizedTargets;

		[Token(Token = "0x170001F7")]
		public static string CurrentLanguage
		{
			[Token(Token = "0x6001956")]
			[Address(RVA = "0x107C5AC", Offset = "0x107C5AC", VA = "0x107C5AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001957")]
			[Address(RVA = "0x1080428", Offset = "0x1080428", VA = "0x1080428")]
			set
			{
			}
		}

		[Token(Token = "0x170001F8")]
		public static string CurrentLanguageCode
		{
			[Token(Token = "0x6001958")]
			[Address(RVA = "0x1080D8C", Offset = "0x1080D8C", VA = "0x1080D8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001959")]
			[Address(RVA = "0x1080DF8", Offset = "0x1080DF8", VA = "0x1080DF8")]
			set
			{
			}
		}

		[Token(Token = "0x170001F9")]
		public static string CurrentRegion
		{
			[Token(Token = "0x600195A")]
			[Address(RVA = "0x10810E0", Offset = "0x10810E0", VA = "0x10810E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600195B")]
			[Address(RVA = "0x1081234", Offset = "0x1081234", VA = "0x1081234")]
			set
			{
			}
		}

		[Token(Token = "0x170001FA")]
		public static string CurrentRegionCode
		{
			[Token(Token = "0x600195C")]
			[Address(RVA = "0x10813C8", Offset = "0x10813C8", VA = "0x10813C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600195D")]
			[Address(RVA = "0x1081490", Offset = "0x1081490", VA = "0x1081490")]
			set
			{
			}
		}

		[Token(Token = "0x170001FB")]
		public static CultureInfo CurrentCulture
		{
			[Token(Token = "0x600195E")]
			[Address(RVA = "0x1081594", Offset = "0x1081594", VA = "0x1081594")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x140000CD")]
		public static event OnLocalizeCallback OnLocalizeEvent
		{
			[Token(Token = "0x6001987")]
			[Address(RVA = "0x1084B1C", Offset = "0x1084B1C", VA = "0x1084B1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAD00E0", Offset = "0xAD00E0")]
			add
			{
			}
			[Token(Token = "0x6001988")]
			[Address(RVA = "0x1084C0C", Offset = "0x1084C0C", VA = "0x1084C0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAD00F0", Offset = "0xAD00F0")]
			remove
			{
			}
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0x107FC64", Offset = "0x107FC64", VA = "0x107FC64")]
		public static void InitializeIfNeeded()
		{
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0x10803E0", Offset = "0x10803E0", VA = "0x10803E0")]
		public static string GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0x107D758", Offset = "0x107D758", VA = "0x107D758")]
		public static int GetRequiredWebServiceVersion()
		{
			return default(int);
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0x107A990", Offset = "0x107A990", VA = "0x107A990")]
		public static string GetWebServiceURL([Optional] LanguageSourceData source)
		{
			return null;
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0x1080B74", Offset = "0x1080B74", VA = "0x1080B74")]
		public static void SetLanguageAndCode(string LanguageName, string LanguageCode, bool RememberLanguage = true, bool Force = false)
		{
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0x10815FC", Offset = "0x10815FC", VA = "0x10815FC")]
		private static CultureInfo CreateCultureForCode(string code)
		{
			return null;
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0x1081810", Offset = "0x1081810", VA = "0x1081810")]
		public static void EnableChangingCultureInfo(bool bEnable)
		{
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0x1081700", Offset = "0x1081700", VA = "0x1081700")]
		private static void SetCurrentCultureInfo()
		{
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0x107FF4C", Offset = "0x107FF4C", VA = "0x107FF4C")]
		private static void SelectStartupLanguage()
		{
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0x1081990", Offset = "0x1081990", VA = "0x1081990")]
		public static bool HasLanguage(string Language, bool AllowDiscartingRegion = true, bool Initialize = true, bool SkipDisabled = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0x1080518", Offset = "0x1080518", VA = "0x1080518")]
		public static string GetSupportedLanguage(string Language, bool ignoreDisabled = false)
		{
			return null;
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0x1080990", Offset = "0x1080990", VA = "0x1080990")]
		public static string GetLanguageCode(string Language)
		{
			return null;
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0x1080EEC", Offset = "0x1080EEC", VA = "0x1080EEC")]
		public static string GetLanguageFromCode(string Code, bool exactMatch = true)
		{
			return null;
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0x1081B9C", Offset = "0x1081B9C", VA = "0x1081B9C")]
		public static List<string> GetAllLanguages(bool SkipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0x1081E10", Offset = "0x1081E10", VA = "0x1081E10")]
		public static List<string> GetAllLanguagesCode(bool allowRegions = true, bool SkipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0x1082038", Offset = "0x1082038", VA = "0x1082038")]
		public static bool IsLanguageEnabled(string Language)
		{
			return default(bool);
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0x1082144", Offset = "0x1082144", VA = "0x1082144")]
		private static void LoadCurrentLanguage()
		{
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0x1082290", Offset = "0x1082290", VA = "0x1082290")]
		public static void PreviewLanguage(string NewLanguage)
		{
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0x107FD3C", Offset = "0x107FD3C", VA = "0x107FD3C")]
		public static void AutoLoadGlobalParamManagers()
		{
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0x1082390", Offset = "0x1082390", VA = "0x1082390")]
		public static void ApplyLocalizationParams(ref string translation, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0x10828CC", Offset = "0x10828CC", VA = "0x10828CC")]
		public static void ApplyLocalizationParams(ref string translation, GameObject root, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0x10829BC", Offset = "0x10829BC", VA = "0x10829BC")]
		public static void ApplyLocalizationParams(ref string translation, Dictionary<string, object> parameters, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0x10824C0", Offset = "0x10824C0", VA = "0x10824C0")]
		public static void ApplyLocalizationParams(ref string translation, _GetParam getParam, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0x1082FCC", Offset = "0x1082FCC", VA = "0x1082FCC")]
		internal static string GetLocalizationParam(string ParamName, GameObject root)
		{
			return null;
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0x1083278", Offset = "0x1083278", VA = "0x1083278")]
		private static string GetPluralType(MatchCollection matches, string langCode, _GetParam getParam)
		{
			return null;
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0x1083444", Offset = "0x1083444", VA = "0x1083444")]
		public static string ApplyRTLfix(string line)
		{
			return null;
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0x10834B0", Offset = "0x10834B0", VA = "0x10834B0")]
		public static string ApplyRTLfix(string line, int maxCharacters, bool ignoreNumbers)
		{
			return null;
		}

		[Token(Token = "0x6001976")]
		[Address(RVA = "0x10838A0", Offset = "0x10838A0", VA = "0x10838A0")]
		public static string FixRTL_IfNeeded(string text, int maxCharacters = 0, bool ignoreNumber = false)
		{
			return null;
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0x1081788", Offset = "0x1081788", VA = "0x1081788")]
		public static bool IsRTL(string Code)
		{
			return default(bool);
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0x107FEC4", Offset = "0x107FEC4", VA = "0x107FEC4")]
		public static bool UpdateSources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0x1083954", Offset = "0x1083954", VA = "0x1083954")]
		private static void UnregisterDeletededSources()
		{
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0x1083C4C", Offset = "0x1083C4C", VA = "0x1083C4C")]
		private static void RegisterSceneSources()
		{
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0x1083A90", Offset = "0x1083A90", VA = "0x1083A90")]
		private static void RegisterSourceInResources()
		{
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0x1083DD8", Offset = "0x1083DD8", VA = "0x1083DD8")]
		private static bool AllowSyncFromGoogle(LanguageSourceData Source)
		{
			return default(bool);
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0x107786C", Offset = "0x107786C", VA = "0x107786C")]
		internal static void AddSource(LanguageSourceData Source)
		{
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0x1083E94", Offset = "0x1083E94", VA = "0x1083E94")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAD007C", Offset = "0xAD007C")]
		private static IEnumerator Delayed_Import_Google(LanguageSourceData source, float delay, bool justCheck)
		{
			return null;
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0x1078210", Offset = "0x1078210", VA = "0x1078210")]
		internal static void RemoveSource(LanguageSourceData Source)
		{
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0x1083F60", Offset = "0x1083F60", VA = "0x1083F60")]
		public static bool IsGlobalSource(string SourceName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001981")]
		[Address(RVA = "0x1083FE8", Offset = "0x1083FE8", VA = "0x1083FE8")]
		public static LanguageSourceData GetSourceContaining(string term, bool fallbackToFirst = true)
		{
			return null;
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0x10841D4", Offset = "0x10841D4", VA = "0x10841D4")]
		public static UnityEngine.Object FindAsset(string value)
		{
			return null;
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0x1084314", Offset = "0x1084314", VA = "0x1084314")]
		public static void ApplyDownloadedDataFromGoogle()
		{
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0x10818C4", Offset = "0x10818C4", VA = "0x10818C4")]
		public static string GetCurrentDeviceLanguage(bool force = false)
		{
			return null;
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0x1084400", Offset = "0x1084400", VA = "0x1084400")]
		private static void DetectDeviceLanguage()
		{
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0x10848D0", Offset = "0x10848D0", VA = "0x10848D0")]
		public static void RegisterTarget(ILocalizeTargetDescriptor desc)
		{
		}

		[Token(Token = "0x6001989")]
		[Address(RVA = "0x1084CFC", Offset = "0x1084CFC", VA = "0x1084CFC")]
		public static string GetTranslation(string Term, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage, bool allowLocalizedParameters = true)
		{
			return null;
		}

		[Token(Token = "0x600198A")]
		[Address(RVA = "0x1084FF4", Offset = "0x1084FF4", VA = "0x1084FF4")]
		public static string GetTermTranslation(string Term, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage, bool allowLocalizedParameters = true)
		{
			return null;
		}

		[Token(Token = "0x600198B")]
		[Address(RVA = "0x1084DD0", Offset = "0x1084DD0", VA = "0x1084DD0")]
		public static bool TryGetTranslation(string Term, out string Translation, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage, bool allowLocalizedParameters = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600198C")]
		public static T GetTranslatedObject<T>(string AssetName, [Optional] Localize optionalLocComp) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x600198D")]
		public static T GetTranslatedObjectByTermName<T>(string Term, [Optional] Localize optionalLocComp) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0x10850B0", Offset = "0x10850B0", VA = "0x10850B0")]
		public static string GetAppName(string languageCode)
		{
			return null;
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0x10780A4", Offset = "0x10780A4", VA = "0x10780A4")]
		public static void LocalizeAll(bool Force = false)
		{
		}

		[Token(Token = "0x6001990")]
		[Address(RVA = "0x1085474", Offset = "0x1085474", VA = "0x1085474")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAD0100", Offset = "0xAD0100")]
		private static IEnumerator Coroutine_LocalizeAll()
		{
			return null;
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0x1085300", Offset = "0x1085300", VA = "0x1085300")]
		private static void DoLocalizeAll(bool Force = false)
		{
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0x108604C", Offset = "0x108604C", VA = "0x108604C")]
		public static List<string> GetCategories()
		{
			return null;
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0x1086170", Offset = "0x1086170", VA = "0x1086170")]
		public static List<string> GetTermsList([Optional] string Category)
		{
			return null;
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0x10863B8", Offset = "0x10863B8", VA = "0x10863B8")]
		public static TermData GetTermData(string term)
		{
			return null;
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0x1082E48", Offset = "0x1082E48", VA = "0x1082E48")]
		public static TermData GetTermData(string term, out LanguageSourceData source)
		{
			return null;
		}
	}
	[Token(Token = "0x2000390")]
	public abstract class ILocalizeTarget : ScriptableObject
	{
		[Token(Token = "0x6001997")]
		public abstract bool IsValid(Localize cmp);

		[Token(Token = "0x6001998")]
		public abstract void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm);

		[Token(Token = "0x6001999")]
		public abstract void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation);

		[Token(Token = "0x600199A")]
		public abstract bool CanUseSecondaryTerm();

		[Token(Token = "0x600199B")]
		public abstract bool AllowMainTermToBeRTL();

		[Token(Token = "0x600199C")]
		public abstract bool AllowSecondTermToBeRTL();

		[Token(Token = "0x600199D")]
		public abstract eTermType GetPrimaryTermType(Localize cmp);

		[Token(Token = "0x600199E")]
		public abstract eTermType GetSecondaryTermType(Localize cmp);

		[Token(Token = "0x600199F")]
		[Address(RVA = "0x1411DBC", Offset = "0x1411DBC", VA = "0x1411DBC")]
		protected ILocalizeTarget()
		{
		}
	}
	[Token(Token = "0x2000391")]
	public abstract class LocalizeTarget<T> : ILocalizeTarget where T : UnityEngine.Object
	{
		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T mTarget;

		[Token(Token = "0x60019A0")]
		public override bool IsValid(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x60019A1")]
		protected LocalizeTarget()
		{
		}
	}
	[Token(Token = "0x2000392")]
	public abstract class ILocalizeTargetDescriptor
	{
		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Priority;

		[Token(Token = "0x60019A2")]
		public abstract bool CanLocalize(Localize cmp);

		[Token(Token = "0x60019A3")]
		public abstract ILocalizeTarget CreateTarget(Localize cmp);

		[Token(Token = "0x60019A4")]
		public abstract Type GetTargetType();

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0x1411DC4", Offset = "0x1411DC4", VA = "0x1411DC4")]
		protected ILocalizeTargetDescriptor()
		{
		}
	}
	[Token(Token = "0x2000393")]
	public abstract class LocalizeTargetDesc<T> : ILocalizeTargetDescriptor where T : ILocalizeTarget
	{
		[Token(Token = "0x60019A6")]
		public override ILocalizeTarget CreateTarget(Localize cmp)
		{
			return null;
		}

		[Token(Token = "0x60019A7")]
		public override Type GetTargetType()
		{
			return null;
		}

		[Token(Token = "0x60019A8")]
		protected LocalizeTargetDesc()
		{
		}
	}
	[Token(Token = "0x2000394")]
	public class LocalizeTargetDesc_Type<T, G> : LocalizeTargetDesc<G> where T : UnityEngine.Object where G : LocalizeTarget<T>
	{
		[Token(Token = "0x60019A9")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x60019AA")]
		public override ILocalizeTarget CreateTarget(Localize cmp)
		{
			return null;
		}

		[Token(Token = "0x60019AB")]
		public LocalizeTargetDesc_Type()
		{
		}
	}
	[Token(Token = "0x2000395")]
	public class LocalizeTarget_TextMeshPro_Label : LocalizeTarget<TextMeshPro>
	{
		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextAlignmentOptions mAlignment_RTL;

		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TextAlignmentOptions mAlignment_LTR;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool mInitializeAlignment;

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0x108A1B8", Offset = "0x108A1B8", VA = "0x108A1B8")]
		static LocalizeTarget_TextMeshPro_Label()
		{
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0x108A1BC", Offset = "0x108A1BC", VA = "0x108A1BC")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xAD0164", Offset = "0xAD0164")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0x108A26C", Offset = "0x108A26C", VA = "0x108A26C", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0x108A274", Offset = "0x108A274", VA = "0x108A274", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0x108A27C", Offset = "0x108A27C", VA = "0x108A27C", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0x108A284", Offset = "0x108A284", VA = "0x108A284", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0x108A28C", Offset = "0x108A28C", VA = "0x108A28C", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0x108A294", Offset = "0x108A294", VA = "0x108A294", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0x108A3C4", Offset = "0x108A3C4", VA = "0x108A3C4", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0x108AA08", Offset = "0x108AA08", VA = "0x108AA08")]
		internal static TMP_FontAsset GetTMPFontFromMaterial(Localize cmp, string matName)
		{
			return null;
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0x108AC98", Offset = "0x108AC98", VA = "0x108AC98")]
		internal static void InitAlignment_TMPro(bool isRTL, TextAlignmentOptions alignment, out TextAlignmentOptions alignLTR, out TextAlignmentOptions alignRTL)
		{
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0x108A900", Offset = "0x108A900", VA = "0x108A900")]
		internal static void SetFont(TMP_Text label, TMP_FontAsset newFont)
		{
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0x108AB70", Offset = "0x108AB70", VA = "0x108AB70")]
		internal static void SetMaterial(TMP_Text label, Material newMat)
		{
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0x108AEAC", Offset = "0x108AEAC", VA = "0x108AEAC")]
		public LocalizeTarget_TextMeshPro_Label()
		{
		}
	}
	[Token(Token = "0x2000396")]
	public class LocalizeTarget_TextMeshPro_UGUI : LocalizeTarget<TextMeshProUGUI>
	{
		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextAlignmentOptions mAlignment_RTL;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public TextAlignmentOptions mAlignment_LTR;

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool mAlignmentWasRTL;

		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool mInitializeAlignment;

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0x108AF10", Offset = "0x108AF10", VA = "0x108AF10")]
		static LocalizeTarget_TextMeshPro_UGUI()
		{
		}

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0x108AF14", Offset = "0x108AF14", VA = "0x108AF14")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xAD0178", Offset = "0xAD0178")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0x108AFC4", Offset = "0x108AFC4", VA = "0x108AFC4", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0x108AFCC", Offset = "0x108AFCC", VA = "0x108AFCC", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0x108AFD4", Offset = "0x108AFD4", VA = "0x108AFD4", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0x108AFDC", Offset = "0x108AFDC", VA = "0x108AFDC", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0x108AFE4", Offset = "0x108AFE4", VA = "0x108AFE4", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60019C1")]
		[Address(RVA = "0x108AFEC", Offset = "0x108AFEC", VA = "0x108AFEC", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0x108B11C", Offset = "0x108B11C", VA = "0x108B11C", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0x108B658", Offset = "0x108B658", VA = "0x108B658")]
		public LocalizeTarget_TextMeshPro_UGUI()
		{
		}
	}
	[Token(Token = "0x2000397")]
	public class LocalizeTarget_UnityStandard_AudioSource : LocalizeTarget<AudioSource>
	{
		[Token(Token = "0x60019C4")]
		[Address(RVA = "0x108B6BC", Offset = "0x108B6BC", VA = "0x108B6BC")]
		static LocalizeTarget_UnityStandard_AudioSource()
		{
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0x108B6C0", Offset = "0x108B6C0", VA = "0x108B6C0")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xAD018C", Offset = "0xAD018C")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0x108B770", Offset = "0x108B770", VA = "0x108B770", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0x108B778", Offset = "0x108B778", VA = "0x108B778", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0x108B780", Offset = "0x108B780", VA = "0x108B780", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0x108B788", Offset = "0x108B788", VA = "0x108B788", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0x108B790", Offset = "0x108B790", VA = "0x108B790", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0x108B798", Offset = "0x108B798", VA = "0x108B798", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0x108B884", Offset = "0x108B884", VA = "0x108B884", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0x108BA00", Offset = "0x108BA00", VA = "0x108BA00")]
		public LocalizeTarget_UnityStandard_AudioSource()
		{
		}
	}
	[Token(Token = "0x2000398")]
	public class LocalizeTargetDesc_Child : LocalizeTargetDesc<LocalizeTarget_UnityStandard_Child>
	{
		[Token(Token = "0x60019CE")]
		[Address(RVA = "0x108A0D8", Offset = "0x108A0D8", VA = "0x108A0D8", Slot = "4")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0x108A110", Offset = "0x108A110", VA = "0x108A110")]
		public LocalizeTargetDesc_Child()
		{
		}
	}
	[Token(Token = "0x2000399")]
	public class LocalizeTarget_UnityStandard_Child : LocalizeTarget<GameObject>
	{
		[Token(Token = "0x60019D0")]
		[Address(RVA = "0x108BA50", Offset = "0x108BA50", VA = "0x108BA50")]
		static LocalizeTarget_UnityStandard_Child()
		{
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0x108BA54", Offset = "0x108BA54", VA = "0x108BA54")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xAD01A0", Offset = "0xAD01A0")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0x108BAF8", Offset = "0x108BAF8", VA = "0x108BAF8", Slot = "4")]
		public override bool IsValid(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0x108BB30", Offset = "0x108BB30", VA = "0x108BB30", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0x108BB38", Offset = "0x108BB38", VA = "0x108BB38", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0x108BB40", Offset = "0x108BB40", VA = "0x108BB40", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0x108BB48", Offset = "0x108BB48", VA = "0x108BB48", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0x108BB50", Offset = "0x108BB50", VA = "0x108BB50", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0x108BB58", Offset = "0x108BB58", VA = "0x108BB58", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0x108BBA8", Offset = "0x108BBA8", VA = "0x108BBA8", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0x108BD00", Offset = "0x108BD00", VA = "0x108BD00")]
		public LocalizeTarget_UnityStandard_Child()
		{
		}
	}
	[Token(Token = "0x200039A")]
	public class LocalizeTarget_UnityStandard_MeshRenderer : LocalizeTarget<MeshRenderer>
	{
		[Token(Token = "0x60019DB")]
		[Address(RVA = "0x108BD50", Offset = "0x108BD50", VA = "0x108BD50")]
		static LocalizeTarget_UnityStandard_MeshRenderer()
		{
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0x108BD54", Offset = "0x108BD54", VA = "0x108BD54")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xAD01B4", Offset = "0xAD01B4")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0x108BE04", Offset = "0x108BE04", VA = "0x108BE04", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0x108BE0C", Offset = "0x108BE0C", VA = "0x108BE0C", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0x108BE14", Offset = "0x108BE14", VA = "0x108BE14", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0x108BE1C", Offset = "0x108BE1C", VA = "0x108BE1C", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0x108BE24", Offset = "0x108BE24", VA = "0x108BE24", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0x108BE2C", Offset = "0x108BE2C", VA = "0x108BE2C", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0x108C048", Offset = "0x108C048", VA = "0x108C048", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0x108C220", Offset = "0x108C220", VA = "0x108C220")]
		public LocalizeTarget_UnityStandard_MeshRenderer()
		{
		}
	}
	[Token(Token = "0x200039B")]
	public class LocalizeTargetDesc_Prefab : LocalizeTargetDesc<LocalizeTarget_UnityStandard_Prefab>
	{
		[Token(Token = "0x60019E5")]
		[Address(RVA = "0x108A160", Offset = "0x108A160", VA = "0x108A160", Slot = "4")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0x108A168", Offset = "0x108A168", VA = "0x108A168")]
		public LocalizeTargetDesc_Prefab()
		{
		}
	}
	[Token(Token = "0x200039C")]
	public class LocalizeTarget_UnityStandard_Prefab : LocalizeTarget<GameObject>
	{
		[Token(Token = "0x60019E7")]
		[Address(RVA = "0x108C270", Offset = "0x108C270", VA = "0x108C270")]
		static LocalizeTarget_UnityStandard_Prefab()
		{
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0x108C274", Offset = "0x108C274", VA = "0x108C274")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xAD01C8", Offset = "0xAD01C8")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0x108C318", Offset = "0x108C318", VA = "0x108C318", Slot = "4")]
		public override bool IsValid(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0x108C320", Offset = "0x108C320", VA = "0x108C320", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0x108C328", Offset = "0x108C328", VA = "0x108C328", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0x108C330", Offset = "0x108C330", VA = "0x108C330", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0x108C338", Offset = "0x108C338", VA = "0x108C338", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0x108C340", Offset = "0x108C340", VA = "0x108C340", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0x108C348", Offset = "0x108C348", VA = "0x108C348", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0x108C398", Offset = "0x108C398", VA = "0x108C398", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0x108C5C0", Offset = "0x108C5C0", VA = "0x108C5C0")]
		private Transform InstantiateNewPrefab(Localize cmp, string mainTranslation)
		{
			return null;
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0x108C77C", Offset = "0x108C77C", VA = "0x108C77C")]
		public LocalizeTarget_UnityStandard_Prefab()
		{
		}
	}
	[Token(Token = "0x200039D")]
	public class LocalizeTarget_UnityStandard_SpriteRenderer : LocalizeTarget<SpriteRenderer>
	{
		[Token(Token = "0x60019F3")]
		[Address(RVA = "0x108C7CC", Offset = "0x108C7CC", VA = "0x108C7CC")]
		static LocalizeTarget_UnityStandard_SpriteRenderer()
		{
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0x108C7D0", Offset = "0x108C7D0", VA = "0x108C7D0")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xAD01DC", Offset = "0xAD01DC")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0x108C880", Offset = "0x108C880", VA = "0x108C880", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0x108C888", Offset = "0x108C888", VA = "0x108C888", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0x108C890", Offset = "0x108C890", VA = "0x108C890", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0x108C898", Offset = "0x108C898", VA = "0x108C898", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0x108C8A0", Offset = "0x108C8A0", VA = "0x108C8A0", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0x108C8A8", Offset = "0x108C8A8", VA = "0x108C8A8", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0x108C998", Offset = "0x108C998", VA = "0x108C998", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0x108CA98", Offset = "0x108CA98", VA = "0x108CA98")]
		public LocalizeTarget_UnityStandard_SpriteRenderer()
		{
		}
	}
	[Token(Token = "0x200039E")]
	public class LocalizeTarget_UnityStandard_TextMesh : LocalizeTarget<TextMesh>
	{
		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextAlignment mAlignment_RTL;

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TextAlignment mAlignment_LTR;

		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool mInitializeAlignment;

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0x108CAE8", Offset = "0x108CAE8", VA = "0x108CAE8")]
		static LocalizeTarget_UnityStandard_TextMesh()
		{
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0x108CAEC", Offset = "0x108CAEC", VA = "0x108CAEC")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xAD01F0", Offset = "0xAD01F0")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0x108CB9C", Offset = "0x108CB9C", VA = "0x108CB9C", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0x108CBA4", Offset = "0x108CBA4", VA = "0x108CBA4", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0x108CBAC", Offset = "0x108CBAC", VA = "0x108CBAC", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0x108CBB4", Offset = "0x108CBB4", VA = "0x108CBB4", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0x108CBBC", Offset = "0x108CBBC", VA = "0x108CBBC", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0x108CBC4", Offset = "0x108CBC4", VA = "0x108CBC4", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0x108CD00", Offset = "0x108CD00", VA = "0x108CD00", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0x108CFBC", Offset = "0x108CFBC", VA = "0x108CFBC")]
		public LocalizeTarget_UnityStandard_TextMesh()
		{
		}
	}
	[Token(Token = "0x200039F")]
	public class LocalizeTarget_UnityStandard_VideoPlayer : LocalizeTarget<VideoPlayer>
	{
		[Token(Token = "0x6001A07")]
		[Address(RVA = "0x108D01C", Offset = "0x108D01C", VA = "0x108D01C")]
		static LocalizeTarget_UnityStandard_VideoPlayer()
		{
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0x108D020", Offset = "0x108D020", VA = "0x108D020")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xAD0204", Offset = "0xAD0204")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0x108D0D0", Offset = "0x108D0D0", VA = "0x108D0D0", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0x108D0D8", Offset = "0x108D0D8", VA = "0x108D0D8", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0x108D0E0", Offset = "0x108D0E0", VA = "0x108D0E0", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0x108D0E8", Offset = "0x108D0E8", VA = "0x108D0E8", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0x108D0F0", Offset = "0x108D0F0", VA = "0x108D0F0", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0x108D0F8", Offset = "0x108D0F8", VA = "0x108D0F8", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0x108D1E8", Offset = "0x108D1E8", VA = "0x108D1E8", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0x108D2E8", Offset = "0x108D2E8", VA = "0x108D2E8")]
		public LocalizeTarget_UnityStandard_VideoPlayer()
		{
		}
	}
	[Token(Token = "0x20003A0")]
	public class LocalizeTarget_UnityUI_Image : LocalizeTarget<Image>
	{
		[Token(Token = "0x6001A11")]
		[Address(RVA = "0x108D338", Offset = "0x108D338", VA = "0x108D338")]
		static LocalizeTarget_UnityUI_Image()
		{
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0x108D33C", Offset = "0x108D33C", VA = "0x108D33C")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xAD0218", Offset = "0xAD0218")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0x108D3EC", Offset = "0x108D3EC", VA = "0x108D3EC", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0x108D3F4", Offset = "0x108D3F4", VA = "0x108D3F4", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0x108D3FC", Offset = "0x108D3FC", VA = "0x108D3FC", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0x108D404", Offset = "0x108D404", VA = "0x108D404", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0x108D494", Offset = "0x108D494", VA = "0x108D494", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0x108D49C", Offset = "0x108D49C", VA = "0x108D49C", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0x108D640", Offset = "0x108D640", VA = "0x108D640", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0x108D734", Offset = "0x108D734", VA = "0x108D734")]
		public LocalizeTarget_UnityUI_Image()
		{
		}
	}
	[Token(Token = "0x20003A1")]
	public class LocalizeTarget_UnityUI_RawImage : LocalizeTarget<RawImage>
	{
		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0x119AE18", Offset = "0x119AE18", VA = "0x119AE18")]
		static LocalizeTarget_UnityUI_RawImage()
		{
		}

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0x119AE1C", Offset = "0x119AE1C", VA = "0x119AE1C")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xAD022C", Offset = "0xAD022C")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0x119AED0", Offset = "0x119AED0", VA = "0x119AED0", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0x119AED8", Offset = "0x119AED8", VA = "0x119AED8", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0x119AEE0", Offset = "0x119AEE0", VA = "0x119AEE0", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0x119AEE8", Offset = "0x119AEE8", VA = "0x119AEE8", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0x119AEF0", Offset = "0x119AEF0", VA = "0x119AEF0", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0x119AEF8", Offset = "0x119AEF8", VA = "0x119AEF8", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0x119AFEC", Offset = "0x119AFEC", VA = "0x119AFEC", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0x119B0E0", Offset = "0x119B0E0", VA = "0x119B0E0")]
		public LocalizeTarget_UnityUI_RawImage()
		{
		}
	}
	[Token(Token = "0x20003A2")]
	public class LocalizeTarget_UnityUI_Text : LocalizeTarget<Text>
	{
		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextAnchor mAlignment_RTL;

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TextAnchor mAlignment_LTR;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool mInitializeAlignment;

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0x119B130", Offset = "0x119B130", VA = "0x119B130")]
		static LocalizeTarget_UnityUI_Text()
		{
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0x119B134", Offset = "0x119B134", VA = "0x119B134")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xAD0240", Offset = "0xAD0240")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0x119B1E8", Offset = "0x119B1E8", VA = "0x119B1E8", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0x119B1F0", Offset = "0x119B1F0", VA = "0x119B1F0", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0x119B1F8", Offset = "0x119B1F8", VA = "0x119B1F8", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0x119B200", Offset = "0x119B200", VA = "0x119B200", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0x119B208", Offset = "0x119B208", VA = "0x119B208", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0x119B210", Offset = "0x119B210", VA = "0x119B210", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0x119B350", Offset = "0x119B350", VA = "0x119B350", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0x119B634", Offset = "0x119B634", VA = "0x119B634")]
		private void InitAlignment(bool isRTL, TextAnchor alignment, out TextAnchor alignLTR, out TextAnchor alignRTL)
		{
		}

		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0x119B6F4", Offset = "0x119B6F4", VA = "0x119B6F4")]
		public LocalizeTarget_UnityUI_Text()
		{
		}
	}
	[Token(Token = "0x20003A3")]
	public enum eTermType
	{
		[Token(Token = "0x4001A27")]
		Text,
		[Token(Token = "0x4001A28")]
		Font,
		[Token(Token = "0x4001A29")]
		Texture,
		[Token(Token = "0x4001A2A")]
		AudioClip,
		[Token(Token = "0x4001A2B")]
		GameObject,
		[Token(Token = "0x4001A2C")]
		Sprite,
		[Token(Token = "0x4001A2D")]
		Material,
		[Token(Token = "0x4001A2E")]
		Child,
		[Token(Token = "0x4001A2F")]
		Mesh,
		[Token(Token = "0x4001A30")]
		TextMeshPFont,
		[Token(Token = "0x4001A31")]
		Object,
		[Token(Token = "0x4001A32")]
		Video
	}
	[Token(Token = "0x20003A4")]
	public enum TranslationFlag : byte
	{
		[Token(Token = "0x4001A34")]
		Normal = 1,
		[Token(Token = "0x4001A35")]
		AutoTranslated
	}
	[Serializable]
	[Token(Token = "0x20003A5")]
	public class TermData
	{
		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Term;

		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public eTermType TermType;

		[NonSerialized]
		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Description;

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] Languages;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public byte[] Flags;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string[] Languages_Touch;

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0x11A6DCC", Offset = "0x11A6DCC", VA = "0x11A6DCC")]
		public string GetTranslation(int idx, [Optional] string specialization, bool editMode = false)
		{
			return null;
		}

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0x11A6EDC", Offset = "0x11A6EDC", VA = "0x11A6EDC")]
		public void SetTranslation(int idx, string translation, [Optional] string specialization)
		{
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0x11A6FD4", Offset = "0x11A6FD4", VA = "0x11A6FD4")]
		public void RemoveSpecialization(string specialization)
		{
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0x11A7034", Offset = "0x11A7034", VA = "0x11A7034")]
		public void RemoveSpecialization(int idx, string specialization)
		{
		}

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0x11A71C0", Offset = "0x11A71C0", VA = "0x11A71C0")]
		public bool IsAutoTranslated(int idx, bool IsTouch)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0x11A7200", Offset = "0x11A7200", VA = "0x11A7200")]
		public void Validate()
		{
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0x11A7450", Offset = "0x11A7450", VA = "0x11A7450")]
		public bool IsTerm(string name, bool allowCategoryMistmatch)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0x11A74E8", Offset = "0x11A74E8", VA = "0x11A74E8")]
		public bool HasSpecializations()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0x11A75C0", Offset = "0x11A75C0", VA = "0x11A75C0")]
		public List<string> GetAllSpecializations()
		{
			return null;
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0x11A76A8", Offset = "0x11A76A8", VA = "0x11A76A8")]
		public TermData()
		{
		}
	}
	[Token(Token = "0x20003A6")]
	public class TermsPopup : PropertyAttribute
	{
		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC8940", Offset = "0xAC8940")]
		private string <Filter>k__BackingField;

		[Token(Token = "0x170001FC")]
		public string Filter
		{
			[Token(Token = "0x6001A3B")]
			[Address(RVA = "0x11A778C", Offset = "0x11A778C", VA = "0x11A778C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAD0254", Offset = "0xAD0254")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A3C")]
			[Address(RVA = "0x11A7794", Offset = "0x11A7794", VA = "0x11A7794")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAD0264", Offset = "0xAD0264")]
			private set
			{
			}
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0x11A7758", Offset = "0x11A7758", VA = "0x11A7758")]
		public TermsPopup(string filter = "")
		{
		}
	}
	[Token(Token = "0x20003A7")]
	public class AutoChangeCultureInfo : MonoBehaviour
	{
		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0x14033D0", Offset = "0x14033D0", VA = "0x14033D0")]
		public void Start()
		{
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0x1403434", Offset = "0x1403434", VA = "0x1403434")]
		public AutoChangeCultureInfo()
		{
		}
	}
	[Token(Token = "0x20003A8")]
	public class CoroutineManager : MonoBehaviour
	{
		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CoroutineManager mInstance;

		[Token(Token = "0x170001FD")]
		private static CoroutineManager pInstance
		{
			[Token(Token = "0x6001A3F")]
			[Address(RVA = "0x1403B08", Offset = "0x1403B08", VA = "0x1403B08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0x1403C3C", Offset = "0x1403C3C", VA = "0x1403C3C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0x1403CD0", Offset = "0x1403CD0", VA = "0x1403CD0")]
		public static Coroutine Start(IEnumerator coroutine)
		{
			return null;
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0x1403D00", Offset = "0x1403D00", VA = "0x1403D00")]
		public CoroutineManager()
		{
		}
	}
	[Token(Token = "0x20003A9")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAC0634", Offset = "0xAC0634")]
	public class CustomLocalizeCallback : MonoBehaviour
	{
		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent _OnLocalize;

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0x1403D08", Offset = "0x1403D08", VA = "0x1403D08")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0x1403DCC", Offset = "0x1403DCC", VA = "0x1403DCC")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0x1403E60", Offset = "0x1403E60", VA = "0x1403E60")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0x1403E7C", Offset = "0x1403E7C", VA = "0x1403E7C")]
		public CustomLocalizeCallback()
		{
		}
	}
	[Token(Token = "0x20003AA")]
	public class HindiFixer
	{
		[Serializable]
		[Token(Token = "0x20005FD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1640", Offset = "0xAC1640")]
		private sealed class <>c
		{
			[Token(Token = "0x400200A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400200B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<char, bool> <>9__0_0;

			[Token(Token = "0x6002370")]
			[Address(RVA = "0x140FCF0", Offset = "0x140FCF0", VA = "0x140FCF0")]
			public <>c()
			{
			}

			[Token(Token = "0x6002371")]
			[Address(RVA = "0x140FCF8", Offset = "0x140FCF8", VA = "0x140FCF8")]
			internal bool <Fix>b__0_0(char x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0x140F828", Offset = "0x140F828", VA = "0x140F828")]
		internal static string Fix(string text)
		{
			return null;
		}

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0x140FC80", Offset = "0x140FC80", VA = "0x140FC80")]
		public HindiFixer()
		{
		}
	}
	[Token(Token = "0x20003AB")]
	public static class I2Utils
	{
		[Serializable]
		[Token(Token = "0x20005FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1650", Offset = "0xAC1650")]
		private sealed class <>c
		{
			[Token(Token = "0x400200C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400200D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<char, bool> <>9__6_0;

			[Token(Token = "0x6002373")]
			[Address(RVA = "0x1411DA8", Offset = "0x1411DA8", VA = "0x1411DA8")]
			public <>c()
			{
			}

			[Token(Token = "0x6002374")]
			[Address(RVA = "0x1411DB0", Offset = "0x1411DB0", VA = "0x1411DB0")]
			internal bool <SplitLine>b__6_0(char c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001A3F")]
		public const string ValidChars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_";

		[Token(Token = "0x4001A40")]
		public const string NumberChars = "0123456789";

		[Token(Token = "0x4001A41")]
		public const string ValidNameSymbols = ".-_$#@*()[]{}+:?!&',^=<>~`";

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0x1410EEC", Offset = "0x1410EEC", VA = "0x1410EEC")]
		public static string ReverseText(string source)
		{
			return null;
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0x1410FC4", Offset = "0x1410FC4", VA = "0x1410FC4")]
		public static string RemoveNonASCII(string text, bool allowCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0x14111F4", Offset = "0x14111F4", VA = "0x14111F4")]
		public static string GetValidTermName(string text, bool allowCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0x14112A0", Offset = "0x14112A0", VA = "0x14112A0")]
		public static string SplitLine(string line, int maxCharacters)
		{
			return null;
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0x1411548", Offset = "0x1411548", VA = "0x1411548")]
		public static bool FindNextTag(string line, int iStart, out int tagStart, out int tagEnd)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0x1411220", Offset = "0x1411220", VA = "0x1411220")]
		public static string RemoveTags(string text)
		{
			return null;
		}

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0x14116D0", Offset = "0x14116D0", VA = "0x14116D0")]
		public static bool RemoveResourcesPath(ref string sPath)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0x1411954", Offset = "0x1411954", VA = "0x1411954")]
		public static bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0x141195C", Offset = "0x141195C", VA = "0x141195C")]
		public static string GetPath(this Transform tr)
		{
			return null;
		}

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0x1411A30", Offset = "0x1411A30", VA = "0x1411A30")]
		public static Transform FindObject(string objectPath)
		{
			return null;
		}

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0x1411AA0", Offset = "0x1411AA0", VA = "0x1411AA0")]
		public static Transform FindObject(Scene scene, string objectPath)
		{
			return null;
		}

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0x1411BEC", Offset = "0x1411BEC", VA = "0x1411BEC")]
		public static Transform FindObject(Transform root, string objectPath)
		{
			return null;
		}

		[Token(Token = "0x6001A55")]
		public static H FindInParents<H>(Transform tr) where H : Component
		{
			return null;
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0x140E8F0", Offset = "0x140E8F0", VA = "0x140E8F0")]
		public static string GetCaptureMatch(Match match)
		{
			return null;
		}

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0x1411D28", Offset = "0x1411D28", VA = "0x1411D28")]
		public static void SendWebRequest(UnityWebRequest www)
		{
		}
	}
	[Token(Token = "0x20003AC")]
	public interface ILocalizationParamsManager
	{
		[Token(Token = "0x6001A58")]
		string GetParameterValue(string Param);
	}
	[Token(Token = "0x20003AD")]
	public class LocalizationParamsManager : MonoBehaviour, ILocalizationParamsManager
	{
		[Serializable]
		[Token(Token = "0x20005FF")]
		public struct ParamValue
		{
			[Token(Token = "0x400200E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Name;

			[Token(Token = "0x400200F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string Value;
		}

		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public List<ParamValue> _Params;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool _IsGlobalManager;

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0x108724C", Offset = "0x108724C", VA = "0x108724C", Slot = "4")]
		public string GetParameterValue(string ParamName)
		{
			return null;
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0x1087338", Offset = "0x1087338", VA = "0x1087338")]
		public void SetParameterValue(string ParamName, string ParamValue, bool localize = true)
		{
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0x10874C0", Offset = "0x10874C0", VA = "0x10874C0")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0x108756C", Offset = "0x108756C", VA = "0x108756C", Slot = "5")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0x108757C", Offset = "0x108757C", VA = "0x108757C")]
		public void DoAutoRegister()
		{
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0x1087654", Offset = "0x1087654", VA = "0x1087654")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0x10876D8", Offset = "0x10876D8", VA = "0x10876D8")]
		public LocalizationParamsManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003AE")]
	public struct LocalizedString
	{
		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string mTerm;

		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool mRTL_IgnoreArabicFix;

		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int mRTL_MaxLineLength;

		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool mRTL_ConvertNumbers;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool m_DontLocalizeParameters;

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0x119B754", Offset = "0x119B754", VA = "0x119B754")]
		public static implicit operator string(LocalizedString s)
		{
			return null;
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0x119B830", Offset = "0x119B830", VA = "0x119B830")]
		public static implicit operator LocalizedString(string term)
		{
			return default(LocalizedString);
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0x119B874", Offset = "0x119B874", VA = "0x119B874")]
		public LocalizedString(LocalizedString str)
		{
		}

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0x119B758", Offset = "0x119B758", VA = "0x119B758", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003AF")]
	public class RTLFixer
	{
		[Token(Token = "0x6001A64")]
		[Address(RVA = "0x119C014", Offset = "0x119C014", VA = "0x119C014")]
		public static string Fix(string str)
		{
			return null;
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0x119C2C0", Offset = "0x119C2C0", VA = "0x119C2C0")]
		public static string Fix(string str, bool rtl)
		{
			return null;
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0x119C020", Offset = "0x119C020", VA = "0x119C020")]
		public static string Fix(string str, bool showTashkeel, bool useHinduNumbers)
		{
			return null;
		}

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0x119D200", Offset = "0x119D200", VA = "0x119D200")]
		public RTLFixer()
		{
		}
	}
	[Token(Token = "0x20003B0")]
	internal enum IsolatedArabicLetters
	{
		[Token(Token = "0x4001A4A")]
		Hamza = 65152,
		[Token(Token = "0x4001A4B")]
		Alef = 65165,
		[Token(Token = "0x4001A4C")]
		AlefHamza = 65155,
		[Token(Token = "0x4001A4D")]
		WawHamza = 65157,
		[Token(Token = "0x4001A4E")]
		AlefMaksoor = 65159,
		[Token(Token = "0x4001A4F")]
		AlefMaksora = 64508,
		[Token(Token = "0x4001A50")]
		HamzaNabera = 65161,
		[Token(Token = "0x4001A51")]
		Ba = 65167,
		[Token(Token = "0x4001A52")]
		Ta = 65173,
		[Token(Token = "0x4001A53")]
		Tha2 = 65177,
		[Token(Token = "0x4001A54")]
		Jeem = 65181,
		[Token(Token = "0x4001A55")]
		H7aa = 65185,
		[Token(Token = "0x4001A56")]
		Khaa2 = 65189,
		[Token(Token = "0x4001A57")]
		Dal = 65193,
		[Token(Token = "0x4001A58")]
		Thal = 65195,
		[Token(Token = "0x4001A59")]
		Ra2 = 65197,
		[Token(Token = "0x4001A5A")]
		Zeen = 65199,
		[Token(Token = "0x4001A5B")]
		Seen = 65201,
		[Token(Token = "0x4001A5C")]
		Sheen = 65205,
		[Token(Token = "0x4001A5D")]
		S9a = 65209,
		[Token(Token = "0x4001A5E")]
		Dha = 65213,
		[Token(Token = "0x4001A5F")]
		T6a = 65217,
		[Token(Token = "0x4001A60")]
		T6ha = 65221,
		[Token(Token = "0x4001A61")]
		Ain = 65225,
		[Token(Token = "0x4001A62")]
		Gain = 65229,
		[Token(Token = "0x4001A63")]
		Fa = 65233,
		[Token(Token = "0x4001A64")]
		Gaf = 65237,
		[Token(Token = "0x4001A65")]
		Kaf = 65241,
		[Token(Token = "0x4001A66")]
		Lam = 65245,
		[Token(Token = "0x4001A67")]
		Meem = 65249,
		[Token(Token = "0x4001A68")]
		Noon = 65253,
		[Token(Token = "0x4001A69")]
		Ha = 65257,
		[Token(Token = "0x4001A6A")]
		Waw = 65261,
		[Token(Token = "0x4001A6B")]
		Ya = 65265,
		[Token(Token = "0x4001A6C")]
		AlefMad = 65153,
		[Token(Token = "0x4001A6D")]
		TaMarboota = 65171,
		[Token(Token = "0x4001A6E")]
		PersianPe = 64342,
		[Token(Token = "0x4001A6F")]
		PersianChe = 64378,
		[Token(Token = "0x4001A70")]
		PersianZe = 64394,
		[Token(Token = "0x4001A71")]
		PersianGaf = 64402,
		[Token(Token = "0x4001A72")]
		PersianGaf2 = 64398
	}
	[Token(Token = "0x20003B1")]
	internal enum GeneralArabicLetters
	{
		[Token(Token = "0x4001A74")]
		Hamza = 1569,
		[Token(Token = "0x4001A75")]
		Alef = 1575,
		[Token(Token = "0x4001A76")]
		AlefHamza = 1571,
		[Token(Token = "0x4001A77")]
		WawHamza = 1572,
		[Token(Token = "0x4001A78")]
		AlefMaksoor = 1573,
		[Token(Token = "0x4001A79")]
		AlefMagsora = 1609,
		[Token(Token = "0x4001A7A")]
		HamzaNabera = 1574,
		[Token(Token = "0x4001A7B")]
		Ba = 1576,
		[Token(Token = "0x4001A7C")]
		Ta = 1578,
		[Token(Token = "0x4001A7D")]
		Tha2 = 1579,
		[Token(Token = "0x4001A7E")]
		Jeem = 1580,
		[Token(Token = "0x4001A7F")]
		H7aa = 1581,
		[Token(Token = "0x4001A80")]
		Khaa2 = 1582,
		[Token(Token = "0x4001A81")]
		Dal = 1583,
		[Token(Token = "0x4001A82")]
		Thal = 1584,
		[Token(Token = "0x4001A83")]
		Ra2 = 1585,
		[Token(Token = "0x4001A84")]
		Zeen = 1586,
		[Token(Token = "0x4001A85")]
		Seen = 1587,
		[Token(Token = "0x4001A86")]
		Sheen = 1588,
		[Token(Token = "0x4001A87")]
		S9a = 1589,
		[Token(Token = "0x4001A88")]
		Dha = 1590,
		[Token(Token = "0x4001A89")]
		T6a = 1591,
		[Token(Token = "0x4001A8A")]
		T6ha = 1592,
		[Token(Token = "0x4001A8B")]
		Ain = 1593,
		[Token(Token = "0x4001A8C")]
		Gain = 1594,
		[Token(Token = "0x4001A8D")]
		Fa = 1601,
		[Token(Token = "0x4001A8E")]
		Gaf = 1602,
		[Token(Token = "0x4001A8F")]
		Kaf = 1603,
		[Token(Token = "0x4001A90")]
		Lam = 1604,
		[Token(Token = "0x4001A91")]
		Meem = 1605,
		[Token(Token = "0x4001A92")]
		Noon = 1606,
		[Token(Token = "0x4001A93")]
		Ha = 1607,
		[Token(Token = "0x4001A94")]
		Waw = 1608,
		[Token(Token = "0x4001A95")]
		Ya = 1610,
		[Token(Token = "0x4001A96")]
		AlefMad = 1570,
		[Token(Token = "0x4001A97")]
		TaMarboota = 1577,
		[Token(Token = "0x4001A98")]
		PersianPe = 1662,
		[Token(Token = "0x4001A99")]
		PersianChe = 1670,
		[Token(Token = "0x4001A9A")]
		PersianZe = 1688,
		[Token(Token = "0x4001A9B")]
		PersianGaf = 1711,
		[Token(Token = "0x4001A9C")]
		PersianGaf2 = 1705
	}
	[Token(Token = "0x20003B2")]
	internal class ArabicMapping
	{
		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int from;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int to;

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0x140271C", Offset = "0x140271C", VA = "0x140271C")]
		public ArabicMapping(int from, int to)
		{
		}
	}
	[Token(Token = "0x20003B3")]
	internal class ArabicTable
	{
		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<ArabicMapping> mapList;

		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static ArabicTable arabicMapper;

		[Token(Token = "0x170001FE")]
		internal static ArabicTable ArabicMapper
		{
			[Token(Token = "0x6001A6A")]
			[Address(RVA = "0x1403240", Offset = "0x1403240", VA = "0x1403240")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0x1402754", Offset = "0x1402754", VA = "0x1402754")]
		private ArabicTable()
		{
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0x14032C4", Offset = "0x14032C4", VA = "0x14032C4")]
		internal int Convert(int toBeConverted)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20003B4")]
	internal class TashkeelLocation
	{
		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public char tashkeel;

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int position;

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0x119D7B0", Offset = "0x119D7B0", VA = "0x119D7B0")]
		public TashkeelLocation(char tashkeel, int position)
		{
		}
	}
	[Token(Token = "0x20003B5")]
	internal class RTLFixerTool
	{
		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static bool showTashkeel;

		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		internal static bool useHinduNumbers;

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0x119D208", Offset = "0x119D208", VA = "0x119D208")]
		internal static string RemoveTashkeel(string str, out List<TashkeelLocation> tashkeelLocation)
		{
			return null;
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0x119D7EC", Offset = "0x119D7EC", VA = "0x119D7EC")]
		internal static char[] ReturnTashkeel(char[] letters, List<TashkeelLocation> tashkeelLocation)
		{
			return null;
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0x119C4F4", Offset = "0x119C4F4", VA = "0x119C4F4")]
		internal static string FixLine(string str)
		{
			return null;
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0x119D9E8", Offset = "0x119D9E8", VA = "0x119D9E8")]
		internal static bool IsIgnoredCharacter(char ch)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0x119E048", Offset = "0x119E048", VA = "0x119E048")]
		internal static bool IsLeadingLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0x119DEE4", Offset = "0x119DEE4", VA = "0x119DEE4")]
		internal static bool IsFinishingLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0x119DB64", Offset = "0x119DB64", VA = "0x119DB64")]
		internal static bool IsMiddleLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0x119E384", Offset = "0x119E384", VA = "0x119E384")]
		public RTLFixerTool()
		{
		}
	}
	[Token(Token = "0x20003B6")]
	public class RegisterCallback_AllowSyncFromGoogle : MonoBehaviour
	{
		[Token(Token = "0x6001A76")]
		[Address(RVA = "0x119F660", Offset = "0x119F660", VA = "0x119F660")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0x119F708", Offset = "0x119F708", VA = "0x119F708")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0x119F7B0", Offset = "0x119F7B0", VA = "0x119F7B0")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0x119F81C", Offset = "0x119F81C", VA = "0x119F81C", Slot = "4")]
		public virtual bool AllowSyncFromGoogle(LanguageSourceData Source)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0x119F824", Offset = "0x119F824", VA = "0x119F824")]
		public RegisterCallback_AllowSyncFromGoogle()
		{
		}
	}
	[Token(Token = "0x20003B7")]
	public class RegisterGlobalParameters : MonoBehaviour, ILocalizationParamsManager
	{
		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0x119F82C", Offset = "0x119F82C", VA = "0x119F82C", Slot = "5")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0x119F908", Offset = "0x119F908", VA = "0x119F908", Slot = "6")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0x119F98C", Offset = "0x119F98C", VA = "0x119F98C", Slot = "7")]
		public virtual string GetParameterValue(string ParamName)
		{
			return null;
		}

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0x119F994", Offset = "0x119F994", VA = "0x119F994")]
		public RegisterGlobalParameters()
		{
		}
	}
	[Token(Token = "0x20003B8")]
	public interface IResourceManager_Bundles
	{
		[Token(Token = "0x6001A7F")]
		UnityEngine.Object LoadFromBundle(string path, Type assetType);
	}
	[Token(Token = "0x20003B9")]
	public class ResourceManager : MonoBehaviour
	{
		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ResourceManager mInstance;

		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<IResourceManager_Bundles> mBundleManagers;

		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.Object[] Assets;

		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Dictionary<string, UnityEngine.Object> mResourcesCache;

		[Token(Token = "0x170001FF")]
		public static ResourceManager pInstance
		{
			[Token(Token = "0x6001A80")]
			[Address(RVA = "0x119F268", Offset = "0x119F268", VA = "0x119F268")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0x119F99C", Offset = "0x119F99C", VA = "0x119F99C")]
		public static void MyOnLevelWasLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6001A82")]
		public T GetAsset<T>(string Name) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0x119FA78", Offset = "0x119FA78", VA = "0x119FA78")]
		private UnityEngine.Object FindAsset(string Name)
		{
			return null;
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0x119FBB8", Offset = "0x119FBB8", VA = "0x119FBB8")]
		public bool HasAsset(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A85")]
		public T LoadFromResources<T>(string Path) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001A86")]
		public T LoadFromBundle<T>(string path) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0x119FA0C", Offset = "0x119FA0C", VA = "0x119FA0C")]
		public void CleanResourceCache()
		{
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0x119FC28", Offset = "0x119FC28", VA = "0x119FC28")]
		public ResourceManager()
		{
		}
	}
	[Token(Token = "0x20003BA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAC067C", Offset = "0xAC067C")]
	public class SetLanguage : MonoBehaviour
	{
		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _Language;

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0x119FD4C", Offset = "0x119FD4C", VA = "0x119FD4C")]
		private void OnClick()
		{
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0x119FD50", Offset = "0x119FD50", VA = "0x119FD50")]
		public void ApplyLanguage()
		{
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0x119FE0C", Offset = "0x119FE0C", VA = "0x119FE0C")]
		public SetLanguage()
		{
		}
	}
	[Token(Token = "0x20003BB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAC06B4", Offset = "0xAC06B4")]
	public class SetLanguageDropdown : MonoBehaviour
	{
		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0x119FE14", Offset = "0x119FE14", VA = "0x119FE14")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0x11A0040", Offset = "0x11A0040", VA = "0x11A0040")]
		private void OnValueChanged(int index)
		{
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0x11A0130", Offset = "0x11A0130", VA = "0x11A0130")]
		public SetLanguageDropdown()
		{
		}
	}
	[Token(Token = "0x20003BC")]
	public class StringObfucator
	{
		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static char[] StringObfuscatorPassword;

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0x11A688C", Offset = "0x11A688C", VA = "0x11A688C")]
		public static string Encode(string NormalString)
		{
			return null;
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0x11A6BCC", Offset = "0x11A6BCC", VA = "0x11A6BCC")]
		public static string Decode(string ObfucatedString)
		{
			return null;
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0x11A6B38", Offset = "0x11A6B38", VA = "0x11A6B38")]
		private static string ToBase64(string regularString)
		{
			return null;
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0x11A6CB4", Offset = "0x11A6CB4", VA = "0x11A6CB4")]
		private static string FromBase64(string base64string)
		{
			return null;
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0x11A6974", Offset = "0x11A6974", VA = "0x11A6974")]
		private static string XoREncode(string NormalString)
		{
			return null;
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0x11A6D50", Offset = "0x11A6D50", VA = "0x11A6D50")]
		public StringObfucator()
		{
		}
	}
}
namespace I2.Loc.SimpleJSON
{
	[Token(Token = "0x20003BD")]
	public enum JSONBinaryTag
	{
		[Token(Token = "0x4001AAC")]
		Array = 1,
		[Token(Token = "0x4001AAD")]
		Class,
		[Token(Token = "0x4001AAE")]
		Value,
		[Token(Token = "0x4001AAF")]
		IntValue,
		[Token(Token = "0x4001AB0")]
		DoubleValue,
		[Token(Token = "0x4001AB1")]
		BoolValue,
		[Token(Token = "0x4001AB2")]
		FloatValue
	}
	[Token(Token = "0x20003BE")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xAC06EC", Offset = "0xAC06EC")]
	public class JSONNode
	{
		[Token(Token = "0x2000600")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1660", Offset = "0xAC1660")]
		private sealed class <get_Childs>d__17 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002010")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002011")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4002012")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x1700038B")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6002378")]
				[Address(RVA = "0x11A557C", Offset = "0x11A557C", VA = "0x11A557C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700038C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600237A")]
				[Address(RVA = "0x11A55E4", Offset = "0x11A55E4", VA = "0x11A55E4", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002375")]
			[Address(RVA = "0x11A4274", Offset = "0x11A4274", VA = "0x11A4274")]
			[DebuggerHidden]
			public <get_Childs>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6002376")]
			[Address(RVA = "0x11A5560", Offset = "0x11A5560", VA = "0x11A5560", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002377")]
			[Address(RVA = "0x11A5564", Offset = "0x11A5564", VA = "0x11A5564", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002379")]
			[Address(RVA = "0x11A5584", Offset = "0x11A5584", VA = "0x11A5584", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600237B")]
			[Address(RVA = "0x11A55EC", Offset = "0x11A55EC", VA = "0x11A55EC", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600237C")]
			[Address(RVA = "0x11A5684", Offset = "0x11A5684", VA = "0x11A5684", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000601")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1670", Offset = "0xAC1670")]
		private sealed class <get_DeepChilds>d__19 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002013")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002014")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4002015")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002016")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONNode <>4__this;

			[Token(Token = "0x4002017")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<JSONNode> <>7__wrap1;

			[Token(Token = "0x4002018")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<JSONNode> <>7__wrap2;

			[Token(Token = "0x1700038D")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6002382")]
				[Address(RVA = "0x11A5CEC", Offset = "0x11A5CEC", VA = "0x11A5CEC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700038E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002384")]
				[Address(RVA = "0x11A5D54", Offset = "0x11A5D54", VA = "0x11A5D54", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600237D")]
			[Address(RVA = "0x11A4338", Offset = "0x11A4338", VA = "0x11A4338")]
			[DebuggerHidden]
			public <get_DeepChilds>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x600237E")]
			[Address(RVA = "0x11A5688", Offset = "0x11A5688", VA = "0x11A5688", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600237F")]
			[Address(RVA = "0x11A5898", Offset = "0x11A5898", VA = "0x11A5898", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002380")]
			[Address(RVA = "0x11A57D8", Offset = "0x11A57D8", VA = "0x11A57D8")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002381")]
			[Address(RVA = "0x11A5718", Offset = "0x11A5718", VA = "0x11A5718")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6002383")]
			[Address(RVA = "0x11A5CF4", Offset = "0x11A5CF4", VA = "0x11A5CF4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002385")]
			[Address(RVA = "0x11A5D5C", Offset = "0x11A5D5C", VA = "0x11A5D5C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002386")]
			[Address(RVA = "0x11A5E10", Offset = "0x11A5E10", VA = "0x11A5E10", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x17000200")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x6001A97")]
			[Address(RVA = "0x11A4118", Offset = "0x11A4118", VA = "0x11A4118", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A98")]
			[Address(RVA = "0x11A4120", Offset = "0x11A4120", VA = "0x11A4120", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000201")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x6001A99")]
			[Address(RVA = "0x11A4124", Offset = "0x11A4124", VA = "0x11A4124", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A9A")]
			[Address(RVA = "0x11A412C", Offset = "0x11A412C", VA = "0x11A412C", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000202")]
		public virtual string Value
		{
			[Token(Token = "0x6001A9B")]
			[Address(RVA = "0x11A4130", Offset = "0x11A4130", VA = "0x11A4130", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A9C")]
			[Address(RVA = "0x11A4178", Offset = "0x11A4178", VA = "0x11A4178", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x17000203")]
		public virtual int Count
		{
			[Token(Token = "0x6001A9D")]
			[Address(RVA = "0x11A417C", Offset = "0x11A417C", VA = "0x11A417C", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000204")]
		public virtual IEnumerable<JSONNode> Childs
		{
			[Token(Token = "0x6001AA2")]
			[Address(RVA = "0x11A4204", Offset = "0x11A4204", VA = "0x11A4204", Slot = "16")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAD0284", Offset = "0xAD0284")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000205")]
		public IEnumerable<JSONNode> DeepChilds
		{
			[Token(Token = "0x6001AA3")]
			[Address(RVA = "0x11A42AC", Offset = "0x11A42AC", VA = "0x11A42AC")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAD02E8", Offset = "0xAD02E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000206")]
		public virtual int AsInt
		{
			[Token(Token = "0x6001AA6")]
			[Address(RVA = "0x11A4400", Offset = "0x11A4400", VA = "0x11A4400", Slot = "18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001AA7")]
			[Address(RVA = "0x11A4440", Offset = "0x11A4440", VA = "0x11A4440", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x17000207")]
		public virtual float AsFloat
		{
			[Token(Token = "0x6001AA8")]
			[Address(RVA = "0x11A4480", Offset = "0x11A4480", VA = "0x11A4480", Slot = "20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AA9")]
			[Address(RVA = "0x11A44C4", Offset = "0x11A44C4", VA = "0x11A44C4", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x17000208")]
		public virtual double AsDouble
		{
			[Token(Token = "0x6001AAA")]
			[Address(RVA = "0x11A4504", Offset = "0x11A4504", VA = "0x11A4504", Slot = "22")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001AAB")]
			[Address(RVA = "0x11A45A8", Offset = "0x11A45A8", VA = "0x11A45A8", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x17000209")]
		public virtual bool AsBool
		{
			[Token(Token = "0x6001AAC")]
			[Address(RVA = "0x11A45E8", Offset = "0x11A45E8", VA = "0x11A45E8", Slot = "24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AAD")]
			[Address(RVA = "0x11A46B0", Offset = "0x11A46B0", VA = "0x11A46B0", Slot = "25")]
			set
			{
			}
		}

		[Token(Token = "0x1700020A")]
		public virtual JSONArray AsArray
		{
			[Token(Token = "0x6001AAE")]
			[Address(RVA = "0x11A472C", Offset = "0x11A472C", VA = "0x11A472C", Slot = "26")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020B")]
		public virtual JSONClass AsObject
		{
			[Token(Token = "0x6001AAF")]
			[Address(RVA = "0x11A47AC", Offset = "0x11A47AC", VA = "0x11A47AC", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0x11A4114", Offset = "0x11A4114", VA = "0x11A4114", Slot = "4")]
		public virtual void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0x11A4184", Offset = "0x11A4184", VA = "0x11A4184", Slot = "12")]
		public virtual void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0x11A41EC", Offset = "0x11A41EC", VA = "0x11A41EC", Slot = "13")]
		public virtual JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0x11A41F4", Offset = "0x11A41F4", VA = "0x11A41F4", Slot = "14")]
		public virtual JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0x11A41FC", Offset = "0x11A41FC", VA = "0x11A41FC", Slot = "15")]
		public virtual JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0x11A4370", Offset = "0x11A4370", VA = "0x11A4370", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0x11A43B8", Offset = "0x11A43B8", VA = "0x11A43B8", Slot = "17")]
		public virtual string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0x11A482C", Offset = "0x11A482C", VA = "0x11A482C")]
		public static implicit operator JSONNode(string s)
		{
			return null;
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0x11A489C", Offset = "0x11A489C", VA = "0x11A489C")]
		public static implicit operator string(JSONNode d)
		{
			return null;
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0x11A2CDC", Offset = "0x11A2CDC", VA = "0x11A2CDC")]
		public static bool operator ==(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0x11A48E8", Offset = "0x11A48E8", VA = "0x11A48E8")]
		public static bool operator !=(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0x11A4904", Offset = "0x11A4904", VA = "0x11A4904", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0x11A3B7C", Offset = "0x11A3B7C", VA = "0x11A3B7C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0x11A2460", Offset = "0x11A2460", VA = "0x11A2460")]
		internal static string Escape(string aText)
		{
			return null;
		}

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0x11A013C", Offset = "0x11A013C", VA = "0x11A013C")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0x11A4910", Offset = "0x11A4910", VA = "0x11A4910", Slot = "28")]
		public virtual void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0x11A4914", Offset = "0x11A4914", VA = "0x11A4914")]
		public void SaveToStream(Stream aData)
		{
		}

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0x11A4994", Offset = "0x11A4994", VA = "0x11A4994")]
		public void SaveToCompressedStream(Stream aData)
		{
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0x11A4A00", Offset = "0x11A4A00", VA = "0x11A4A00")]
		public void SaveToCompressedFile(string aFileName)
		{
		}

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0x11A4A6C", Offset = "0x11A4A6C", VA = "0x11A4A6C")]
		public string SaveToCompressedBase64()
		{
			return null;
		}

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0x11A4AD8", Offset = "0x11A4AD8", VA = "0x11A4AD8")]
		public void SaveToFile(string aFileName)
		{
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0x11A4C2C", Offset = "0x11A4C2C", VA = "0x11A4C2C")]
		public string SaveToBase64()
		{
			return null;
		}

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0x11A4DB0", Offset = "0x11A4DB0", VA = "0x11A4DB0")]
		public static JSONNode Deserialize(BinaryReader aReader)
		{
			return null;
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0x11A5144", Offset = "0x11A5144", VA = "0x11A5144")]
		public static JSONNode LoadFromCompressedFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0x11A51B0", Offset = "0x11A51B0", VA = "0x11A51B0")]
		public static JSONNode LoadFromCompressedStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0x11A521C", Offset = "0x11A521C", VA = "0x11A521C")]
		public static JSONNode LoadFromCompressedBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0x11A5288", Offset = "0x11A5288", VA = "0x11A5288")]
		public static JSONNode LoadFromStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0x11A53A4", Offset = "0x11A53A4", VA = "0x11A53A4")]
		public static JSONNode LoadFromFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0x11A54AC", Offset = "0x11A54AC", VA = "0x11A54AC")]
		public static JSONNode LoadFromBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0x11A123C", Offset = "0x11A123C", VA = "0x11A123C")]
		public JSONNode()
		{
		}
	}
	[Token(Token = "0x20003BF")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xAC0724", Offset = "0xAC0724")]
	public class JSONArray : JSONNode, IEnumerable
	{
		[Token(Token = "0x2000602")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1680", Offset = "0xAC1680")]
		private sealed class <get_Childs>d__13 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002019")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400201A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x400201B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x400201C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONArray <>4__this;

			[Token(Token = "0x400201D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x1700038F")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x600238B")]
				[Address(RVA = "0x11A166C", Offset = "0x11A166C", VA = "0x11A166C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000390")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600238D")]
				[Address(RVA = "0x11A16D4", Offset = "0x11A16D4", VA = "0x11A16D4", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002387")]
			[Address(RVA = "0x11A0C7C", Offset = "0x11A0C7C", VA = "0x11A0C7C")]
			[DebuggerHidden]
			public <get_Childs>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002388")]
			[Address(RVA = "0x11A1490", Offset = "0x11A1490", VA = "0x11A1490", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002389")]
			[Address(RVA = "0x11A1504", Offset = "0x11A1504", VA = "0x11A1504", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600238A")]
			[Address(RVA = "0x11A14AC", Offset = "0x11A14AC", VA = "0x11A14AC")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600238C")]
			[Address(RVA = "0x11A1674", Offset = "0x11A1674", VA = "0x11A1674", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600238E")]
			[Address(RVA = "0x11A16DC", Offset = "0x11A16DC", VA = "0x11A16DC", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600238F")]
			[Address(RVA = "0x11A1790", Offset = "0x11A1790", VA = "0x11A1790", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000603")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1690", Offset = "0xAC1690")]
		private sealed class <GetEnumerator>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400201E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400201F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002020")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JSONArray <>4__this;

			[Token(Token = "0x4002021")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000391")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002394")]
				[Address(RVA = "0x11A1420", Offset = "0x11A1420", VA = "0x11A1420", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000392")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002396")]
				[Address(RVA = "0x11A1488", Offset = "0x11A1488", VA = "0x11A1488", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002390")]
			[Address(RVA = "0x11A0D30", Offset = "0x11A0D30", VA = "0x11A0D30")]
			[DebuggerHidden]
			public <GetEnumerator>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6002391")]
			[Address(RVA = "0x11A1244", Offset = "0x11A1244", VA = "0x11A1244", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002392")]
			[Address(RVA = "0x11A12B8", Offset = "0x11A12B8", VA = "0x11A12B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002393")]
			[Address(RVA = "0x11A1260", Offset = "0x11A1260", VA = "0x11A1260")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002395")]
			[Address(RVA = "0x11A1428", Offset = "0x11A1428", VA = "0x11A1428", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<JSONNode> m_List;

		[Token(Token = "0x1700020C")]
		public override JSONNode Item
		{
			[Token(Token = "0x6001AC7")]
			[Address(RVA = "0x11A07C8", Offset = "0x11A07C8", VA = "0x11A07C8", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AC8")]
			[Address(RVA = "0x11A08B0", Offset = "0x11A08B0", VA = "0x11A08B0", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x1700020D")]
		public override JSONNode Item
		{
			[Token(Token = "0x6001AC9")]
			[Address(RVA = "0x11A0954", Offset = "0x11A0954", VA = "0x11A0954", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001ACA")]
			[Address(RVA = "0x11A09B4", Offset = "0x11A09B4", VA = "0x11A09B4", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x1700020E")]
		public override int Count
		{
			[Token(Token = "0x6001ACB")]
			[Address(RVA = "0x11A0A1C", Offset = "0x11A0A1C", VA = "0x11A0A1C", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700020F")]
		public override IEnumerable<JSONNode> Childs
		{
			[Token(Token = "0x6001ACF")]
			[Address(RVA = "0x11A0BF0", Offset = "0x11A0BF0", VA = "0x11A0BF0", Slot = "16")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAD034C", Offset = "0xAD034C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0x11A0A6C", Offset = "0x11A0A6C", VA = "0x11A0A6C", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0x11A0AD4", Offset = "0x11A0AD4", VA = "0x11A0AD4", Slot = "14")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0x11A0B80", Offset = "0x11A0B80", VA = "0x11A0B80", Slot = "15")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0x11A0CB4", Offset = "0x11A0CB4", VA = "0x11A0CB4", Slot = "29")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAD03B0", Offset = "0xAD03B0")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0x11A0D5C", Offset = "0x11A0D5C", VA = "0x11A0D5C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0x11A0EF4", Offset = "0x11A0EF4", VA = "0x11A0EF4", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0x11A10E0", Offset = "0x11A10E0", VA = "0x11A10E0", Slot = "28")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0x11A11C0", Offset = "0x11A11C0", VA = "0x11A11C0")]
		public JSONArray()
		{
		}
	}
	[Token(Token = "0x20003C0")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xAC075C", Offset = "0xAC075C")]
	public class JSONClass : JSONNode, IEnumerable
	{
		[Token(Token = "0x2000604")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC16A0", Offset = "0xAC16A0")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4002022")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public JSONNode aNode;

			[Token(Token = "0x6002397")]
			[Address(RVA = "0x11A1F40", Offset = "0x11A1F40", VA = "0x11A1F40")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6002398")]
			[Address(RVA = "0x11A2C88", Offset = "0x11A2C88", VA = "0x11A2C88")]
			internal bool <Remove>b__0(KeyValuePair<string, JSONNode> k)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000605")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC16B0", Offset = "0xAC16B0")]
		private sealed class <get_Childs>d__14 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002023")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002024")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4002025")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002026")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONClass <>4__this;

			[Token(Token = "0x4002027")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000393")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x600239D")]
				[Address(RVA = "0x11A31CC", Offset = "0x11A31CC", VA = "0x11A31CC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000394")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600239F")]
				[Address(RVA = "0x11A3234", Offset = "0x11A3234", VA = "0x11A3234", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002399")]
			[Address(RVA = "0x11A1FD4", Offset = "0x11A1FD4", VA = "0x11A1FD4")]
			[DebuggerHidden]
			public <get_Childs>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x600239A")]
			[Address(RVA = "0x11A2FE8", Offset = "0x11A2FE8", VA = "0x11A2FE8", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600239B")]
			[Address(RVA = "0x11A305C", Offset = "0x11A305C", VA = "0x11A305C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600239C")]
			[Address(RVA = "0x11A3004", Offset = "0x11A3004", VA = "0x11A3004")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600239E")]
			[Address(RVA = "0x11A31D4", Offset = "0x11A31D4", VA = "0x11A31D4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60023A0")]
			[Address(RVA = "0x11A323C", Offset = "0x11A323C", VA = "0x11A323C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60023A1")]
			[Address(RVA = "0x11A32F0", Offset = "0x11A32F0", VA = "0x11A32F0", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000606")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC16C0", Offset = "0xAC16C0")]
		private sealed class <GetEnumerator>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002028")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002029")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400202A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JSONClass <>4__this;

			[Token(Token = "0x400202B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000395")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023A6")]
				[Address(RVA = "0x11A2F78", Offset = "0x11A2F78", VA = "0x11A2F78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000396")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023A8")]
				[Address(RVA = "0x11A2FE0", Offset = "0x11A2FE0", VA = "0x11A2FE0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023A2")]
			[Address(RVA = "0x11A2088", Offset = "0x11A2088", VA = "0x11A2088")]
			[DebuggerHidden]
			public <GetEnumerator>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x60023A3")]
			[Address(RVA = "0x11A2D74", Offset = "0x11A2D74", VA = "0x11A2D74", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023A4")]
			[Address(RVA = "0x11A2DE8", Offset = "0x11A2DE8", VA = "0x11A2DE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023A5")]
			[Address(RVA = "0x11A2D90", Offset = "0x11A2D90", VA = "0x11A2D90")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60023A7")]
			[Address(RVA = "0x11A2F80", Offset = "0x11A2F80", VA = "0x11A2F80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, JSONNode> m_Dict;

		[Token(Token = "0x17000210")]
		public override JSONNode Item
		{
			[Token(Token = "0x6001AD5")]
			[Address(RVA = "0x11A1794", Offset = "0x11A1794", VA = "0x11A1794", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AD6")]
			[Address(RVA = "0x11A18A0", Offset = "0x11A18A0", VA = "0x11A18A0", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000211")]
		public override JSONNode Item
		{
			[Token(Token = "0x6001AD7")]
			[Address(RVA = "0x11A195C", Offset = "0x11A195C", VA = "0x11A195C", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AD8")]
			[Address(RVA = "0x11A19F4", Offset = "0x11A19F4", VA = "0x11A19F4", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000212")]
		public override int Count
		{
			[Token(Token = "0x6001AD9")]
			[Address(RVA = "0x11A1AB4", Offset = "0x11A1AB4", VA = "0x11A1AB4", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000213")]
		public override IEnumerable<JSONNode> Childs
		{
			[Token(Token = "0x6001ADE")]
			[Address(RVA = "0x11A1F48", Offset = "0x11A1F48", VA = "0x11A1F48", Slot = "16")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAD0414", Offset = "0xAD0414")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0x11A1B0C", Offset = "0x11A1B0C", VA = "0x11A1B0C", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0x11A1C38", Offset = "0x11A1C38", VA = "0x11A1C38", Slot = "13")]
		public override JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0x11A1CF4", Offset = "0x11A1CF4", VA = "0x11A1CF4", Slot = "14")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0x11A1DB0", Offset = "0x11A1DB0", VA = "0x11A1DB0", Slot = "15")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0x11A200C", Offset = "0x11A200C", VA = "0x11A200C", Slot = "29")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAD0478", Offset = "0xAD0478")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0x11A20B4", Offset = "0x11A20B4", VA = "0x11A20B4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0x11A25DC", Offset = "0x11A25DC", VA = "0x11A25DC", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0x11A29E0", Offset = "0x11A29E0", VA = "0x11A29E0", Slot = "28")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0x11A2B98", Offset = "0x11A2B98", VA = "0x11A2B98")]
		public JSONClass()
		{
		}
	}
	[Token(Token = "0x20003C1")]
	public class JSONData : JSONNode
	{
		[Token(Token = "0x4001AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_Data;

		[Token(Token = "0x17000214")]
		public override string Value
		{
			[Token(Token = "0x6001AE4")]
			[Address(RVA = "0x11A32F4", Offset = "0x11A32F4", VA = "0x11A32F4", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AE5")]
			[Address(RVA = "0x11A32FC", Offset = "0x11A32FC", VA = "0x11A32FC", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0x11A3304", Offset = "0x11A3304", VA = "0x11A3304")]
		public JSONData(string aData)
		{
		}

		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0x11A3338", Offset = "0x11A3338", VA = "0x11A3338")]
		public JSONData(float aData)
		{
		}

		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0x11A337C", Offset = "0x11A337C", VA = "0x11A337C")]
		public JSONData(double aData)
		{
		}

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0x11A33C0", Offset = "0x11A33C0", VA = "0x11A33C0")]
		public JSONData(bool aData)
		{
		}

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0x11A33FC", Offset = "0x11A33FC", VA = "0x11A33FC")]
		public JSONData(int aData)
		{
		}

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0x11A3438", Offset = "0x11A3438", VA = "0x11A3438", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0x11A3498", Offset = "0x11A3498", VA = "0x11A3498", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0x11A34F8", Offset = "0x11A34F8", VA = "0x11A34F8", Slot = "28")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}
	}
	[Token(Token = "0x20003C2")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xAC0794", Offset = "0xAC0794")]
	internal class JSONLazyCreator : JSONNode
	{
		[Token(Token = "0x4001AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private JSONNode m_Node;

		[Token(Token = "0x4001AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_Key;

		[Token(Token = "0x17000215")]
		public override JSONNode Item
		{
			[Token(Token = "0x6001AF1")]
			[Address(RVA = "0x11A382C", Offset = "0x11A382C", VA = "0x11A382C", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AF2")]
			[Address(RVA = "0x11A388C", Offset = "0x11A388C", VA = "0x11A388C", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000216")]
		public override JSONNode Item
		{
			[Token(Token = "0x6001AF3")]
			[Address(RVA = "0x11A3914", Offset = "0x11A3914", VA = "0x11A3914", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AF4")]
			[Address(RVA = "0x11A3984", Offset = "0x11A3984", VA = "0x11A3984", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000217")]
		public override int AsInt
		{
			[Token(Token = "0x6001AFD")]
			[Address(RVA = "0x11A3C14", Offset = "0x11A3C14", VA = "0x11A3C14", Slot = "18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001AFE")]
			[Address(RVA = "0x11A3C98", Offset = "0x11A3C98", VA = "0x11A3C98", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x17000218")]
		public override float AsFloat
		{
			[Token(Token = "0x6001AFF")]
			[Address(RVA = "0x11A3D20", Offset = "0x11A3D20", VA = "0x11A3D20", Slot = "20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B00")]
			[Address(RVA = "0x11A3DA4", Offset = "0x11A3DA4", VA = "0x11A3DA4", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x17000219")]
		public override double AsDouble
		{
			[Token(Token = "0x6001B01")]
			[Address(RVA = "0x11A3E2C", Offset = "0x11A3E2C", VA = "0x11A3E2C", Slot = "22")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001B02")]
			[Address(RVA = "0x11A3EB0", Offset = "0x11A3EB0", VA = "0x11A3EB0", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x1700021A")]
		public override bool AsBool
		{
			[Token(Token = "0x6001B03")]
			[Address(RVA = "0x11A3F38", Offset = "0x11A3F38", VA = "0x11A3F38", Slot = "24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B04")]
			[Address(RVA = "0x11A3FBC", Offset = "0x11A3FBC", VA = "0x11A3FBC", Slot = "25")]
			set
			{
			}
		}

		[Token(Token = "0x1700021B")]
		public override JSONArray AsArray
		{
			[Token(Token = "0x6001B05")]
			[Address(RVA = "0x11A4044", Offset = "0x11A4044", VA = "0x11A4044", Slot = "26")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021C")]
		public override JSONClass AsObject
		{
			[Token(Token = "0x6001B06")]
			[Address(RVA = "0x11A40AC", Offset = "0x11A40AC", VA = "0x11A40AC", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0x11A086C", Offset = "0x11A086C", VA = "0x11A086C")]
		public JSONLazyCreator(JSONNode aNode)
		{
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0x11A1850", Offset = "0x11A1850", VA = "0x11A1850")]
		public JSONLazyCreator(JSONNode aNode, string aKey)
		{
		}

		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0x11A37C0", Offset = "0x11A37C0", VA = "0x11A37C0")]
		private void Set(JSONNode aVal)
		{
		}

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0x11A3A14", Offset = "0x11A3A14", VA = "0x11A3A14", Slot = "12")]
		public override void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0x11A3A9C", Offset = "0x11A3A9C", VA = "0x11A3A9C", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0x11A3B2C", Offset = "0x11A3B2C", VA = "0x11A3B2C")]
		public static bool operator ==(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0x11A3B44", Offset = "0x11A3B44", VA = "0x11A3B44")]
		public static bool operator !=(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0x11A3B5C", Offset = "0x11A3B5C", VA = "0x11A3B5C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0x11A3B74", Offset = "0x11A3B74", VA = "0x11A3B74", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0x11A3B84", Offset = "0x11A3B84", VA = "0x11A3B84", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0x11A3BCC", Offset = "0x11A3BCC", VA = "0x11A3BCC", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}
	}
	[Token(Token = "0x20003C3")]
	public static class JSON
	{
		[Token(Token = "0x6001B07")]
		[Address(RVA = "0x11A0138", Offset = "0x11A0138", VA = "0x11A0138")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}
	}
}
namespace UnityEngine.Timeline
{
	[Token(Token = "0x20003C4")]
	public class VideoPlayableBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x4001AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VideoPlayer videoPlayer;

		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VideoClip videoClip;

		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool mute;

		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool loop;

		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public double preloadTime;

		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public double clipInTime;

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool playedOnce;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool preparing;

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0x14FAFAC", Offset = "0x14FAFAC", VA = "0x14FAFAC")]
		public void PrepareVideo()
		{
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0x14FB364", Offset = "0x14FB364", VA = "0x14FB364")]
		private void LoopPointReached(VideoPlayer vp)
		{
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0x14FB374", Offset = "0x14FB374", VA = "0x14FB374", Slot = "19")]
		public override void PrepareFrame(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0x14FB660", Offset = "0x14FB660", VA = "0x14FB660", Slot = "17")]
		public override void OnBehaviourPlay(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0x14FB7C0", Offset = "0x14FB7C0", VA = "0x14FB7C0", Slot = "18")]
		public override void OnBehaviourPause(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0x14FB8F4", Offset = "0x14FB8F4", VA = "0x14FB8F4", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0x14FBAE8", Offset = "0x14FBAE8", VA = "0x14FBAE8", Slot = "13")]
		public override void OnGraphStart(Playable playable)
		{
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0x14FBAF0", Offset = "0x14FBAF0", VA = "0x14FBAF0", Slot = "14")]
		public override void OnGraphStop(Playable playable)
		{
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0x14FBB28", Offset = "0x14FBB28", VA = "0x14FBB28", Slot = "16")]
		public override void OnPlayableDestroy(Playable playable)
		{
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0x14FB714", Offset = "0x14FB714", VA = "0x14FB714")]
		public void PlayVideo()
		{
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0x14FB864", Offset = "0x14FB864", VA = "0x14FB864")]
		public void PauseVideo()
		{
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0x14FB2D0", Offset = "0x14FB2D0", VA = "0x14FB2D0")]
		public void StopVideo()
		{
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0x14FB4E8", Offset = "0x14FB4E8", VA = "0x14FB4E8")]
		private void SyncVideoToPlayable(Playable playable)
		{
		}

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0x14FBB2C", Offset = "0x14FBB2C", VA = "0x14FBB2C")]
		public VideoPlayableBehaviour()
		{
		}
	}
	[Token(Token = "0x20003C5")]
	public sealed class VideoSchedulerPlayableBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IEnumerable<TimelineClip> m_Clips;

		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PlayableDirector m_Director;

		[Token(Token = "0x1700021D")]
		internal PlayableDirector director
		{
			[Token(Token = "0x6001B16")]
			[Address(RVA = "0x14FBB48", Offset = "0x14FBB48", VA = "0x14FBB48")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B17")]
			[Address(RVA = "0x14FBB50", Offset = "0x14FBB50", VA = "0x14FBB50")]
			set
			{
			}
		}

		[Token(Token = "0x1700021E")]
		internal IEnumerable<TimelineClip> clips
		{
			[Token(Token = "0x6001B18")]
			[Address(RVA = "0x14FBB58", Offset = "0x14FBB58", VA = "0x14FBB58")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B19")]
			[Address(RVA = "0x14FBB60", Offset = "0x14FBB60", VA = "0x14FBB60")]
			set
			{
			}
		}

		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0x14FBB68", Offset = "0x14FBB68", VA = "0x14FBB68", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0x14FBF68", Offset = "0x14FBF68", VA = "0x14FBF68")]
		public VideoSchedulerPlayableBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C6")]
	public class VideoScriptPlayableAsset : PlayableAsset
	{
		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExposedReference<VideoPlayer> videoPlayer;

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[NotKeyable]
		public VideoClip videoClip;

		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[NotKeyable]
		public bool mute;

		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		[NotKeyable]
		public bool loop;

		[Token(Token = "0x4001AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[NotKeyable]
		public double preloadTime;

		[Token(Token = "0x4001AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[NotKeyable]
		public double clipInTime;

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0x14FBF70", Offset = "0x14FBF70", VA = "0x14FBF70", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
		{
			return default(Playable);
		}

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0x14FC0B0", Offset = "0x14FC0B0", VA = "0x14FC0B0")]
		public VideoScriptPlayableAsset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C7")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xAC07CC", Offset = "0xAC07CC")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xAC07CC", Offset = "0xAC07CC")]
	public class VideoScriptPlayableTrack : TrackAsset
	{
		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0x14FC0CC", Offset = "0x14FC0CC", VA = "0x14FC0CC", Slot = "24")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0x14FC220", Offset = "0x14FC220", VA = "0x14FC220")]
		public VideoScriptPlayableTrack()
		{
		}
	}
}
