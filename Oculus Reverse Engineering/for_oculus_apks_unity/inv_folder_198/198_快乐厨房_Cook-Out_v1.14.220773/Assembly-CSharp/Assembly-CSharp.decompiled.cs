using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.IO;
using System.Net.Sockets;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Text;
using System.Threading.Tasks;
using DarkTonic.MasterAudio;
using ExitGames.Client.Photon;
using ExitGames.Client.Photon.LoadBalancing;
using ExitGames.Client.Photon.Voice;
using Fidelity.UserReporting;
using Il2CppDummyDll;
using JetBrains.Annotations;
using Oculus.Avatar2;
using Oculus.Platform;
using POpusCodec.Enums;
using Photon;
using Photon.Realtime;
using RGCommon;
using TMPro;
using Unity.Collections;
using UnityEngine;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.InputSystem;
using UnityEngine.Networking;
using UnityEngine.SceneManagement;
using UnityEngine.Serialization;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;
using cookout.loadsave.v1;
using cookout.loadsave.v2;
using cookout.loadsave.v3;
using cookout.loadsave.v4;
using cookout.matchmaking;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
[AddComponentMenu("Dynamic Bone/Dynamic Bone")]
public class DynamicBone : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000003")]
	public enum UpdateMode
	{
		[Token(Token = "0x4000024")]
		Normal,
		[Token(Token = "0x4000025")]
		AnimatePhysics,
		[Token(Token = "0x4000026")]
		UnscaledTime,
		[Token(Token = "0x4000027")]
		Default
	}

	[Token(Token = "0x2000004")]
	public enum FreezeAxis
	{
		[Token(Token = "0x4000029")]
		None,
		[Token(Token = "0x400002A")]
		X,
		[Token(Token = "0x400002B")]
		Y,
		[Token(Token = "0x400002C")]
		Z
	}

	[Token(Token = "0x2000005")]
	private class Particle
	{
		[Token(Token = "0x400002D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform m_Transform;

		[Token(Token = "0x400002E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int m_ParentIndex;

		[Token(Token = "0x400002F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_Damping;

		[Token(Token = "0x4000030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_Elasticity;

		[Token(Token = "0x4000031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_Stiffness;

		[Token(Token = "0x4000032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_Inert;

		[Token(Token = "0x4000033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_Friction;

		[Token(Token = "0x4000034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_Radius;

		[Token(Token = "0x4000035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_BoneLength;

		[Token(Token = "0x4000036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool m_isCollide;

		[Token(Token = "0x4000037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 m_Position;

		[Token(Token = "0x4000038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 m_PrevPosition;

		[Token(Token = "0x4000039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 m_EndOffset;

		[Token(Token = "0x400003A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 m_InitLocalPosition;

		[Token(Token = "0x400003B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Quaternion m_InitLocalRotation;

		[Token(Token = "0x6000019")]
		[Address(RVA = "0x93A2A0", Offset = "0x93A2A0", VA = "0x93A2A0")]
		public Particle()
		{
		}
	}

	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("The root of the transform hierarchy to apply physics.")]
	public Transform m_Root;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Internal physics simulation rate.")]
	public float m_UpdateRate;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public UpdateMode m_UpdateMode;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("How much the bones slowed down.")]
	[Range(0f, 1f)]
	public float m_Damping;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve m_DampingDistrib;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(0f, 1f)]
	[Tooltip("How much the force applied to return each bone to original orientation.")]
	public float m_Elasticity;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve m_ElasticityDistrib;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("How much bone's original orientation are preserved.")]
	[Range(0f, 1f)]
	public float m_Stiffness;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve m_StiffnessDistrib;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Range(0f, 1f)]
	[Tooltip("How much character's position change is ignored in physics simulation.")]
	public float m_Inert;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve m_InertDistrib;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Tooltip("How much the bones slowed down when collide.")]
	public float m_Friction;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AnimationCurve m_FrictionDistrib;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Tooltip("Each bone can be a sphere to collide with colliders. Radius describe sphere's size.")]
	public float m_Radius;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AnimationCurve m_RadiusDistrib;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Tooltip("If End Length is not zero, an extra bone is generated at the end of transform hierarchy.")]
	public float m_EndLength;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[Tooltip("If End Offset is not zero, an extra bone is generated at the end of transform hierarchy.")]
	public Vector3 m_EndOffset;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[Tooltip("The force apply to bones. Partial force apply to character's initial pose is cancelled out.")]
	public Vector3 m_Gravity;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[Tooltip("The force apply to bones.")]
	public Vector3 m_Force;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[Tooltip("Collider objects interact with the bones.")]
	public List<DynamicBoneColliderBase> m_Colliders;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[Tooltip("Bones exclude from physics simulation.")]
	public List<Transform> m_Exclusions;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Tooltip("Constrain bones to move on specified plane.")]
	public FreezeAxis m_FreezeAxis;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[Tooltip("Disable physics simulation automatically if character is far from camera or player.")]
	public bool m_DistantDisable;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform m_ReferenceObject;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float m_DistanceToObject;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 m_LocalGravity;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3 m_ObjectMove;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private Vector3 m_ObjectPrevPosition;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float m_BoneTotalLength;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float m_ObjectScale;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float m_Time;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float m_Weight;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool m_DistantDisabled;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private List<Particle> m_Particles;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x937F70", Offset = "0x937F70", VA = "0x937F70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x9380E0", Offset = "0x9380E0", VA = "0x9380E0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x938134", Offset = "0x938134", VA = "0x938134")]
	private void Update()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x938164", Offset = "0x938164", VA = "0x938164")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x938110", Offset = "0x938110", VA = "0x938110")]
	private void PreUpdate()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x9381CC", Offset = "0x9381CC", VA = "0x9381CC")]
	private void CheckDistance()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x9387A0", Offset = "0x9387A0", VA = "0x9387A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x9387A4", Offset = "0x9387A4", VA = "0x9387A4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x9387A8", Offset = "0x9387A8", VA = "0x9387A8")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x938868", Offset = "0x938868", VA = "0x938868")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x9389F8", Offset = "0x9389F8", VA = "0x9389F8")]
	public void SetWeight(float w)
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x938A48", Offset = "0x938A48", VA = "0x938A48")]
	public float GetWeight()
	{
		return default(float);
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x938344", Offset = "0x938344", VA = "0x938344")]
	private void UpdateDynamicBones(float t)
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x937F74", Offset = "0x937F74", VA = "0x937F74")]
	public void SetupParticles()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x939A3C", Offset = "0x939A3C", VA = "0x939A3C")]
	private void AppendParticles(Transform b, int parentIndex, float boneLength)
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x939F94", Offset = "0x939F94", VA = "0x939F94")]
	public void UpdateParameters()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x938550", Offset = "0x938550", VA = "0x938550")]
	private void InitTransforms()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x938654", Offset = "0x938654", VA = "0x938654")]
	private void ResetParticlesPosition()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x938A50", Offset = "0x938A50", VA = "0x938A50")]
	private void UpdateParticles1(float timeVar)
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x938CD4", Offset = "0x938CD4", VA = "0x938CD4")]
	private void UpdateParticles2(float timeVar)
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x93933C", Offset = "0x93933C", VA = "0x93933C")]
	private void SkipUpdateParticles()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x93A37C", Offset = "0x93A37C", VA = "0x93A37C")]
	private static Vector3 MirrorVector(Vector3 v, Vector3 axis)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x9397E0", Offset = "0x9397E0", VA = "0x9397E0")]
	private void ApplyParticlesToTransforms()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x93A3B0", Offset = "0x93A3B0", VA = "0x93A3B0")]
	public DynamicBone()
	{
	}
}
[Token(Token = "0x2000006")]
[AddComponentMenu("Dynamic Bone/Dynamic Bone Collider")]
public class DynamicBoneCollider : DynamicBoneColliderBase
{
	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("The radius of the sphere or capsule.")]
	public float m_Radius;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("The height of the capsule.")]
	public float m_Height;

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x93A504", Offset = "0x93A504", VA = "0x93A504")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x93A51C", Offset = "0x93A51C", VA = "0x93A51C", Slot = "4")]
	public override bool Collide(ref Vector3 particlePosition, float particleRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x93A710", Offset = "0x93A710", VA = "0x93A710")]
	private static bool OutsideSphere(ref Vector3 particlePosition, float particleRadius, Vector3 sphereCenter, float sphereRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x93A77C", Offset = "0x93A77C", VA = "0x93A77C")]
	private static bool InsideSphere(ref Vector3 particlePosition, float particleRadius, Vector3 sphereCenter, float sphereRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x93A7E0", Offset = "0x93A7E0", VA = "0x93A7E0")]
	private static bool OutsideCapsule(ref Vector3 particlePosition, float particleRadius, Vector3 capsuleP0, Vector3 capsuleP1, float capsuleRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x93A970", Offset = "0x93A970", VA = "0x93A970")]
	private static bool InsideCapsule(ref Vector3 particlePosition, float particleRadius, Vector3 capsuleP0, Vector3 capsuleP1, float capsuleRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x93AAD8", Offset = "0x93AAD8", VA = "0x93AAD8")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x93AC74", Offset = "0x93AC74", VA = "0x93AC74")]
	public DynamicBoneCollider()
	{
	}
}
[Token(Token = "0x2000007")]
public class DynamicBoneColliderBase : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000008")]
	public enum Direction
	{
		[Token(Token = "0x4000042")]
		X,
		[Token(Token = "0x4000043")]
		Y,
		[Token(Token = "0x4000044")]
		Z
	}

	[Token(Token = "0x2000009")]
	public enum Bound
	{
		[Token(Token = "0x4000046")]
		Outside,
		[Token(Token = "0x4000047")]
		Inside
	}

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("The axis of the capsule's height.")]
	public Direction m_Direction;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("The center of the sphere or capsule, in the object's local space.")]
	public Vector3 m_Center;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Constrain bones to outside bound or inside bound.")]
	public Bound m_Bound;

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x93ACE4", Offset = "0x93ACE4", VA = "0x93ACE4", Slot = "4")]
	public virtual bool Collide(ref Vector3 particlePosition, float particleRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x93AC80", Offset = "0x93AC80", VA = "0x93AC80")]
	public DynamicBoneColliderBase()
	{
	}
}
[Token(Token = "0x200000A")]
[AddComponentMenu("Dynamic Bone/Dynamic Bone Plane Collider")]
public class DynamicBonePlaneCollider : DynamicBoneColliderBase
{
	[Token(Token = "0x6000024")]
	[Address(RVA = "0x93ACEC", Offset = "0x93ACEC", VA = "0x93ACEC")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x93ACF0", Offset = "0x93ACF0", VA = "0x93ACF0", Slot = "4")]
	public override bool Collide(ref Vector3 particlePosition, float particleRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x93AE80", Offset = "0x93AE80", VA = "0x93AE80")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x93AFE0", Offset = "0x93AFE0", VA = "0x93AFE0")]
	public DynamicBonePlaneCollider()
	{
	}
}
[Token(Token = "0x200000B")]
public class UserReporting
{
	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private FidelityUserReportingApi fidelityUserReportingApi;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FidelityUserReportingViewReference viewReference;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<PokeButton> cardButtons;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly UserReporting Instance;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool reportSent;

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x93AFE4", Offset = "0x93AFE4", VA = "0x93AFE4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x93B4B8", Offset = "0x93B4B8", VA = "0x93B4B8")]
	private void InitializeUI()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x93B8B0", Offset = "0x93B8B0", VA = "0x93B8B0")]
	private void OnSendReport(UserReport report)
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x93B948", Offset = "0x93B948", VA = "0x93B948")]
	public void Tick()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x93B9D8", Offset = "0x93B9D8", VA = "0x93B9D8")]
	private void SetViewCardsEvents()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x93BC20", Offset = "0x93BC20", VA = "0x93BC20")]
	private void OnOpenMenu()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x93BCC0", Offset = "0x93BCC0", VA = "0x93BCC0")]
	private void OnCloseButton()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x93BD60", Offset = "0x93BD60", VA = "0x93BD60")]
	public void OnReportPlayersButtonClicked()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x93BD80", Offset = "0x93BD80", VA = "0x93BD80")]
	public void SetTranslationKeyForReportButton(LocalizedText buttonText)
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x93BE28", Offset = "0x93BE28", VA = "0x93BE28")]
	public void RefreshPlayerList(List<string> playerNames, List<string> playerIDs, string localPlayerNickName, string localPlayerID)
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x93BEA4", Offset = "0x93BEA4", VA = "0x93BEA4")]
	public UserReporting()
	{
	}
}
[Token(Token = "0x200000D")]
public class Testing240 : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cube1;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject cube2;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RectTransform rect1;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject sprite2;

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x93C0DC", Offset = "0x93C0DC", VA = "0x93C0DC")]
	private void Start()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x93C7A0", Offset = "0x93C7A0", VA = "0x93C7A0")]
	public static void ScaleGroundColor(Color to)
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x93C7A8", Offset = "0x93C7A8", VA = "0x93C7A8")]
	private void Update()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x93C7AC", Offset = "0x93C7AC", VA = "0x93C7AC")]
	public Testing240()
	{
	}
}
[Token(Token = "0x2000010")]
public class Testing243 : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cube1;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light light;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RectTransform imageRectTransform;

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x93C9A0", Offset = "0x93C9A0", VA = "0x93C9A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x93CC24", Offset = "0x93CC24", VA = "0x93CC24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x93CC28", Offset = "0x93CC28", VA = "0x93CC28")]
	public Testing243()
	{
	}
}
[Token(Token = "0x2000011")]
public class Testing246 : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float gameScale;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject tweenAlpha;

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x93CC68", Offset = "0x93CC68", VA = "0x93CC68")]
	private void Start()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x93CD68", Offset = "0x93CD68", VA = "0x93CD68")]
	private void tweenFinished(object obj)
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x93CD6C", Offset = "0x93CD6C", VA = "0x93CD6C")]
	public Testing246()
	{
	}
}
[Token(Token = "0x2000012")]
public class TestingColorTweening : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x600004D")]
	[Address(RVA = "0x93CD7C", Offset = "0x93CD7C", VA = "0x93CD7C")]
	private void Start()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x93CF3C", Offset = "0x93CF3C", VA = "0x93CF3C")]
	private void OnTweenUpdate(Color update, object obj)
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x93D084", Offset = "0x93D084", VA = "0x93D084")]
	public TestingColorTweening()
	{
	}
}
[Token(Token = "0x2000013")]
public class TestingDescr : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int tweenId;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject go;

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x93D08C", Offset = "0x93D08C", VA = "0x93D08C")]
	public void startTween()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x93D170", Offset = "0x93D170", VA = "0x93D170")]
	public void checkTweenDescr()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x93D2C0", Offset = "0x93D2C0", VA = "0x93D2C0")]
	public TestingDescr()
	{
	}
}
[Token(Token = "0x2000014")]
public class TestingIssue : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LTDescr lt;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LTDescr ff;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int id;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int fid;

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x93D2C8", Offset = "0x93D2C8", VA = "0x93D2C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x93D41C", Offset = "0x93D41C", VA = "0x93D41C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x93D4C4", Offset = "0x93D4C4", VA = "0x93D4C4")]
	public TestingIssue()
	{
	}
}
[Token(Token = "0x2000015")]
public class TestingIssue2 : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform rect;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject go;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject go2;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LTDescr descr;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool set;

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x93D4CC", Offset = "0x93D4CC", VA = "0x93D4CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x93D640", Offset = "0x93D640", VA = "0x93D640")]
	private void Update()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x93D6F0", Offset = "0x93D6F0", VA = "0x93D6F0")]
	public TestingIssue2()
	{
	}
}
[Token(Token = "0x2000016")]
public class TestingMaxTweens : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int tweenIter;

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x93D6F8", Offset = "0x93D6F8", VA = "0x93D6F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x93D74C", Offset = "0x93D74C", VA = "0x93D74C")]
	private void Update()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x93D96C", Offset = "0x93D96C", VA = "0x93D96C")]
	public TestingMaxTweens()
	{
	}
}
[Token(Token = "0x2000018")]
public class TestingRotate : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject sun;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject earth;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject sun2;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject earth2;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject sun3;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject earth3;

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x93DA88", Offset = "0x93DA88", VA = "0x93DA88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x93DCE8", Offset = "0x93DCE8", VA = "0x93DCE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x93DDBC", Offset = "0x93DDBC", VA = "0x93DDBC")]
	public TestingRotate()
	{
	}
}
[Token(Token = "0x2000019")]
public class TestingSceneSwitching : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cube;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int sceneIter;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int tweenCompleteCnt;

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x93DDC4", Offset = "0x93DDC4", VA = "0x93DDC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x93E048", Offset = "0x93E048", VA = "0x93E048")]
	public TestingSceneSwitching()
	{
	}
}
[Token(Token = "0x200001B")]
public class TestingSequencer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cube1;

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x93E430", Offset = "0x93E430", VA = "0x93E430")]
	public void Start()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x93E7BC", Offset = "0x93E7BC", VA = "0x93E7BC")]
	public TestingSequencer()
	{
	}
}
[Token(Token = "0x200001D")]
internal static class CustomTypes
{
	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly byte[] memVector3;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly byte[] memVector2;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly byte[] memQuarternion;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly byte[] memPlayer;

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x93EA88", Offset = "0x93EA88", VA = "0x93EA88")]
	internal static void Register()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x93EDD4", Offset = "0x93EDD4", VA = "0x93EDD4")]
	private static short SerializeVector3(StreamBuffer outStream, object customobject)
	{
		return default(short);
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x93EFE4", Offset = "0x93EFE4", VA = "0x93EFE4")]
	private static object DeserializeVector3(StreamBuffer inStream, short length)
	{
		return null;
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x93F1F8", Offset = "0x93F1F8", VA = "0x93F1F8")]
	private static short SerializeVector2(StreamBuffer outStream, object customobject)
	{
		return default(short);
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x93F3E8", Offset = "0x93F3E8", VA = "0x93F3E8")]
	private static object DeserializeVector2(StreamBuffer inStream, short length)
	{
		return null;
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x93F5CC", Offset = "0x93F5CC", VA = "0x93F5CC")]
	private static short SerializeQuaternion(StreamBuffer outStream, object customobject)
	{
		return default(short);
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x93F7F8", Offset = "0x93F7F8", VA = "0x93F7F8")]
	private static object DeserializeQuaternion(StreamBuffer inStream, short length)
	{
		return null;
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x93FA1C", Offset = "0x93FA1C", VA = "0x93FA1C")]
	private static short SerializePhotonPlayer(StreamBuffer outStream, object customobject)
	{
		return default(short);
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x93FBFC", Offset = "0x93FBFC", VA = "0x93FBFC")]
	private static object DeserializePhotonPlayer(StreamBuffer inStream, short length)
	{
		return null;
	}
}
[Token(Token = "0x200001E")]
public enum PhotonNetworkingMessage
{
	[Token(Token = "0x4000081")]
	OnConnectedToPhoton,
	[Token(Token = "0x4000082")]
	OnLeftRoom,
	[Token(Token = "0x4000083")]
	OnMasterClientSwitched,
	[Token(Token = "0x4000084")]
	OnPhotonCreateRoomFailed,
	[Token(Token = "0x4000085")]
	OnPhotonJoinRoomFailed,
	[Token(Token = "0x4000086")]
	OnCreatedRoom,
	[Token(Token = "0x4000087")]
	OnJoinedLobby,
	[Token(Token = "0x4000088")]
	OnLeftLobby,
	[Token(Token = "0x4000089")]
	OnDisconnectedFromPhoton,
	[Token(Token = "0x400008A")]
	OnConnectionFail,
	[Token(Token = "0x400008B")]
	OnFailedToConnectToPhoton,
	[Token(Token = "0x400008C")]
	OnReceivedRoomListUpdate,
	[Token(Token = "0x400008D")]
	OnJoinedRoom,
	[Token(Token = "0x400008E")]
	OnPhotonPlayerConnected,
	[Token(Token = "0x400008F")]
	OnPhotonPlayerDisconnected,
	[Token(Token = "0x4000090")]
	OnPhotonRandomJoinFailed,
	[Token(Token = "0x4000091")]
	OnConnectedToMaster,
	[Token(Token = "0x4000092")]
	OnPhotonSerializeView,
	[Token(Token = "0x4000093")]
	OnPhotonInstantiate,
	[Token(Token = "0x4000094")]
	OnPhotonMaxCccuReached,
	[Token(Token = "0x4000095")]
	OnPhotonCustomRoomPropertiesChanged,
	[Token(Token = "0x4000096")]
	OnPhotonPlayerPropertiesChanged,
	[Token(Token = "0x4000097")]
	OnUpdatedFriendList,
	[Token(Token = "0x4000098")]
	OnCustomAuthenticationFailed,
	[Token(Token = "0x4000099")]
	OnCustomAuthenticationResponse,
	[Token(Token = "0x400009A")]
	OnWebRpcResponse,
	[Token(Token = "0x400009B")]
	OnOwnershipRequest,
	[Token(Token = "0x400009C")]
	OnLobbyStatisticsUpdate,
	[Token(Token = "0x400009D")]
	OnPhotonPlayerActivityChanged,
	[Token(Token = "0x400009E")]
	OnOwnershipTransfered
}
[Token(Token = "0x200001F")]
public enum PhotonLogLevel
{
	[Token(Token = "0x40000A0")]
	ErrorsOnly,
	[Token(Token = "0x40000A1")]
	Informational,
	[Token(Token = "0x40000A2")]
	Full
}
[Token(Token = "0x2000020")]
public enum PhotonTargets
{
	[Token(Token = "0x40000A4")]
	All,
	[Token(Token = "0x40000A5")]
	Others,
	[Token(Token = "0x40000A6")]
	MasterClient,
	[Token(Token = "0x40000A7")]
	AllBuffered,
	[Token(Token = "0x40000A8")]
	OthersBuffered,
	[Token(Token = "0x40000A9")]
	AllViaServer,
	[Token(Token = "0x40000AA")]
	AllBufferedViaServer
}
[Token(Token = "0x2000021")]
public enum CloudRegionCode
{
	[Token(Token = "0x40000AC")]
	eu = 0,
	[Token(Token = "0x40000AD")]
	us = 1,
	[Token(Token = "0x40000AE")]
	asia = 2,
	[Token(Token = "0x40000AF")]
	jp = 3,
	[Token(Token = "0x40000B0")]
	au = 5,
	[Token(Token = "0x40000B1")]
	usw = 6,
	[Token(Token = "0x40000B2")]
	sa = 7,
	[Token(Token = "0x40000B3")]
	cae = 8,
	[Token(Token = "0x40000B4")]
	kr = 9,
	[Token(Token = "0x40000B5")]
	@in = 10,
	[Token(Token = "0x40000B6")]
	ru = 11,
	[Token(Token = "0x40000B7")]
	rue = 12,
	[Token(Token = "0x40000B8")]
	none = 4
}
[Token(Token = "0x2000022")]
[Flags]
public enum CloudRegionFlag
{
	[Token(Token = "0x40000BA")]
	eu = 1,
	[Token(Token = "0x40000BB")]
	us = 2,
	[Token(Token = "0x40000BC")]
	asia = 4,
	[Token(Token = "0x40000BD")]
	jp = 8,
	[Token(Token = "0x40000BE")]
	au = 0x10,
	[Token(Token = "0x40000BF")]
	usw = 0x20,
	[Token(Token = "0x40000C0")]
	sa = 0x40,
	[Token(Token = "0x40000C1")]
	cae = 0x80,
	[Token(Token = "0x40000C2")]
	kr = 0x100,
	[Token(Token = "0x40000C3")]
	@in = 0x200,
	[Token(Token = "0x40000C4")]
	ru = 0x400,
	[Token(Token = "0x40000C5")]
	rue = 0x800
}
[Token(Token = "0x2000023")]
public enum ConnectionState
{
	[Token(Token = "0x40000C7")]
	Disconnected,
	[Token(Token = "0x40000C8")]
	Connecting,
	[Token(Token = "0x40000C9")]
	Connected,
	[Token(Token = "0x40000CA")]
	Disconnecting,
	[Token(Token = "0x40000CB")]
	InitializingApplication
}
[Token(Token = "0x2000024")]
public enum EncryptionMode
{
	[Token(Token = "0x40000CD")]
	PayloadEncryption = 0,
	[Token(Token = "0x40000CE")]
	DatagramEncryption = 10
}
[Token(Token = "0x2000025")]
public static class EncryptionDataParameters
{
	[Token(Token = "0x40000CF")]
	public const byte Mode = 0;

	[Token(Token = "0x40000D0")]
	public const byte Secret1 = 1;

	[Token(Token = "0x40000D1")]
	public const byte Secret2 = 2;
}
[Token(Token = "0x2000026")]
public static class Extensions
{
	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<MethodInfo, ParameterInfo[]> ParametersOfMethods;

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x93FEFC", Offset = "0x93FEFC", VA = "0x93FEFC")]
	public static ParameterInfo[] GetCachedParemeters(this MethodInfo mo)
	{
		return null;
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x93FFFC", Offset = "0x93FFFC", VA = "0x93FFFC")]
	public static PhotonView[] GetPhotonViewsInChildren(this GameObject go)
	{
		return null;
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x940050", Offset = "0x940050", VA = "0x940050")]
	public static PhotonView GetPhotonView(this GameObject go)
	{
		return null;
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x9400A0", Offset = "0x9400A0", VA = "0x9400A0")]
	public static bool AlmostEquals(this Vector3 target, Vector3 second, float sqrMagnitudePrecision)
	{
		return default(bool);
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x9400CC", Offset = "0x9400CC", VA = "0x9400CC")]
	public static bool AlmostEquals(this Vector2 target, Vector2 second, float sqrMagnitudePrecision)
	{
		return default(bool);
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x9400EC", Offset = "0x9400EC", VA = "0x9400EC")]
	public static bool AlmostEquals(this Quaternion target, Quaternion second, float maxAngle)
	{
		return default(bool);
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x94015C", Offset = "0x94015C", VA = "0x94015C")]
	public static bool AlmostEquals(this float target, float second, float floatDiff)
	{
		return default(bool);
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x94016C", Offset = "0x94016C", VA = "0x94016C")]
	public static void Merge(this IDictionary target, IDictionary addHash)
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x9405AC", Offset = "0x9405AC", VA = "0x9405AC")]
	public static void MergeStringKeys(this IDictionary target, IDictionary addHash)
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x940A14", Offset = "0x940A14", VA = "0x940A14")]
	public static string ToStringFull(this IDictionary origin)
	{
		return null;
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x940A70", Offset = "0x940A70", VA = "0x940A70")]
	public static string ToStringFull(this object[] data)
	{
		return null;
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x940BB8", Offset = "0x940BB8", VA = "0x940BB8")]
	public static ExitGames.Client.Photon.Hashtable StripToStringKeys(this IDictionary original)
	{
		return null;
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x940FDC", Offset = "0x940FDC", VA = "0x940FDC")]
	public static void StripKeysWithNullValues(this IDictionary original)
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x94151C", Offset = "0x94151C", VA = "0x94151C")]
	public static bool Contains(this int[] target, int nr)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000027")]
public static class GameObjectExtensions
{
	[Token(Token = "0x600008D")]
	[Address(RVA = "0x9415FC", Offset = "0x9415FC", VA = "0x9415FC")]
	public static bool GetActive(this GameObject target)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000028")]
public class FriendInfo
{
	[Token(Token = "0x17000001")]
	[Obsolete("Use UserId.")]
	public string Name
	{
		[Token(Token = "0x600008E")]
		[Address(RVA = "0x941610", Offset = "0x941610", VA = "0x941610")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000002")]
	public string UserId
	{
		[Token(Token = "0x600008F")]
		[Address(RVA = "0x941618", Offset = "0x941618", VA = "0x941618")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000090")]
		[Address(RVA = "0x941620", Offset = "0x941620", VA = "0x941620")]
		[CompilerGenerated]
		protected internal set
		{
		}
	}

	[Token(Token = "0x17000003")]
	public bool IsOnline
	{
		[Token(Token = "0x6000091")]
		[Address(RVA = "0x941628", Offset = "0x941628", VA = "0x941628")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000092")]
		[Address(RVA = "0x941630", Offset = "0x941630", VA = "0x941630")]
		[CompilerGenerated]
		protected internal set
		{
		}
	}

	[Token(Token = "0x17000004")]
	public string Room
	{
		[Token(Token = "0x6000093")]
		[Address(RVA = "0x94163C", Offset = "0x94163C", VA = "0x94163C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000094")]
		[Address(RVA = "0x941644", Offset = "0x941644", VA = "0x941644")]
		[CompilerGenerated]
		protected internal set
		{
		}
	}

	[Token(Token = "0x17000005")]
	public bool IsInRoom
	{
		[Token(Token = "0x6000095")]
		[Address(RVA = "0x94164C", Offset = "0x94164C", VA = "0x94164C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x941674", Offset = "0x941674", VA = "0x941674", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x941730", Offset = "0x941730", VA = "0x941730")]
	public FriendInfo()
	{
	}
}
[Token(Token = "0x2000029")]
internal class LoadBalancingPeer : PhotonPeer
{
	[Token(Token = "0x200002A")]
	private enum RoomOptionBit
	{
		[Token(Token = "0x40000D8")]
		CheckUserOnJoin = 1,
		[Token(Token = "0x40000D9")]
		DeleteCacheOnLeave = 2,
		[Token(Token = "0x40000DA")]
		SuppressRoomEvents = 4,
		[Token(Token = "0x40000DB")]
		PublishUserId = 8,
		[Token(Token = "0x40000DC")]
		DeleteNullProps = 0x10,
		[Token(Token = "0x40000DD")]
		BroadcastPropsChangeToAll = 0x20
	}

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private readonly Dictionary<byte, object> opParameters;

	[Token(Token = "0x17000006")]
	internal bool IsProtocolSecure
	{
		[Token(Token = "0x6000098")]
		[Address(RVA = "0x941738", Offset = "0x941738", VA = "0x941738")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x941758", Offset = "0x941758", VA = "0x941758")]
	public LoadBalancingPeer(ConnectionProtocol protocolType)
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x941808", Offset = "0x941808", VA = "0x941808")]
	public LoadBalancingPeer(IPhotonPeerListener listener, ConnectionProtocol protocolType)
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x941878", Offset = "0x941878", VA = "0x941878", Slot = "18")]
	public virtual bool OpGetRegions(string appId)
	{
		return default(bool);
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x941960", Offset = "0x941960", VA = "0x941960", Slot = "19")]
	public virtual bool OpJoinLobby([Optional] TypedLobby lobby)
	{
		return default(bool);
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x941B7C", Offset = "0x941B7C", VA = "0x941B7C", Slot = "20")]
	public virtual bool OpLeaveLobby()
	{
		return default(bool);
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x941C94", Offset = "0x941C94", VA = "0x941C94")]
	private void RoomOptionsToOpParameters(Dictionary<byte, object> op, RoomOptions roomOptions)
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x94217C", Offset = "0x94217C", VA = "0x94217C", Slot = "21")]
	public virtual bool OpCreateRoom(EnterRoomParams opParams)
	{
		return default(bool);
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x94245C", Offset = "0x94245C", VA = "0x94245C", Slot = "22")]
	public virtual bool OpJoinRoom(EnterRoomParams opParams)
	{
		return default(bool);
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x9427AC", Offset = "0x9427AC", VA = "0x9427AC", Slot = "23")]
	public virtual bool OpJoinRandomRoom(OpJoinRandomRoomParams opJoinRandomRoomParams)
	{
		return default(bool);
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x942B14", Offset = "0x942B14", VA = "0x942B14", Slot = "24")]
	public virtual bool OpLeaveRoom(bool becomeInactive)
	{
		return default(bool);
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x942C44", Offset = "0x942C44", VA = "0x942C44", Slot = "25")]
	public virtual bool OpGetGameList(TypedLobby lobby, string queryData)
	{
		return default(bool);
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x942F4C", Offset = "0x942F4C", VA = "0x942F4C", Slot = "26")]
	public virtual bool OpFindFriends(string[] friendsToFind, [Optional] FindFriendsOptions options)
	{
		return default(bool);
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x9430E0", Offset = "0x9430E0", VA = "0x9430E0")]
	public bool OpSetCustomPropertiesOfActor(int actorNr, ExitGames.Client.Photon.Hashtable actorProperties)
	{
		return default(bool);
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x94315C", Offset = "0x94315C", VA = "0x94315C")]
	protected internal bool OpSetPropertiesOfActor(int actorNr, ExitGames.Client.Photon.Hashtable actorProperties, [Optional] ExitGames.Client.Photon.Hashtable expectedProperties, bool webForward = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x943494", Offset = "0x943494", VA = "0x943494")]
	protected internal void OpSetPropertyOfRoom(byte propCode, object value)
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x9437A8", Offset = "0x9437A8", VA = "0x9437A8")]
	[Obsolete("Use the other overload method")]
	public bool OpSetCustomPropertiesOfRoom(ExitGames.Client.Photon.Hashtable gameProperties, bool broadcast, byte channelId)
	{
		return default(bool);
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x94381C", Offset = "0x94381C", VA = "0x94381C")]
	public bool OpSetCustomPropertiesOfRoom(ExitGames.Client.Photon.Hashtable gameProperties, [Optional] ExitGames.Client.Photon.Hashtable expectedProperties, bool webForward = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x943554", Offset = "0x943554", VA = "0x943554")]
	protected internal bool OpSetPropertiesOfRoom(ExitGames.Client.Photon.Hashtable gameProperties, [Optional] ExitGames.Client.Photon.Hashtable expectedProperties, bool webForward = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x9438AC", Offset = "0x9438AC", VA = "0x9438AC", Slot = "27")]
	public virtual bool OpAuthenticate(string appId, string appVersion, AuthenticationValues authValues, string regionCode, bool getLobbyStatistics)
	{
		return default(bool);
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x943D14", Offset = "0x943D14", VA = "0x943D14", Slot = "28")]
	public virtual bool OpAuthenticateOnce(string appId, string appVersion, AuthenticationValues authValues, string regionCode, EncryptionMode encryptionMode, ConnectionProtocol expectedProtocol)
	{
		return default(bool);
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x944150", Offset = "0x944150", VA = "0x944150", Slot = "29")]
	public virtual bool OpChangeGroups(byte[] groupsToRemove, byte[] groupsToAdd)
	{
		return default(bool);
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x9442FC", Offset = "0x9442FC", VA = "0x9442FC", Slot = "30")]
	public virtual bool OpRaiseEvent(byte eventCode, object customEventContent, bool sendReliable, RaiseEventOptions raiseEventOptions)
	{
		return default(bool);
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x944588", Offset = "0x944588", VA = "0x944588", Slot = "31")]
	public virtual bool OpSettings(bool receiveLobbyStats)
	{
		return default(bool);
	}
}
[Token(Token = "0x200002B")]
internal class OpJoinRandomRoomParams
{
	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ExitGames.Client.Photon.Hashtable ExpectedCustomRoomProperties;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public byte ExpectedMaxPlayers;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public MatchmakingMode MatchingType;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TypedLobby TypedLobby;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string SqlLobbyFilter;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string[] ExpectedUsers;

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x944768", Offset = "0x944768", VA = "0x944768")]
	public OpJoinRandomRoomParams()
	{
	}
}
[Token(Token = "0x200002C")]
internal class EnterRoomParams
{
	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string RoomName;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RoomOptions RoomOptions;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TypedLobby Lobby;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ExitGames.Client.Photon.Hashtable PlayerProperties;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool OnGameServer;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool CreateIfNotExists;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool RejoinOnly;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string[] ExpectedUsers;

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x944770", Offset = "0x944770", VA = "0x944770")]
	public EnterRoomParams()
	{
	}
}
[Token(Token = "0x200002D")]
public class ErrorCode
{
	[Token(Token = "0x40000EC")]
	public const int Ok = 0;

	[Token(Token = "0x40000ED")]
	public const int OperationNotAllowedInCurrentState = -3;

	[Token(Token = "0x40000EE")]
	[Obsolete("Use InvalidOperation.")]
	public const int InvalidOperationCode = -2;

	[Token(Token = "0x40000EF")]
	public const int InvalidOperation = -2;

	[Token(Token = "0x40000F0")]
	public const int InternalServerError = -1;

	[Token(Token = "0x40000F1")]
	public const int InvalidAuthentication = 32767;

	[Token(Token = "0x40000F2")]
	public const int GameIdAlreadyExists = 32766;

	[Token(Token = "0x40000F3")]
	public const int GameFull = 32765;

	[Token(Token = "0x40000F4")]
	public const int GameClosed = 32764;

	[Token(Token = "0x40000F5")]
	[Obsolete("No longer used, cause random matchmaking is no longer a process.")]
	public const int AlreadyMatched = 32763;

	[Token(Token = "0x40000F6")]
	public const int ServerFull = 32762;

	[Token(Token = "0x40000F7")]
	public const int UserBlocked = 32761;

	[Token(Token = "0x40000F8")]
	public const int NoRandomMatchFound = 32760;

	[Token(Token = "0x40000F9")]
	public const int GameDoesNotExist = 32758;

	[Token(Token = "0x40000FA")]
	public const int MaxCcuReached = 32757;

	[Token(Token = "0x40000FB")]
	public const int InvalidRegion = 32756;

	[Token(Token = "0x40000FC")]
	public const int CustomAuthenticationFailed = 32755;

	[Token(Token = "0x40000FD")]
	public const int AuthenticationTicketExpired = 32753;

	[Token(Token = "0x40000FE")]
	public const int PluginReportedError = 32752;

	[Token(Token = "0x40000FF")]
	public const int PluginMismatch = 32751;

	[Token(Token = "0x4000100")]
	public const int JoinFailedPeerAlreadyJoined = 32750;

	[Token(Token = "0x4000101")]
	public const int JoinFailedFoundInactiveJoiner = 32749;

	[Token(Token = "0x4000102")]
	public const int JoinFailedWithRejoinerNotFound = 32748;

	[Token(Token = "0x4000103")]
	public const int JoinFailedFoundExcludedUserId = 32747;

	[Token(Token = "0x4000104")]
	public const int JoinFailedFoundActiveJoiner = 32746;

	[Token(Token = "0x4000105")]
	public const int HttpLimitReached = 32745;

	[Token(Token = "0x4000106")]
	public const int ExternalHttpCallFailed = 32744;

	[Token(Token = "0x4000107")]
	public const int SlotError = 32742;

	[Token(Token = "0x4000108")]
	public const int InvalidEncryptionParameters = 32741;

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x944780", Offset = "0x944780", VA = "0x944780")]
	public ErrorCode()
	{
	}
}
[Token(Token = "0x200002E")]
public class ActorProperties
{
	[Token(Token = "0x4000109")]
	public const byte PlayerName = byte.MaxValue;

	[Token(Token = "0x400010A")]
	public const byte IsInactive = 254;

	[Token(Token = "0x400010B")]
	public const byte UserId = 253;

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x944788", Offset = "0x944788", VA = "0x944788")]
	public ActorProperties()
	{
	}
}
[Token(Token = "0x200002F")]
public class GamePropertyKey
{
	[Token(Token = "0x400010C")]
	public const byte MaxPlayers = byte.MaxValue;

	[Token(Token = "0x400010D")]
	public const byte IsVisible = 254;

	[Token(Token = "0x400010E")]
	public const byte IsOpen = 253;

	[Token(Token = "0x400010F")]
	public const byte PlayerCount = 252;

	[Token(Token = "0x4000110")]
	public const byte Removed = 251;

	[Token(Token = "0x4000111")]
	public const byte PropsListedInLobby = 250;

	[Token(Token = "0x4000112")]
	public const byte CleanupCacheOnLeave = 249;

	[Token(Token = "0x4000113")]
	public const byte MasterClientId = 248;

	[Token(Token = "0x4000114")]
	public const byte ExpectedUsers = 247;

	[Token(Token = "0x4000115")]
	public const byte PlayerTtl = 246;

	[Token(Token = "0x4000116")]
	public const byte EmptyRoomTtl = 245;

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x944790", Offset = "0x944790", VA = "0x944790")]
	public GamePropertyKey()
	{
	}
}
[Token(Token = "0x2000030")]
public class EventCode
{
	[Token(Token = "0x4000117")]
	public const byte GameList = 230;

	[Token(Token = "0x4000118")]
	public const byte GameListUpdate = 229;

	[Token(Token = "0x4000119")]
	public const byte QueueState = 228;

	[Token(Token = "0x400011A")]
	public const byte Match = 227;

	[Token(Token = "0x400011B")]
	public const byte AppStats = 226;

	[Token(Token = "0x400011C")]
	public const byte LobbyStats = 224;

	[Token(Token = "0x400011D")]
	[Obsolete("TCP routing was removed after becoming obsolete.")]
	public const byte AzureNodeInfo = 210;

	[Token(Token = "0x400011E")]
	public const byte Join = byte.MaxValue;

	[Token(Token = "0x400011F")]
	public const byte Leave = 254;

	[Token(Token = "0x4000120")]
	public const byte PropertiesChanged = 253;

	[Token(Token = "0x4000121")]
	[Obsolete("Use PropertiesChanged now.")]
	public const byte SetProperties = 253;

	[Token(Token = "0x4000122")]
	public const byte ErrorInfo = 251;

	[Token(Token = "0x4000123")]
	public const byte CacheSliceChanged = 250;

	[Token(Token = "0x4000124")]
	public const byte AuthEvent = 223;

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x944798", Offset = "0x944798", VA = "0x944798")]
	public EventCode()
	{
	}
}
[Token(Token = "0x2000031")]
public class ParameterCode
{
	[Token(Token = "0x4000125")]
	public const byte SuppressRoomEvents = 237;

	[Token(Token = "0x4000126")]
	public const byte EmptyRoomTTL = 236;

	[Token(Token = "0x4000127")]
	public const byte PlayerTTL = 235;

	[Token(Token = "0x4000128")]
	public const byte EventForward = 234;

	[Token(Token = "0x4000129")]
	[Obsolete("Use: IsInactive")]
	public const byte IsComingBack = 233;

	[Token(Token = "0x400012A")]
	public const byte IsInactive = 233;

	[Token(Token = "0x400012B")]
	public const byte CheckUserOnJoin = 232;

	[Token(Token = "0x400012C")]
	public const byte ExpectedValues = 231;

	[Token(Token = "0x400012D")]
	public const byte Address = 230;

	[Token(Token = "0x400012E")]
	public const byte PeerCount = 229;

	[Token(Token = "0x400012F")]
	public const byte GameCount = 228;

	[Token(Token = "0x4000130")]
	public const byte MasterPeerCount = 227;

	[Token(Token = "0x4000131")]
	public const byte UserId = 225;

	[Token(Token = "0x4000132")]
	public const byte ApplicationId = 224;

	[Token(Token = "0x4000133")]
	public const byte Position = 223;

	[Token(Token = "0x4000134")]
	public const byte MatchMakingType = 223;

	[Token(Token = "0x4000135")]
	public const byte GameList = 222;

	[Token(Token = "0x4000136")]
	public const byte Secret = 221;

	[Token(Token = "0x4000137")]
	public const byte AppVersion = 220;

	[Token(Token = "0x4000138")]
	[Obsolete("TCP routing was removed after becoming obsolete.")]
	public const byte AzureNodeInfo = 210;

	[Token(Token = "0x4000139")]
	[Obsolete("TCP routing was removed after becoming obsolete.")]
	public const byte AzureLocalNodeId = 209;

	[Token(Token = "0x400013A")]
	[Obsolete("TCP routing was removed after becoming obsolete.")]
	public const byte AzureMasterNodeId = 208;

	[Token(Token = "0x400013B")]
	public const byte RoomName = byte.MaxValue;

	[Token(Token = "0x400013C")]
	public const byte Broadcast = 250;

	[Token(Token = "0x400013D")]
	public const byte ActorList = 252;

	[Token(Token = "0x400013E")]
	public const byte ActorNr = 254;

	[Token(Token = "0x400013F")]
	public const byte PlayerProperties = 249;

	[Token(Token = "0x4000140")]
	public const byte CustomEventContent = 245;

	[Token(Token = "0x4000141")]
	public const byte Data = 245;

	[Token(Token = "0x4000142")]
	public const byte Code = 244;

	[Token(Token = "0x4000143")]
	public const byte GameProperties = 248;

	[Token(Token = "0x4000144")]
	public const byte Properties = 251;

	[Token(Token = "0x4000145")]
	public const byte TargetActorNr = 253;

	[Token(Token = "0x4000146")]
	public const byte ReceiverGroup = 246;

	[Token(Token = "0x4000147")]
	public const byte Cache = 247;

	[Token(Token = "0x4000148")]
	public const byte CleanupCacheOnLeave = 241;

	[Token(Token = "0x4000149")]
	public const byte Group = 240;

	[Token(Token = "0x400014A")]
	public const byte Remove = 239;

	[Token(Token = "0x400014B")]
	public const byte PublishUserId = 239;

	[Token(Token = "0x400014C")]
	public const byte Add = 238;

	[Token(Token = "0x400014D")]
	public const byte Info = 218;

	[Token(Token = "0x400014E")]
	public const byte ClientAuthenticationType = 217;

	[Token(Token = "0x400014F")]
	public const byte ClientAuthenticationParams = 216;

	[Token(Token = "0x4000150")]
	public const byte JoinMode = 215;

	[Token(Token = "0x4000151")]
	public const byte ClientAuthenticationData = 214;

	[Token(Token = "0x4000152")]
	public const byte MasterClientId = 203;

	[Token(Token = "0x4000153")]
	public const byte FindFriendsRequestList = 1;

	[Token(Token = "0x4000154")]
	public const byte FindFriendsOptions = 2;

	[Token(Token = "0x4000155")]
	public const byte FindFriendsResponseOnlineList = 1;

	[Token(Token = "0x4000156")]
	public const byte FindFriendsResponseRoomIdList = 2;

	[Token(Token = "0x4000157")]
	public const byte LobbyName = 213;

	[Token(Token = "0x4000158")]
	public const byte LobbyType = 212;

	[Token(Token = "0x4000159")]
	public const byte LobbyStats = 211;

	[Token(Token = "0x400015A")]
	public const byte Region = 210;

	[Token(Token = "0x400015B")]
	public const byte UriPath = 209;

	[Token(Token = "0x400015C")]
	public const byte WebRpcParameters = 208;

	[Token(Token = "0x400015D")]
	public const byte WebRpcReturnCode = 207;

	[Token(Token = "0x400015E")]
	public const byte WebRpcReturnMessage = 206;

	[Token(Token = "0x400015F")]
	public const byte CacheSliceIndex = 205;

	[Token(Token = "0x4000160")]
	public const byte Plugins = 204;

	[Token(Token = "0x4000161")]
	public const byte NickName = 202;

	[Token(Token = "0x4000162")]
	public const byte PluginName = 201;

	[Token(Token = "0x4000163")]
	public const byte PluginVersion = 200;

	[Token(Token = "0x4000164")]
	public const byte Cluster = 196;

	[Token(Token = "0x4000165")]
	public const byte ExpectedProtocol = 195;

	[Token(Token = "0x4000166")]
	public const byte CustomInitData = 194;

	[Token(Token = "0x4000167")]
	public const byte EncryptionMode = 193;

	[Token(Token = "0x4000168")]
	public const byte EncryptionData = 192;

	[Token(Token = "0x4000169")]
	public const byte RoomOptionFlags = 191;

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x9447A0", Offset = "0x9447A0", VA = "0x9447A0")]
	public ParameterCode()
	{
	}
}
[Token(Token = "0x2000032")]
public class OperationCode
{
	[Token(Token = "0x400016A")]
	[Obsolete("Exchanging encrpytion keys is done internally in the lib now. Don't expect this operation-result.")]
	public const byte ExchangeKeysForEncryption = 250;

	[Token(Token = "0x400016B")]
	[Obsolete]
	public const byte Join = byte.MaxValue;

	[Token(Token = "0x400016C")]
	public const byte AuthenticateOnce = 231;

	[Token(Token = "0x400016D")]
	public const byte Authenticate = 230;

	[Token(Token = "0x400016E")]
	public const byte JoinLobby = 229;

	[Token(Token = "0x400016F")]
	public const byte LeaveLobby = 228;

	[Token(Token = "0x4000170")]
	public const byte CreateGame = 227;

	[Token(Token = "0x4000171")]
	public const byte JoinGame = 226;

	[Token(Token = "0x4000172")]
	public const byte JoinRandomGame = 225;

	[Token(Token = "0x4000173")]
	public const byte Leave = 254;

	[Token(Token = "0x4000174")]
	public const byte RaiseEvent = 253;

	[Token(Token = "0x4000175")]
	public const byte SetProperties = 252;

	[Token(Token = "0x4000176")]
	public const byte GetProperties = 251;

	[Token(Token = "0x4000177")]
	public const byte ChangeGroups = 248;

	[Token(Token = "0x4000178")]
	public const byte FindFriends = 222;

	[Token(Token = "0x4000179")]
	public const byte GetLobbyStats = 221;

	[Token(Token = "0x400017A")]
	public const byte GetRegions = 220;

	[Token(Token = "0x400017B")]
	public const byte WebRpc = 219;

	[Token(Token = "0x400017C")]
	public const byte ServerSettings = 218;

	[Token(Token = "0x400017D")]
	public const byte GetGameList = 217;

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x9447A8", Offset = "0x9447A8", VA = "0x9447A8")]
	public OperationCode()
	{
	}
}
[Token(Token = "0x2000033")]
public enum JoinMode : byte
{
	[Token(Token = "0x400017F")]
	Default,
	[Token(Token = "0x4000180")]
	CreateIfNotExists,
	[Token(Token = "0x4000181")]
	JoinOrRejoin,
	[Token(Token = "0x4000182")]
	RejoinOnly
}
[Token(Token = "0x2000034")]
public enum MatchmakingMode : byte
{
	[Token(Token = "0x4000184")]
	FillRoom,
	[Token(Token = "0x4000185")]
	SerialMatching,
	[Token(Token = "0x4000186")]
	RandomMatching
}
[Token(Token = "0x2000035")]
public enum ReceiverGroup : byte
{
	[Token(Token = "0x4000188")]
	Others,
	[Token(Token = "0x4000189")]
	All,
	[Token(Token = "0x400018A")]
	MasterClient
}
[Token(Token = "0x2000036")]
public enum EventCaching : byte
{
	[Token(Token = "0x400018C")]
	DoNotCache = 0,
	[Token(Token = "0x400018D")]
	[Obsolete]
	MergeCache = 1,
	[Token(Token = "0x400018E")]
	[Obsolete]
	ReplaceCache = 2,
	[Token(Token = "0x400018F")]
	[Obsolete]
	RemoveCache = 3,
	[Token(Token = "0x4000190")]
	AddToRoomCache = 4,
	[Token(Token = "0x4000191")]
	AddToRoomCacheGlobal = 5,
	[Token(Token = "0x4000192")]
	RemoveFromRoomCache = 6,
	[Token(Token = "0x4000193")]
	RemoveFromRoomCacheForActorsLeft = 7,
	[Token(Token = "0x4000194")]
	SliceIncreaseIndex = 10,
	[Token(Token = "0x4000195")]
	SliceSetIndex = 11,
	[Token(Token = "0x4000196")]
	SlicePurgeIndex = 12,
	[Token(Token = "0x4000197")]
	SlicePurgeUpToIndex = 13
}
[Token(Token = "0x2000037")]
[Flags]
public enum PropertyTypeFlag : byte
{
	[Token(Token = "0x4000199")]
	None = 0,
	[Token(Token = "0x400019A")]
	Game = 1,
	[Token(Token = "0x400019B")]
	Actor = 2,
	[Token(Token = "0x400019C")]
	GameAndActor = 3
}
[Token(Token = "0x2000038")]
public class RoomOptions
{
	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool isVisibleField;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool isOpenField;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public byte MaxPlayers;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int PlayerTtl;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int EmptyRoomTtl;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool cleanupCacheOnLeaveField;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ExitGames.Client.Photon.Hashtable CustomRoomProperties;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string[] CustomRoomPropertiesForLobby;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string[] Plugins;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool suppressRoomEventsField;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool publishUserIdField;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	private bool deleteNullPropertiesField;

	[Token(Token = "0x17000007")]
	public bool IsVisible
	{
		[Token(Token = "0x60000B8")]
		[Address(RVA = "0x9447B0", Offset = "0x9447B0", VA = "0x9447B0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000B9")]
		[Address(RVA = "0x9447B8", Offset = "0x9447B8", VA = "0x9447B8")]
		set
		{
		}
	}

	[Token(Token = "0x17000008")]
	public bool IsOpen
	{
		[Token(Token = "0x60000BA")]
		[Address(RVA = "0x9447C4", Offset = "0x9447C4", VA = "0x9447C4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000BB")]
		[Address(RVA = "0x9447CC", Offset = "0x9447CC", VA = "0x9447CC")]
		set
		{
		}
	}

	[Token(Token = "0x17000009")]
	public bool CleanupCacheOnLeave
	{
		[Token(Token = "0x60000BC")]
		[Address(RVA = "0x9447D8", Offset = "0x9447D8", VA = "0x9447D8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000BD")]
		[Address(RVA = "0x9447E0", Offset = "0x9447E0", VA = "0x9447E0")]
		set
		{
		}
	}

	[Token(Token = "0x1700000A")]
	public bool SuppressRoomEvents
	{
		[Token(Token = "0x60000BE")]
		[Address(RVA = "0x9447EC", Offset = "0x9447EC", VA = "0x9447EC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700000B")]
	public bool PublishUserId
	{
		[Token(Token = "0x60000BF")]
		[Address(RVA = "0x9447F4", Offset = "0x9447F4", VA = "0x9447F4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000C0")]
		[Address(RVA = "0x9447FC", Offset = "0x9447FC", VA = "0x9447FC")]
		set
		{
		}
	}

	[Token(Token = "0x1700000C")]
	public bool DeleteNullProperties
	{
		[Token(Token = "0x60000C1")]
		[Address(RVA = "0x944808", Offset = "0x944808", VA = "0x944808")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000C2")]
		[Address(RVA = "0x944810", Offset = "0x944810", VA = "0x944810")]
		set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	[Obsolete("Use property with uppercase naming instead.")]
	public bool isVisible
	{
		[Token(Token = "0x60000C3")]
		[Address(RVA = "0x94481C", Offset = "0x94481C", VA = "0x94481C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000C4")]
		[Address(RVA = "0x944824", Offset = "0x944824", VA = "0x944824")]
		set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	[Obsolete("Use property with uppercase naming instead.")]
	public bool isOpen
	{
		[Token(Token = "0x60000C5")]
		[Address(RVA = "0x944830", Offset = "0x944830", VA = "0x944830")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000C6")]
		[Address(RVA = "0x944838", Offset = "0x944838", VA = "0x944838")]
		set
		{
		}
	}

	[Token(Token = "0x1700000F")]
	[Obsolete("Use property with uppercase naming instead.")]
	public byte maxPlayers
	{
		[Token(Token = "0x60000C7")]
		[Address(RVA = "0x944844", Offset = "0x944844", VA = "0x944844")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x60000C8")]
		[Address(RVA = "0x94484C", Offset = "0x94484C", VA = "0x94484C")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	[Obsolete("Use property with uppercase naming instead.")]
	public bool cleanupCacheOnLeave
	{
		[Token(Token = "0x60000C9")]
		[Address(RVA = "0x944854", Offset = "0x944854", VA = "0x944854")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000CA")]
		[Address(RVA = "0x94485C", Offset = "0x94485C", VA = "0x94485C")]
		set
		{
		}
	}

	[Token(Token = "0x17000011")]
	[Obsolete("Use property with uppercase naming instead.")]
	public ExitGames.Client.Photon.Hashtable customRoomProperties
	{
		[Token(Token = "0x60000CB")]
		[Address(RVA = "0x944868", Offset = "0x944868", VA = "0x944868")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000CC")]
		[Address(RVA = "0x944870", Offset = "0x944870", VA = "0x944870")]
		set
		{
		}
	}

	[Token(Token = "0x17000012")]
	[Obsolete("Use property with uppercase naming instead.")]
	public string[] customRoomPropertiesForLobby
	{
		[Token(Token = "0x60000CD")]
		[Address(RVA = "0x944878", Offset = "0x944878", VA = "0x944878")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000CE")]
		[Address(RVA = "0x944880", Offset = "0x944880", VA = "0x944880")]
		set
		{
		}
	}

	[Token(Token = "0x17000013")]
	[Obsolete("Use property with uppercase naming instead.")]
	public string[] plugins
	{
		[Token(Token = "0x60000CF")]
		[Address(RVA = "0x944888", Offset = "0x944888", VA = "0x944888")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000D0")]
		[Address(RVA = "0x944890", Offset = "0x944890", VA = "0x944890")]
		set
		{
		}
	}

	[Token(Token = "0x17000014")]
	[Obsolete("Use property with uppercase naming instead.")]
	public bool suppressRoomEvents
	{
		[Token(Token = "0x60000D1")]
		[Address(RVA = "0x944898", Offset = "0x944898", VA = "0x944898")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000015")]
	[Obsolete("Use property with uppercase naming instead.")]
	public bool publishUserId
	{
		[Token(Token = "0x60000D2")]
		[Address(RVA = "0x9448A0", Offset = "0x9448A0", VA = "0x9448A0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000D3")]
		[Address(RVA = "0x9448A8", Offset = "0x9448A8", VA = "0x9448A8")]
		set
		{
		}
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x9420B8", Offset = "0x9420B8", VA = "0x9420B8")]
	public RoomOptions()
	{
	}
}
[Token(Token = "0x2000039")]
public class RaiseEventOptions
{
	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly RaiseEventOptions Default;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public EventCaching CachingOption;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public byte InterestGroup;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int[] TargetActors;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ReceiverGroup Receivers;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public byte SequenceChannel;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool ForwardToWebhook;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool Encrypt;

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x9448B4", Offset = "0x9448B4", VA = "0x9448B4")]
	public void Reset()
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x944950", Offset = "0x944950", VA = "0x944950")]
	public RaiseEventOptions()
	{
	}
}
[Token(Token = "0x200003A")]
public enum LobbyType : byte
{
	[Token(Token = "0x40001B2")]
	Default = 0,
	[Token(Token = "0x40001B3")]
	SqlLobby = 2,
	[Token(Token = "0x40001B4")]
	AsyncRandomLobby = 3
}
[Token(Token = "0x200003B")]
public class TypedLobby
{
	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string Name;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LobbyType Type;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly TypedLobby Default;

	[Token(Token = "0x17000016")]
	public bool IsDefault
	{
		[Token(Token = "0x60000D8")]
		[Address(RVA = "0x941B60", Offset = "0x941B60", VA = "0x941B60")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x9449BC", Offset = "0x9449BC", VA = "0x9449BC")]
	public TypedLobby()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x944A1C", Offset = "0x944A1C", VA = "0x944A1C")]
	public TypedLobby(string name, LobbyType type)
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x944A4C", Offset = "0x944A4C", VA = "0x944A4C", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x200003C")]
public class TypedLobbyInfo : TypedLobby
{
	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int PlayerCount;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int RoomCount;

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x944B38", Offset = "0x944B38", VA = "0x944B38", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x944CE4", Offset = "0x944CE4", VA = "0x944CE4")]
	public TypedLobbyInfo()
	{
	}
}
[Token(Token = "0x200003D")]
public enum AuthModeOption
{
	[Token(Token = "0x40001BB")]
	Auth,
	[Token(Token = "0x40001BC")]
	AuthOnce,
	[Token(Token = "0x40001BD")]
	AuthOnceWss
}
[Token(Token = "0x200003E")]
public enum CustomAuthenticationType : byte
{
	[Token(Token = "0x40001BF")]
	Custom = 0,
	[Token(Token = "0x40001C0")]
	Steam = 1,
	[Token(Token = "0x40001C1")]
	Facebook = 2,
	[Token(Token = "0x40001C2")]
	Oculus = 3,
	[Token(Token = "0x40001C3")]
	PlayStation = 4,
	[Token(Token = "0x40001C4")]
	Xbox = 5,
	[Token(Token = "0x40001C5")]
	Viveport = 10,
	[Token(Token = "0x40001C6")]
	NintendoSwitch = 11,
	[Token(Token = "0x40001C7")]
	None = byte.MaxValue
}
[Token(Token = "0x200003F")]
public class AuthenticationValues
{
	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private CustomAuthenticationType authType;

	[Token(Token = "0x17000017")]
	public CustomAuthenticationType AuthType
	{
		[Token(Token = "0x60000DF")]
		[Address(RVA = "0x944D38", Offset = "0x944D38", VA = "0x944D38")]
		get
		{
			return default(CustomAuthenticationType);
		}
		[Token(Token = "0x60000E0")]
		[Address(RVA = "0x944D40", Offset = "0x944D40", VA = "0x944D40")]
		set
		{
		}
	}

	[Token(Token = "0x17000018")]
	public string AuthGetParameters
	{
		[Token(Token = "0x60000E1")]
		[Address(RVA = "0x944D48", Offset = "0x944D48", VA = "0x944D48")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60000E2")]
		[Address(RVA = "0x944D50", Offset = "0x944D50", VA = "0x944D50")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000019")]
	public object AuthPostData
	{
		[Token(Token = "0x60000E3")]
		[Address(RVA = "0x944D58", Offset = "0x944D58", VA = "0x944D58")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60000E4")]
		[Address(RVA = "0x944D60", Offset = "0x944D60", VA = "0x944D60")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700001A")]
	public string Token
	{
		[Token(Token = "0x60000E5")]
		[Address(RVA = "0x944D68", Offset = "0x944D68", VA = "0x944D68")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60000E6")]
		[Address(RVA = "0x944D70", Offset = "0x944D70", VA = "0x944D70")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700001B")]
	public string UserId
	{
		[Token(Token = "0x60000E7")]
		[Address(RVA = "0x944D78", Offset = "0x944D78", VA = "0x944D78")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60000E8")]
		[Address(RVA = "0x944D80", Offset = "0x944D80", VA = "0x944D80")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x944D88", Offset = "0x944D88", VA = "0x944D88")]
	public AuthenticationValues()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x944D98", Offset = "0x944D98", VA = "0x944D98")]
	public AuthenticationValues(string userId)
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x944DC8", Offset = "0x944DC8", VA = "0x944DC8", Slot = "4")]
	public virtual void SetAuthPostData(string stringData)
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x944E04", Offset = "0x944E04", VA = "0x944E04", Slot = "5")]
	public virtual void SetAuthPostData(byte[] byteData)
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x944E0C", Offset = "0x944E0C", VA = "0x944E0C", Slot = "6")]
	public virtual void SetAuthPostData(Dictionary<string, object> dictData)
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x944E14", Offset = "0x944E14", VA = "0x944E14", Slot = "7")]
	public virtual void AddAuthParameter(string key, string value)
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x944FE0", Offset = "0x944FE0", VA = "0x944FE0", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000040")]
public class FindFriendsOptions
{
	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool CreatedOnGs;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool Visible;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public bool Open;

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x9430B8", Offset = "0x9430B8", VA = "0x9430B8")]
	internal int ToIntFlags()
	{
		return default(int);
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x945078", Offset = "0x945078", VA = "0x945078")]
	public FindFriendsOptions()
	{
	}
}
[Token(Token = "0x2000041")]
public enum ClientState
{
	[Token(Token = "0x40001D1")]
	Uninitialized,
	[Token(Token = "0x40001D2")]
	PeerCreated,
	[Token(Token = "0x40001D3")]
	Queued,
	[Token(Token = "0x40001D4")]
	Authenticated,
	[Token(Token = "0x40001D5")]
	JoinedLobby,
	[Token(Token = "0x40001D6")]
	DisconnectingFromMasterserver,
	[Token(Token = "0x40001D7")]
	ConnectingToGameserver,
	[Token(Token = "0x40001D8")]
	ConnectedToGameserver,
	[Token(Token = "0x40001D9")]
	Joining,
	[Token(Token = "0x40001DA")]
	Joined,
	[Token(Token = "0x40001DB")]
	Leaving,
	[Token(Token = "0x40001DC")]
	DisconnectingFromGameserver,
	[Token(Token = "0x40001DD")]
	ConnectingToMasterserver,
	[Token(Token = "0x40001DE")]
	QueuedComingFromGameserver,
	[Token(Token = "0x40001DF")]
	Disconnecting,
	[Token(Token = "0x40001E0")]
	Disconnected,
	[Token(Token = "0x40001E1")]
	ConnectedToMaster,
	[Token(Token = "0x40001E2")]
	ConnectingToNameServer,
	[Token(Token = "0x40001E3")]
	ConnectedToNameServer,
	[Token(Token = "0x40001E4")]
	DisconnectingFromNameServer,
	[Token(Token = "0x40001E5")]
	Authenticating
}
[Token(Token = "0x2000042")]
internal enum JoinType
{
	[Token(Token = "0x40001E7")]
	CreateRoom,
	[Token(Token = "0x40001E8")]
	JoinRoom,
	[Token(Token = "0x40001E9")]
	JoinRandomRoom,
	[Token(Token = "0x40001EA")]
	JoinOrCreateRoom
}
[Token(Token = "0x2000043")]
public enum DisconnectCause
{
	[Token(Token = "0x40001EC")]
	DisconnectByServerUserLimit = 1042,
	[Token(Token = "0x40001ED")]
	ExceptionOnConnect = 1023,
	[Token(Token = "0x40001EE")]
	DisconnectByServerTimeout = 1041,
	[Token(Token = "0x40001EF")]
	DisconnectByServerLogic = 1043,
	[Token(Token = "0x40001F0")]
	Exception = 1026,
	[Token(Token = "0x40001F1")]
	InvalidAuthentication = 32767,
	[Token(Token = "0x40001F2")]
	MaxCcuReached = 32757,
	[Token(Token = "0x40001F3")]
	InvalidRegion = 32756,
	[Token(Token = "0x40001F4")]
	SecurityExceptionOnConnect = 1022,
	[Token(Token = "0x40001F5")]
	DisconnectByClientTimeout = 1040,
	[Token(Token = "0x40001F6")]
	InternalReceiveException = 1039,
	[Token(Token = "0x40001F7")]
	AuthenticationTicketExpired = 32753
}
[Token(Token = "0x2000044")]
public enum ServerConnection
{
	[Token(Token = "0x40001F9")]
	MasterServer,
	[Token(Token = "0x40001FA")]
	GameServer,
	[Token(Token = "0x40001FB")]
	NameServer
}
[Token(Token = "0x2000045")]
internal class NetworkingPeer : LoadBalancingPeer, IPhotonPeerListener
{
	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	protected internal string AppId;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private string tokenCache;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public AuthModeOption AuthMode;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public EncryptionMode EncryptionMode;

	[Token(Token = "0x4000202")]
	public const string NameServerHost = "ns.exitgames.com";

	[Token(Token = "0x4000203")]
	public const string NameServerHttp = "http://ns.exitgamescloud.com:80/photon/n";

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<ConnectionProtocol, int> ProtocolToNameServerPort;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public bool IsInitialConnect;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	public bool insideLobby;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	protected internal List<TypedLobbyInfo> LobbyStatistics;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Dictionary<string, RoomInfo> mGameList;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public RoomInfo[] mGameListCopy;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private string playername;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool mPlayernameHasToBeUpdated;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Room currentRoom;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private JoinType lastJoinType;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	protected internal EnterRoomParams enterRoomParamsCache;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private bool didAuthenticate;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private string[] friendListRequested;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private int friendListTimestamp;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private bool isFetchingFriendList;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private string cloudCluster;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public string CurrentCluster;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public Dictionary<int, PhotonPlayer> mActors;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public PhotonPlayer[] mOtherPlayerListCopy;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public PhotonPlayer[] mPlayerListCopy;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public bool hasSwitchedMC;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private HashSet<byte> allowedReceivingGroups;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private HashSet<byte> blockSendingGroups;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	protected internal Dictionary<int, PhotonView> photonViewList;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private readonly PhotonStream readStream;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private readonly PhotonStream pStream;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private readonly Dictionary<int, ExitGames.Client.Photon.Hashtable> dataPerGroupReliable;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private readonly Dictionary<int, ExitGames.Client.Photon.Hashtable> dataPerGroupUnreliable;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	protected internal short currentLevelPrefix;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x222")]
	protected internal bool loadingLevelAndPausedNetwork;

	[Token(Token = "0x400022D")]
	protected internal const string CurrentSceneProperty = "curScn";

	[Token(Token = "0x400022E")]
	protected internal const string CurrentScenePropertyLoadAsync = "curScnLa";

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool UsePrefabCache;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	internal IPunPrefabPool ObjectPool;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Dictionary<string, GameObject> PrefabCache;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private Dictionary<Type, List<MethodInfo>> monoRPCMethodsCache;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private readonly Dictionary<string, int> rpcShortcuts;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly string OnPhotonInstantiateString;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private string cachedServerAddress;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private string cachedApplicationName;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private ServerConnection cachedServerType;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private AsyncOperation _AsyncLevelLoadingOperation;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private RaiseEventOptions _levelReloadEventOptions;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private bool _isReconnecting;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private readonly Type typePunRPC;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private readonly Type typePhotonMessageInfo;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private readonly object keyByteZero;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private readonly object keyByteOne;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private readonly object keyByteTwo;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private readonly object keyByteThree;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private readonly object keyByteFour;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private readonly object keyByteFive;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private readonly object[] emptyObjectArray;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private readonly Type[] emptyTypeArray;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private Dictionary<int, object[]> tempInstantiationData;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private readonly ExitGames.Client.Photon.Hashtable reusedRpcEvent;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int ObjectsInOneUpdate;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private RaiseEventOptions options;

	[Token(Token = "0x4000249")]
	public const int SyncViewId = 0;

	[Token(Token = "0x400024A")]
	public const int SyncCompressed = 1;

	[Token(Token = "0x400024B")]
	public const int SyncNullValues = 2;

	[Token(Token = "0x400024C")]
	public const int SyncFirstValue = 3;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public bool IsReloadingLevel;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D9")]
	public bool AsynchLevelLoadCall;

	[Token(Token = "0x1700001C")]
	protected internal string AppVersion
	{
		[Token(Token = "0x60000F2")]
		[Address(RVA = "0x945080", Offset = "0x945080", VA = "0x945080")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001D")]
	public AuthenticationValues AuthValues
	{
		[Token(Token = "0x60000F3")]
		[Address(RVA = "0x94513C", Offset = "0x94513C", VA = "0x94513C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60000F4")]
		[Address(RVA = "0x945144", Offset = "0x945144", VA = "0x945144")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700001E")]
	private string TokenForInit
	{
		[Token(Token = "0x60000F5")]
		[Address(RVA = "0x94514C", Offset = "0x94514C", VA = "0x94514C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001F")]
	public bool IsUsingNameServer
	{
		[Token(Token = "0x60000F6")]
		[Address(RVA = "0x94516C", Offset = "0x94516C", VA = "0x94516C")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000F7")]
		[Address(RVA = "0x945174", Offset = "0x945174", VA = "0x945174")]
		[CompilerGenerated]
		protected internal set
		{
		}
	}

	[Token(Token = "0x17000020")]
	public string NameServerAddress
	{
		[Token(Token = "0x60000F8")]
		[Address(RVA = "0x945180", Offset = "0x945180", VA = "0x945180")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000021")]
	public string MasterServerAddress
	{
		[Token(Token = "0x60000F9")]
		[Address(RVA = "0x94535C", Offset = "0x94535C", VA = "0x94535C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60000FA")]
		[Address(RVA = "0x945364", Offset = "0x945364", VA = "0x945364")]
		[CompilerGenerated]
		protected internal set
		{
		}
	}

	[Token(Token = "0x17000022")]
	public string GameServerAddress
	{
		[Token(Token = "0x60000FB")]
		[Address(RVA = "0x94536C", Offset = "0x94536C", VA = "0x94536C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60000FC")]
		[Address(RVA = "0x945374", Offset = "0x945374", VA = "0x945374")]
		[CompilerGenerated]
		protected internal set
		{
		}
	}

	[Token(Token = "0x17000023")]
	protected internal ServerConnection Server
	{
		[Token(Token = "0x60000FD")]
		[Address(RVA = "0x94537C", Offset = "0x94537C", VA = "0x94537C")]
		[CompilerGenerated]
		get
		{
			return default(ServerConnection);
		}
		[Token(Token = "0x60000FE")]
		[Address(RVA = "0x945384", Offset = "0x945384", VA = "0x945384")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000024")]
	public ClientState State
	{
		[Token(Token = "0x60000FF")]
		[Address(RVA = "0x94538C", Offset = "0x94538C", VA = "0x94538C")]
		[CompilerGenerated]
		get
		{
			return default(ClientState);
		}
		[Token(Token = "0x6000100")]
		[Address(RVA = "0x945394", Offset = "0x945394", VA = "0x945394")]
		[CompilerGenerated]
		internal set
		{
		}
	}

	[Token(Token = "0x17000025")]
	public TypedLobby lobby
	{
		[Token(Token = "0x6000101")]
		[Address(RVA = "0x94539C", Offset = "0x94539C", VA = "0x94539C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000102")]
		[Address(RVA = "0x9453A4", Offset = "0x9453A4", VA = "0x9453A4")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000026")]
	private bool requestLobbyStatistics
	{
		[Token(Token = "0x6000103")]
		[Address(RVA = "0x9453AC", Offset = "0x9453AC", VA = "0x9453AC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000027")]
	public string PlayerName
	{
		[Token(Token = "0x6000104")]
		[Address(RVA = "0x94541C", Offset = "0x94541C", VA = "0x94541C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000105")]
		[Address(RVA = "0x945424", Offset = "0x945424", VA = "0x945424")]
		set
		{
		}
	}

	[Token(Token = "0x17000028")]
	public Room CurrentRoom
	{
		[Token(Token = "0x6000106")]
		[Address(RVA = "0x9454A4", Offset = "0x9454A4", VA = "0x9454A4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000107")]
		[Address(RVA = "0x9455BC", Offset = "0x9455BC", VA = "0x9455BC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000029")]
	public PhotonPlayer LocalPlayer
	{
		[Token(Token = "0x6000108")]
		[Address(RVA = "0x9455C4", Offset = "0x9455C4", VA = "0x9455C4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000109")]
		[Address(RVA = "0x9455CC", Offset = "0x9455CC", VA = "0x9455CC")]
		[CompilerGenerated]
		internal set
		{
		}
	}

	[Token(Token = "0x1700002A")]
	public int PlayersOnMasterCount
	{
		[Token(Token = "0x600010A")]
		[Address(RVA = "0x9455D4", Offset = "0x9455D4", VA = "0x9455D4")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600010B")]
		[Address(RVA = "0x9455DC", Offset = "0x9455DC", VA = "0x9455DC")]
		[CompilerGenerated]
		internal set
		{
		}
	}

	[Token(Token = "0x1700002B")]
	public int PlayersInRoomsCount
	{
		[Token(Token = "0x600010C")]
		[Address(RVA = "0x9455E4", Offset = "0x9455E4", VA = "0x9455E4")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600010D")]
		[Address(RVA = "0x9455EC", Offset = "0x9455EC", VA = "0x9455EC")]
		[CompilerGenerated]
		internal set
		{
		}
	}

	[Token(Token = "0x1700002C")]
	public int RoomsCount
	{
		[Token(Token = "0x600010E")]
		[Address(RVA = "0x9455F4", Offset = "0x9455F4", VA = "0x9455F4")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600010F")]
		[Address(RVA = "0x9455FC", Offset = "0x9455FC", VA = "0x9455FC")]
		[CompilerGenerated]
		internal set
		{
		}
	}

	[Token(Token = "0x1700002D")]
	protected internal int FriendListAge
	{
		[Token(Token = "0x6000110")]
		[Address(RVA = "0x945604", Offset = "0x945604", VA = "0x945604")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700002E")]
	public bool IsAuthorizeSecretAvailable
	{
		[Token(Token = "0x6000111")]
		[Address(RVA = "0x94563C", Offset = "0x94563C", VA = "0x94563C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002F")]
	public List<Region> AvailableRegions
	{
		[Token(Token = "0x6000112")]
		[Address(RVA = "0x945664", Offset = "0x945664", VA = "0x945664")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000113")]
		[Address(RVA = "0x94566C", Offset = "0x94566C", VA = "0x94566C")]
		[CompilerGenerated]
		protected internal set
		{
		}
	}

	[Token(Token = "0x17000030")]
	public CloudRegionCode CloudRegion
	{
		[Token(Token = "0x6000114")]
		[Address(RVA = "0x945674", Offset = "0x945674", VA = "0x945674")]
		[CompilerGenerated]
		get
		{
			return default(CloudRegionCode);
		}
		[Token(Token = "0x6000115")]
		[Address(RVA = "0x94567C", Offset = "0x94567C", VA = "0x94567C")]
		[CompilerGenerated]
		protected internal set
		{
		}
	}

	[Token(Token = "0x17000031")]
	public int mMasterClientId
	{
		[Token(Token = "0x6000116")]
		[Address(RVA = "0x945684", Offset = "0x945684", VA = "0x945684")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000117")]
		[Address(RVA = "0x945744", Offset = "0x945744", VA = "0x945744")]
		private set
		{
		}
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x94575C", Offset = "0x94575C", VA = "0x94575C")]
	public NetworkingPeer(string playername, ConnectionProtocol connectionProtocol)
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x945184", Offset = "0x945184", VA = "0x945184")]
	private string GetNameServerAddress()
	{
		return null;
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x945FCC", Offset = "0x945FCC", VA = "0x945FCC", Slot = "6")]
	public override bool Connect(string serverAddress, string applicationName)
	{
		return default(bool);
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x94603C", Offset = "0x94603C", VA = "0x94603C")]
	public bool ReconnectToMaster()
	{
		return default(bool);
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x946324", Offset = "0x946324", VA = "0x946324")]
	public bool ReconnectAndRejoin()
	{
		return default(bool);
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x946104", Offset = "0x946104", VA = "0x946104")]
	public bool Connect(string serverAddress, ServerConnection type)
	{
		return default(bool);
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x946A74", Offset = "0x946A74", VA = "0x946A74")]
	private bool Reconnect()
	{
		return default(bool);
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x946B60", Offset = "0x946B60", VA = "0x946B60")]
	public bool ConnectToNameServer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x946CA0", Offset = "0x946CA0", VA = "0x946CA0")]
	public bool ConnectToRegionMaster(CloudRegionCode region, [Optional] string specificCluster)
	{
		return default(bool);
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x946420", Offset = "0x946420", VA = "0x946420")]
	protected internal void SetupProtocol(ServerConnection serverType)
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x947024", Offset = "0x947024", VA = "0x947024", Slot = "8")]
	public override void Disconnect()
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x946E00", Offset = "0x946E00", VA = "0x946E00")]
	private bool CallAuthenticate()
	{
		return default(bool);
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x94712C", Offset = "0x94712C", VA = "0x94712C")]
	private void DisconnectToReconnect()
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x947154", Offset = "0x947154", VA = "0x947154")]
	public bool GetRegions()
	{
		return default(bool);
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x947198", Offset = "0x947198", VA = "0x947198", Slot = "26")]
	public override bool OpFindFriends(string[] friendsToFind, [Optional] FindFriendsOptions findFriendsOptions)
	{
		return default(bool);
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x9471B8", Offset = "0x9471B8", VA = "0x9471B8")]
	public bool OpCreateGame(EnterRoomParams enterRoomParams)
	{
		return default(bool);
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x947310", Offset = "0x947310", VA = "0x947310", Slot = "22")]
	public override bool OpJoinRoom(EnterRoomParams opParams)
	{
		return default(bool);
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x947350", Offset = "0x947350", VA = "0x947350", Slot = "23")]
	public override bool OpJoinRandomRoom(OpJoinRandomRoomParams opJoinRandomRoomParams)
	{
		return default(bool);
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x9473E8", Offset = "0x9473E8", VA = "0x9473E8", Slot = "30")]
	public override bool OpRaiseEvent(byte eventCode, object customEventContent, bool sendReliable, RaiseEventOptions raiseEventOptions)
	{
		return default(bool);
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x9474C4", Offset = "0x9474C4", VA = "0x9474C4")]
	private void ReadoutProperties(ExitGames.Client.Photon.Hashtable gameProperties, ExitGames.Client.Photon.Hashtable pActorProperties, int targetActorNr)
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x947B58", Offset = "0x947B58", VA = "0x947B58")]
	private ExitGames.Client.Photon.Hashtable ReadoutPropertiesForActorNr(ExitGames.Client.Photon.Hashtable actorProperties, int actorNr)
	{
		return null;
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x9481BC", Offset = "0x9481BC", VA = "0x9481BC")]
	public void ChangeLocalID(int newID)
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x948564", Offset = "0x948564", VA = "0x948564")]
	private void LeftLobbyCleanup()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x948698", Offset = "0x948698", VA = "0x948698")]
	private void LeftRoomCleanup()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x9489BC", Offset = "0x9489BC", VA = "0x9489BC")]
	protected internal void LocalCleanupAnythingInstantiated(bool destroyInstantiatedGameObjects)
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x94921C", Offset = "0x94921C", VA = "0x94921C")]
	private void GameEnteredOnGameServer(OperationResponse operationResponse)
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x945EB0", Offset = "0x945EB0", VA = "0x945EB0")]
	private void AddNewPlayer(int ID, PhotonPlayer player)
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x949D00", Offset = "0x949D00", VA = "0x949D00")]
	private void RemovePlayer(int ID, PhotonPlayer player)
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x948380", Offset = "0x948380", VA = "0x948380")]
	private void RebuildPlayerListCopies()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x949D88", Offset = "0x949D88", VA = "0x949D88")]
	private void ResetPhotonViewsOnSerialize()
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x949EEC", Offset = "0x949EEC", VA = "0x949EEC")]
	private void HandleEventLeave(int actorID, EventData evLeave)
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x949A84", Offset = "0x949A84", VA = "0x949A84")]
	private void CheckMasterClient(int leavingPlayerId)
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x94A4D8", Offset = "0x94A4D8", VA = "0x94A4D8")]
	protected internal void UpdateMasterClient()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x94AAA8", Offset = "0x94AAA8", VA = "0x94AAA8")]
	private static int ReturnLowestPlayerId(PhotonPlayer[] players, int playerIdToIgnore)
	{
		return default(int);
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x94AB10", Offset = "0x94AB10", VA = "0x94AB10")]
	protected internal bool SetMasterClient(int playerId, bool sync)
	{
		return default(bool);
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x94AD28", Offset = "0x94AD28", VA = "0x94AD28")]
	public bool SetMasterClient(int nextMasterId)
	{
		return default(bool);
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x947AE8", Offset = "0x947AE8", VA = "0x947AE8")]
	protected internal PhotonPlayer GetPlayerWithId(int number)
	{
		return null;
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x9454C4", Offset = "0x9454C4", VA = "0x9454C4")]
	private void SendPlayerName()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x94720C", Offset = "0x94720C", VA = "0x94720C")]
	private ExitGames.Client.Photon.Hashtable GetLocalActorProperties()
	{
		return null;
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x94AE94", Offset = "0x94AE94", VA = "0x94AE94", Slot = "32")]
	public void DebugReturn(DebugLevel level, string message)
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x94AFC8", Offset = "0x94AFC8", VA = "0x94AFC8", Slot = "33")]
	public void OnOperationResponse(OperationResponse operationResponse)
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x94DBD8", Offset = "0x94DBD8", VA = "0x94DBD8", Slot = "34")]
	public void OnStatusChanged(StatusCode statusCode)
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x94E98C", Offset = "0x94E98C", VA = "0x94E98C", Slot = "35")]
	public void OnEvent(EventData photonEvent)
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x953878", Offset = "0x953878", VA = "0x953878")]
	public void OnMessage(object messages)
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x94D8D8", Offset = "0x94D8D8", VA = "0x94D8D8")]
	private void SetupEncryption(Dictionary<byte, object> encryptionData)
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x94994C", Offset = "0x94994C", VA = "0x94994C")]
	protected internal void UpdatedActorList(int[] actorsInRoom)
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x95387C", Offset = "0x95387C", VA = "0x95387C")]
	private void SendVacantViewIds()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x947C58", Offset = "0x947C58", VA = "0x947C58")]
	public static void SendMonoMessage(PhotonNetworkingMessage methodString, params object[] parameters)
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x950D64", Offset = "0x950D64", VA = "0x950D64")]
	protected internal void ExecuteRpc(ExitGames.Client.Photon.Hashtable rpcData, int senderID = 0)
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x953DBC", Offset = "0x953DBC", VA = "0x953DBC")]
	private bool CheckTypeMatch(ParameterInfo[] methodParameters, Type[] callParameterTypes)
	{
		return default(bool);
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x953F64", Offset = "0x953F64", VA = "0x953F64")]
	internal ExitGames.Client.Photon.Hashtable SendInstantiate(string prefabName, Vector3 position, Quaternion rotation, byte group, int[] viewIDs, object[] data, bool isGlobalObject)
	{
		return null;
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x952CAC", Offset = "0x952CAC", VA = "0x952CAC")]
	internal GameObject DoInstantiate(ExitGames.Client.Photon.Hashtable evData, PhotonPlayer photonPlayer, GameObject resourceGameObject)
	{
		return null;
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x954410", Offset = "0x954410", VA = "0x954410")]
	private void StoreInstantiationData(int instantiationId, object[] instantiationData)
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x9544D0", Offset = "0x9544D0", VA = "0x9544D0")]
	public object[] FetchInstantiationData(int instantiationId)
	{
		return null;
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x954478", Offset = "0x954478", VA = "0x954478")]
	private void RemoveInstantiationData(int instantiationId)
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x94A5C0", Offset = "0x94A5C0", VA = "0x94A5C0")]
	public void DestroyPlayerObjects(int playerId, bool localOnly)
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x95384C", Offset = "0x95384C", VA = "0x95384C")]
	public void DestroyAll(bool localOnly)
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x948D78", Offset = "0x948D78", VA = "0x948D78")]
	protected internal void RemoveInstantiatedGO(GameObject go, bool localOnly)
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x954948", Offset = "0x954948", VA = "0x954948")]
	private void ServerCleanInstantiateAndDestroy(int instantiateId, int creatorId, bool isRuntimeInstantiated)
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x9546DC", Offset = "0x9546DC", VA = "0x9546DC")]
	private void SendDestroyOfPlayer(int actorNr)
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x95485C", Offset = "0x95485C", VA = "0x95485C")]
	private void SendDestroyOfAll()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x95454C", Offset = "0x95454C", VA = "0x95454C")]
	private void OpRemoveFromServerInstantiationsOfPlayer(int actorNr)
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x954D68", Offset = "0x954D68", VA = "0x954D68")]
	protected internal void RequestOwnership(int viewID, int fromOwner)
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x95505C", Offset = "0x95505C", VA = "0x95505C")]
	protected internal void TransferOwnership(int viewID, int playerID)
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x954BDC", Offset = "0x954BDC", VA = "0x954BDC")]
	public bool LocalCleanPhotonView(PhotonView view)
	{
		return default(bool);
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x953BC4", Offset = "0x953BC4", VA = "0x953BC4")]
	public PhotonView GetPhotonView(int viewID)
	{
		return null;
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x955350", Offset = "0x955350", VA = "0x955350")]
	public void RegisterPhotonView(PhotonView netView)
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x954614", Offset = "0x954614", VA = "0x954614")]
	public void OpCleanRpcBuffer(int actorNumber)
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x955610", Offset = "0x955610", VA = "0x955610")]
	public void OpRemoveCompleteCacheOfPlayer(int actorNumber)
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x9547D0", Offset = "0x9547D0", VA = "0x9547D0")]
	public void OpRemoveCompleteCache()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x9556D8", Offset = "0x9556D8", VA = "0x9556D8")]
	private void RemoveCacheOfLeftPlayers()
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x955818", Offset = "0x955818", VA = "0x955818")]
	public void CleanRpcBufferIfMine(PhotonView view)
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x954C40", Offset = "0x954C40", VA = "0x954C40")]
	public void OpCleanRpcBuffer(PhotonView view)
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x95595C", Offset = "0x95595C", VA = "0x95595C")]
	public void RemoveRPCsInGroup(int group)
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x955AD4", Offset = "0x955AD4", VA = "0x955AD4")]
	public void SetLevelPrefix(short prefix)
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x955ADC", Offset = "0x955ADC", VA = "0x955ADC")]
	internal void RPC(PhotonView view, string methodName, PhotonTargets target, PhotonPlayer player, bool encrypt, params object[] parameters)
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x956528", Offset = "0x956528", VA = "0x956528")]
	public void SetInterestGroups(byte[] disableGroups, byte[] enableGroups)
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x956844", Offset = "0x956844", VA = "0x956844")]
	public void SetSendingEnabled(byte group, bool enabled)
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x9568D8", Offset = "0x9568D8", VA = "0x9568D8")]
	public void SetSendingEnabled(byte[] disableGroups, byte[] enableGroups)
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x9569DC", Offset = "0x9569DC", VA = "0x9569DC")]
	public void NewSceneLoaded()
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x956DBC", Offset = "0x956DBC", VA = "0x956DBC")]
	public void RunViewUpdate()
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x957CE4", Offset = "0x957CE4", VA = "0x957CE4")]
	private object[] OnSerializeWrite(PhotonView view)
	{
		return null;
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x952658", Offset = "0x952658", VA = "0x952658")]
	private void OnSerializeRead(object[] data, PhotonPlayer sender, int networkTime, short correctPrefix)
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x957FFC", Offset = "0x957FFC", VA = "0x957FFC")]
	private object[] DeltaCompressionWrite(object[] previousContent, object[] currentContent)
	{
		return null;
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x9582CC", Offset = "0x9582CC", VA = "0x9582CC")]
	private object[] DeltaCompressionRead(object[] lastOnSerializeDataReceived, object[] incomingData)
	{
		return null;
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x957F58", Offset = "0x957F58", VA = "0x957F58")]
	private bool AlmostEquals(object[] lastData, object[] currentContent)
	{
		return default(bool);
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x95846C", Offset = "0x95846C", VA = "0x95846C")]
	private bool AlmostEquals(object one, object two)
	{
		return default(bool);
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x958814", Offset = "0x958814", VA = "0x958814")]
	protected internal static bool GetMethod(UnityEngine.MonoBehaviour monob, string methodType, out MethodInfo mi)
	{
		return default(bool);
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x947EB4", Offset = "0x947EB4", VA = "0x947EB4")]
	protected internal void LoadLevelIfSynced()
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x958984", Offset = "0x958984", VA = "0x958984")]
	protected internal void SetLevelInPropsIfSynced(object levelId, bool initiatingCall, bool asyncLoading = false)
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x958E74", Offset = "0x958E74", VA = "0x958E74")]
	private void SendLevelReloadEvent()
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x958F2C", Offset = "0x958F2C", VA = "0x958F2C")]
	public void SetApp(string appId, string gameVersion)
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x959008", Offset = "0x959008", VA = "0x959008")]
	public bool WebRpc(string uriPath, object parameters)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000047")]
public interface IPunObservable
{
	[Token(Token = "0x6000178")]
	void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info);
}
[Token(Token = "0x2000048")]
public interface IPunCallbacks
{
	[Token(Token = "0x6000179")]
	void OnConnectedToPhoton();

	[Token(Token = "0x600017A")]
	void OnLeftRoom();

	[Token(Token = "0x600017B")]
	void OnMasterClientSwitched(PhotonPlayer newMasterClient);

	[Token(Token = "0x600017C")]
	void OnPhotonCreateRoomFailed(object[] codeAndMsg);

	[Token(Token = "0x600017D")]
	void OnPhotonJoinRoomFailed(object[] codeAndMsg);

	[Token(Token = "0x600017E")]
	void OnCreatedRoom();

	[Token(Token = "0x600017F")]
	void OnJoinedLobby();

	[Token(Token = "0x6000180")]
	void OnLeftLobby();

	[Token(Token = "0x6000181")]
	void OnFailedToConnectToPhoton(DisconnectCause cause);

	[Token(Token = "0x6000182")]
	void OnConnectionFail(DisconnectCause cause);

	[Token(Token = "0x6000183")]
	void OnDisconnectedFromPhoton();

	[Token(Token = "0x6000184")]
	void OnPhotonInstantiate(PhotonMessageInfo info);

	[Token(Token = "0x6000185")]
	void OnReceivedRoomListUpdate();

	[Token(Token = "0x6000186")]
	void OnJoinedRoom();

	[Token(Token = "0x6000187")]
	void OnPhotonPlayerConnected(PhotonPlayer newPlayer);

	[Token(Token = "0x6000188")]
	void OnPhotonPlayerDisconnected(PhotonPlayer otherPlayer);

	[Token(Token = "0x6000189")]
	void OnPhotonRandomJoinFailed(object[] codeAndMsg);

	[Token(Token = "0x600018A")]
	void OnConnectedToMaster();

	[Token(Token = "0x600018B")]
	void OnPhotonMaxCccuReached();

	[Token(Token = "0x600018C")]
	void OnPhotonCustomRoomPropertiesChanged(ExitGames.Client.Photon.Hashtable propertiesThatChanged);

	[Token(Token = "0x600018D")]
	void OnPhotonPlayerPropertiesChanged(object[] playerAndUpdatedProps);

	[Token(Token = "0x600018E")]
	void OnUpdatedFriendList();

	[Token(Token = "0x600018F")]
	void OnCustomAuthenticationFailed(string debugMessage);

	[Token(Token = "0x6000190")]
	void OnCustomAuthenticationResponse(Dictionary<string, object> data);

	[Token(Token = "0x6000191")]
	void OnWebRpcResponse(OperationResponse response);

	[Token(Token = "0x6000192")]
	void OnOwnershipRequest(object[] viewAndPlayer);

	[Token(Token = "0x6000193")]
	void OnLobbyStatisticsUpdate();

	[Token(Token = "0x6000194")]
	void OnPhotonPlayerActivityChanged(PhotonPlayer otherPlayer);

	[Token(Token = "0x6000195")]
	void OnOwnershipTransfered(object[] viewAndPlayers);
}
[Token(Token = "0x2000049")]
public interface IPunPrefabPool
{
	[Token(Token = "0x6000196")]
	GameObject Instantiate(string prefabId, Vector3 position, Quaternion rotation);

	[Token(Token = "0x6000197")]
	void Destroy(GameObject gameObject);
}
[Token(Token = "0x200004A")]
public struct PhotonMessageInfo
{
	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private readonly int timeInt;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public readonly PhotonPlayer sender;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly PhotonView photonView;

	[Token(Token = "0x17000032")]
	public double timestamp
	{
		[Token(Token = "0x6000199")]
		[Address(RVA = "0x95A2F0", Offset = "0x95A2F0", VA = "0x95A2F0")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x95A2E4", Offset = "0x95A2E4", VA = "0x95A2E4")]
	public PhotonMessageInfo(PhotonPlayer player, int timestamp, PhotonView view)
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x95A308", Offset = "0x95A308", VA = "0x95A308", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x200004B")]
internal class PunEvent
{
	[Token(Token = "0x4000253")]
	public const byte RPC = 200;

	[Token(Token = "0x4000254")]
	public const byte SendSerialize = 201;

	[Token(Token = "0x4000255")]
	public const byte Instantiation = 202;

	[Token(Token = "0x4000256")]
	public const byte CloseConnection = 203;

	[Token(Token = "0x4000257")]
	public const byte Destroy = 204;

	[Token(Token = "0x4000258")]
	public const byte RemoveCachedRPCs = 205;

	[Token(Token = "0x4000259")]
	public const byte SendSerializeReliable = 206;

	[Token(Token = "0x400025A")]
	public const byte DestroyPlayer = 207;

	[Token(Token = "0x400025B")]
	public const byte AssignMaster = 208;

	[Token(Token = "0x400025C")]
	public const byte OwnershipRequest = 209;

	[Token(Token = "0x400025D")]
	public const byte OwnershipTransfer = 210;

	[Token(Token = "0x400025E")]
	public const byte VacantViewIds = 211;

	[Token(Token = "0x400025F")]
	public const byte levelReload = 212;

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x95A3A0", Offset = "0x95A3A0", VA = "0x95A3A0")]
	public PunEvent()
	{
	}
}
[Token(Token = "0x200004C")]
public class PhotonStream
{
	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool write;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Queue<object> writeData;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private object[] readData;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	internal byte currentItem;

	[Token(Token = "0x17000033")]
	public bool isWriting
	{
		[Token(Token = "0x600019F")]
		[Address(RVA = "0x95A4AC", Offset = "0x95A4AC", VA = "0x95A4AC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000034")]
	public bool isReading
	{
		[Token(Token = "0x60001A0")]
		[Address(RVA = "0x95A4B4", Offset = "0x95A4B4", VA = "0x95A4B4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000035")]
	public int Count
	{
		[Token(Token = "0x60001A1")]
		[Address(RVA = "0x95A4C4", Offset = "0x95A4C4", VA = "0x95A4C4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x95A3A8", Offset = "0x95A3A8", VA = "0x95A3A8")]
	public PhotonStream(bool write, object[] incomingData)
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x95A44C", Offset = "0x95A44C", VA = "0x95A44C")]
	public void SetReadStream(object[] incomingData, byte pos = 0)
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x95A45C", Offset = "0x95A45C", VA = "0x95A45C")]
	internal void ResetWriteStream()
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x95A524", Offset = "0x95A524", VA = "0x95A524")]
	public object ReceiveNext()
	{
		return null;
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x95A5D4", Offset = "0x95A5D4", VA = "0x95A5D4")]
	public object PeekNext()
	{
		return null;
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x95A67C", Offset = "0x95A67C", VA = "0x95A67C")]
	public void SendNext(object obj)
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x95A728", Offset = "0x95A728", VA = "0x95A728")]
	public object[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x95A790", Offset = "0x95A790", VA = "0x95A790")]
	public void Serialize(ref bool myBool)
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x95A898", Offset = "0x95A898", VA = "0x95A898")]
	public void Serialize(ref int myInt)
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x95A998", Offset = "0x95A998", VA = "0x95A998")]
	public void Serialize(ref string value)
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x95AA7C", Offset = "0x95AA7C", VA = "0x95AA7C")]
	public void Serialize(ref char value)
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x95AB7C", Offset = "0x95AB7C", VA = "0x95AB7C")]
	public void Serialize(ref short value)
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x95AC7C", Offset = "0x95AC7C", VA = "0x95AC7C")]
	public void Serialize(ref float obj)
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x95AD7C", Offset = "0x95AD7C", VA = "0x95AD7C")]
	public void Serialize(ref PhotonPlayer obj)
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x95AE98", Offset = "0x95AE98", VA = "0x95AE98")]
	public void Serialize(ref Vector3 obj)
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x95AFA8", Offset = "0x95AFA8", VA = "0x95AFA8")]
	public void Serialize(ref Vector2 obj)
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x95B0A8", Offset = "0x95B0A8", VA = "0x95B0A8")]
	public void Serialize(ref Quaternion obj)
	{
	}
}
[Token(Token = "0x200004D")]
public class SceneManagerHelper
{
	[Token(Token = "0x17000036")]
	public static string ActiveSceneName
	{
		[Token(Token = "0x60001B0")]
		[Address(RVA = "0x95B1A8", Offset = "0x95B1A8", VA = "0x95B1A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000037")]
	public static int ActiveSceneBuildIndex
	{
		[Token(Token = "0x60001B1")]
		[Address(RVA = "0x95B210", Offset = "0x95B210", VA = "0x95B210")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x95B278", Offset = "0x95B278", VA = "0x95B278")]
	public SceneManagerHelper()
	{
	}
}
[Token(Token = "0x200004E")]
public class WebRpcResponse
{
	[Token(Token = "0x17000038")]
	public string Name
	{
		[Token(Token = "0x60001B3")]
		[Address(RVA = "0x95B280", Offset = "0x95B280", VA = "0x95B280")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60001B4")]
		[Address(RVA = "0x95B288", Offset = "0x95B288", VA = "0x95B288")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000039")]
	public int ReturnCode
	{
		[Token(Token = "0x60001B5")]
		[Address(RVA = "0x95B290", Offset = "0x95B290", VA = "0x95B290")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60001B6")]
		[Address(RVA = "0x95B298", Offset = "0x95B298", VA = "0x95B298")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700003A")]
	public string DebugMessage
	{
		[Token(Token = "0x60001B7")]
		[Address(RVA = "0x95B2A0", Offset = "0x95B2A0", VA = "0x95B2A0")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60001B8")]
		[Address(RVA = "0x95B2A8", Offset = "0x95B2A8", VA = "0x95B2A8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700003B")]
	public Dictionary<string, object> Parameters
	{
		[Token(Token = "0x60001B9")]
		[Address(RVA = "0x95B2B0", Offset = "0x95B2B0", VA = "0x95B2B0")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60001BA")]
		[Address(RVA = "0x95B2B8", Offset = "0x95B2B8", VA = "0x95B2B8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x95B2C0", Offset = "0x95B2C0", VA = "0x95B2C0")]
	public WebRpcResponse(OperationResponse response)
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x95B470", Offset = "0x95B470", VA = "0x95B470")]
	public string ToStringFull()
	{
		return null;
	}
}
[Token(Token = "0x200004F")]
internal class PhotonHandler : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000051")]
	[CompilerGenerated]
	private sealed class <PingAvailableRegionsCoroutine>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool connectToBest;

		[Token(Token = "0x4000277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PhotonPingManager <pingManager>5__2;

		[Token(Token = "0x1700003D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001D3")]
			[Address(RVA = "0x95D820", Offset = "0x95D820", VA = "0x95D820", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001D5")]
			[Address(RVA = "0x95D868", Offset = "0x95D868", VA = "0x95D868", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001D0")]
		[Address(RVA = "0x95CB20", Offset = "0x95CB20", VA = "0x95CB20")]
		[DebuggerHidden]
		public <PingAvailableRegionsCoroutine>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60001D1")]
		[Address(RVA = "0x95CC6C", Offset = "0x95CC6C", VA = "0x95CC6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001D2")]
		[Address(RVA = "0x95CC70", Offset = "0x95CC70", VA = "0x95CC70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001D4")]
		[Address(RVA = "0x95D828", Offset = "0x95D828", VA = "0x95D828", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PhotonHandler SP;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int updateInterval;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int updateIntervalOnSerialize;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nextSendTickCount;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nextSendTickCountOnSerialize;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool sendThreadShouldRun;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Stopwatch timerToStopConnectionInBackground;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected internal static bool AppQuits;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected internal static Type PingImplementation;

	[Token(Token = "0x4000271")]
	private const string PlayerPrefsKey = "PUNCloudBestRegion";

	[Token(Token = "0x1700003C")]
	internal static CloudRegionCode BestRegionCodeInPreferences
	{
		[Token(Token = "0x60001C8")]
		[Address(RVA = "0x95C788", Offset = "0x95C788", VA = "0x95C788")]
		get
		{
			return default(CloudRegionCode);
		}
		[Token(Token = "0x60001C9")]
		[Address(RVA = "0x95C9A4", Offset = "0x95C9A4", VA = "0x95C9A4")]
		set
		{
		}
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x95B60C", Offset = "0x95B60C", VA = "0x95B60C")]
	protected void Awake()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x95B97C", Offset = "0x95B97C", VA = "0x95B97C")]
	protected void Start()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x95BA74", Offset = "0x95BA74", VA = "0x95BA74")]
	protected void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x95BC84", Offset = "0x95BC84", VA = "0x95BC84")]
	protected void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x95BD8C", Offset = "0x95BD8C", VA = "0x95BD8C")]
	protected void OnDestroy()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x95BDD4", Offset = "0x95BDD4", VA = "0x95BDD4")]
	protected void Update()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x95C284", Offset = "0x95C284", VA = "0x95C284")]
	protected void OnJoinedRoom()
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x95C2E8", Offset = "0x95C2E8", VA = "0x95C2E8")]
	protected void OnCreatedRoom()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x95B888", Offset = "0x95B888", VA = "0x95B888")]
	public static void StartFallbackSendAckThread()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x95BB10", Offset = "0x95BB10", VA = "0x95BB10")]
	public static void StopFallbackSendAckThread()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x95C360", Offset = "0x95C360", VA = "0x95C360")]
	public static bool FallbackSendAckThread()
	{
		return default(bool);
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x95CA50", Offset = "0x95CA50", VA = "0x95CA50")]
	protected internal static void PingAvailableRegionsAndConnectToBest()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x95CAB4", Offset = "0x95CAB4", VA = "0x95CAB4")]
	[IteratorStateMachine(typeof(<PingAvailableRegionsCoroutine>d__25))]
	internal IEnumerator PingAvailableRegionsCoroutine(bool connectToBest)
	{
		return null;
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x95CB48", Offset = "0x95CB48", VA = "0x95CB48")]
	public PhotonHandler()
	{
	}
}
[Token(Token = "0x2000052")]
public class PhotonLagSimulationGui : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rect WindowRect;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int WindowId;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool Visible;

	[Token(Token = "0x1700003F")]
	public PhotonPeer Peer
	{
		[Token(Token = "0x60001D6")]
		[Address(RVA = "0x95D870", Offset = "0x95D870", VA = "0x95D870")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60001D7")]
		[Address(RVA = "0x95D878", Offset = "0x95D878", VA = "0x95D878")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x95D880", Offset = "0x95D880", VA = "0x95D880")]
	public void Start()
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x95D8E0", Offset = "0x95D8E0", VA = "0x95D8E0")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x95DA44", Offset = "0x95DA44", VA = "0x95DA44")]
	private void NetSimHasNoPeerWindow(int windowId)
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x95DADC", Offset = "0x95DADC", VA = "0x95DADC")]
	private void NetSimWindow(int windowId)
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x95E1BC", Offset = "0x95E1BC", VA = "0x95E1BC")]
	public PhotonLagSimulationGui()
	{
	}
}
[Token(Token = "0x2000053")]
public static class PhotonNetwork
{
	[Token(Token = "0x2000054")]
	public delegate void EventCallback(byte eventCode, object content, int senderId);

	[Token(Token = "0x400027C")]
	public const string versionPUN = "1.101";

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	internal static readonly PhotonHandler photonMono;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal static NetworkingPeer networkingPeer;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly int MAX_VIEW_IDS;

	[Token(Token = "0x4000281")]
	internal const string serverSettingsAssetFile = "PhotonServerSettings";

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static ServerSettings PhotonServerSettings;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static bool InstantiateInRoomOnly;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static PhotonLogLevel logLevel;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static float precisionForVectorSynchronization;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public static float precisionForQuaternionSynchronization;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static float precisionForFloatSynchronization;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public static bool UseRpcMonoBehaviourCache;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public static bool UsePrefabCache;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static Dictionary<string, GameObject> PrefabCache;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static HashSet<GameObject> SendMonoMessageTargets;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static Type SendMonoMessageTargetType;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static bool StartRpcsAsCoroutine;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private static bool isOfflineMode;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static Room offlineModeRoom;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Obsolete("Used for compatibility with Unity networking only.")]
	public static int maxConnections;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private static bool _mAutomaticallySyncScene;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	private static bool m_autoCleanUpPlayerObjects;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static int sendInterval;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private static int sendIntervalOnSerialize;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static bool m_isMessageQueueRunning;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static Stopwatch startupStopwatch;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static float BackgroundTimeout;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	internal static int lastUsedViewSubId;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	internal static int lastUsedViewSubIdStatic;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	internal static List<int> manuallyAllocatedViewIds;

	[Token(Token = "0x17000040")]
	public static string gameVersion
	{
		[Token(Token = "0x60001DD")]
		[Address(RVA = "0x95E220", Offset = "0x95E220", VA = "0x95E220")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60001DE")]
		[Address(RVA = "0x95E278", Offset = "0x95E278", VA = "0x95E278")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000041")]
	public static string ServerAddress
	{
		[Token(Token = "0x60001DF")]
		[Address(RVA = "0x95E2D4", Offset = "0x95E2D4", VA = "0x95E2D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000042")]
	public static CloudRegionCode CloudRegion
	{
		[Token(Token = "0x60001E0")]
		[Address(RVA = "0x95E37C", Offset = "0x95E37C", VA = "0x95E37C")]
		get
		{
			return default(CloudRegionCode);
		}
	}

	[Token(Token = "0x17000043")]
	public static string CurrentCluster
	{
		[Token(Token = "0x60001E1")]
		[Address(RVA = "0x95E438", Offset = "0x95E438", VA = "0x95E438")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000044")]
	public static bool connected
	{
		[Token(Token = "0x60001E2")]
		[Address(RVA = "0x95C608", Offset = "0x95C608", VA = "0x95C608")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000045")]
	public static bool connecting
	{
		[Token(Token = "0x60001E3")]
		[Address(RVA = "0x95E4C0", Offset = "0x95E4C0", VA = "0x95E4C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000046")]
	public static bool connectedAndReady
	{
		[Token(Token = "0x60001E4")]
		[Address(RVA = "0x95E580", Offset = "0x95E580", VA = "0x95E580")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000047")]
	public static ConnectionState connectionState
	{
		[Token(Token = "0x60001E5")]
		[Address(RVA = "0x95E680", Offset = "0x95E680", VA = "0x95E680")]
		get
		{
			return default(ConnectionState);
		}
	}

	[Token(Token = "0x17000048")]
	public static ClientState connectionStateDetailed
	{
		[Token(Token = "0x60001E6")]
		[Address(RVA = "0x95C184", Offset = "0x95C184", VA = "0x95C184")]
		get
		{
			return default(ClientState);
		}
	}

	[Token(Token = "0x17000049")]
	public static ServerConnection Server
	{
		[Token(Token = "0x60001E7")]
		[Address(RVA = "0x95D4B4", Offset = "0x95D4B4", VA = "0x95D4B4")]
		get
		{
			return default(ServerConnection);
		}
	}

	[Token(Token = "0x1700004A")]
	public static AuthenticationValues AuthValues
	{
		[Token(Token = "0x60001E8")]
		[Address(RVA = "0x95E780", Offset = "0x95E780", VA = "0x95E780")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001E9")]
		[Address(RVA = "0x95E808", Offset = "0x95E808", VA = "0x95E808")]
		set
		{
		}
	}

	[Token(Token = "0x1700004B")]
	public static Room room
	{
		[Token(Token = "0x60001EA")]
		[Address(RVA = "0x95E88C", Offset = "0x95E88C", VA = "0x95E88C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700004C")]
	public static PhotonPlayer player
	{
		[Token(Token = "0x60001EB")]
		[Address(RVA = "0x95E930", Offset = "0x95E930", VA = "0x95E930")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700004D")]
	public static PhotonPlayer masterClient
	{
		[Token(Token = "0x60001EC")]
		[Address(RVA = "0x95E9B8", Offset = "0x95E9B8", VA = "0x95E9B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700004E")]
	public static string playerName
	{
		[Token(Token = "0x60001ED")]
		[Address(RVA = "0x95EAC8", Offset = "0x95EAC8", VA = "0x95EAC8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001EE")]
		[Address(RVA = "0x95EB2C", Offset = "0x95EB2C", VA = "0x95EB2C")]
		set
		{
		}
	}

	[Token(Token = "0x1700004F")]
	public static PhotonPlayer[] playerList
	{
		[Token(Token = "0x60001EF")]
		[Address(RVA = "0x95EB98", Offset = "0x95EB98", VA = "0x95EB98")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000050")]
	public static PhotonPlayer[] otherPlayers
	{
		[Token(Token = "0x60001F0")]
		[Address(RVA = "0x95EC40", Offset = "0x95EC40", VA = "0x95EC40")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000051")]
	public static List<FriendInfo> Friends
	{
		[Token(Token = "0x60001F1")]
		[Address(RVA = "0x95ECE8", Offset = "0x95ECE8", VA = "0x95ECE8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60001F2")]
		[Address(RVA = "0x95ED40", Offset = "0x95ED40", VA = "0x95ED40")]
		[CompilerGenerated]
		internal set
		{
		}
	}

	[Token(Token = "0x17000052")]
	public static int FriendsListAge
	{
		[Token(Token = "0x60001F3")]
		[Address(RVA = "0x95ED9C", Offset = "0x95ED9C", VA = "0x95ED9C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000053")]
	public static IPunPrefabPool PrefabPool
	{
		[Token(Token = "0x60001F4")]
		[Address(RVA = "0x95EE30", Offset = "0x95EE30", VA = "0x95EE30")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001F5")]
		[Address(RVA = "0x95EE94", Offset = "0x95EE94", VA = "0x95EE94")]
		set
		{
		}
	}

	[Token(Token = "0x17000054")]
	public static bool offlineMode
	{
		[Token(Token = "0x60001F6")]
		[Address(RVA = "0x95EEFC", Offset = "0x95EEFC", VA = "0x95EEFC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001F7")]
		[Address(RVA = "0x95EF54", Offset = "0x95EF54", VA = "0x95EF54")]
		set
		{
		}
	}

	[Token(Token = "0x17000055")]
	public static bool automaticallySyncScene
	{
		[Token(Token = "0x60001F8")]
		[Address(RVA = "0x95F194", Offset = "0x95F194", VA = "0x95F194")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001F9")]
		[Address(RVA = "0x95F1EC", Offset = "0x95F1EC", VA = "0x95F1EC")]
		set
		{
		}
	}

	[Token(Token = "0x17000056")]
	public static bool autoCleanUpPlayerObjects
	{
		[Token(Token = "0x60001FA")]
		[Address(RVA = "0x95F2A4", Offset = "0x95F2A4", VA = "0x95F2A4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001FB")]
		[Address(RVA = "0x95F2FC", Offset = "0x95F2FC", VA = "0x95F2FC")]
		set
		{
		}
	}

	[Token(Token = "0x17000057")]
	public static bool autoJoinLobby
	{
		[Token(Token = "0x60001FC")]
		[Address(RVA = "0x95F3C0", Offset = "0x95F3C0", VA = "0x95F3C0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001FD")]
		[Address(RVA = "0x95F424", Offset = "0x95F424", VA = "0x95F424")]
		set
		{
		}
	}

	[Token(Token = "0x17000058")]
	public static bool EnableLobbyStatistics
	{
		[Token(Token = "0x60001FE")]
		[Address(RVA = "0x95F490", Offset = "0x95F490", VA = "0x95F490")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001FF")]
		[Address(RVA = "0x95F4F4", Offset = "0x95F4F4", VA = "0x95F4F4")]
		set
		{
		}
	}

	[Token(Token = "0x17000059")]
	public static List<TypedLobbyInfo> LobbyStatistics
	{
		[Token(Token = "0x6000200")]
		[Address(RVA = "0x95F560", Offset = "0x95F560", VA = "0x95F560")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000201")]
		[Address(RVA = "0x95F5C4", Offset = "0x95F5C4", VA = "0x95F5C4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700005A")]
	public static bool insideLobby
	{
		[Token(Token = "0x6000202")]
		[Address(RVA = "0x95F62C", Offset = "0x95F62C", VA = "0x95F62C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005B")]
	public static TypedLobby lobby
	{
		[Token(Token = "0x6000203")]
		[Address(RVA = "0x95F690", Offset = "0x95F690", VA = "0x95F690")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000204")]
		[Address(RVA = "0x95F6F4", Offset = "0x95F6F4", VA = "0x95F6F4")]
		set
		{
		}
	}

	[Token(Token = "0x1700005C")]
	public static int sendRate
	{
		[Token(Token = "0x6000205")]
		[Address(RVA = "0x95B7C8", Offset = "0x95B7C8", VA = "0x95B7C8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000206")]
		[Address(RVA = "0x95F75C", Offset = "0x95F75C", VA = "0x95F75C")]
		set
		{
		}
	}

	[Token(Token = "0x1700005D")]
	public static int sendRateOnSerialize
	{
		[Token(Token = "0x6000207")]
		[Address(RVA = "0x95B828", Offset = "0x95B828", VA = "0x95B828")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000208")]
		[Address(RVA = "0x95F868", Offset = "0x95F868", VA = "0x95F868")]
		set
		{
		}
	}

	[Token(Token = "0x1700005E")]
	public static bool isMessageQueueRunning
	{
		[Token(Token = "0x6000209")]
		[Address(RVA = "0x95F9AC", Offset = "0x95F9AC", VA = "0x95F9AC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600020A")]
		[Address(RVA = "0x95FA04", Offset = "0x95FA04", VA = "0x95FA04")]
		set
		{
		}
	}

	[Token(Token = "0x1700005F")]
	public static double time
	{
		[Token(Token = "0x600020B")]
		[Address(RVA = "0x95FA84", Offset = "0x95FA84", VA = "0x95FA84")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x17000060")]
	public static int ServerTimestamp
	{
		[Token(Token = "0x600020C")]
		[Address(RVA = "0x95FAE4", Offset = "0x95FAE4", VA = "0x95FAE4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000061")]
	public static bool isMasterClient
	{
		[Token(Token = "0x600020D")]
		[Address(RVA = "0x95FBC4", Offset = "0x95FBC4", VA = "0x95FBC4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000062")]
	public static bool inRoom
	{
		[Token(Token = "0x600020E")]
		[Address(RVA = "0x95FC98", Offset = "0x95FC98", VA = "0x95FC98")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000063")]
	public static bool isNonMasterClientInRoom
	{
		[Token(Token = "0x600020F")]
		[Address(RVA = "0x95FCF0", Offset = "0x95FCF0", VA = "0x95FCF0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000064")]
	public static int countOfPlayersOnMaster
	{
		[Token(Token = "0x6000210")]
		[Address(RVA = "0x95FD68", Offset = "0x95FD68", VA = "0x95FD68")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000065")]
	public static int countOfPlayersInRooms
	{
		[Token(Token = "0x6000211")]
		[Address(RVA = "0x95FDCC", Offset = "0x95FDCC", VA = "0x95FDCC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000066")]
	public static int countOfPlayers
	{
		[Token(Token = "0x6000212")]
		[Address(RVA = "0x95FE30", Offset = "0x95FE30", VA = "0x95FE30")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000067")]
	public static int countOfRooms
	{
		[Token(Token = "0x6000213")]
		[Address(RVA = "0x95FE9C", Offset = "0x95FE9C", VA = "0x95FE9C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000068")]
	public static bool NetworkStatisticsEnabled
	{
		[Token(Token = "0x6000214")]
		[Address(RVA = "0x95FF00", Offset = "0x95FF00", VA = "0x95FF00")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000215")]
		[Address(RVA = "0x95FF64", Offset = "0x95FF64", VA = "0x95FF64")]
		set
		{
		}
	}

	[Token(Token = "0x17000069")]
	public static int ResentReliableCommands
	{
		[Token(Token = "0x6000216")]
		[Address(RVA = "0x95FFD0", Offset = "0x95FFD0", VA = "0x95FFD0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700006A")]
	public static bool CrcCheckEnabled
	{
		[Token(Token = "0x6000217")]
		[Address(RVA = "0x960034", Offset = "0x960034", VA = "0x960034")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000218")]
		[Address(RVA = "0x960098", Offset = "0x960098", VA = "0x960098")]
		set
		{
		}
	}

	[Token(Token = "0x1700006B")]
	public static int PacketLossByCrcCheck
	{
		[Token(Token = "0x6000219")]
		[Address(RVA = "0x9601E4", Offset = "0x9601E4", VA = "0x9601E4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700006C")]
	public static int MaxResendsBeforeDisconnect
	{
		[Token(Token = "0x600021A")]
		[Address(RVA = "0x960248", Offset = "0x960248", VA = "0x960248")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600021B")]
		[Address(RVA = "0x9602AC", Offset = "0x9602AC", VA = "0x9602AC")]
		set
		{
		}
	}

	[Token(Token = "0x1700006D")]
	public static int QuickResends
	{
		[Token(Token = "0x600021C")]
		[Address(RVA = "0x96032C", Offset = "0x96032C", VA = "0x96032C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600021D")]
		[Address(RVA = "0x960398", Offset = "0x960398", VA = "0x960398")]
		set
		{
		}
	}

	[Token(Token = "0x1700006E")]
	public static bool UseAlternativeUdpPorts
	{
		[Token(Token = "0x600021E")]
		[Address(RVA = "0x960414", Offset = "0x960414", VA = "0x960414")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600021F")]
		[Address(RVA = "0x96046C", Offset = "0x96046C", VA = "0x96046C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public static event EventCallback OnEventCall
	{
		[Token(Token = "0x6000220")]
		[Address(RVA = "0x9604C8", Offset = "0x9604C8", VA = "0x9604C8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000221")]
		[Address(RVA = "0x9605A4", Offset = "0x9605A4", VA = "0x9605A4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x960680", Offset = "0x960680", VA = "0x960680")]
	static PhotonNetwork()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x960B64", Offset = "0x960B64", VA = "0x960B64")]
	public static void SwitchToProtocol(ConnectionProtocol cp)
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x960BCC", Offset = "0x960BCC", VA = "0x960BCC")]
	public static bool ConnectUsingSettings(string gameVersion)
	{
		return default(bool);
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x961354", Offset = "0x961354", VA = "0x961354")]
	public static bool ConnectToMaster(string masterServerAddress, int port, string appID, string gameVersion)
	{
		return default(bool);
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x961694", Offset = "0x961694", VA = "0x961694")]
	public static bool Reconnect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x961988", Offset = "0x961988", VA = "0x961988")]
	public static bool ReconnectAndRejoin()
	{
		return default(bool);
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x9610F4", Offset = "0x9610F4", VA = "0x9610F4")]
	public static bool ConnectToBestCloudServer(string gameVersion)
	{
		return default(bool);
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x961CBC", Offset = "0x961CBC", VA = "0x961CBC")]
	public static bool ConnectToRegion(CloudRegionCode region, string gameVersion, [Optional] string cluster)
	{
		return default(bool);
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x961FC4", Offset = "0x961FC4", VA = "0x961FC4")]
	public static void OverrideBestCloudServer(CloudRegionCode region)
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x961FC8", Offset = "0x961FC8", VA = "0x961FC8")]
	public static void RefreshCloudServerRating()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x962018", Offset = "0x962018", VA = "0x962018")]
	public static void NetworkStatisticsReset()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x96207C", Offset = "0x96207C", VA = "0x96207C")]
	public static string NetworkStatisticsToString()
	{
		return null;
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x962170", Offset = "0x962170", VA = "0x962170")]
	[Obsolete("Used for compatibility with Unity networking only. Encryption is automatically initialized while connecting.")]
	public static void InitializeSecurity()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x962174", Offset = "0x962174", VA = "0x962174")]
	private static bool VerifyCanUseNetwork()
	{
		return default(bool);
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x95BB58", Offset = "0x95BB58", VA = "0x95BB58")]
	public static void Disconnect()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x962218", Offset = "0x962218", VA = "0x962218")]
	public static bool FindFriends(string[] friendsToFind, [Optional] FindFriendsOptions options)
	{
		return default(bool);
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x9622E8", Offset = "0x9622E8", VA = "0x9622E8")]
	public static bool CreateRoom(string roomName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x9625A8", Offset = "0x9625A8", VA = "0x9625A8")]
	public static bool CreateRoom(string roomName, RoomOptions roomOptions, TypedLobby typedLobby)
	{
		return default(bool);
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x962348", Offset = "0x962348", VA = "0x962348")]
	public static bool CreateRoom(string roomName, RoomOptions roomOptions, TypedLobby typedLobby, string[] expectedUsers)
	{
		return default(bool);
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x9627F8", Offset = "0x9627F8", VA = "0x9627F8")]
	public static bool JoinRoom(string roomName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x962850", Offset = "0x962850", VA = "0x962850")]
	public static bool JoinRoom(string roomName, string[] expectedUsers)
	{
		return default(bool);
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x962A80", Offset = "0x962A80", VA = "0x962A80")]
	public static bool JoinOrCreateRoom(string roomName, RoomOptions roomOptions, TypedLobby typedLobby)
	{
		return default(bool);
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x962AF0", Offset = "0x962AF0", VA = "0x962AF0")]
	public static bool JoinOrCreateRoom(string roomName, RoomOptions roomOptions, TypedLobby typedLobby, string[] expectedUsers)
	{
		return default(bool);
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x962DA4", Offset = "0x962DA4", VA = "0x962DA4")]
	public static bool JoinRandomRoom()
	{
		return default(bool);
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x9630A0", Offset = "0x9630A0", VA = "0x9630A0")]
	public static bool JoinRandomRoom(ExitGames.Client.Photon.Hashtable expectedCustomRoomProperties, byte expectedMaxPlayers)
	{
		return default(bool);
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x962E08", Offset = "0x962E08", VA = "0x962E08")]
	public static bool JoinRandomRoom(ExitGames.Client.Photon.Hashtable expectedCustomRoomProperties, byte expectedMaxPlayers, MatchmakingMode matchingType, TypedLobby typedLobby, string sqlLobbyFilter, [Optional] string[] expectedUsers)
	{
		return default(bool);
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x963114", Offset = "0x963114", VA = "0x963114")]
	public static bool ReJoinRoom(string roomName)
	{
		return default(bool);
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x962618", Offset = "0x962618", VA = "0x962618")]
	private static void EnterOfflineRoom(string roomName, RoomOptions roomOptions, bool createdRoom)
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x9633B8", Offset = "0x9633B8", VA = "0x9633B8")]
	public static bool JoinLobby()
	{
		return default(bool);
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x963408", Offset = "0x963408", VA = "0x963408")]
	public static bool JoinLobby(TypedLobby typedLobby)
	{
		return default(bool);
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x963518", Offset = "0x963518", VA = "0x963518")]
	public static bool LeaveLobby()
	{
		return default(bool);
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x9635C4", Offset = "0x9635C4", VA = "0x9635C4")]
	public static bool LeaveRoom(bool becomeInactive = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x963854", Offset = "0x963854", VA = "0x963854")]
	public static bool GetCustomRoomList(TypedLobby typedLobby, string sqlLobbyFilter)
	{
		return default(bool);
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x9638D8", Offset = "0x9638D8", VA = "0x9638D8")]
	public static RoomInfo[] GetRoomList()
	{
		return null;
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x9639CC", Offset = "0x9639CC", VA = "0x9639CC")]
	public static void SetPlayerCustomProperties(ExitGames.Client.Photon.Hashtable customProperties)
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x964168", Offset = "0x964168", VA = "0x964168")]
	public static void RemovePlayerCustomProperties(string[] customPropertiesToDelete)
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x9642F8", Offset = "0x9642F8", VA = "0x9642F8")]
	public static bool RaiseEvent(byte eventCode, object eventContent, bool sendReliable, RaiseEventOptions options)
	{
		return default(bool);
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x964414", Offset = "0x964414", VA = "0x964414")]
	public static int AllocateViewID()
	{
		return default(int);
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x9647F0", Offset = "0x9647F0", VA = "0x9647F0")]
	public static int AllocateSceneViewID()
	{
		return default(int);
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x9644F8", Offset = "0x9644F8", VA = "0x9644F8")]
	private static int AllocateViewID(int ownerId)
	{
		return default(int);
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x964930", Offset = "0x964930", VA = "0x964930")]
	private static int[] AllocateSceneViewIDs(int countOfNewViews)
	{
		return null;
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x9649F4", Offset = "0x9649F4", VA = "0x9649F4")]
	public static void UnAllocateViewID(int viewID)
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x964B94", Offset = "0x964B94", VA = "0x964B94")]
	public static GameObject Instantiate(string prefabName, Vector3 position, Quaternion rotation, byte group)
	{
		return null;
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x964C54", Offset = "0x964C54", VA = "0x964C54")]
	public static GameObject Instantiate(string prefabName, Vector3 position, Quaternion rotation, byte group, object[] data)
	{
		return null;
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x96517C", Offset = "0x96517C", VA = "0x96517C")]
	public static GameObject InstantiateSceneObject(string prefabName, Vector3 position, Quaternion rotation, byte group, object[] data)
	{
		return null;
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x9656BC", Offset = "0x9656BC", VA = "0x9656BC")]
	public static int GetPing()
	{
		return default(int);
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x965720", Offset = "0x965720", VA = "0x965720")]
	public static void FetchServerTimestamp()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x9657B4", Offset = "0x9657B4", VA = "0x9657B4")]
	public static void SendOutgoingCommands()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x96583C", Offset = "0x96583C", VA = "0x96583C")]
	public static bool CloseConnection(PhotonPlayer kickPlayer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x965A5C", Offset = "0x965A5C", VA = "0x965A5C")]
	public static bool SetMasterClient(PhotonPlayer masterClientPlayer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x965D88", Offset = "0x965D88", VA = "0x965D88")]
	public static void Destroy(PhotonView targetView)
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x965E9C", Offset = "0x965E9C", VA = "0x965E9C")]
	public static void Destroy(GameObject targetGo)
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x965F18", Offset = "0x965F18", VA = "0x965F18")]
	public static void DestroyPlayerObjects(PhotonPlayer targetPlayer)
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x965FD4", Offset = "0x965FD4", VA = "0x965FD4")]
	public static void DestroyPlayerObjects(int targetPlayerId)
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x96613C", Offset = "0x96613C", VA = "0x96613C")]
	public static void DestroyAll()
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x966208", Offset = "0x966208", VA = "0x966208")]
	public static void RemoveRPCs(PhotonPlayer targetPlayer)
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x966308", Offset = "0x966308", VA = "0x966308")]
	public static void RemoveRPCs(PhotonView targetPhotonView)
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x966398", Offset = "0x966398", VA = "0x966398")]
	public static void RemoveRPCsInGroup(int targetGroup)
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x966428", Offset = "0x966428", VA = "0x966428")]
	internal static void RPC(PhotonView view, string methodName, PhotonTargets target, bool encrypt, params object[] parameters)
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x966680", Offset = "0x966680", VA = "0x966680")]
	internal static void RPC(PhotonView view, string methodName, PhotonPlayer targetPlayer, bool encrpyt, params object[] parameters)
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x9668BC", Offset = "0x9668BC", VA = "0x9668BC")]
	public static void CacheSendMonoMessageTargets(Type type)
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x966978", Offset = "0x966978", VA = "0x966978")]
	public static HashSet<GameObject> FindGameObjectsWithComponent(Type type)
	{
		return null;
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x966B04", Offset = "0x966B04", VA = "0x966B04")]
	[Obsolete("Use SetInterestGroups(byte group, bool enabled) instead.")]
	public static void SetReceivingEnabled(int group, bool enabled)
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x966B90", Offset = "0x966B90", VA = "0x966B90")]
	public static void SetInterestGroups(byte group, bool enabled)
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x966C7C", Offset = "0x966C7C", VA = "0x966C7C")]
	[Obsolete("Use SetInterestGroups(byte[] disableGroups, byte[] enableGroups) instead. Mind the parameter order!")]
	public static void SetReceivingEnabled(int[] enableGroups, int[] disableGroups)
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x966D94", Offset = "0x966D94", VA = "0x966D94")]
	public static void SetInterestGroups(byte[] disableGroups, byte[] enableGroups)
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x966E38", Offset = "0x966E38", VA = "0x966E38")]
	[Obsolete("Use SetSendingEnabled(byte group, bool enabled). Interest Groups have a byte-typed ID. Mind the parameter order.")]
	public static void SetSendingEnabled(int group, bool enabled)
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x966E9C", Offset = "0x966E9C", VA = "0x966E9C")]
	public static void SetSendingEnabled(byte group, bool enabled)
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x966F40", Offset = "0x966F40", VA = "0x966F40")]
	[Obsolete("Use SetSendingEnabled(byte group, bool enabled). Interest Groups have a byte-typed ID. Mind the parameter order.")]
	public static void SetSendingEnabled(int[] enableGroups, int[] disableGroups)
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x967018", Offset = "0x967018", VA = "0x967018")]
	public static void SetSendingEnabled(byte[] disableGroups, byte[] enableGroups)
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x9670BC", Offset = "0x9670BC", VA = "0x9670BC")]
	public static void SetLevelPrefix(short prefix)
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x96713C", Offset = "0x96713C", VA = "0x96713C")]
	public static void LoadLevel(int levelNumber)
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x9672A0", Offset = "0x9672A0", VA = "0x9672A0")]
	public static AsyncOperation LoadLevelAsync(int levelNumber)
	{
		return null;
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x967408", Offset = "0x967408", VA = "0x967408")]
	public static void LoadLevel(string levelName)
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x967538", Offset = "0x967538", VA = "0x967538")]
	public static AsyncOperation LoadLevelAsync(string levelName)
	{
		return null;
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x967674", Offset = "0x967674", VA = "0x967674")]
	public static bool WebRpc(string name, object parameters)
	{
		return default(bool);
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x9676F0", Offset = "0x9676F0", VA = "0x9676F0")]
	public static bool CallEvent(byte eventCode, object content, int senderId)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000056")]
public class PhotonPlayer : IComparable<PhotonPlayer>, IComparable<int>, IEquatable<PhotonPlayer>, IEquatable<int>
{
	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int actorID;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string nameField;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public readonly bool IsLocal;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public object TagObject;

	[Token(Token = "0x1700006F")]
	public int ID
	{
		[Token(Token = "0x6000276")]
		[Address(RVA = "0x967A1C", Offset = "0x967A1C", VA = "0x967A1C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000070")]
	public string NickName
	{
		[Token(Token = "0x6000277")]
		[Address(RVA = "0x967A24", Offset = "0x967A24", VA = "0x967A24")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000278")]
		[Address(RVA = "0x967A2C", Offset = "0x967A2C", VA = "0x967A2C")]
		set
		{
		}
	}

	[Token(Token = "0x17000071")]
	public string UserId
	{
		[Token(Token = "0x6000279")]
		[Address(RVA = "0x967B14", Offset = "0x967B14", VA = "0x967B14")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600027A")]
		[Address(RVA = "0x967B1C", Offset = "0x967B1C", VA = "0x967B1C")]
		[CompilerGenerated]
		internal set
		{
		}
	}

	[Token(Token = "0x17000072")]
	public bool IsMasterClient
	{
		[Token(Token = "0x600027B")]
		[Address(RVA = "0x9659E4", Offset = "0x9659E4", VA = "0x9659E4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000073")]
	public bool IsInactive
	{
		[Token(Token = "0x600027C")]
		[Address(RVA = "0x967B24", Offset = "0x967B24", VA = "0x967B24")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600027D")]
		[Address(RVA = "0x967B2C", Offset = "0x967B2C", VA = "0x967B2C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000074")]
	public ExitGames.Client.Photon.Hashtable CustomProperties
	{
		[Token(Token = "0x600027E")]
		[Address(RVA = "0x967B38", Offset = "0x967B38", VA = "0x967B38")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600027F")]
		[Address(RVA = "0x967B40", Offset = "0x967B40", VA = "0x967B40")]
		[CompilerGenerated]
		internal set
		{
		}
	}

	[Token(Token = "0x17000075")]
	public ExitGames.Client.Photon.Hashtable AllProperties
	{
		[Token(Token = "0x6000280")]
		[Address(RVA = "0x967B48", Offset = "0x967B48", VA = "0x967B48")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000076")]
	[Obsolete("Please use NickName (updated case for naming).")]
	public string name
	{
		[Token(Token = "0x6000293")]
		[Address(RVA = "0x9686AC", Offset = "0x9686AC", VA = "0x9686AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000294")]
		[Address(RVA = "0x9686B4", Offset = "0x9686B4", VA = "0x9686B4")]
		set
		{
		}
	}

	[Token(Token = "0x17000077")]
	[Obsolete("Please use UserId (updated case for naming).")]
	public string userId
	{
		[Token(Token = "0x6000295")]
		[Address(RVA = "0x9686B8", Offset = "0x9686B8", VA = "0x9686B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000296")]
		[Address(RVA = "0x9686C0", Offset = "0x9686C0", VA = "0x9686C0")]
		internal set
		{
		}
	}

	[Token(Token = "0x17000078")]
	[Obsolete("Please use IsLocal (updated case for naming).")]
	public bool isLocal
	{
		[Token(Token = "0x6000297")]
		[Address(RVA = "0x9686C8", Offset = "0x9686C8", VA = "0x9686C8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000079")]
	[Obsolete("Please use IsMasterClient (updated case for naming).")]
	public bool isMasterClient
	{
		[Token(Token = "0x6000298")]
		[Address(RVA = "0x9686D0", Offset = "0x9686D0", VA = "0x9686D0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700007A")]
	[Obsolete("Please use IsInactive (updated case for naming).")]
	public bool isInactive
	{
		[Token(Token = "0x6000299")]
		[Address(RVA = "0x9686D4", Offset = "0x9686D4", VA = "0x9686D4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600029A")]
		[Address(RVA = "0x9686DC", Offset = "0x9686DC", VA = "0x9686DC")]
		set
		{
		}
	}

	[Token(Token = "0x1700007B")]
	[Obsolete("Please use CustomProperties (updated case for naming).")]
	public ExitGames.Client.Photon.Hashtable customProperties
	{
		[Token(Token = "0x600029B")]
		[Address(RVA = "0x9686E8", Offset = "0x9686E8", VA = "0x9686E8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600029C")]
		[Address(RVA = "0x9686F0", Offset = "0x9686F0", VA = "0x9686F0")]
		internal set
		{
		}
	}

	[Token(Token = "0x1700007C")]
	[Obsolete("Please use AllProperties (updated case for naming).")]
	public ExitGames.Client.Photon.Hashtable allProperties
	{
		[Token(Token = "0x600029D")]
		[Address(RVA = "0x9686F8", Offset = "0x9686F8", VA = "0x9686F8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x967C24", Offset = "0x967C24", VA = "0x967C24")]
	public PhotonPlayer(bool isLocal, int actorID, string name)
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x967CE0", Offset = "0x967CE0", VA = "0x967CE0")]
	protected internal PhotonPlayer(bool isLocal, int actorID, ExitGames.Client.Photon.Hashtable properties)
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x967DA0", Offset = "0x967DA0", VA = "0x967DA0", Slot = "0")]
	public override bool Equals(object p)
	{
		return default(bool);
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x967E54", Offset = "0x967E54", VA = "0x967E54", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x967E5C", Offset = "0x967E5C", VA = "0x967E5C")]
	internal void InternalChangeLocalID(int newID)
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x963EFC", Offset = "0x963EFC", VA = "0x963EFC")]
	internal void InternalCacheProperties(ExitGames.Client.Photon.Hashtable properties)
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x963C64", Offset = "0x963C64", VA = "0x963C64")]
	public void SetCustomProperties(ExitGames.Client.Photon.Hashtable propertiesToSet, [Optional] ExitGames.Client.Photon.Hashtable expectedValues, bool webForward = false)
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x967EE4", Offset = "0x967EE4", VA = "0x967EE4")]
	public static PhotonPlayer Find(int ID)
	{
		return null;
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x967F80", Offset = "0x967F80", VA = "0x967F80")]
	public PhotonPlayer Get(int id)
	{
		return null;
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x967F88", Offset = "0x967F88", VA = "0x967F88")]
	public PhotonPlayer GetNext()
	{
		return null;
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x96820C", Offset = "0x96820C", VA = "0x96820C")]
	public PhotonPlayer GetNextFor(PhotonPlayer currentPlayer)
	{
		return null;
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x967F90", Offset = "0x967F90", VA = "0x967F90")]
	public PhotonPlayer GetNextFor(int currentPlayerId)
	{
		return null;
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x968220", Offset = "0x968220", VA = "0x968220", Slot = "4")]
	public int CompareTo(PhotonPlayer other)
	{
		return default(int);
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x968278", Offset = "0x968278", VA = "0x968278", Slot = "5")]
	public int CompareTo(int other)
	{
		return default(int);
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x9682B4", Offset = "0x9682B4", VA = "0x9682B4", Slot = "6")]
	public bool Equals(PhotonPlayer other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x968310", Offset = "0x968310", VA = "0x968310", Slot = "7")]
	public bool Equals(int other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x968350", Offset = "0x968350", VA = "0x968350", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x9684D8", Offset = "0x9684D8", VA = "0x9684D8")]
	public string ToStringFull()
	{
		return null;
	}
}
[Token(Token = "0x2000057")]
public class PhotonStatsGui : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool statsWindowOn;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool statsOn;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool healthStatsVisible;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool trafficStatsOn;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool buttonsOn;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rect statsRect;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int WindowId;

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x9686FC", Offset = "0x9686FC", VA = "0x9686FC")]
	public void Start()
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x96875C", Offset = "0x96875C", VA = "0x96875C")]
	public void Update()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x9687A0", Offset = "0x9687A0", VA = "0x9687A0")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x968950", Offset = "0x968950", VA = "0x968950")]
	public void TrafficStatsWindow(int windowID)
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x9697FC", Offset = "0x9697FC", VA = "0x9697FC")]
	public PhotonStatsGui()
	{
	}
}
[Token(Token = "0x2000058")]
public class PhotonStreamQueue
{
	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int m_SampleRate;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int m_SampleCount;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int m_ObjectsPerSample;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float m_LastSampleTime;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_LastFrameCount;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int m_NextObjectIndex;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<object> m_Objects;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool m_IsWriting;

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x969864", Offset = "0x969864", VA = "0x969864")]
	public PhotonStreamQueue(int sampleRate)
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x969904", Offset = "0x969904", VA = "0x969904")]
	private void BeginWritePackage()
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x969C88", Offset = "0x969C88", VA = "0x969C88")]
	public void Reset()
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x969D08", Offset = "0x969D08", VA = "0x969D08")]
	public void SendNext(object obj)
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x969DE0", Offset = "0x969DE0", VA = "0x969DE0")]
	public bool HasQueuedObjects()
	{
		return default(bool);
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x969DF0", Offset = "0x969DF0", VA = "0x969DF0")]
	public object ReceiveNext()
	{
		return null;
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x969E88", Offset = "0x969E88", VA = "0x969E88")]
	public void Serialize(PhotonStream stream)
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x969FCC", Offset = "0x969FCC", VA = "0x969FCC")]
	public void Deserialize(PhotonStream stream)
	{
	}
}
[Token(Token = "0x2000059")]
public enum ViewSynchronization
{
	[Token(Token = "0x40002B6")]
	Off,
	[Token(Token = "0x40002B7")]
	ReliableDeltaCompressed,
	[Token(Token = "0x40002B8")]
	Unreliable,
	[Token(Token = "0x40002B9")]
	UnreliableOnChange
}
[Token(Token = "0x200005A")]
public enum OnSerializeTransform
{
	[Token(Token = "0x40002BB")]
	OnlyPosition,
	[Token(Token = "0x40002BC")]
	OnlyRotation,
	[Token(Token = "0x40002BD")]
	OnlyScale,
	[Token(Token = "0x40002BE")]
	PositionAndRotation,
	[Token(Token = "0x40002BF")]
	All
}
[Token(Token = "0x200005B")]
public enum OnSerializeRigidBody
{
	[Token(Token = "0x40002C1")]
	OnlyVelocity,
	[Token(Token = "0x40002C2")]
	OnlyAngularVelocity,
	[Token(Token = "0x40002C3")]
	All
}
[Token(Token = "0x200005C")]
public enum OwnershipOption
{
	[Token(Token = "0x40002C5")]
	Fixed,
	[Token(Token = "0x40002C6")]
	Takeover,
	[Token(Token = "0x40002C7")]
	Request
}
[Token(Token = "0x200005D")]
[AddComponentMenu("Photon Networking/Photon View")]
public class PhotonView : Photon.MonoBehaviour
{
	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int ownerId;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public byte group;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	protected internal bool mixedModeIsReliable;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool OwnerShipWasTransfered;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int prefixBackup;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	internal object[] instantiationDataField;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected internal object[] lastOnSerializeDataSent;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected internal object[] lastOnSerializeDataReceived;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ViewSynchronization synchronization;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public OnSerializeTransform onSerializeTransformOption;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public OnSerializeRigidBody onSerializeRigidBodyOption;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public OwnershipOption ownershipTransfer;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<Component> ObservedComponents;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Dictionary<Component, MethodInfo> m_OnSerializeMethodInfos;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private int viewIdField;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int instantiationId;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int currentMasterID;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	protected internal bool didAwake;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	[SerializeField]
	protected internal bool isRuntimeInstantiated;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
	protected internal bool removedFromLocalViewList;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	internal UnityEngine.MonoBehaviour[] RpcMonoBehaviours;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private MethodInfo OnSerializeMethodInfo;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool failedToFindOnSerialize;

	[Token(Token = "0x1700007D")]
	public int prefix
	{
		[Token(Token = "0x60002AB")]
		[Address(RVA = "0x96A184", Offset = "0x96A184", VA = "0x96A184")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002AC")]
		[Address(RVA = "0x96A220", Offset = "0x96A220", VA = "0x96A220")]
		set
		{
		}
	}

	[Token(Token = "0x1700007E")]
	public object[] instantiationData
	{
		[Token(Token = "0x60002AD")]
		[Address(RVA = "0x96A228", Offset = "0x96A228", VA = "0x96A228")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002AE")]
		[Address(RVA = "0x96A2AC", Offset = "0x96A2AC", VA = "0x96A2AC")]
		set
		{
		}
	}

	[Token(Token = "0x1700007F")]
	public int viewID
	{
		[Token(Token = "0x60002AF")]
		[Address(RVA = "0x96A2B4", Offset = "0x96A2B4", VA = "0x96A2B4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002B0")]
		[Address(RVA = "0x96A2BC", Offset = "0x96A2BC", VA = "0x96A2BC")]
		set
		{
		}
	}

	[Token(Token = "0x17000080")]
	public bool isSceneView
	{
		[Token(Token = "0x60002B1")]
		[Address(RVA = "0x96A388", Offset = "0x96A388", VA = "0x96A388")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000081")]
	public PhotonPlayer owner
	{
		[Token(Token = "0x60002B2")]
		[Address(RVA = "0x96A404", Offset = "0x96A404", VA = "0x96A404")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000082")]
	public int OwnerActorNr
	{
		[Token(Token = "0x60002B3")]
		[Address(RVA = "0x96A40C", Offset = "0x96A40C", VA = "0x96A40C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000083")]
	public bool isOwnerActive
	{
		[Token(Token = "0x60002B4")]
		[Address(RVA = "0x96A414", Offset = "0x96A414", VA = "0x96A414")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000084")]
	public int CreatorActorNr
	{
		[Token(Token = "0x60002B5")]
		[Address(RVA = "0x96A3A0", Offset = "0x96A3A0", VA = "0x96A3A0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000085")]
	public bool isMine
	{
		[Token(Token = "0x60002B6")]
		[Address(RVA = "0x96A4B4", Offset = "0x96A4B4", VA = "0x96A4B4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x96A554", Offset = "0x96A554", VA = "0x96A554")]
	protected internal void Awake()
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x96A5F4", Offset = "0x96A5F4", VA = "0x96A5F4")]
	public void RequestOwnership()
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x96A664", Offset = "0x96A664", VA = "0x96A664")]
	public void TransferOwnership(PhotonPlayer newOwner)
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x96A67C", Offset = "0x96A67C", VA = "0x96A67C")]
	public void TransferOwnership(int newOwnerId)
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x96A700", Offset = "0x96A700", VA = "0x96A700")]
	public void OnMasterClientSwitched(PhotonPlayer newMasterClient)
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x96A764", Offset = "0x96A764", VA = "0x96A764")]
	protected internal void OnDestroy()
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x96A8CC", Offset = "0x96A8CC", VA = "0x96A8CC")]
	public void SerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x96AE68", Offset = "0x96AE68", VA = "0x96AE68")]
	public void DeserializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x96AF30", Offset = "0x96AF30", VA = "0x96AF30")]
	protected internal void DeserializeComponent(Component component, PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x96A994", Offset = "0x96A994", VA = "0x96A994")]
	protected internal void SerializeComponent(Component component, PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x96B544", Offset = "0x96B544", VA = "0x96B544")]
	protected internal void ExecuteComponentOnSerialize(Component component, PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x96B918", Offset = "0x96B918", VA = "0x96B918")]
	public void RefreshRpcMonoBehaviourCache()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x96B968", Offset = "0x96B968", VA = "0x96B968")]
	public void RPC(string methodName, PhotonTargets target, params object[] parameters)
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x96B9E8", Offset = "0x96B9E8", VA = "0x96B9E8")]
	public void RpcSecure(string methodName, PhotonTargets target, bool encrypt, params object[] parameters)
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x96BA6C", Offset = "0x96BA6C", VA = "0x96BA6C")]
	public void RPC(string methodName, PhotonPlayer targetPlayer, params object[] parameters)
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x96BAEC", Offset = "0x96BAEC", VA = "0x96BAEC")]
	public void RpcSecure(string methodName, PhotonPlayer targetPlayer, bool encrypt, params object[] parameters)
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x96BB70", Offset = "0x96BB70", VA = "0x96BB70")]
	public static PhotonView Get(Component component)
	{
		return null;
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x96BBC0", Offset = "0x96BBC0", VA = "0x96BBC0")]
	public static PhotonView Get(GameObject gameObj)
	{
		return null;
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x96BC10", Offset = "0x96BC10", VA = "0x96BC10")]
	public static PhotonView Find(int viewID)
	{
		return null;
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x96BC7C", Offset = "0x96BC7C", VA = "0x96BC7C", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x96BED0", Offset = "0x96BED0", VA = "0x96BED0")]
	public PhotonView()
	{
	}
}
[Token(Token = "0x200005E")]
public class PhotonPingManager
{
	[Token(Token = "0x200005F")]
	[CompilerGenerated]
	private sealed class <PingSocket>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Region region;

		[Token(Token = "0x40002E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PhotonPingManager <>4__this;

		[Token(Token = "0x40002E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Photon.Realtime.PhotonPing <ping>5__2;

		[Token(Token = "0x40002EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <rttSum>5__3;

		[Token(Token = "0x40002EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <replyCount>5__4;

		[Token(Token = "0x40002EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <regionAddress>5__5;

		[Token(Token = "0x40002ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <i>5__6;

		[Token(Token = "0x40002EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool <overtime>5__7;

		[Token(Token = "0x40002EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Stopwatch <sw>5__8;

		[Token(Token = "0x17000088")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002D5")]
			[Address(RVA = "0x96C89C", Offset = "0x96C89C", VA = "0x96C89C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000089")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002D7")]
			[Address(RVA = "0x96C8E4", Offset = "0x96C8E4", VA = "0x96C8E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002D2")]
		[Address(RVA = "0x96BF68", Offset = "0x96BF68", VA = "0x96BF68")]
		[DebuggerHidden]
		public <PingSocket>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60002D3")]
		[Address(RVA = "0x96C260", Offset = "0x96C260", VA = "0x96C260", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002D4")]
		[Address(RVA = "0x96C264", Offset = "0x96C264", VA = "0x96C264", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002D6")]
		[Address(RVA = "0x96C8A4", Offset = "0x96C8A4", VA = "0x96C8A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool UseNative;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int Attempts;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool IgnoreInitialAttempt;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int MaxMilliseconsPerPing;

	[Token(Token = "0x40002E3")]
	private const string wssProtocolString = "wss://";

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int PingsRunning;

	[Token(Token = "0x17000086")]
	public Region BestRegion
	{
		[Token(Token = "0x60002CC")]
		[Address(RVA = "0x95D5C8", Offset = "0x95D5C8", VA = "0x95D5C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000087")]
	public bool Done
	{
		[Token(Token = "0x60002CD")]
		[Address(RVA = "0x95D5B8", Offset = "0x95D5B8", VA = "0x95D5B8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x95D544", Offset = "0x95D544", VA = "0x95D544")]
	[IteratorStateMachine(typeof(<PingSocket>d__10))]
	public IEnumerator PingSocket(Region region)
	{
		return null;
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x96BF90", Offset = "0x96BF90", VA = "0x96BF90")]
	public static string ResolveHost(string hostName)
	{
		return null;
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x95D53C", Offset = "0x95D53C", VA = "0x95D53C")]
	public PhotonPingManager()
	{
	}
}
[Token(Token = "0x2000060")]
public class Room : RoomInfo
{
	[Token(Token = "0x1700008A")]
	public new string Name
	{
		[Token(Token = "0x60002D8")]
		[Address(RVA = "0x96C8EC", Offset = "0x96C8EC", VA = "0x96C8EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002D9")]
		[Address(RVA = "0x96C8F4", Offset = "0x96C8F4", VA = "0x96C8F4")]
		internal set
		{
		}
	}

	[Token(Token = "0x1700008B")]
	public new bool IsOpen
	{
		[Token(Token = "0x60002DA")]
		[Address(RVA = "0x96C8FC", Offset = "0x96C8FC", VA = "0x96C8FC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002DB")]
		[Address(RVA = "0x96C904", Offset = "0x96C904", VA = "0x96C904")]
		set
		{
		}
	}

	[Token(Token = "0x1700008C")]
	public new bool IsVisible
	{
		[Token(Token = "0x60002DC")]
		[Address(RVA = "0x96CB14", Offset = "0x96CB14", VA = "0x96CB14")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002DD")]
		[Address(RVA = "0x96CB1C", Offset = "0x96CB1C", VA = "0x96CB1C")]
		set
		{
		}
	}

	[Token(Token = "0x1700008D")]
	public string[] PropertiesListedInLobby
	{
		[Token(Token = "0x60002DE")]
		[Address(RVA = "0x96CD2C", Offset = "0x96CD2C", VA = "0x96CD2C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60002DF")]
		[Address(RVA = "0x96CD34", Offset = "0x96CD34", VA = "0x96CD34")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700008E")]
	public bool AutoCleanUp
	{
		[Token(Token = "0x60002E0")]
		[Address(RVA = "0x96CD3C", Offset = "0x96CD3C", VA = "0x96CD3C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700008F")]
	public new int MaxPlayers
	{
		[Token(Token = "0x60002E1")]
		[Address(RVA = "0x96CD44", Offset = "0x96CD44", VA = "0x96CD44")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002E2")]
		[Address(RVA = "0x96CD4C", Offset = "0x96CD4C", VA = "0x96CD4C")]
		set
		{
		}
	}

	[Token(Token = "0x17000090")]
	public new int PlayerCount
	{
		[Token(Token = "0x60002E3")]
		[Address(RVA = "0x96CFCC", Offset = "0x96CFCC", VA = "0x96CFCC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000091")]
	public string[] ExpectedUsers
	{
		[Token(Token = "0x60002E4")]
		[Address(RVA = "0x96D040", Offset = "0x96D040", VA = "0x96D040")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000092")]
	public int PlayerTtl
	{
		[Token(Token = "0x60002E5")]
		[Address(RVA = "0x96D048", Offset = "0x96D048", VA = "0x96D048")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002E6")]
		[Address(RVA = "0x96D050", Offset = "0x96D050", VA = "0x96D050")]
		set
		{
		}
	}

	[Token(Token = "0x17000093")]
	public int EmptyRoomTtl
	{
		[Token(Token = "0x60002E7")]
		[Address(RVA = "0x96D1C4", Offset = "0x96D1C4", VA = "0x96D1C4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002E8")]
		[Address(RVA = "0x96D1CC", Offset = "0x96D1CC", VA = "0x96D1CC")]
		set
		{
		}
	}

	[Token(Token = "0x17000094")]
	protected internal int MasterClientId
	{
		[Token(Token = "0x60002E9")]
		[Address(RVA = "0x96D340", Offset = "0x96D340", VA = "0x96D340")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002EA")]
		[Address(RVA = "0x96D348", Offset = "0x96D348", VA = "0x96D348")]
		set
		{
		}
	}

	[Token(Token = "0x17000095")]
	[Obsolete("Please use Name (updated case for naming).")]
	public new string name
	{
		[Token(Token = "0x60002F2")]
		[Address(RVA = "0x96E560", Offset = "0x96E560", VA = "0x96E560")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002F3")]
		[Address(RVA = "0x96E568", Offset = "0x96E568", VA = "0x96E568")]
		internal set
		{
		}
	}

	[Token(Token = "0x17000096")]
	[Obsolete("Please use IsOpen (updated case for naming).")]
	public new bool open
	{
		[Token(Token = "0x60002F4")]
		[Address(RVA = "0x96E570", Offset = "0x96E570", VA = "0x96E570")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002F5")]
		[Address(RVA = "0x96E578", Offset = "0x96E578", VA = "0x96E578")]
		set
		{
		}
	}

	[Token(Token = "0x17000097")]
	[Obsolete("Please use IsVisible (updated case for naming).")]
	public new bool visible
	{
		[Token(Token = "0x60002F6")]
		[Address(RVA = "0x96E580", Offset = "0x96E580", VA = "0x96E580")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002F7")]
		[Address(RVA = "0x96E588", Offset = "0x96E588", VA = "0x96E588")]
		set
		{
		}
	}

	[Token(Token = "0x17000098")]
	[Obsolete("Please use PropertiesListedInLobby (updated case for naming).")]
	public string[] propertiesListedInLobby
	{
		[Token(Token = "0x60002F8")]
		[Address(RVA = "0x96E590", Offset = "0x96E590", VA = "0x96E590")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002F9")]
		[Address(RVA = "0x96E598", Offset = "0x96E598", VA = "0x96E598")]
		private set
		{
		}
	}

	[Token(Token = "0x17000099")]
	[Obsolete("Please use AutoCleanUp (updated case for naming).")]
	public bool autoCleanUp
	{
		[Token(Token = "0x60002FA")]
		[Address(RVA = "0x96E5A0", Offset = "0x96E5A0", VA = "0x96E5A0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700009A")]
	[Obsolete("Please use MaxPlayers (updated case for naming).")]
	public new int maxPlayers
	{
		[Token(Token = "0x60002FB")]
		[Address(RVA = "0x96E5A8", Offset = "0x96E5A8", VA = "0x96E5A8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002FC")]
		[Address(RVA = "0x96E5B0", Offset = "0x96E5B0", VA = "0x96E5B0")]
		set
		{
		}
	}

	[Token(Token = "0x1700009B")]
	[Obsolete("Please use PlayerCount (updated case for naming).")]
	public new int playerCount
	{
		[Token(Token = "0x60002FD")]
		[Address(RVA = "0x96E5B4", Offset = "0x96E5B4", VA = "0x96E5B4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700009C")]
	[Obsolete("Please use ExpectedUsers (updated case for naming).")]
	public string[] expectedUsers
	{
		[Token(Token = "0x60002FE")]
		[Address(RVA = "0x96E5B8", Offset = "0x96E5B8", VA = "0x96E5B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009D")]
	[Obsolete("Please use MasterClientId (updated case for naming).")]
	protected internal int masterClientId
	{
		[Token(Token = "0x60002FF")]
		[Address(RVA = "0x96E5C0", Offset = "0x96E5C0", VA = "0x96E5C0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000300")]
		[Address(RVA = "0x96E5C8", Offset = "0x96E5C8", VA = "0x96E5C8")]
		set
		{
		}
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x963304", Offset = "0x963304", VA = "0x963304")]
	internal Room(string roomName, RoomOptions options)
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x96DA4C", Offset = "0x96DA4C", VA = "0x96DA4C")]
	public void SetCustomProperties(ExitGames.Client.Photon.Hashtable propertiesToSet, [Optional] ExitGames.Client.Photon.Hashtable expectedValues, bool webForward = false)
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x96DD24", Offset = "0x96DD24", VA = "0x96DD24")]
	public void SetPropertiesListedInLobby(string[] propsListedInLobby)
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x96DE1C", Offset = "0x96DE1C", VA = "0x96DE1C")]
	public void ClearExpectedUsers()
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x96DF70", Offset = "0x96DF70", VA = "0x96DF70")]
	public void SetExpectedUsers(string[] expectedUsers)
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x96E0A0", Offset = "0x96E0A0", VA = "0x96E0A0", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x96E2CC", Offset = "0x96E2CC", VA = "0x96E2CC")]
	public new string ToStringFull()
	{
		return null;
	}
}
[Token(Token = "0x2000061")]
public class RoomInfo
{
	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ExitGames.Client.Photon.Hashtable customPropertiesField;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected byte maxPlayersField;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected int emptyRoomTtlField;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected int playerTtlField;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected string[] expectedUsersField;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected bool openField;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	protected bool visibleField;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	protected bool autoCleanUpField;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected string nameField;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected internal int masterClientIdField;

	[Token(Token = "0x1700009E")]
	public bool removedFromList
	{
		[Token(Token = "0x6000301")]
		[Address(RVA = "0x96E5D0", Offset = "0x96E5D0", VA = "0x96E5D0")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000302")]
		[Address(RVA = "0x96E5D8", Offset = "0x96E5D8", VA = "0x96E5D8")]
		[CompilerGenerated]
		internal set
		{
		}
	}

	[Token(Token = "0x1700009F")]
	protected internal bool serverSideMasterClient
	{
		[Token(Token = "0x6000303")]
		[Address(RVA = "0x96E5E4", Offset = "0x96E5E4", VA = "0x96E5E4")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000304")]
		[Address(RVA = "0x96E5EC", Offset = "0x96E5EC", VA = "0x96E5EC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000A0")]
	public ExitGames.Client.Photon.Hashtable CustomProperties
	{
		[Token(Token = "0x6000305")]
		[Address(RVA = "0x96E5F8", Offset = "0x96E5F8", VA = "0x96E5F8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A1")]
	public string Name
	{
		[Token(Token = "0x6000306")]
		[Address(RVA = "0x96E600", Offset = "0x96E600", VA = "0x96E600")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A2")]
	public int PlayerCount
	{
		[Token(Token = "0x6000307")]
		[Address(RVA = "0x96E608", Offset = "0x96E608", VA = "0x96E608")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000308")]
		[Address(RVA = "0x96E610", Offset = "0x96E610", VA = "0x96E610")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000A3")]
	public bool IsLocalClientInside
	{
		[Token(Token = "0x6000309")]
		[Address(RVA = "0x96E618", Offset = "0x96E618", VA = "0x96E618")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600030A")]
		[Address(RVA = "0x96E620", Offset = "0x96E620", VA = "0x96E620")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000A4")]
	public byte MaxPlayers
	{
		[Token(Token = "0x600030B")]
		[Address(RVA = "0x96E62C", Offset = "0x96E62C", VA = "0x96E62C")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000A5")]
	public bool IsOpen
	{
		[Token(Token = "0x600030C")]
		[Address(RVA = "0x96E634", Offset = "0x96E634", VA = "0x96E634")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A6")]
	public bool IsVisible
	{
		[Token(Token = "0x600030D")]
		[Address(RVA = "0x96E63C", Offset = "0x96E63C", VA = "0x96E63C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A7")]
	[Obsolete("Please use CustomProperties (updated case for naming).")]
	public ExitGames.Client.Photon.Hashtable customProperties
	{
		[Token(Token = "0x6000314")]
		[Address(RVA = "0x96EBB4", Offset = "0x96EBB4", VA = "0x96EBB4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A8")]
	[Obsolete("Please use Name (updated case for naming).")]
	public string name
	{
		[Token(Token = "0x6000315")]
		[Address(RVA = "0x96EBBC", Offset = "0x96EBBC", VA = "0x96EBBC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A9")]
	[Obsolete("Please use PlayerCount (updated case for naming).")]
	public int playerCount
	{
		[Token(Token = "0x6000316")]
		[Address(RVA = "0x96EBC4", Offset = "0x96EBC4", VA = "0x96EBC4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000317")]
		[Address(RVA = "0x96EBCC", Offset = "0x96EBCC", VA = "0x96EBCC")]
		set
		{
		}
	}

	[Token(Token = "0x170000AA")]
	[Obsolete("Please use IsLocalClientInside (updated case for naming).")]
	public bool isLocalClientInside
	{
		[Token(Token = "0x6000318")]
		[Address(RVA = "0x96EBD4", Offset = "0x96EBD4", VA = "0x96EBD4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000319")]
		[Address(RVA = "0x96EBDC", Offset = "0x96EBDC", VA = "0x96EBDC")]
		set
		{
		}
	}

	[Token(Token = "0x170000AB")]
	[Obsolete("Please use MaxPlayers (updated case for naming).")]
	public byte maxPlayers
	{
		[Token(Token = "0x600031A")]
		[Address(RVA = "0x96EBE8", Offset = "0x96EBE8", VA = "0x96EBE8")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000AC")]
	[Obsolete("Please use IsOpen (updated case for naming).")]
	public bool open
	{
		[Token(Token = "0x600031B")]
		[Address(RVA = "0x96EBF0", Offset = "0x96EBF0", VA = "0x96EBF0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000AD")]
	[Obsolete("Please use IsVisible (updated case for naming).")]
	public bool visible
	{
		[Token(Token = "0x600031C")]
		[Address(RVA = "0x96EBF8", Offset = "0x96EBF8", VA = "0x96EBF8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x96D350", Offset = "0x96D350", VA = "0x96D350")]
	protected internal RoomInfo(string roomName, ExitGames.Client.Photon.Hashtable properties)
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x96E644", Offset = "0x96E644", VA = "0x96E644", Slot = "0")]
	public override bool Equals(object other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x96E6E4", Offset = "0x96E6E4", VA = "0x96E6E4", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x96E704", Offset = "0x96E704", VA = "0x96E704", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x96E92C", Offset = "0x96E92C", VA = "0x96E92C")]
	public string ToStringFull()
	{
		return null;
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x96D448", Offset = "0x96D448", VA = "0x96D448")]
	protected internal void InternalCacheProperties(ExitGames.Client.Photon.Hashtable propertiesToCache)
	{
	}
}
[Token(Token = "0x2000062")]
public class PunRPC : Attribute
{
	[Token(Token = "0x600031D")]
	[Address(RVA = "0x96EC00", Offset = "0x96EC00", VA = "0x96EC00")]
	public PunRPC()
	{
	}
}
[Token(Token = "0x2000063")]
public class Region
{
	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public CloudRegionCode Code;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Cluster;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string HostAndPort;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int Ping;

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x96EC08", Offset = "0x96EC08", VA = "0x96EC08")]
	public Region(CloudRegionCode code)
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x96EC8C", Offset = "0x96EC8C", VA = "0x96EC8C")]
	public Region(CloudRegionCode code, string regionCodeString, string address)
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x95C80C", Offset = "0x95C80C", VA = "0x95C80C")]
	public static CloudRegionCode Parse(string codeAsString)
	{
		return default(CloudRegionCode);
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x96ECC8", Offset = "0x96ECC8", VA = "0x96ECC8")]
	internal static CloudRegionFlag ParseFlag(CloudRegionCode region)
	{
		return default(CloudRegionFlag);
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x96EE78", Offset = "0x96EE78", VA = "0x96EE78")]
	[Obsolete]
	internal static CloudRegionFlag ParseFlag(string codeAsString)
	{
		return default(CloudRegionFlag);
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x96EFDC", Offset = "0x96EFDC", VA = "0x96EFDC", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x2000064")]
public class ServerSettings : ScriptableObject
{
	[Token(Token = "0x2000065")]
	public enum HostingOption
	{
		[Token(Token = "0x4000315")]
		NotSet,
		[Token(Token = "0x4000316")]
		PhotonCloud,
		[Token(Token = "0x4000317")]
		SelfHosted,
		[Token(Token = "0x4000318")]
		OfflineMode,
		[Token(Token = "0x4000319")]
		BestRegion
	}

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string AppID;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string VoiceAppID;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string ChatAppID;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HostingOption HostType;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public CloudRegionCode PreferredRegion;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CloudRegionFlag EnabledRegions;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public ConnectionProtocol Protocol;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string ServerAddress;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int ServerPort;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int VoiceServerPort;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool JoinLobby;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool EnableLobbyStatistics;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public PhotonLogLevel PunLogging;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public DebugLevel NetworkLogging;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool RunInBackground;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<string> RpcList;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public bool DisableAutoOpenWizard;

	[Token(Token = "0x170000AE")]
	public static CloudRegionCode BestRegionCodeInPreferences
	{
		[Token(Token = "0x6000329")]
		[Address(RVA = "0x96F1B8", Offset = "0x96F1B8", VA = "0x96F1B8")]
		get
		{
			return default(CloudRegionCode);
		}
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x96F06C", Offset = "0x96F06C", VA = "0x96F06C")]
	public void UseCloudBestRegion(string cloudAppid)
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x96F07C", Offset = "0x96F07C", VA = "0x96F07C")]
	public void UseCloud(string cloudAppid)
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x96F08C", Offset = "0x96F08C", VA = "0x96F08C")]
	public void UseCloud(string cloudAppid, CloudRegionCode code)
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x96F09C", Offset = "0x96F09C", VA = "0x96F09C")]
	public void UseMyServer(string serverAddress, int serverPort, string application)
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x96F118", Offset = "0x96F118", VA = "0x96F118")]
	public static bool IsAppId(string val)
	{
		return default(bool);
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x96F1BC", Offset = "0x96F1BC", VA = "0x96F1BC")]
	public static void ResetBestRegionCodeInPreferences()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x96F1C4", Offset = "0x96F1C4", VA = "0x96F1C4", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x96F278", Offset = "0x96F278", VA = "0x96F278")]
	public ServerSettings()
	{
	}
}
[Token(Token = "0x2000066")]
[RequireComponent(typeof(PhotonView))]
[RequireComponent(typeof(Animator))]
[AddComponentMenu("Photon Networking/Photon Animator View")]
public class PhotonAnimatorView : UnityEngine.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x2000067")]
	public enum ParameterType
	{
		[Token(Token = "0x4000326")]
		Float = 1,
		[Token(Token = "0x4000327")]
		Int = 3,
		[Token(Token = "0x4000328")]
		Bool = 4,
		[Token(Token = "0x4000329")]
		Trigger = 9
	}

	[Token(Token = "0x2000068")]
	public enum SynchronizeType
	{
		[Token(Token = "0x400032B")]
		Disabled,
		[Token(Token = "0x400032C")]
		Discrete,
		[Token(Token = "0x400032D")]
		Continuous
	}

	[Serializable]
	[Token(Token = "0x2000069")]
	public class SynchronizedParameter
	{
		[Token(Token = "0x400032E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ParameterType Type;

		[Token(Token = "0x400032F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public SynchronizeType SynchronizeType;

		[Token(Token = "0x4000330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Name;

		[Token(Token = "0x6000340")]
		[Address(RVA = "0x970430", Offset = "0x970430", VA = "0x970430")]
		public SynchronizedParameter()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200006A")]
	public class SynchronizedLayer
	{
		[Token(Token = "0x4000331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SynchronizeType SynchronizeType;

		[Token(Token = "0x4000332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int LayerIndex;

		[Token(Token = "0x6000341")]
		[Address(RVA = "0x970228", Offset = "0x970228", VA = "0x970228")]
		public SynchronizedLayer()
		{
		}
	}

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator m_Animator;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PhotonStreamQueue m_StreamQueue;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[HideInInspector]
	private bool ShowLayerWeightsInspector;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[SerializeField]
	[HideInInspector]
	private bool ShowParameterInspector;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[HideInInspector]
	private List<SynchronizedParameter> m_SynchronizeParameters;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	[SerializeField]
	private List<SynchronizedLayer> m_SynchronizeLayers;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 m_ReceiverPosition;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float m_LastDeserializeTime;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_WasSynchronizeTypeChanged;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PhotonView m_PhotonView;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<string> m_raisedDiscreteTriggersCache;

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x96F33C", Offset = "0x96F33C", VA = "0x96F33C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x96F3EC", Offset = "0x96F3EC", VA = "0x96F3EC")]
	private void Update()
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x96F7CC", Offset = "0x96F7CC", VA = "0x96F7CC")]
	public void CacheDiscreteTriggers()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x96FBFC", Offset = "0x96FBFC", VA = "0x96FBFC")]
	public bool DoesLayerSynchronizeTypeExist(int layerIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x96FCEC", Offset = "0x96FCEC", VA = "0x96FCEC")]
	public bool DoesParameterSynchronizeTypeExist(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x96FDDC", Offset = "0x96FDDC", VA = "0x96FDDC")]
	public List<SynchronizedLayer> GetSynchronizedLayers()
	{
		return null;
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x96FDE4", Offset = "0x96FDE4", VA = "0x96FDE4")]
	public List<SynchronizedParameter> GetSynchronizedParameters()
	{
		return null;
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x96FDEC", Offset = "0x96FDEC", VA = "0x96FDEC")]
	public SynchronizeType GetLayerSynchronizeType(int layerIndex)
	{
		return default(SynchronizeType);
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x96FF14", Offset = "0x96FF14", VA = "0x96FF14")]
	public SynchronizeType GetParameterSynchronizeType(string name)
	{
		return default(SynchronizeType);
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x97003C", Offset = "0x97003C", VA = "0x97003C")]
	public void SetLayerSynchronized(int layerIndex, SynchronizeType synchronizeType)
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x970230", Offset = "0x970230", VA = "0x970230")]
	public void SetParameterSynchronized(string name, ParameterType type, SynchronizeType synchronizeType)
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x96F4FC", Offset = "0x96F4FC", VA = "0x96F4FC")]
	private void SerializeDataContinuously()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x96F914", Offset = "0x96F914", VA = "0x96F914")]
	private void DeserializeDataContinuously()
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x970438", Offset = "0x970438", VA = "0x970438")]
	private void SerializeDataDiscretly(PhotonStream stream)
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x970718", Offset = "0x970718", VA = "0x970718")]
	private void DeserializeDataDiscretly(PhotonStream stream)
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x970AA8", Offset = "0x970AA8", VA = "0x970AA8")]
	private void SerializeSynchronizationTypeState(PhotonStream stream)
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x970C34", Offset = "0x970C34", VA = "0x970C34")]
	private void DeserializeSynchronizationTypeState(PhotonStream stream)
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x970DBC", Offset = "0x970DBC", VA = "0x970DBC", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x970EE8", Offset = "0x970EE8", VA = "0x970EE8")]
	public PhotonAnimatorView()
	{
	}
}
[Token(Token = "0x2000071")]
[AddComponentMenu("Photon Networking/Photon Rigidbody 2D View")]
[RequireComponent(typeof(Rigidbody2D))]
[RequireComponent(typeof(PhotonView))]
public class PhotonRigidbody2DView : UnityEngine.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool m_SynchronizeVelocity;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool m_SynchronizeAngularVelocity;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody2D m_Body;

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x9710D4", Offset = "0x9710D4", VA = "0x9710D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x971124", Offset = "0x971124", VA = "0x971124", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x9712A8", Offset = "0x9712A8", VA = "0x9712A8")]
	public PhotonRigidbody2DView()
	{
	}
}
[Token(Token = "0x2000072")]
[RequireComponent(typeof(PhotonView))]
[RequireComponent(typeof(Rigidbody))]
[AddComponentMenu("Photon Networking/Photon Rigidbody View")]
public class PhotonRigidbodyView : UnityEngine.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody m_Body;

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x9712B8", Offset = "0x9712B8", VA = "0x9712B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x971308", Offset = "0x971308", VA = "0x971308", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x971440", Offset = "0x971440", VA = "0x971440")]
	public PhotonRigidbodyView()
	{
	}
}
[Token(Token = "0x2000073")]
[RequireComponent(typeof(PhotonView))]
[AddComponentMenu("Photon Networking/Photon Transform View")]
public class PhotonTransformView : UnityEngine.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public PhotonTransformViewPositionModel m_PositionModel;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public PhotonTransformViewRotationModel m_RotationModel;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public PhotonTransformViewScaleModel m_ScaleModel;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PhotonView m_PhotonView;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_ReceivedNetworkUpdate;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool m_firstTake;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 m_NetworkPosition;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Quaternion m_NetworkRotation;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private double m_LastSerializeTime;

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x971448", Offset = "0x971448", VA = "0x971448")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x971498", Offset = "0x971498", VA = "0x971498")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x9714A4", Offset = "0x9714A4", VA = "0x9714A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x971834", Offset = "0x971834", VA = "0x971834", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x971A10", Offset = "0x971A10", VA = "0x971A10")]
	public PhotonTransformView()
	{
	}
}
[Token(Token = "0x2000074")]
public class PhotonTransformViewPositionControl
{
	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private PhotonTransformViewPositionModel m_Model;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float m_CurrentSpeed;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private double m_LastSerializeTime;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 m_SynchronizedSpeed;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float m_SynchronizedTurnSpeed;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 m_NetworkPosition;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Queue<Vector3> m_OldNetworkPositions;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_UpdatedPositionAfterOnSerialize;

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x971D54", Offset = "0x971D54", VA = "0x971D54")]
	public PhotonTransformViewPositionControl(PhotonTransformViewPositionModel model)
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x971E2C", Offset = "0x971E2C", VA = "0x971E2C")]
	private Vector3 GetOldestStoredNetworkPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x971EA4", Offset = "0x971EA4", VA = "0x971EA4")]
	public void SetSynchronizedValues(Vector3 speed, float turnSpeed)
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x971EB0", Offset = "0x971EB0", VA = "0x971EB0")]
	public Vector3 UpdatePosition(Vector3 currentPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x9726A8", Offset = "0x9726A8", VA = "0x9726A8")]
	public Vector3 GetNetworkPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x972408", Offset = "0x972408", VA = "0x972408")]
	public Vector3 GetExtrapolatedPositionOffset()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x9726B4", Offset = "0x9726B4", VA = "0x9726B4")]
	public void OnPhotonSerializeView(Vector3 currentPosition, PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x972774", Offset = "0x972774", VA = "0x972774")]
	private void SerializeData(Vector3 currentPosition, PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x972890", Offset = "0x972890", VA = "0x972890")]
	private void DeserializeData(PhotonStream stream, PhotonMessageInfo info)
	{
	}
}
[Serializable]
[Token(Token = "0x2000075")]
public class PhotonTransformViewPositionModel
{
	[Token(Token = "0x2000076")]
	public enum InterpolateOptions
	{
		[Token(Token = "0x400035D")]
		Disabled,
		[Token(Token = "0x400035E")]
		FixedSpeed,
		[Token(Token = "0x400035F")]
		EstimatedSpeed,
		[Token(Token = "0x4000360")]
		SynchronizeValues,
		[Token(Token = "0x4000361")]
		Lerp
	}

	[Token(Token = "0x2000077")]
	public enum ExtrapolateOptions
	{
		[Token(Token = "0x4000363")]
		Disabled,
		[Token(Token = "0x4000364")]
		SynchronizeValues,
		[Token(Token = "0x4000365")]
		EstimateSpeedAndTurn,
		[Token(Token = "0x4000366")]
		FixedSpeed
	}

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool SynchronizeEnabled;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool TeleportEnabled;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float TeleportIfDistanceGreaterThan;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InterpolateOptions InterpolateOption;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float InterpolateMoveTowardsSpeed;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float InterpolateLerpSpeed;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float InterpolateMoveTowardsAcceleration;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float InterpolateMoveTowardsDeceleration;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve InterpolateSpeedCurve;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ExtrapolateOptions ExtrapolateOption;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float ExtrapolateSpeed;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool ExtrapolateIncludingRoundTripTime;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int ExtrapolateNumberOfStoredPositions;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool DrawErrorGizmo;

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x971AF0", Offset = "0x971AF0", VA = "0x971AF0")]
	public PhotonTransformViewPositionModel()
	{
	}
}
[Token(Token = "0x2000078")]
public class PhotonTransformViewRotationControl
{
	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private PhotonTransformViewRotationModel m_Model;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Quaternion m_NetworkRotation;

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x972A68", Offset = "0x972A68", VA = "0x972A68")]
	public PhotonTransformViewRotationControl(PhotonTransformViewRotationModel model)
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x972A90", Offset = "0x972A90", VA = "0x972A90")]
	public Quaternion GetNetworkRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x972A9C", Offset = "0x972A9C", VA = "0x972A9C")]
	public Quaternion GetRotation(Quaternion currentRotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x972C30", Offset = "0x972C30", VA = "0x972C30")]
	public void OnPhotonSerializeView(Quaternion currentRotation, PhotonStream stream, PhotonMessageInfo info)
	{
	}
}
[Serializable]
[Token(Token = "0x2000079")]
public class PhotonTransformViewRotationModel
{
	[Token(Token = "0x200007A")]
	public enum InterpolateOptions
	{
		[Token(Token = "0x400036E")]
		Disabled,
		[Token(Token = "0x400036F")]
		RotateTowards,
		[Token(Token = "0x4000370")]
		Lerp
	}

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool SynchronizeEnabled;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public InterpolateOptions InterpolateOption;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float InterpolateRotateTowardsSpeed;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float InterpolateLerpSpeed;

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x971D28", Offset = "0x971D28", VA = "0x971D28")]
	public PhotonTransformViewRotationModel()
	{
	}
}
[Token(Token = "0x200007B")]
public class PhotonTransformViewScaleControl
{
	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private PhotonTransformViewScaleModel m_Model;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_NetworkScale;

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x972D1C", Offset = "0x972D1C", VA = "0x972D1C")]
	public PhotonTransformViewScaleControl(PhotonTransformViewScaleModel model)
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x972D88", Offset = "0x972D88", VA = "0x972D88")]
	public Vector3 GetNetworkScale()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x972D94", Offset = "0x972D94", VA = "0x972D94")]
	public Vector3 GetScale(Vector3 currentScale)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x972F1C", Offset = "0x972F1C", VA = "0x972F1C")]
	public void OnPhotonSerializeView(Vector3 currentScale, PhotonStream stream, PhotonMessageInfo info)
	{
	}
}
[Serializable]
[Token(Token = "0x200007C")]
public class PhotonTransformViewScaleModel
{
	[Token(Token = "0x200007D")]
	public enum InterpolateOptions
	{
		[Token(Token = "0x4000378")]
		Disabled,
		[Token(Token = "0x4000379")]
		MoveTowards,
		[Token(Token = "0x400037A")]
		Lerp
	}

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool SynchronizeEnabled;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public InterpolateOptions InterpolateOption;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float InterpolateMoveTowardsSpeed;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float InterpolateLerpSpeed;

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x971D44", Offset = "0x971D44", VA = "0x971D44")]
	public PhotonTransformViewScaleModel()
	{
	}
}
[Token(Token = "0x200007E")]
public class ConnectAndJoinRandom : Photon.MonoBehaviour
{
	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool AutoConnect;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public byte Version;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	private bool ConnectInUpdate;

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x97300C", Offset = "0x97300C", VA = "0x97300C", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x97305C", Offset = "0x97305C", VA = "0x97305C", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x973184", Offset = "0x973184", VA = "0x973184", Slot = "6")]
	public virtual void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x973214", Offset = "0x973214", VA = "0x973214", Slot = "7")]
	public virtual void OnJoinedLobby()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x9732A4", Offset = "0x9732A4", VA = "0x9732A4", Slot = "8")]
	public virtual void OnPhotonRandomJoinFailed()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x973378", Offset = "0x973378", VA = "0x973378", Slot = "9")]
	public virtual void OnFailedToConnectToPhoton(DisconnectCause cause)
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x973444", Offset = "0x973444", VA = "0x973444")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x9734AC", Offset = "0x9734AC", VA = "0x9734AC")]
	public ConnectAndJoinRandom()
	{
	}
}
[Token(Token = "0x200007F")]
[HelpURL("https://doc.photonengine.com/en-us/pun/current/demos-and-tutorials/package-demos/culling-demo")]
public class CullArea : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400037E")]
	private const int MAX_NUMBER_OF_ALLOWED_CELLS = 250;

	[Token(Token = "0x400037F")]
	public const int MAX_NUMBER_OF_SUBDIVISIONS = 3;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly byte FIRST_GROUP_ID;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public readonly int[] SUBDIVISION_FIRST_LEVEL_ORDER;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public readonly int[] SUBDIVISION_SECOND_LEVEL_ORDER;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public readonly int[] SUBDIVISION_THIRD_LEVEL_ORDER;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 Center;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector2 Size;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector2[] Subdivisions;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int NumberOfSubdivisions;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool YIsUpAxis;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public bool RecreateCellHierarchy;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	private byte idCounter;

	[Token(Token = "0x170000AF")]
	public int CellCount
	{
		[Token(Token = "0x6000377")]
		[Address(RVA = "0x9734C4", Offset = "0x9734C4", VA = "0x9734C4")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000378")]
		[Address(RVA = "0x9734CC", Offset = "0x9734CC", VA = "0x9734CC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000B0")]
	public CellTree CellTree
	{
		[Token(Token = "0x6000379")]
		[Address(RVA = "0x9734D4", Offset = "0x9734D4", VA = "0x9734D4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600037A")]
		[Address(RVA = "0x9734DC", Offset = "0x9734DC", VA = "0x9734DC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000B1")]
	public Dictionary<int, GameObject> Map
	{
		[Token(Token = "0x600037B")]
		[Address(RVA = "0x9734E4", Offset = "0x9734E4", VA = "0x9734E4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600037C")]
		[Address(RVA = "0x9734EC", Offset = "0x9734EC", VA = "0x9734EC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x9734F4", Offset = "0x9734F4", VA = "0x9734F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x973924", Offset = "0x973924", VA = "0x973924")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x973500", Offset = "0x973500", VA = "0x973500")]
	private void CreateCellHierarchy()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x973A4C", Offset = "0x973A4C", VA = "0x973A4C")]
	private void CreateChildCells(CellTreeNode parent, int cellLevelInHierarchy)
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x973970", Offset = "0x973970", VA = "0x973970")]
	private void DrawCells()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x973998", Offset = "0x973998", VA = "0x973998")]
	private bool IsCellCountAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x973CC4", Offset = "0x973CC4", VA = "0x973CC4")]
	public List<byte> GetActiveCells(Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x973D84", Offset = "0x973D84", VA = "0x973D84")]
	public CullArea()
	{
	}
}
[Token(Token = "0x2000080")]
public class CellTree
{
	[Token(Token = "0x170000B2")]
	public CellTreeNode RootNode
	{
		[Token(Token = "0x6000385")]
		[Address(RVA = "0x9FD37C", Offset = "0x9FD37C", VA = "0x9FD37C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000386")]
		[Address(RVA = "0x9FD384", Offset = "0x9FD384", VA = "0x9FD384")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x9FD38C", Offset = "0x9FD38C", VA = "0x9FD38C")]
	public CellTree()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x9FD394", Offset = "0x9FD394", VA = "0x9FD394")]
	public CellTree(CellTreeNode root)
	{
	}
}
[Token(Token = "0x2000081")]
public class CellTreeNode
{
	[Token(Token = "0x2000082")]
	public enum ENodeType
	{
		[Token(Token = "0x4000399")]
		Root,
		[Token(Token = "0x400039A")]
		Node,
		[Token(Token = "0x400039B")]
		Leaf
	}

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public byte Id;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 Center;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 Size;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 TopLeft;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 BottomRight;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public ENodeType NodeType;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CellTreeNode Parent;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<CellTreeNode> Childs;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float maxDistance;

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x9FD3BC", Offset = "0x9FD3BC", VA = "0x9FD3BC")]
	public CellTreeNode()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x9FD3C4", Offset = "0x9FD3C4", VA = "0x9FD3C4")]
	public CellTreeNode(byte id, ENodeType nodeType, CellTreeNode parent)
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x9FD404", Offset = "0x9FD404", VA = "0x9FD404")]
	public void AddChild(CellTreeNode child)
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x9FD4F8", Offset = "0x9FD4F8", VA = "0x9FD4F8")]
	public void Draw()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x9FD4FC", Offset = "0x9FD4FC", VA = "0x9FD4FC")]
	public void GetActiveCells(List<byte> activeCells, bool yIsUpAxis, Vector3 position)
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x9FD7F4", Offset = "0x9FD7F4", VA = "0x9FD7F4")]
	public bool IsPointInsideCell(bool yIsUpAxis, Vector3 point)
	{
		return default(bool);
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x9FD794", Offset = "0x9FD794", VA = "0x9FD794")]
	public bool IsPointNearCell(bool yIsUpAxis, Vector3 point)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000083")]
public class InputToEvent : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject lastGo;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Vector3 inputHitPos;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool DetectPointedAtGameObject;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector2 pressedPosition;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector2 currentPos;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool Dragging;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera m_Camera;

	[Token(Token = "0x170000B3")]
	public static GameObject goPointedAt
	{
		[Token(Token = "0x6000390")]
		[Address(RVA = "0x9FD854", Offset = "0x9FD854", VA = "0x9FD854")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000391")]
		[Address(RVA = "0x9FD89C", Offset = "0x9FD89C", VA = "0x9FD89C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000B4")]
	public Vector2 DragVector
	{
		[Token(Token = "0x6000392")]
		[Address(RVA = "0x9FD8E8", Offset = "0x9FD8E8", VA = "0x9FD8E8")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x9FD944", Offset = "0x9FD944", VA = "0x9FD944")]
	private void Start()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x9FD994", Offset = "0x9FD994", VA = "0x9FD994")]
	private void Update()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x9FDC8C", Offset = "0x9FDC8C", VA = "0x9FDC8C")]
	private void Press(Vector2 screenPos)
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x9FDD60", Offset = "0x9FDD60", VA = "0x9FDD60")]
	private void Release(Vector2 screenPos)
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x9FDB9C", Offset = "0x9FDB9C", VA = "0x9FDB9C")]
	private GameObject RaycastObject(Vector2 screenPos)
	{
		return null;
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x9FDEB4", Offset = "0x9FDEB4", VA = "0x9FDEB4")]
	public InputToEvent()
	{
	}
}
[Token(Token = "0x2000084")]
[RequireComponent(typeof(PhotonView))]
public class InRoomChat : Photon.MonoBehaviour
{
	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rect GuiRect;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool IsVisible;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool AlignBottom;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<string> messages;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string inputLine;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector2 scrollPos;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string ChatRPC;

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x9FDF18", Offset = "0x9FDF18", VA = "0x9FDF18")]
	public void Start()
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x9FDF6C", Offset = "0x9FDF6C", VA = "0x9FDF6C")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x9FE4F0", Offset = "0x9FE4F0", VA = "0x9FE4F0")]
	[PunRPC]
	public void Chat(string newLine, PhotonMessageInfo mi)
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x9FE64C", Offset = "0x9FE64C", VA = "0x9FE64C")]
	public void AddLine(string newLine)
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x9FE6F4", Offset = "0x9FE6F4", VA = "0x9FE6F4")]
	public InRoomChat()
	{
	}
}
[Token(Token = "0x2000085")]
[RequireComponent(typeof(PhotonView))]
public class ManualPhotonViewAllocator : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Prefab;

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x9FE864", Offset = "0x9FE864", VA = "0x9FE864")]
	public void AllocateManualPhotonView()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x9FEA58", Offset = "0x9FEA58", VA = "0x9FEA58")]
	[PunRPC]
	public void InstantiateRpc(int viewID)
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x9FEC0C", Offset = "0x9FEC0C", VA = "0x9FEC0C")]
	public ManualPhotonViewAllocator()
	{
	}
}
[Token(Token = "0x2000086")]
[RequireComponent(typeof(PhotonView))]
public class MoveByKeys : Photon.MonoBehaviour
{
	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float JumpForce;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float JumpTimeout;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool isSprite;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float jumpingTime;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody body;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody2D body2d;

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x9FEC14", Offset = "0x9FEC14", VA = "0x9FEC14")]
	public void Start()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x9FECF4", Offset = "0x9FECF4", VA = "0x9FECF4")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x9FF0D8", Offset = "0x9FF0D8", VA = "0x9FF0D8")]
	public MoveByKeys()
	{
	}
}
[Token(Token = "0x2000087")]
[RequireComponent(typeof(PhotonView))]
public class NetworkCullingHandler : UnityEngine.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int orderIndex;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CullArea cullArea;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte> previousActiveCells;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<byte> activeCells;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PhotonView pView;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 lastPosition;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 currentPosition;

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x9FF0F4", Offset = "0x9FF0F4", VA = "0x9FF0F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x9FF280", Offset = "0x9FF280", VA = "0x9FF280")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x9FF3B4", Offset = "0x9FF3B4", VA = "0x9FF3B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x9FF8DC", Offset = "0x9FF8DC", VA = "0x9FF8DC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x9FF45C", Offset = "0x9FF45C", VA = "0x9FF45C")]
	private bool HaveActiveCellsChanged()
	{
		return default(bool);
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x9FF61C", Offset = "0x9FF61C", VA = "0x9FF61C")]
	private void UpdateInterestGroups()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x9FFCE8", Offset = "0x9FFCE8", VA = "0x9FFCE8", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x9FFE58", Offset = "0x9FFE58", VA = "0x9FFE58")]
	public NetworkCullingHandler()
	{
	}
}
[Token(Token = "0x2000088")]
[RequireComponent(typeof(PhotonView))]
public class OnClickDestroy : Photon.MonoBehaviour
{
	[Token(Token = "0x2000089")]
	[CompilerGenerated]
	private sealed class <DestroyRpc>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnClickDestroy <>4__this;

		[Token(Token = "0x170000B5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003B3")]
			[Address(RVA = "0xA00138", Offset = "0xA00138", VA = "0xA00138", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003B5")]
			[Address(RVA = "0xA00180", Offset = "0xA00180", VA = "0xA00180", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003B0")]
		[Address(RVA = "0x9FFFE4", Offset = "0x9FFFE4", VA = "0x9FFFE4")]
		[DebuggerHidden]
		public <DestroyRpc>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60003B1")]
		[Address(RVA = "0xA00014", Offset = "0xA00014", VA = "0xA00014", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003B2")]
		[Address(RVA = "0xA00018", Offset = "0xA00018", VA = "0xA00018", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003B4")]
		[Address(RVA = "0xA00140", Offset = "0xA00140", VA = "0xA00140", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool DestroyByRpc;

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x9FFE60", Offset = "0x9FFE60", VA = "0x9FFE60")]
	public void OnClick()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x9FFF7C", Offset = "0x9FFF7C", VA = "0x9FFF7C")]
	[PunRPC]
	[IteratorStateMachine(typeof(<DestroyRpc>d__2))]
	public IEnumerator DestroyRpc()
	{
		return null;
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xA0000C", Offset = "0xA0000C", VA = "0xA0000C")]
	public OnClickDestroy()
	{
	}
}
[Token(Token = "0x200008A")]
public class OnClickInstantiate : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Prefab;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int InstantiateType;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string[] InstantiateTypeNames;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool showGui;

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0xA00188", Offset = "0xA00188", VA = "0xA00188")]
	private void OnClick()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0xA003D0", Offset = "0xA003D0", VA = "0xA003D0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0xA004D0", Offset = "0xA004D0", VA = "0xA004D0")]
	public OnClickInstantiate()
	{
	}
}
[Token(Token = "0x200008B")]
public class OnJoinedInstantiate : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform SpawnPosition;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float PositionOffset;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] PrefabsToInstantiate;

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0xA005C0", Offset = "0xA005C0", VA = "0xA005C0")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0xA008F0", Offset = "0xA008F0", VA = "0xA008F0")]
	public OnJoinedInstantiate()
	{
	}
}
[Token(Token = "0x200008C")]
public class OnStartDelete : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60003BB")]
	[Address(RVA = "0xA00900", Offset = "0xA00900", VA = "0xA00900")]
	private void Start()
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0xA0096C", Offset = "0xA0096C", VA = "0xA0096C")]
	public OnStartDelete()
	{
	}
}
[Token(Token = "0x200008D")]
[RequireComponent(typeof(PhotonView))]
public class PickupItem : Photon.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float SecondsBeforeRespawn;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool PickupOnTrigger;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool PickupIsMine;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEngine.MonoBehaviour OnPickedUpCall;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool SentPickup;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public double TimeOfRespawn;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HashSet<PickupItem> DisabledPickupItems;

	[Token(Token = "0x170000B7")]
	public int ViewID
	{
		[Token(Token = "0x60003BD")]
		[Address(RVA = "0xA00974", Offset = "0xA00974", VA = "0xA00974")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0xA00994", Offset = "0xA00994", VA = "0xA00994")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0xA00B38", Offset = "0xA00B38", VA = "0xA00B38", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0xA00A54", Offset = "0xA00A54", VA = "0xA00A54")]
	public void Pickup()
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0xA00C74", Offset = "0xA00C74", VA = "0xA00C74")]
	public void Drop()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0xA00D50", Offset = "0xA00D50", VA = "0xA00D50")]
	public void Drop(Vector3 newPosition)
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0xA00E78", Offset = "0xA00E78", VA = "0xA00E78")]
	[PunRPC]
	public void PunPickup(PhotonMessageInfo msgInfo)
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0xA01278", Offset = "0xA01278", VA = "0xA01278")]
	internal void PickedUp(float timeUntilRespawn)
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0xA0139C", Offset = "0xA0139C", VA = "0xA0139C")]
	[PunRPC]
	internal void PunRespawn(Vector3 pos)
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0xA01460", Offset = "0xA01460", VA = "0xA01460")]
	[PunRPC]
	internal void PunRespawn()
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0xA0155C", Offset = "0xA0155C", VA = "0xA0155C")]
	public PickupItem()
	{
	}
}
[Token(Token = "0x200008E")]
[RequireComponent(typeof(PhotonView))]
public class PickupItemSimple : Photon.MonoBehaviour
{
	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float SecondsBeforeRespawn;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool PickupOnCollide;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool SentPickup;

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0xA015F8", Offset = "0xA015F8", VA = "0xA015F8")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0xA016B8", Offset = "0xA016B8", VA = "0xA016B8")]
	public void Pickup()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0xA0179C", Offset = "0xA0179C", VA = "0xA0179C")]
	[PunRPC]
	public void PunPickupSimple(PhotonMessageInfo msgInfo)
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0xA01954", Offset = "0xA01954", VA = "0xA01954")]
	public void RespawnAfter()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0xA019F4", Offset = "0xA019F4", VA = "0xA019F4")]
	public PickupItemSimple()
	{
	}
}
[Token(Token = "0x200008F")]
[RequireComponent(typeof(PhotonView))]
public class PickupItemSyncer : Photon.MonoBehaviour
{
	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IsWaitingForPickupInit;

	[Token(Token = "0x40003D0")]
	private const float TimeDeltaToIgnore = 0.2f;

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0xA01A04", Offset = "0xA01A04", VA = "0xA01A04")]
	public void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xA022EC", Offset = "0xA022EC", VA = "0xA022EC")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xA02468", Offset = "0xA02468", VA = "0xA02468")]
	public void AskForPickupItemSpawnTimes()
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xA026A8", Offset = "0xA026A8", VA = "0xA026A8")]
	[Obsolete("Use RequestForPickupItems(PhotonMessageInfo msgInfo) with corrected typing instead.")]
	[PunRPC]
	public void RequestForPickupTimes(PhotonMessageInfo msgInfo)
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xA026D4", Offset = "0xA026D4", VA = "0xA026D4")]
	[PunRPC]
	public void RequestForPickupItems(PhotonMessageInfo msgInfo)
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xA01A84", Offset = "0xA01A84", VA = "0xA01A84")]
	private void SendPickedUpItems(PhotonPlayer targetPlayer)
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xA0275C", Offset = "0xA0275C", VA = "0xA0275C")]
	[PunRPC]
	public void PickupItemInit(double timeBase, float[] inactivePickupsAndTimes)
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0xA02B28", Offset = "0xA02B28", VA = "0xA02B28")]
	public PickupItemSyncer()
	{
	}
}
[Token(Token = "0x2000090")]
[RequireComponent(typeof(InputToEvent))]
public class PointedAtGameObjectInfo : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60003D6")]
	[Address(RVA = "0xA02B30", Offset = "0xA02B30", VA = "0xA02B30")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0xA02E18", Offset = "0xA02E18", VA = "0xA02E18")]
	public PointedAtGameObjectInfo()
	{
	}
}
[Token(Token = "0x2000091")]
public class PunPlayerScores : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40003D1")]
	public const string PlayerScoreProp = "score";

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0xA02E20", Offset = "0xA02E20", VA = "0xA02E20")]
	public PunPlayerScores()
	{
	}
}
[Token(Token = "0x2000092")]
public static class ScoreExtensions
{
	[Token(Token = "0x60003D9")]
	[Address(RVA = "0xA02E28", Offset = "0xA02E28", VA = "0xA02E28")]
	public static void SetScore(this PhotonPlayer player, int newScore)
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0xA02F00", Offset = "0xA02F00", VA = "0xA02F00")]
	public static void AddScore(this PhotonPlayer player, int scoreToAddToCurrent)
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0xA02FEC", Offset = "0xA02FEC", VA = "0xA02FEC")]
	public static int GetScore(this PhotonPlayer player)
	{
		return default(int);
	}
}
[Token(Token = "0x2000093")]
public class PunTeams : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000094")]
	public enum Team : byte
	{
		[Token(Token = "0x40003D5")]
		none,
		[Token(Token = "0x40003D6")]
		red,
		[Token(Token = "0x40003D7")]
		blue
	}

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<Team, List<PhotonPlayer>> PlayersPerTeam;

	[Token(Token = "0x40003D3")]
	public const string TeamPlayerProp = "team";

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0xA030B0", Offset = "0xA030B0", VA = "0xA030B0")]
	public void Start()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0xA034E4", Offset = "0xA034E4", VA = "0xA034E4")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0xA03570", Offset = "0xA03570", VA = "0xA03570")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0xA03A3C", Offset = "0xA03A3C", VA = "0xA03A3C")]
	public void OnLeftRoom()
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0xA03A40", Offset = "0xA03A40", VA = "0xA03A40")]
	public void OnPhotonPlayerPropertiesChanged(object[] playerAndUpdatedProps)
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0xA03A44", Offset = "0xA03A44", VA = "0xA03A44")]
	public void OnPhotonPlayerDisconnected(PhotonPlayer otherPlayer)
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0xA03A48", Offset = "0xA03A48", VA = "0xA03A48")]
	public void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0xA03574", Offset = "0xA03574", VA = "0xA03574")]
	public void UpdateTeams()
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0xA03B10", Offset = "0xA03B10", VA = "0xA03B10")]
	public PunTeams()
	{
	}
}
[Token(Token = "0x2000095")]
public static class TeamExtensions
{
	[Token(Token = "0x60003E5")]
	[Address(RVA = "0xA03A4C", Offset = "0xA03A4C", VA = "0xA03A4C")]
	public static PunTeams.Team GetTeam(this PhotonPlayer player)
	{
		return default(PunTeams.Team);
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0xA03B18", Offset = "0xA03B18", VA = "0xA03B18")]
	public static void SetTeam(this PhotonPlayer player, PunTeams.Team team)
	{
	}
}
[Token(Token = "0x2000096")]
public class PunTurnManager : PunBehaviour
{
	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float TurnDuration;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IPunTurnManagerCallbacks TurnManagerListener;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly HashSet<PhotonPlayer> finishedPlayers;

	[Token(Token = "0x40003DB")]
	public const byte TurnManagerEventOffset = 0;

	[Token(Token = "0x40003DC")]
	public const byte EvMove = 1;

	[Token(Token = "0x40003DD")]
	public const byte EvFinalMove = 2;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _isOverCallProcessed;

	[Token(Token = "0x170000B8")]
	public int Turn
	{
		[Token(Token = "0x60003E7")]
		[Address(RVA = "0xA03D14", Offset = "0xA03D14", VA = "0xA03D14")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60003E8")]
		[Address(RVA = "0xA03EA4", Offset = "0xA03EA4", VA = "0xA03EA4")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B9")]
	public float ElapsedTimeInTurn
	{
		[Token(Token = "0x60003E9")]
		[Address(RVA = "0xA040C4", Offset = "0xA040C4", VA = "0xA040C4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000BA")]
	public float RemainingSecondsInTurn
	{
		[Token(Token = "0x60003EA")]
		[Address(RVA = "0xA04278", Offset = "0xA04278", VA = "0xA04278")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000BB")]
	public bool IsCompletedByAll
	{
		[Token(Token = "0x60003EB")]
		[Address(RVA = "0xA042A0", Offset = "0xA042A0", VA = "0xA042A0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000BC")]
	public bool IsFinishedByMe
	{
		[Token(Token = "0x60003EC")]
		[Address(RVA = "0xA04358", Offset = "0xA04358", VA = "0xA04358")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000BD")]
	public bool IsOver
	{
		[Token(Token = "0x60003ED")]
		[Address(RVA = "0xA043DC", Offset = "0xA043DC", VA = "0xA043DC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0xA0440C", Offset = "0xA0440C", VA = "0xA0440C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xA044B0", Offset = "0xA044B0", VA = "0xA044B0")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xA045B0", Offset = "0xA045B0", VA = "0xA045B0")]
	public void BeginTurn()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xA045CC", Offset = "0xA045CC", VA = "0xA045CC")]
	public void SendMove(object move, bool finished)
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xA04D38", Offset = "0xA04D38", VA = "0xA04D38")]
	public bool GetPlayerFinishedTurn(PhotonPlayer player)
	{
		return default(bool);
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xA049B0", Offset = "0xA049B0", VA = "0xA049B0")]
	public void OnEvent(byte eventCode, object content, int senderId)
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xA04DA4", Offset = "0xA04DA4", VA = "0xA04DA4", Slot = "52")]
	public override void OnPhotonCustomRoomPropertiesChanged(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xA04EC8", Offset = "0xA04EC8", VA = "0xA04EC8")]
	public PunTurnManager()
	{
	}
}
[Token(Token = "0x2000097")]
public interface IPunTurnManagerCallbacks
{
	[Token(Token = "0x60003F6")]
	void OnTurnBegins(int turn);

	[Token(Token = "0x60003F7")]
	void OnTurnCompleted(int turn);

	[Token(Token = "0x60003F8")]
	void OnPlayerMove(PhotonPlayer player, int turn, object move);

	[Token(Token = "0x60003F9")]
	void OnPlayerFinished(PhotonPlayer player, int turn, object move);

	[Token(Token = "0x60003FA")]
	void OnTurnTimeEnds(int turn);
}
[Token(Token = "0x2000098")]
public static class TurnExtensions
{
	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string TurnPropKey;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string TurnStartPropKey;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string FinishedTurnPropKey;

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0xA03F44", Offset = "0xA03F44", VA = "0xA03F44")]
	public static void SetTurn(this Room room, int turn, bool setStartTime = false)
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0xA03D98", Offset = "0xA03D98", VA = "0xA03D98")]
	public static int GetTurn(this RoomInfo room)
	{
		return default(int);
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0xA0416C", Offset = "0xA0416C", VA = "0xA0416C")]
	public static int GetTurnStart(this RoomInfo room)
	{
		return default(int);
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0xA04F4C", Offset = "0xA04F4C", VA = "0xA04F4C")]
	public static int GetFinishedTurn(this PhotonPlayer player)
	{
		return default(int);
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0xA04850", Offset = "0xA04850", VA = "0xA04850")]
	public static void SetFinishedTurn(this PhotonPlayer player, int turn)
	{
	}
}
[Token(Token = "0x2000099")]
public class QuitOnEscapeOrBack : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000401")]
	[Address(RVA = "0xA05168", Offset = "0xA05168", VA = "0xA05168")]
	private void Update()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0xA05190", Offset = "0xA05190", VA = "0xA05190")]
	public QuitOnEscapeOrBack()
	{
	}
}
[Token(Token = "0x200009A")]
public class ShowStatusWhenConnecting : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GUISkin Skin;

	[Token(Token = "0x6000403")]
	[Address(RVA = "0xA05198", Offset = "0xA05198", VA = "0xA05198")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0xA054A8", Offset = "0xA054A8", VA = "0xA054A8")]
	private string GetConnectingDots()
	{
		return null;
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0xA0559C", Offset = "0xA0559C", VA = "0xA0559C")]
	public ShowStatusWhenConnecting()
	{
	}
}
[Token(Token = "0x200009B")]
[RequireComponent(typeof(PhotonView))]
public class SmoothSyncMovement : Photon.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float SmoothingDelay;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 correctPlayerPos;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion correctPlayerRot;

	[Token(Token = "0x6000406")]
	[Address(RVA = "0xA055A4", Offset = "0xA055A4", VA = "0xA055A4")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0xA057A8", Offset = "0xA057A8", VA = "0xA057A8", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xA05910", Offset = "0xA05910", VA = "0xA05910")]
	public void Update()
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0xA05AA8", Offset = "0xA05AA8", VA = "0xA05AA8")]
	public SmoothSyncMovement()
	{
	}
}
[Token(Token = "0x200009C")]
public class SupportLogger : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool LogTrafficStats;

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xA05B48", Offset = "0xA05B48", VA = "0xA05B48")]
	public void Start()
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xA05C58", Offset = "0xA05C58", VA = "0xA05C58")]
	public SupportLogger()
	{
	}
}
[Token(Token = "0x200009D")]
public class SupportLogging : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool LogTrafficStats;

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xA05C68", Offset = "0xA05C68", VA = "0xA05C68")]
	public void Start()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xA05CD0", Offset = "0xA05CD0", VA = "0xA05CD0")]
	protected void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xA05DDC", Offset = "0xA05DDC", VA = "0xA05DDC")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xA05DE4", Offset = "0xA05DE4", VA = "0xA05DE4")]
	public void LogStats()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xA05EAC", Offset = "0xA05EAC", VA = "0xA05EAC")]
	private void LogBasics()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xA06124", Offset = "0xA06124", VA = "0xA06124")]
	public void OnConnectedToPhoton()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xA061D8", Offset = "0xA061D8", VA = "0xA061D8")]
	public void OnFailedToConnectToPhoton(DisconnectCause cause)
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xA062C8", Offset = "0xA062C8", VA = "0xA062C8")]
	public void OnJoinedLobby()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0xA063A8", Offset = "0xA063A8", VA = "0xA063A8")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0xA06620", Offset = "0xA06620", VA = "0xA06620")]
	public void OnCreatedRoom()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0xA06898", Offset = "0xA06898", VA = "0xA06898")]
	public void OnLeftRoom()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0xA06900", Offset = "0xA06900", VA = "0xA06900")]
	public void OnDisconnectedFromPhoton()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xA06968", Offset = "0xA06968", VA = "0xA06968")]
	public SupportLogging()
	{
	}
}
[Token(Token = "0x200009E")]
[DisallowMultipleComponent]
public class PhotonVoiceHandler : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int updateInterval;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nextSendTickCount;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool sendThreadShouldRun;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Stopwatch timerToStopConnectionInBackground;

	[Token(Token = "0x6000419")]
	[Address(RVA = "0xA06970", Offset = "0xA06970", VA = "0xA06970")]
	private static void StartFallbackSendAckThread()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0xA06A64", Offset = "0xA06A64", VA = "0xA06A64")]
	private static void StopFallbackSendAckThread()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0xA06AAC", Offset = "0xA06AAC", VA = "0xA06AAC")]
	private static bool FallbackSendAckThread()
	{
		return default(bool);
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xA06D84", Offset = "0xA06D84", VA = "0xA06D84")]
	[RuntimeInitializeOnLoadMethod]
	private static void RuntimeInitializeOnLoad()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0xA06EE8", Offset = "0xA06EE8", VA = "0xA06EE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0xA07298", Offset = "0xA07298", VA = "0xA07298")]
	protected void Update()
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0xA074E0", Offset = "0xA074E0", VA = "0xA074E0")]
	protected void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0xA075E8", Offset = "0xA075E8", VA = "0xA075E8")]
	protected void OnDestroy()
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0xA07630", Offset = "0xA07630", VA = "0xA07630")]
	protected void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0xA076B0", Offset = "0xA076B0", VA = "0xA076B0")]
	public PhotonVoiceHandler()
	{
	}
}
[Token(Token = "0x200009F")]
[DisallowMultipleComponent]
public class PhotonVoiceNetwork : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PhotonVoiceNetwork _instance;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static object instanceLock;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool destroyed;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static float BackgroundTimeout;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal UnityVoiceFrontend client;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string unityMicrophoneDevice;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int photonMicrophoneDeviceID;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioInEnumerator photonMicEnumerator;

	[Token(Token = "0x170000BE")]
	internal static PhotonVoiceNetwork instance
	{
		[Token(Token = "0x6000423")]
		[Address(RVA = "0xA06FC4", Offset = "0xA06FC4", VA = "0xA06FC4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000424")]
		[Address(RVA = "0xA076B8", Offset = "0xA076B8", VA = "0xA076B8")]
		set
		{
		}
	}

	[Token(Token = "0x170000BF")]
	public static Func<PhotonVoiceRecorder, IAudioSource> AudioSourceFactory
	{
		[Token(Token = "0x6000429")]
		[Address(RVA = "0xA07DF8", Offset = "0xA07DF8", VA = "0xA07DF8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600042A")]
		[Address(RVA = "0xA07E50", Offset = "0xA07E50", VA = "0xA07E50")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000C0")]
	public static UnityVoiceFrontend Client
	{
		[Token(Token = "0x600042D")]
		[Address(RVA = "0xA06CC4", Offset = "0xA06CC4", VA = "0xA06CC4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C1")]
	public static VoiceClient VoiceClient
	{
		[Token(Token = "0x600042E")]
		[Address(RVA = "0xA0827C", Offset = "0xA0827C", VA = "0xA0827C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C2")]
	public static ExitGames.Client.Photon.LoadBalancing.ClientState ClientState
	{
		[Token(Token = "0x600042F")]
		[Address(RVA = "0xA082E0", Offset = "0xA082E0", VA = "0xA082E0")]
		get
		{
			return default(ExitGames.Client.Photon.LoadBalancing.ClientState);
		}
	}

	[Token(Token = "0x170000C3")]
	public static string CurrentRoomName
	{
		[Token(Token = "0x6000430")]
		[Address(RVA = "0xA08344", Offset = "0xA08344", VA = "0xA08344")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C4")]
	public static AudioInEnumerator PhotonMicrophoneEnumerator
	{
		[Token(Token = "0x6000431")]
		[Address(RVA = "0xA083F4", Offset = "0xA083F4", VA = "0xA083F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C5")]
	public static string MicrophoneDevice
	{
		[Token(Token = "0x6000432")]
		[Address(RVA = "0xA08450", Offset = "0xA08450", VA = "0xA08450")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000433")]
		[Address(RVA = "0xA084AC", Offset = "0xA084AC", VA = "0xA084AC")]
		set
		{
		}
	}

	[Token(Token = "0x170000C6")]
	public static int PhotonMicrophoneDeviceID
	{
		[Token(Token = "0x6000434")]
		[Address(RVA = "0xA08A90", Offset = "0xA08A90", VA = "0xA08A90")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000435")]
		[Address(RVA = "0xA08AEC", Offset = "0xA08AEC", VA = "0xA08AEC")]
		set
		{
		}
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0xA07998", Offset = "0xA07998", VA = "0xA07998")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0xA07A7C", Offset = "0xA07A7C", VA = "0xA07A7C")]
	private PhotonVoiceNetwork()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0xA07D20", Offset = "0xA07D20", VA = "0xA07D20")]
	[RuntimeInitializeOnLoadMethod]
	public static void RuntimeInitializeOnLoad()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0xA07DA4", Offset = "0xA07DA4", VA = "0xA07DA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0xA07EAC", Offset = "0xA07EAC", VA = "0xA07EAC")]
	public static bool Connect()
	{
		return default(bool);
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0xA06D20", Offset = "0xA06D20", VA = "0xA06D20")]
	public static void Disconnect()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0xA08EDC", Offset = "0xA08EDC", VA = "0xA08EDC")]
	protected void OnEnable()
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0xA08F6C", Offset = "0xA08F6C", VA = "0xA08F6C")]
	protected void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0xA09030", Offset = "0xA09030", VA = "0xA09030")]
	protected void Update()
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0xA09128", Offset = "0xA09128", VA = "0xA09128")]
	private void OnJoinedRoom()
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0xA09338", Offset = "0xA09338", VA = "0xA09338")]
	private void OnLeftRoom()
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0xA094B0", Offset = "0xA094B0", VA = "0xA094B0")]
	private void OnDisconnectedFromPhoton()
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0xA09628", Offset = "0xA09628", VA = "0xA09628")]
	internal static void LinkSpeakerToRemoteVoice(PhotonVoiceSpeaker speaker)
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0xA09A48", Offset = "0xA09A48", VA = "0xA09A48")]
	internal static void UnlinkSpeakerFromRemoteVoice(PhotonVoiceSpeaker speaker)
	{
	}
}
[Token(Token = "0x20000A0")]
public class UnityVoiceFrontend : LoadBalancingFrontend
{
	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Dictionary<KeyValuePair<int, byte>, PhotonVoiceSpeaker> voiceSpeakers;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool reconnect;

	[Token(Token = "0x170000C7")]
	public Action<int, byte, VoiceInfo> OnRemoteVoiceInfoAction
	{
		[Token(Token = "0x600043F")]
		[Address(RVA = "0xA0A048", Offset = "0xA0A048", VA = "0xA0A048")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000440")]
		[Address(RVA = "0xA0A050", Offset = "0xA0A050", VA = "0xA0A050")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000C8")]
	public Action<int, byte> OnRemoteVoiceRemoveAction
	{
		[Token(Token = "0x6000441")]
		[Address(RVA = "0xA0A058", Offset = "0xA0A058", VA = "0xA0A058")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000442")]
		[Address(RVA = "0xA0A060", Offset = "0xA0A060", VA = "0xA0A060")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000C9")]
	public Action<int, byte, float[]> OnAudioFrameAction
	{
		[Token(Token = "0x6000443")]
		[Address(RVA = "0xA0A068", Offset = "0xA0A068", VA = "0xA0A068")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000444")]
		[Address(RVA = "0xA0A070", Offset = "0xA0A070", VA = "0xA0A070")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000CA")]
	public new Action<ExitGames.Client.Photon.LoadBalancing.ClientState> OnStateChangeAction
	{
		[Token(Token = "0x6000445")]
		[Address(RVA = "0xA0A078", Offset = "0xA0A078", VA = "0xA0A078")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000446")]
		[Address(RVA = "0xA0A080", Offset = "0xA0A080", VA = "0xA0A080")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000CB")]
	public new Action<OperationResponse> OnOpResponseAction
	{
		[Token(Token = "0x6000447")]
		[Address(RVA = "0xA0A088", Offset = "0xA0A088", VA = "0xA0A088")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000448")]
		[Address(RVA = "0xA0A090", Offset = "0xA0A090", VA = "0xA0A090")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0xA07B20", Offset = "0xA07B20", VA = "0xA07B20")]
	internal UnityVoiceFrontend(ConnectionProtocol connetProtocol)
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0xA092BC", Offset = "0xA092BC", VA = "0xA092BC")]
	public void Reconnect()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0xA0A098", Offset = "0xA0A098", VA = "0xA0A098", Slot = "14")]
	public override void DebugReturn(DebugLevel level, string message)
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0xA0A208", Offset = "0xA0A208", VA = "0xA0A208")]
	public void OnOpResponse(OperationResponse resp)
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0xA0A224", Offset = "0xA0A224", VA = "0xA0A224")]
	private void linkVoice(int playerId, byte voiceId, VoiceInfo voiceInfo, PhotonVoiceSpeaker speaker)
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0xA0A658", Offset = "0xA0A658", VA = "0xA0A658")]
	public void OnRemoteVoiceInfo(int channelId, int playerId, byte voiceId, VoiceInfo voiceInfo, ref RemoteVoiceOptions options)
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0xA09690", Offset = "0xA09690", VA = "0xA09690")]
	public void LinkSpeakerToRemoteVoice(PhotonVoiceSpeaker speaker)
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0xA0AABC", Offset = "0xA0AABC", VA = "0xA0AABC")]
	public void OnRemoteVoiceRemove(int playerId, byte voiceId)
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0xA0AD44", Offset = "0xA0AD44", VA = "0xA0AD44")]
	private bool unlinkSpeaker(KeyValuePair<int, byte> key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0xA09AD8", Offset = "0xA09AD8", VA = "0xA09AD8")]
	public void UnlinkSpeakerFromRemoteVoice(PhotonVoiceSpeaker speaker)
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0xA0ADF0", Offset = "0xA0ADF0", VA = "0xA0ADF0")]
	public void OnAudioFrame(int playerId, byte voiceId, float[] frame)
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0xA0B0F8", Offset = "0xA0B0F8", VA = "0xA0B0F8")]
	public void OnStateChange(ExitGames.Client.Photon.LoadBalancing.ClientState state)
	{
	}
}
[Token(Token = "0x20000A2")]
[RequireComponent(typeof(PhotonVoiceSpeaker))]
[DisallowMultipleComponent]
[AddComponentMenu("Photon Voice/Photon Voice Recorder")]
public class PhotonVoiceRecorder : Photon.MonoBehaviour
{
	[Token(Token = "0x20000A3")]
	public enum AudioSource
	{
		[Token(Token = "0x400040A")]
		Microphone,
		[Token(Token = "0x400040B")]
		AudioClip,
		[Token(Token = "0x400040C")]
		Factory
	}

	[Token(Token = "0x20000A4")]
	public enum MicAudioSourceType
	{
		[Token(Token = "0x400040E")]
		Settings,
		[Token(Token = "0x400040F")]
		Unity,
		[Token(Token = "0x4000410")]
		Photon
	}

	[Token(Token = "0x20000A5")]
	public enum SampleTypeConv
	{
		[Token(Token = "0x4000412")]
		None,
		[Token(Token = "0x4000413")]
		Short,
		[Token(Token = "0x4000414")]
		ShortAuto
	}

	[Token(Token = "0x20000A6")]
	public class PhotonVoiceCreatedParams
	{
		[Token(Token = "0x170000D7")]
		public LocalVoice Voice
		{
			[Token(Token = "0x6000474")]
			[Address(RVA = "0xA0D5A8", Offset = "0xA0D5A8", VA = "0xA0D5A8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000475")]
			[Address(RVA = "0xA0D5B0", Offset = "0xA0D5B0", VA = "0xA0D5B0")]
			[CompilerGenerated]
			internal set
			{
			}
		}

		[Token(Token = "0x170000D8")]
		public IAudioSource AudioSource
		{
			[Token(Token = "0x6000476")]
			[Address(RVA = "0xA0D5B8", Offset = "0xA0D5B8", VA = "0xA0D5B8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000477")]
			[Address(RVA = "0xA0D5C0", Offset = "0xA0D5C0", VA = "0xA0D5C0")]
			[CompilerGenerated]
			internal set
			{
			}
		}

		[Token(Token = "0x6000478")]
		[Address(RVA = "0xA0CF60", Offset = "0xA0CF60", VA = "0xA0CF60")]
		public PhotonVoiceCreatedParams()
		{
		}
	}

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LocalVoice voice;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string microphoneDevice;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int photonMicrophoneDeviceID;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private IAudioSource audioSource;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource Source;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public MicAudioSourceType MicrophoneType;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SampleTypeConv TypeConvert;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool forceShort;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip AudioClip;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool LoopAudioClip;

	[Token(Token = "0x170000CC")]
	protected ILocalVoiceAudio voiceAudio
	{
		[Token(Token = "0x6000458")]
		[Address(RVA = "0xA0B3E0", Offset = "0xA0B3E0", VA = "0xA0B3E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CD")]
	public ExitGames.Client.Photon.Voice.AudioUtil.IVoiceDetector VoiceDetector
	{
		[Token(Token = "0x6000459")]
		[Address(RVA = "0xA0B44C", Offset = "0xA0B44C", VA = "0xA0B44C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CE")]
	public string MicrophoneDevice
	{
		[Token(Token = "0x600045A")]
		[Address(RVA = "0xA0B520", Offset = "0xA0B520", VA = "0xA0B520")]
		get
		{
			return null;
		}
		[Token(Token = "0x600045B")]
		[Address(RVA = "0xA089AC", Offset = "0xA089AC", VA = "0xA089AC")]
		set
		{
		}
	}

	[Token(Token = "0x170000CF")]
	public int PhotonMicrophoneDeviceID
	{
		[Token(Token = "0x600045C")]
		[Address(RVA = "0xA0BA44", Offset = "0xA0BA44", VA = "0xA0BA44")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600045D")]
		[Address(RVA = "0xA08DC4", Offset = "0xA08DC4", VA = "0xA08DC4")]
		set
		{
		}
	}

	[Token(Token = "0x170000D0")]
	public byte AudioGroup
	{
		[Token(Token = "0x600045F")]
		[Address(RVA = "0xA0C230", Offset = "0xA0C230", VA = "0xA0C230")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6000460")]
		[Address(RVA = "0xA0C24C", Offset = "0xA0C24C", VA = "0xA0C24C")]
		set
		{
		}
	}

	[Token(Token = "0x170000D1")]
	public bool IsTransmitting
	{
		[Token(Token = "0x6000461")]
		[Address(RVA = "0xA0C268", Offset = "0xA0C268", VA = "0xA0C268")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000D2")]
	public ExitGames.Client.Photon.Voice.AudioUtil.ILevelMeter LevelMeter
	{
		[Token(Token = "0x6000462")]
		[Address(RVA = "0xA0C284", Offset = "0xA0C284", VA = "0xA0C284")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D3")]
	public bool Transmit
	{
		[Token(Token = "0x6000469")]
		[Address(RVA = "0xA0D060", Offset = "0xA0D060", VA = "0xA0D060")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600046A")]
		[Address(RVA = "0xA0D07C", Offset = "0xA0D07C", VA = "0xA0D07C")]
		set
		{
		}
	}

	[Token(Token = "0x170000D4")]
	public bool Detect
	{
		[Token(Token = "0x600046B")]
		[Address(RVA = "0xA0D09C", Offset = "0xA0D09C", VA = "0xA0D09C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600046C")]
		[Address(RVA = "0xA0D1B8", Offset = "0xA0D1B8", VA = "0xA0D1B8")]
		set
		{
		}
	}

	[Token(Token = "0x170000D5")]
	public bool DebugEchoMode
	{
		[Token(Token = "0x600046D")]
		[Address(RVA = "0xA0BA4C", Offset = "0xA0BA4C", VA = "0xA0BA4C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600046E")]
		[Address(RVA = "0xA0BA68", Offset = "0xA0BA68", VA = "0xA0BA68")]
		set
		{
		}
	}

	[Token(Token = "0x170000D6")]
	public bool VoiceDetectorCalibrating
	{
		[Token(Token = "0x6000470")]
		[Address(RVA = "0xA0D3BC", Offset = "0xA0D3BC", VA = "0xA0D3BC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0xA0B528", Offset = "0xA0B528", VA = "0xA0B528")]
	public void UpdateAudioSource()
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0xA0C330", Offset = "0xA0C330", VA = "0xA0C330")]
	private void Start()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0xA0BA88", Offset = "0xA0BA88", VA = "0xA0BA88")]
	private LocalVoice createLocalVoiceAudioAndSource()
	{
		return null;
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0xA0C684", Offset = "0xA0C684", VA = "0xA0C684", Slot = "4")]
	protected virtual LocalVoice createLocalVoiceAudio(VoiceInfo voiceInfo, IAudioSource source)
	{
		return null;
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0xA0CEB4", Offset = "0xA0CEB4", VA = "0xA0CEB4", Slot = "5")]
	protected virtual void sendPhotonVoiceCreatedMessage()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0xA0CF68", Offset = "0xA0CF68", VA = "0xA0CF68")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0xA0D05C", Offset = "0xA0D05C", VA = "0xA0D05C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0xA0D2E0", Offset = "0xA0D2E0", VA = "0xA0D2E0")]
	public void VoiceDetectorCalibrate(int durationMs)
	{
	}

	[Token(Token = "0x6000471")]
	private string tostr<T>(T[] x, int lim = 10)
	{
		return null;
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0xA0D468", Offset = "0xA0D468", VA = "0xA0D468")]
	public string ToStringFull()
	{
		return null;
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0xA0D530", Offset = "0xA0D530", VA = "0xA0D530")]
	public PhotonVoiceRecorder()
	{
	}
}
[Token(Token = "0x20000A9")]
[DisallowMultipleComponent]
public class PhotonVoiceSettings : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20000AA")]
	public enum MicAudioSourceType
	{
		[Token(Token = "0x400042A")]
		Unity,
		[Token(Token = "0x400042B")]
		Photon
	}

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool WorkInOfflineMode;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool AutoConnect;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool AutoDisconnect;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool AutoTransmit;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public SamplingRate SamplingRate;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OpusCodec.FrameDuration FrameDuration;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int Bitrate;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool VoiceDetection;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float VoiceDetectionThreshold;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int PlayDelayMs;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public MicAudioSourceType MicrophoneType;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int DebugLostPercent;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool DebugInfo;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool Encrypt;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PhotonVoiceSettings instance;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static object instanceLock;

	[Token(Token = "0x170000D9")]
	public static PhotonVoiceSettings Instance
	{
		[Token(Token = "0x600047D")]
		[Address(RVA = "0xA08748", Offset = "0xA08748", VA = "0xA08748")]
		get
		{
			return null;
		}
		[Token(Token = "0x600047E")]
		[Address(RVA = "0xA0D678", Offset = "0xA0D678", VA = "0xA0D678")]
		private set
		{
		}
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0xA0D958", Offset = "0xA0D958", VA = "0xA0D958")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0xA0D9AC", Offset = "0xA0D9AC", VA = "0xA0D9AC")]
	public PhotonVoiceSettings()
	{
	}
}
[Token(Token = "0x20000AB")]
[RequireComponent(typeof(AudioSource))]
[DisallowMultipleComponent]
[AddComponentMenu("Photon Voice/Photon Voice Speaker")]
public class PhotonVoiceSpeaker : Photon.MonoBehaviour
{
	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IAudioOut player;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool started;

	[Token(Token = "0x170000DA")]
	public long LastRecvTime
	{
		[Token(Token = "0x6000482")]
		[Address(RVA = "0xA0DA5C", Offset = "0xA0DA5C", VA = "0xA0DA5C")]
		[CompilerGenerated]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000483")]
		[Address(RVA = "0xA0DA64", Offset = "0xA0DA64", VA = "0xA0DA64")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000DB")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000484")]
		[Address(RVA = "0xA0DA6C", Offset = "0xA0DA6C", VA = "0xA0DA6C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000DC")]
	public int CurrentBufferLag
	{
		[Token(Token = "0x6000485")]
		[Address(RVA = "0xA0DB0C", Offset = "0xA0DB0C", VA = "0xA0DB0C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000DD")]
	public bool IsVoiceLinked
	{
		[Token(Token = "0x6000486")]
		[Address(RVA = "0xA0DBB0", Offset = "0xA0DBB0", VA = "0xA0DBB0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0xA0DBD0", Offset = "0xA0DBD0", VA = "0xA0DBD0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0xA0DCB4", Offset = "0xA0DCB4", VA = "0xA0DCB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0xA0A578", Offset = "0xA0A578", VA = "0xA0A578")]
	internal void OnVoiceLinked(int frequency, int channels, int frameSamplesPerChannel, int playDelayMs)
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0xA0ADEC", Offset = "0xA0ADEC", VA = "0xA0ADEC")]
	internal void OnVoiceUnlinked()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0xA0DDB4", Offset = "0xA0DDB4", VA = "0xA0DDB4")]
	private void Update()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0xA0DE58", Offset = "0xA0DE58", VA = "0xA0DE58")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0xA0DEB4", Offset = "0xA0DEB4", VA = "0xA0DEB4")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0xA0DD08", Offset = "0xA0DD08", VA = "0xA0DD08")]
	private void Cleanup()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0xA0AFFC", Offset = "0xA0AFFC", VA = "0xA0AFFC")]
	internal void OnAudioFrame(float[] frame)
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0xA0DEB8", Offset = "0xA0DEB8", VA = "0xA0DEB8")]
	public PhotonVoiceSpeaker()
	{
	}
}
[Token(Token = "0x20000AC")]
public class AnimationListener : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000491")]
	[Address(RVA = "0xA0DEC0", Offset = "0xA0DEC0", VA = "0xA0DEC0")]
	public void Radish_hello()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0xA0DF70", Offset = "0xA0DF70", VA = "0xA0DF70")]
	public void cat()
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0xA0E020", Offset = "0xA0E020", VA = "0xA0E020")]
	public void CatScratch()
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0xA0E0D0", Offset = "0xA0E0D0", VA = "0xA0E0D0")]
	public void stove()
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0xA0E180", Offset = "0xA0E180", VA = "0xA0E180")]
	public void Openstove()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0xA0E230", Offset = "0xA0E230", VA = "0xA0E230")]
	public void Whooshstove()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0xA0E2E0", Offset = "0xA0E2E0", VA = "0xA0E2E0")]
	public void Woodstove()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0xA0E390", Offset = "0xA0E390", VA = "0xA0E390")]
	public void patbelly()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0xA0E440", Offset = "0xA0E440", VA = "0xA0E440")]
	public void walk()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0xA0E4F0", Offset = "0xA0E4F0", VA = "0xA0E4F0")]
	public void arm()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0xA0E608", Offset = "0xA0E608", VA = "0xA0E608")]
	public void sit()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0xA0E720", Offset = "0xA0E720", VA = "0xA0E720")]
	public void rise()
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0xA0E838", Offset = "0xA0E838", VA = "0xA0E838")]
	public void whoosh()
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0xA0E950", Offset = "0xA0E950", VA = "0xA0E950")]
	public AnimationListener()
	{
	}
}
[Serializable]
[Token(Token = "0x20000AD")]
[CreateAssetMenu(fileName = "NewCreativeRecipe", menuName = "Creative Recipes/Creative Recipe Data")]
public class CreativeRecipeData : ScriptableObject
{
	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string id;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public IngredientType[] ingredients;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FryState[] grillStates;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool[] isAnyBreadType;

	[Token(Token = "0x4000433")]
	private const string localizationKey = "creative_recipe_";

	[Token(Token = "0x4000434")]
	private const string localizationHintKey = "creative_recipe_hint_";

	[Token(Token = "0x170000DE")]
	public string LocalizationKey
	{
		[Token(Token = "0x60004A0")]
		[Address(RVA = "0xA0E95C", Offset = "0xA0E95C", VA = "0xA0E95C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000DF")]
	public string HintLocalizationKey
	{
		[Token(Token = "0x60004A1")]
		[Address(RVA = "0xA0E9B0", Offset = "0xA0E9B0", VA = "0xA0E9B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0xA0E958", Offset = "0xA0E958", VA = "0xA0E958")]
	public void VerifyIntegrity()
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0xA0E964", Offset = "0xA0E964", VA = "0xA0E964")]
	public static string CreateLocalizationKey(string id)
	{
		return null;
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0xA0E9B8", Offset = "0xA0E9B8", VA = "0xA0E9B8")]
	public static string CreateLocalizationHintKey(string id)
	{
		return null;
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0xA0EA04", Offset = "0xA0EA04", VA = "0xA0EA04")]
	public CreativeRecipeData()
	{
	}
}
[Token(Token = "0x20000AE")]
[CreateAssetMenu(fileName = "NewCreativeRecipeList", menuName = "Creative Recipes/Creative Recipe List")]
public class CreativeRecipeList : ScriptableObject
{
	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<CreativeRecipeData> creativeRecipeDataList;

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0xA0EAAC", Offset = "0xA0EAAC", VA = "0xA0EAAC")]
	public CreativeRecipeList()
	{
	}
}
[Token(Token = "0x20000AF")]
[CreateAssetMenu(fileName = "NewCupData", menuName = "Cup Data/Cup Data")]
public class CupData : ScriptableObject
{
	[Token(Token = "0x20000B0")]
	public enum Environment
	{
		[Token(Token = "0x4000443")]
		CozyVillage,
		[Token(Token = "0x4000444")]
		EnchantedForest,
		[Token(Token = "0x4000445")]
		RoyalCastle,
		[Token(Token = "0x4000446")]
		ThroneRoom,
		[Token(Token = "0x4000447")]
		EndlessMode,
		[Token(Token = "0x4000448")]
		CreativeMode
	}

	[Token(Token = "0x20000B1")]
	public enum CupRewardType
	{
		[Token(Token = "0x400044A")]
		Coin,
		[Token(Token = "0x400044B")]
		Potion,
		[Token(Token = "0x400044C")]
		Item
	}

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool finalCup;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int[] roundCoinRewards;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private int[] cupCoinRewards;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private CupRewardType[] cupOneTimeRewardTypes;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private int[] cupOneTimeCoinRewards;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private ConsumableType[] cupOneTimeConsumableRewards;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ItemRewardID[] cupOneTimeItemRewards;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public LevelData[] levels;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string cupNameID;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Environment cupEnvironment;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Sprite storyPicture;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string storyTextID;

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0xA0EAB4", Offset = "0xA0EAB4", VA = "0xA0EAB4")]
	public int GetRoundCoinReward(int starsEarned)
	{
		return default(int);
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0xA0EAFC", Offset = "0xA0EAFC", VA = "0xA0EAFC")]
	public int GetCupCoinReward(MapProgression.Rank rank)
	{
		return default(int);
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0xA0EB80", Offset = "0xA0EB80", VA = "0xA0EB80")]
	public CupRewardType GetOneTimeRewardType(int rankIndex)
	{
		return default(CupRewardType);
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0xA0EBB0", Offset = "0xA0EBB0", VA = "0xA0EBB0")]
	public int GetOneTimeCoinReward(int rankIndex)
	{
		return default(int);
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xA0EBE0", Offset = "0xA0EBE0", VA = "0xA0EBE0")]
	public ConsumableType GetOneTimeConsumableReward(int rankIndex)
	{
		return default(ConsumableType);
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0xA0EC10", Offset = "0xA0EC10", VA = "0xA0EC10")]
	public ItemRewardID GetOneTimeItemReward(int rankIndex)
	{
		return default(ItemRewardID);
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0xA0EC40", Offset = "0xA0EC40", VA = "0xA0EC40")]
	public CupData()
	{
	}
}
[Token(Token = "0x20000B2")]
[CreateAssetMenu(fileName = "NewCupList", menuName = "Cup Data/Cup List")]
public class CupList : ScriptableObject
{
	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<CupData> cupDataList;

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0xA0ED58", Offset = "0xA0ED58", VA = "0xA0ED58")]
	public CupList()
	{
	}
}
[Token(Token = "0x20000B3")]
public enum LevelLength
{
	[Token(Token = "0x400044F")]
	Short,
	[Token(Token = "0x4000450")]
	Medium,
	[Token(Token = "0x4000451")]
	Long
}
[Token(Token = "0x20000B4")]
public enum GrillRate
{
	[Token(Token = "0x4000453")]
	None,
	[Token(Token = "0x4000454")]
	Rarely,
	[Token(Token = "0x4000455")]
	Uncommon,
	[Token(Token = "0x4000456")]
	Common,
	[Token(Token = "0x4000457")]
	VeryCommon
}
[Token(Token = "0x20000B5")]
public enum SandwichSizes
{
	[Token(Token = "0x4000459")]
	Tiny,
	[Token(Token = "0x400045A")]
	Small,
	[Token(Token = "0x400045B")]
	Medium,
	[Token(Token = "0x400045C")]
	Big,
	[Token(Token = "0x400045D")]
	VeryBig
}
[Serializable]
[Token(Token = "0x20000B6")]
[CreateAssetMenu(fileName = "NewLevelData", menuName = "Level Data/Level Data")]
public class LevelData : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x20000B7")]
	public struct GoalData
	{
		[Token(Token = "0x4000470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int[] goalTimeThreshold;

		[Token(Token = "0x4000471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GoalSpeedRun.Pace goalTimeLimitPace;

		[Token(Token = "0x4000472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int[] goalCustomersToServe;

		[Token(Token = "0x4000473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] goalPerfectsToServe;

		[Token(Token = "0x4000474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CustomerType goalServePerfectTo;

		[Token(Token = "0x4000475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int goalIngredientsToThrow;

		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ConsumableType useConsumable;

		[Token(Token = "0x4000477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int[] useConsumableCount;

		[Token(Token = "0x4000478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int tutorialGoalSlot;

		[Token(Token = "0x4000479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int[] finalLevelPerfectCount;

		[Token(Token = "0x400047A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int[] goalSpeedRunCustomersToServe;

		[Token(Token = "0x400047B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int[] goalNoConsumablesCustomersToServe;
	}

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public int levelIndex;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool endlessMode;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool creativeMode;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LevelLength levelLength;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GrillRate grillRate;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SandwichSizes sandwichSizes;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CustomerType[] customers;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int maxCustomersOnScreen;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int hugeSandwichStackSize;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool hasDirtyPlates;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool hasPotionReward;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public ConsumableType potionReward;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool hasTutorial;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string tutorialHeaderStringID;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string tutorialTextStringID;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Sprite tutorialImage;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GoalType[] goals;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GoalData[] goalsData;

	[Token(Token = "0x170000E0")]
	public string TutorialHeader
	{
		[Token(Token = "0x60004AE")]
		[Address(RVA = "0xA0ED60", Offset = "0xA0ED60", VA = "0xA0ED60")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E1")]
	public string TutorialText
	{
		[Token(Token = "0x60004AF")]
		[Address(RVA = "0xA0EDD0", Offset = "0xA0EDD0", VA = "0xA0EDD0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xA0EE40", Offset = "0xA0EE40", VA = "0xA0EE40")]
	public static void VerifyGoalData(int levelIndex, GoalType goalType, GoalData goalData, bool isEndless)
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xA0EF58", Offset = "0xA0EF58", VA = "0xA0EF58")]
	public LevelData()
	{
	}
}
[Token(Token = "0x20000B8")]
[CreateAssetMenu(fileName = "NewLevelList", menuName = "Level Data/Level List")]
public class LevelList : ScriptableObject
{
	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<LevelData> levelDataList;

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xA0F024", Offset = "0xA0F024", VA = "0xA0F024")]
	public LevelList()
	{
	}
}
[Token(Token = "0x20000B9")]
public class AchievementsAux : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60004B3")]
	[Address(RVA = "0xA0F02C", Offset = "0xA0F02C", VA = "0xA0F02C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0xA0F28C", Offset = "0xA0F28C", VA = "0xA0F28C")]
	public AchievementsAux()
	{
	}
}
[Token(Token = "0x20000BA")]
public class AchievementsHandler : SingleInstanceBehavior<AchievementsHandler>
{
	[Token(Token = "0x20000BB")]
	private enum GameAreas
	{
		[Token(Token = "0x40004D3")]
		Village,
		[Token(Token = "0x40004D4")]
		Forest,
		[Token(Token = "0x40004D5")]
		Castle
	}

	[Token(Token = "0x20000BC")]
	public class AchievementsResponse
	{
		[Token(Token = "0x40004D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsUnlocked;

		[Token(Token = "0x60004E5")]
		[Address(RVA = "0xA14F94", Offset = "0xA14F94", VA = "0xA14F94")]
		public AchievementsResponse()
		{
		}
	}

	[Token(Token = "0x400047D")]
	private const string PRINCE_CHARMING = "Achievement_1";

	[Token(Token = "0x400047E")]
	private const string BLACK_SHEEP = "Achievement_2";

	[Token(Token = "0x400047F")]
	private const string GOLDEN_CLEAVER = "Achievement_3";

	[Token(Token = "0x4000480")]
	private const string FEED_THE_MOUSE = "Achievement_4";

	[Token(Token = "0x4000481")]
	private const string PYROSIS = "Achievement_5";

	[Token(Token = "0x4000482")]
	private const string TRUFFLE_HOG = "Achievement_6";

	[Token(Token = "0x4000483")]
	private const string CANNIBAL = "Achievement_7";

	[Token(Token = "0x4000484")]
	private const string TBA_TBA_TBA = "Achievement_8";

	[Token(Token = "0x4000485")]
	private const string GIANT_RADISH_DUDE = "Achievement_9";

	[Token(Token = "0x4000486")]
	private const string FOOD_FIGHT = "Achievement_10";

	[Token(Token = "0x4000487")]
	private const string COOKOUT_RECIPE = "Achievement_11";

	[Token(Token = "0x4000488")]
	private const string POTION_DEVOTION = "Achievement_12";

	[Token(Token = "0x4000489")]
	private const string DRY_PALACE = "Achievement_13";

	[Token(Token = "0x400048A")]
	private const string ROYAL_FLUSH = "Achievement_14";

	[Token(Token = "0x400048B")]
	private const string TOFU_TOWER = "Achievement_15";

	[Token(Token = "0x400048C")]
	private const string MULTIPLAYER_COOKING = "Achievement_16";

	[Token(Token = "0x400048D")]
	private const string ENDLESS_30 = "Achievement_17";

	[Token(Token = "0x400048E")]
	private const string HUGE_MESS = "Achievement_18";

	[Token(Token = "0x400048F")]
	private const string PERFECT_THROW = "Achievement_19";

	[Token(Token = "0x4000490")]
	private const string POWER_OVERWHELMING = "Achievement_20";

	[Token(Token = "0x4000491")]
	private const string WEREWOLVES_DELIGHT_RECIPE = "Achievement_21";

	[Token(Token = "0x4000492")]
	private const string CATS_DELIGHT_RECIPE = "Achievement_22";

	[Token(Token = "0x4000493")]
	private const string RABBITS_DELIGHT_RECIPE = "Achievement_23";

	[Token(Token = "0x4000494")]
	private const string JESTERS_DELIGHT_RECIPE = "Achievement_24";

	[Token(Token = "0x4000495")]
	private const string THIEVES_DELIGHT_RECIPE = "Achievement_25";

	[Token(Token = "0x4000496")]
	private const string DEERS_DELIGHT_RECIPE = "Achievement_26";

	[Token(Token = "0x4000497")]
	private const string VILLAGE_STAR = "Achievement_27";

	[Token(Token = "0x4000498")]
	private const string FOREST_STAR = "Achievement_28";

	[Token(Token = "0x4000499")]
	private const string CASTLE_STAR = "Achievement_29";

	[Token(Token = "0x400049A")]
	private const string ENDLESS_150 = "Achievement_30";

	[Token(Token = "0x400049B")]
	private const string FENCING = "Achievement_31";

	[Token(Token = "0x400049C")]
	private const string RAGE_AGAINST_THE_MACHINE = "Achievement_32";

	[Token(Token = "0x400049D")]
	private const string WEALTHY = "Achievement_33";

	[Token(Token = "0x400049E")]
	private const string SPENDER = "Achievement_34";

	[Token(Token = "0x400049F")]
	private const string FAST_FOOD = "Achievement_35";

	[Token(Token = "0x40004A0")]
	private const string ENDLESS_PERFECTION = "Achievement_36";

	[Token(Token = "0x40004A1")]
	private const string KLEPTOMANIA = "Achievement_37";

	[Token(Token = "0x40004A2")]
	private const string DISHWASHER = "Achievement_38";

	[Token(Token = "0x40004A3")]
	private const string FIST_BUMP = "Achievement_39";

	[Token(Token = "0x40004A4")]
	private const string JUNIOR_CHEF = "Achievement_40";

	[Token(Token = "0x40004A5")]
	private const string STATION_CHEF = "Achievement_41";

	[Token(Token = "0x40004A6")]
	private const string SOUS_CHEF = "Achievement_42";

	[Token(Token = "0x40004A7")]
	private const string HEAD_CHEF = "Achievement_43";

	[Token(Token = "0x40004A8")]
	private const string COOKIE_MONSTER = "Achievement_44";

	[Token(Token = "0x40004A9")]
	private const string ROYAL_DINNER_SERVICE = "Achievement_45";

	[Token(Token = "0x40004AA")]
	private const string ROYAL_BANQUET = "Achievement_46";

	[Token(Token = "0x40004AB")]
	private const string BBQ = "Achievement_47";

	[Token(Token = "0x40004AC")]
	private const string PYROMANIA = "Achievement_48";

	[Token(Token = "0x40004AD")]
	private const string ONE_UP = "Achievement_49";

	[Token(Token = "0x40004AE")]
	private const string SANDWICH_CHEF = "Achievement_50";

	[Token(Token = "0x40004AF")]
	private const string DEDICATED_CHEF = "Achievement_51";

	[Token(Token = "0x40004B0")]
	private const string HIGH_FIVE = "Achievement_52";

	[Token(Token = "0x40004B1")]
	private const string COOKOUT_RECIPE_ID = "85";

	[Token(Token = "0x40004B2")]
	private const string WEREWOLVES_DELIGHT_RECIPE_ID = "52";

	[Token(Token = "0x40004B3")]
	private const string CATS_DELIGHT_RECIPE_ID = "51";

	[Token(Token = "0x40004B4")]
	private const string RABBITS_DELIGHT_RECIPE_ID = "50";

	[Token(Token = "0x40004B5")]
	private const string JESTERS_DELIGHT_RECIPE_ID = "54";

	[Token(Token = "0x40004B6")]
	private const string THIEVES_DELIGHT_RECIPE_ID = "53";

	[Token(Token = "0x40004B7")]
	private const string DEERS_DELIGHT_RECIPE_ID = "145";

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly string[] RECIPE_IDS;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly Dictionary<string, string> RECIPE_IDS_REGISTRY;

	[Token(Token = "0x40004BA")]
	private const int ENDLESS_30_GOAL = 30;

	[Token(Token = "0x40004BB")]
	private const int ENDLESS_150_GOAL = 150;

	[Token(Token = "0x40004BC")]
	private const int JUNIOR_CHEF_GOAL = 10;

	[Token(Token = "0x40004BD")]
	private const int STATION_CHEF_GOAL = 50;

	[Token(Token = "0x40004BE")]
	private const int SOUS_CHEF_GOAL = 100;

	[Token(Token = "0x40004BF")]
	private const int HEAD_CHEF_GOAL = 200;

	[Token(Token = "0x40004C0")]
	private const int SANDWICH_CHEF_GOAL = 1000;

	[Token(Token = "0x40004C1")]
	private const int FAST_FOOD_GOAL = 50;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly int[] CREATIVE_CHEF_GOALS;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Dictionary<int, string> CREATIVE_CHEF_GOALS_REGISTRY;

	[Token(Token = "0x40004C4")]
	private const int WEALTHY_GOAL = 50000;

	[Token(Token = "0x40004C5")]
	private const int ENDLESS_PERFECTION_GOAL = 100;

	[Token(Token = "0x40004C6")]
	private const int KLEPTOMANIA_GOAL = 10;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly int[] areaLevelCounts;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly string[] areaLevelAchievements;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isInitialized;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SaveManager saveManager;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private EndlessMode endlessMode;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int perfectPlatesStreakInEndlessMode;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool isEndlessMode;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool[] unlockedAchievements;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<string> achievements;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private readonly string[] COUNTABLE_ACHIEVEMENTS;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Dictionary<AvatarCustomizationUnlockCondition, string> unlockConditionDescriptions;

	[Token(Token = "0x170000E2")]
	public int AchievementsCount
	{
		[Token(Token = "0x60004B5")]
		[Address(RVA = "0xA0F294", Offset = "0xA0F294", VA = "0xA0F294")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0xA0F2DC", Offset = "0xA0F2DC", VA = "0xA0F2DC")]
	public void Init()
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0xA0F0F4", Offset = "0xA0F0F4", VA = "0xA0F0F4")]
	public void OnEnterMainScene()
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0xA0FD58", Offset = "0xA0FD58", VA = "0xA0FD58")]
	private void OnEndlessStart()
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0xA0FD68", Offset = "0xA0FD68", VA = "0xA0FD68")]
	private void OnEndlessStop()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0xA0FD74", Offset = "0xA0FD74", VA = "0xA0FD74")]
	public void OnLeaveMainScene()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0xA0FEB4", Offset = "0xA0FEB4", VA = "0xA0FEB4")]
	private void UnlockSimpleAchievement(string apiKey)
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0xA10030", Offset = "0xA10030", VA = "0xA10030")]
	private void RecordCountAchievement(string apiKey, int count)
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0xA0F774", Offset = "0xA0F774", VA = "0xA0F774")]
	private void SyncOfflineAchievements()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0xA101A8", Offset = "0xA101A8", VA = "0xA101A8")]
	private void SyncOfflineSimpleAchievements(int index, string apiKey)
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0xA10310", Offset = "0xA10310", VA = "0xA10310")]
	private void SyncOfflineCountableAchievement(string apiKey)
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0xA107AC", Offset = "0xA107AC", VA = "0xA107AC")]
	private void SyncSimpleAchievementsCallback(string apiKey, bool isRemoteUnlocked)
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0xA107B8", Offset = "0xA107B8", VA = "0xA107B8")]
	private void SyncCountableAchievementsCallback(string apiKey, int localCount, int remoteCount)
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0xA1099C", Offset = "0xA1099C", VA = "0xA1099C")]
	public void OnAvatarKissMirror()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0xA10B08", Offset = "0xA10B08", VA = "0xA10B08")]
	public void OnCleaverHitWell()
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0xA10C24", Offset = "0xA10C24", VA = "0xA10C24")]
	public void OnIngredientEaten(IngredientBase ingredient)
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0xA10E3C", Offset = "0xA10E3C", VA = "0xA10E3C")]
	public void OnFinalCupBeaten(int cupStars, int consumablesUsed)
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0xA10EE0", Offset = "0xA10EE0", VA = "0xA10EE0")]
	public void OnPerfectThrow()
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0xA10F28", Offset = "0xA10F28", VA = "0xA10F28")]
	public void OnBroFist()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0xA11010", Offset = "0xA11010", VA = "0xA11010")]
	public void OnHighFive()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0xA110F8", Offset = "0xA110F8", VA = "0xA110F8")]
	public void OnFencing()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0xA111E0", Offset = "0xA111E0", VA = "0xA111E0")]
	public void OnStolenIngredient()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0xA11290", Offset = "0xA11290", VA = "0xA11290")]
	public void OnPlateHandedInHandingInPlayerOnly(Plate plate, bool wasPerfect, bool isCreativeMode, CustomerType customerType)
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0xA11668", Offset = "0xA11668", VA = "0xA11668")]
	public void OnPlateHandedInAnyPlayer(Plate plate, bool wasPerfect, bool isCreativeMode, CustomerType customerType)
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0xA11820", Offset = "0xA11820", VA = "0xA11820")]
	public void OnMouseFeed()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0xA114C4", Offset = "0xA114C4", VA = "0xA114C4")]
	private bool HasBurntIngredient(Plate plate)
	{
		return default(bool);
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0xA11774", Offset = "0xA11774", VA = "0xA11774")]
	private bool IsTofuTower(Plate plate)
	{
		return default(bool);
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0xA115AC", Offset = "0xA115AC", VA = "0xA115AC")]
	private bool IsExclusiveIngredientPlate(Plate plate, IngredientType ingredientType)
	{
		return default(bool);
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0xA118A0", Offset = "0xA118A0", VA = "0xA118A0")]
	public void OnNewRecipeFound(string recipeId)
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0xA119C8", Offset = "0xA119C8", VA = "0xA119C8")]
	public void OnCoinsSpent(int coins)
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0xA11A34", Offset = "0xA11A34", VA = "0xA11A34")]
	public void OnGrilledIngredient()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0xA11A90", Offset = "0xA11A90", VA = "0xA11A90")]
	public void OnBurntIngredient()
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0xA11AEC", Offset = "0xA11AEC", VA = "0xA11AEC")]
	public void OnWashPlate()
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0xA11B48", Offset = "0xA11B48", VA = "0xA11B48")]
	public void OnFoodFight()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0xA11B90", Offset = "0xA11B90", VA = "0xA11B90")]
	public void OnBotHit()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0xA11BD8", Offset = "0xA11BD8", VA = "0xA11BD8")]
	public void OnGiantRadishDude()
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0xA11C20", Offset = "0xA11C20", VA = "0xA11C20")]
	public void OnBotSupercharged()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0xA0F41C", Offset = "0xA0F41C", VA = "0xA0F41C")]
	public void CheckForEndlessModeHighscoreAchievements()
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0xA0F574", Offset = "0xA0F574", VA = "0xA0F574")]
	public void CheckForCoinsAchievement()
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0xA0F5E8", Offset = "0xA0F5E8", VA = "0xA0F5E8")]
	public void CheckForUnlockedRecipeIdAchievements()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0xA0F4B8", Offset = "0xA0F4B8", VA = "0xA0F4B8")]
	public void CheckForUnlockedRecipesCountAchievements()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0xA0F6E0", Offset = "0xA0F6E0", VA = "0xA0F6E0")]
	public void CheckForUnlockedPotionsAchievement()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0xA0F9A0", Offset = "0xA0F9A0", VA = "0xA0F9A0")]
	public void CheckForEarnedStarsAchievements()
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0xA11C7C", Offset = "0xA11C7C", VA = "0xA11C7C")]
	public void OnPlayerJoinedRoom()
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0xA11CC4", Offset = "0xA11CC4", VA = "0xA11CC4")]
	public void OnPhotonPlayerConnected()
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0xA11D0C", Offset = "0xA11D0C", VA = "0xA11D0C")]
	public string GetAchievementNameForDebugging(string achievementID)
	{
		return null;
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0xA12ECC", Offset = "0xA12ECC", VA = "0xA12ECC")]
	public AchievementsHandler()
	{
	}
}
[Token(Token = "0x20000BD")]
public class BroFist : NetworkedBehaviour
{
	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject broFistCollider;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject leftHandCollider;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject rightHandCollider;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CookoutAvatar cookoutAvatar;

	[Token(Token = "0x40004DB")]
	private const string BRO_FIST_TAG = "BroFist";

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CookoutAvatarHand leftHand;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CookoutAvatarHand rightHand;

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0xA14F9C", Offset = "0xA14F9C", VA = "0xA14F9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0xA151C4", Offset = "0xA151C4", VA = "0xA151C4")]
	private void OnTriggerEnterRight(Collider otherFist)
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0xA15EC4", Offset = "0xA15EC4", VA = "0xA15EC4")]
	private void OnTriggerEnterLeft(Collider otherFist)
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0xA151CC", Offset = "0xA151CC", VA = "0xA151CC")]
	private void OnTriggerEnterBroFist(Collider otherFist, CookoutHandedness handedness)
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0xA15ECC", Offset = "0xA15ECC", VA = "0xA15ECC")]
	private bool HandIsFist(CookoutAvatarHand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0xA15EF0", Offset = "0xA15EF0", VA = "0xA15EF0")]
	private bool HandIsHighFive(CookoutAvatarHand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0xA15F24", Offset = "0xA15F24", VA = "0xA15F24")]
	[PunRPC]
	private void BroFistRPC(Vector3 otherFistPosition, int otherPlayerID)
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0xA1606C", Offset = "0xA1606C", VA = "0xA1606C")]
	[PunRPC]
	private void HighFiveRPC(Vector3 otherFistPosition, int otherPlayerID)
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xA161B4", Offset = "0xA161B4", VA = "0xA161B4")]
	public BroFist()
	{
	}
}
[Token(Token = "0x20000BE")]
public class FeedTheMouse : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40004DE")]
	private const string INGREDIENTS_LAYER = "Ingredients";

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float eatTimer;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IngredientBase ingredient;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float eatDelay;

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0xA161BC", Offset = "0xA161BC", VA = "0xA161BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xA161C4", Offset = "0xA161C4", VA = "0xA161C4")]
	private void Update()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0xA16414", Offset = "0xA16414", VA = "0xA16414")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0xA16550", Offset = "0xA16550", VA = "0xA16550")]
	private bool IsCheese(IngredientType ingredientType)
	{
		return default(bool);
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0xA16578", Offset = "0xA16578", VA = "0xA16578")]
	public FeedTheMouse()
	{
	}
}
[Token(Token = "0x20000BF")]
public class Mirror : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60004F4")]
	[Address(RVA = "0xA1658C", Offset = "0xA1658C", VA = "0xA1658C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0xA16690", Offset = "0xA16690", VA = "0xA16690")]
	public Mirror()
	{
	}
}
[Token(Token = "0x20000C0")]
public class Well : NetworkedBehaviour
{
	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Collider myCollider;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Vector3 positionCozyVillage;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private Vector3 positionEndlessMode;

	[Token(Token = "0x40004E5")]
	private const string CLEAVER_LAYER = "Cleaver";

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool cleaverHitWell;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private EnvironmentLoader environmentLoader;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ParticleSystem cleaverHitEffect;

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0xA16698", Offset = "0xA16698", VA = "0xA16698")]
	private void Start()
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0xA16804", Offset = "0xA16804", VA = "0xA16804")]
	private void OnEnvironmentChanged()
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0xA1688C", Offset = "0xA1688C", VA = "0xA1688C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0xA16AC0", Offset = "0xA16AC0", VA = "0xA16AC0")]
	[PunRPC]
	private void PlayWellParticleEffectRPC()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0xA16AF4", Offset = "0xA16AF4", VA = "0xA16AF4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0xA16BC8", Offset = "0xA16BC8", VA = "0xA16BC8")]
	public Well()
	{
	}
}
[Token(Token = "0x20000C1")]
public class AndroidMaterial : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[FormerlySerializedAs("questMaterials")]
	private Material[] androidMaterials;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Renderer[] rendererTargets;

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0xA16BD0", Offset = "0xA16BD0", VA = "0xA16BD0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0xA16C90", Offset = "0xA16C90", VA = "0xA16C90")]
	public AndroidMaterial()
	{
	}
}
[Token(Token = "0x20000C2")]
public class AnimatedCreatureSpawner : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject creaturePrefab;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] spawnPositions;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform cozyVillageGiantSpawnPosition;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform enchantedForestGiantSpawnPosition;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform royalCastleGiantSpawnPosition;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform throneRoomGiantSpawnPosition;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform creativeModeGiantSpawnPosition;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform endlessModeGiantSpawnPosition;

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0xA16C98", Offset = "0xA16C98", VA = "0xA16C98")]
	private void Start()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0xA16E78", Offset = "0xA16E78", VA = "0xA16E78")]
	public AnimatedCreatureSpawner()
	{
	}
}
[Token(Token = "0x20000C3")]
public class RadishDudeWarp : NetworkedBehaviour, IPunObservable
{
	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform[] spawnPositions;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform cozyVillageGiantSpawnPosition;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform enchantedForestGiantSpawnPosition;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform royalCastleGiantSpawnPosition;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform throneRoomGiantSpawnPosition;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform creativeModeGiantSpawnPosition;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform endlessModeGiantSpawnPosition;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isHit;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private byte numberOfHits;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	private byte currentPosition;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	private byte currentGiantPosition;

	[Token(Token = "0x40004FE")]
	private const byte hitsToGetGiant = 5;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float giantScaleFactor;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float baseScaleFactor;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private float cozyVillageScaleFactor;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float enchantedForestScaleFactor;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private float royalCastleScaleFactor;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private float throneRoomScaleFactor;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private float creativeModeScaleFactor;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private float endlessModeScaleFactor;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private EnvironmentLoader environmentLoader;

	[Token(Token = "0x170000E3")]
	private bool IsGiant
	{
		[Token(Token = "0x6000500")]
		[Address(RVA = "0xA16E80", Offset = "0xA16E80", VA = "0xA16E80")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0xA16E90", Offset = "0xA16E90", VA = "0xA16E90")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0xA17034", Offset = "0xA17034", VA = "0xA17034")]
	private void Start()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0xA171E0", Offset = "0xA171E0", VA = "0xA171E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0xA171E8", Offset = "0xA171E8", VA = "0xA171E8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0xA172BC", Offset = "0xA172BC", VA = "0xA172BC")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0xA17420", Offset = "0xA17420", VA = "0xA17420")]
	private Transform GetGiantEnvironmentPosition()
	{
		return null;
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0xA174AC", Offset = "0xA174AC", VA = "0xA174AC")]
	private void GigantifyRadish()
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0xA17760", Offset = "0xA17760", VA = "0xA17760")]
	private void OnEnvironmentChanged()
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0xA17A90", Offset = "0xA17A90", VA = "0xA17A90")]
	[PunRPC]
	private void OnRadishDudeHitRPC()
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0xA17818", Offset = "0xA17818", VA = "0xA17818")]
	private void MoveRadish(byte oldPosition, byte newPosition)
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0xA17B58", Offset = "0xA17B58", VA = "0xA17B58", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0xA17D64", Offset = "0xA17D64", VA = "0xA17D64")]
	public RadishDudeWarp()
	{
	}
}
[Token(Token = "0x20000C4")]
public class SquirrelAnimations : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float runCooldown;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float firstRunCooldown;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float runTimer;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator animator;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string runTrigger;

	[Token(Token = "0x600050D")]
	[Address(RVA = "0xA17D7C", Offset = "0xA17D7C", VA = "0xA17D7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0xA17DD4", Offset = "0xA17DD4", VA = "0xA17DD4")]
	private void Update()
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0xA17E38", Offset = "0xA17E38", VA = "0xA17E38")]
	public SquirrelAnimations()
	{
	}
}
[Token(Token = "0x20000C5")]
public class SyncedAnimationController : NetworkedBehaviour
{
	[Token(Token = "0x20000C6")]
	private enum AnimatorType
	{
		[Token(Token = "0x4000521")]
		undefined,
		[Token(Token = "0x4000522")]
		cat,
		[Token(Token = "0x4000523")]
		radishDude,
		[Token(Token = "0x4000524")]
		stove
	}

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> animationTriggers;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isOverridden;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Animator animator;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float animationTime;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool wasHit;

	[Token(Token = "0x4000512")]
	private const int collisionTriggerID = 0;

	[Token(Token = "0x4000513")]
	private const int touchTriggerID = 1;

	[Token(Token = "0x4000514")]
	private const int randomAnimationsStartID = 2;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[Tooltip("The minimum time spent on one animation cycle in seconds")]
	private float minAnimationTime;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("The maximum time spent on one animation cycle in seconds")]
	[SerializeField]
	private float maxAnimationTime;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AnimatorType animatorType;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Tooltip("Leave empty to ignore collisions")]
	[Header("Optional Collision")]
	public string collisionTrigger;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float collisionClipLength;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Tooltip("Leave empty to ignore player touch")]
	[Header("Optional Touch")]
	public string TouchTrigger;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float TouchClipLength;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<int> touchingHands;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool launcherScene;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool collisionTriggerNotSet;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	private bool touchTriggerNotSet;

	[Token(Token = "0x6000510")]
	[Address(RVA = "0xA17E94", Offset = "0xA17E94", VA = "0xA17E94")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0xA181AC", Offset = "0xA181AC", VA = "0xA181AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0xA18514", Offset = "0xA18514", VA = "0xA18514")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0xA182D0", Offset = "0xA182D0", VA = "0xA182D0")]
	private void SetNextAnimation(byte triggerKeyID, float newAnimationTime, bool hitSound, bool touchSound)
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0xA18644", Offset = "0xA18644", VA = "0xA18644")]
	[PunRPC]
	private void SetNextAnimationRPC(byte triggerKeyID, float newAnimationTime, bool hitSound, bool touchSound)
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0xA187D0", Offset = "0xA187D0", VA = "0xA187D0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0xA18998", Offset = "0xA18998", VA = "0xA18998")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0xA18AB0", Offset = "0xA18AB0", VA = "0xA18AB0")]
	public SyncedAnimationController()
	{
	}
}
[Token(Token = "0x20000C8")]
public class AudioSettingsUI : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshPro soundValueText;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PokeButton decreaseSoundButton;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PokeButton increaseSoundButton;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMeshPro voiceValueText;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private PokeButton decreaseVoiceButton;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private PokeButton increaseVoiceButton;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private TextMeshPro musicValueText;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private PokeButton decreaseMusicButton;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private PokeButton increaseMusicButton;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private bool isWristMenu;

	[Token(Token = "0x600051A")]
	[Address(RVA = "0xA19C14", Offset = "0xA19C14", VA = "0xA19C14")]
	private void Awake()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0xA19DE0", Offset = "0xA19DE0", VA = "0xA19DE0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0xA19EF0", Offset = "0xA19EF0", VA = "0xA19EF0")]
	private void RefreshVolumeLevels()
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0xA1A378", Offset = "0xA1A378", VA = "0xA1A378")]
	private void IncrementVolume(AudioPreferences.SoundGroup soundGroup, bool increase)
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0xA1A5D0", Offset = "0xA1A5D0", VA = "0xA1A5D0")]
	public AudioSettingsUI()
	{
	}
}
[Token(Token = "0x20000C9")]
public class CustomMicWrapper : IAudioReader<float>, IDataReader<float>, IDisposable, IAudioSource
{
	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AudioClip mic;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string device;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr androidMicrophoneHandle;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int micPrevPos;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int micLoopCnt;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int readAbsPos;

	[Token(Token = "0x170000E4")]
	public int SamplingRate
	{
		[Token(Token = "0x6000526")]
		[Address(RVA = "0xA1A7FC", Offset = "0xA1A7FC", VA = "0xA1A7FC", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000E5")]
	public int Channels
	{
		[Token(Token = "0x6000527")]
		[Address(RVA = "0xA1A804", Offset = "0xA1A804", VA = "0xA1A804", Slot = "7")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0xA1A620", Offset = "0xA1A620", VA = "0xA1A620")]
	public CustomMicWrapper(string device, int suggestedFrequency)
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0xA1A80C", Offset = "0xA1A80C", VA = "0xA1A80C", Slot = "5")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0xA1A8E0", Offset = "0xA1A8E0", VA = "0xA1A8E0", Slot = "4")]
	public bool Read(float[] buffer)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000CA")]
public class LauncherAmbience : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x600052A")]
	[Address(RVA = "0xA1AA6C", Offset = "0xA1AA6C", VA = "0xA1AA6C")]
	private void Start()
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0xA1AB1C", Offset = "0xA1AB1C", VA = "0xA1AB1C")]
	public LauncherAmbience()
	{
	}
}
[Token(Token = "0x20000CB")]
public static class AudioTriggers
{
	[Token(Token = "0x20000CC")]
	[CompilerGenerated]
	private sealed class <OnRoundFinishedWin>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400053A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400053B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool finalLevel;

		[Token(Token = "0x400053C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string <playlist>5__2;

		[Token(Token = "0x170000E6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005ED")]
			[Address(RVA = "0xA232B8", Offset = "0xA232B8", VA = "0xA232B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005EF")]
			[Address(RVA = "0xA23300", Offset = "0xA23300", VA = "0xA23300", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005EA")]
		[Address(RVA = "0xA1BC8C", Offset = "0xA1BC8C", VA = "0xA1BC8C")]
		[DebuggerHidden]
		public <OnRoundFinishedWin>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60005EB")]
		[Address(RVA = "0xA22F50", Offset = "0xA22F50", VA = "0xA22F50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005EC")]
		[Address(RVA = "0xA22F54", Offset = "0xA22F54", VA = "0xA22F54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005EE")]
		[Address(RVA = "0xA232C0", Offset = "0xA232C0", VA = "0xA232C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000CD")]
	[CompilerGenerated]
	private sealed class <OnRoundFinishedFailed>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400053D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400053E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400053F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string <playlist>5__2;

		[Token(Token = "0x170000E8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005F3")]
			[Address(RVA = "0xA23680", Offset = "0xA23680", VA = "0xA23680", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005F5")]
			[Address(RVA = "0xA236C8", Offset = "0xA236C8", VA = "0xA236C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005F0")]
		[Address(RVA = "0xA1BD14", Offset = "0xA1BD14", VA = "0xA1BD14")]
		[DebuggerHidden]
		public <OnRoundFinishedFailed>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x60005F1")]
		[Address(RVA = "0xA23308", Offset = "0xA23308", VA = "0xA23308", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005F2")]
		[Address(RVA = "0xA2330C", Offset = "0xA2330C", VA = "0xA2330C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005F4")]
		[Address(RVA = "0xA23688", Offset = "0xA23688", VA = "0xA23688", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000CE")]
	[CompilerGenerated]
	private sealed class <OnRoundFinishedFailedRoyal>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string <playlist>5__2;

		[Token(Token = "0x170000EA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005F9")]
			[Address(RVA = "0xA23A48", Offset = "0xA23A48", VA = "0xA23A48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005FB")]
			[Address(RVA = "0xA23A90", Offset = "0xA23A90", VA = "0xA23A90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005F6")]
		[Address(RVA = "0xA1BD9C", Offset = "0xA1BD9C", VA = "0xA1BD9C")]
		[DebuggerHidden]
		public <OnRoundFinishedFailedRoyal>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x60005F7")]
		[Address(RVA = "0xA236D0", Offset = "0xA236D0", VA = "0xA236D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005F8")]
		[Address(RVA = "0xA236D4", Offset = "0xA236D4", VA = "0xA236D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005FA")]
		[Address(RVA = "0xA23A50", Offset = "0xA23A50", VA = "0xA23A50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000CF")]
	[CompilerGenerated]
	private sealed class <OnEndlessModeFinish>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string <playlist>5__2;

		[Token(Token = "0x170000EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005FF")]
			[Address(RVA = "0xA23CE0", Offset = "0xA23CE0", VA = "0xA23CE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000601")]
			[Address(RVA = "0xA23D28", Offset = "0xA23D28", VA = "0xA23D28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005FC")]
		[Address(RVA = "0xA1BE24", Offset = "0xA1BE24", VA = "0xA1BE24")]
		[DebuggerHidden]
		public <OnEndlessModeFinish>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x60005FD")]
		[Address(RVA = "0xA23A98", Offset = "0xA23A98", VA = "0xA23A98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005FE")]
		[Address(RVA = "0xA23A9C", Offset = "0xA23A9C", VA = "0xA23A9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000600")]
		[Address(RVA = "0xA23CE8", Offset = "0xA23CE8", VA = "0xA23CE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000D0")]
	[CompilerGenerated]
	private sealed class <OnCreativeModeFinish>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string <playlist>5__2;

		[Token(Token = "0x170000EE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000605")]
			[Address(RVA = "0xA23F78", Offset = "0xA23F78", VA = "0xA23F78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000607")]
			[Address(RVA = "0xA23FC0", Offset = "0xA23FC0", VA = "0xA23FC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000602")]
		[Address(RVA = "0xA1BEAC", Offset = "0xA1BEAC", VA = "0xA1BEAC")]
		[DebuggerHidden]
		public <OnCreativeModeFinish>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6000603")]
		[Address(RVA = "0xA23D30", Offset = "0xA23D30", VA = "0xA23D30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000604")]
		[Address(RVA = "0xA23D34", Offset = "0xA23D34", VA = "0xA23D34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000606")]
		[Address(RVA = "0xA23F80", Offset = "0xA23F80", VA = "0xA23F80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000D1")]
	[CompilerGenerated]
	private sealed class <OnTutorialModeFinish>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400054A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170000F0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600060B")]
			[Address(RVA = "0xA2420C", Offset = "0xA2420C", VA = "0xA2420C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600060D")]
			[Address(RVA = "0xA24254", Offset = "0xA24254", VA = "0xA24254", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000608")]
		[Address(RVA = "0xA1C158", Offset = "0xA1C158", VA = "0xA1C158")]
		[DebuggerHidden]
		public <OnTutorialModeFinish>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000609")]
		[Address(RVA = "0xA23FC8", Offset = "0xA23FC8", VA = "0xA23FC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600060A")]
		[Address(RVA = "0xA23FCC", Offset = "0xA23FCC", VA = "0xA23FCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600060C")]
		[Address(RVA = "0xA24214", Offset = "0xA24214", VA = "0xA24214", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000D2")]
	[CompilerGenerated]
	private sealed class <OnBotStartWorking>d__175 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400054B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400054C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400054D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Bot bot;

		[Token(Token = "0x400054E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform transform;

		[Token(Token = "0x400054F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RecipeIngredient ingredient;

		[Token(Token = "0x4000550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int plateID;

		[Token(Token = "0x170000F2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000611")]
			[Address(RVA = "0xA24644", Offset = "0xA24644", VA = "0xA24644", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000613")]
			[Address(RVA = "0xA2468C", Offset = "0xA2468C", VA = "0xA2468C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600060E")]
		[Address(RVA = "0xA22564", Offset = "0xA22564", VA = "0xA22564")]
		[DebuggerHidden]
		public <OnBotStartWorking>d__175(int <>1__state)
		{
		}

		[Token(Token = "0x600060F")]
		[Address(RVA = "0xA2425C", Offset = "0xA2425C", VA = "0xA2425C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000610")]
		[Address(RVA = "0xA24260", Offset = "0xA24260", VA = "0xA24260", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000612")]
		[Address(RVA = "0xA2464C", Offset = "0xA2464C", VA = "0xA2464C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000D3")]
	[CompilerGenerated]
	private sealed class <OnBotStartWashing>d__176 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Bot bot;

		[Token(Token = "0x4000554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform transform;

		[Token(Token = "0x4000555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int plateID;

		[Token(Token = "0x170000F4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000617")]
			[Address(RVA = "0xA2488C", Offset = "0xA2488C", VA = "0xA2488C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000619")]
			[Address(RVA = "0xA248D4", Offset = "0xA248D4", VA = "0xA248D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000614")]
		[Address(RVA = "0xA22608", Offset = "0xA22608", VA = "0xA22608")]
		[DebuggerHidden]
		public <OnBotStartWashing>d__176(int <>1__state)
		{
		}

		[Token(Token = "0x6000615")]
		[Address(RVA = "0xA24694", Offset = "0xA24694", VA = "0xA24694", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000616")]
		[Address(RVA = "0xA24698", Offset = "0xA24698", VA = "0xA24698", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000618")]
		[Address(RVA = "0xA24894", Offset = "0xA24894", VA = "0xA24894", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool xmasMode;

	[Token(Token = "0x600052C")]
	[Address(RVA = "0xA1AB24", Offset = "0xA1AB24", VA = "0xA1AB24")]
	internal static void OnGrabBegin(Transform grabbedTransform)
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0xA1ABAC", Offset = "0xA1ABAC", VA = "0xA1ABAC")]
	internal static void PlayMagicPoofAt(Transform transform)
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0xA1AC34", Offset = "0xA1AC34", VA = "0xA1AC34")]
	internal static void PlayMagicPoofAt(Vector3 position)
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0xA1ACDC", Offset = "0xA1ACDC", VA = "0xA1ACDC")]
	internal static void OnThrown(Transform transform)
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0xA1AD78", Offset = "0xA1AD78", VA = "0xA1AD78")]
	internal static void OnBroFist(Vector3 position)
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0xA1AE20", Offset = "0xA1AE20", VA = "0xA1AE20")]
	internal static void OnFencing(Vector3 position)
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0xA1AEC8", Offset = "0xA1AEC8", VA = "0xA1AEC8")]
	internal static void OnHighFive(Vector3 position)
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0xA1AF70", Offset = "0xA1AF70", VA = "0xA1AF70")]
	internal static PlaySoundResult OnPlateSpawn(Transform transform)
	{
		return null;
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0xA1B00C", Offset = "0xA1B00C", VA = "0xA1B00C")]
	internal static void OnPlateGrabbed(Transform transform)
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0xA1B0A8", Offset = "0xA1B0A8", VA = "0xA1B0A8")]
	internal static void OnPlatePutDown(Transform transform)
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0xA1B130", Offset = "0xA1B130", VA = "0xA1B130")]
	internal static void OnPlateHandedIn(Transform transform)
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0xA1B1CC", Offset = "0xA1B1CC", VA = "0xA1B1CC")]
	internal static void OnPlateHandedInPerfectly(Transform transform)
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0xA1B304", Offset = "0xA1B304", VA = "0xA1B304")]
	internal static void OnPlateHandedInNewRecipe(Transform transform)
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0xA1B3A0", Offset = "0xA1B3A0", VA = "0xA1B3A0")]
	internal static void OnPlateHandedInOldRecipe(Transform transform)
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0xA1B43C", Offset = "0xA1B43C", VA = "0xA1B43C")]
	internal static void OnPlateAssembledPerfectly(Transform transform)
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0xA1B440", Offset = "0xA1B440", VA = "0xA1B440")]
	internal static void OnCorrectIngredientAddedToPlate(Transform transform)
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0xA1B4DC", Offset = "0xA1B4DC", VA = "0xA1B4DC")]
	internal static void OnWrongIngredientAddedToPlate(Transform transform)
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0xA1B578", Offset = "0xA1B578", VA = "0xA1B578")]
	internal static void OnPlateShake(Transform transform)
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0xA1B614", Offset = "0xA1B614", VA = "0xA1B614")]
	internal static void OnPlateCrack(Transform transform)
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0xA1B6B0", Offset = "0xA1B6B0", VA = "0xA1B6B0")]
	internal static void OnPlateCollision(Transform transform)
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0xA1B74C", Offset = "0xA1B74C", VA = "0xA1B74C")]
	internal static void OnPlateIngredientAddedHard(Transform transform)
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0xA1B7E8", Offset = "0xA1B7E8", VA = "0xA1B7E8")]
	internal static void OnCountdownStart(Transform transform)
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0xA1B8E0", Offset = "0xA1B8E0", VA = "0xA1B8E0")]
	internal static void PlayLauncherMenuMusic()
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0xA1B948", Offset = "0xA1B948", VA = "0xA1B948")]
	internal static void OnRoundStarted()
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0xA1BC20", Offset = "0xA1BC20", VA = "0xA1BC20")]
	[IteratorStateMachine(typeof(<OnRoundFinishedWin>d__25))]
	internal static IEnumerator OnRoundFinishedWin(bool finalLevel)
	{
		return null;
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0xA1BCB4", Offset = "0xA1BCB4", VA = "0xA1BCB4")]
	[IteratorStateMachine(typeof(<OnRoundFinishedFailed>d__26))]
	internal static IEnumerator OnRoundFinishedFailed()
	{
		return null;
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0xA1BD3C", Offset = "0xA1BD3C", VA = "0xA1BD3C")]
	[IteratorStateMachine(typeof(<OnRoundFinishedFailedRoyal>d__27))]
	internal static IEnumerator OnRoundFinishedFailedRoyal()
	{
		return null;
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0xA1BDC4", Offset = "0xA1BDC4", VA = "0xA1BDC4")]
	[IteratorStateMachine(typeof(<OnEndlessModeFinish>d__28))]
	internal static IEnumerator OnEndlessModeFinish()
	{
		return null;
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0xA1BE4C", Offset = "0xA1BE4C", VA = "0xA1BE4C")]
	[IteratorStateMachine(typeof(<OnCreativeModeFinish>d__29))]
	internal static IEnumerator OnCreativeModeFinish()
	{
		return null;
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0xA1BED4", Offset = "0xA1BED4", VA = "0xA1BED4")]
	internal static void OnEndlessRevealCustomerServed(Transform transform)
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0xA1BF70", Offset = "0xA1BF70", VA = "0xA1BF70")]
	internal static void OnEndlessCustomerServedTrail(Transform transform)
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0xA1C00C", Offset = "0xA1C00C", VA = "0xA1C00C")]
	internal static void OnNewEndlessHighScore(Transform transform)
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0xA1C0F8", Offset = "0xA1C0F8", VA = "0xA1C0F8")]
	[IteratorStateMachine(typeof(<OnTutorialModeFinish>d__33))]
	internal static IEnumerator OnTutorialModeFinish(float stingerPlayTime)
	{
		return null;
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0xA1C180", Offset = "0xA1C180", VA = "0xA1C180")]
	internal static void OnTutorialAborted()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0xA1C2E4", Offset = "0xA1C2E4", VA = "0xA1C2E4")]
	internal static void OnCreativeRevealRecipesUnlocked(Transform transform)
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0xA1C380", Offset = "0xA1C380", VA = "0xA1C380")]
	internal static void OnPlayerVoting(CookoutAvatarHand hand)
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0xA1C438", Offset = "0xA1C438", VA = "0xA1C438")]
	internal static void OnPlayerEndVoting(CookoutAvatarHand hand)
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0xA1C4C4", Offset = "0xA1C4C4", VA = "0xA1C4C4")]
	internal static void OnPlayerVotedYes(CookoutAvatarHand hand)
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0xA1C57C", Offset = "0xA1C57C", VA = "0xA1C57C")]
	internal static void OnPlayerVotedNo(CookoutAvatarHand hand)
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0xA1C634", Offset = "0xA1C634", VA = "0xA1C634")]
	internal static void OnBurningIngredientTouchWater(Transform transform)
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0xA1C6D0", Offset = "0xA1C6D0", VA = "0xA1C6D0")]
	internal static void StartFrySoundLoop(Transform transform)
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0xA1C7BC", Offset = "0xA1C7BC", VA = "0xA1C7BC")]
	internal static void StopFrySoundLoop(Transform transform)
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0xA1C834", Offset = "0xA1C834", VA = "0xA1C834")]
	internal static void startFireLoop(Transform transform)
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0xA1C920", Offset = "0xA1C920", VA = "0xA1C920")]
	internal static void StopFireLoop(Transform transform)
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0xA1C998", Offset = "0xA1C998", VA = "0xA1C998")]
	internal static void OnEatIngredient(Transform transform)
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0xA1CA34", Offset = "0xA1CA34", VA = "0xA1CA34")]
	internal static void OnIngredientThrownCollision(Transform transform, Grabbable.GrabbableDropSound dropSound)
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0xA1CAE8", Offset = "0xA1CAE8", VA = "0xA1CAE8")]
	internal static void OnIngredientNicelyFriedFeedback(Vector3 position)
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0xA1CB90", Offset = "0xA1CB90", VA = "0xA1CB90")]
	internal static void OnIngredientOnFireAlarm(Vector3 position)
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0xA1CC38", Offset = "0xA1CC38", VA = "0xA1CC38")]
	internal static void OnGrabBurningObject(Transform transform)
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0xA1CCD4", Offset = "0xA1CCD4", VA = "0xA1CCD4")]
	internal static void OnIngredientSliced(Transform transform)
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0xA1CD70", Offset = "0xA1CD70", VA = "0xA1CD70")]
	internal static void OnCuttingBoardChop(Transform transform)
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xA1CE0C", Offset = "0xA1CE0C", VA = "0xA1CE0C")]
	internal static void OnIngredientChop(Transform transform)
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xA1CEA8", Offset = "0xA1CEA8", VA = "0xA1CEA8")]
	internal static void OnUnlockGrill(Transform transform)
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0xA1CF44", Offset = "0xA1CF44", VA = "0xA1CF44")]
	internal static void OnUnlockWashBasin(Transform transform)
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0xA1CFE0", Offset = "0xA1CFE0", VA = "0xA1CFE0")]
	internal static void OnCleaverTransformToBouquet(Transform transform)
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0xA1D0B0", Offset = "0xA1D0B0", VA = "0xA1D0B0")]
	internal static void OnBouquetTransformToCleaver(Transform transform)
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xA1D138", Offset = "0xA1D138", VA = "0xA1D138")]
	internal static void OnExtinguisherSprayStarted(Transform transform)
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xA1D224", Offset = "0xA1D224", VA = "0xA1D224")]
	internal static void OnExtinguisherSprayStopped(Transform transform, bool immediate = false)
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xA1D31C", Offset = "0xA1D31C", VA = "0xA1D31C")]
	internal static void OnFridgeButtonClicked(Transform transform)
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xA1D3B8", Offset = "0xA1D3B8", VA = "0xA1D3B8")]
	internal static void OnFridgeExtending(Transform transform)
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xA1D454", Offset = "0xA1D454", VA = "0xA1D454")]
	internal static void OnFridgeLowering(Transform transform)
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0xA1D4F0", Offset = "0xA1D4F0", VA = "0xA1D4F0")]
	internal static void OnFridgeMist(Transform transform)
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0xA1D58C", Offset = "0xA1D58C", VA = "0xA1D58C")]
	internal static void OnSpiceShakers(Transform transform)
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0xA1D628", Offset = "0xA1D628", VA = "0xA1D628")]
	internal static PlaySoundResult OnCondimentSqueeze(Transform transform)
	{
		return null;
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0xA1D6C4", Offset = "0xA1D6C4", VA = "0xA1D6C4")]
	internal static void OnWashScrubbing(Transform transform)
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0xA1D760", Offset = "0xA1D760", VA = "0xA1D760")]
	internal static void OnDryScrubbing(Transform transform)
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0xA1D7FC", Offset = "0xA1D7FC", VA = "0xA1D7FC")]
	internal static void OnWashWetPlate(Transform transform)
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0xA1D898", Offset = "0xA1D898", VA = "0xA1D898")]
	internal static void OnWashClean(Transform transform)
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0xA1D934", Offset = "0xA1D934", VA = "0xA1D934")]
	internal static void OnWashInstaCleaned(Transform transform)
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xA1DA20", Offset = "0xA1DA20", VA = "0xA1DA20")]
	internal static void OnCustomerEat(Transform transform)
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0xA1DABC", Offset = "0xA1DABC", VA = "0xA1DABC")]
	internal static void OnCustomerServedPerfect(Transform transform, CustomerType customerType, bool isFemale)
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0xA1DD38", Offset = "0xA1DD38", VA = "0xA1DD38")]
	internal static void OnCustomerServedNonPerfect(Transform transform, CustomerType customerType, bool isFemale)
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0xA1DE14", Offset = "0xA1DE14", VA = "0xA1DE14")]
	internal static void OnCustomerArrival(Transform transform, CustomerType customerType, bool isFemale)
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0xA1DEF0", Offset = "0xA1DEF0", VA = "0xA1DEF0")]
	internal static void OnCustomerTimeRunningOut(Transform transform, CustomerType customerType, bool isFemale)
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0xA1DFCC", Offset = "0xA1DFCC", VA = "0xA1DFCC")]
	internal static void OnCustomerTimedOut(Transform transform, CustomerType customerType, bool isFemale)
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0xA1E0A8", Offset = "0xA1E0A8", VA = "0xA1E0A8")]
	internal static void OnJesterAbility(Transform transform)
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0xA1E144", Offset = "0xA1E144", VA = "0xA1E144")]
	internal static void OnThiefSteal(Transform transform)
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0xA1E1E0", Offset = "0xA1E1E0", VA = "0xA1E1E0")]
	internal static void OnFinalBossAskForMore(Transform transform, CustomerType customerType)
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0xA1E2DC", Offset = "0xA1E2DC", VA = "0xA1E2DC")]
	internal static void OnFinalBossIsFull(Transform transform, CustomerType customerType)
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0xA1E3D8", Offset = "0xA1E3D8", VA = "0xA1E3D8")]
	internal static void OnFinalBossCelebrate(Transform transform, CustomerType customerType)
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0xA1E4D4", Offset = "0xA1E4D4", VA = "0xA1E4D4")]
	internal static void OnCustomerHitLight(Transform transform)
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0xA1E570", Offset = "0xA1E570", VA = "0xA1E570")]
	internal static void OnCustomerHitHeavy(Transform transform)
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0xA1E60C", Offset = "0xA1E60C", VA = "0xA1E60C")]
	internal static void OnHandingInFailedPlate(Transform transform, CustomerType type)
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0xA1DB98", Offset = "0xA1DB98", VA = "0xA1DB98")]
	private static string GetCustomerSpecificTrigger(CustomerType customerType, bool isFemale)
	{
		return null;
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0xA1E774", Offset = "0xA1E774", VA = "0xA1E774")]
	internal static void OnEnvironmentChanged()
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0xA1E9CC", Offset = "0xA1E9CC", VA = "0xA1E9CC")]
	internal static PlaySoundResult EnvironmentAmbience(int index, Transform transform)
	{
		return null;
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0xA1AA80", Offset = "0xA1AA80", VA = "0xA1AA80")]
	internal static void LauncherAmbience(Transform transform)
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0xA1EA9C", Offset = "0xA1EA9C", VA = "0xA1EA9C")]
	internal static void PlayLiftUpSound(Transform transform)
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xA1EB38", Offset = "0xA1EB38", VA = "0xA1EB38")]
	internal static void PlayLiftDownSound(Transform transform)
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0xA1EBD4", Offset = "0xA1EBD4", VA = "0xA1EBD4")]
	internal static void OnFryingPanSoftHit(Transform transform)
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0xA1EC70", Offset = "0xA1EC70", VA = "0xA1EC70")]
	internal static void OnFryingPanHardHit(Transform transform)
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0xA1ED0C", Offset = "0xA1ED0C", VA = "0xA1ED0C")]
	internal static void OnRadishDudeHit(Transform transform)
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0xA1EDA8", Offset = "0xA1EDA8", VA = "0xA1EDA8")]
	internal static void OnCatHit(Transform transform)
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0xA1EE44", Offset = "0xA1EE44", VA = "0xA1EE44")]
	internal static void OnCatPet(Transform transform)
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0xA1EEE0", Offset = "0xA1EEE0", VA = "0xA1EEE0")]
	internal static void OnCabinIsMoving(Transform transform)
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0xA1EF7C", Offset = "0xA1EF7C", VA = "0xA1EF7C")]
	internal static void OnMapTransition(Transform transform)
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0xA1F018", Offset = "0xA1F018", VA = "0xA1F018")]
	internal static void OnContinueMarkerMove(Transform transform)
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0xA1F0B4", Offset = "0xA1F0B4", VA = "0xA1F0B4")]
	internal static void OnBubbleSpawn(Transform transform)
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0xA1F150", Offset = "0xA1F150", VA = "0xA1F150")]
	internal static void OnBubblePop(Transform transform)
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0xA1F1EC", Offset = "0xA1F1EC", VA = "0xA1F1EC")]
	internal static void OnRewardCoins(Transform transform)
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0xA1F2D8", Offset = "0xA1F2D8", VA = "0xA1F2D8")]
	internal static void OnRewardConsumable(Transform transform)
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0xA1F374", Offset = "0xA1F374", VA = "0xA1F374")]
	internal static void OnRewardConsumable(Vector3 position)
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0xA1F41C", Offset = "0xA1F41C", VA = "0xA1F41C")]
	internal static void OnRewardItem(Transform transform)
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0xA1F4B8", Offset = "0xA1F4B8", VA = "0xA1F4B8")]
	internal static PlaySoundResult OnPotionPour(Transform transform)
	{
		return null;
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0xA1F554", Offset = "0xA1F554", VA = "0xA1F554")]
	internal static void OnDrink(Transform transform)
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0xA1F5F0", Offset = "0xA1F5F0", VA = "0xA1F5F0")]
	internal static void OnUncorkPotion(Transform transform)
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0xA1F68C", Offset = "0xA1F68C", VA = "0xA1F68C")]
	internal static void OnInstantGrillActivated(Vector3 position)
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0xA1F734", Offset = "0xA1F734", VA = "0xA1F734")]
	internal static void OnInstantWashActivated(Vector3 position)
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0xA1F824", Offset = "0xA1F824", VA = "0xA1F824")]
	internal static void OnInstantSandwichActivated(Vector3 position)
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0xA1F8CC", Offset = "0xA1F8CC", VA = "0xA1F8CC")]
	internal static void OnPerfectizerActivated(Vector3 position)
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0xA1F974", Offset = "0xA1F974", VA = "0xA1F974")]
	internal static void OnSuperSharpActivated(Vector3 position)
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0xA1FA1C", Offset = "0xA1FA1C", VA = "0xA1FA1C")]
	internal static void OnTofuActivated(Vector3 position)
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0xA1FAC4", Offset = "0xA1FAC4", VA = "0xA1FAC4")]
	internal static void OnTownCelebrationStarFilling(Transform transform)
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0xA1FB60", Offset = "0xA1FB60", VA = "0xA1FB60")]
	internal static void OnTownCelebrationStarStopFilling(Transform transform)
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0xA1FBD0", Offset = "0xA1FBD0", VA = "0xA1FBD0")]
	internal static void OnTownCelebrationStar1Filled(Transform transform)
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0xA1FCBC", Offset = "0xA1FCBC", VA = "0xA1FCBC")]
	internal static void OnTownCelebrationStar2Filled(Transform transform)
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0xA1FDA8", Offset = "0xA1FDA8", VA = "0xA1FDA8")]
	internal static void OnTownCelebrationStar3Filled(Transform transform)
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0xA1FE94", Offset = "0xA1FE94", VA = "0xA1FE94")]
	internal static void OnTownCelebrationConfetti(Transform transform)
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xA1FF30", Offset = "0xA1FF30", VA = "0xA1FF30")]
	internal static void OnTownCelebrationFireworks(Transform transform)
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0xA1FFCC", Offset = "0xA1FFCC", VA = "0xA1FFCC")]
	internal static void OnTownCompleteEnter(Transform transform, bool isFinalLevel)
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0xA200C8", Offset = "0xA200C8", VA = "0xA200C8")]
	internal static void OnNewEnvironmentUnlocked(Transform transform)
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0xA20164", Offset = "0xA20164", VA = "0xA20164")]
	internal static void OnFinalLevelSingleFirework(Transform transform)
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0xA20200", Offset = "0xA20200", VA = "0xA20200")]
	internal static void OnFinalLevelMultipleFireworks(Transform transform)
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0xA2029C", Offset = "0xA2029C", VA = "0xA2029C")]
	internal static PlaySoundResult OnFinalLevelGoldenSandwich(Transform transform)
	{
		return null;
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0xA20338", Offset = "0xA20338", VA = "0xA20338")]
	internal static void PlayClickSoundAt(Transform transform)
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0xA203D4", Offset = "0xA203D4", VA = "0xA203D4")]
	internal static void OnButtonLocked(Transform transform)
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0xA20470", Offset = "0xA20470", VA = "0xA20470")]
	internal static void PlayStarPopupSound(Transform transform, float delay = 0f)
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0xA2050C", Offset = "0xA2050C", VA = "0xA2050C")]
	internal static void OnConsumableEquipped(Transform transform)
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0xA205A8", Offset = "0xA205A8", VA = "0xA205A8")]
	internal static void OnConsumableUnequipped(Transform transform)
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0xA20644", Offset = "0xA20644", VA = "0xA20644")]
	internal static void OnBuy(Transform transform)
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0xA206E0", Offset = "0xA206E0", VA = "0xA206E0")]
	internal static void OnGoalSummaryStarChime(Transform transform)
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0xA207CC", Offset = "0xA207CC", VA = "0xA207CC")]
	internal static void OnGoalSummaryFailed(Transform transform)
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0xA20868", Offset = "0xA20868", VA = "0xA20868")]
	internal static void OnGoalSummaryBoardFall(Transform transform)
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0xA20904", Offset = "0xA20904", VA = "0xA20904")]
	internal static void OnGoalStarFlyingToMeter(Transform transform)
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0xA209A0", Offset = "0xA209A0", VA = "0xA209A0")]
	internal static void OnStarBarEnter(Transform transform)
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0xA20A3C", Offset = "0xA20A3C", VA = "0xA20A3C")]
	internal static void OnStarBarExit(Transform transform)
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0xA20AD8", Offset = "0xA20AD8", VA = "0xA20AD8")]
	internal static void OnPreRoundUIEnter(Transform transform)
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0xA20B74", Offset = "0xA20B74", VA = "0xA20B74")]
	internal static void OnPreRoundUIExit(Transform transform)
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0xA20C10", Offset = "0xA20C10", VA = "0xA20C10")]
	internal static void OnTableCenterUIEnter(Transform transform)
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0xA20CAC", Offset = "0xA20CAC", VA = "0xA20CAC")]
	internal static void OnTableCenterUIExit(Transform transform)
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0xA20D48", Offset = "0xA20D48", VA = "0xA20D48")]
	internal static void OnTutorialStepCleared(Transform transform)
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xA20DE4", Offset = "0xA20DE4", VA = "0xA20DE4")]
	internal static void OnEquipPotionParticles(Transform transform)
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0xA20ED0", Offset = "0xA20ED0", VA = "0xA20ED0")]
	internal static void OnTimeGoalRunningOut(Transform transform, int urgencyLevel)
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0xA21068", Offset = "0xA21068", VA = "0xA21068")]
	internal static void OnTimeGoalFailed(Transform transform)
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0xA2110C", Offset = "0xA2110C", VA = "0xA2110C")]
	internal static void OnStopTimeGoalWarnings(Transform transform)
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0xA20FA8", Offset = "0xA20FA8", VA = "0xA20FA8")]
	internal static void StopAllTimeWarnings(Transform transform)
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0xA21110", Offset = "0xA21110", VA = "0xA21110")]
	internal static void OnPresentNewGoal(Transform transform, int goalID)
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0xA21214", Offset = "0xA21214", VA = "0xA21214")]
	internal static void OnElevatorMusicJingle()
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0xA2129C", Offset = "0xA2129C", VA = "0xA2129C")]
	internal static PlaySoundResult PlayIntroStoryNarration(Transform transform)
	{
		return null;
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0xA21338", Offset = "0xA21338", VA = "0xA21338")]
	internal static PlaySoundResult PlayEndlessStoryNarration(Transform transform)
	{
		return null;
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0xA213D4", Offset = "0xA213D4", VA = "0xA213D4")]
	internal static PlaySoundResult PlayCreativeStoryNarration(Transform transform)
	{
		return null;
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0xA214B4", Offset = "0xA214B4", VA = "0xA214B4")]
	internal static PlaySoundResult OnStoryNarration(Transform transform, CupData data)
	{
		return null;
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0xA2154C", Offset = "0xA2154C", VA = "0xA2154C")]
	internal static void OnStopNarration(Transform transform, CupData data)
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0xA215B8", Offset = "0xA215B8", VA = "0xA215B8")]
	internal static PlaySoundResult PlayFinalLevelOutro(Transform transform, bool threeStarRound)
	{
		return null;
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0xA21688", Offset = "0xA21688", VA = "0xA21688")]
	internal static PlaySoundResult OnItemDroppedSoft(Transform transform, Grabbable.GrabbableDropSound dropSound)
	{
		return null;
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0xA2177C", Offset = "0xA2177C", VA = "0xA2177C")]
	internal static PlaySoundResult OnItemDroppedRegular(Transform transform, Grabbable.GrabbableDropSound dropSound)
	{
		return null;
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0xA218C0", Offset = "0xA218C0", VA = "0xA218C0")]
	internal static PlaySoundResult OnItemDroppedHard(Transform transform, Grabbable.GrabbableDropSound dropSound)
	{
		return null;
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0xA21A2C", Offset = "0xA21A2C", VA = "0xA21A2C")]
	internal static PlaySoundResult OnBotCrank(Transform transform)
	{
		return null;
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0xA21AC8", Offset = "0xA21AC8", VA = "0xA21AC8")]
	internal static PlaySoundResult OnBotPowerDown(Transform transform)
	{
		return null;
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0xA21B64", Offset = "0xA21B64", VA = "0xA21B64")]
	internal static PlaySoundResult OnBotOffline(Transform transform)
	{
		return null;
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0xA21C00", Offset = "0xA21C00", VA = "0xA21C00")]
	internal static PlaySoundResult OnBotPowerUp(Transform transform)
	{
		return null;
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0xA21C9C", Offset = "0xA21C9C", VA = "0xA21C9C")]
	internal static PlaySoundResult OnBotRecharging(Transform transform)
	{
		return null;
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0xA21D38", Offset = "0xA21D38", VA = "0xA21D38")]
	internal static PlaySoundResult OnBotCrankFullyRecharged(Transform transform)
	{
		return null;
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0xA21DD4", Offset = "0xA21DD4", VA = "0xA21DD4")]
	internal static PlaySoundResult OnBotCrankOverchargeCharged(Transform transform)
	{
		return null;
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0xA21E70", Offset = "0xA21E70", VA = "0xA21E70")]
	internal static void OnBotRechargingWhileActive(Transform transform)
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0xA21F0C", Offset = "0xA21F0C", VA = "0xA21F0C")]
	internal static void OnBotSupercharged(Transform transform)
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0xA21FA8", Offset = "0xA21FA8", VA = "0xA21FA8")]
	internal static PlaySoundResult OnBotCrankSupercharged(Transform transform)
	{
		return null;
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0xA22044", Offset = "0xA22044", VA = "0xA22044")]
	internal static void OnBotTurnHead(Transform transform)
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0xA220E0", Offset = "0xA220E0", VA = "0xA220E0")]
	internal static PlaySoundResult OnBotFailedWork(Transform transform)
	{
		return null;
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0xA2217C", Offset = "0xA2217C", VA = "0xA2217C")]
	internal static PlaySoundResult OnBotFinishedWork(Transform transform)
	{
		return null;
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0xA22218", Offset = "0xA22218", VA = "0xA22218")]
	internal static PlaySoundResult OnBotFinishedWash(Transform transform)
	{
		return null;
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0xA22304", Offset = "0xA22304", VA = "0xA22304")]
	internal static PlaySoundResult OnBotRequestHelp(Transform transform)
	{
		return null;
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0xA223A0", Offset = "0xA223A0", VA = "0xA223A0")]
	internal static PlaySoundResult OnBotHitLight(Transform transform)
	{
		return null;
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0xA2243C", Offset = "0xA2243C", VA = "0xA2243C")]
	internal static PlaySoundResult OnBotHitHeavy(Transform transform)
	{
		return null;
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0xA224D8", Offset = "0xA224D8", VA = "0xA224D8")]
	[IteratorStateMachine(typeof(<OnBotStartWorking>d__175))]
	internal static IEnumerator OnBotStartWorking(Transform transform, RecipeIngredient ingredient, int plateID, Bot bot)
	{
		return null;
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0xA2258C", Offset = "0xA2258C", VA = "0xA2258C")]
	[IteratorStateMachine(typeof(<OnBotStartWashing>d__176))]
	internal static IEnumerator OnBotStartWashing(Transform transform, int plateID, Bot bot)
	{
		return null;
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0xA22630", Offset = "0xA22630", VA = "0xA22630")]
	internal static PlaySoundResult OnBotTutorialFullDescription(Transform transform, TutorialStep newStep)
	{
		return null;
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0xA22704", Offset = "0xA22704", VA = "0xA22704")]
	internal static PlaySoundResult OnBotTutorialShortVersion(Transform transform, TutorialStep newStep)
	{
		return null;
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0xA22800", Offset = "0xA22800", VA = "0xA22800")]
	internal static PlaySoundResult OnBotGreetings(Transform transform)
	{
		return null;
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0xA2289C", Offset = "0xA2289C", VA = "0xA2289C")]
	internal static PlaySoundResult OnBotWonRound(Transform transform)
	{
		return null;
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0xA22938", Offset = "0xA22938", VA = "0xA22938")]
	internal static PlaySoundResult OnBotLeave(Transform transform)
	{
		return null;
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0xA229D4", Offset = "0xA229D4", VA = "0xA229D4")]
	internal static PlaySoundResult OnBotLostRound(Transform transform)
	{
		return null;
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0xA22A70", Offset = "0xA22A70", VA = "0xA22A70")]
	internal static PlaySoundResult OnBotRoundCountdownStart(Transform transform)
	{
		return null;
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0xA22B0C", Offset = "0xA22B0C", VA = "0xA22B0C")]
	internal static PlaySoundResult OnBotIdle(Transform transform)
	{
		return null;
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0xA22BA8", Offset = "0xA22BA8", VA = "0xA22BA8")]
	internal static PlaySoundResult OnBotRecommendMultiplayer(Transform transform)
	{
		return null;
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0xA22C44", Offset = "0xA22C44", VA = "0xA22C44")]
	internal static PlaySoundResult OnBotContinueSinglePlayer(Transform transform)
	{
		return null;
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0xA22CE0", Offset = "0xA22CE0", VA = "0xA22CE0")]
	internal static PlaySoundResult OnBotSwitchToMultiplayer(Transform transform)
	{
		return null;
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0xA22D7C", Offset = "0xA22D7C", VA = "0xA22D7C")]
	internal static void OnLogoAnimationStarted(Transform transform)
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0xA22E18", Offset = "0xA22E18", VA = "0xA22E18")]
	internal static void OnLogoAnimationLeave(Transform transform)
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0xA22EB4", Offset = "0xA22EB4", VA = "0xA22EB4")]
	internal static void OnMirrorKissed(Transform transform)
	{
	}
}
[Token(Token = "0x20000D4")]
public class NotNull : Attribute
{
	[Token(Token = "0x600061A")]
	[Address(RVA = "0xA248DC", Offset = "0xA248DC", VA = "0xA248DC")]
	public NotNull()
	{
	}
}
[Token(Token = "0x20000D5")]
public static class AssetValidator
{
	[Token(Token = "0x600061B")]
	[Address(RVA = "0xA248E4", Offset = "0xA248E4", VA = "0xA248E4")]
	private static bool IsNull(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600061C")]
	public static void Validate<T>(T component) where T : Component
	{
	}
}
[Token(Token = "0x20000D6")]
public class CollisionCallback : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action<Collider> onTriggerEnter;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action<Collider> onTriggerExit;

	[Token(Token = "0x600061D")]
	[Address(RVA = "0xA24984", Offset = "0xA24984", VA = "0xA24984")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0xA249A0", Offset = "0xA249A0", VA = "0xA249A0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0xA249BC", Offset = "0xA249BC", VA = "0xA249BC")]
	public CollisionCallback()
	{
	}
}
[Token(Token = "0x20000D7")]
public class CookoutApplicationLifecycle : SingleInstanceBehavior<CookoutApplicationLifecycle>
{
	[Token(Token = "0x20000D8")]
	public delegate void HMDMounted();

	[Token(Token = "0x20000D9")]
	public delegate void HMDUnmounted();

	[Token(Token = "0x20000DA")]
	public delegate void HasFocusChanged();

	[Token(Token = "0x20000DB")]
	public delegate void ApplicationPauseChanged();

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PhotonView pv;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PrefabRegistry prefabRegistry;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private CookoutControllerSettings cookoutControllerSettings;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private CookoutAvatar[] avatars;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private CookoutControllerSettings controllerSettings;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isInitialized;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private OculusAvatar2InputManager oculusAvatar2InputManager;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool hadFocus;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool userWasPresent;

	[Token(Token = "0x170000F6")]
	public static bool IsSinglePlayerPaused
	{
		[Token(Token = "0x6000629")]
		[Address(RVA = "0xA24EAC", Offset = "0xA24EAC", VA = "0xA24EAC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000F7")]
	public bool IsHMDMounted
	{
		[Token(Token = "0x600062A")]
		[Address(RVA = "0xA24EC8", Offset = "0xA24EC8", VA = "0xA24EC8")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600062B")]
		[Address(RVA = "0xA24ED0", Offset = "0xA24ED0", VA = "0xA24ED0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000F8")]
	public bool IsPaused
	{
		[Token(Token = "0x600062C")]
		[Address(RVA = "0xA24EDC", Offset = "0xA24EDC", VA = "0xA24EDC")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600062D")]
		[Address(RVA = "0xA24EE4", Offset = "0xA24EE4", VA = "0xA24EE4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000F9")]
	public bool IsFocused
	{
		[Token(Token = "0x600062E")]
		[Address(RVA = "0xA24EF0", Offset = "0xA24EF0", VA = "0xA24EF0")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600062F")]
		[Address(RVA = "0xA24EF8", Offset = "0xA24EF8", VA = "0xA24EF8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event HMDMounted OnHMDMounted
	{
		[Token(Token = "0x6000620")]
		[Address(RVA = "0xA249C4", Offset = "0xA249C4", VA = "0xA249C4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000621")]
		[Address(RVA = "0xA24A60", Offset = "0xA24A60", VA = "0xA24A60")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event HMDUnmounted OnHMDUnmounted
	{
		[Token(Token = "0x6000622")]
		[Address(RVA = "0xA24AFC", Offset = "0xA24AFC", VA = "0xA24AFC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000623")]
		[Address(RVA = "0xA24B98", Offset = "0xA24B98", VA = "0xA24B98")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event HasFocusChanged OnHasFocusChanged
	{
		[Token(Token = "0x6000624")]
		[Address(RVA = "0xA24C34", Offset = "0xA24C34", VA = "0xA24C34")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000625")]
		[Address(RVA = "0xA24CD0", Offset = "0xA24CD0", VA = "0xA24CD0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event ApplicationPauseChanged OnApplicationPauseChanged
	{
		[Token(Token = "0x6000626")]
		[Address(RVA = "0xA24D6C", Offset = "0xA24D6C", VA = "0xA24D6C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000627")]
		[Address(RVA = "0xA24E08", Offset = "0xA24E08", VA = "0xA24E08")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0xA24EA4", Offset = "0xA24EA4", VA = "0xA24EA4")]
	public bool IsInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0xA24F04", Offset = "0xA24F04", VA = "0xA24F04")]
	private void OnInputFocusLost()
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0xA24F0C", Offset = "0xA24F0C", VA = "0xA24F0C")]
	private void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0xA24F18", Offset = "0xA24F18", VA = "0xA24F18")]
	public void LocalAvatarInitialized(CookoutAvatar avatar)
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0xA24F98", Offset = "0xA24F98", VA = "0xA24F98", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0xA2539C", Offset = "0xA2539C", VA = "0xA2539C", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0xA25490", Offset = "0xA25490", VA = "0xA25490")]
	private void UserNoLongerPresent()
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0xA254C8", Offset = "0xA254C8", VA = "0xA254C8")]
	private void UserBecamePresent()
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0xA25518", Offset = "0xA25518", VA = "0xA25518")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0xA2553C", Offset = "0xA2553C", VA = "0xA2553C")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0xA25598", Offset = "0xA25598", VA = "0xA25598")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0xA255F8", Offset = "0xA255F8", VA = "0xA255F8")]
	private void Update()
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0xA2621C", Offset = "0xA2621C", VA = "0xA2621C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0xA262E4", Offset = "0xA262E4", VA = "0xA262E4")]
	private static void PauseSinglePlayerGame()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0xA267C8", Offset = "0xA267C8", VA = "0xA267C8")]
	public static void UnpauseSinglePlayerGame()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0xA254C4", Offset = "0xA254C4", VA = "0xA254C4")]
	private void OnHeadsetUnmounted()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0xA25508", Offset = "0xA25508", VA = "0xA25508")]
	private void OnHeadsetMounted()
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0xA26218", Offset = "0xA26218", VA = "0xA26218")]
	private void OnLostFocus()
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0xA26208", Offset = "0xA26208", VA = "0xA26208")]
	private void OnGotFocus()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0xA26A08", Offset = "0xA26A08", VA = "0xA26A08")]
	public CookoutApplicationLifecycle()
	{
	}
}
[Token(Token = "0x20000DC")]
public enum CookoutPlatformType : byte
{
	[Token(Token = "0x4000569")]
	Invalid,
	[Token(Token = "0x400056A")]
	Oculus,
	[Token(Token = "0x400056B")]
	Steam,
	[Token(Token = "0x400056C")]
	Pico
}
[Token(Token = "0x20000DD")]
public enum ControllerType : byte
{
	[Token(Token = "0x400056E")]
	Invalid,
	[Token(Token = "0x400056F")]
	OculusTouch,
	[Token(Token = "0x4000570")]
	ViveWand,
	[Token(Token = "0x4000571")]
	ValveIndex,
	[Token(Token = "0x4000572")]
	WindowsMixedReality,
	[Token(Token = "0x4000573")]
	HPMotion,
	[Token(Token = "0x4000574")]
	ViveCosmos,
	[Token(Token = "0x4000575")]
	PicoNeo3,
	[Token(Token = "0x4000576")]
	Pico4
}
[Token(Token = "0x20000DE")]
public enum CookoutApplicationState : byte
{
	[Token(Token = "0x4000578")]
	LauncherMenu,
	[Token(Token = "0x4000579")]
	MainGame
}
[Token(Token = "0x20000DF")]
public enum AvatarType : byte
{
	[Token(Token = "0x400057B")]
	Invalid,
	[Token(Token = "0x400057C")]
	OculusAvatar,
	[Token(Token = "0x400057D")]
	CookoutAvatar,
	[Token(Token = "0x400057E")]
	OculusAvatar2
}
[Token(Token = "0x20000E0")]
public enum CookoutAvatarVisualType : byte
{
	[Token(Token = "0x4000580")]
	Monkey,
	[Token(Token = "0x4000581")]
	Sheep,
	[Token(Token = "0x4000582")]
	Pig,
	[Token(Token = "0x4000583")]
	Frog,
	[Token(Token = "0x4000584")]
	Pug,
	[Token(Token = "0x4000585")]
	Cat,
	[Token(Token = "0x4000586")]
	Lion,
	[Token(Token = "0x4000587")]
	Bot,
	[Token(Token = "0x4000588")]
	Schnauzer
}
[Token(Token = "0x20000E1")]
public enum CookoutHandedness : byte
{
	[Token(Token = "0x400058A")]
	Left,
	[Token(Token = "0x400058B")]
	Right
}
[Token(Token = "0x20000E2")]
public enum CookoutVotingHandPose : byte
{
	[Token(Token = "0x400058D")]
	None,
	[Token(Token = "0x400058E")]
	ThumbsUp,
	[Token(Token = "0x400058F")]
	ThumbsDown
}
[Token(Token = "0x20000E3")]
public enum PlayerColor
{
	[Token(Token = "0x4000591")]
	None,
	[Token(Token = "0x4000592")]
	Red,
	[Token(Token = "0x4000593")]
	Yellow,
	[Token(Token = "0x4000594")]
	Blue,
	[Token(Token = "0x4000595")]
	Green
}
[Token(Token = "0x20000E4")]
[Flags]
public enum CookoutHandPose : byte
{
	[Token(Token = "0x4000597")]
	Default = 0,
	[Token(Token = "0x4000598")]
	PointerThumbUp = 1,
	[Token(Token = "0x4000599")]
	RelaxedIndexCurled = 2,
	[Token(Token = "0x400059A")]
	RelaxedThumbCurled = 4,
	[Token(Token = "0x400059B")]
	RelaxedIndexClosed = 8,
	[Token(Token = "0x400059C")]
	ThumbsUp = 3,
	[Token(Token = "0x400059D")]
	Pointer = 5,
	[Token(Token = "0x400059E")]
	thumbIndexCurled = 6,
	[Token(Token = "0x400059F")]
	Fist = 7,
	[Token(Token = "0x40005A0")]
	OkSign = 0xC,
	[Token(Token = "0x40005A1")]
	OkSignAlt = 0xE,
	[Token(Token = "0x40005A2")]
	PointerThumbUpAlt = 9,
	[Token(Token = "0x40005A3")]
	RelaxedIndexCurledAlt = 0xA,
	[Token(Token = "0x40005A4")]
	ThumbsUpAlt = 0xB,
	[Token(Token = "0x40005A5")]
	PointerAlt = 0xD,
	[Token(Token = "0x40005A6")]
	FistAlt = 0xF,
	[Token(Token = "0x40005A7")]
	CustomGrip = 0x10
}
[Token(Token = "0x20000E5")]
public enum CookoutCustomHandPose : byte
{
	[Token(Token = "0x40005A9")]
	None,
	[Token(Token = "0x40005AA")]
	GrabChessPiece,
	[Token(Token = "0x40005AB")]
	GrabDefault,
	[Token(Token = "0x40005AC")]
	GrabGeneric,
	[Token(Token = "0x40005AD")]
	GrabPencil,
	[Token(Token = "0x40005AE")]
	GrabPhotosphere,
	[Token(Token = "0x40005AF")]
	GrabPingPongBall,
	[Token(Token = "0x40005B0")]
	GrabSelfieStick,
	[Token(Token = "0x40005B1")]
	Handshake,
	[Token(Token = "0x40005B2")]
	HighFive
}
[Serializable]
[Token(Token = "0x20000E6")]
public sealed class CookoutRichPresence
{
	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string apiName;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool joinable;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string deeplinkMsg;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int capacity;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int capacityMax;

	[Token(Token = "0x6000653")]
	[Address(RVA = "0xA26E64", Offset = "0xA26E64", VA = "0xA26E64")]
	public CookoutRichPresence()
	{
	}
}
[Serializable]
[Token(Token = "0x20000E7")]
public struct CookoutUserId
{
	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public CookoutPlatformType platformType;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public ulong platformId;

	[Token(Token = "0x6000654")]
	[Address(RVA = "0xA26E6C", Offset = "0xA26E6C", VA = "0xA26E6C")]
	public static bool operator ==(CookoutUserId lhs, CookoutUserId rhs)
	{
		return default(bool);
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0xA27058", Offset = "0xA27058", VA = "0xA27058")]
	public static bool operator !=(CookoutUserId lhs, CookoutUserId rhs)
	{
		return default(bool);
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0xA270DC", Offset = "0xA270DC", VA = "0xA270DC", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0xA26EEC", Offset = "0xA26EEC", VA = "0xA26EEC", Slot = "0")]
	public override bool Equals(object o)
	{
		return default(bool);
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0xA27198", Offset = "0xA27198", VA = "0xA27198", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Serializable]
[Token(Token = "0x20000E8")]
public sealed class CookoutUserData
{
	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public CookoutUserId userId;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string name;

	[Token(Token = "0x6000659")]
	[Address(RVA = "0xA271A0", Offset = "0xA271A0", VA = "0xA271A0", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0xA27258", Offset = "0xA27258", VA = "0xA27258")]
	public CookoutUserData()
	{
	}
}
[Serializable]
[Token(Token = "0x20000E9")]
public struct NetMsgSpawnPlayerAvatar
{
	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int viewId;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public CookoutUserId userId;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	public AvatarType avatarType;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
	public CookoutAvatarVisualType avatarVisualType;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
	public int preselectedOculusAvatar;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	public ControllerType controllerType;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public AvatarBodyType bodyType;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public AvatarHatType hatType;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	public int headMaterialIndex;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public AvatarHandMaterial handMaterial;
}
[Serializable]
[Token(Token = "0x20000EA")]
public struct NetMsgAvatarHand
{
	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int viewId;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public CookoutHandedness handedness;
}
[Token(Token = "0x20000EB")]
public static class RoomProperty
{
	[Token(Token = "0x40005C8")]
	public const string RoomVersion = "V";

	[Token(Token = "0x40005C9")]
	public const string RoomOwner = "o";

	[Token(Token = "0x40005CA")]
	public const string RoomIntent = "i";

	[Token(Token = "0x40005CB")]
	public const string RoomVisibility = "v";

	[Token(Token = "0x40005CC")]
	public const string RoomPlayerProgression = "l";

	[Token(Token = "0x40005CD")]
	public const string PlayerIDList = "p";

	[Token(Token = "0x40005CE")]
	public const string BlockIDList = "b";

	[Token(Token = "0x40005CF")]
	public const string PlayerNameList = "N";

	[Token(Token = "0x40005D0")]
	public const string BlockNameList = "n";

	[Token(Token = "0x40005D1")]
	public const string RoomSelectedTown = "s";
}
[Token(Token = "0x20000EC")]
public enum RoomIntent
{
	[Token(Token = "0x40005D3")]
	Casual,
	[Token(Token = "0x40005D4")]
	Progression,
	[Token(Token = "0x40005D5")]
	Perfection,
	[Token(Token = "0x40005D6")]
	Endless,
	[Token(Token = "0x40005D7")]
	Assist
}
[Token(Token = "0x20000ED")]
public enum RoomVisibility
{
	[Token(Token = "0x40005D9")]
	None,
	[Token(Token = "0x40005DA")]
	Friends,
	[Token(Token = "0x40005DB")]
	All
}
[StructLayout(2)]
[Token(Token = "0x20000EE")]
public struct RoomVersion
{
	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public readonly int buffer;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public readonly ushort major;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public readonly ushort minor;

	[Token(Token = "0x600065B")]
	[Address(RVA = "0xA27260", Offset = "0xA27260", VA = "0xA27260")]
	public RoomVersion(int versionBuffer)
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0xA27268", Offset = "0xA27268", VA = "0xA27268")]
	public RoomVersion(int versionMajor, int versionMinor)
	{
	}
}
[Token(Token = "0x20000EF")]
public enum CookoutDisconnectReason
{
	[Token(Token = "0x40005E0")]
	None,
	[Token(Token = "0x40005E1")]
	Kicked,
	[Token(Token = "0x40005E2")]
	LostConnectionToServer
}
[Token(Token = "0x20000F0")]
public static class CookoutAux
{
	[Token(Token = "0x40005E3")]
	public const int maxPlayerCount = 4;

	[Token(Token = "0x40005E4")]
	public const string UserId = "UserId";

	[Token(Token = "0x40005E5")]
	public const string UserName = "UserName";

	[Token(Token = "0x40005E6")]
	public const string SCENE_LAUNCHER = "SamusLauncher";

	[Token(Token = "0x40005E7")]
	public const string SCENE_MAIN = "SamusMain";

	[Token(Token = "0x40005E8")]
	public const string API_NAME_MENU = "cookout_menu";

	[Token(Token = "0x40005E9")]
	public const string API_NAME_SINGLEPLAYER = "cookout_singleplayer";

	[Token(Token = "0x40005EA")]
	public const string API_NAME_MULTIPLAYER = "cookout_multiplayer";

	[Token(Token = "0x40005EB")]
	public const float CONVEYOR_BELT_DELTA_DEG_SLOW = 18f;

	[Token(Token = "0x40005EC")]
	public const float CONVEYOR_BELT_DELTA_DEG_FAST = 25f;

	[Token(Token = "0x40005ED")]
	public const float DELIVER_TARGET_HEIGHT_DELTA = 0.4f;

	[Token(Token = "0x40005EE")]
	public const float DELIVER_SPEED = 4.5f;

	[Token(Token = "0x40005EF")]
	private const int CONDIMENT_PARTICLES_MAX_MUL = 100;

	[Token(Token = "0x40005F0")]
	private const int CONDIMENT_PARTICLES_RATE_MUL = 20;

	[Token(Token = "0x40005F1")]
	private const int CONDIMENT_RATE_QUEST1 = 1;

	[Token(Token = "0x40005F2")]
	private const int CONDIMENT_RATE_QUEST2 = 5;

	[Token(Token = "0x40005F3")]
	public const int CONDIMENT_THRESHOLD = 50;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int condimentRate;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly int condimentParticlesMax;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly int condimentParticlesRate;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static readonly Color buttonColorSelect;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static readonly Color buttonColorDeselect;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static readonly bool isQuestFamily;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public static readonly bool isQuest1;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	public static readonly bool isQuest2;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
	public static readonly bool isAndroid;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly Vector3 avatarDefaultPosition;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public static bool isApplicationQuitting;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string appVersion;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string appVersionLatest;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string savePath;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static int ticks;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public static int ticksFixed;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static bool startTutorialImmediately;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public static bool showMultiplayerMenuImmediately;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public static CookoutDisconnectReason disconnectReason;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static CookoutAvatar[] avatars;

	[Token(Token = "0x170000FA")]
	public static bool OfflineMode
	{
		[Token(Token = "0x600065E")]
		[Address(RVA = "0xA272EC", Offset = "0xA272EC", VA = "0xA272EC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000FB")]
	public static CookoutApplicationState ApplicationState
	{
		[Token(Token = "0x600065F")]
		[Address(RVA = "0xA26638", Offset = "0xA26638", VA = "0xA26638")]
		get
		{
			return default(CookoutApplicationState);
		}
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0xA27274", Offset = "0xA27274", VA = "0xA27274")]
	public static float NetworkedAngleConveyorBelt(float deltaDeg)
	{
		return default(float);
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0xA27374", Offset = "0xA27374", VA = "0xA27374")]
	static CookoutAux()
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0xA2745C", Offset = "0xA2745C", VA = "0xA2745C")]
	public static void Quit()
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0xA27464", Offset = "0xA27464", VA = "0xA27464")]
	public static int Mod(int a, int b)
	{
		return default(int);
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0xA274EC", Offset = "0xA274EC", VA = "0xA274EC")]
	public static float Mod(float a, float b)
	{
		return default(float);
	}

	[Token(Token = "0x6000664")]
	public static T[] EnumArray<T>() where T : Enum
	{
		return null;
	}

	[Token(Token = "0x6000665")]
	public static int EnumLength<T>() where T : Enum
	{
		return default(int);
	}

	[Token(Token = "0x6000666")]
	public static void ReplaceWithLast<T>(List<T> li, int i, int iLast)
	{
	}

	[Token(Token = "0x6000667")]
	public static void ReplaceWithLast<T>(List<T> li, int i)
	{
	}

	[Token(Token = "0x6000668")]
	public static void ReplaceWithLast<T>(List<T> li, T instance)
	{
	}

	[Token(Token = "0x6000669")]
	public static T CastOrDefault<T>(ExitGames.Client.Photon.Hashtable dict, string key, T defaultValue)
	{
		return (T)null;
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0xA27500", Offset = "0xA27500", VA = "0xA27500")]
	public static void FreezePhysics(Rigidbody rb)
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0xA275B4", Offset = "0xA275B4", VA = "0xA275B4")]
	public static void UnfreezePhysics(Rigidbody rb)
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0xA275E4", Offset = "0xA275E4", VA = "0xA275E4")]
	public static bool SecondsElapsed(float seconds)
	{
		return default(bool);
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0xA2764C", Offset = "0xA2764C", VA = "0xA2764C")]
	public static void SetAvatars(CookoutAvatar[] cookoutAvatars)
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0xA276A8", Offset = "0xA276A8", VA = "0xA276A8")]
	public static bool TryGetAvatarById(int id, out CookoutAvatar avatar)
	{
		return default(bool);
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0xA266F8", Offset = "0xA266F8", VA = "0xA266F8")]
	public static bool HasPlayerAvatar()
	{
		return default(bool);
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0xA26758", Offset = "0xA26758", VA = "0xA26758")]
	public static CookoutAvatar GetPlayerAvatar()
	{
		return null;
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0xA277D0", Offset = "0xA277D0", VA = "0xA277D0")]
	public static AvatarType GetPlayerAvatarType()
	{
		return default(AvatarType);
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0xA27848", Offset = "0xA27848", VA = "0xA27848")]
	public static Transform GetPlayerRoot()
	{
		return null;
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0xA278C0", Offset = "0xA278C0", VA = "0xA278C0")]
	public static Transform GetPlayerHeadRoot()
	{
		return null;
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0xA27940", Offset = "0xA27940", VA = "0xA27940")]
	public static CookoutAvatar AllocAvatar(int viewId)
	{
		return null;
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0xA27AC8", Offset = "0xA27AC8", VA = "0xA27AC8")]
	public static void FreeAvatar(CookoutAvatar avatar)
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0xA27BE4", Offset = "0xA27BE4", VA = "0xA27BE4")]
	public static void FreeAvatarsOnReturnToLauncher()
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0xA27D8C", Offset = "0xA27D8C", VA = "0xA27D8C")]
	public static string CalcHandednessKeyString(CookoutHandedness handedness)
	{
		return null;
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0xA27E00", Offset = "0xA27E00", VA = "0xA27E00")]
	public static CookoutHandPose CalcHandPoseMask(HandInput handInput)
	{
		return default(CookoutHandPose);
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0xA27E58", Offset = "0xA27E58", VA = "0xA27E58")]
	public static RoomVersion CreateRoomVersion()
	{
		return default(RoomVersion);
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0xA27E60", Offset = "0xA27E60", VA = "0xA27E60")]
	public static RoomOptions CreateRoomOptions(RoomIntent roomIntent, RoomVisibility roomVisibility, int maxPlayers)
	{
		return null;
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0xA285F4", Offset = "0xA285F4", VA = "0xA285F4")]
	public static int CalcCupProgressionValue()
	{
		return default(int);
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0xA28718", Offset = "0xA28718", VA = "0xA28718")]
	public static string GetRoomIntentLocaleKey(RoomIntent roomIntent)
	{
		return null;
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0xA287E8", Offset = "0xA287E8", VA = "0xA287E8")]
	public static void SetupRadioButtons(PokeButton[] radioButtons, Material buttonMaterialSelect, Material buttonMaterialDeselect, int defaultValue, Action<int> callback)
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0xA28C88", Offset = "0xA28C88", VA = "0xA28C88")]
	public static void SetupCheckboxButtons(PokeButton[] radioButtons, Material buttonMaterialSelect, Material buttonMaterialDeselect, IReadOnlyList<bool> defaultChecked, Action<int> callback)
	{
	}
}
[Token(Token = "0x20000F6")]
public static class IngredientAux
{
	[Token(Token = "0x400061B")]
	public const int NoIngredientViewID = -1;

	[Token(Token = "0x600068B")]
	[Address(RVA = "0xA29350", Offset = "0xA29350", VA = "0xA29350")]
	public static bool IsAtCenterOfTable(IngredientBase ingredient)
	{
		return default(bool);
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0xA293BC", Offset = "0xA293BC", VA = "0xA293BC")]
	public static void Despawn(IngredientBase ingredient)
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0xA295CC", Offset = "0xA295CC", VA = "0xA295CC")]
	public static void DespawnLocal(IngredientBase ingredient, bool showPoof = true)
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0xA297E8", Offset = "0xA297E8", VA = "0xA297E8")]
	public static void TryRemoveIngredientFromGrills(Grillable grillable)
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0xA2990C", Offset = "0xA2990C", VA = "0xA2990C")]
	public static void TryRemoveIngredientFromFireExtinguishers(Grillable grillable)
	{
	}
}
[Token(Token = "0x20000F7")]
[Flags]
public enum CookoutLogCat
{
	[Token(Token = "0x400061D")]
	_SwitchCaseUnhandled = 1,
	[Token(Token = "0x400061E")]
	_App = 2,
	[Token(Token = "0x400061F")]
	_Platform = 4,
	[Token(Token = "0x4000620")]
	_Gui = 8,
	[Token(Token = "0x4000621")]
	_Net = 0x10,
	[Token(Token = "0x4000622")]
	_Scene = 0x20,
	[Token(Token = "0x4000623")]
	_LoadSave = 0x40,
	[Token(Token = "0x4000624")]
	_Avatar = 0x80
}
[Token(Token = "0x20000F8")]
public static class CookoutLog
{
	[Token(Token = "0x4000625")]
	private const string LOG_FORMAT = "{0,7} | {1,7} | {2,13:.000}ms | {3}";

	[Token(Token = "0x4000626")]
	private const string LOG_FORMAT_CAT = "{0,7} | {1,7} | {2,13:.000}ms [{4}] {3}";

	[MethodImpl(256)]
	[Token(Token = "0x6000690")]
	[Address(RVA = "0xA29A30", Offset = "0xA29A30", VA = "0xA29A30")]
	[Conditional("UNITY_EDITOR")]
	public static void SPAM(string msg)
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000691")]
	[Address(RVA = "0xA29D08", Offset = "0xA29D08", VA = "0xA29D08")]
	[Conditional("DEBUG")]
	public static void info(string msg)
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000692")]
	[Address(RVA = "0xA29FE0", Offset = "0xA29FE0", VA = "0xA29FE0")]
	[Conditional("DEBUG")]
	public static void warn(string msg)
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000693")]
	[Address(RVA = "0xA2A2B8", Offset = "0xA2A2B8", VA = "0xA2A2B8")]
	[Conditional("DEBUG")]
	public static void err(string msg)
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000694")]
	[Address(RVA = "0xA2A590", Offset = "0xA2A590", VA = "0xA2A590")]
	public static void important(string msg)
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000695")]
	[Address(RVA = "0xA2A868", Offset = "0xA2A868", VA = "0xA2A868")]
	public static void critical(string msg)
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000696")]
	[Address(RVA = "0xA2AB40", Offset = "0xA2AB40", VA = "0xA2AB40")]
	public static void fatal(string msg)
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000697")]
	[Address(RVA = "0xA2AE18", Offset = "0xA2AE18", VA = "0xA2AE18")]
	[Conditional("UNITY_EDITOR")]
	public static void SPAM(CookoutLogCat logcat, string msg)
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000698")]
	[Address(RVA = "0xA2B144", Offset = "0xA2B144", VA = "0xA2B144")]
	[Conditional("DEBUG")]
	public static void info(CookoutLogCat logcat, string msg)
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000699")]
	[Address(RVA = "0xA2B470", Offset = "0xA2B470", VA = "0xA2B470")]
	[Conditional("DEBUG")]
	public static void warn(CookoutLogCat logcat, string msg)
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x600069A")]
	[Address(RVA = "0xA2B79C", Offset = "0xA2B79C", VA = "0xA2B79C")]
	[Conditional("DEBUG")]
	public static void err(CookoutLogCat logcat, string msg)
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x600069B")]
	[Address(RVA = "0xA2BAC8", Offset = "0xA2BAC8", VA = "0xA2BAC8")]
	public static void important(CookoutLogCat logcat, string msg)
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x600069C")]
	[Address(RVA = "0xA2BDF4", Offset = "0xA2BDF4", VA = "0xA2BDF4")]
	public static void critical(CookoutLogCat logcat, string msg)
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x600069D")]
	[Address(RVA = "0xA2C120", Offset = "0xA2C120", VA = "0xA2C120")]
	public static void fatal(CookoutLogCat logcat, string msg)
	{
	}
}
[Token(Token = "0x20000F9")]
public static class CookoutMsg<TMsgType> where TMsgType : Enum
{
	[Token(Token = "0x20000FA")]
	public interface IMsg
	{
		[Token(Token = "0x600069E")]
		TMsgType Type();
	}

	[Token(Token = "0x20000FB")]
	public abstract class MsgBuffer
	{
		[Token(Token = "0x4000627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<IMsg> buf;

		[Token(Token = "0x170000FC")]
		public int Count
		{
			[Token(Token = "0x60006A0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600069F")]
		protected MsgBuffer(int capacity)
		{
		}

		[Token(Token = "0x60006A1")]
		public bool Any()
		{
			return default(bool);
		}

		[Token(Token = "0x60006A2")]
		public void Add(IMsg msg)
		{
		}

		[Token(Token = "0x60006A3")]
		public void Clear()
		{
		}
	}

	[Token(Token = "0x20000FC")]
	public sealed class MsgBuffer<TMsg> : MsgBuffer, IEnumerable<TMsg>, IEnumerable where TMsg : struct, IMsg
	{
		[Token(Token = "0x20000FD")]
		[CompilerGenerated]
		private sealed class <System-Collections-Generic-IEnumerable<TMsg>-GetEnumerator>d__2 : IEnumerator<TMsg>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000628")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4000629")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TMsg <>2__current;

			[Token(Token = "0x400062A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MsgBuffer<TMsg> <>4__this;

			[Token(Token = "0x400062B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <i>5__2;

			[Token(Token = "0x400062C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <n>5__3;

			[Token(Token = "0x170000FD")]
			private TMsg System.Collections.Generic.IEnumerator<TMsg>.Current
			{
				[Token(Token = "0x60006AA")]
				[DebuggerHidden]
				get
				{
					return (TMsg)null;
				}
			}

			[Token(Token = "0x170000FE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60006AC")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60006A7")]
			[DebuggerHidden]
			public <System-Collections-Generic-IEnumerable<TMsg>-GetEnumerator>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x60006A8")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60006A9")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60006AB")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60006A4")]
		public MsgBuffer(int capacity)
		{
		}

		[Token(Token = "0x60006A5")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60006A6")]
		[IteratorStateMachine(typeof(MsgBuffer<>.<System-Collections-Generic-IEnumerable<TMsg>-GetEnumerator>d__2))]
		private IEnumerator<TMsg> System.Collections.Generic.IEnumerable<TMsg>.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x20000FE")]
	public sealed class MsgRouter : IEnumerable<MsgBuffer>, IEnumerable
	{
		[Token(Token = "0x20000FF")]
		[CompilerGenerated]
		private sealed class <System-Collections-Generic-IEnumerable<CookoutMsg<TMsgType>-MsgBuffer>-GetEnumerator>d__3 : IEnumerator<MsgBuffer>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400062E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x400062F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private MsgBuffer <>2__current;

			[Token(Token = "0x4000630")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MsgRouter <>4__this;

			[Token(Token = "0x4000631")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <i>5__2;

			[Token(Token = "0x4000632")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <n>5__3;

			[Token(Token = "0x170000FF")]
			private MsgBuffer System.Collections.Generic.IEnumerator<CookoutMsg<TMsgType>.MsgBuffer>.Current
			{
				[Token(Token = "0x60006B8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000100")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60006BA")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60006B5")]
			[DebuggerHidden]
			public <System-Collections-Generic-IEnumerable<CookoutMsg<TMsgType>-MsgBuffer>-GetEnumerator>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60006B6")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60006B7")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60006B9")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly MsgBuffer[] bufRecv;

		[Token(Token = "0x60006AD")]
		public MsgRouter()
		{
		}

		[Token(Token = "0x60006AE")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60006AF")]
		[IteratorStateMachine(typeof(CookoutMsg<>.MsgRouter.<System-Collections-Generic-IEnumerable<CookoutMsg<TMsgType>-MsgBuffer>-GetEnumerator>d__3))]
		private IEnumerator<MsgBuffer> System.Collections.Generic.IEnumerable<CookoutMsg<TMsgType>.MsgBuffer>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60006B0")]
		private void Add(TMsgType msgType, MsgBuffer buf)
		{
		}

		[Token(Token = "0x60006B1")]
		public void Add<TMsg>(MsgBuffer<TMsg> buf) where TMsg : struct, IMsg
		{
		}

		[Token(Token = "0x60006B2")]
		private MsgBuffer Resolve(TMsgType msgType)
		{
			return null;
		}

		[Token(Token = "0x60006B3")]
		public MsgBuffer<TMsg> Resolve<TMsg>() where TMsg : struct, IMsg
		{
			return null;
		}

		[Token(Token = "0x60006B4")]
		public void Route<TMsg>(TMsg msg) where TMsg : struct, IMsg
		{
		}
	}
}
[Token(Token = "0x2000100")]
public interface ICookoutPlatform
{
	[Token(Token = "0x60006BB")]
	CookoutPlatformType GetTargetPlatformType();

	[Token(Token = "0x60006BC")]
	bool IsInitialized();

	[Token(Token = "0x60006BD")]
	void Initialize();

	[Token(Token = "0x60006BE")]
	void Dispose();

	[Token(Token = "0x60006BF")]
	void Tick();

	[Token(Token = "0x60006C0")]
	void XrToggle();

	[Token(Token = "0x60006C1")]
	void XrRecenter();

	[Token(Token = "0x60006C2")]
	bool HasLocalUser();

	[Token(Token = "0x60006C3")]
	CookoutUserData LocalUser();

	[Token(Token = "0x60006C4")]
	IReadOnlyList<CookoutUserId> LocalUserFriends();

	[Token(Token = "0x60006C5")]
	CookoutMsg<CookoutPlatform.MsgType>.MsgBuffer<TMsg> ResolveMsgBuf<TMsg>() where TMsg : struct, CookoutMsg<CookoutPlatform.MsgType>.IMsg;

	[Token(Token = "0x60006C6")]
	void ValidateMsgBufferIntegrity();

	[Token(Token = "0x60006C7")]
	void AsyncGetVersion();

	[Token(Token = "0x60006C8")]
	void AsyncCheckDeepLink();

	[Token(Token = "0x60006C9")]
	void AsyncGetUserDirectoryPath();

	[Token(Token = "0x60006CA")]
	void AsyncGetFriends();

	[Token(Token = "0x60006CB")]
	void EnableFFR();

	[Token(Token = "0x60006CC")]
	void DisableFFR();

	[Token(Token = "0x60006CD")]
	void SetHighFrameRate();

	[Token(Token = "0x60006CE")]
	void RichPresenceSet(CookoutRichPresence presence);

	[Token(Token = "0x60006CF")]
	void RichPresenceClear();

	[Token(Token = "0x60006D0")]
	void VoipSuppress(bool flag);

	[Token(Token = "0x60006D1")]
	IntPtr MicrophoneCreate();

	[Token(Token = "0x60006D2")]
	void MicrophoneStart(IntPtr handle);

	[Token(Token = "0x60006D3")]
	void MicrophoneDestroy(IntPtr handle);

	[Token(Token = "0x60006D4")]
	int MicrophoneGetNumSamples(IntPtr handle);

	[Token(Token = "0x60006D5")]
	void MicrophoneRead(IntPtr handle, float[] buf);

	[Token(Token = "0x60006D6")]
	bool PlayerIsIdle();

	[Token(Token = "0x60006D7")]
	void SetAvatarRemote(CookoutAvatar avatar, CookoutUserId userId, AvatarType avatarType, CookoutAvatarVisualType visualType, ControllerType controllerType, int preselectedOculusAvatar, AvatarBodyType bodyType, AvatarHatType hatType, int headMaterialIndex, AvatarHandMaterial handMaterialIndex, int senderID);

	[Token(Token = "0x60006D8")]
	ControllerType GetControllerType();

	[Token(Token = "0x60006D9")]
	void GetAchievementUnlockedStatus(string apiName, Action<string, bool> callback);

	[Token(Token = "0x60006DA")]
	void GetAchievementCountStatus(string apiName, int localCount, Action<string, int, int> callback);

	[Token(Token = "0x60006DB")]
	void RecordCountAchievement(string apiName, int count);

	[Token(Token = "0x60006DC")]
	void UnlockSimpleAchievement(string apiName);
}
[Token(Token = "0x2000101")]
public sealed class CookoutPlatform : ICookoutPlatform
{
	[Token(Token = "0x2000102")]
	public enum MsgType
	{
		[Token(Token = "0x4000641")]
		PlatformVersion,
		[Token(Token = "0x4000642")]
		DeepLink,
		[Token(Token = "0x4000643")]
		UserDirectoryPath,
		[Token(Token = "0x4000644")]
		User
	}

	[Token(Token = "0x2000103")]
	public struct MsgPlatformVersion : CookoutMsg<MsgType>.IMsg
	{
		[Token(Token = "0x4000645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool isError;

		[Token(Token = "0x4000646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string version;

		[Token(Token = "0x4000647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string versionLatest;

		[Token(Token = "0x4000648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int versionCode;

		[Token(Token = "0x4000649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int versionCodeLatest;

		[Token(Token = "0x600070D")]
		[Address(RVA = "0xA320C4", Offset = "0xA320C4", VA = "0xA320C4", Slot = "4")]
		public MsgType Type()
		{
			return default(MsgType);
		}
	}

	[Token(Token = "0x2000104")]
	public struct MsgDeepLink : CookoutMsg<MsgType>.IMsg
	{
		[Token(Token = "0x400064A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool isError;

		[Token(Token = "0x400064B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string errMsg;

		[Token(Token = "0x400064C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isGroupLaunch;

		[Token(Token = "0x400064D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string room;

		[Token(Token = "0x400064E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string destination;

		[Token(Token = "0x600070E")]
		[Address(RVA = "0xA320CC", Offset = "0xA320CC", VA = "0xA320CC", Slot = "4")]
		public MsgType Type()
		{
			return default(MsgType);
		}
	}

	[Token(Token = "0x2000105")]
	public struct MsgUserDirectoryPath : CookoutMsg<MsgType>.IMsg
	{
		[Token(Token = "0x400064F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool isError;

		[Token(Token = "0x4000650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string errMsg;

		[Token(Token = "0x4000651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string path;

		[Token(Token = "0x600070F")]
		[Address(RVA = "0xA320D4", Offset = "0xA320D4", VA = "0xA320D4", Slot = "4")]
		public MsgType Type()
		{
			return default(MsgType);
		}
	}

	[Token(Token = "0x4000633")]
	private const int USER_CAPACITY = 128;

	[Token(Token = "0x4000634")]
	private const float USER_TTL = 3600f;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ICookoutPlatform instance;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly CookoutMsg<MsgType>.MsgRouter msgRouter;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool everInitialized;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool isInitialized;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<bool> userIsValid;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<float> userFetchTimestamp;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<CookoutUserId> userId;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<CookoutUserData> userData;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CookoutUserData localUser;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<CookoutUserId> localUserFriends;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ulong debugUserId;

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0xA1A76C", Offset = "0xA1A76C", VA = "0xA1A76C")]
	public static ICookoutPlatform Instance()
	{
		return null;
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0xA2C44C", Offset = "0xA2C44C", VA = "0xA2C44C")]
	private CookoutPlatform()
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0xA2C77C", Offset = "0xA2C77C", VA = "0xA2C77C", Slot = "5")]
	public bool IsInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0xA2C784", Offset = "0xA2C784", VA = "0xA2C784", Slot = "9")]
	public void XrToggle()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0xA2C788", Offset = "0xA2C788", VA = "0xA2C788", Slot = "11")]
	public bool HasLocalUser()
	{
		return default(bool);
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0xA2C7AC", Offset = "0xA2C7AC", VA = "0xA2C7AC", Slot = "12")]
	public CookoutUserData LocalUser()
	{
		return null;
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0xA2C7B4", Offset = "0xA2C7B4", VA = "0xA2C7B4", Slot = "13")]
	public IReadOnlyList<CookoutUserId> LocalUserFriends()
	{
		return null;
	}

	[Token(Token = "0x60006E4")]
	public CookoutMsg<MsgType>.MsgBuffer<TMsg> ResolveMsgBuf<TMsg>() where TMsg : struct, CookoutMsg<MsgType>.IMsg
	{
		return null;
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0xA2C7BC", Offset = "0xA2C7BC", VA = "0xA2C7BC", Slot = "15")]
	public void ValidateMsgBufferIntegrity()
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0xA2CAB0", Offset = "0xA2CAB0", VA = "0xA2CAB0")]
	private (bool, int) MemoizeUserGet(CookoutUserId id)
	{
		return default((bool, int));
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0xA2CCAC", Offset = "0xA2CCAC", VA = "0xA2CCAC")]
	private void MemoizeUserSet(bool isValid, CookoutUserData data)
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0xA2CFCC", Offset = "0xA2CFCC", VA = "0xA2CFCC")]
	private void SetLocalUser(CookoutUserData data)
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0xA2D160", Offset = "0xA2D160", VA = "0xA2D160", Slot = "32")]
	public void SetAvatarRemote(CookoutAvatar avatar, CookoutUserId id, AvatarType avatarType, CookoutAvatarVisualType visualType, ControllerType controllerType, int preselectedOculusAvatar, AvatarBodyType bodyType, AvatarHatType hatType, int headMaterialIndex, AvatarHandMaterial handMaterialIndex, int senderID)
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0xA2DAD0", Offset = "0xA2DAD0", VA = "0xA2DAD0", Slot = "4")]
	public CookoutPlatformType GetTargetPlatformType()
	{
		return default(CookoutPlatformType);
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0xA2DAD8", Offset = "0xA2DAD8", VA = "0xA2DAD8", Slot = "6")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0xA2DCC0", Offset = "0xA2DCC0", VA = "0xA2DCC0", Slot = "7")]
	public void Dispose()
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0xA2DCC4", Offset = "0xA2DCC4", VA = "0xA2DCC4", Slot = "8")]
	public void Tick()
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0xA2DCC8", Offset = "0xA2DCC8", VA = "0xA2DCC8", Slot = "16")]
	public void AsyncGetVersion()
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0xA2DE2C", Offset = "0xA2DE2C", VA = "0xA2DE2C", Slot = "17")]
	public void AsyncCheckDeepLink()
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0xA2DEAC", Offset = "0xA2DEAC", VA = "0xA2DEAC", Slot = "18")]
	public void AsyncGetUserDirectoryPath()
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0xA2E390", Offset = "0xA2E390", VA = "0xA2E390", Slot = "19")]
	public void AsyncGetFriends()
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0xA2E7E0", Offset = "0xA2E7E0", VA = "0xA2E7E0", Slot = "20")]
	public void EnableFFR()
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0xA2E800", Offset = "0xA2E800", VA = "0xA2E800", Slot = "21")]
	public void DisableFFR()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0xA2E820", Offset = "0xA2E820", VA = "0xA2E820", Slot = "22")]
	public void SetHighFrameRate()
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0xA2F204", Offset = "0xA2F204", VA = "0xA2F204", Slot = "23")]
	public void RichPresenceSet(CookoutRichPresence presence)
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0xA2F2A0", Offset = "0xA2F2A0", VA = "0xA2F2A0", Slot = "24")]
	public void RichPresenceClear()
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0xA2F2A8", Offset = "0xA2F2A8", VA = "0xA2F2A8", Slot = "25")]
	public void VoipSuppress(bool flag)
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0xA2F2B4", Offset = "0xA2F2B4", VA = "0xA2F2B4", Slot = "26")]
	public IntPtr MicrophoneCreate()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0xA2F304", Offset = "0xA2F304", VA = "0xA2F304", Slot = "27")]
	public void MicrophoneStart(IntPtr handle)
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0xA2F35C", Offset = "0xA2F35C", VA = "0xA2F35C", Slot = "28")]
	public void MicrophoneDestroy(IntPtr handle)
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0xA2F3B4", Offset = "0xA2F3B4", VA = "0xA2F3B4", Slot = "29")]
	public int MicrophoneGetNumSamples(IntPtr handle)
	{
		return default(int);
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0xA2F42C", Offset = "0xA2F42C", VA = "0xA2F42C", Slot = "30")]
	public void MicrophoneRead(IntPtr handle, float[] buf)
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0xA2F4B8", Offset = "0xA2F4B8", VA = "0xA2F4B8", Slot = "31")]
	public bool PlayerIsIdle()
	{
		return default(bool);
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0xA2F55C", Offset = "0xA2F55C", VA = "0xA2F55C", Slot = "10")]
	public void XrRecenter()
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0xA2F6DC", Offset = "0xA2F6DC", VA = "0xA2F6DC", Slot = "33")]
	public ControllerType GetControllerType()
	{
		return default(ControllerType);
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0xA2F6E4", Offset = "0xA2F6E4", VA = "0xA2F6E4", Slot = "34")]
	public void GetAchievementUnlockedStatus(string apiName, Action<string, bool> callback)
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0xA2F840", Offset = "0xA2F840", VA = "0xA2F840", Slot = "35")]
	public void GetAchievementCountStatus(string apiName, int localCount, Action<string, int, int> callback)
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0xA2F9A4", Offset = "0xA2F9A4", VA = "0xA2F9A4", Slot = "36")]
	public void RecordCountAchievement(string apiName, int count)
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0xA2F9B8", Offset = "0xA2F9B8", VA = "0xA2F9B8", Slot = "37")]
	public void UnlockSimpleAchievement(string apiName)
	{
	}
}
[Token(Token = "0x2000109")]
public struct QuantBufferPhy
{
	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	internal Vector3 velocity;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	internal Vector3 angularVelocity;
}
[Token(Token = "0x200010A")]
public struct QuantBufferTfm
{
	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 pos;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion rot;
}
[Token(Token = "0x200010B")]
public static class CookoutSerDes
{
	[Token(Token = "0x200010C")]
	private enum Msg : byte
	{
		[Token(Token = "0x400067F")]
		QuantBufferPhy,
		[Token(Token = "0x4000680")]
		QuantBufferTfm,
		[Token(Token = "0x4000681")]
		CookoutUserId,
		[Token(Token = "0x4000682")]
		NetMsgAvatarHand,
		[Token(Token = "0x4000683")]
		NetMsgSpawnPlayerAvatar,
		[Token(Token = "0x4000684")]
		RecipeIngredient,
		[Token(Token = "0x4000685")]
		StackedIngredientData
	}

	[Token(Token = "0x4000666")]
	private const float quantize_float_16bit_signed8max = 4096f;

	[Token(Token = "0x4000667")]
	private const float quantize_float_16bit_signed8max_inv = 0.00024414062f;

	[Token(Token = "0x4000668")]
	private const int largestIndexBitSize = 2;

	[Token(Token = "0x4000669")]
	private const int rotationBitSize = 10;

	[Token(Token = "0x400066A")]
	private const int largestIndexBitMask = 3;

	[Token(Token = "0x400066B")]
	private const int rotationBitMask = 1023;

	[Token(Token = "0x400066C")]
	private const float sqrtTwoInv = 0.70710653f;

	[Token(Token = "0x400066D")]
	private const float componentMin = -0.70710653f;

	[Token(Token = "0x400066E")]
	private const float componentMax = 0.70710653f;

	[Token(Token = "0x400066F")]
	private const float componentScale = 1023f;

	[Token(Token = "0x4000670")]
	private const float componentScaleInv = 0.0009775171f;

	[Token(Token = "0x4000671")]
	private const int nquat = 4;

	[Token(Token = "0x4000672")]
	private const int nabc = 3;

	[Token(Token = "0x4000673")]
	private const float deg2byte = 17f / 24f;

	[Token(Token = "0x4000674")]
	private const float byte2deg = 1.4117647f;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static StreamBuffer _stream;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static short _size;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int _iExpected;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static int i;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static byte[] buf;

	[Token(Token = "0x400067A")]
	private const int size_QuantBufferPhy = 12;

	[Token(Token = "0x400067B")]
	private const int size_QuantBufferTfm = 10;

	[Token(Token = "0x400067C")]
	private const int size_RecipeIngredient = 2;

	[Token(Token = "0x400067D")]
	private const int size_StackedIngredientData = 15;

	[Token(Token = "0x6000714")]
	[Address(RVA = "0xA3268C", Offset = "0xA3268C", VA = "0xA3268C")]
	public static void RegisterPhotonTypes()
	{
	}

	[Token(Token = "0x6000715")]
	private static T SerializeBegin<T>(StreamBuffer stream, object obj, short size)
	{
		return (T)null;
	}

	[Token(Token = "0x6000716")]
	private static T SerializeBegin<T>(StreamBuffer stream, object obj) where T : struct
	{
		return (T)null;
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0xA32BD0", Offset = "0xA32BD0", VA = "0xA32BD0")]
	private static short SerializeEnd()
	{
		return default(short);
	}

	[Token(Token = "0x6000718")]
	private static T DeserializeBegin<T>(StreamBuffer stream, short size) where T : struct
	{
		return (T)null;
	}

	[Token(Token = "0x6000719")]
	private static T DeserializeBegin<T>(StreamBuffer stream) where T : struct
	{
		return (T)null;
	}

	[Token(Token = "0x600071A")]
	private unsafe static ref T DeserializeEnd<T>(ref T msg)
	{
		return ref *(T*)null;
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0xA32C48", Offset = "0xA32C48", VA = "0xA32C48")]
	public static void ser_u32(uint u, byte[] b, ref int i)
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0xA32CEC", Offset = "0xA32CEC", VA = "0xA32CEC")]
	public static void des_u32(out uint u, byte[] b, ref int i)
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0xA32D80", Offset = "0xA32D80", VA = "0xA32D80")]
	public static void ser_u64(ulong u, byte[] b, ref int i)
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0xA32EB4", Offset = "0xA32EB4", VA = "0xA32EB4")]
	public static void des_u64(out ulong u, byte[] b, ref int i)
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0xA32FB8", Offset = "0xA32FB8", VA = "0xA32FB8")]
	public static short f32_to_s16(float quant, float v)
	{
		return default(short);
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0xA32FD4", Offset = "0xA32FD4", VA = "0xA32FD4")]
	public static float s16_to_f32(float quant_inv, short v)
	{
		return default(float);
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0xA32FE4", Offset = "0xA32FE4", VA = "0xA32FE4")]
	public static uint QuantizeQuaternion(Quaternion quaternion)
	{
		return default(uint);
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0xA3330C", Offset = "0xA3330C", VA = "0xA3330C")]
	public static Quaternion QuantizeQuaternionInv(uint smallestThree)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0xA33590", Offset = "0xA33590", VA = "0xA33590")]
	public static short photon_ser_QuantBufferPhy(StreamBuffer stream, object obj)
	{
		return default(short);
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0xA33784", Offset = "0xA33784", VA = "0xA33784")]
	public static object photon_des_QuantBufferPhy(StreamBuffer stream, short length)
	{
		return null;
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0xA339B0", Offset = "0xA339B0", VA = "0xA339B0")]
	public static short photon_ser_QuantBufferTfm(StreamBuffer stream, object obj)
	{
		return default(short);
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0xA33B60", Offset = "0xA33B60", VA = "0xA33B60")]
	public static object photon_des_QuantBufferTfm(StreamBuffer stream, short length)
	{
		return null;
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0xA33D44", Offset = "0xA33D44", VA = "0xA33D44")]
	public static void ser_CookoutUserId(CookoutUserId userId, byte[] b, ref int i)
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0xA33D98", Offset = "0xA33D98", VA = "0xA33D98")]
	public static void des_CookoutUserId(out CookoutUserId userId, byte[] b, ref int i)
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0xA33DF4", Offset = "0xA33DF4", VA = "0xA33DF4")]
	public static short photon_ser_CookoutUserId(StreamBuffer stream, object obj)
	{
		return default(short);
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0xA33E7C", Offset = "0xA33E7C", VA = "0xA33E7C")]
	public static object photon_des_CookoutUserId(StreamBuffer stream, short length)
	{
		return null;
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0xA33F84", Offset = "0xA33F84", VA = "0xA33F84")]
	public static short photon_ser_NetMsgAvatarHand(StreamBuffer stream, object obj)
	{
		return default(short);
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0xA3408C", Offset = "0xA3408C", VA = "0xA3408C")]
	public static object photon_des_NetMsgAvatarHand(StreamBuffer stream, short length)
	{
		return null;
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0xA341E0", Offset = "0xA341E0", VA = "0xA341E0")]
	public static short photon_ser_NetMsgSpawnPlayerAvatar(StreamBuffer stream, object obj)
	{
		return default(short);
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0xA34478", Offset = "0xA34478", VA = "0xA34478")]
	public static object photon_des_NetMsgSpawnPlayerAvatar(StreamBuffer stream, short length)
	{
		return null;
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0xA34704", Offset = "0xA34704", VA = "0xA34704")]
	public static short photon_ser_RecipeIngredient(StreamBuffer stream, object obj)
	{
		return default(short);
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0xA3482C", Offset = "0xA3482C", VA = "0xA3482C")]
	public static object photon_des_RecipeIngredient(StreamBuffer stream, short length)
	{
		return null;
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0xA34998", Offset = "0xA34998", VA = "0xA34998")]
	public static short photon_ser_StackedIngredientData(StreamBuffer stream, object obj)
	{
		return default(short);
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0xA34BF0", Offset = "0xA34BF0", VA = "0xA34BF0")]
	public static object photon_des_StackedIngredientData(StreamBuffer stream, short length)
	{
		return null;
	}
}
[Token(Token = "0x200010D")]
public class DisableOnPlay : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000733")]
	[Address(RVA = "0xA35E58", Offset = "0xA35E58", VA = "0xA35E58")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0xA35E7C", Offset = "0xA35E7C", VA = "0xA35E7C")]
	public DisableOnPlay()
	{
	}
}
[Token(Token = "0x200010E")]
public class InPlayAreaChecker : SingleInstanceBehavior<InPlayAreaChecker>
{
	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Collider playArea;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject environment;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject menuBoard;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject outofBoundsOverlay;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TMP_Text outOfBoundsText;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private LauncherMenu launcherMenu;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform playerRoot;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CookoutAvatar cookoutAvatar;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 playAreaPos;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 playAreaExtent;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isInbounds;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool initialized;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	private bool leavingLauncher;

	[Token(Token = "0x4000693")]
	private const string oculusLocalization = "launcher_recenter";

	[Token(Token = "0x4000694")]
	private const string questLocalization = "launcher_recenter_quest";

	[Token(Token = "0x4000695")]
	private const string viveLocalization = "launcher_recenter_vive";

	[Token(Token = "0x4000696")]
	private const string valveIndexLocalization = "launcher_recenter_knuckles";

	[Token(Token = "0x6000735")]
	[Address(RVA = "0xA35E84", Offset = "0xA35E84", VA = "0xA35E84")]
	public void Init()
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0xA36398", Offset = "0xA36398", VA = "0xA36398")]
	public void OnLeavingLauncher()
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0xA366A4", Offset = "0xA366A4", VA = "0xA366A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0xA36064", Offset = "0xA36064", VA = "0xA36064")]
	private void SetMessage()
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0xA36744", Offset = "0xA36744", VA = "0xA36744")]
	public InPlayAreaChecker()
	{
	}
}
[Token(Token = "0x200010F")]
[CreateAssetMenu(fileName = "MaterialList", menuName = "Materials/New Material List")]
public class MaterialList : ScriptableObject
{
	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEngine.Object[] scenes;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] prefabLocations;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material[] materials;

	[Token(Token = "0x600073A")]
	[Address(RVA = "0xA367B8", Offset = "0xA367B8", VA = "0xA367B8")]
	public MaterialList()
	{
	}
}
[Token(Token = "0x2000110")]
[DisallowMultipleComponent]
public class NetworkDestroyIfDropped : NetworkedBehaviour
{
	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private IngredientBase optionalIngredient;

	[Token(Token = "0x400069B")]
	private const string floorTag = "Floor";

	[Token(Token = "0x400069C")]
	private const string environmentTag = "Environment";

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float destroyLimit;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float floorDestroyTime;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform myTransform;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool aboutToBeDespawned;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int isTouchingFloor;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float floorDestroyTimer;

	[Token(Token = "0x17000101")]
	private bool AboutToBeDespawned
	{
		[Token(Token = "0x600073B")]
		[Address(RVA = "0xA367C0", Offset = "0xA367C0", VA = "0xA367C0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600073C")]
		[Address(RVA = "0xA36860", Offset = "0xA36860", VA = "0xA36860")]
		set
		{
		}
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0xA36900", Offset = "0xA36900", VA = "0xA36900")]
	private void Awake()
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0xA3691C", Offset = "0xA3691C", VA = "0xA3691C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0xA36928", Offset = "0xA36928", VA = "0xA36928")]
	private void Update()
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0xA36B28", Offset = "0xA36B28", VA = "0xA36B28")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0xA36C00", Offset = "0xA36C00", VA = "0xA36C00")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0xA36CD4", Offset = "0xA36CD4", VA = "0xA36CD4")]
	[PunRPC]
	private void OnDroppedObjectDestroyRPC()
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0xA36EAC", Offset = "0xA36EAC", VA = "0xA36EAC")]
	public NetworkDestroyIfDropped()
	{
	}
}
[Token(Token = "0x2000111")]
public sealed class ShaderWarmup : SingleInstanceBehavior<ShaderWarmup>
{
	[Token(Token = "0x2000112")]
	[CompilerGenerated]
	private sealed class <DrawAllMaterials>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShaderWarmup <>4__this;

		[Token(Token = "0x17000102")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600074B")]
			[Address(RVA = "0xA37EAC", Offset = "0xA37EAC", VA = "0xA37EAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000103")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600074D")]
			[Address(RVA = "0xA37EF4", Offset = "0xA37EF4", VA = "0xA37EF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000748")]
		[Address(RVA = "0xA36FC8", Offset = "0xA36FC8", VA = "0xA36FC8")]
		[DebuggerHidden]
		public <DrawAllMaterials>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000749")]
		[Address(RVA = "0xA374D8", Offset = "0xA374D8", VA = "0xA374D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600074A")]
		[Address(RVA = "0xA374DC", Offset = "0xA374DC", VA = "0xA374DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600074C")]
		[Address(RVA = "0xA37EB4", Offset = "0xA37EB4", VA = "0xA37EB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MaterialList materialList;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool logWarmedUpShaders;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Mesh warmUpMesh;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<string> warmedUpSceneCombinations;

	[Token(Token = "0x6000744")]
	[Address(RVA = "0xA36EC0", Offset = "0xA36EC0", VA = "0xA36EC0", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0xA36F60", Offset = "0xA36F60", VA = "0xA36F60")]
	[IteratorStateMachine(typeof(<DrawAllMaterials>d__5))]
	private IEnumerator DrawAllMaterials()
	{
		return null;
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0xA36FF0", Offset = "0xA36FF0", VA = "0xA36FF0")]
	public void WarmupShaders(CookoutApplicationState state, string environment)
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0xA3746C", Offset = "0xA3746C", VA = "0xA3746C")]
	public ShaderWarmup()
	{
	}
}
[Token(Token = "0x2000113")]
public class SteamVRLoadFailHandler : SingleInstanceBehavior<SteamVRLoadFailHandler>
{
	[Token(Token = "0x40006AA")]
	private const float messageDisplayTime = 12f;

	[Token(Token = "0x600074E")]
	[Address(RVA = "0xA37EFC", Offset = "0xA37EFC", VA = "0xA37EFC")]
	public void OnSteamVRLoadFailed()
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0xA3809C", Offset = "0xA3809C", VA = "0xA3809C")]
	public SteamVRLoadFailHandler()
	{
	}
}
[Token(Token = "0x2000115")]
public class UnparentAndFollow : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[FormerlySerializedAs("spawnPosition")]
	public Transform target;

	[Token(Token = "0x6000753")]
	[Address(RVA = "0xA381C4", Offset = "0xA381C4", VA = "0xA381C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0xA381C8", Offset = "0xA381C8", VA = "0xA381C8")]
	public void Unparent()
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0xA381EC", Offset = "0xA381EC", VA = "0xA381EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0xA38320", Offset = "0xA38320", VA = "0xA38320")]
	public UnparentAndFollow()
	{
	}
}
[Token(Token = "0x2000116")]
public class AvatarBody : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform anchor;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Renderer myRenderer;

	[Token(Token = "0x17000104")]
	public Transform GetAnchor
	{
		[Token(Token = "0x6000757")]
		[Address(RVA = "0xA38328", Offset = "0xA38328", VA = "0xA38328")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000105")]
	public Renderer GetRenderer
	{
		[Token(Token = "0x6000758")]
		[Address(RVA = "0xA38330", Offset = "0xA38330", VA = "0xA38330")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0xA38338", Offset = "0xA38338", VA = "0xA38338")]
	private void Awake()
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0xA3833C", Offset = "0xA3833C", VA = "0xA3833C")]
	public AvatarBody()
	{
	}
}
[Serializable]
[Token(Token = "0x2000117")]
[CreateAssetMenu(fileName = "NewAvatarBodyData", menuName = "Avatars/Avatar Body Data")]
public class AvatarBodyData : ScriptableObject
{
	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AvatarBodyType type;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject prefab;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool hasColorCoding;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material[] colorCodeMaterials;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite icon;

	[Token(Token = "0x600075B")]
	[Address(RVA = "0xA38344", Offset = "0xA38344", VA = "0xA38344")]
	public AvatarBodyData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000118")]
[CreateAssetMenu(fileName = "NewAvatarBodyList", menuName = "Avatars/Avatar Body List")]
public class AvatarBodyList : ScriptableObject
{
	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AvatarBodyData> avatarBodies;

	[Token(Token = "0x600075C")]
	[Address(RVA = "0xA3839C", Offset = "0xA3839C", VA = "0xA3839C")]
	public AvatarBodyList()
	{
	}
}
[Token(Token = "0x2000119")]
public enum AvatarBodyType : byte
{
	[Token(Token = "0x40006B7")]
	ChefsJacket,
	[Token(Token = "0x40006B8")]
	ChefsJacketScarf,
	[Token(Token = "0x40006B9")]
	Benihana,
	[Token(Token = "0x40006BA")]
	Artist,
	[Token(Token = "0x40006BB")]
	Apron,
	[Token(Token = "0x40006BC")]
	ApronCookoutLogo,
	[Token(Token = "0x40006BD")]
	ApronCookoutSandwich,
	[Token(Token = "0x40006BE")]
	ApronBlaston,
	[Token(Token = "0x40006BF")]
	ApronDemeo,
	[Token(Token = "0x40006C0")]
	ChefsJacketBlack,
	[Token(Token = "0x40006C1")]
	RoyalCape,
	[Token(Token = "0x40006C2")]
	ApronCarrot,
	[Token(Token = "0x40006C3")]
	Wackohnalds,
	[Token(Token = "0x40006C4")]
	Moonbucks,
	[Token(Token = "0x40006C5")]
	FrillyApronPink,
	[Token(Token = "0x40006C6")]
	FrillyApronBlue,
	[Token(Token = "0x40006C7")]
	BeeBody,
	[Token(Token = "0x40006C8")]
	DirtyLineChef,
	[Token(Token = "0x40006C9")]
	TRexGreen,
	[Token(Token = "0x40006CA")]
	TRexBlue,
	[Token(Token = "0x40006CB")]
	DressShirtWhite,
	[Token(Token = "0x40006CC")]
	DressShirtBlack,
	[Token(Token = "0x40006CD")]
	HawaiianShirtBlue,
	[Token(Token = "0x40006CE")]
	HawaiianShirtRed,
	[Token(Token = "0x40006CF")]
	PirateVest,
	[Token(Token = "0x40006D0")]
	ChefsJacketCyan,
	[Token(Token = "0x40006D1")]
	ChefsJacketLime,
	[Token(Token = "0x40006D2")]
	ChefsJacketOrange,
	[Token(Token = "0x40006D3")]
	ChefsJacketPink,
	[Token(Token = "0x40006D4")]
	ChefsJacketPurple,
	[Token(Token = "0x40006D5")]
	ChefsJacketRed,
	[Token(Token = "0x40006D6")]
	BatShirt,
	[Token(Token = "0x40006D7")]
	GingerbreadShirt
}
[Token(Token = "0x200011A")]
public class AvatarBodyRegistery : SingleInstanceBehavior<AvatarBodyRegistery>
{
	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AvatarBodyList bodies;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<AvatarBodyType, AvatarBodyData> bodyRegistry;

	[Token(Token = "0x17000106")]
	public int BodyCount
	{
		[Token(Token = "0x600075D")]
		[Address(RVA = "0xA383A4", Offset = "0xA383A4", VA = "0xA383A4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0xA383F4", Offset = "0xA383F4", VA = "0xA383F4", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0xA38520", Offset = "0xA38520", VA = "0xA38520")]
	public AvatarBodyData GetBodyData(AvatarBodyType type)
	{
		return null;
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0xA38578", Offset = "0xA38578", VA = "0xA38578")]
	public Sprite GetBodyIcon(AvatarBodyType type)
	{
		return null;
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0xA385DC", Offset = "0xA385DC", VA = "0xA385DC")]
	public bool GetBodyHasColorCoding(AvatarBodyType type)
	{
		return default(bool);
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0xA38640", Offset = "0xA38640", VA = "0xA38640")]
	public Material GetBodyColorCoding(AvatarBodyType type, PlayerColor color)
	{
		return null;
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0xA38810", Offset = "0xA38810", VA = "0xA38810")]
	public AvatarBodyRegistery()
	{
	}
}
[Token(Token = "0x200011B")]
public class AvatarCustomizationBuyables
{
	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<CookoutAvatarVisualType, HeadUnlockData> buyableAvatars;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<AvatarHatType, bool> buyableHats;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Dictionary<AvatarBodyType, bool> buyableBodies;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Dictionary<AvatarHandMaterial, bool> buyableHandMaterials;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Dictionary<CookoutAvatarVisualType, int[]> avatarPrices;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static Dictionary<AvatarHatType, int> hatPrices;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Dictionary<AvatarBodyType, int> bodyPrices;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static Dictionary<AvatarHandMaterial, int> handMaterialPrices;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static SaveManager saveManager;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static AvatarSelectionMenu avatarSelectionMenu;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static CoinCount coinCount;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static bool initialized;

	[Token(Token = "0x17000107")]
	private static int CoinBalance
	{
		[Token(Token = "0x6000764")]
		[Address(RVA = "0xA3887C", Offset = "0xA3887C", VA = "0xA3887C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0xA388E0", Offset = "0xA388E0", VA = "0xA388E0")]
	public static void Init(BuyableAvatarCustomizationList buyableList)
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0xA3935C", Offset = "0xA3935C", VA = "0xA3935C")]
	public static bool GetHatIsBought(AvatarHatType hat)
	{
		return default(bool);
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0xA39430", Offset = "0xA39430", VA = "0xA39430")]
	public static bool GetAvatarHasBuyableSkins(CookoutAvatarVisualType avatar)
	{
		return default(bool);
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0xA394B0", Offset = "0xA394B0", VA = "0xA394B0")]
	public static bool[] GetBoughtAvatarSkins(CookoutAvatarVisualType avatar)
	{
		return null;
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0xA3953C", Offset = "0xA3953C", VA = "0xA3953C")]
	public static bool GetBodyIsBought(AvatarBodyType body)
	{
		return default(bool);
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0xA39610", Offset = "0xA39610", VA = "0xA39610")]
	public static bool GetHandMaterialIsBought(AvatarHandMaterial hand)
	{
		return default(bool);
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0xA396E4", Offset = "0xA396E4", VA = "0xA396E4")]
	public static bool TryBuyHat(AvatarHatType hat)
	{
		return default(bool);
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0xA39968", Offset = "0xA39968", VA = "0xA39968")]
	public static bool TryBuyAvatarSkin(CookoutAvatarVisualType type, int materialIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0xA39AB0", Offset = "0xA39AB0", VA = "0xA39AB0")]
	public static bool TryBuyBody(AvatarBodyType body)
	{
		return default(bool);
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0xA39BA8", Offset = "0xA39BA8", VA = "0xA39BA8")]
	public static bool TryBuyHandMaterial(AvatarHandMaterial handMaterial)
	{
		return default(bool);
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0xA39CA0", Offset = "0xA39CA0", VA = "0xA39CA0")]
	public static int GetHatPrice(AvatarHatType type)
	{
		return default(int);
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0xA39D20", Offset = "0xA39D20", VA = "0xA39D20")]
	public static int GetAvatarSkinPrice(CookoutAvatarVisualType type, int index)
	{
		return default(int);
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0xA39DCC", Offset = "0xA39DCC", VA = "0xA39DCC")]
	public static int GetBodyPrice(AvatarBodyType type)
	{
		return default(int);
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0xA39E4C", Offset = "0xA39E4C", VA = "0xA39E4C")]
	public static int GetHandPrice(AvatarHandMaterial type)
	{
		return default(int);
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0xA397DC", Offset = "0xA397DC", VA = "0xA397DC")]
	private static bool BuyItem(int price)
	{
		return default(bool);
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0xA39ECC", Offset = "0xA39ECC", VA = "0xA39ECC")]
	public AvatarCustomizationBuyables()
	{
	}
}
[Serializable]
[Token(Token = "0x200011C")]
public class HeadUnlockData
{
	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public CookoutAvatarVisualType type;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool[] materialsUnlocked;

	[Token(Token = "0x6000776")]
	[Address(RVA = "0xA391FC", Offset = "0xA391FC", VA = "0xA391FC")]
	public HeadUnlockData(CookoutAvatarVisualType type)
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0xA3A1D0", Offset = "0xA3A1D0", VA = "0xA3A1D0")]
	public HeadUnlockData(CookoutAvatarVisualType type, int defaultMaterialIndex)
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0xA3A33C", Offset = "0xA3A33C", VA = "0xA3A33C")]
	public bool AvatarIsUnlocked()
	{
		return default(bool);
	}
}
[Token(Token = "0x200011D")]
public enum AvatarCustomizationUnlockCondition
{
	[Token(Token = "0x40006E9")]
	Invalid,
	[Token(Token = "0x40006EA")]
	ServeManyRabbits,
	[Token(Token = "0x40006EB")]
	EatTruffleAsPig,
	[Token(Token = "0x40006EC")]
	ServeBurntIngredient,
	[Token(Token = "0x40006ED")]
	ServeManyConsecutivePerfectsEndlessMode,
	[Token(Token = "0x40006EE")]
	ClearRoyalDinnerService,
	[Token(Token = "0x40006EF")]
	Serve1000Plates,
	[Token(Token = "0x40006F0")]
	KissMirror,
	[Token(Token = "0x40006F1")]
	CleaverInWell,
	[Token(Token = "0x40006F2")]
	FeedTheMouse,
	[Token(Token = "0x40006F3")]
	Kleptomania,
	[Token(Token = "0x40006F4")]
	DryPalace,
	[Token(Token = "0x40006F5")]
	Fencing,
	[Token(Token = "0x40006F6")]
	FistBump,
	[Token(Token = "0x40006F7")]
	HighFive
}
[Token(Token = "0x200011E")]
public class AvatarCustomizationUnlocks
{
	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<CookoutAvatarVisualType, HeadUnlockData> unlockableAvatars;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<AvatarHatType, bool> unlockableHats;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Dictionary<AvatarBodyType, bool> unlockableBodies;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Dictionary<AvatarHandMaterial, bool> unlockableHandMaterials;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Dictionary<AvatarCustomizationUnlockCondition, List<UnlockableAvatarCustomizationData>> unlocksByCondition;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static SaveManager saveManager;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static bool initialized;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static List<UnlockableAvatarCustomizationData> unlockList;

	[Token(Token = "0x6000779")]
	[Address(RVA = "0xA3A394", Offset = "0xA3A394", VA = "0xA3A394")]
	public static void Init(UnlockableAvatarCustomizationList newUnlockList)
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0xA3AC60", Offset = "0xA3AC60", VA = "0xA3AC60")]
	public static bool GetHatIsUnlocked(AvatarHatType hat)
	{
		return default(bool);
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0xA3AD34", Offset = "0xA3AD34", VA = "0xA3AD34")]
	public static bool GetBodyIsUnlocked(AvatarBodyType body)
	{
		return default(bool);
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0xA3AE08", Offset = "0xA3AE08", VA = "0xA3AE08")]
	public static bool GetHandMaterialIsUnlocked(AvatarHandMaterial hand)
	{
		return default(bool);
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0xA3AEDC", Offset = "0xA3AEDC", VA = "0xA3AEDC")]
	public static bool GetAvatarHasUnlockableSkins(CookoutAvatarVisualType avatar)
	{
		return default(bool);
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0xA3AF5C", Offset = "0xA3AF5C", VA = "0xA3AF5C")]
	public static bool GetAvatarIsUnlocked(CookoutAvatarVisualType avatar)
	{
		return default(bool);
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0xA3B038", Offset = "0xA3B038", VA = "0xA3B038")]
	public static bool GetAvatarSkinIsUnlocked(CookoutAvatarVisualType avatar, int materialIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0xA3B140", Offset = "0xA3B140", VA = "0xA3B140")]
	public static bool[] GetUnlockedAvatarHeadSkins(CookoutAvatarVisualType avatar)
	{
		return null;
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0xA3B1CC", Offset = "0xA3B1CC", VA = "0xA3B1CC")]
	public static void UnlockAvatarCustomizationOption(AvatarCustomizationUnlockCondition unlockCondition)
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0xA3B57C", Offset = "0xA3B57C", VA = "0xA3B57C")]
	public static string GetUnlockConditionText(AvatarHatType type)
	{
		return null;
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0xA3B700", Offset = "0xA3B700", VA = "0xA3B700")]
	public static string GetUnlockConditionText(CookoutAvatarVisualType type, int materialIndex)
	{
		return null;
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0xA3B894", Offset = "0xA3B894", VA = "0xA3B894")]
	public static string GetUnlockConditionText(AvatarBodyType type)
	{
		return null;
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0xA3BA18", Offset = "0xA3BA18", VA = "0xA3BA18")]
	public static string GetUnlockConditionText(AvatarHandMaterial type)
	{
		return null;
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0xA3BB9C", Offset = "0xA3BB9C", VA = "0xA3BB9C")]
	public AvatarCustomizationUnlocks()
	{
	}
}
[Token(Token = "0x200011F")]
public enum AvatarHandMaterial : byte
{
	[Token(Token = "0x4000701")]
	Standard,
	[Token(Token = "0x4000702")]
	BlackLeather,
	[Token(Token = "0x4000703")]
	Wackohnalds,
	[Token(Token = "0x4000704")]
	Moonbucks,
	[Token(Token = "0x4000705")]
	BabyPink,
	[Token(Token = "0x4000706")]
	BabyBlue,
	[Token(Token = "0x4000707")]
	BrownLeather,
	[Token(Token = "0x4000708")]
	DirtyGloves,
	[Token(Token = "0x4000709")]
	RoyalGloves,
	[Token(Token = "0x400070A")]
	Chainmail,
	[Token(Token = "0x400070B")]
	PowGloves,
	[Token(Token = "0x400070C")]
	SmackGloves,
	[Token(Token = "0x400070D")]
	SandwixhGloves,
	[Token(Token = "0x400070E")]
	GlovesRed,
	[Token(Token = "0x400070F")]
	GlovesCyan,
	[Token(Token = "0x4000710")]
	GlovesOrange,
	[Token(Token = "0x4000711")]
	GlovesPurple,
	[Token(Token = "0x4000712")]
	GlovesLime,
	[Token(Token = "0x4000713")]
	TentacleGloves
}
[Token(Token = "0x2000120")]
public class AvatarHandRegistry : SingleInstanceBehavior<AvatarHandRegistry>
{
	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Material[] handMaterialsRed;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material[] handMaterialsBlue;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Material[] handMaterialsYellow;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Material[] handMaterialsGreen;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Sprite[] handIcons;

	[Token(Token = "0x17000108")]
	public int HandCount
	{
		[Token(Token = "0x6000788")]
		[Address(RVA = "0xA3BD64", Offset = "0xA3BD64", VA = "0xA3BD64")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0xA3BD80", Offset = "0xA3BD80", VA = "0xA3BD80", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0xA3BDEC", Offset = "0xA3BDEC", VA = "0xA3BDEC")]
	public int GetHandMaterialCount()
	{
		return default(int);
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0xA3BE08", Offset = "0xA3BE08", VA = "0xA3BE08")]
	public Sprite GetHandIcon(AvatarHandMaterial material)
	{
		return null;
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0xA3BE38", Offset = "0xA3BE38", VA = "0xA3BE38")]
	public Material GetHandMaterial(PlayerColor color, AvatarHandMaterial material)
	{
		return null;
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0xA3BF68", Offset = "0xA3BF68", VA = "0xA3BF68")]
	public AvatarHandRegistry()
	{
	}
}
[Token(Token = "0x2000121")]
public class AvatarHat : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Renderer myRenderer;

	[Token(Token = "0x17000109")]
	public Renderer GetRenderer
	{
		[Token(Token = "0x600078E")]
		[Address(RVA = "0xA3BFD4", Offset = "0xA3BFD4", VA = "0xA3BFD4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0xA3BFDC", Offset = "0xA3BFDC", VA = "0xA3BFDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0xA3BFE0", Offset = "0xA3BFE0", VA = "0xA3BFE0")]
	public AvatarHat()
	{
	}
}
[Token(Token = "0x2000122")]
public class AvatarHatAnchor : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform anchor;

	[Token(Token = "0x1700010A")]
	public Transform GetAnchor
	{
		[Token(Token = "0x6000791")]
		[Address(RVA = "0xA3BFE8", Offset = "0xA3BFE8", VA = "0xA3BFE8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0xA3BFF0", Offset = "0xA3BFF0", VA = "0xA3BFF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0xA3BFF4", Offset = "0xA3BFF4", VA = "0xA3BFF4")]
	public AvatarHatAnchor()
	{
	}
}
[Serializable]
[Token(Token = "0x2000123")]
[CreateAssetMenu(fileName = "NewAvatarHatData", menuName = "Avatars/Avatar Hat Data")]
public class AvatarHatData : ScriptableObject
{
	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AvatarHatType type;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject prefab;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite icon;

	[Token(Token = "0x6000794")]
	[Address(RVA = "0xA3BFFC", Offset = "0xA3BFFC", VA = "0xA3BFFC")]
	public AvatarHatData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000124")]
[CreateAssetMenu(fileName = "NewAvatarHatList", menuName = "Avatars/Avatar Hat List")]
public class AvatarHatList : ScriptableObject
{
	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AvatarHatData> avatarHats;

	[Token(Token = "0x6000795")]
	[Address(RVA = "0xA3C004", Offset = "0xA3C004", VA = "0xA3C004")]
	public AvatarHatList()
	{
	}
}
[Token(Token = "0x2000125")]
public enum AvatarHatType : byte
{
	[Token(Token = "0x4000720")]
	None,
	[Token(Token = "0x4000721")]
	ChefHatBulb,
	[Token(Token = "0x4000722")]
	ChefHatCylinderShort,
	[Token(Token = "0x4000723")]
	ChefHatCylinderMedium,
	[Token(Token = "0x4000724")]
	ChefHatCylinderTall,
	[Token(Token = "0x4000725")]
	ChefHatBenihana,
	[Token(Token = "0x4000726")]
	ChefHatArtist,
	[Token(Token = "0x4000727")]
	ChefsHatRoyal,
	[Token(Token = "0x4000728")]
	WackohnaldsCap,
	[Token(Token = "0x4000729")]
	MoonbucksCap,
	[Token(Token = "0x400072A")]
	WackohnaldsHat,
	[Token(Token = "0x400072B")]
	MoonbucksHat,
	[Token(Token = "0x400072C")]
	SunhatPink,
	[Token(Token = "0x400072D")]
	SunhatBlue,
	[Token(Token = "0x400072E")]
	SunhatBlack,
	[Token(Token = "0x400072F")]
	BalloonHatPink,
	[Token(Token = "0x4000730")]
	BalloonHatBlue,
	[Token(Token = "0x4000731")]
	BeeBeret,
	[Token(Token = "0x4000732")]
	DirtyChefsHat,
	[Token(Token = "0x4000733")]
	JimbobCap,
	[Token(Token = "0x4000734")]
	BlastonCap,
	[Token(Token = "0x4000735")]
	ClassicCap,
	[Token(Token = "0x4000736")]
	CookoutLogoCap,
	[Token(Token = "0x4000737")]
	BuildersHat,
	[Token(Token = "0x4000738")]
	TRexHatGreen,
	[Token(Token = "0x4000739")]
	TRexHatBlue,
	[Token(Token = "0x400073A")]
	RatHat,
	[Token(Token = "0x400073B")]
	DeadFish,
	[Token(Token = "0x400073C")]
	AcornHat,
	[Token(Token = "0x400073D")]
	PirateHat,
	[Token(Token = "0x400073E")]
	WitchHat,
	[Token(Token = "0x400073F")]
	WizardHat,
	[Token(Token = "0x4000740")]
	CylinderHatBlack,
	[Token(Token = "0x4000741")]
	BulbHatBlack,
	[Token(Token = "0x4000742")]
	CylinderHatCyan,
	[Token(Token = "0x4000743")]
	BulbHatCyan,
	[Token(Token = "0x4000744")]
	CylinderHatLime,
	[Token(Token = "0x4000745")]
	BulbHatLime,
	[Token(Token = "0x4000746")]
	CylinderHatOrange,
	[Token(Token = "0x4000747")]
	BulbHatOrange,
	[Token(Token = "0x4000748")]
	CylinderHatPink,
	[Token(Token = "0x4000749")]
	BulbHatPink,
	[Token(Token = "0x400074A")]
	CylinderHatPurple,
	[Token(Token = "0x400074B")]
	BulbHatPurple,
	[Token(Token = "0x400074C")]
	CylinderHatRed,
	[Token(Token = "0x400074D")]
	BulbHatRed,
	[Token(Token = "0x400074E")]
	BandanaStriped,
	[Token(Token = "0x400074F")]
	BandanaRed,
	[Token(Token = "0x4000750")]
	BandanaPurple,
	[Token(Token = "0x4000751")]
	Pumpkin,
	[Token(Token = "0x4000752")]
	DemeoWizardHat,
	[Token(Token = "0x4000753")]
	SantaHat,
	[Token(Token = "0x4000754")]
	GingerbreadHat
}
[Token(Token = "0x2000126")]
public class AvatarHatRegistry : SingleInstanceBehavior<AvatarHatRegistry>
{
	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AvatarHatList hats;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite noHatIcon;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<AvatarHatType, AvatarHatData> hatRegistry;

	[Token(Token = "0x1700010B")]
	public int HatCount
	{
		[Token(Token = "0x6000796")]
		[Address(RVA = "0xA3C00C", Offset = "0xA3C00C", VA = "0xA3C00C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0xA3C064", Offset = "0xA3C064", VA = "0xA3C064", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0xA3C190", Offset = "0xA3C190", VA = "0xA3C190")]
	public AvatarHatData GetHatData(AvatarHatType type)
	{
		return null;
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0xA3C1E8", Offset = "0xA3C1E8", VA = "0xA3C1E8")]
	public Sprite GetHatIcon(AvatarHatType type)
	{
		return null;
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0xA3C260", Offset = "0xA3C260", VA = "0xA3C260")]
	public AvatarHatRegistry()
	{
	}
}
[Serializable]
[Token(Token = "0x2000127")]
[CreateAssetMenu(fileName = "NewAvatarHeadData", menuName = "Avatars/Avatar Head Data")]
public class AvatarHeadData : ScriptableObject
{
	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CookoutAvatarVisualType type;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject prefab;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite[] menuIconSprites;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material[] headMaterials;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material[] eyeMaterials;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color[] headMaterialColors;

	[Token(Token = "0x600079B")]
	[Address(RVA = "0xA3C2CC", Offset = "0xA3C2CC", VA = "0xA3C2CC")]
	public AvatarHeadData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000128")]
[CreateAssetMenu(fileName = "NewAvatarHeadList", menuName = "Avatars/Avatar Head List")]
public class AvatarHeadList : ScriptableObject
{
	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AvatarHeadData> avatarHeads;

	[Token(Token = "0x600079C")]
	[Address(RVA = "0xA3C2D4", Offset = "0xA3C2D4", VA = "0xA3C2D4")]
	public AvatarHeadList()
	{
	}
}
[Token(Token = "0x2000129")]
public class AvatarHeadRegistry : SingleInstanceBehavior<AvatarHeadRegistry>
{
	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AvatarHeadList avatarHeads;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<CookoutAvatarVisualType, AvatarHeadData> avatarHeadRegistry;

	[Token(Token = "0x1700010C")]
	public int HeadCount
	{
		[Token(Token = "0x600079D")]
		[Address(RVA = "0xA3C2DC", Offset = "0xA3C2DC", VA = "0xA3C2DC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0xA3C32C", Offset = "0xA3C32C", VA = "0xA3C32C", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0xA3A178", Offset = "0xA3A178", VA = "0xA3A178")]
	public AvatarHeadData GetAvatarHeadData(CookoutAvatarVisualType type)
	{
		return null;
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0xA3C414", Offset = "0xA3C414", VA = "0xA3C414")]
	public Sprite GetAvatarHeadIcon(CookoutAvatarVisualType type, int colorVariant)
	{
		return null;
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0xA3C4A0", Offset = "0xA3C4A0", VA = "0xA3C4A0")]
	public int GetAvatarHeadCount()
	{
		return default(int);
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0xA3C4F0", Offset = "0xA3C4F0", VA = "0xA3C4F0")]
	public AvatarHeadRegistry()
	{
	}
}
[Token(Token = "0x200012A")]
public class AvatarSelection
{
	[Token(Token = "0x1700010D")]
	public static int GetSelectedAvatar
	{
		[Token(Token = "0x60007A3")]
		[Address(RVA = "0xA3C5AC", Offset = "0xA3C5AC", VA = "0xA3C5AC")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007A4")]
		[Address(RVA = "0xA3C5F4", Offset = "0xA3C5F4", VA = "0xA3C5F4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0xA3C640", Offset = "0xA3C640", VA = "0xA3C640")]
	public static void LoadPresetOculusAvatar2(CookoutAvatar avatar, int index)
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0xA3CA60", Offset = "0xA3CA60", VA = "0xA3CA60")]
	public static void LoadOculusAvatar2(CookoutAvatar avatar, CookoutUserId userId)
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0xA3CBC8", Offset = "0xA3CBC8", VA = "0xA3CBC8")]
	public static void SelectCookoutAvatar(CookoutAvatarVisualType avatarType, CookoutAvatar avatar, PlayerColor color = PlayerColor.Red)
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0xA3D074", Offset = "0xA3D074", VA = "0xA3D074")]
	public AvatarSelection()
	{
	}
}
[Token(Token = "0x200012B")]
public class AvatarSelectionMenu : SingleInstanceBehavior<AvatarSelectionMenu>
{
	[Token(Token = "0x200012C")]
	public enum CustomizationOption
	{
		[Token(Token = "0x40007DA")]
		Hat,
		[Token(Token = "0x40007DB")]
		Head,
		[Token(Token = "0x40007DC")]
		Body,
		[Token(Token = "0x40007DD")]
		Hand
	}

	[Token(Token = "0x200012D")]
	private struct AvatarButton
	{
		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PokeButton button;

		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject gameObject;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MeshRenderer buttonRenderer;

		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SpriteRenderer spriteRenderer;

		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject checkMark;
	}

	[Token(Token = "0x200012E")]
	private struct OculusAvatarOption
	{
		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int id;

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Sprite icon;
	}

	[Token(Token = "0x2000132")]
	[CompilerGenerated]
	private sealed class <CheckForAvatarChange>d__140 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AvatarSelectionMenu <>4__this;

		[Token(Token = "0x40007EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Task<OvrAvatarManager.HasAvatarChangedRequestResultCode> <checkTask>5__2;

		[Token(Token = "0x17000113")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007F2")]
			[Address(RVA = "0xA44AD4", Offset = "0xA44AD4", VA = "0xA44AD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000114")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007F4")]
			[Address(RVA = "0xA44B1C", Offset = "0xA44B1C", VA = "0xA44B1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0xA3EEB8", Offset = "0xA3EEB8", VA = "0xA3EEB8")]
		[DebuggerHidden]
		public <CheckForAvatarChange>d__140(int <>1__state)
		{
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0xA44548", Offset = "0xA44548", VA = "0xA44548", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0xA4454C", Offset = "0xA4454C", VA = "0xA4454C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0xA44ADC", Offset = "0xA44ADC", VA = "0xA44ADC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[Header("Action Buttons")]
	private PokeButton chooseAvatarButton;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PokeButton chooseAvatarIntroButton;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PokeButton avatarTypeSelectionButton;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private PokeButton revertChangesButton;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private PokeButton editOculusAvatar2Button;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Parent GameObjects")]
	[SerializeField]
	private GameObject avatarSelectionParent;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject avatarNavigationParent;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject cookoutAvatarSelectionRoot;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject oculusAvatarSelectionRootSteam;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject oculusAvatarSelectionRootOculus;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject loadingOculusAvatarLabel;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject[] checkingOculusAvatarObjects;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject loadingPresetOculusAvatarlabel;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private CoinCount coinCountBacking;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Header("Oculus Avatars")]
	[SerializeField]
	private Sprite[] oculusAvatarPreviews;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[Header("Avatar Buttons")]
	[SerializeField]
	private PokeButton[] avatarsButtons;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[Header("Textures & Materials")]
	[SerializeField]
	private Texture inactiveTexture;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Texture activeTexture;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Material categoryActiveMat;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Material categoryInactiveMat;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[Header("Text")]
	[SerializeField]
	private TextMeshPro pageDisplayTextOculus;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private TextMeshPro pageDisplayTextCookout;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private TextMeshPro selectCookoutCustomizationLabel;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[Header("Pagination Buttons")]
	[SerializeField]
	private PokeButton scrollPrevious;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private PokeButton scrollNext;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[Header("Oculus avatar popup")]
	[SerializeField]
	private GameObject oculusAvatarFailedPopupParent;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private PokeButton popupConfirmButton;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	[Header("Customization")]
	private PokeButton categoryHats;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private PokeButton categoryHeads;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private PokeButton categoryTorsos;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private PokeButton categoryGloves;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private PokeButton nextGridPage;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private PokeButton previousGridPage;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private PokeButton selectCookoutCustomizationButton;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private PokeButton[] colorOptions;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private PokeButton[] customizationGridButtons;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private SpriteRenderer[] customizationGridIcons;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private GameObject[] customizationGridEquippedLabels;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private GameObject[] customizationGridNewLabels;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private GameObject[] customizationGridLockIcons;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private GameObject[] customizationGridBuyIcons;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private MeshRenderer[] customizationGridRenderer;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private MeshRenderer categoryHatsRenderer;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[SerializeField]
	private MeshRenderer categoryHeadsRenderer;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	private MeshRenderer categoryTorsosRenderer;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	private MeshRenderer categoryGlovesRenderer;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	private MeshRenderer selectCookoutCustomizationRenderer;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	private SpriteRenderer toggleAvatarTypeRenderer;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private Sprite toggleAvatarTypeOculusIcon;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[SerializeField]
	private Sprite toggleAvatarTypeCookoutIcon;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[SerializeField]
	private GameObject buyIcon;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[SerializeField]
	private GameObject colorButtonRoot;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[SerializeField]
	private GameObject paginationRoot;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[SerializeField]
	private GameObject UnlockHintGO;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[SerializeField]
	private GameObject switchAvatarTypePrompt;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[SerializeField]
	private TextMeshPro UnlockHintText;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private GameObject revertChangesButtonGO;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private GameObject avatarTypeSelectionButtonGO;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private GameObject chooseAvatarButtonGO;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private GameObject chooseAvatarIntroButtonGO;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private GameObject editOculusAvatar2ButtonGO;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private GameObject selectCookoutCustomizationGO;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private GameObject[] actionButtons;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private Locale locale;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private StringBuilder stringBuilder;

	[Token(Token = "0x40007A3")]
	private const string localizationBuy = "buy_item";

	[Token(Token = "0x40007A4")]
	private const string localizationAchievementUnlock = "inv_unlock_condition_bubble_18";

	[Token(Token = "0x40007A5")]
	private const string localizationAchievementUnlockReplacementKey = "{achievementName}";

	[Token(Token = "0x40007A6")]
	private const string checkMarkIdentifier = "CheckMark";

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private OculusAvatarOption[] avatars;

	[Token(Token = "0x40007A8")]
	private const int oculusAvatarCount = 32;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private AvatarButton[] avatarsButtonsInternal;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private MaterialPropertyBlock propertyBlock;

	[Token(Token = "0x40007AB")]
	private const string propertyMainTexture = "_MainTex";

	[Token(Token = "0x40007AC")]
	private const string propertyColor = "_Color";

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private GameObject[] headColorFrames;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private GameObject[] customizationGridButtonsGO;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private Renderer[] headColorRenderers;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private SpriteRenderer[] headColorLockIcons;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private SpriteRenderer[] headColorCoinBagIcons;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private GameObject[] headColorNewLabels;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private int selectedAvatar;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
	private int selectedButtonIndex;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private bool firstTimeSetup;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
	private int avatarsButtonsCount;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private int currentPageOculus;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	private int pageCountOculus;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private int customizationGridButtonCount;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
	private int currentPageCookout;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private int pageCountCookout;

	[Token(Token = "0x40007BC")]
	private const int noAvatarCustomizationSelected = -1;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	private CustomizationOption currentCustomizationOption;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private bool selectedOptionIsLocked;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x291")]
	private bool selectedOptionIsBought;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x292")]
	private bool enablingFirstTime;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
	private int selectedCookoutAvatarCustomizationBacking;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private bool waitingForOculusV2ToLoad;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x299")]
	private bool waitingForOculusV2ToLoadDelayFrame;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
	private int savedAvatar;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private bool isSteamPlatform;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A1")]
	private bool isOculusPlatform;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A2")]
	private AvatarType revertAvatarType;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A3")]
	private CookoutAvatarVisualType revertHeadType;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
	private AvatarHatType revertHatType;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A5")]
	private AvatarBodyType revertBodyType;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private int revertColor;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
	private AvatarHandMaterial revertHandMaterial;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private int selectedHat;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
	private int selectedHead;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private int selectedBody;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
	private int selectedHand;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private int selectedColor;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
	private int hatCount;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private int headCount;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
	private int bodyCount;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private int handCount;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
	private float buttonCooldownTimer;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private float buttonCooldown;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	private Coroutine checkForAvatarChangeCoroutine;

	[Token(Token = "0x1700010E")]
	public CoinCount CoinCount
	{
		[Token(Token = "0x60007A9")]
		[Address(RVA = "0xA3D07C", Offset = "0xA3D07C", VA = "0xA3D07C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700010F")]
	private int SelectedAvatarCustomization
	{
		[Token(Token = "0x60007AA")]
		[Address(RVA = "0xA3D084", Offset = "0xA3D084", VA = "0xA3D084")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007AB")]
		[Address(RVA = "0xA3D08C", Offset = "0xA3D08C", VA = "0xA3D08C")]
		set
		{
		}
	}

	[Token(Token = "0x17000110")]
	private int avatarsOffset
	{
		[Token(Token = "0x60007AC")]
		[Address(RVA = "0xA3D140", Offset = "0xA3D140", VA = "0xA3D140")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000111")]
	private int customizationOffset
	{
		[Token(Token = "0x60007AD")]
		[Address(RVA = "0xA3D150", Offset = "0xA3D150", VA = "0xA3D150")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000112")]
	private AvatarType CurrentAvatarType
	{
		[Token(Token = "0x60007AE")]
		[Address(RVA = "0xA3D160", Offset = "0xA3D160", VA = "0xA3D160")]
		get
		{
			return default(AvatarType);
		}
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0xA3D1B0", Offset = "0xA3D1B0", VA = "0xA3D1B0", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0xA3E3CC", Offset = "0xA3E3CC", VA = "0xA3E3CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0xA3E454", Offset = "0xA3E454", VA = "0xA3E454")]
	public void Init()
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0xA3E6C8", Offset = "0xA3E6C8", VA = "0xA3E6C8", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0xA3EA80", Offset = "0xA3EA80", VA = "0xA3EA80")]
	private void Update()
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0xA3EB70", Offset = "0xA3EB70", VA = "0xA3EB70")]
	private void SetAllButtonsActive(bool active)
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0xA3EE48", Offset = "0xA3EE48", VA = "0xA3EE48")]
	private void EditOculusAvatar2()
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0xA3EE50", Offset = "0xA3EE50", VA = "0xA3EE50")]
	[IteratorStateMachine(typeof(<CheckForAvatarChange>d__140))]
	protected IEnumerator CheckForAvatarChange()
	{
		return null;
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0xA3EEE0", Offset = "0xA3EEE0", VA = "0xA3EEE0")]
	private void OnHasFocusChanged()
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0xA3EFF4", Offset = "0xA3EFF4", VA = "0xA3EFF4")]
	private void OnHasPausedChanged()
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0xA3EFF8", Offset = "0xA3EFF8", VA = "0xA3EFF8")]
	private void OnAvatarV2NotFound()
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0xA3F15C", Offset = "0xA3F15C", VA = "0xA3F15C")]
	private void OnOculusAvatarLoading()
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0xA3ED18", Offset = "0xA3ED18", VA = "0xA3ED18")]
	private void OnOculusAvatarLoaded()
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0xA3E314", Offset = "0xA3E314", VA = "0xA3E314")]
	private void SetupOculusAvatarOptions()
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0xA3F794", Offset = "0xA3F794", VA = "0xA3F794")]
	public void Show(bool isEnabled)
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0xA402B0", Offset = "0xA402B0", VA = "0xA402B0")]
	public void OnIntroShown()
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0xA3FE58", Offset = "0xA3FE58", VA = "0xA3FE58")]
	private void OnShowSetMenuType()
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0xA3F940", Offset = "0xA3F940", VA = "0xA3F940")]
	private void FirstTimeEnabled()
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0xA3DF90", Offset = "0xA3DF90", VA = "0xA3DF90")]
	private void SetupActionButtons(bool isIntro)
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0xA40658", Offset = "0xA40658", VA = "0xA40658")]
	private void CookoutNextPage()
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0xA40C98", Offset = "0xA40C98", VA = "0xA40C98")]
	private void CookoutPreviousPage()
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0xA40CB8", Offset = "0xA40CB8", VA = "0xA40CB8")]
	private void OculusPreviousPage()
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0xA40CD4", Offset = "0xA40CD4", VA = "0xA40CD4")]
	private void OculusNextPage()
	{
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0xA3F2C0", Offset = "0xA3F2C0", VA = "0xA3F2C0")]
	private void RefreshPage()
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0xA40D90", Offset = "0xA40D90", VA = "0xA40D90")]
	private void HideUnusedButtons()
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0xA3F1B4", Offset = "0xA3F1B4", VA = "0xA3F1B4")]
	private void ShowActionButtons(bool showActionButtons)
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0xA3F104", Offset = "0xA3F104", VA = "0xA3F104")]
	private void ShowOculusAvatarFailedPopup(bool showPopup)
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0xA40E10", Offset = "0xA40E10", VA = "0xA40E10")]
	private void SelectOculusAvatar(int avatar)
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0xA40E38", Offset = "0xA40E38", VA = "0xA40E38")]
	private void LoadOculusAvatar(int avatar)
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0xA41058", Offset = "0xA41058", VA = "0xA41058")]
	private void SaveAvatar()
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0xA40408", Offset = "0xA40408", VA = "0xA40408")]
	private void SelectAvatarButton(int avatar)
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0xA40CF4", Offset = "0xA40CF4", VA = "0xA40CF4")]
	private void SetButtonActiveVisuals(Renderer renderer, bool isActive)
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0xA41350", Offset = "0xA41350", VA = "0xA41350")]
	public void SwitchAvatarType()
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0xA416EC", Offset = "0xA416EC", VA = "0xA416EC")]
	private void ForceReturnToCookoutMenu()
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0xA4174C", Offset = "0xA4174C", VA = "0xA4174C")]
	private void UpdateHat(CookoutAvatar avatar, AvatarHatType hatType)
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0xA41974", Offset = "0xA41974", VA = "0xA41974")]
	private void UpdateHead(CookoutAvatar avatar, CookoutAvatarVisualType headType)
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0xA41EFC", Offset = "0xA41EFC", VA = "0xA41EFC")]
	private void UpdateHeadUI(CookoutAvatarVisualType headType)
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0xA424B0", Offset = "0xA424B0", VA = "0xA424B0")]
	private void UpdateBody(CookoutAvatar avatar, AvatarBodyType bodyType)
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0xA424EC", Offset = "0xA424EC", VA = "0xA424EC")]
	private void UpdateHandMaterial(CookoutAvatar avatar, AvatarHandMaterial material)
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0xA3F08C", Offset = "0xA3F08C", VA = "0xA3F08C")]
	private void SwitchToCookoutAvatarIfNeeded(CookoutAvatar avatar)
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0xA42584", Offset = "0xA42584", VA = "0xA42584")]
	private void RevertAvatarCustomization()
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0xA40098", Offset = "0xA40098", VA = "0xA40098")]
	private void SetSelectedColor(int activeIndex)
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0xA43578", Offset = "0xA43578", VA = "0xA43578")]
	private void ShowUnlockHint(string unlockConditionLocalizationKey)
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0xA43684", Offset = "0xA43684", VA = "0xA43684")]
	private void OnCookoutCustomizationButtonClicked(int index)
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0xA431B0", Offset = "0xA431B0", VA = "0xA431B0")]
	private void UpdateCookoutSelectButton()
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0xA43B98", Offset = "0xA43B98", VA = "0xA43B98")]
	private void OnCookoutCustomizationBuyButtonClicked()
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0xA3D094", Offset = "0xA3D094", VA = "0xA3D094")]
	private void RefreshSelectedGridOptions()
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0xA404B0", Offset = "0xA404B0", VA = "0xA404B0")]
	private void SetCookoutCustomizationCategory(CustomizationOption type)
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0xA406BC", Offset = "0xA406BC", VA = "0xA406BC")]
	private void RefreshCookoutCustomizationGridPage(CustomizationOption type)
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0xA42854", Offset = "0xA42854", VA = "0xA42854")]
	private void RefreshGridButtonIcons(CustomizationOption type)
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0xA43DBC", Offset = "0xA43DBC", VA = "0xA43DBC")]
	public void OnKissedMirror()
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0xA441F8", Offset = "0xA441F8", VA = "0xA441F8")]
	public AvatarSelectionMenu()
	{
	}
}
[Token(Token = "0x2000134")]
public class AvatarV2Aux : SingleInstanceBehavior<AvatarV2Aux>
{
	[Token(Token = "0x2000135")]
	public enum AvatarV2Availability
	{
		[Token(Token = "0x40007F4")]
		NotSet,
		[Token(Token = "0x40007F5")]
		Available,
		[Token(Token = "0x40007F6")]
		NotAvailable,
		[Token(Token = "0x40007F7")]
		UnsupportedPlatform,
		[Token(Token = "0x40007F8")]
		Error,
		[Token(Token = "0x40007F9")]
		Checking
	}

	[Token(Token = "0x2000136")]
	[CompilerGenerated]
	private sealed class <CheckIfAvatarV2HasBeenAssignedCoroutine>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ulong userID;

		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AvatarV2Aux <>4__this;

		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Task<OvrAvatarManager.HasAvatarRequestResultCode> <hasAvatarRequest>5__2;

		[Token(Token = "0x17000116")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000802")]
			[Address(RVA = "0xA450F8", Offset = "0xA450F8", VA = "0xA450F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000117")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000804")]
			[Address(RVA = "0xA45140", Offset = "0xA45140", VA = "0xA45140", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0xA44E40", Offset = "0xA44E40", VA = "0xA44E40")]
		[DebuggerHidden]
		public <CheckIfAvatarV2HasBeenAssignedCoroutine>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0xA44ED4", Offset = "0xA44ED4", VA = "0xA44ED4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0xA44ED8", Offset = "0xA44ED8", VA = "0xA44ED8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0xA45100", Offset = "0xA45100", VA = "0xA45100", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x17000115")]
	public AvatarV2Availability AvatarV2Set
	{
		[Token(Token = "0x60007F9")]
		[Address(RVA = "0xA44C00", Offset = "0xA44C00", VA = "0xA44C00")]
		[CompilerGenerated]
		get
		{
			return default(AvatarV2Availability);
		}
		[Token(Token = "0x60007F8")]
		[Address(RVA = "0xA44BF8", Offset = "0xA44BF8", VA = "0xA44BF8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0xA44C08", Offset = "0xA44C08", VA = "0xA44C08")]
	public void Init()
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0xA3F600", Offset = "0xA3F600", VA = "0xA3F600")]
	public void Refresh()
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0xA44DA4", Offset = "0xA44DA4", VA = "0xA44DA4")]
	public void CheckIfAvatarV2HasBeenAssigned(ulong userID)
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0xA44DCC", Offset = "0xA44DCC", VA = "0xA44DCC")]
	[IteratorStateMachine(typeof(<CheckIfAvatarV2HasBeenAssignedCoroutine>d__8))]
	private IEnumerator CheckIfAvatarV2HasBeenAssignedCoroutine(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0xA44E68", Offset = "0xA44E68", VA = "0xA44E68")]
	public AvatarV2Aux()
	{
	}
}
[Serializable]
[Token(Token = "0x2000137")]
[CreateAssetMenu(fileName = "newBuyableAvatarCustomization", menuName = "Avatars/Buyable Avatar Customization")]
public class BuyableAvatarCustomizationData : ScriptableObject
{
	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int price;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool isHat;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public AvatarHatType hatType;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool isHead;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	public CookoutAvatarVisualType avatarVisualType;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int headMaterialIndex;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool isBody;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public AvatarBodyType bodyType;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool isHandMaterial;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
	public AvatarHandMaterial handMaterial;

	[Token(Token = "0x6000805")]
	[Address(RVA = "0xA45148", Offset = "0xA45148", VA = "0xA45148")]
	public BuyableAvatarCustomizationData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000138")]
[CreateAssetMenu(fileName = "NewBuyableAvatarCustomizationList", menuName = "Avatars/Unlockable Avatar Buyable List")]
public class BuyableAvatarCustomizationList : ScriptableObject
{
	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<BuyableAvatarCustomizationData> buyableAvatarCustomizationDataList;

	[Token(Token = "0x6000806")]
	[Address(RVA = "0xA45150", Offset = "0xA45150", VA = "0xA45150")]
	public BuyableAvatarCustomizationList()
	{
	}
}
[Token(Token = "0x2000139")]
public sealed class CookoutAvatar : UnityEngine.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x200013A")]
	private enum HoldingMask
	{
		[Token(Token = "0x4000855")]
		None,
		[Token(Token = "0x4000856")]
		Left,
		[Token(Token = "0x4000857")]
		Right,
		[Token(Token = "0x4000858")]
		Both
	}

	[Token(Token = "0x200013B")]
	private sealed class NetTfmSync
	{
		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform tfm;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public QuantBufferTfm src;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public QuantBufferTfm dst;

		[Token(Token = "0x6000837")]
		[Address(RVA = "0xA47C6C", Offset = "0xA47C6C", VA = "0xA47C6C")]
		public NetTfmSync()
		{
		}
	}

	[Token(Token = "0x200013C")]
	[CompilerGenerated]
	private sealed class <DelayedRecenter>d__90 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CookoutAvatar <>4__this;

		[Token(Token = "0x1700011E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600083B")]
			[Address(RVA = "0xA47D04", Offset = "0xA47D04", VA = "0xA47D04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600083D")]
			[Address(RVA = "0xA47D4C", Offset = "0xA47D4C", VA = "0xA47D4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000838")]
		[Address(RVA = "0xA45DD0", Offset = "0xA45DD0", VA = "0xA45DD0")]
		[DebuggerHidden]
		public <DelayedRecenter>d__90(int <>1__state)
		{
		}

		[Token(Token = "0x6000839")]
		[Address(RVA = "0xA47C74", Offset = "0xA47C74", VA = "0xA47C74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600083A")]
		[Address(RVA = "0xA47C78", Offset = "0xA47C78", VA = "0xA47C78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600083C")]
		[Address(RVA = "0xA47D0C", Offset = "0xA47D0C", VA = "0xA47D0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400080A")]
	private const int layerHideInFirstPerson = 25;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PhotonView pv;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CookoutAvatarHead head;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CookoutAvatarHand handL;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CookoutAvatarHand handR;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject cookoutHandL;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject cookoutHandR;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform safetyBubbleAnchor;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool isLocalAvatar;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public CustomHandPoseList customHandPoseList;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject oculusAvatarV2Root;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Renderer handLRenderer;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Renderer handRRenderer;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Vector3 torsoOffset;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private SafetyBubble safetyBubble;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private PlayerNameDisplayer nameDisplayer;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[Header("Local Only")]
	public int metaAvatarLocalPlayerWithHeadLayer;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public int metaAvatarLocalPlayerNoHeadLayer;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public CookoutTrackedPoseDriver poseDriverHead;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public CookoutTrackedPoseDriver poseDriverLeftHand;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public CookoutTrackedPoseDriver poseDriverRightHand;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject waitingForHostText;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject outofBoundsOverlay;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public TMP_Text outOfBoundsTextRift;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private CookoutAvatarVisualType avatarVisualType;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	private AvatarType avatarType;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private GameObject headVisuals;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Renderer hatRenderer;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Renderer headRenderer;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Renderer leftEyeRenderer;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Renderer rightEyeRenderer;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float netInterpolationElapsed;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private NetTfmSync netTfmHead;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private NetTfmSync netTfmHandL;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private NetTfmSync netTfmHandR;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private ControllerType remoteControllerType;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
	private CookoutPlatformType remotePlatformType;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Animator eyesAnimator;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private CookoutAvatarEyesAnimations eyesAnimations;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private readonly string[] eyesAnimationTriggers;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private readonly float[] eyesAnimationOdds;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private int headMaterialIndex;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private AvatarHandMaterial handMaterialIndex;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14D")]
	private AvatarHatType currentHatType;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private GameObject hat;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private AvatarBodyType currentBodyType;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Renderer torsoRenderer;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Transform headAnchor;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private GameObject cookoutTorso;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private AvatarHatRegistry hatRegistery;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private AvatarHeadRegistry headRegistery;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private AvatarHandRegistry handRegistery;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private AvatarBodyRegistery bodyRegistery;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private bool metaAvatarLayersWereSet;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private OculusAvatarV2Entity oculusAvatar2Entity;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private float smoothedPlaybackDelay;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private float lastPacketDelay;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private float maxJitter;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private float minJitter;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private bool firstPacket;

	[Token(Token = "0x4000847")]
	private const float playbackSmoothFactor = 1f;

	[Token(Token = "0x4000848")]
	private const float maxJitterCap = 0.2f;

	[Token(Token = "0x4000849")]
	private const float minJitterCap = -0.2f;

	[Token(Token = "0x400084A")]
	private const int jitterSamplesCap = 100;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private Queue<float> JitterMemory;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private float[] JitterMemoryArray;

	[Token(Token = "0x400084D")]
	private const OvrAvatarEntity.StreamLOD streamLOD = OvrAvatarEntity.StreamLOD.Medium;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly float[] StreamLodSnapshotIntervalSeconds;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private NativeArray<byte> oculus2DataArray;

	[Token(Token = "0x4000850")]
	private const string v2VisualRoot = "LOD0";

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private Transform oculus2LeftWrist;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private Transform oculus2RightWrist;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private bool playerPaused;

	[Token(Token = "0x17000118")]
	public bool IsActive
	{
		[Token(Token = "0x6000807")]
		[Address(RVA = "0xA45158", Offset = "0xA45158", VA = "0xA45158")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000119")]
	public Transform GetTorsoTransform
	{
		[Token(Token = "0x6000808")]
		[Address(RVA = "0xA441DC", Offset = "0xA441DC", VA = "0xA441DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011A")]
	public Transform HatAnchor
	{
		[Token(Token = "0x6000809")]
		[Address(RVA = "0xA45170", Offset = "0xA45170", VA = "0xA45170")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600080A")]
		[Address(RVA = "0xA45178", Offset = "0xA45178", VA = "0xA45178")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700011B")]
	public bool AvatarFullyLoaded
	{
		[Token(Token = "0x600080B")]
		[Address(RVA = "0xA3ECF0", Offset = "0xA3ECF0", VA = "0xA3ECF0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700011C")]
	public bool HandSkeletonLoaded
	{
		[Token(Token = "0x600080C")]
		[Address(RVA = "0xA45180", Offset = "0xA45180", VA = "0xA45180")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700011D")]
	public bool VisualsLoaded
	{
		[Token(Token = "0x600080D")]
		[Address(RVA = "0xA4522C", Offset = "0xA4522C", VA = "0xA4522C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0xA45320", Offset = "0xA45320", VA = "0xA45320")]
	private void Start()
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0xA45D68", Offset = "0xA45D68", VA = "0xA45D68")]
	[IteratorStateMachine(typeof(<DelayedRecenter>d__90))]
	private IEnumerator DelayedRecenter()
	{
		return null;
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0xA45DF8", Offset = "0xA45DF8", VA = "0xA45DF8")]
	private void SetMetaAvatarLayers()
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0xA45FE8", Offset = "0xA45FE8", VA = "0xA45FE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0xA46670", Offset = "0xA46670", VA = "0xA46670")]
	private void OnHasFocusChanged()
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0xA46774", Offset = "0xA46774", VA = "0xA46774")]
	public AvatarType GetAvatarType()
	{
		return default(AvatarType);
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0xA4677C", Offset = "0xA4677C", VA = "0xA4677C")]
	public AvatarHandMaterial GetHandMaterial()
	{
		return default(AvatarHandMaterial);
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0xA46784", Offset = "0xA46784", VA = "0xA46784")]
	public int GetHeadMaterialIndex()
	{
		return default(int);
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0xA4678C", Offset = "0xA4678C", VA = "0xA4678C")]
	public AvatarHatType GetAvatarHatType()
	{
		return default(AvatarHatType);
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0xA46794", Offset = "0xA46794", VA = "0xA46794")]
	public AvatarBodyType GetAvatarBodyType()
	{
		return default(AvatarBodyType);
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0xA4679C", Offset = "0xA4679C", VA = "0xA4679C")]
	public SafetyBubble GetSafetyBubble()
	{
		return null;
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0xA467A4", Offset = "0xA467A4", VA = "0xA467A4")]
	public PlayerNameDisplayer GetNameDisplayer()
	{
		return null;
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0xA3C7D4", Offset = "0xA3C7D4", VA = "0xA3C7D4")]
	public void SetAvatarType(AvatarType type)
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0xA46908", Offset = "0xA46908", VA = "0xA46908")]
	public CookoutAvatarVisualType GetAvatarVisualType()
	{
		return default(CookoutAvatarVisualType);
	}

	[Token(Token = "0x600081C")]
	private T GetStateMachineBehaviour<T>() where T : StateMachineBehaviour
	{
		return null;
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0xA3CCC8", Offset = "0xA3CCC8", VA = "0xA3CCC8")]
	public void SetCookoutAvatarVisualType(CookoutAvatarVisualType newAvatarType)
	{
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0xA42528", Offset = "0xA42528", VA = "0xA42528")]
	public void SetCookoutAvatarVisualCustomization(AvatarBodyType newBodyType, AvatarHatType newHatType, int newHeadMaterialIndex, AvatarHandMaterial newHandMaterialIndex, PlayerColor playerColor = PlayerColor.Red)
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0xA41AE0", Offset = "0xA41AE0", VA = "0xA41AE0")]
	public void SetCookoutAvatarBodyType(AvatarBodyType newBodyType, PlayerColor playerColor = PlayerColor.Red)
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0xA46910", Offset = "0xA46910", VA = "0xA46910")]
	private void GetRandomEyesAnimation()
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0xA3CC10", Offset = "0xA3CC10", VA = "0xA3CC10")]
	public void SetUniformColor(PlayerColor color)
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0xA430C8", Offset = "0xA430C8", VA = "0xA430C8")]
	public void SetHeadMaterial(int materialIndex)
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0xA41E80", Offset = "0xA41E80", VA = "0xA41E80")]
	public void SetHandMaterial(AvatarHandMaterial materialIndex, PlayerColor color = PlayerColor.Red)
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0xA41770", Offset = "0xA41770", VA = "0xA41770")]
	public void SetHat(AvatarHatType type)
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0xA46A00", Offset = "0xA46A00", VA = "0xA46A00")]
	public void SetRemoteAvatarVisible(bool isVisible)
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0xA36410", Offset = "0xA36410", VA = "0xA36410")]
	public void SetAvatarVisible(bool isVisible)
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0xA46A14", Offset = "0xA46A14", VA = "0xA46A14")]
	public void SetLightProbeAnchor(Transform anchor)
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0xA46B24", Offset = "0xA46B24", VA = "0xA46B24")]
	public void OnLocalAvatarLeavingMainScene()
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0xA46BC0", Offset = "0xA46BC0", VA = "0xA46BC0")]
	public void SetRemoteAvatarControllerAndPlatformType(CookoutPlatformType platformType, ControllerType controllerType)
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0xA46BCC", Offset = "0xA46BCC", VA = "0xA46BCC")]
	private void HideOculusAvatar1stPerson(Transform root)
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0xA46C54", Offset = "0xA46C54", VA = "0xA46C54")]
	public bool IsSpecificCookoutAvatar(CookoutAvatarVisualType expectedAvatar)
	{
		return default(bool);
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0xA46C78", Offset = "0xA46C78", VA = "0xA46C78")]
	public OculusAvatarV2Entity GetOculusAvatar2Entity()
	{
		return null;
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0xA46C80", Offset = "0xA46C80", VA = "0xA46C80")]
	private void OnAvatarV2SkeletonFound()
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0xA46D04", Offset = "0xA46D04", VA = "0xA46D04")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0xA46D70", Offset = "0xA46D70", VA = "0xA46D70")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0xA47024", Offset = "0xA47024", VA = "0xA47024", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0xA4792C", Offset = "0xA4792C", VA = "0xA4792C")]
	public CookoutAvatar()
	{
	}
}
[Token(Token = "0x200013E")]
public class CookoutAvatarEyesAnimations : StateMachineBehaviour
{
	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action OnAnimationComplete;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool switchingAnimation;

	[Token(Token = "0x600083E")]
	[Address(RVA = "0xA47D54", Offset = "0xA47D54", VA = "0xA47D54", Slot = "5")]
	public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0xA47DB0", Offset = "0xA47DB0", VA = "0xA47DB0", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo animatorStateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0xA47DB8", Offset = "0xA47DB8", VA = "0xA47DB8")]
	public CookoutAvatarEyesAnimations()
	{
	}
}
[Token(Token = "0x200013F")]
public class CookoutAvatarHand : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000140")]
	[CompilerGenerated]
	private sealed class <Start>d__109 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CookoutAvatarHand <>4__this;

		[Token(Token = "0x17000123")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000876")]
			[Address(RVA = "0xA4BC10", Offset = "0xA4BC10", VA = "0xA4BC10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000124")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000878")]
			[Address(RVA = "0xA4BC58", Offset = "0xA4BC58", VA = "0xA4BC58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000873")]
		[Address(RVA = "0xA487CC", Offset = "0xA487CC", VA = "0xA487CC")]
		[DebuggerHidden]
		public <Start>d__109(int <>1__state)
		{
		}

		[Token(Token = "0x6000874")]
		[Address(RVA = "0xA4B250", Offset = "0xA4B250", VA = "0xA4B250", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000875")]
		[Address(RVA = "0xA4B254", Offset = "0xA4B254", VA = "0xA4B254", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000877")]
		[Address(RVA = "0xA4BC18", Offset = "0xA4BC18", VA = "0xA4BC18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000862")]
	private const float grabRadius = 0.05f;

	[Token(Token = "0x4000863")]
	private const string propertyColor = "_Color";

	[Token(Token = "0x4000864")]
	private const string propertyProgress = "_Progress";

	[Token(Token = "0x4000865")]
	private const float handPosingSpeed = 8f;

	[NonSerialized]
	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public CookoutVotingHandPose handPose;

	[NonSerialized]
	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public CookoutVotingHandPose oldHandPose;

	[NonSerialized]
	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float poseHoldTime;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CookoutAvatar avatar;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CookoutAvatarHand otherHand;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CookoutHandedness handedness;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool autoHold;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public CookoutHandPose inputHandPosing;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private CookoutInput.Button gripButton;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private CookoutInput.Button squeezeButton;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private CookoutInput.Button thumbUpButton;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform offsetTransform;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject handColliders;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject pokeCollider;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform throwAnchor;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform cookoutHandVisuals;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject wristMenuAttachment;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private bool isRemoteAvatar;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[Tooltip("The magnitude of force to add to an object when throwing it")]
	[SerializeField]
	private float throwStrength;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private float grabCooldownTime;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private Vector3 grabSphereOffset;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Header("Collider offsets")]
	[SerializeField]
	private Vector3 oculusHandPosition;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[SerializeField]
	private Vector3 oculusHandOrientation;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Vector3 viveHandPosition;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[SerializeField]
	private Vector3 viveHandOrientation;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Vector3 OculusV2HandOrientation;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public Vector3 OculusV2HandPosition;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	[Header("CookoutHandVisual Offset")]
	private Vector3 cookoutHandVisualsPosition;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[SerializeField]
	private Vector3 cookoutHandVisualsOrientation;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[Header("WristMenuAnchor offsets")]
	[SerializeField]
	private Vector3 oculusWristPosition;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[SerializeField]
	private Vector3 oculusWristOrientation;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private Vector3 oculusWristParentPosition;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	[SerializeField]
	private Vector3 oculusWristParentOrientation;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private Vector3 cookoutWristPosition;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	[SerializeField]
	private Vector3 cookoutWristOrientation;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private Vector3 cookoutWristParentPosition;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	[SerializeField]
	private Vector3 cookoutWristParentOrientation;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	[Header("Hand Vote Timer")]
	private Color voteYesBarColor;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private Color voteYesBackgroundColor;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private Color voteNoBarColor;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	private Color voteNoBackgroundColor;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	private GameObject handTimer;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	private UnparentAndFollow unparentAndFollow;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private SpriteRenderer timerBackground;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[SerializeField]
	private SpriteRenderer timerRenderer;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[SerializeField]
	private SpriteRenderer voteYesSprite;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[SerializeField]
	private SpriteRenderer voteNoSprite;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[Header("Hand Posing")]
	[SerializeField]
	private Transform handVisuals;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[SerializeField]
	private Transform poseRelax;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[SerializeField]
	private Transform poseThumbsUp;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[SerializeField]
	private Transform posePerfect;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	[SerializeField]
	private Transform poseFist;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[SerializeField]
	private Transform posePoint;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	[SerializeField]
	private Transform posePointThumbUp;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[SerializeField]
	private Transform poseRelaxedIndexCurled;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	[SerializeField]
	private Transform poseRelaxedThumbCurled;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	[SerializeField]
	private Transform poseRelaxedIndexThumbCurled;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	[Header("Custom Hand Pose")]
	public GameObject oculusAvatarV2HandSkeleton;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public GameObject oculusAvatarV2Root;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private Grabbable heldObject;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private Collider[] collidersHit;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private List<Transform> closestCollidersHit;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private Vector3[] trackedMoves;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private Vector3 previousPosition;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private Vector3[] trackedRotations;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private Quaternion previousRotation;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private int numMovesTracked;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
	private int currentTrackedMove;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private bool hasCustomPose;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x269")]
	private bool wasPoking;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
	private float grabCooldown;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private MaterialPropertyBlock mpb;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private string handednessKey;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private CookoutHandPose inputHandPosingPrev;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private ExitGames.Client.Photon.Hashtable customHandPoseCache;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private bool isGripping;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
	private float handPosingElapsed;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private List<Vector3> handPosingPosition;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private List<Quaternion> handPosingRotation;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private int handPosingCursor;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private OvrAvatarCustomHandPose customHandPose;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public bool isRemotelyHoldingObject;

	[Token(Token = "0x17000120")]
	public Transform OffsetTransform
	{
		[Token(Token = "0x6000841")]
		[Address(RVA = "0xA47DC0", Offset = "0xA47DC0", VA = "0xA47DC0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000121")]
	public GameObject WristMenuAttachment
	{
		[Token(Token = "0x6000842")]
		[Address(RVA = "0xA47DC8", Offset = "0xA47DC8", VA = "0xA47DC8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000122")]
	public bool setupComplete
	{
		[Token(Token = "0x6000843")]
		[Address(RVA = "0xA47DD0", Offset = "0xA47DD0", VA = "0xA47DD0")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000844")]
		[Address(RVA = "0xA47DD8", Offset = "0xA47DD8", VA = "0xA47DD8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0xA47DE4", Offset = "0xA47DE4", VA = "0xA47DE4")]
	public bool IsLeft()
	{
		return default(bool);
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0xA47DF4", Offset = "0xA47DF4", VA = "0xA47DF4")]
	public bool IsRight()
	{
		return default(bool);
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0xA476FC", Offset = "0xA476FC", VA = "0xA476FC")]
	public bool IsHoldingObject()
	{
		return default(bool);
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0xA47E04", Offset = "0xA47E04", VA = "0xA47E04")]
	private bool IsMetaAvatar()
	{
		return default(bool);
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0xA47E28", Offset = "0xA47E28", VA = "0xA47E28")]
	public (Vector3, Quaternion) CalcHandOffset()
	{
		return default((Vector3, Quaternion));
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0xA47FD8", Offset = "0xA47FD8", VA = "0xA47FD8")]
	public (Vector3, Quaternion) CalcHandOffset(CookoutPlatformType platformType, ControllerType controllerType, AvatarType avatarType)
	{
		return default((Vector3, Quaternion));
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0xA48154", Offset = "0xA48154", VA = "0xA48154")]
	public (Vector3, Quaternion) CalcWristOffset()
	{
		return default((Vector3, Quaternion));
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0xA48268", Offset = "0xA48268", VA = "0xA48268")]
	public (Vector3, Quaternion) CalcWristParentOffset()
	{
		return default((Vector3, Quaternion));
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0xA4837C", Offset = "0xA4837C", VA = "0xA4837C")]
	public float CalcThumbsUpAngle()
	{
		return default(float);
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0xA484D0", Offset = "0xA484D0", VA = "0xA484D0")]
	public bool IsPoking()
	{
		return default(bool);
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0xA48548", Offset = "0xA48548", VA = "0xA48548")]
	public bool IsGripping()
	{
		return default(bool);
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0xA485A0", Offset = "0xA485A0", VA = "0xA485A0")]
	public bool IsSqueezing()
	{
		return default(bool);
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0xA485F8", Offset = "0xA485F8", VA = "0xA485F8")]
	public bool IsSqueezingBegin()
	{
		return default(bool);
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0xA48650", Offset = "0xA48650", VA = "0xA48650")]
	public bool IsSqueezingEnd()
	{
		return default(bool);
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0xA486A8", Offset = "0xA486A8", VA = "0xA486A8")]
	public bool IsThumbsUpPose()
	{
		return default(bool);
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0xA48764", Offset = "0xA48764", VA = "0xA48764")]
	[IteratorStateMachine(typeof(<Start>d__109))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0xA487F4", Offset = "0xA487F4", VA = "0xA487F4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0xA48D68", Offset = "0xA48D68", VA = "0xA48D68")]
	private void Update()
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0xA49F08", Offset = "0xA49F08", VA = "0xA49F08")]
	private void GetCurrentTransform(Transform joint, bool firstRecursion)
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0xA49E8C", Offset = "0xA49E8C", VA = "0xA49E8C")]
	private Transform GetGesture(CookoutHandPose inputMask)
	{
		return null;
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0xA4A0EC", Offset = "0xA4A0EC", VA = "0xA4A0EC")]
	private void SetGesture(Transform pose, float tween)
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0xA4A300", Offset = "0xA4A300", VA = "0xA4A300")]
	private void SetGestureOculusV2(Transform pose)
	{
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0xA4A33C", Offset = "0xA4A33C", VA = "0xA4A33C")]
	private void SetGestureOculusV2Recursive(Transform joint, Transform newPose)
	{
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0xA4A100", Offset = "0xA4A100", VA = "0xA4A100")]
	private void SetGestureRecursive(Transform joint, Transform newPose, float tweenRate, bool firstRecursion)
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0xA4A404", Offset = "0xA4A404", VA = "0xA4A404")]
	private void SetGripPose(Transform newPose)
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0xA4A4F8", Offset = "0xA4A4F8", VA = "0xA4A4F8")]
	private void OnPlayerPropertiesChanged(PhotonPlayer player, ExitGames.Client.Photon.Hashtable changedPoses)
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0xA4A65C", Offset = "0xA4A65C", VA = "0xA4A65C")]
	public void SetPose(CookoutCustomHandPose pose)
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0xA49C08", Offset = "0xA49C08", VA = "0xA49C08")]
	private void ClearHandPose()
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0xA4A760", Offset = "0xA4A760", VA = "0xA4A760")]
	public void AdjustHandOffset(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0xA467AC", Offset = "0xA467AC", VA = "0xA467AC")]
	public void CalibrateHandOffset()
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0xA46844", Offset = "0xA46844", VA = "0xA46844")]
	public void CalibrateHandOffset(CookoutPlatformType platformType, ControllerType controllerType, AvatarType avatarType)
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0xA4A868", Offset = "0xA4A868", VA = "0xA4A868")]
	public void ShowAndUpdateTimer(bool isThumbsUp, float progress)
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0xA4AACC", Offset = "0xA4AACC", VA = "0xA4AACC")]
	public void HideTimer()
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0xA4AAEC", Offset = "0xA4AAEC", VA = "0xA4AAEC")]
	private void RefreshHandCollidersEnabled()
	{
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0xA4ACF0", Offset = "0xA4ACF0", VA = "0xA4ACF0")]
	public bool IsIndexFingerCollider(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0xA48FA8", Offset = "0xA48FA8", VA = "0xA48FA8")]
	private void GrabNearestGrabbable()
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0xA4AD6C", Offset = "0xA4AD6C", VA = "0xA4AD6C")]
	public void ForceGrab(Grabbable grabbable)
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0xA4AD70", Offset = "0xA4AD70", VA = "0xA4AD70")]
	private void Grab(Grabbable target)
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0xA46B88", Offset = "0xA46B88", VA = "0xA46B88")]
	public void ForceRelease(bool playHaptics = true)
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0xA49AAC", Offset = "0xA49AAC", VA = "0xA49AAC")]
	private void Release(bool playHaptics = true)
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0xA49C50", Offset = "0xA49C50", VA = "0xA49C50")]
	private void TrackCurrentPosition()
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0xA4B0AC", Offset = "0xA4B0AC", VA = "0xA4B0AC")]
	public Vector3 GetHandMovementSpeed()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0xA4B0B4", Offset = "0xA4B0B4", VA = "0xA4B0B4")]
	public Vector3 GetHandAngularSpeed()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0xA4B0BC", Offset = "0xA4B0BC", VA = "0xA4B0BC")]
	private Vector3 MeanValue(Vector3[] values)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0xA4B170", Offset = "0xA4B170", VA = "0xA4B170")]
	private void OnAutoHoldChanged(bool isActive)
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0xA4B17C", Offset = "0xA4B17C", VA = "0xA4B17C")]
	public CookoutAvatarHand()
	{
	}
}
[Token(Token = "0x2000142")]
public sealed class CookoutAvatarHead : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera cam;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioListener audioListener;

	[Token(Token = "0x600087B")]
	[Address(RVA = "0xA4BD24", Offset = "0xA4BD24", VA = "0xA4BD24")]
	public CookoutAvatarHead()
	{
	}
}
[Token(Token = "0x2000143")]
public class GazeTarget : OvrAvatarGazeTarget
{
	[Token(Token = "0x600087C")]
	[Address(RVA = "0xA4BD2C", Offset = "0xA4BD2C", VA = "0xA4BD2C")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x2000144")]
public sealed class OvrAvatarShader
{
	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Shader EyeLens;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Shader ControllerShader;

	[Token(Token = "0x600087D")]
	[Address(RVA = "0xA4BD34", Offset = "0xA4BD34", VA = "0xA4BD34")]
	public OvrAvatarShader()
	{
	}
}
[Token(Token = "0x2000145")]
public class OculusAvatarSettings : ScriptableObject
{
	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatarShader ovrAvatarShader;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OculusAvatarSettings instance;

	[Token(Token = "0x600087E")]
	[Address(RVA = "0xA4BD3C", Offset = "0xA4BD3C", VA = "0xA4BD3C")]
	public static OculusAvatarSettings Instance()
	{
		return null;
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0xA4BE08", Offset = "0xA4BE08", VA = "0xA4BE08")]
	public OculusAvatarSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x2000146")]
[CreateAssetMenu(fileName = "newUnlockableAvatarCustomization", menuName = "Avatars/Unlockable Avatar Customization")]
public class UnlockableAvatarCustomizationData : ScriptableObject
{
	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AvatarCustomizationUnlockCondition unlockCondition;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool isHat;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public AvatarHatType hatType;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool isHead;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	public CookoutAvatarVisualType avatarVisualType;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int headMaterialIndex;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool isBody;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public AvatarBodyType bodyType;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool isHandMaterial;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
	public AvatarHandMaterial handMaterial;

	[Token(Token = "0x6000880")]
	[Address(RVA = "0xA4BE10", Offset = "0xA4BE10", VA = "0xA4BE10")]
	public UnlockableAvatarCustomizationData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000147")]
[CreateAssetMenu(fileName = "NewUnlockableAvatarCustomizationList", menuName = "Avatars/Unlockable Avatar Customization List")]
public class UnlockableAvatarCustomizationList : ScriptableObject
{
	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<UnlockableAvatarCustomizationData> unlockableAvatarCustomizationDataList;

	[Token(Token = "0x6000881")]
	[Address(RVA = "0xA4BE18", Offset = "0xA4BE18", VA = "0xA4BE18")]
	public UnlockableAvatarCustomizationList()
	{
	}
}
[Token(Token = "0x2000148")]
public class CastleFountain : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float speed;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Renderer fountainArc;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float textureOffset;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MaterialPropertyBlock propertyBlock;

	[Token(Token = "0x40008DC")]
	private const string propertyTextureOffset = "_TextureOffset";

	[Token(Token = "0x6000882")]
	[Address(RVA = "0xA4BE20", Offset = "0xA4BE20", VA = "0xA4BE20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0xA4BE80", Offset = "0xA4BE80", VA = "0xA4BE80")]
	private void Update()
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0xA4BF24", Offset = "0xA4BF24", VA = "0xA4BF24")]
	public CastleFountain()
	{
	}
}
[Token(Token = "0x2000149")]
public class CondimentCollision : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private IngredientType condimentType;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[Tooltip("Add a reference to a Condiment Splotches prefab in the scene here. Make sure its position is 0,0,0")]
	private CondimentSplotches roomSplotches;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PhotonView bottleView;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem squirts;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color color;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<ParticleCollisionEvent> collisionEvents;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private uint collisionCounter;

	[Token(Token = "0x6000885")]
	[Address(RVA = "0xA4BF2C", Offset = "0xA4BF2C", VA = "0xA4BF2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0xA4C030", Offset = "0xA4C030", VA = "0xA4C030")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0xA4CA20", Offset = "0xA4CA20", VA = "0xA4CA20")]
	public CondimentCollision()
	{
	}
}
[Token(Token = "0x200014A")]
public class Condiments : NetworkedBehaviour, IPunObservable
{
	[Token(Token = "0x40008E4")]
	private const float particleCooldown = 0.1f;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Color bottleColor;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private MeshRenderer bottleRenderer;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ParticleSystem[] squirtParticles;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CookingNetworkManager networkManager;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Grabbable grabbable;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject myCollider;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isSqueezedLocally;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool isSqueezedRemote;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float particleTimer;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PlaySoundResult squeezeNoise;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private CookoutHandedness lastGrabbedBy;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int squirtParticleIndex;

	[Token(Token = "0x40008F1")]
	private const int notHeldLayer = 0;

	[Token(Token = "0x40008F2")]
	private const int heldItemLayer = 10;

	[Token(Token = "0x17000125")]
	private bool IsSqueezed
	{
		[Token(Token = "0x6000888")]
		[Address(RVA = "0xA4CA28", Offset = "0xA4CA28", VA = "0xA4CA28")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0xA4CA48", Offset = "0xA4CA48", VA = "0xA4CA48")]
	private void Start()
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0xA4CE5C", Offset = "0xA4CE5C", VA = "0xA4CE5C")]
	private void OnGrabBegin()
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0xA4D1A4", Offset = "0xA4D1A4", VA = "0xA4D1A4")]
	private void OnGrabEnd()
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0xA4D1AC", Offset = "0xA4D1AC", VA = "0xA4D1AC")]
	private void OnRemoteGrabEnd()
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0xA4D2A4", Offset = "0xA4D2A4", VA = "0xA4D2A4")]
	private void Update()
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0xA4D3C4", Offset = "0xA4D3C4", VA = "0xA4D3C4", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0xA4CEF8", Offset = "0xA4CEF8", VA = "0xA4CEF8")]
	private void StopSoundAndHaptics(CookoutHandedness handedness)
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0xA4D208", Offset = "0xA4D208", VA = "0xA4D208")]
	private void StopSound()
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0xA4D004", Offset = "0xA4D004", VA = "0xA4D004")]
	private void StartSqueeze()
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0xA4D618", Offset = "0xA4D618", VA = "0xA4D618")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0xA4D7A4", Offset = "0xA4D7A4", VA = "0xA4D7A4")]
	public Condiments()
	{
	}
}
[Token(Token = "0x200014B")]
public class CondimentSlice : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Mesh[] sliceVariations;

	[Token(Token = "0x6000894")]
	[Address(RVA = "0xA4D7FC", Offset = "0xA4D7FC", VA = "0xA4D7FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0xA4D800", Offset = "0xA4D800", VA = "0xA4D800")]
	public Mesh GetRandomMesh()
	{
		return null;
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0xA4D840", Offset = "0xA4D840", VA = "0xA4D840")]
	public CondimentSlice()
	{
	}
}
[Token(Token = "0x200014C")]
public class CondimentSplotches : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem splotches;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool canAdd;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool clearOnEnvironmentChange;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private ParticleSystem.EmitParams emitParams;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private EnvironmentLoader environmentLoader;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private CookingRound cookingRound;

	[Token(Token = "0x6000897")]
	[Address(RVA = "0xA4D848", Offset = "0xA4D848", VA = "0xA4D848")]
	private void Start()
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0xA4C300", Offset = "0xA4C300", VA = "0xA4C300")]
	public void AddParticles(Vector3 position, Color color)
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0xA4C914", Offset = "0xA4C914", VA = "0xA4C914")]
	public void AddParticlesSplashOnly(Vector3 position, Color color)
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0xA4DD90", Offset = "0xA4DD90", VA = "0xA4DD90")]
	private void ClearAllParticles()
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0xA4DDAC", Offset = "0xA4DDAC", VA = "0xA4DDAC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0xA4E074", Offset = "0xA4E074", VA = "0xA4E074")]
	public CondimentSplotches()
	{
	}
}
[Token(Token = "0x200014D")]
public class CondimentStainOnConveyorBelt : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem stains;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ConveyorBelt conveyorBelt;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 pivot;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float beltRotationLast;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<ParticleSystem.Particle> particlesOnBelt;

	[Token(Token = "0x600089D")]
	[Address(RVA = "0xA4E0E4", Offset = "0xA4E0E4", VA = "0xA4E0E4")]
	private void Start()
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0xA4E248", Offset = "0xA4E248", VA = "0xA4E248")]
	private void OnParticleTrigger()
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0xA4E438", Offset = "0xA4E438", VA = "0xA4E438")]
	public CondimentStainOnConveyorBelt()
	{
	}
}
[Token(Token = "0x200014E")]
public class PlateCondiment : NetworkedBehaviour, IPunObservable
{
	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public CondimentSplotches condimentSplotches;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ParticleSystem splotches;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private PlateVisuals plateVisuals;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<IngredientType, int> condimentRateIndex;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private byte[] condimentRate;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int condimentTextRate;

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0xA4E440", Offset = "0xA4E440", VA = "0xA4E440")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0xA4C758", Offset = "0xA4C758", VA = "0xA4C758")]
	public void AddCondiment(int rate, IngredientType type)
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0xA4E548", Offset = "0xA4E548", VA = "0xA4E548")]
	public void ResetPlateCondiment()
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0xA4E64C", Offset = "0xA4E64C", VA = "0xA4E64C")]
	public void DisablePlateCondiment()
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0xA4E68C", Offset = "0xA4E68C", VA = "0xA4E68C")]
	[PunRPC]
	private void AddCondimentRPC(byte rate, byte ingredientType)
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0xA4EC2C", Offset = "0xA4EC2C", VA = "0xA4EC2C")]
	[PunRPC]
	private void CondimentAddedProgressFeedbackRPC(byte newRate, byte ingredientType)
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0xA4ECF0", Offset = "0xA4ECF0", VA = "0xA4ECF0")]
	[PunRPC]
	private void RemovePlateSplotchesRPC(bool completeReset)
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0xA4ECF8", Offset = "0xA4ECF8", VA = "0xA4ECF8")]
	public void ResetLocalSplotches(bool completeReset)
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0xA4ED94", Offset = "0xA4ED94", VA = "0xA4ED94", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0xA4EE34", Offset = "0xA4EE34", VA = "0xA4EE34")]
	public PlateCondiment()
	{
	}
}
[Token(Token = "0x200014F")]
public class Consumable : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ConsumableData data;

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0xA4EE3C", Offset = "0xA4EE3C", VA = "0xA4EE3C")]
	private void Start()
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0xA4EF78", Offset = "0xA4EF78", VA = "0xA4EF78")]
	public Consumable()
	{
	}
}
[Token(Token = "0x2000150")]
public class ConsumableBeingHeld : SingleInstanceBehavior<ConsumableBeingHeld>
{
	[Token(Token = "0x2000151")]
	public delegate void ConsumableOnGrab(ConsumableType consumableType);

	[Token(Token = "0x2000152")]
	public delegate void ConsumableOnRelease(ConsumableType consumableType);

	[Token(Token = "0x4000907")]
	private const int noConsumableHeld = -1;

	[Token(Token = "0x17000126")]
	public int[] HeldCondiment
	{
		[Token(Token = "0x60008AC")]
		[Address(RVA = "0xA4EF80", Offset = "0xA4EF80", VA = "0xA4EF80")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60008AD")]
		[Address(RVA = "0xA4EF88", Offset = "0xA4EF88", VA = "0xA4EF88")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event ConsumableOnGrab onConsumableGrabbed
	{
		[Token(Token = "0x60008AE")]
		[Address(RVA = "0xA4EF90", Offset = "0xA4EF90", VA = "0xA4EF90")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60008AF")]
		[Address(RVA = "0xA4F02C", Offset = "0xA4F02C", VA = "0xA4F02C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event ConsumableOnRelease onConsumableReleased
	{
		[Token(Token = "0x60008B0")]
		[Address(RVA = "0xA4F0C8", Offset = "0xA4F0C8", VA = "0xA4F0C8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60008B1")]
		[Address(RVA = "0xA4F164", Offset = "0xA4F164", VA = "0xA4F164")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0xA4F200", Offset = "0xA4F200", VA = "0xA4F200", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0xA4F2A0", Offset = "0xA4F2A0", VA = "0xA4F2A0")]
	public void SetHeldConsumable(ConsumableType type, CookoutHandedness hand)
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0xA4F2F4", Offset = "0xA4F2F4", VA = "0xA4F2F4")]
	public void RemoveHeldConsumable(CookoutHandedness hand)
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0xA4F384", Offset = "0xA4F384", VA = "0xA4F384")]
	public bool PotionTypeIsHeld(ConsumableType type)
	{
		return default(bool);
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0xA4F3E0", Offset = "0xA4F3E0", VA = "0xA4F3E0")]
	public ConsumableBeingHeld()
	{
	}
}
[Token(Token = "0x2000153")]
public class ConsumableBottle : NetworkedBehaviour, IPunObservable
{
	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject myCollider;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform lidAnchor;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Collider lidCollider;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material bottleMaterial;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Material ghostMaterial;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Renderer bottleRenderer;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private MeshFilter bottleMeshFilter;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private ParticleSystem consumableLiquid;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Mesh meshNoLid;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float angleThreshold;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Grabbable bottleGrabbable;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private CookingRound cookingRound;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Consumable consumable;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private ConsumableBeingHeld consumableBeingHeld;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PlaySoundResult pourNoise;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private ConsumableType consumableType;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private CookoutHandedness handedness;

	[Token(Token = "0x400091B")]
	private const int notHeldLayer = 0;

	[Token(Token = "0x400091C")]
	private const int heldItemLayer = 11;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	public bool lidOn;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9E")]
	private bool facingWorldDown;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9F")]
	private bool isGhost;

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0xA4F71C", Offset = "0xA4F71C", VA = "0xA4F71C")]
	private void Start()
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0xA4FE38", Offset = "0xA4FE38", VA = "0xA4FE38")]
	private void OnGrabBegin()
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0xA50038", Offset = "0xA50038", VA = "0xA50038")]
	private void OnGrabEnd()
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0xA4FEB8", Offset = "0xA4FEB8", VA = "0xA4FEB8")]
	private void UncorkLid()
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0xA5006C", Offset = "0xA5006C", VA = "0xA5006C")]
	private void DisableBottle()
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0xA50074", Offset = "0xA50074", VA = "0xA50074")]
	private void EnableBottle()
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0xA4FD80", Offset = "0xA4FD80", VA = "0xA4FD80")]
	private void SetEnabled(bool isEnabled)
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0xA50168", Offset = "0xA50168", VA = "0xA50168")]
	[PunRPC]
	private void UncorkPotionRPC()
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0xA50278", Offset = "0xA50278", VA = "0xA50278")]
	private void Update()
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0xA5048C", Offset = "0xA5048C", VA = "0xA5048C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0xA507F0", Offset = "0xA507F0", VA = "0xA507F0")]
	[PunRPC]
	private void PlayConsumableParticleEffectRPC(Vector3 position, Quaternion rotation, int consumableType)
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0xA509FC", Offset = "0xA509FC", VA = "0xA509FC", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0xA50B10", Offset = "0xA50B10", VA = "0xA50B10")]
	public ConsumableBottle()
	{
	}
}
[Token(Token = "0x2000154")]
public abstract class ConsumableEffect : NetworkedBehaviour
{
	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ConsumableLiquid liquid;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Consumable consumableData;

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0xA50B2C", Offset = "0xA50B2C", VA = "0xA50B2C")]
	private void Start()
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0xA50D40", Offset = "0xA50D40", VA = "0xA50D40", Slot = "4")]
	protected virtual void ApplyEffect(GameObject collidedWith, Vector3 collisionPoint)
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0xA51194", Offset = "0xA51194", VA = "0xA51194")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0xA51250", Offset = "0xA51250", VA = "0xA51250")]
	protected ConsumableEffect()
	{
	}
}
[Token(Token = "0x2000155")]
public class ConsumableLiquid : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000156")]
	public delegate void LiquidActivated(GameObject collidedWith, Vector3 collisionPoint);

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem liquidParticles;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<ParticleCollisionEvent> collisionEvents;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PhotonView bottleView;

	[Token(Token = "0x14000008")]
	public event LiquidActivated OnConsumableLiquidCollision
	{
		[Token(Token = "0x60008D0")]
		[Address(RVA = "0xA50CA4", Offset = "0xA50CA4", VA = "0xA50CA4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60008D1")]
		[Address(RVA = "0xA510F8", Offset = "0xA510F8", VA = "0xA510F8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0xA51258", Offset = "0xA51258", VA = "0xA51258")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0xA512E4", Offset = "0xA512E4", VA = "0xA512E4")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0xA513B8", Offset = "0xA513B8", VA = "0xA513B8")]
	public ConsumableLiquid()
	{
	}
}
[Token(Token = "0x2000157")]
public class ConsumableSpawner : SingleInstanceBehavior<ConsumableSpawner>
{
	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[@NotNull]
	private Transform[] spawnPoints;

	[NonSerialized]
	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] spawnedConsumables;

	[NonSerialized]
	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int[] spawnedConsumableType;

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0xA514EC", Offset = "0xA514EC", VA = "0xA514EC")]
	public void SpawnSelectedConsumables(int[] selectedConsumables, int playerPositionIndex)
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0xA51904", Offset = "0xA51904", VA = "0xA51904")]
	public Transform GetConsumableSpawnPoint(int seat, int slot)
	{
		return null;
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0xA51940", Offset = "0xA51940", VA = "0xA51940")]
	public void OnValidate()
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0xA51988", Offset = "0xA51988", VA = "0xA51988")]
	public ConsumableSpawner()
	{
	}
}
[Token(Token = "0x2000158")]
public class HeartRecovery : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LifeCounter lifeCounter;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MagicalDrops drops;

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0xA51A44", Offset = "0xA51A44", VA = "0xA51A44")]
	private void Start()
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0xA51D04", Offset = "0xA51D04", VA = "0xA51D04")]
	private void RecoverHeart(GameObject collidedWith)
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0xA52014", Offset = "0xA52014", VA = "0xA52014")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0xA5217C", Offset = "0xA5217C", VA = "0xA5217C")]
	public HeartRecovery()
	{
	}
}
[Token(Token = "0x2000159")]
public interface IConsumableTarget
{
	[Token(Token = "0x17000127")]
	UseConsumableHere UseConsumableHere
	{
		[Token(Token = "0x60008E1")]
		get;
		[Token(Token = "0x60008E2")]
		set;
	}

	[Token(Token = "0x17000128")]
	bool ReactsToConsumables
	{
		[Token(Token = "0x60008E3")]
		get;
	}
}
[Token(Token = "0x200015A")]
public class InstantGrilled : ConsumableEffect
{
	[Token(Token = "0x60008E4")]
	[Address(RVA = "0xA52184", Offset = "0xA52184", VA = "0xA52184", Slot = "4")]
	protected override void ApplyEffect(GameObject collidedWith, Vector3 collisionPoint)
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0xA52480", Offset = "0xA52480", VA = "0xA52480")]
	public InstantGrilled()
	{
	}
}
[Token(Token = "0x200015B")]
public class InstantSandwich : ConsumableEffect
{
	[Token(Token = "0x60008E6")]
	[Address(RVA = "0xA52488", Offset = "0xA52488", VA = "0xA52488", Slot = "4")]
	protected override void ApplyEffect(GameObject collidedWith, Vector3 collisionPoint)
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0xA527B0", Offset = "0xA527B0", VA = "0xA527B0")]
	public InstantSandwich()
	{
	}
}
[Token(Token = "0x200015C")]
public class InstantWash : ConsumableEffect
{
	[Token(Token = "0x60008E8")]
	[Address(RVA = "0xA527B8", Offset = "0xA527B8", VA = "0xA527B8", Slot = "4")]
	protected override void ApplyEffect(GameObject collidedWith, Vector3 collisionPoint)
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0xA52B8C", Offset = "0xA52B8C", VA = "0xA52B8C")]
	public InstantWash()
	{
	}
}
[Token(Token = "0x200015D")]
public class MagicalDrops : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200015E")]
	public delegate void MagicalDropActivated(GameObject collidedWith);

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool collidesWithAllColliders;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[SerializeField]
	private bool collidesWithTriggers;

	[Token(Token = "0x400092F")]
	private const int heldItemLayer = 10;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CookingRound cookingRound;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float despawnTimer;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float despawnTime;

	[Token(Token = "0x17000129")]
	public PhotonView view
	{
		[Token(Token = "0x60008EC")]
		[Address(RVA = "0xA52B94", Offset = "0xA52B94", VA = "0xA52B94")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60008ED")]
		[Address(RVA = "0xA52B9C", Offset = "0xA52B9C", VA = "0xA52B9C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event MagicalDropActivated OnMagicalDropActivated
	{
		[Token(Token = "0x60008EA")]
		[Address(RVA = "0xA51C68", Offset = "0xA51C68", VA = "0xA51C68")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60008EB")]
		[Address(RVA = "0xA520E0", Offset = "0xA520E0", VA = "0xA520E0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0xA52BA4", Offset = "0xA52BA4", VA = "0xA52BA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0xA52C0C", Offset = "0xA52C0C", VA = "0xA52C0C")]
	private void Start()
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0xA52CD4", Offset = "0xA52CD4", VA = "0xA52CD4")]
	private void Update()
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0xA52D38", Offset = "0xA52D38", VA = "0xA52D38")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0xA52DC4", Offset = "0xA52DC4", VA = "0xA52DC4")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0xA52EA0", Offset = "0xA52EA0", VA = "0xA52EA0")]
	public MagicalDrops()
	{
	}
}
[Token(Token = "0x200015F")]
public class MultiTimeStopper : ConsumableEffect
{
	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float timeStopDuration;

	[Token(Token = "0x4000934")]
	private const string tableColliderName = "ConveyorBeltCenter";

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0xA52EF4", Offset = "0xA52EF4", VA = "0xA52EF4", Slot = "4")]
	protected override void ApplyEffect(GameObject collidedWith, Vector3 collisionPoint)
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0xA53268", Offset = "0xA53268", VA = "0xA53268")]
	public MultiTimeStopper()
	{
	}
}
[Token(Token = "0x2000160")]
public class SandwichNeatnessFixer : ConsumableEffect
{
	[Token(Token = "0x60008FA")]
	[Address(RVA = "0xA53278", Offset = "0xA53278", VA = "0xA53278", Slot = "4")]
	protected override void ApplyEffect(GameObject collidedWith, Vector3 collisionPoint)
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0xA535B4", Offset = "0xA535B4", VA = "0xA535B4")]
	public SandwichNeatnessFixer()
	{
	}
}
[Token(Token = "0x2000161")]
public class SuperSharpness : ConsumableEffect
{
	[Token(Token = "0x4000935")]
	private const int cleaverLayer = 14;

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0xA535BC", Offset = "0xA535BC", VA = "0xA535BC", Slot = "4")]
	protected override void ApplyEffect(GameObject collidedWith, Vector3 collisionPoint)
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0xA538AC", Offset = "0xA538AC", VA = "0xA538AC")]
	public SuperSharpness()
	{
	}
}
[Token(Token = "0x2000162")]
public class TimeSlowdownHandler : SingleInstanceNetworkedBehavior<TimeSlowdownHandler>, IPunObservable
{
	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float slowDownTimer;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float stopTimer;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MusicPitcher musicPitcher;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OrderMonitor orderMonitor;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CookingGameState gameState;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private FinalLevelHandler finalLevelHandler;

	[Token(Token = "0x1700012A")]
	public bool IsSlowedDown
	{
		[Token(Token = "0x60008FE")]
		[Address(RVA = "0xA538B4", Offset = "0xA538B4", VA = "0xA538B4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700012B")]
	public bool IsStopped
	{
		[Token(Token = "0x60008FF")]
		[Address(RVA = "0xA538C4", Offset = "0xA538C4", VA = "0xA538C4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700012C")]
	public bool RoundTimerDisabled
	{
		[Token(Token = "0x6000900")]
		[Address(RVA = "0xA538F0", Offset = "0xA538F0", VA = "0xA538F0")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000901")]
		[Address(RVA = "0xA538F8", Offset = "0xA538F8", VA = "0xA538F8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700012D")]
	public bool singlePlayerPauseStop
	{
		[Token(Token = "0x6000902")]
		[Address(RVA = "0xA53904", Offset = "0xA53904", VA = "0xA53904")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000903")]
		[Address(RVA = "0xA5390C", Offset = "0xA5390C", VA = "0xA5390C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700012E")]
	public float SlowdownTimer
	{
		[Token(Token = "0x6000904")]
		[Address(RVA = "0xA53918", Offset = "0xA53918", VA = "0xA53918")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000905")]
		[Address(RVA = "0xA53920", Offset = "0xA53920", VA = "0xA53920")]
		private set
		{
		}
	}

	[Token(Token = "0x1700012F")]
	public float StopTimer
	{
		[Token(Token = "0x6000906")]
		[Address(RVA = "0xA53A00", Offset = "0xA53A00", VA = "0xA53A00")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000907")]
		[Address(RVA = "0xA53A08", Offset = "0xA53A08", VA = "0xA53A08")]
		private set
		{
		}
	}

	[Token(Token = "0x17000130")]
	public float SlowDownFactor
	{
		[Token(Token = "0x6000908")]
		[Address(RVA = "0xA53A48", Offset = "0xA53A48", VA = "0xA53A48")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0xA53A88", Offset = "0xA53A88", VA = "0xA53A88", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0xA53AE8", Offset = "0xA53AE8", VA = "0xA53AE8")]
	private void Start()
	{
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0xA53F3C", Offset = "0xA53F3C", VA = "0xA53F3C")]
	private void Update()
	{
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0xA541D4", Offset = "0xA541D4", VA = "0xA541D4")]
	private void OnGameStateChanged(GameState oldState, GameState newState)
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0xA5424C", Offset = "0xA5424C", VA = "0xA5424C")]
	[PunRPC]
	private void SlowDownTimeRPC(float duration)
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0xA542B4", Offset = "0xA542B4", VA = "0xA542B4")]
	[PunRPC]
	private void StopTimeRPC(float duration)
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0xA54310", Offset = "0xA54310", VA = "0xA54310")]
	public void SetRoundTimerDisabled(bool isStopped)
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0xA53944", Offset = "0xA53944", VA = "0xA53944")]
	private void SlowDownTimeEffect(bool pitchMusic)
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0xA54178", Offset = "0xA54178", VA = "0xA54178")]
	private void RestoreTimeFlow()
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0xA540F8", Offset = "0xA540F8", VA = "0xA540F8")]
	private void OnTimeStopEnd()
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0xA5431C", Offset = "0xA5431C", VA = "0xA5431C", Slot = "6")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0xA5455C", Offset = "0xA5455C", VA = "0xA5455C", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0xA546D8", Offset = "0xA546D8", VA = "0xA546D8")]
	public TimeSlowdownHandler()
	{
	}
}
[Token(Token = "0x2000163")]
public class TofuBottle : ConsumableEffect
{
	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private IngredientSlice OmniIngredientPrefab;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private int OmniIngredientCount;

	[Token(Token = "0x6000916")]
	[Address(RVA = "0xA54744", Offset = "0xA54744", VA = "0xA54744")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0xA54748", Offset = "0xA54748", VA = "0xA54748", Slot = "4")]
	protected override void ApplyEffect(GameObject collidedWith, Vector3 collisionPoint)
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0xA54C80", Offset = "0xA54C80", VA = "0xA54C80")]
	public TofuBottle()
	{
	}
}
[Token(Token = "0x2000164")]
public class ConsumableMenu : SingleInstanceBehavior<ConsumableMenu>
{
	[Token(Token = "0x4000940")]
	public const int noConsumableSelected = -1;

	[Token(Token = "0x4000941")]
	public const int maxSelectedCount = 2;

	[Token(Token = "0x4000942")]
	private const string equippedLabelPath = "EquippedLabel";

	[Token(Token = "0x4000943")]
	private const string consumableStockCountPath = "Count";

	[Token(Token = "0x4000944")]
	private const string potionFreeSampleString = "potion_free_sample";

	[Token(Token = "0x4000945")]
	private const string propertyMainTex = "_MainTex";

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int consumableTypeCount;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly ConsumableType[] consumableOrder;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Game Objects/Transforms")]
	[SerializeField]
	private GameObject menuRoot;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform gridRoot;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform coinPouch;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject lockpad;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Buttons")]
	[SerializeField]
	private PokeButton equipButton;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private PokeButton cancelButton;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private PokeButton[] slotButtons;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[Header("Equip Particles")]
	private ParticleSystem equipTrailParticles;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private ParticleSystem equipParticles;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject equipTrailTarget;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private float equipTrailTargetHeightOffset;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private float potionTwinkleDelay;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Header("Other")]
	[SerializeField]
	private Sprite consumableLockedIcon;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Sprite noConsumableSelectedIcon;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private SpriteRenderer SelectedConsumableIcon;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private TextMeshPro SelectedConsumableHeader;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private TextMeshPro SelectedConsumableDescription;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private TextMeshPro SelectedConsumableCost;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private float buttonClickCooldown;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Texture inactiveTexture;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private Texture activeTexture;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private ConsumableRegistry registry;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ConsumableSpawner consumableSpawner;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private SaveManager saveManager;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private PreRoundUI preRoundUI;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int selectedSlot;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private int[] loadoutItems;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool[] loadoutPaidWithCoupon;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private int[] consumableCost;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private string[] consumableCostString;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private GameObject[] equippedLabel;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private TextMeshPro[] consumableStockCounter;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private SpriteRenderer[] slotButtonIconRenders;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private MeshRenderer[] slotButtonRenders;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private SpriteRenderer[] consumableButtonIconRenderers;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private MeshRenderer[] consumableButtonRenderers;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private PokeButton[] consumableButtons;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Dictionary<ConsumableType, int> consumablePlacement;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private int selectedConsumable;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private float buttonClickCooldownTimer;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private ParticleSystem[] equipParticleSystems;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private MaterialPropertyBlock propertyBlock;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private CoinCount coinCount;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Locale locale;

	[Token(Token = "0x17000131")]
	private int CoinBalance
	{
		[Token(Token = "0x6000919")]
		[Address(RVA = "0xA54C90", Offset = "0xA54C90", VA = "0xA54C90")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000132")]
	public Transform CoinPouchTransform
	{
		[Token(Token = "0x600091A")]
		[Address(RVA = "0xA54CAC", Offset = "0xA54CAC", VA = "0xA54CAC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0xA54CB4", Offset = "0xA54CB4", VA = "0xA54CB4", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0xA551FC", Offset = "0xA551FC", VA = "0xA551FC")]
	private void Start()
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0xA55E28", Offset = "0xA55E28", VA = "0xA55E28")]
	public void OnLocalPlayerAssignedPosition(int position)
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0xA566B8", Offset = "0xA566B8", VA = "0xA566B8")]
	private void Update()
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0xA56708", Offset = "0xA56708", VA = "0xA56708")]
	public void SetButtonsEnabled(bool isEnabled)
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0xA567A4", Offset = "0xA567A4", VA = "0xA567A4")]
	private void OnSelectConsumable(ConsumableData data)
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0xA569BC", Offset = "0xA569BC", VA = "0xA569BC")]
	private void ResetSelectedConsumable()
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0xA55DCC", Offset = "0xA55DCC", VA = "0xA55DCC")]
	private void ToggleMenuPage()
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0xA56D64", Offset = "0xA56D64", VA = "0xA56D64")]
	private void OnSlotClicked(int slotID)
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0xA56D8C", Offset = "0xA56D8C", VA = "0xA56D8C")]
	private void OnConsumableCountChanged(ConsumableType type, int count)
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0xA55AD4", Offset = "0xA55AD4", VA = "0xA55AD4")]
	private void UpdateConsumableCouponCounter(ConsumableType type, int count)
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0xA56D90", Offset = "0xA56D90", VA = "0xA56D90")]
	private void OnConsumableUnlocked(ConsumableType type, bool isUnlocked)
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0xA56E48", Offset = "0xA56E48", VA = "0xA56E48")]
	public bool BuyPotion(int loadoutSlot)
	{
		return default(bool);
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0xA55EB8", Offset = "0xA55EB8", VA = "0xA55EB8")]
	private void AddToLoadout(int consumableType, int slot, int playerPositionIndex)
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0xA57268", Offset = "0xA57268", VA = "0xA57268")]
	public void SetConsumableCount(ConsumableType type, int newCount)
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0xA5728C", Offset = "0xA5728C", VA = "0xA5728C")]
	private void ClearLoadoutSlot(int slotIndex)
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0xA574D0", Offset = "0xA574D0", VA = "0xA574D0")]
	public void OnPotionSelectionActivated()
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0xA574FC", Offset = "0xA574FC", VA = "0xA574FC")]
	public void OnPreRoundUIActivated()
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0xA56C54", Offset = "0xA56C54", VA = "0xA56C54")]
	private void SetPotionButtonActive(int potionID, bool isActive)
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0xA55CF4", Offset = "0xA55CF4", VA = "0xA55CF4")]
	private void SetSlotButtonActive(int slotID, bool isActive)
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0xA51078", Offset = "0xA51078", VA = "0xA51078")]
	public void OnPotionApplied(ConsumableType type)
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0xA57564", Offset = "0xA57564", VA = "0xA57564")]
	public int[] GetLoadout()
	{
		return null;
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0xA5756C", Offset = "0xA5756C", VA = "0xA5756C")]
	public void WipeConsumableStock()
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0xA575F8", Offset = "0xA575F8", VA = "0xA575F8", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0xA57758", Offset = "0xA57758", VA = "0xA57758")]
	public ConsumableMenu()
	{
	}
}
[Token(Token = "0x2000168")]
public enum ConsumableType
{
	[Token(Token = "0x400097B")]
	InstantWash,
	[Token(Token = "0x400097C")]
	InstantGrill,
	[Token(Token = "0x400097D")]
	InstantSandwich,
	[Token(Token = "0x400097E")]
	MultiTimeStopper,
	[Token(Token = "0x400097F")]
	NeatnessFixer,
	[Token(Token = "0x4000980")]
	Tofu,
	[Token(Token = "0x4000981")]
	SuperSharpness,
	[Token(Token = "0x4000982")]
	BigTofu,
	[Token(Token = "0x4000983")]
	BigTimeStopper
}
[Serializable]
[Token(Token = "0x2000169")]
public struct ConsumableData
{
	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ConsumableType type;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public GameObject prefab;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string nameID;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite icon;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject bubbleIcon;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject potionMeshPrefab;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int price;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public CookoutCustomHandPose grabPose;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 grabPosition;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 grabRotation;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color equipParticleColor;

	[Token(Token = "0x400098F")]
	private const string descriptionIDPostfix = "_desc";

	[Token(Token = "0x17000133")]
	public string LocalizedNameSingular
	{
		[Token(Token = "0x600093D")]
		[Address(RVA = "0xA56AF8", Offset = "0xA56AF8", VA = "0xA56AF8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000134")]
	public string Description
	{
		[Token(Token = "0x600093E")]
		[Address(RVA = "0xA56BAC", Offset = "0xA56BAC", VA = "0xA56BAC")]
		get
		{
			return null;
		}
	}
}
[Token(Token = "0x200016A")]
public class ConsumableRegistry : SingleInstanceBehavior<ConsumableRegistry>
{
	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Consumable[] consumables;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ConsumableType, ConsumableData> dataDict;

	[Token(Token = "0x600093F")]
	[Address(RVA = "0xA57C38", Offset = "0xA57C38", VA = "0xA57C38", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0xA559B8", Offset = "0xA559B8", VA = "0xA559B8")]
	public ConsumableData GetConsumableData(ConsumableType consumableType)
	{
		return default(ConsumableData);
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0xA55BE8", Offset = "0xA55BE8", VA = "0xA55BE8")]
	public Sprite GetIcon(ConsumableType consumableType)
	{
		return null;
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0xA573C8", Offset = "0xA573C8", VA = "0xA573C8")]
	public Color GetParticleColor(ConsumableType consumableType)
	{
		return default(Color);
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0xA51800", Offset = "0xA51800", VA = "0xA51800")]
	public GameObject GetPrefab(ConsumableType consumableType)
	{
		return null;
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0xA57DC8", Offset = "0xA57DC8", VA = "0xA57DC8")]
	public ConsumableRegistry()
	{
	}
}
[Token(Token = "0x200016B")]
public class UseConsumableHere : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ParticleSystem usePotionHereParticles;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ConsumableType consumableToUse;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool hasExtraRequirements;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IConsumableTarget target;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ConsumableBeingHeld consumableBeingHeld;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CookingRound cookingRound;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CookingGameState gameState;

	[Token(Token = "0x17000135")]
	private bool ReactsToConsumable
	{
		[Token(Token = "0x6000945")]
		[Address(RVA = "0xA57E84", Offset = "0xA57E84", VA = "0xA57E84")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0xA57F34", Offset = "0xA57F34", VA = "0xA57F34")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0xA57F9C", Offset = "0xA57F9C", VA = "0xA57F9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0xA58334", Offset = "0xA58334", VA = "0xA58334")]
	private void OnConsumableGrabbed(ConsumableType type)
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0xA5839C", Offset = "0xA5839C", VA = "0xA5839C")]
	private void OnConsumableReleased(ConsumableType type)
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0xA583D0", Offset = "0xA583D0", VA = "0xA583D0")]
	public void SetConsumableReacts(bool isActive)
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0xA58628", Offset = "0xA58628", VA = "0xA58628")]
	private void OnRoundEnd()
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0xA58648", Offset = "0xA58648", VA = "0xA58648")]
	private void OnRoundStart()
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0xA586A4", Offset = "0xA586A4", VA = "0xA586A4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0xA588AC", Offset = "0xA588AC", VA = "0xA588AC")]
	public UseConsumableHere()
	{
	}
}
[Token(Token = "0x200016C")]
public class CookingCup : SingleInstanceNetworkedBehavior<CookingCup>, IPunObservable
{
	[Token(Token = "0x200016D")]
	public delegate void CupStartHandler();

	[Token(Token = "0x200016E")]
	public delegate void CupStopHandler();

	[Token(Token = "0x200016F")]
	public enum State
	{
		[Token(Token = "0x40009AE")]
		Inactive,
		[Token(Token = "0x40009AF")]
		Running,
		[Token(Token = "0x40009B0")]
		Failed,
		[Token(Token = "0x40009B1")]
		DisplayFinalResults
	}

	[Token(Token = "0x2000170")]
	[CompilerGenerated]
	private sealed class <StartCup>d__58 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CookingCup <>4__this;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int cupIndex;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CupData <cupData>5__2;

		[Token(Token = "0x17000141")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600097F")]
			[Address(RVA = "0xA5AF50", Offset = "0xA5AF50", VA = "0xA5AF50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000142")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000981")]
			[Address(RVA = "0xA5AF98", Offset = "0xA5AF98", VA = "0xA5AF98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600097C")]
		[Address(RVA = "0xA59230", Offset = "0xA59230", VA = "0xA59230")]
		[DebuggerHidden]
		public <StartCup>d__58(int <>1__state)
		{
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0xA5ACC4", Offset = "0xA5ACC4", VA = "0xA5ACC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600097E")]
		[Address(RVA = "0xA5ACC8", Offset = "0xA5ACC8", VA = "0xA5ACC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0xA5AF58", Offset = "0xA5AF58", VA = "0xA5AF58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private CupList cupList;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int[] cupStars;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool royalFail;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private CookingRound cookingRound;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private MapProgression mapProgression;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private EnvironmentLoader environmentLoader;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private RewardBubbleSpawner rewardBubbleSpawner;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private CookingGameState gameState;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private CookingGame cookingGame;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private StarGoalsHandler goalsHandler;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private RoundResultDisplayer roundResultDisplayer;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int playerCountAtCupStart;

	[Token(Token = "0x17000136")]
	public CupData[] Cups
	{
		[Token(Token = "0x600094F")]
		[Address(RVA = "0xA588B4", Offset = "0xA588B4", VA = "0xA588B4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000950")]
		[Address(RVA = "0xA588BC", Offset = "0xA588BC", VA = "0xA588BC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000137")]
	public CupData CurrentCup
	{
		[Token(Token = "0x6000951")]
		[Address(RVA = "0xA588C4", Offset = "0xA588C4", VA = "0xA588C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000138")]
	public int CupID
	{
		[Token(Token = "0x6000956")]
		[Address(RVA = "0xA58B68", Offset = "0xA58B68", VA = "0xA58B68")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000957")]
		[Address(RVA = "0xA58B70", Offset = "0xA58B70", VA = "0xA58B70")]
		[CompilerGenerated]
		internal set
		{
		}
	}

	[Token(Token = "0x17000139")]
	public State CupState
	{
		[Token(Token = "0x6000958")]
		[Address(RVA = "0xA58B78", Offset = "0xA58B78", VA = "0xA58B78")]
		[CompilerGenerated]
		get
		{
			return default(State);
		}
		[Token(Token = "0x6000959")]
		[Address(RVA = "0xA58B80", Offset = "0xA58B80", VA = "0xA58B80")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700013A")]
	public int CurrentRound
	{
		[Token(Token = "0x600095A")]
		[Address(RVA = "0xA58B88", Offset = "0xA58B88", VA = "0xA58B88")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600095B")]
		[Address(RVA = "0xA58B90", Offset = "0xA58B90", VA = "0xA58B90")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700013B")]
	public int NumberOfRounds
	{
		[Token(Token = "0x600095C")]
		[Address(RVA = "0xA58B98", Offset = "0xA58B98", VA = "0xA58B98")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600095D")]
		[Address(RVA = "0xA58BA0", Offset = "0xA58BA0", VA = "0xA58BA0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700013C")]
	public int TotalCupStars
	{
		[Token(Token = "0x600095E")]
		[Address(RVA = "0xA58BA8", Offset = "0xA58BA8", VA = "0xA58BA8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700013D")]
	public MapProgression.Rank CupReward
	{
		[Token(Token = "0x600095F")]
		[Address(RVA = "0xA58BB4", Offset = "0xA58BB4", VA = "0xA58BB4")]
		[CompilerGenerated]
		get
		{
			return default(MapProgression.Rank);
		}
		[Token(Token = "0x6000960")]
		[Address(RVA = "0xA58BBC", Offset = "0xA58BBC", VA = "0xA58BBC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700013E")]
	public bool IsRunning
	{
		[Token(Token = "0x6000961")]
		[Address(RVA = "0xA58BC4", Offset = "0xA58BC4", VA = "0xA58BC4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700013F")]
	public bool IsComplete
	{
		[Token(Token = "0x6000962")]
		[Address(RVA = "0xA58BD4", Offset = "0xA58BD4", VA = "0xA58BD4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000140")]
	public bool CurrentCupIsFinalLevel
	{
		[Token(Token = "0x6000963")]
		[Address(RVA = "0xA58BE4", Offset = "0xA58BE4", VA = "0xA58BE4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1400000A")]
	public event CupStartHandler CupStart
	{
		[Token(Token = "0x6000952")]
		[Address(RVA = "0xA588F8", Offset = "0xA588F8", VA = "0xA588F8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000953")]
		[Address(RVA = "0xA58994", Offset = "0xA58994", VA = "0xA58994")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event CupStopHandler CupStop
	{
		[Token(Token = "0x6000954")]
		[Address(RVA = "0xA58A30", Offset = "0xA58A30", VA = "0xA58A30")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000955")]
		[Address(RVA = "0xA58ACC", Offset = "0xA58ACC", VA = "0xA58ACC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0xA58C00", Offset = "0xA58C00", VA = "0xA58C00", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0xA58C88", Offset = "0xA58C88", VA = "0xA58C88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0xA59194", Offset = "0xA59194", VA = "0xA59194")]
	public bool IsValidCup(int cupIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0xA591B8", Offset = "0xA591B8", VA = "0xA591B8")]
	[IteratorStateMachine(typeof(<StartCup>d__58))]
	public IEnumerator StartCup(int cupIndex)
	{
		return null;
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0xA59258", Offset = "0xA59258", VA = "0xA59258")]
	public void FailCup(bool royalFail = false)
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0xA592C0", Offset = "0xA592C0", VA = "0xA592C0")]
	public GameState OnRoundEnded()
	{
		return default(GameState);
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0xA5964C", Offset = "0xA5964C", VA = "0xA5964C")]
	public int GetRoundCoinReward(int cupID, int starsEarned)
	{
		return default(int);
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0xA59688", Offset = "0xA59688", VA = "0xA59688")]
	public void PlayNextRound()
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0xA59708", Offset = "0xA59708", VA = "0xA59708")]
	public void RetryRound()
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0xA59698", Offset = "0xA59698", VA = "0xA59698")]
	private void PlayRound()
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0xA5A0D4", Offset = "0xA5A0D4", VA = "0xA5A0D4", Slot = "6")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0xA5A514", Offset = "0xA5A514", VA = "0xA5A514")]
	public void OnCupEnd(bool failed)
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0xA5A808", Offset = "0xA5A808", VA = "0xA5A808")]
	[PunRPC]
	private void SpawnPrivateRewardsRPC(int cupID, int starsEarned)
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0xA5A9FC", Offset = "0xA5A9FC", VA = "0xA5A9FC")]
	public void DebugForceEndCup(int starsEarnedPerLevel)
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0xA5AA54", Offset = "0xA5AA54", VA = "0xA5AA54")]
	public void DebugSetCup(int cupID, int[] cupStars)
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0xA5AA60", Offset = "0xA5AA60", VA = "0xA5AA60")]
	public CookingCup()
	{
	}
}
[Token(Token = "0x2000171")]
public class CookingGame : SingleInstanceNetworkedBehavior<CookingGame>
{
	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sink[] sinks;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FryingArea[] grills;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public FireExtinguisher[] fireExtinguishers;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int endlessUnlockedByCup;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private int firstGrillCup;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private int firstSinkCup;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform lightProbeAnchor;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CookingGameState gameStateManager;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CookingRound cookingRound;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private CookingCup cookingCup;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private LifeCounter lifeCounter;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private EndlessMode endlessMode;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private CreativeMode creativeMode;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private StarGoalsHandler starGoalsHandler;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private TutorialMode tutorialMode;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private TipHandler tipHandler;

	[Token(Token = "0x17000143")]
	public Transform GetLightProbe
	{
		[Token(Token = "0x6000982")]
		[Address(RVA = "0xA5AFA0", Offset = "0xA5AFA0", VA = "0xA5AFA0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0xA5AFA8", Offset = "0xA5AFA8", VA = "0xA5AFA8", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0xA5B144", Offset = "0xA5B144", VA = "0xA5B144")]
	public void Start()
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0xA5B8AC", Offset = "0xA5B8AC", VA = "0xA5B8AC")]
	public Transform GetLightProbeAnchor()
	{
		return null;
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0xA5B8B4", Offset = "0xA5B8B4", VA = "0xA5B8B4")]
	public void OnLocalPlayerAssignedPosition()
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0xA5B980", Offset = "0xA5B980", VA = "0xA5B980")]
	[PunRPC]
	private void SelectCupRPC(int cupIndex)
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0xA5AF34", Offset = "0xA5AF34", VA = "0xA5AF34")]
	public void OnStartCupEnvironmentLoadComplete(int cupIndex)
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0xA5BAF0", Offset = "0xA5BAF0", VA = "0xA5BAF0")]
	[PunRPC]
	private void StartEndlessModeRPC()
	{
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0xA5BB4C", Offset = "0xA5BB4C", VA = "0xA5BB4C")]
	[PunRPC]
	private void StartCreativeModeRPC()
	{
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0xA5B928", Offset = "0xA5B928", VA = "0xA5B928")]
	public void StartTutorialMode(bool launchOnStartup = false)
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0xA5BC0C", Offset = "0xA5BC0C", VA = "0xA5BC0C")]
	public void OnPlateHandedIn(int orderID, bool wasPerfect, int customerType, bool wasClean)
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0xA5BE04", Offset = "0xA5BE04", VA = "0xA5BE04")]
	[PunRPC]
	private void OnPlateHandedInRPC(int orderID, bool wasPerfect, int customerTypeInt, bool wasClean)
	{
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0xA5C1AC", Offset = "0xA5C1AC", VA = "0xA5C1AC")]
	public void OnPlateDeliveryComplete(int orderID, CustomerType customerType)
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0xA5C2F8", Offset = "0xA5C2F8", VA = "0xA5C2F8")]
	[PunRPC]
	private void PlateDeliveryCompleteRPC(int orderID, int customerType)
	{
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0xA5C434", Offset = "0xA5C434", VA = "0xA5C434")]
	public void OnPlateTimedOut(Plate plate, bool wasClean)
	{
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0xA5C5E8", Offset = "0xA5C5E8", VA = "0xA5C5E8")]
	[PunRPC]
	private void OnPlateTimedOutRPC(int orderID, int customerTypeInt, bool wasClean)
	{
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0xA5C910", Offset = "0xA5C910", VA = "0xA5C910")]
	public void OnPlateConsumeStarted(Plate plate)
	{
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0xA5CA9C", Offset = "0xA5CA9C", VA = "0xA5CA9C")]
	public void OnAllActiveStarGoalsFailed()
	{
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0xA5CACC", Offset = "0xA5CACC", VA = "0xA5CACC")]
	public void OnRoundEnded()
	{
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0xA5D080", Offset = "0xA5D080", VA = "0xA5D080")]
	public void ReturnToCupSelect()
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0xA5D09C", Offset = "0xA5D09C", VA = "0xA5D09C")]
	public void OnMidRoundResultsDisplayed(int cupID, int starsEarned, int levelIndex)
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0xA5D2CC", Offset = "0xA5D2CC", VA = "0xA5D2CC")]
	public void OnFinalCupResultsDisplayed(int cupID, int[] cupStars)
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0xA5D3B0", Offset = "0xA5D3B0", VA = "0xA5D3B0")]
	public void OnTownCelebrationComplete()
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0xA5D43C", Offset = "0xA5D43C", VA = "0xA5D43C")]
	public void LeaveTownCompleteCelebration()
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0xA5B6CC", Offset = "0xA5B6CC", VA = "0xA5B6CC")]
	public void SetLockedTools(bool lockedGrills, bool lockedSinks)
	{
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0xA5D4C0", Offset = "0xA5D4C0", VA = "0xA5D4C0")]
	public CookingGame()
	{
	}
}
[Token(Token = "0x2000172")]
public enum GameState
{
	[Token(Token = "0x40009C8")]
	GameModeSelection,
	[Token(Token = "0x40009C9")]
	CupRound,
	[Token(Token = "0x40009CA")]
	MidCupResults,
	[Token(Token = "0x40009CB")]
	FailedCupResults,
	[Token(Token = "0x40009CC")]
	PostCupResults,
	[Token(Token = "0x40009CD")]
	EndlessRound,
	[Token(Token = "0x40009CE")]
	PostEndlessRound,
	[Token(Token = "0x40009CF")]
	TutorialRound,
	[Token(Token = "0x40009D0")]
	FinalRound,
	[Token(Token = "0x40009D1")]
	CreativeRound,
	[Token(Token = "0x40009D2")]
	PostCreativeRound
}
[Token(Token = "0x2000173")]
public class CookingGameState : SingleInstanceNetworkedBehavior<CookingGameState>, IPunObservable
{
	[Token(Token = "0x2000174")]
	public delegate void GameStateChangedHandler(GameState oldState, GameState newState);

	[Token(Token = "0x17000144")]
	public GameState State
	{
		[Token(Token = "0x600099E")]
		[Address(RVA = "0xA5D534", Offset = "0xA5D534", VA = "0xA5D534")]
		[CompilerGenerated]
		get
		{
			return default(GameState);
		}
		[Token(Token = "0x600099F")]
		[Address(RVA = "0xA5D53C", Offset = "0xA5D53C", VA = "0xA5D53C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event GameStateChangedHandler OnGameStateChanged
	{
		[Token(Token = "0x600099C")]
		[Address(RVA = "0xA53EA0", Offset = "0xA53EA0", VA = "0xA53EA0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600099D")]
		[Address(RVA = "0xA5463C", Offset = "0xA5463C", VA = "0xA5463C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0xA5D544", Offset = "0xA5D544", VA = "0xA5D544")]
	public static bool IsGameRound(GameState gameState)
	{
		return default(bool);
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0xA59768", Offset = "0xA59768", VA = "0xA59768")]
	public void EnterState(GameState newState)
	{
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0xA5D6E8", Offset = "0xA5D6E8", VA = "0xA5D6E8", Slot = "6")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0xA5D578", Offset = "0xA5D578", VA = "0xA5D578")]
	private void OnNewGameState(GameState oldState)
	{
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0xA5D7C4", Offset = "0xA5D7C4", VA = "0xA5D7C4")]
	public void DebugSetState(GameState state)
	{
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0xA5D8D0", Offset = "0xA5D8D0", VA = "0xA5D8D0")]
	[PunRPC]
	private void DebugSetStateRPC(int state)
	{
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0xA5D8D4", Offset = "0xA5D8D4", VA = "0xA5D8D4")]
	public CookingGameState()
	{
	}
}
[Token(Token = "0x2000175")]
public class CookingRound : SingleInstanceNetworkedBehavior<CookingRound>, IPunObservable
{
	[Token(Token = "0x2000176")]
	public delegate void RoundStartHandler();

	[Token(Token = "0x2000177")]
	public delegate void RoundStopHandler();

	[Token(Token = "0x2000178")]
	public delegate void RoundCountdownHandler();

	[Token(Token = "0x2000179")]
	private enum State
	{
		[Token(Token = "0x40009FB")]
		Inactive,
		[Token(Token = "0x40009FC")]
		ReadyVote,
		[Token(Token = "0x40009FD")]
		Countdown,
		[Token(Token = "0x40009FE")]
		Running,
		[Token(Token = "0x40009FF")]
		Failed,
		[Token(Token = "0x4000A00")]
		Complete,
		[Token(Token = "0x4000A01")]
		RetryRoundAborted,
		[Token(Token = "0x4000A02")]
		RoundAborted
	}

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LevelList levelList;

	[Token(Token = "0x40009E0")]
	public const float roundCountdownStartAt = 5f;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float spawnDelay;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool pauseSpawn;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool abortedLevel;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private State state;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int numPlatesSpawned;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Recipe> recipeList;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<int> platesInPlay;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float spawnDelayTimer;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float waitingForSlotTimer;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float waitingForPlateTimer;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private ConveyorBelt conveyorBelt;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private CookingNetworkManager cookingNetworkManager;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private CookingGameState cookingGameState;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private EndlessMode endlessMode;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private CookingRecipeFactory recipeFactory;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private StarGoalsHandler starGoalsHandler;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private TableCenterUI tableCenterUI;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Fridge[] fridges;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private SaveManager saveManager;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private TutorialModePlateHandler tutorialModePlateHandler;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private CreativeModeCustomers creativeModeCustomers;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private WorkSpaceMenu workSpaceMenu;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private FinalLevelHandler finalLevelHandler;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private TimeSlowdownHandler timeSlowdown;

	[Token(Token = "0x40009F9")]
	private const float waitTimeWarningLimit = 20f;

	[Token(Token = "0x17000145")]
	public LevelData[] Levels
	{
		[Token(Token = "0x60009B1")]
		[Address(RVA = "0xA5D9F8", Offset = "0xA5D9F8", VA = "0xA5D9F8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60009B2")]
		[Address(RVA = "0xA5DA00", Offset = "0xA5DA00", VA = "0xA5DA00")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000146")]
	public int LevelIndex
	{
		[Token(Token = "0x60009B3")]
		[Address(RVA = "0xA5DA08", Offset = "0xA5DA08", VA = "0xA5DA08")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60009B4")]
		[Address(RVA = "0xA5DA10", Offset = "0xA5DA10", VA = "0xA5DA10")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000147")]
	public int PendingPlateSpawnRequests
	{
		[Token(Token = "0x60009B5")]
		[Address(RVA = "0xA5DA18", Offset = "0xA5DA18", VA = "0xA5DA18")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60009B6")]
		[Address(RVA = "0xA5DA20", Offset = "0xA5DA20", VA = "0xA5DA20")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000148")]
	public int NumPlatesServedOrFailed
	{
		[Token(Token = "0x60009B7")]
		[Address(RVA = "0xA5DA28", Offset = "0xA5DA28", VA = "0xA5DA28")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60009B8")]
		[Address(RVA = "0xA5DA30", Offset = "0xA5DA30", VA = "0xA5DA30")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000149")]
	public int NumPlatesFailed
	{
		[Token(Token = "0x60009B9")]
		[Address(RVA = "0xA5DA38", Offset = "0xA5DA38", VA = "0xA5DA38")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60009BA")]
		[Address(RVA = "0xA5DA40", Offset = "0xA5DA40", VA = "0xA5DA40")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700014A")]
	public int NumPlatesServed
	{
		[Token(Token = "0x60009BB")]
		[Address(RVA = "0xA5DA48", Offset = "0xA5DA48", VA = "0xA5DA48")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700014B")]
	public int NumPlatesRequired
	{
		[Token(Token = "0x60009BC")]
		[Address(RVA = "0xA5DA54", Offset = "0xA5DA54", VA = "0xA5DA54")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700014C")]
	public bool ReadyVoteActive
	{
		[Token(Token = "0x60009BD")]
		[Address(RVA = "0xA5DAB8", Offset = "0xA5DAB8", VA = "0xA5DAB8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700014D")]
	public bool IsRunning
	{
		[Token(Token = "0x60009BE")]
		[Address(RVA = "0xA4FD70", Offset = "0xA4FD70", VA = "0xA4FD70")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700014E")]
	public bool IsCountingDown
	{
		[Token(Token = "0x60009BF")]
		[Address(RVA = "0xA5DAC8", Offset = "0xA5DAC8", VA = "0xA5DAC8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700014F")]
	public bool HasDirtyPlates
	{
		[Token(Token = "0x60009C0")]
		[Address(RVA = "0xA5DAD8", Offset = "0xA5DAD8", VA = "0xA5DAD8")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60009C1")]
		[Address(RVA = "0xA5DAE0", Offset = "0xA5DAE0", VA = "0xA5DAE0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000150")]
	public LevelData CurrentLevel
	{
		[Token(Token = "0x60009C2")]
		[Address(RVA = "0xA5DAEC", Offset = "0xA5DAEC", VA = "0xA5DAEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000151")]
	public float CountdownElapsedTime
	{
		[Token(Token = "0x60009C3")]
		[Address(RVA = "0xA5DB20", Offset = "0xA5DB20", VA = "0xA5DB20")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60009C4")]
		[Address(RVA = "0xA5DB28", Offset = "0xA5DB28", VA = "0xA5DB28")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event RoundStartHandler RoundStart
	{
		[Token(Token = "0x60009AB")]
		[Address(RVA = "0xA4FCD4", Offset = "0xA4FCD4", VA = "0xA4FCD4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60009AC")]
		[Address(RVA = "0xA50754", Offset = "0xA50754", VA = "0xA50754")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event RoundStopHandler RoundStop
	{
		[Token(Token = "0x60009AD")]
		[Address(RVA = "0xA4DCF4", Offset = "0xA4DCF4", VA = "0xA4DCF4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60009AE")]
		[Address(RVA = "0xA4DFD8", Offset = "0xA4DFD8", VA = "0xA4DFD8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event RoundCountdownHandler CountdownStarted
	{
		[Token(Token = "0x60009AF")]
		[Address(RVA = "0xA4DB9C", Offset = "0xA4DB9C", VA = "0xA4DB9C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60009B0")]
		[Address(RVA = "0xA4DF3C", Offset = "0xA4DF3C", VA = "0xA4DF3C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0xA5DB30", Offset = "0xA5DB30", VA = "0xA5DB30")]
	private void Start()
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0xA5E574", Offset = "0xA5E574", VA = "0xA5E574")]
	private void Update()
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0xA5F26C", Offset = "0xA5F26C", VA = "0xA5F26C")]
	public bool IsValidLevel(int level)
	{
		return default(bool);
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0xA5988C", Offset = "0xA5988C", VA = "0xA5988C")]
	public void StartRound(string cupNameID, int levelIndex)
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0xA5F5CC", Offset = "0xA5F5CC", VA = "0xA5F5CC")]
	public void AllPlayersReadyForRound()
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0xA5F940", Offset = "0xA5F940", VA = "0xA5F940")]
	private void StartCountdown()
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0xA5ED4C", Offset = "0xA5ED4C", VA = "0xA5ED4C")]
	private void SpawnPlate()
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0xA5BEF0", Offset = "0xA5BEF0", VA = "0xA5BEF0")]
	public bool TryRemovingPlateFromPlay(int orderID, bool timedOut)
	{
		return default(bool);
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0xA5C3A8", Offset = "0xA5C3A8", VA = "0xA5C3A8")]
	public void OnPlateDeliveryComplete(int orderID, CustomerType customerType)
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0xA5F290", Offset = "0xA5F290", VA = "0xA5F290")]
	private void StartTutorial()
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0xA5EBD8", Offset = "0xA5EBD8", VA = "0xA5EBD8")]
	private void OnRoundCountdownComplete()
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0xA592A4", Offset = "0xA592A4", VA = "0xA592A4")]
	public void FailRound()
	{
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0xA5F578", Offset = "0xA5F578", VA = "0xA5F578")]
	private void UpdateState(State newState)
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0xA5FDBC", Offset = "0xA5FDBC", VA = "0xA5FDBC")]
	private void OnReadyVoteStarted()
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0xA5FFA8", Offset = "0xA5FFA8", VA = "0xA5FFA8")]
	private void OnRoundCountdown()
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0xA600BC", Offset = "0xA600BC", VA = "0xA600BC")]
	private void OnNewRoundStarted()
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0xA601B8", Offset = "0xA601B8", VA = "0xA601B8")]
	private void OnRoundFailed()
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0xA6022C", Offset = "0xA6022C", VA = "0xA6022C")]
	private void OnRoundComplete()
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0xA602A0", Offset = "0xA602A0", VA = "0xA602A0")]
	private void OnRoundAborted()
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0xA6034C", Offset = "0xA6034C", VA = "0xA6034C")]
	private void OnRoundEnded()
	{
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0xA6078C", Offset = "0xA6078C", VA = "0xA6078C", Slot = "6")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0xA60EF8", Offset = "0xA60EF8", VA = "0xA60EF8")]
	public void EndTutorialRound()
	{
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0xA6031C", Offset = "0xA6031C", VA = "0xA6031C")]
	private void OnRoundRetryAborted()
	{
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0xA60F14", Offset = "0xA60F14", VA = "0xA60F14")]
	public void TutorialModeSetPendingPlateCount(int count)
	{
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0xA60F1C", Offset = "0xA60F1C", VA = "0xA60F1C")]
	public void AbortRetryRound()
	{
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0xA60F38", Offset = "0xA60F38", VA = "0xA60F38")]
	public void ForceAddPlateSpawnRequest()
	{
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0xA5FD74", Offset = "0xA5FD74", VA = "0xA5FD74")]
	public int MaxCustomersOnScreen()
	{
		return default(int);
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0xA60F48", Offset = "0xA60F48", VA = "0xA60F48")]
	public void AbortCupRound()
	{
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0xA60F64", Offset = "0xA60F64", VA = "0xA60F64")]
	public void AbortTutorialRound()
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0xA60F80", Offset = "0xA60F80", VA = "0xA60F80")]
	public void DebugForceRoundComplete()
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0xA60F9C", Offset = "0xA60F9C", VA = "0xA60F9C")]
	public CookingRound()
	{
	}
}
[Serializable]
[Token(Token = "0x200017A")]
public class CookoutTrackedPoseDriver : UnityEngine.MonoBehaviour, ISerializationCallbackReceiver
{
	[Token(Token = "0x200017B")]
	public enum TrackingType
	{
		[Token(Token = "0x4000A12")]
		RotationAndPosition,
		[Token(Token = "0x4000A13")]
		RotationOnly,
		[Token(Token = "0x4000A14")]
		PositionOnly
	}

	[Token(Token = "0x200017C")]
	public enum UpdateType
	{
		[Token(Token = "0x4000A16")]
		UpdateAndBeforeRender,
		[Token(Token = "0x4000A17")]
		Update,
		[Token(Token = "0x4000A18")]
		BeforeRender
	}

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 recenteringOffset;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float recenteringOffsetAngle;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Vector3[] baseDirection;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TrackingType m_TrackingType;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private UpdateType m_UpdateType;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private InputActionProperty m_PositionInput;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private InputActionProperty m_RotationInput;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 m_CurrentPosition;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion m_CurrentRotation;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool m_RotationBound;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	private bool m_PositionBound;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	[Obsolete]
	[HideInInspector]
	private InputAction m_PositionAction;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Obsolete]
	[SerializeField]
	[HideInInspector]
	private InputAction m_RotationAction;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	[SerializeField]
	private bool m_HasMigratedActions;

	[Token(Token = "0x17000152")]
	public TrackingType trackingType
	{
		[Token(Token = "0x60009F1")]
		[Address(RVA = "0xA61300", Offset = "0xA61300", VA = "0xA61300")]
		get
		{
			return default(TrackingType);
		}
		[Token(Token = "0x60009F2")]
		[Address(RVA = "0xA61308", Offset = "0xA61308", VA = "0xA61308")]
		set
		{
		}
	}

	[Token(Token = "0x17000153")]
	public UpdateType updateType
	{
		[Token(Token = "0x60009F3")]
		[Address(RVA = "0xA61310", Offset = "0xA61310", VA = "0xA61310")]
		get
		{
			return default(UpdateType);
		}
		[Token(Token = "0x60009F4")]
		[Address(RVA = "0xA61318", Offset = "0xA61318", VA = "0xA61318")]
		set
		{
		}
	}

	[Token(Token = "0x17000154")]
	public InputActionProperty positionInput
	{
		[Token(Token = "0x60009F5")]
		[Address(RVA = "0xA61320", Offset = "0xA61320", VA = "0xA61320")]
		get
		{
			return default(InputActionProperty);
		}
		[Token(Token = "0x60009F6")]
		[Address(RVA = "0xA61334", Offset = "0xA61334", VA = "0xA61334")]
		set
		{
		}
	}

	[Token(Token = "0x17000155")]
	public InputActionProperty rotationInput
	{
		[Token(Token = "0x60009F7")]
		[Address(RVA = "0xA61698", Offset = "0xA61698", VA = "0xA61698")]
		get
		{
			return default(InputActionProperty);
		}
		[Token(Token = "0x60009F8")]
		[Address(RVA = "0xA616AC", Offset = "0xA616AC", VA = "0xA616AC")]
		set
		{
		}
	}

	[Token(Token = "0x17000156")]
	public InputAction positionAction
	{
		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0xA623E4", Offset = "0xA623E4", VA = "0xA623E4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0xA623F0", Offset = "0xA623F0", VA = "0xA623F0")]
		set
		{
		}
	}

	[Token(Token = "0x17000157")]
	public InputAction rotationAction
	{
		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0xA62438", Offset = "0xA62438", VA = "0xA62438")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A10")]
		[Address(RVA = "0xA62444", Offset = "0xA62444", VA = "0xA62444")]
		set
		{
		}
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0xA61168", Offset = "0xA61168", VA = "0xA61168")]
	public void Recenter()
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0xA61A10", Offset = "0xA61A10", VA = "0xA61A10")]
	private void BindActions()
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0xA614F0", Offset = "0xA614F0", VA = "0xA614F0")]
	private void BindPosition()
	{
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0xA61868", Offset = "0xA61868", VA = "0xA61868")]
	private void BindRotation()
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0xA61A28", Offset = "0xA61A28", VA = "0xA61A28")]
	private void UnbindActions()
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0xA613A0", Offset = "0xA613A0", VA = "0xA613A0")]
	private void UnbindPosition()
	{
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0xA61718", Offset = "0xA61718", VA = "0xA61718")]
	private void UnbindRotation()
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0xA61A40", Offset = "0xA61A40", VA = "0xA61A40")]
	private void OnPositionPerformed(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0xA61AA0", Offset = "0xA61AA0", VA = "0xA61AA0")]
	private void OnPositionCanceled(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0xA61AF8", Offset = "0xA61AF8", VA = "0xA61AF8")]
	private void OnRotationPerformed(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0xA61B58", Offset = "0xA61B58", VA = "0xA61B58")]
	private void OnRotationCanceled(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0xA61BA8", Offset = "0xA61BA8", VA = "0xA61BA8", Slot = "6")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0xA61BAC", Offset = "0xA61BAC", VA = "0xA61BAC")]
	protected void OnEnable()
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0xA61C60", Offset = "0xA61C60", VA = "0xA61C60")]
	protected void OnDisable()
	{
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0xA61D14", Offset = "0xA61D14", VA = "0xA61D14", Slot = "7")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0xA61D18", Offset = "0xA61D18", VA = "0xA61D18")]
	protected void UpdateCallback()
	{
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0xA61D80", Offset = "0xA61D80", VA = "0xA61D80", Slot = "8")]
	protected virtual void OnUpdate()
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0xA61D9C", Offset = "0xA61D9C", VA = "0xA61D9C", Slot = "9")]
	protected virtual void OnBeforeRender()
	{
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0xA61DBC", Offset = "0xA61DBC", VA = "0xA61DBC", Slot = "10")]
	protected virtual void SetLocalTransform(Vector3 newPosition, Quaternion newRotation)
	{
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0xA61E88", Offset = "0xA61E88", VA = "0xA61E88")]
	private bool HasStereoCamera()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0xA61F40", Offset = "0xA61F40", VA = "0xA61F40", Slot = "11")]
	protected virtual void PerformUpdate()
	{
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0xA6248C", Offset = "0xA6248C", VA = "0xA6248C")]
	protected void Reset()
	{
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0xA62498", Offset = "0xA62498", VA = "0xA62498", Slot = "4")]
	private void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
	{
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0xA6249C", Offset = "0xA6249C", VA = "0xA6249C", Slot = "5")]
	private void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
	{
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0xA62514", Offset = "0xA62514", VA = "0xA62514")]
	public CookoutTrackedPoseDriver()
	{
	}
}
[Token(Token = "0x200017D")]
public class CreativeMode : SingleInstanceNetworkedBehavior<CreativeMode>, IPunObservable
{
	[Token(Token = "0x200017E")]
	[CompilerGenerated]
	private sealed class <StartCreativeMode>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CreativeMode <>4__this;

		[Token(Token = "0x1700015B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A31")]
			[Address(RVA = "0xA63858", Offset = "0xA63858", VA = "0xA63858", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A33")]
			[Address(RVA = "0xA638A0", Offset = "0xA638A0", VA = "0xA638A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0xA62D3C", Offset = "0xA62D3C", VA = "0xA62D3C")]
		[DebuggerHidden]
		public <StartCreativeMode>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0xA636EC", Offset = "0xA636EC", VA = "0xA636EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0xA636F0", Offset = "0xA636F0", VA = "0xA636F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0xA63860", Offset = "0xA63860", VA = "0xA63860", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private LevelData creativeLevelData;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private int customersToServe;

	[Token(Token = "0x4000A1D")]
	private const float delayBeforeBreak = 1f;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float delayBeforeBreakTimer;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int photosSavedDuringRound;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int photosSharedDuringRound;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private EnvironmentLoader environmentLoader;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CookingRound cookingRound;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MapVoteCounter mapVoteCounter;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CreativeModeContinuePrompt continuePrompt;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private CreativeModeCustomers creativeModeCustomers;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private HandInColliderEnabler handInColliderEnabler;

	[Token(Token = "0x17000158")]
	public int CustomersToServe
	{
		[Token(Token = "0x6000A16")]
		[Address(RVA = "0xA626F4", Offset = "0xA626F4", VA = "0xA626F4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000159")]
	public int NewRecipesFound
	{
		[Token(Token = "0x6000A17")]
		[Address(RVA = "0xA626FC", Offset = "0xA626FC", VA = "0xA626FC")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A18")]
		[Address(RVA = "0xA62704", Offset = "0xA62704", VA = "0xA62704")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700015A")]
	public int CustomersServed
	{
		[Token(Token = "0x6000A19")]
		[Address(RVA = "0xA6270C", Offset = "0xA6270C", VA = "0xA6270C")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0xA62714", Offset = "0xA62714", VA = "0xA62714")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0xA6271C", Offset = "0xA6271C", VA = "0xA6271C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0xA62BDC", Offset = "0xA62BDC", VA = "0xA62BDC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0xA5BBA4", Offset = "0xA5BBA4", VA = "0xA5BBA4")]
	[IteratorStateMachine(typeof(<StartCreativeMode>d__24))]
	public IEnumerator StartCreativeMode()
	{
		return null;
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0xA62D64", Offset = "0xA62D64", VA = "0xA62D64")]
	[PunRPC]
	private void OnCreativeModeStartedRPC()
	{
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0xA5CFA8", Offset = "0xA5CFA8", VA = "0xA5CFA8")]
	public void OnRoundEnded()
	{
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0xA62E70", Offset = "0xA62E70", VA = "0xA62E70")]
	[PunRPC]
	private void OnCreativeModeEndRPC()
	{
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0xA63060", Offset = "0xA63060", VA = "0xA63060")]
	public void AbortCreativeMode()
	{
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0xA5C944", Offset = "0xA5C944", VA = "0xA5C944")]
	public void OnPlateConsumeStarted(Plate plate)
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0xA62D74", Offset = "0xA62D74", VA = "0xA62D74")]
	private void EndPhotoBreak()
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0xA630A8", Offset = "0xA630A8", VA = "0xA630A8")]
	[PunRPC]
	private void ShowPhotoGallery()
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0xA63174", Offset = "0xA63174", VA = "0xA63174")]
	public void OnLocalPlayerVoted(bool wasLastVote)
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0xA63248", Offset = "0xA63248", VA = "0xA63248")]
	[PunRPC]
	private void HideAndClearPhotoGallery()
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0xA63314", Offset = "0xA63314", VA = "0xA63314")]
	public void OnNewRecipeFound(CreativeRecipeData recipe)
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0xA63440", Offset = "0xA63440", VA = "0xA63440")]
	public void ContinueRound()
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0xA63444", Offset = "0xA63444", VA = "0xA63444")]
	public void FinishRound()
	{
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0xA5C0E4", Offset = "0xA5C0E4", VA = "0xA5C0E4")]
	public void OnPlateDelivered()
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0xA63484", Offset = "0xA63484", VA = "0xA63484")]
	[PunRPC]
	private void OnCreativeModePlateDelivered()
	{
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0xA63550", Offset = "0xA63550", VA = "0xA63550", Slot = "6")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0xA63678", Offset = "0xA63678", VA = "0xA63678")]
	public CreativeMode()
	{
	}
}
[Token(Token = "0x200017F")]
public class CreativeModeContinuePrompt : SingleInstanceNetworkedBehavior<CreativeModeContinuePrompt>, IPunObservable
{
	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject visualRoot;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool activeBacking;

	[Token(Token = "0x1700015D")]
	private bool Active
	{
		[Token(Token = "0x6000A34")]
		[Address(RVA = "0xA638A8", Offset = "0xA638A8", VA = "0xA638A8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A35")]
		[Address(RVA = "0xA638B0", Offset = "0xA638B0", VA = "0xA638B0")]
		set
		{
		}
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0xA638D8", Offset = "0xA638D8", VA = "0xA638D8", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0xA62D34", Offset = "0xA62D34", VA = "0xA62D34")]
	public void SetVisible(bool isVisible)
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0xA6392C", Offset = "0xA6392C", VA = "0xA6392C", Slot = "6")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0xA639F4", Offset = "0xA639F4", VA = "0xA639F4")]
	public CreativeModeContinuePrompt()
	{
	}
}
[Token(Token = "0x2000180")]
public class CreativeModeCustomers : SingleInstanceBehavior<CreativeModeCustomers>
{
	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CustomerType[] customerToUnlock;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private CreativeRecipeData[] recipeUnlockingCustomer;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float specialCustomersOdds;

	[Token(Token = "0x4000A2F")]
	private const int bearSpawnIndex = 2;

	[Token(Token = "0x4000A30")]
	private const int customerCycleLength = 10;

	[Token(Token = "0x4000A31")]
	private const CustomerType standardCustomer = CustomerType.CustomerNormal;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SaveManager saveManager;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OrderMonitor orderMonitor;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<CustomerType> specialCustomers;

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0xA63A60", Offset = "0xA63A60", VA = "0xA63A60", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0xA63AB8", Offset = "0xA63AB8", VA = "0xA63AB8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0xA5FC04", Offset = "0xA5FC04", VA = "0xA5FC04")]
	public CustomerType GetCustomer(int numPlatesSpawned)
	{
		return default(CustomerType);
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0xA63350", Offset = "0xA63350", VA = "0xA63350")]
	public void CheckIfUnlockedCharacter(CreativeRecipeData recipe)
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0xA63C34", Offset = "0xA63C34", VA = "0xA63C34")]
	public void DebugRefreshUnlockedCustomers()
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0xA63C5C", Offset = "0xA63C5C", VA = "0xA63C5C")]
	public void DebugUnlockAllCustomers()
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0xA63D10", Offset = "0xA63D10", VA = "0xA63D10")]
	public CreativeModeCustomers()
	{
	}
}
[Token(Token = "0x2000181")]
public enum CreativeModeFeedback
{
	[Token(Token = "0x4000A36")]
	PerfectMatch,
	[Token(Token = "0x4000A37")]
	RightOrderWrongGrilling,
	[Token(Token = "0x4000A38")]
	CorrectContentWrongOrder,
	[Token(Token = "0x4000A39")]
	OneIngredientMismatch,
	[Token(Token = "0x4000A3A")]
	TwoIngredientsMismatch,
	[Token(Token = "0x4000A3B")]
	NoMatch
}
[Token(Token = "0x2000182")]
public static class CreativeModeFeedbackText
{
	[Token(Token = "0x4000A3C")]
	private const string localizationHintGrill = "creative_feedback_hint_grill";

	[Token(Token = "0x4000A3D")]
	private const string localizationHintOrder = "creative_feedback_hint_order";

	[Token(Token = "0x4000A3E")]
	private const string localizationHintOneMismatch = "creative_feedback_hint_replace";

	[Token(Token = "0x4000A3F")]
	private const string localizationHintXMismatch = "creative_feedback_hint_replace_amount";

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0xA63DD8", Offset = "0xA63DD8", VA = "0xA63DD8")]
	public static string GetLocalizedHintText(CreativeModeFeedback feedback)
	{
		return null;
	}
}
[Token(Token = "0x2000183")]
public class CreativeModeRecipeRegistry : SingleInstanceBehavior<CreativeModeRecipeRegistry>
{
	[Token(Token = "0x2000184")]
	public delegate void NewRecipeUnlocked(CreativeRecipeData recipe);

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private CreativeRecipeList recipeList;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<IngredientType, int> ingredientsRequiredCount;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SaveManager saveManager;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Locale locale;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private StringBuilder stringBuilder;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<IngredientType> uniqueIngredients;

	[Token(Token = "0x4000A47")]
	private const string localizationIngredientCount = "creative_ingredient_count";

	[Token(Token = "0x4000A48")]
	private const string localizationGrillCount = "creative_grilled_count";

	[Token(Token = "0x4000A49")]
	private const string localizationUniqueCount = "creative_unique_count";

	[Token(Token = "0x4000A4A")]
	private const string textNewLine = "\n";

	[Token(Token = "0x4000A4B")]
	private const string textParameterAmount = "{amount}";

	[Token(Token = "0x4000A4C")]
	private const string textParameterNewLine = "{newline}";

	[Token(Token = "0x1700015E")]
	public int RecipeCount
	{
		[Token(Token = "0x6000A44")]
		[Address(RVA = "0xA64080", Offset = "0xA64080", VA = "0xA64080")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x14000010")]
	public event NewRecipeUnlocked OnNewRecipeUnlocked
	{
		[Token(Token = "0x6000A42")]
		[Address(RVA = "0xA63F48", Offset = "0xA63F48", VA = "0xA63F48")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A43")]
		[Address(RVA = "0xA63FE4", Offset = "0xA63FE4", VA = "0xA63FE4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0xA640D0", Offset = "0xA640D0", VA = "0xA640D0", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0xA64158", Offset = "0xA64158", VA = "0xA64158")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0xA64240", Offset = "0xA64240", VA = "0xA64240")]
	public CreativeRecipeData GetMatchingRecipe(IList<StackedIngredientData> addedIngredients, out CreativeModeFeedback feedback)
	{
		return null;
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0xA645AC", Offset = "0xA645AC", VA = "0xA645AC")]
	public bool CheckIfUnlockedNewRecipe(CreativeRecipeData recipe, CreativeModeFeedback feedback)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0xA643EC", Offset = "0xA643EC", VA = "0xA643EC")]
	public static CreativeModeFeedback RecipeMatches(CreativeRecipeData recipe, IList<StackedIngredientData> addedIngredients)
	{
		return default(CreativeModeFeedback);
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0xA64C88", Offset = "0xA64C88", VA = "0xA64C88")]
	private static bool AreIngredientsCorrectlyGrilled(CreativeRecipeData recipe, IList<StackedIngredientData> addedIngredients)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0xA64A8C", Offset = "0xA64A8C", VA = "0xA64A8C")]
	private static bool AreIngredientsOrderedCorrect(CreativeRecipeData recipe, IList<StackedIngredientData> addedIngredients)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0xA646A8", Offset = "0xA646A8", VA = "0xA646A8")]
	private static bool AreTheCorrectIngredientsUsed(CreativeRecipeData creativeRecipe, IList<StackedIngredientData> addedIngredients, int maxNumWrongIngredients)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0xA64E6C", Offset = "0xA64E6C", VA = "0xA64E6C")]
	public CreativeRecipeData GetRecipe(int index)
	{
		return null;
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0xA64ECC", Offset = "0xA64ECC", VA = "0xA64ECC")]
	public bool GetRecipeUnlocked(CreativeRecipeData recipe)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0xA64E3C", Offset = "0xA64E3C", VA = "0xA64E3C")]
	private static bool IngredientIsBread(IngredientType type)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0xA64F34", Offset = "0xA64F34", VA = "0xA64F34")]
	public string GetRecipeDescription(CreativeRecipeData recipe)
	{
		return null;
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0xA65380", Offset = "0xA65380", VA = "0xA65380")]
	public void DebugUnlockAllRecipes()
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0xA654B8", Offset = "0xA654B8", VA = "0xA654B8")]
	public CreativeModeRecipeRegistry()
	{
	}
}
[Token(Token = "0x2000185")]
public class CreativeModeResultDisplayer : SingleInstanceNetworkedBehavior<CreativeModeResultDisplayer>, IPunObservable
{
	[Token(Token = "0x2000186")]
	[CompilerGenerated]
	private sealed class <ShowResults>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CreativeModeResultDisplayer <>4__this;

		[Token(Token = "0x1700015F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A65")]
			[Address(RVA = "0xA662D0", Offset = "0xA662D0", VA = "0xA662D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000160")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A67")]
			[Address(RVA = "0xA66318", Offset = "0xA66318", VA = "0xA66318", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0xA65A9C", Offset = "0xA65A9C", VA = "0xA65A9C")]
		[DebuggerHidden]
		public <ShowResults>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0xA65F00", Offset = "0xA65F00", VA = "0xA65F00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0xA65F04", Offset = "0xA65F04", VA = "0xA65F04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0xA662D8", Offset = "0xA662D8", VA = "0xA662D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool shouldShow;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float scaleUpWindowTime;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float scaleDownWindowTime;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float scaleUpDelayTime;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine showRoutine;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WaitForSeconds shortDelay;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WaitForSeconds longDelay;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject visualsRoot;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject windowDisplay;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CookingRound cookingRound;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private TextMeshPro newUnlockCounter;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ParticleSystem unlockCountEffect;

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0xA6576C", Offset = "0xA6576C", VA = "0xA6576C", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0xA658B8", Offset = "0xA658B8", VA = "0xA658B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0xA659F0", Offset = "0xA659F0", VA = "0xA659F0")]
	public void ShowLocally()
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0xA65A34", Offset = "0xA65A34", VA = "0xA65A34")]
	[IteratorStateMachine(typeof(<ShowResults>d__15))]
	private IEnumerator ShowResults()
	{
		return null;
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0xA65AC4", Offset = "0xA65AC4", VA = "0xA65AC4")]
	public void HideWithDelay()
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0xA65C24", Offset = "0xA65C24", VA = "0xA65C24")]
	private void OnCountdownStarted()
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0xA65C28", Offset = "0xA65C28", VA = "0xA65C28", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0xA65D28", Offset = "0xA65D28", VA = "0xA65D28", Slot = "6")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0xA65DFC", Offset = "0xA65DFC", VA = "0xA65DFC")]
	public CreativeModeResultDisplayer()
	{
	}
}
[Token(Token = "0x2000187")]
public class PlateScoringCreativeMode : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000A5C")]
	private const int maxStackSize = 20;

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0xA66320", Offset = "0xA66320", VA = "0xA66320")]
	public static PlateScoring.AddIngredientFeedback CanAddIngredient(IList<StackedIngredientData> stackedIngredients)
	{
		return default(PlateScoring.AddIngredientFeedback);
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0xA663CC", Offset = "0xA663CC", VA = "0xA663CC")]
	public static PlateScoring.Grade GetPlateCurrentGrade()
	{
		return default(PlateScoring.Grade);
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0xA663D4", Offset = "0xA663D4", VA = "0xA663D4")]
	public PlateScoringCreativeMode()
	{
	}
}
[Token(Token = "0x2000188")]
public class RecipeBookButtons : SingleInstanceBehavior<RecipeBookButtons>
{
	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] buttonsGO;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PokeButton[] pokeButtons;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RecipeBookMenu recipeBook;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CookingGameState gameState;

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0xA663DC", Offset = "0xA663DC", VA = "0xA663DC", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0xA6646C", Offset = "0xA6646C", VA = "0xA6646C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0xA66700", Offset = "0xA66700", VA = "0xA66700")]
	private void OnStateChange(GameState oldState, GameState newState)
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0xA66778", Offset = "0xA66778", VA = "0xA66778", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0xA6686C", Offset = "0xA6686C", VA = "0xA6686C")]
	public RecipeBookButtons()
	{
	}
}
[Token(Token = "0x2000189")]
public class RecipeBookMenu : SingleInstanceBehavior<RecipeBookMenu>
{
	[Token(Token = "0x200018A")]
	private struct RecipeButton
	{
		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PokeButton button;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public SpriteRenderer buttonRenderer;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SpriteRenderer lockIconRenderer;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject newRecipeIcon;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshPro label;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject gameObject;
	}

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[Header("Spawn locations")]
	private Vector3[] spawnLocations;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector3[] spawnRotations;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Texts")]
	[SerializeField]
	private TextMeshPro bannerLabel;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMeshPro SelectedRecipeLabel;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TextMeshPro SelectedRecipeDescription;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TextMeshPro pageDisplayText;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[Header("Buttons")]
	private PokeButton exitButton;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private PokeButton scrollPrevious;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private PokeButton scrollNext;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private PokeButton[] recipeButtons;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	[Header("Other")]
	private Color lockedColor;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Color unlockedColor;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Color selectedColor;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private GameObject menuRoot;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Transform RecipeIconRoot;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Sprite anyBreadSprite;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private Sprite anyBreadGrilledSprite;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private Sprite anyBreadBurntSprite;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private float iconMinSize;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[SerializeField]
	private float iconMaxSize;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private float iconMinSpacing;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[SerializeField]
	private float iconMaxSpacing;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private Vector3 IconMinPosition;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[SerializeField]
	private Vector3 IconMaxPosition;

	[Token(Token = "0x4000A7A")]
	private const int noRecipeSelected = -1;

	[Token(Token = "0x4000A7B")]
	private const int recipeButtonCount = 8;

	[Token(Token = "0x4000A7C")]
	private const float exitAnimationTime = 1.033f;

	[Token(Token = "0x4000A7D")]
	private const float enterAnimationTime = 1.033f;

	[Token(Token = "0x4000A7E")]
	private const string enterAnimationTrigger = "Enter";

	[Token(Token = "0x4000A7F")]
	private const string exitAnimationTrigger = "Exit";

	[Token(Token = "0x4000A80")]
	private const string localizationHeaderRecipes = "inventory_header_recipes";

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private int selectedButtonIndex;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private bool selectedRecipeIsUnlocked;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private int currentPage;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private int pageCount;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private int recipeCount;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private int iconCount;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool active;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Locale locale;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private CreativeModeRecipeRegistry recipeRegistry;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private CookingNetworkManager networkManager;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private CookingGameState gameState;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private IngredientPrefabRegistry ingredientPrefabRegistry;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private WorkSpaceMenu workSpaceMenu;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private RecipeButton[] recipeButtonsInternal;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Collider[] colliders;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private GridLayoutGroup gridLayout;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private SpriteRenderer[] ingredientIcons;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] ingredientIconTransforms;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private List<CreativeRecipeData> newlyDiscoveredRecipes;

	[Token(Token = "0x17000161")]
	private int recipeOffset
	{
		[Token(Token = "0x6000A71")]
		[Address(RVA = "0xA66908", Offset = "0xA66908", VA = "0xA66908")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0xA66914", Offset = "0xA66914", VA = "0xA66914")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0xA673EC", Offset = "0xA673EC", VA = "0xA673EC")]
	private void Show(bool spawnOverInventoryMenu)
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0xA67274", Offset = "0xA67274", VA = "0xA67274")]
	private void Hide()
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0xA668F4", Offset = "0xA668F4", VA = "0xA668F4")]
	public void ToogleActive(bool spawnOverInventoryMenu = false)
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0xA67B18", Offset = "0xA67B18", VA = "0xA67B18")]
	public void ShowRecipe(CreativeRecipeData recipe)
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0xA67E2C", Offset = "0xA67E2C", VA = "0xA67E2C")]
	private void ScrollPrevious()
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0xA67E48", Offset = "0xA67E48", VA = "0xA67E48")]
	private void ScrollNext()
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0xA67428", Offset = "0xA67428", VA = "0xA67428")]
	private void RefreshPage()
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0xA67C64", Offset = "0xA67C64", VA = "0xA67C64")]
	private void SelectRecipe(int buttonIndex, CreativeRecipeData recipe)
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0xA67EE0", Offset = "0xA67EE0", VA = "0xA67EE0")]
	private void UpdateSelectedRecipeIcons(CreativeRecipeData recipe)
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0xA67E6C", Offset = "0xA67E6C", VA = "0xA67E6C")]
	private void SetButtonActiveVisuals(SpriteRenderer renderer, bool isActive, bool isUnlocked)
	{
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0xA67354", Offset = "0xA67354", VA = "0xA67354")]
	private void OnLocalPlayerMoved(int playerPosIndex)
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0xA677FC", Offset = "0xA677FC", VA = "0xA677FC")]
	private void SetPosition(bool spawnOverInventoryMenu)
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0xA67918", Offset = "0xA67918", VA = "0xA67918")]
	public void PlayEnterOrExitAnimation(bool isEntering)
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0xA68330", Offset = "0xA68330", VA = "0xA68330")]
	public void RefreshUnlockedRecipe()
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0xA68580", Offset = "0xA68580", VA = "0xA68580")]
	public void OnRecipeUnlocked(CreativeRecipeData recipe)
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0xA68628", Offset = "0xA68628", VA = "0xA68628")]
	private void OnStateChange(GameState oldState, GameState newState)
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0xA68638", Offset = "0xA68638", VA = "0xA68638", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0xA68844", Offset = "0xA68844", VA = "0xA68844")]
	public RecipeBookMenu()
	{
	}
}
[Token(Token = "0x200018D")]
public class SnowParticleHandler : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ParameterName;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform LightCentre;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material mat;

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0xA68A68", Offset = "0xA68A68", VA = "0xA68A68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0xA68B38", Offset = "0xA68B38", VA = "0xA68B38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0xA68B3C", Offset = "0xA68B3C", VA = "0xA68B3C")]
	public SnowParticleHandler()
	{
	}
}
[Token(Token = "0x200018E")]
public enum CustomerType
{
	[Token(Token = "0x4000AA3")]
	CustomerNormal,
	[Token(Token = "0x4000AA4")]
	Rabbit,
	[Token(Token = "0x4000AA5")]
	Picky,
	[Token(Token = "0x4000AA6")]
	Royal,
	[Token(Token = "0x4000AA7")]
	Werewolf,
	[Token(Token = "0x4000AA8")]
	Jester,
	[Token(Token = "0x4000AA9")]
	Thief,
	[Token(Token = "0x4000AAA")]
	CustomerPerfectionTutorial,
	[Token(Token = "0x4000AAB")]
	FinalBossKing,
	[Token(Token = "0x4000AAC")]
	FinalBossQueen,
	[Token(Token = "0x4000AAD")]
	Bear,
	[Token(Token = "0x4000AAE")]
	Reindeer
}
[Token(Token = "0x200018F")]
[CreateAssetMenu(fileName = "NewCustomer", menuName = "Customers/Customer")]
public class CustomerData : ScriptableObject
{
	[Token(Token = "0x2000190")]
	public enum RequirementFeedback
	{
		[Token(Token = "0x4000ABD")]
		Pass,
		[Token(Token = "0x4000ABE")]
		NeedsPerfectGrade,
		[Token(Token = "0x4000ABF")]
		NoRequirements
	}

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CustomerType type;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int waitTime;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int coinTip;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool requirePerfectGrade;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	[FormerlySerializedAs("displayShortTimeWarning")]
	public bool limitGrillAmount;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool causesRoyalFail;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
	public bool hugeSandwich;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool obfuscatesIngredients;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool stealsIngredients;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CustomerVisual[] prefabs;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture customerPlateTexture;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int customerPlateTextureArrayIndex;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite goalServePerfectToIcon;

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0xA68B44", Offset = "0xA68B44", VA = "0xA68B44")]
	public CustomerData()
	{
	}
}
[Token(Token = "0x2000191")]
public class CustomerDeliveryPoints : SingleInstanceBehavior<CustomerDeliveryPoints>
{
	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0xA68B4C", Offset = "0xA68B4C", VA = "0xA68B4C")]
	public Vector3 GetDeliveryPoint(int customerSlotIndex)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0xA68B80", Offset = "0xA68B80", VA = "0xA68B80")]
	public CustomerDeliveryPoints()
	{
	}
}
[Token(Token = "0x2000192")]
[CreateAssetMenu(fileName = "NewCustomerList", menuName = "Customers/CustomerList")]
public class CustomerList : ScriptableObject
{
	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<CustomerData> customerDataList;

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0xA68BEC", Offset = "0xA68BEC", VA = "0xA68BEC")]
	public void Verify()
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0xA68E20", Offset = "0xA68E20", VA = "0xA68E20")]
	public CustomerList()
	{
	}
}
[Token(Token = "0x2000193")]
public class CustomerRegistry : SingleInstanceBehavior<CustomerRegistry>
{
	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CustomerList customerList;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<CustomerType, CustomerVisual[]> customersTypes;

	[Token(Token = "0x17000162")]
	public Dictionary<CustomerType, CustomerData> CustomerTypeToData
	{
		[Token(Token = "0x6000A91")]
		[Address(RVA = "0xA68E28", Offset = "0xA68E28", VA = "0xA68E28")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A92")]
		[Address(RVA = "0xA68E30", Offset = "0xA68E30", VA = "0xA68E30")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0xA68E38", Offset = "0xA68E38", VA = "0xA68E38", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0xA68F9C", Offset = "0xA68F9C", VA = "0xA68F9C")]
	public CustomerVisual GetCustomerVisuals(CustomerType customerType)
	{
		return null;
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0xA690C8", Offset = "0xA690C8", VA = "0xA690C8")]
	public CustomerData.RequirementFeedback PlatePassesRequirements(CustomerType customerType, PlateScoring.Grade plateGrade)
	{
		return default(CustomerData.RequirementFeedback);
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0xA6914C", Offset = "0xA6914C", VA = "0xA6914C")]
	public CustomerData GetCustomerData(CustomerType customerType)
	{
		return null;
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0xA691A4", Offset = "0xA691A4", VA = "0xA691A4")]
	public bool CustomerCausesRoyalFail(CustomerType customerType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0xA69208", Offset = "0xA69208", VA = "0xA69208")]
	public bool CustomerSteals(CustomerType customerType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0xA6926C", Offset = "0xA6926C", VA = "0xA6926C")]
	public int GetCustomerTip(CustomerType customerType)
	{
		return default(int);
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0xA692D0", Offset = "0xA692D0", VA = "0xA692D0")]
	public CustomerRegistry()
	{
	}
}
[Token(Token = "0x2000194")]
public class CustomerVisual : NetworkedBehaviour
{
	[Token(Token = "0x2000195")]
	[CompilerGenerated]
	private sealed class <ThiefStealingAnimationCoroutine>d__60 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CustomerVisual <>4__this;

		[Token(Token = "0x17000167")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AB9")]
			[Address(RVA = "0xA6A748", Offset = "0xA6A748", VA = "0xA6A748", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000168")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ABB")]
			[Address(RVA = "0xA6A790", Offset = "0xA6A790", VA = "0xA6A790", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0xA6A3FC", Offset = "0xA6A3FC", VA = "0xA6A3FC")]
		[DebuggerHidden]
		public <ThiefStealingAnimationCoroutine>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0xA6A67C", Offset = "0xA6A67C", VA = "0xA6A67C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0xA6A680", Offset = "0xA6A680", VA = "0xA6A680", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0xA6A750", Offset = "0xA6A750", VA = "0xA6A750", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool isLeavingBacking;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[Header("References")]
	private Renderer myRenderer;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[Header("Settings")]
	private Vector3 positionOffset;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture[] textureVariants;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Vector3 rotationOffset;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float fadeInTime;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private bool isFemale;

	[Token(Token = "0x4000ACC")]
	private const float thiefStealAnimationPadding = 1.5f;

	[Token(Token = "0x4000ACD")]
	private const float hitAnimationVelocityThreshold = 5f;

	[Token(Token = "0x4000ACE")]
	private const float hitLightAnimationVelocityThreshold = 2f;

	[Token(Token = "0x4000ACF")]
	private const float hitCooldown = 0.1f;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int orderID;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float hitCooldownTimer;

	[Token(Token = "0x4000AD2")]
	private const string triggerReactionNotPerfect = "reactionNotPerfect";

	[Token(Token = "0x4000AD3")]
	private const string triggerReactionPerfect = "reactionPerfect";

	[Token(Token = "0x4000AD4")]
	private const string triggerLeaving = "leaving";

	[Token(Token = "0x4000AD5")]
	private const string triggerHit = "hit";

	[Token(Token = "0x4000AD6")]
	private const string triggerLightHit = "lightHit";

	[Token(Token = "0x4000AD7")]
	private const string triggerStealEntry = "stealingEntry";

	[Token(Token = "0x4000AD8")]
	private const string triggerStealExit = "stealingExit";

	[Token(Token = "0x4000AD9")]
	private const string triggerObscureIngredient = "obscuringRecipe";

	[Token(Token = "0x4000ADA")]
	private const string grabbableTag = "Grabbable";

	[Token(Token = "0x4000ADB")]
	private const string propertyMainText = "_MainTex";

	[Token(Token = "0x4000ADC")]
	private const string propertyFadeRate = "_FadeRate";

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string[] allSharedTriggers;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private CustomerType customerType;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool inIdleAnimation;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Animator animator;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private MaterialPropertyBlock propertyBlock;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Action OnCustomerFinishedEating;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private WaitForSeconds thiefStealAnimationTime;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private CustomerEatAnimation eatBehaviours;

	[Token(Token = "0x17000163")]
	public bool IsFemale
	{
		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0xA6938C", Offset = "0xA6938C", VA = "0xA6938C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000164")]
	public bool IsServed
	{
		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0xA69394", Offset = "0xA69394", VA = "0xA69394")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0xA6939C", Offset = "0xA6939C", VA = "0xA6939C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000165")]
	public bool IsLeaving
	{
		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0xA693A8", Offset = "0xA693A8", VA = "0xA693A8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0xA693B0", Offset = "0xA693B0", VA = "0xA693B0")]
		set
		{
		}
	}

	[Token(Token = "0x17000166")]
	public Collider VisualCollider
	{
		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0xA694E8", Offset = "0xA694E8", VA = "0xA694E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0xA69530", Offset = "0xA69530", VA = "0xA69530")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AA2")]
	private T GetStateMachineBehaviour<T>() where T : StateMachineBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0xA69800", Offset = "0xA69800", VA = "0xA69800")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0xA69DA0", Offset = "0xA69DA0", VA = "0xA69DA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0xA69DD4", Offset = "0xA69DD4", VA = "0xA69DD4")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0xA69474", Offset = "0xA69474", VA = "0xA69474")]
	public void SetTrigger(string trigger)
	{
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0xA69F60", Offset = "0xA69F60", VA = "0xA69F60")]
	public void PlayReactionAndEat(PlateScoring.Grade reaction)
	{
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0xA6A0A0", Offset = "0xA6A0A0", VA = "0xA6A0A0")]
	public void TimeOutCustomerReaction()
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0xA69D84", Offset = "0xA69D84", VA = "0xA69D84")]
	public void SlowAnimation(float speed)
	{
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0xA6A0C4", Offset = "0xA6A0C4", VA = "0xA6A0C4")]
	public void ResumeAnimation()
	{
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0xA6A0E4", Offset = "0xA6A0E4", VA = "0xA6A0E4")]
	private void OnLeavingUpdate(float normalizedTime)
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0xA6A174", Offset = "0xA6A174", VA = "0xA6A174")]
	public void HasLeft()
	{
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0xA6A20C", Offset = "0xA6A20C", VA = "0xA6A20C")]
	private void OnCustomerEatAnimationComplete()
	{
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0xA6A238", Offset = "0xA6A238", VA = "0xA6A238")]
	public void SetOncustomerEatenCallback(Action onCustomerEatenCallback)
	{
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0xA6A0E8", Offset = "0xA6A0E8", VA = "0xA6A0E8")]
	private void SetOcclusion(float newValue)
	{
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0xA6A240", Offset = "0xA6A240", VA = "0xA6A240")]
	public void OnMyPlateDestroyed()
	{
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0xA6A374", Offset = "0xA6A374", VA = "0xA6A374")]
	public void ThiefStealingAnimation()
	{
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0xA6A394", Offset = "0xA6A394", VA = "0xA6A394")]
	[IteratorStateMachine(typeof(<ThiefStealingAnimationCoroutine>d__60))]
	private IEnumerator ThiefStealingAnimationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0xA6A424", Offset = "0xA6A424", VA = "0xA6A424")]
	public void JesterObscuringAnimation()
	{
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0xA6A47C", Offset = "0xA6A47C", VA = "0xA6A47C")]
	public CustomerVisual()
	{
	}
}
[Token(Token = "0x2000196")]
public class CustomerEatAnimation : StateMachineBehaviour
{
	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action OnAnimationComplete;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action OnLeaveEatAnimation;

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0xA6A798", Offset = "0xA6A798", VA = "0xA6A798", Slot = "5")]
	public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0xA6A7E8", Offset = "0xA6A7E8", VA = "0xA6A7E8", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0xA6A838", Offset = "0xA6A838", VA = "0xA6A838", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0xA6A854", Offset = "0xA6A854", VA = "0xA6A854")]
	public CustomerEatAnimation()
	{
	}
}
[Token(Token = "0x2000197")]
public class CustomerIdleAnimationState : StateMachineBehaviour
{
	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action OnIdleEnter;

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0xA6A85C", Offset = "0xA6A85C", VA = "0xA6A85C", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0xA6A8A8", Offset = "0xA6A8A8", VA = "0xA6A8A8")]
	public CustomerIdleAnimationState()
	{
	}
}
[Token(Token = "0x2000198")]
public class CustomerLeaveAnimation : StateMachineBehaviour
{
	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve leaveFadeCurve;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action<float> OnLeavingUpdate;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action OnAnimationComplete;

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0xA6A8B0", Offset = "0xA6A8B0", VA = "0xA6A8B0", Slot = "5")]
	public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0xA6A954", Offset = "0xA6A954", VA = "0xA6A954")]
	public CustomerLeaveAnimation()
	{
	}
}
[Token(Token = "0x2000199")]
[CreateAssetMenu]
public class CustomHandPoseList : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x200019A")]
	public struct HandPoseStruct
	{
		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public CookoutCustomHandPose handPose;

		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform poseL;

		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform poseR;
	}

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<HandPoseStruct> handPoses;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<HandPoseStruct> handPosesCookout;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<CookoutCustomHandPose, HandPoseStruct> poseDictionaryOculus;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<CookoutCustomHandPose, HandPoseStruct> poseDictionaryCookout;

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0xA6A988", Offset = "0xA6A988", VA = "0xA6A988")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0xA6AC30", Offset = "0xA6AC30", VA = "0xA6AC30")]
	public Transform CalcOculusAvatarPoseTransform(CookoutHandedness hand, CookoutCustomHandPose key)
	{
		return null;
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0xA6ACD4", Offset = "0xA6ACD4", VA = "0xA6ACD4")]
	public Transform CalcCookoutAvatarPoseTransform(CookoutHandedness hand, CookoutCustomHandPose key)
	{
		return null;
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0xA6AD78", Offset = "0xA6AD78", VA = "0xA6AD78")]
	public CustomHandPoseList()
	{
	}
}
[Token(Token = "0x200019C")]
public class DebugCustomGripHandler : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Grabbable masterObject;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Grabbable mirrorObject;

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0xA6AEBC", Offset = "0xA6AEBC", VA = "0xA6AEBC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0xA6B0F4", Offset = "0xA6B0F4", VA = "0xA6B0F4")]
	private void ForceHandsToStayActive(Transform handRenderer)
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0xA6B0F8", Offset = "0xA6B0F8", VA = "0xA6B0F8")]
	public DebugCustomGripHandler()
	{
	}
}
[Token(Token = "0x200019D")]
public class DebugLoadLauncher : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0xA6B100", Offset = "0xA6B100", VA = "0xA6B100")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0xA6B16C", Offset = "0xA6B16C", VA = "0xA6B16C")]
	public DebugLoadLauncher()
	{
	}
}
[Token(Token = "0x200019E")]
public class DebugMenu : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0xA6B174", Offset = "0xA6B174", VA = "0xA6B174")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0xA6B1CC", Offset = "0xA6B1CC", VA = "0xA6B1CC")]
	public DebugMenu()
	{
	}
}
[Token(Token = "0x200019F")]
public class DebugNonVRCamera : SingleInstanceBehavior<DebugNonVRCamera>
{
	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject cameraPrefab;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector3 pos;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private Vector3 rot;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject cam;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AudioListener audioListenerVR;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Quaternion quaternion;

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0xA6B1D4", Offset = "0xA6B1D4", VA = "0xA6B1D4", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0xA6B298", Offset = "0xA6B298", VA = "0xA6B298")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0xA6B2C0", Offset = "0xA6B2C0", VA = "0xA6B2C0")]
	private void SpawnNonVRCamera()
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0xA6B3E4", Offset = "0xA6B3E4", VA = "0xA6B3E4")]
	public void ToggleCamera(bool VRModeOn)
	{
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0xA6B498", Offset = "0xA6B498", VA = "0xA6B498")]
	public DebugNonVRCamera()
	{
	}
}
[Token(Token = "0x20001A0")]
public class ErrorDisplayer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject errorDisplayerPrefab;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 offsetFromCamera;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool showInEditor;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject errorDisplayer;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TextMeshPro errorText;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<string> errorList;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isListening;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CookoutInput input;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Camera mainCamera;

	[Token(Token = "0x4000B0B")]
	private const int errorSaveCount = 10;

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0xA6B518", Offset = "0xA6B518", VA = "0xA6B518")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0xA6B6F8", Offset = "0xA6B6F8", VA = "0xA6B6F8")]
	private void OnLog(string condition, string stackTrace, LogType type)
	{
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0xA6B848", Offset = "0xA6B848", VA = "0xA6B848")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0xA6B950", Offset = "0xA6B950", VA = "0xA6B950")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0xA6BA6C", Offset = "0xA6BA6C", VA = "0xA6BA6C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0xA6BB00", Offset = "0xA6BB00", VA = "0xA6BB00")]
	public ErrorDisplayer()
	{
	}
}
[Token(Token = "0x20001A1")]
public class HandDebugMenu : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshPro menuHeader;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshPro logNameText;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Main Game Buttons")]
	[SerializeField]
	private PokeButton UnlockAllButton;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private PokeButton lockAllButton;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private PokeButton foveatedButton;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TextMeshPro foveatedButtonText;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private PokeButton finishRoundInputButton;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private TextMeshPro finishRoundInputText;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private PokeButton finishRoundButton;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private PokeButton autoHoldButton;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private PokeButton grillPowerUpButton;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private PokeButton sinkPowerUpButton;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private PokeButton spawnBot;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private PokeButton spawnAvatar;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private PokeButton equipWorstCase;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private PokeButton ingredientsWorstCase;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private PokeButton toggleIndoorCabin;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private PokeButton toggleEnvironment;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private PokeButton returnToLobby;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private PokeButton disableCamera;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private PokeButton reduceRendering;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private PokeButton textureResButton;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private TextMeshPro textureResButtonText;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private PokeButton unlockUpToEndless;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private PokeButton increaseIngredientCap;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private PokeButton decreaseIngredientCap;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private TextMeshPro ingredientCap;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private TextMeshPro currentLocale;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private PokeButton changeLocale;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private PokeButton toggleEcho;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private PokeButton debugVoIP;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private PokeButton firePerformanceTest;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private PokeButton firePerformanceTest2;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private PokeButton respawnPlayerVoIP;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private PokeButton cycleIngredients;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private PokeButton addRandomIngredient;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private PokeButton addBaguetteIngredient;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[Header("Launcher Buttons")]
	[SerializeField]
	private PokeButton resetIntroButton;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private PokeButton CyclePopup;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	[Header("Always Showing Buttons")]
	private PokeButton uploadLogButton;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	[Header("Console log")]
	private TextMeshPro consoleLogText;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private bool showStackTrace;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private TextMeshPro consolePageText;

	[Token(Token = "0x17000169")]
	public static HandDebugMenu CurrentHandDebugMenu
	{
		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0xA6BB80", Offset = "0xA6BB80", VA = "0xA6BB80")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0xA6BBC8", Offset = "0xA6BBC8", VA = "0xA6BBC8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0xA6BC14", Offset = "0xA6BC14", VA = "0xA6BC14")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0xA6BC80", Offset = "0xA6BC80", VA = "0xA6BC80")]
	public HandDebugMenu()
	{
	}
}
[Token(Token = "0x20001A2")]
public class InputDebug : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TMP_Text text;

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0xA6BC88", Offset = "0xA6BC88", VA = "0xA6BC88")]
	private void DisplayUsage(StringBuilder sb, UnityEngine.XR.InputDevice device, InputFeatureUsage<bool> usage, string name)
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0xA6BD70", Offset = "0xA6BD70", VA = "0xA6BD70")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0xA6C0CC", Offset = "0xA6C0CC", VA = "0xA6C0CC")]
	public InputDebug()
	{
	}
}
[Token(Token = "0x20001A3")]
public class InventoryButtons : SingleInstanceBehavior<InventoryButtons>
{
	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] buttonActiveGO;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject[] buttonInactiveGO;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform[] buttons;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PokeButton[] pokeButtons;

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0xA6C0D4", Offset = "0xA6C0D4", VA = "0xA6C0D4", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0xA6C21C", Offset = "0xA6C21C", VA = "0xA6C21C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0xA6C450", Offset = "0xA6C450", VA = "0xA6C450")]
	public Transform GetClosestInventoryButton(int playerPositionIndex)
	{
		return null;
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0xA6C480", Offset = "0xA6C480", VA = "0xA6C480")]
	public void SetInventoryButtonsActive(bool isActive)
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0xA6C54C", Offset = "0xA6C54C", VA = "0xA6C54C")]
	public InventoryButtons()
	{
	}
}
[Token(Token = "0x20001A5")]
public class LogSender : SingleInstanceBehavior<LogSender>
{
	[Token(Token = "0x20001A6")]
	[CompilerGenerated]
	private sealed class <UploadApplicationLog>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LogSender <>4__this;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string forcedLogName;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <request>5__2;

		[Token(Token = "0x1700016A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AFF")]
			[Address(RVA = "0xA6E38C", Offset = "0xA6E38C", VA = "0xA6E38C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B01")]
			[Address(RVA = "0xA6E3D4", Offset = "0xA6E3D4", VA = "0xA6E3D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0xA6D8C4", Offset = "0xA6D8C4", VA = "0xA6D8C4")]
		[DebuggerHidden]
		public <UploadApplicationLog>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0xA6D958", Offset = "0xA6D958", VA = "0xA6D958", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0xA6D974", Offset = "0xA6D974", VA = "0xA6D974", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0xA6E2DC", Offset = "0xA6E2DC", VA = "0xA6E2DC")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0xA6E394", Offset = "0xA6E394", VA = "0xA6E394", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MemoryStream stream;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private StreamWriter writer;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool seenErrorSinceLastReset;

	[Token(Token = "0x4000B42")]
	public const string APPLICATION_QUIT_PROPERLY = "APPLICATION_QUIT_PROPERLY";

	[Token(Token = "0x4000B43")]
	public const string LAST_SEEN_ERROR = "LAST_SEEN_ERROR";

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0xA6C5D4", Offset = "0xA6C5D4", VA = "0xA6C5D4", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0xA6CD58", Offset = "0xA6CD58", VA = "0xA6CD58")]
	private void SetupStream()
	{
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0xA6CF90", Offset = "0xA6CF90", VA = "0xA6CF90")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0xA6CFDC", Offset = "0xA6CFDC", VA = "0xA6CFDC")]
	public MemoryStream GetStream()
	{
		return null;
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0xA6CFE4", Offset = "0xA6CFE4", VA = "0xA6CFE4")]
	private void OnLogMessage(string condition, string stacktrace, LogType type)
	{
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0xA6D410", Offset = "0xA6D410", VA = "0xA6D410")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0xA6D46C", Offset = "0xA6D46C", VA = "0xA6D46C")]
	public void SendLogsToLogStorageIfErrorOccurred()
	{
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0xA6CE24", Offset = "0xA6CE24", VA = "0xA6CE24")]
	private void TrackLatestSeenErrorAsCrashReport(string crashMessage)
	{
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0xA6D808", Offset = "0xA6D808", VA = "0xA6D808")]
	private void SendLogsToLogStorage([Optional] string logName)
	{
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0xA6D8A0", Offset = "0xA6D8A0", VA = "0xA6D8A0")]
	public void ForceLogUpload()
	{
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0xA6D82C", Offset = "0xA6D82C", VA = "0xA6D82C")]
	[IteratorStateMachine(typeof(<UploadApplicationLog>d__15))]
	private IEnumerator UploadApplicationLog([Optional] string forcedLogName)
	{
		return null;
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0xA6D604", Offset = "0xA6D604", VA = "0xA6D604")]
	public string GetLogfileName()
	{
		return null;
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0xA6D8EC", Offset = "0xA6D8EC", VA = "0xA6D8EC")]
	public LogSender()
	{
	}
}
[Token(Token = "0x20001A7")]
public class NetworkStats : SingleInstanceNetworkedBehavior<NetworkStats>
{
	[Token(Token = "0x20001A8")]
	private struct AvatarTrafficStats
	{
		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float time;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int numBytes;
	}

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<AvatarTrafficStats> sentBytes;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<AvatarTrafficStats> receivedBytes;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastDebugOutput;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int lastIncomingBytes;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int lastOutgoingBytes;

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0xA6E3DC", Offset = "0xA6E3DC", VA = "0xA6E3DC")]
	public void Start()
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0xA6E3E8", Offset = "0xA6E3E8", VA = "0xA6E3E8")]
	public void Update()
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0xA6E72C", Offset = "0xA6E72C", VA = "0xA6E72C")]
	public void SentAvatarData(int numBytes)
	{
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0xA6E7F4", Offset = "0xA6E7F4", VA = "0xA6E7F4")]
	public void ReceivedAvatarData(int numBytes)
	{
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0xA6E8BC", Offset = "0xA6E8BC", VA = "0xA6E8BC")]
	public NetworkStats()
	{
	}
}
[Token(Token = "0x20001A9")]
[CreateAssetMenu(fileName = "PrefabRegistry", menuName = "RG/Prefab Registry")]
public class PrefabRegistry : ScriptableObject
{
	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] prefabs;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] particlePrefabs;

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0xA6E994", Offset = "0xA6E994", VA = "0xA6E994")]
	public PrefabRegistry()
	{
	}
}
[Token(Token = "0x20001AA")]
public class EndlessMapScoreDisplayer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshPro highScoreText;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshPro highScoreTextBack;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator anim;

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0xA6E99C", Offset = "0xA6E99C", VA = "0xA6E99C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0xA6E9F4", Offset = "0xA6E9F4", VA = "0xA6E9F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0xA6EB9C", Offset = "0xA6EB9C", VA = "0xA6EB9C")]
	public void HideText()
	{
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0xA6E9FC", Offset = "0xA6E9FC", VA = "0xA6E9FC")]
	internal void UpdateAndShowText(bool withBounceEffect = false)
	{
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0xA6EC24", Offset = "0xA6EC24", VA = "0xA6EC24")]
	public EndlessMapScoreDisplayer()
	{
	}
}
[Token(Token = "0x20001AB")]
public class EndlessMode : SingleInstanceNetworkedBehavior<EndlessMode>, IPunObservable
{
	[Token(Token = "0x20001AC")]
	public delegate void EndlessModeStartHandler();

	[Token(Token = "0x20001AD")]
	public delegate void EndlessModeBreak();

	[Token(Token = "0x20001AE")]
	public delegate void EndlessModeStopHandler();

	[Token(Token = "0x20001AF")]
	private enum State
	{
		[Token(Token = "0x4000B70")]
		Inactive,
		[Token(Token = "0x4000B71")]
		Running,
		[Token(Token = "0x4000B72")]
		Complete
	}

	[Token(Token = "0x20001B0")]
	[CompilerGenerated]
	private sealed class <StartEndlessMode>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EndlessMode <>4__this;

		[Token(Token = "0x1700016F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B39")]
			[Address(RVA = "0xA72090", Offset = "0xA72090", VA = "0xA72090", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000170")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B3B")]
			[Address(RVA = "0xA720D8", Offset = "0xA720D8", VA = "0xA720D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0xA6F8F0", Offset = "0xA6F8F0", VA = "0xA6F8F0")]
		[DebuggerHidden]
		public <StartEndlessMode>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0xA71D0C", Offset = "0xA71D0C", VA = "0xA71D0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0xA71D10", Offset = "0xA71D10", VA = "0xA71D10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0xA72098", Offset = "0xA72098", VA = "0xA72098", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int perfectsServedThreshold;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public EndlessRewardList endlessRewardList;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private int lifeCount;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private int serveCountForPause;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float timeStopDuration;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private LevelData endlessLevelData;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private State state;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int perfectsServed;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int servedCount;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool breakActiveBacking;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int hugeSandwichStackSize;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private CookingGameState cookingGameState;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private CookingRound cookingRound;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private EndlessModeRewardSpawner endlessModeRewardSpawner;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private EndlessWaveDisplayer endlessWaveDisplayer;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private CookingRecipeFactory recipeFactory;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private SaveManager saveManager;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private CookingNetworkManager cookingNetworkManager;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private TimeSlowdownHandler timeSlowdownHandler;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private RewardBubbleSpawner rewardBubbleSpawner;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private EnvironmentLoader environmentLoader;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private EndlessModeWaveSelecter waveSelecter;

	[Token(Token = "0x1700016C")]
	public bool IsRunning
	{
		[Token(Token = "0x6000B13")]
		[Address(RVA = "0xA6EFD4", Offset = "0xA6EFD4", VA = "0xA6EFD4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700016D")]
	private bool BreakActive
	{
		[Token(Token = "0x6000B14")]
		[Address(RVA = "0xA6EFE4", Offset = "0xA6EFE4", VA = "0xA6EFE4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B15")]
		[Address(RVA = "0xA6EFEC", Offset = "0xA6EFEC", VA = "0xA6EFEC")]
		set
		{
		}
	}

	[Token(Token = "0x1700016E")]
	private float BreakElapsedTime
	{
		[Token(Token = "0x6000B16")]
		[Address(RVA = "0xA6F010", Offset = "0xA6F010", VA = "0xA6F010")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B17")]
		[Address(RVA = "0xA6F018", Offset = "0xA6F018", VA = "0xA6F018")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x14000011")]
	public event EndlessModeStartHandler OnEndlessStart
	{
		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0xA6EC2C", Offset = "0xA6EC2C", VA = "0xA6EC2C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0xA6ECC8", Offset = "0xA6ECC8", VA = "0xA6ECC8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public event EndlessModeBreak OnEndlessModeBreak
	{
		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0xA6ED64", Offset = "0xA6ED64", VA = "0xA6ED64")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000B10")]
		[Address(RVA = "0xA6EE00", Offset = "0xA6EE00", VA = "0xA6EE00")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000013")]
	public event EndlessModeStopHandler OnEndlessStop
	{
		[Token(Token = "0x6000B11")]
		[Address(RVA = "0xA6EE9C", Offset = "0xA6EE9C", VA = "0xA6EE9C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000B12")]
		[Address(RVA = "0xA6EF38", Offset = "0xA6EF38", VA = "0xA6EF38")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0xA6F020", Offset = "0xA6F020", VA = "0xA6F020", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0xA6F098", Offset = "0xA6F098", VA = "0xA6F098")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0xA6F7E4", Offset = "0xA6F7E4", VA = "0xA6F7E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0xA6F888", Offset = "0xA6F888", VA = "0xA6F888")]
	[IteratorStateMachine(typeof(<StartEndlessMode>d__47))]
	public IEnumerator StartEndlessMode()
	{
		return null;
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0xA6F918", Offset = "0xA6F918", VA = "0xA6F918")]
	private void UpdateState(State newState)
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0xA6F9AC", Offset = "0xA6F9AC", VA = "0xA6F9AC")]
	public void OnPlateHandedIn(bool isPerfect)
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0xA6FBDC", Offset = "0xA6FBDC", VA = "0xA6FBDC")]
	[PunRPC]
	private void EndlessModeActivateBreakRPC(bool spawnRewards)
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0xA70060", Offset = "0xA70060", VA = "0xA70060")]
	public void ForceQuit()
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0xA6F970", Offset = "0xA6F970", VA = "0xA6F970")]
	public void OnEndlessFinished()
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0xA70250", Offset = "0xA70250", VA = "0xA70250")]
	public Recipe GetNewRecipe(CustomerType customer)
	{
		return default(Recipe);
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0xA70904", Offset = "0xA70904", VA = "0xA70904")]
	public CustomerType GetNextCustomerType()
	{
		return default(CustomerType);
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0xA70B4C", Offset = "0xA70B4C", VA = "0xA70B4C")]
	public void OnRoundEnded()
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0xA70DE4", Offset = "0xA70DE4", VA = "0xA70DE4")]
	[PunRPC]
	public void OnNewEndlessScoreRPC(int clearedCustomers)
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0xA710A0", Offset = "0xA710A0", VA = "0xA710A0")]
	public void OnPlayerDisconnected()
	{
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0xA715A4", Offset = "0xA715A4", VA = "0xA715A4")]
	public void OnPlayerMoved()
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0xA7169C", Offset = "0xA7169C", VA = "0xA7169C")]
	public void AbortEndlessMode()
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0xA71780", Offset = "0xA71780", VA = "0xA71780", Slot = "6")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0xA71988", Offset = "0xA71988", VA = "0xA71988")]
	public EndlessMode()
	{
	}
}
[Token(Token = "0x20001B1")]
public class EndlessModeNewHighScoreEffect : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Particles")]
	[SerializeField]
	private ParticleSystem particles;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[Header("Animated Text")]
	private GameObject newHighScoreText;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float textFlyTime;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float textTargetHeight;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float lingerTime;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 textStartPosition;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 textStartScale;

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0xA720E0", Offset = "0xA720E0", VA = "0xA720E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0xA7216C", Offset = "0xA7216C", VA = "0xA7216C")]
	public void Show(float particlesAppearDelay, float textAppearDelay)
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0xA72390", Offset = "0xA72390", VA = "0xA72390")]
	public EndlessModeNewHighScoreEffect()
	{
	}
}
[Token(Token = "0x20001B3")]
public class EndlessModeResultDisplayer : SingleInstanceNetworkedBehavior<EndlessModeResultDisplayer>, IPunObservable
{
	[Token(Token = "0x20001B4")]
	[CompilerGenerated]
	private sealed class <ShowResults>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EndlessModeResultDisplayer <>4__this;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timeToMoveToMap>5__2;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <windowPositionGlobal>5__3;

		[Token(Token = "0x17000171")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B53")]
			[Address(RVA = "0xA7372C", Offset = "0xA7372C", VA = "0xA7372C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000172")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B55")]
			[Address(RVA = "0xA73774", Offset = "0xA73774", VA = "0xA73774", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0xA7294C", Offset = "0xA7294C", VA = "0xA7294C")]
		[DebuggerHidden]
		public <ShowResults>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0xA72F38", Offset = "0xA72F38", VA = "0xA72F38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0xA72F3C", Offset = "0xA72F3C", VA = "0xA72F3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0xA73734", Offset = "0xA73734", VA = "0xA73734", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshPro customersServedCount;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject magicTrail;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ParticleSystem scoreParticles;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Startup")]
	[SerializeField]
	private float trailStartDelay;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float scaleUpWindowDisplayDelay;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float delayBeforeScoreReveal;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Header("Magic Trail")]
	[SerializeField]
	private Vector3 trailStartPosition;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float upToWindowTime;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private Vector3 trailWindowPosition;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float flyToMapTime;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private EndlessMapScoreDisplayer zoomedInMapScoreDisplayer;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	[Header("Personal High Score Effects")]
	private float textAppearDelay;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private float particlesAppearDelay;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private EndlessModeNewHighScoreEffect[] personalHighScoreEffects;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool shouldShow;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject windowDisplay;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int customersCleared;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool newPersonalHighScore;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private CookingRound cookingRound;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Map map;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private GameObject visualsRoot;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Coroutine showRoutine;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private WaitForSeconds longDelay;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private WaitForSeconds mediumDelay;

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0xA725EC", Offset = "0xA725EC", VA = "0xA725EC", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0xA726AC", Offset = "0xA726AC", VA = "0xA726AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0xA71048", Offset = "0xA71048", VA = "0xA71048")]
	public void ShowLocally(int newScore, bool newPersonalHighScore)
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0xA728E4", Offset = "0xA728E4", VA = "0xA728E4")]
	[IteratorStateMachine(typeof(<ShowResults>d__27))]
	private IEnumerator ShowResults()
	{
		return null;
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0xA72974", Offset = "0xA72974", VA = "0xA72974")]
	[PunRPC]
	private void ShowEndlessHighscoreEffectRPC(int positionIndex)
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0xA729B0", Offset = "0xA729B0", VA = "0xA729B0")]
	private void OnCountdownStarted()
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0xA72B14", Offset = "0xA72B14", VA = "0xA72B14")]
	private void OnConfirmModeStart()
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0xA729B4", Offset = "0xA729B4", VA = "0xA729B4")]
	public void HideWithDelay()
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0xA72B18", Offset = "0xA72B18", VA = "0xA72B18", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0xA72CA0", Offset = "0xA72CA0", VA = "0xA72CA0", Slot = "6")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0xA72DF0", Offset = "0xA72DF0", VA = "0xA72DF0")]
	public EndlessModeResultDisplayer()
	{
	}
}
[Token(Token = "0x20001B5")]
public class EndlessModeRewardSpawner : SingleInstanceNetworkedBehavior<EndlessModeRewardSpawner>
{
	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform[] spawnAnchors;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject bubblePrefab;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject pickPotionUI;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private int maxPotionCount;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float[] tierOdds;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private ConsumableType[] tier1Consumables;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private ConsumableType[] tier2Consumables;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private ConsumableType[] tier3Consumables;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject potionRackFullNoticePrefab;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject[] locallySpawnedConsumables;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<GameObject> spawnedBubbles;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private CookingNetworkManager cookingNetworkManager;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private ConsumableSpawner consumableSpawner;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject potionRackFullNoticeGO;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Transform potionRackFullNoticeT;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private ConsumableType[][] consumableTiers;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<ConsumableType> selectedTierConsumables;

	[Token(Token = "0x17000173")]
	public bool potionSpawned
	{
		[Token(Token = "0x6000B56")]
		[Address(RVA = "0xA7377C", Offset = "0xA7377C", VA = "0xA7377C")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B57")]
		[Address(RVA = "0xA73784", Offset = "0xA73784", VA = "0xA73784")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0xA73790", Offset = "0xA73790", VA = "0xA73790", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0xA73980", Offset = "0xA73980", VA = "0xA73980")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0xA6FD18", Offset = "0xA6FD18", VA = "0xA6FD18")]
	public void OnEndlessModeBreak(bool spawnRewards)
	{
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0xA70090", Offset = "0xA70090", VA = "0xA70090")]
	public void OnEndlessModeFinished()
	{
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0xA73EB8", Offset = "0xA73EB8", VA = "0xA73EB8")]
	public bool PotionRackIsFull()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0xA73FD4", Offset = "0xA73FD4", VA = "0xA73FD4")]
	public int GetEmptySlot()
	{
		return default(int);
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0xA74120", Offset = "0xA74120", VA = "0xA74120")]
	public void OnNewLocalConsumableSpawned(GameObject newConsumable, int slot)
	{
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0xA73B3C", Offset = "0xA73B3C", VA = "0xA73B3C")]
	public void RemoveRewardBubbles()
	{
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0xA73C3C", Offset = "0xA73C3C", VA = "0xA73C3C")]
	private int RandomizePotion(int previousPotion)
	{
		return default(int);
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0xA74198", Offset = "0xA74198", VA = "0xA74198")]
	public void DisplayPotionRackFull(Vector3 position)
	{
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0xA74384", Offset = "0xA74384", VA = "0xA74384")]
	public EndlessModeRewardSpawner()
	{
	}
}
[Token(Token = "0x20001B7")]
public class EndlessModeWaveSelecter : SingleInstanceNetworkedBehavior<EndlessModeWaveSelecter>, IPunObservable
{
	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private EndlessWaveList waveList;

	[Token(Token = "0x4000BB2")]
	private const int customersBeforeWaveSwitch = 10;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, List<EndlessWaveData>> tieredWaveData;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int highestTier;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int currentWaveNumber;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int currentTier;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int endlessWaveDataID;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private EndlessWaveData endlessWaveData;

	[Token(Token = "0x17000174")]
	public GrillRate currentGrillRate
	{
		[Token(Token = "0x6000B65")]
		[Address(RVA = "0xA702F0", Offset = "0xA702F0", VA = "0xA702F0")]
		get
		{
			return default(GrillRate);
		}
	}

	[Token(Token = "0x17000175")]
	public SandwichSizes currentSandwichSizes
	{
		[Token(Token = "0x6000B66")]
		[Address(RVA = "0xA70370", Offset = "0xA70370", VA = "0xA70370")]
		get
		{
			return default(SandwichSizes);
		}
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0xA74584", Offset = "0xA74584", VA = "0xA74584", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0xA70A08", Offset = "0xA70A08", VA = "0xA70A08")]
	public float[] GetCurrentWaveProbability(int customerCount)
	{
		return null;
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0xA71EDC", Offset = "0xA71EDC", VA = "0xA71EDC")]
	public void ResetWaveProgression()
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0xA747FC", Offset = "0xA747FC", VA = "0xA747FC", Slot = "6")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0xA749EC", Offset = "0xA749EC", VA = "0xA749EC")]
	public EndlessModeWaveSelecter()
	{
	}
}
[Token(Token = "0x20001B8")]
public class EndlessRewardDisplay : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001B9")]
	public class UpcomingReward
	{
		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TextMeshPro countNeeded;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SpriteRenderer spriteRenderer;

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0xA74FD4", Offset = "0xA74FD4", VA = "0xA74FD4")]
		public UpcomingReward()
		{
		}
	}

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshPro yourHighScore;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshPro latestRewardCount;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SpriteRenderer latestRewardCheckmark;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private UpcomingReward[] upcomingRewards;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject nextRewardsParent;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject allRewardsClaimedParent;

	[Token(Token = "0x4000BBF")]
	private const int numUpcomingRewardsToDisplay = 4;

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0xA74A68", Offset = "0xA74A68", VA = "0xA74A68")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0xA74A6C", Offset = "0xA74A6C", VA = "0xA74A6C")]
	public void Show()
	{
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0xA74FCC", Offset = "0xA74FCC", VA = "0xA74FCC")]
	public EndlessRewardDisplay()
	{
	}
}
[Token(Token = "0x20001BA")]
[CreateAssetMenu(fileName = "EndlessModeRewardList", menuName = "Endless Mode/RewardList")]
public class EndlessRewardList : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x20001BB")]
	public struct RewardEntry
	{
		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int customerCount;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ItemRewardID rewardID;
	}

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RewardEntry[] rewardList;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool hasSorted;

	[Token(Token = "0x17000176")]
	public RewardEntry[] RewardList
	{
		[Token(Token = "0x6000B70")]
		[Address(RVA = "0xA71024", Offset = "0xA71024", VA = "0xA71024")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0xA74FDC", Offset = "0xA74FDC", VA = "0xA74FDC")]
	public void SortAscending()
	{
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0xA750E4", Offset = "0xA750E4", VA = "0xA750E4")]
	public EndlessRewardList()
	{
	}
}
[Serializable]
[Token(Token = "0x20001BD")]
[CreateAssetMenu(fileName = "NewEndlessWaveData", menuName = "Endless Mode/Endless Wave Data")]
public class EndlessWaveData : ScriptableObject
{
	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float[] customerProbability;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int waveTier;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GrillRate grillRate;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SandwichSizes sandwichSizes;

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0xA75178", Offset = "0xA75178", VA = "0xA75178")]
	public EndlessWaveData()
	{
	}
}
[Token(Token = "0x20001BE")]
[CreateAssetMenu(fileName = "NewEndlessWaveList", menuName = "Endless Mode/Endless Wave List")]
public class EndlessWaveList : ScriptableObject
{
	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<EndlessWaveData> endlessWaveList;

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0xA751D0", Offset = "0xA751D0", VA = "0xA751D0")]
	public EndlessWaveList()
	{
	}
}
[Token(Token = "0x20001BF")]
public class EnvironmentLoader : SingleInstanceNetworkedBehavior<EnvironmentLoader>, IPunObservable
{
	[Token(Token = "0x20001C0")]
	public delegate void EnvironmentChangedHandler();

	[Token(Token = "0x20001C1")]
	[CompilerGenerated]
	private sealed class <ChangeEnvironmentRoutine>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnvironmentLoader <>4__this;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int oldSceneIndex;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int newSceneIndex;

		[Token(Token = "0x1700017B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B91")]
			[Address(RVA = "0xA76070", Offset = "0xA76070", VA = "0xA76070", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B93")]
			[Address(RVA = "0xA760B8", Offset = "0xA760B8", VA = "0xA760B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0xA7576C", Offset = "0xA7576C", VA = "0xA7576C")]
		[DebuggerHidden]
		public <ChangeEnvironmentRoutine>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0xA75B98", Offset = "0xA75B98", VA = "0xA75B98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0xA75B9C", Offset = "0xA75B9C", VA = "0xA75B9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0xA76078", Offset = "0xA76078", VA = "0xA76078", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string[] environments;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string[] questEnvironments;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float blackScreenDurationTime;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Color[] fogColor;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private FogMode[] fogMode;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[Header("Exponential, Exponential Squared")]
	private float[] fogDensity;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[Header("Linear")]
	private float[] fogStart;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float[] fogEnd;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Transform customerLightProbeAnchor;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Transform mainLightProbeAnchor;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private WaitForSeconds blackScreenDuration;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private FadeToBlack fadeToBlack;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PlaySoundResult currentEnvironmentSound;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private PhotonCallbackManager photonCallbackManager;

	[Token(Token = "0x17000177")]
	public bool InTransit
	{
		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0xA75310", Offset = "0xA75310", VA = "0xA75310")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0xA75318", Offset = "0xA75318", VA = "0xA75318")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000178")]
	public int CurrentEnvironmentIndex
	{
		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0xA7532C", Offset = "0xA7532C", VA = "0xA7532C")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0xA75324", Offset = "0xA75324", VA = "0xA75324")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000179")]
	public Transform CustomerLightProbeAnchor
	{
		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0xA75334", Offset = "0xA75334", VA = "0xA75334")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700017A")]
	public Transform MainLightProbeAnchor
	{
		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0xA7533C", Offset = "0xA7533C", VA = "0xA7533C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000014")]
	public event EnvironmentChangedHandler OnEnvironmentChanged
	{
		[Token(Token = "0x6000B78")]
		[Address(RVA = "0xA751D8", Offset = "0xA751D8", VA = "0xA751D8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000B79")]
		[Address(RVA = "0xA75274", Offset = "0xA75274", VA = "0xA75274")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0xA75344", Offset = "0xA75344", VA = "0xA75344", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0xA753E4", Offset = "0xA753E4", VA = "0xA753E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0xA75660", Offset = "0xA75660", VA = "0xA75660")]
	private void OnMasterClientChanged(PhotonPlayer newMaster)
	{
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0xA71EF4", Offset = "0xA71EF4", VA = "0xA71EF4")]
	public void ChangeEnvironment(int newEnvironmentIndex)
	{
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0xA756F0", Offset = "0xA756F0", VA = "0xA756F0")]
	[IteratorStateMachine(typeof(<ChangeEnvironmentRoutine>d__34))]
	private IEnumerator ChangeEnvironmentRoutine(int oldSceneIndex, int newSceneIndex)
	{
		return null;
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0xA75794", Offset = "0xA75794", VA = "0xA75794")]
	private string GetEnvironment(int index)
	{
		return null;
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0xA7582C", Offset = "0xA7582C", VA = "0xA7582C", Slot = "6")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0xA75918", Offset = "0xA75918", VA = "0xA75918", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0xA75A18", Offset = "0xA75A18", VA = "0xA75A18")]
	public EnvironmentLoader()
	{
	}
}
[Token(Token = "0x20001C2")]
public class FadeToBlack : SingleInstanceBehavior<FadeToBlack>
{
	[Token(Token = "0x20001C3")]
	[CompilerGenerated]
	private sealed class <FadeOutRoutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FadeToBlack <>4__this;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action onFadeComplete;

		[Token(Token = "0x1700017F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BA2")]
			[Address(RVA = "0xA764A0", Offset = "0xA764A0", VA = "0xA764A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000180")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BA4")]
			[Address(RVA = "0xA764E8", Offset = "0xA764E8", VA = "0xA764E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0xA7628C", Offset = "0xA7628C", VA = "0xA7628C")]
		[DebuggerHidden]
		public <FadeOutRoutine>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0xA763C4", Offset = "0xA763C4", VA = "0xA763C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0xA763C8", Offset = "0xA763C8", VA = "0xA763C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0xA764A8", Offset = "0xA764A8", VA = "0xA764A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001C4")]
	[CompilerGenerated]
	private sealed class <FadeInRoutine>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FadeToBlack <>4__this;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action onFadeComplete;

		[Token(Token = "0x17000181")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BA8")]
			[Address(RVA = "0xA765C4", Offset = "0xA765C4", VA = "0xA765C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000182")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BAA")]
			[Address(RVA = "0xA7660C", Offset = "0xA7660C", VA = "0xA7660C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0xA76328", Offset = "0xA76328", VA = "0xA76328")]
		[DebuggerHidden]
		public <FadeInRoutine>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0xA764F0", Offset = "0xA764F0", VA = "0xA764F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0xA764F4", Offset = "0xA764F4", VA = "0xA764F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0xA765CC", Offset = "0xA765CC", VA = "0xA765CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Renderer fadeToBlackRenderer;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float fadeSpeed;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MaterialPropertyBlock propertyBlockAlpha;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float fadeAlphaBacking;

	[Token(Token = "0x4000BE8")]
	private const string propertyAlpha = "_Alpha";

	[Token(Token = "0x1700017D")]
	public bool Fading
	{
		[Token(Token = "0x6000B94")]
		[Address(RVA = "0xA760C0", Offset = "0xA760C0", VA = "0xA760C0")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B95")]
		[Address(RVA = "0xA760C8", Offset = "0xA760C8", VA = "0xA760C8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700017E")]
	private float FadeAlpha
	{
		[Token(Token = "0x6000B97")]
		[Address(RVA = "0xA76164", Offset = "0xA76164", VA = "0xA76164")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B96")]
		[Address(RVA = "0xA760D4", Offset = "0xA760D4", VA = "0xA760D4")]
		set
		{
		}
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0xA7616C", Offset = "0xA7616C", VA = "0xA7616C", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0xA7561C", Offset = "0xA7561C", VA = "0xA7561C")]
	public void FadeOutImmediately()
	{
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0xA75FF8", Offset = "0xA75FF8", VA = "0xA75FF8")]
	public void FadeOut([Optional] Action onFadeComplete)
	{
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0xA76218", Offset = "0xA76218", VA = "0xA76218")]
	[IteratorStateMachine(typeof(<FadeOutRoutine>d__15))]
	private IEnumerator FadeOutRoutine(Action onFadeComplete)
	{
		return null;
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0xA76028", Offset = "0xA76028", VA = "0xA76028")]
	public void FadeIn([Optional] Action OnFadeInComplete)
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0xA762B4", Offset = "0xA762B4", VA = "0xA762B4")]
	[IteratorStateMachine(typeof(<FadeInRoutine>d__17))]
	private IEnumerator FadeInRoutine(Action onFadeComplete)
	{
		return null;
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0xA76350", Offset = "0xA76350", VA = "0xA76350")]
	public FadeToBlack()
	{
	}
}
[Token(Token = "0x20001C5")]
public class FinalBossVisuals : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20001C6")]
	public enum Animation
	{
		[Token(Token = "0x4000C0B")]
		Idle,
		[Token(Token = "0x4000C0C")]
		Accept,
		[Token(Token = "0x4000C0D")]
		Eat,
		[Token(Token = "0x4000C0E")]
		NextOne,
		[Token(Token = "0x4000C0F")]
		Win,
		[Token(Token = "0x4000C10")]
		Fail,
		[Token(Token = "0x4000C11")]
		Leave
	}

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isLeavingBacking;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Renderer myRenderer;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Renderer crownRenderer;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float fadeInTime;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private bool isFemale;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MaterialPropertyBlock propertyBlock;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TimeSlowdownHandler timeSlowdown;

	[Token(Token = "0x4000BF9")]
	private const float hitAnimationVelocityThreshold = 5f;

	[Token(Token = "0x4000BFA")]
	private const float hitLightAnimationVelocityThreshold = 2f;

	[Token(Token = "0x4000BFB")]
	private const float hitCooldown = 0.1f;

	[Token(Token = "0x4000BFC")]
	private const string triggerHit = "hit";

	[Token(Token = "0x4000BFD")]
	private const string triggerLightHit = "lightHit";

	[Token(Token = "0x4000BFE")]
	private const string triggerAccept = "reactionPerfect";

	[Token(Token = "0x4000BFF")]
	private const string triggerFail = "reactionNotPerfect";

	[Token(Token = "0x4000C00")]
	private const string triggerLeave = "leaving";

	[Token(Token = "0x4000C01")]
	private const string triggerCelebrateVictory = "celebrateVictory";

	[Token(Token = "0x4000C02")]
	private const string toggleIsFull = "isFull";

	[Token(Token = "0x4000C03")]
	private const string grabbableTag = "Grabbable";

	[Token(Token = "0x4000C04")]
	private const string propertyFadeRate = "_FadeRate";

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly string[] allTriggers;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isFull;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float hitCooldownTimer;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool inIdleAnimation;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool noSlowdown;

	[Token(Token = "0x17000183")]
	private CustomerType CustomerType
	{
		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0xA76614", Offset = "0xA76614", VA = "0xA76614")]
		get
		{
			return default(CustomerType);
		}
	}

	[Token(Token = "0x17000184")]
	public bool IsLeaving
	{
		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0xA76628", Offset = "0xA76628", VA = "0xA76628")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0xA76630", Offset = "0xA76630", VA = "0xA76630")]
		set
		{
		}
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0xA7679C", Offset = "0xA7679C", VA = "0xA7679C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BAF")]
	private T GetStateMachineBehaviour<T>() where T : StateMachineBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0xA76AF8", Offset = "0xA76AF8", VA = "0xA76AF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0xA76D40", Offset = "0xA76D40", VA = "0xA76D40")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0xA76D74", Offset = "0xA76D74", VA = "0xA76D74")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0xA76D14", Offset = "0xA76D14", VA = "0xA76D14")]
	public void SlowAnimation(float speed)
	{
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0xA766FC", Offset = "0xA766FC", VA = "0xA766FC")]
	public void ResumeAnimation()
	{
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0xA76F00", Offset = "0xA76F00", VA = "0xA76F00")]
	private void OnEnterIdleAnimation()
	{
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0xA76F4C", Offset = "0xA76F4C", VA = "0xA76F4C")]
	private void OnLeavingUpdate(float normalizedTime)
	{
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0xA76F50", Offset = "0xA76F50", VA = "0xA76F50")]
	private void SetOcclusion(float newValue)
	{
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0xA76FDC", Offset = "0xA76FDC", VA = "0xA76FDC")]
	public void HasLeft()
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0xA77048", Offset = "0xA77048", VA = "0xA77048")]
	public void FinishedEatingServing()
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0xA76728", Offset = "0xA76728", VA = "0xA76728")]
	public void SetTrigger(string trigger)
	{
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0xA77090", Offset = "0xA77090", VA = "0xA77090")]
	public void PlayReactionAndEat(PlateScoring.Grade reaction, bool finalServing)
	{
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0xA771B0", Offset = "0xA771B0", VA = "0xA771B0")]
	public void OnLevelFailed()
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0xA771D0", Offset = "0xA771D0", VA = "0xA771D0")]
	public void OnLevelComplete()
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0xA77244", Offset = "0xA77244", VA = "0xA77244")]
	public FinalBossVisuals()
	{
	}
}
[Token(Token = "0x20001C7")]
public class FinalLevelHandler : SingleInstanceBehavior<FinalLevelHandler>, IPunObservable
{
	[Token(Token = "0x4000C12")]
	public const int MaxCustomerOnScreen = 3;

	[Token(Token = "0x4000C13")]
	private const int maleIndex = 0;

	[Token(Token = "0x4000C14")]
	private const int femaleIndex = 1;

	[Token(Token = "0x4000C15")]
	private const int bossCount = 2;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly Quaternion rotationOffset;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private int bossMaleServeTargetCount;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private int bossFemaleServeTargetCount;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private CustomerType[] bonusCustomerRotation;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject FinalBossVisualsMale;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject FinalBossVisualsFemale;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform[] bossVisualsAnchors;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int bonusCustomerIndex;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int bonusCustomersServed;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int[] bossServedCount;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int consumablesUsed;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<CustomerType> customersToSpawn;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private CookingRound cookingRound;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private CookingCup cookingCup;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private CookingRecipeFactory recipeFactory;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private CookingGameState gameState;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject[] bossGOs;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private FinalBossVisuals[] bossVisuals;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private StarGoalsHandler goalsHandler;

	[Token(Token = "0x17000185")]
	public int TotalOrders
	{
		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0xA773FC", Offset = "0xA773FC", VA = "0xA773FC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0xA77424", Offset = "0xA77424", VA = "0xA77424", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0xA7746C", Offset = "0xA7746C", VA = "0xA7746C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0xA7792C", Offset = "0xA7792C", VA = "0xA7792C")]
	public bool OnPlateHandedIn(CustomerType customerType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0xA77BC8", Offset = "0xA77BC8", VA = "0xA77BC8")]
	public RecipeIngredient[] GetNewRecipe(out CustomerType customerType)
	{
		return null;
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0xA77AE4", Offset = "0xA77AE4", VA = "0xA77AE4")]
	private void SpawnBonusCustomer()
	{
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0xA77DCC", Offset = "0xA77DCC", VA = "0xA77DCC")]
	public void StartFinalRound()
	{
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0xA77F30", Offset = "0xA77F30", VA = "0xA77F30")]
	private void OnRoundStart()
	{
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0xA781C0", Offset = "0xA781C0", VA = "0xA781C0")]
	public void OnPlateDelivered(CustomerType customer, PlateScoring.Grade grade)
	{
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0xA78260", Offset = "0xA78260", VA = "0xA78260")]
	private void OnGameStateChanged(GameState oldState, GameState newState)
	{
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0xA78400", Offset = "0xA78400", VA = "0xA78400")]
	public int GetCustomerSlot(CustomerType customerType)
	{
		return default(int);
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0xA77A98", Offset = "0xA77A98", VA = "0xA77A98")]
	public bool BossIsFull(bool isFemale)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0xA78420", Offset = "0xA78420", VA = "0xA78420")]
	public void OnTimeSlowdownStart()
	{
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0xA78548", Offset = "0xA78548", VA = "0xA78548")]
	public void OnTimeSlowdownEnd()
	{
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0xA785A4", Offset = "0xA785A4", VA = "0xA785A4")]
	private void OnCupEnd()
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0xA788A0", Offset = "0xA788A0", VA = "0xA788A0")]
	internal void HideBosses()
	{
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0xA7896C", Offset = "0xA7896C", VA = "0xA7896C")]
	private void OnConsumableUsed(ConsumableType type)
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0xA7897C", Offset = "0xA7897C", VA = "0xA7897C", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0xA78C14", Offset = "0xA78C14", VA = "0xA78C14", Slot = "6")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0xA78FDC", Offset = "0xA78FDC", VA = "0xA78FDC")]
	public FinalLevelHandler()
	{
	}
}
[Token(Token = "0x20001C8")]
public class CookingRecipeFactory : SingleInstanceBehavior<CookingRecipeFactory>
{
	[Token(Token = "0x20001C9")]
	public struct RecipeData
	{
		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Recipe[] recipes;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IngredientType[][] fridgeIngredients;
	}

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<GrillRate, float> friedSpawnRate;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<SandwichSizes, float[]> recipeSizeDistribution;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int maxIngredientNumDif;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int maxPlayerIngredientNumDif;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int maxFriedIngredientCountForQuickCustomers;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly IngredientType[] bread;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private readonly IngredientType[] fillings;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly IngredientType[] neverAloneFillings;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public readonly IngredientType[] condimentsAndSpice;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<IngredientType> roundBread;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<IngredientType> roundFillings;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<IngredientType> roundNeverAloneFillings;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<IngredientType> roundAllFillings;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private RecipeData recipeData;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<IngredientType> availableIngredients;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int[] ingredientDistribution;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int[] ingredientUsagePerPlayer;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int numRecipes;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int hugeSandwichSize;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private CustomerRegistry customerRegistry;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<IngredientType> toRemove;

	[Token(Token = "0x17000186")]
	public bool FirstSetupComplete
	{
		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0xA791A0", Offset = "0xA791A0", VA = "0xA791A0")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0xA791A8", Offset = "0xA791A8", VA = "0xA791A8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0xA791B4", Offset = "0xA791B4", VA = "0xA791B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0xA7927C", Offset = "0xA7927C", VA = "0xA7927C")]
	public RecipeData GetRecipeList(CustomerType[] customers, SandwichSizes sandwichSizes, GrillRate grillRate, bool[] occupiedSeats, IngredientType[][] fridgeSetup, int hugeSandwichSize)
	{
		return default(RecipeData);
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0xA71198", Offset = "0xA71198", VA = "0xA71198")]
	public void InitRecipeGeneration(bool[] occupiedSeats, IngredientType[][] fridgeSetup, int hugeSandwichSize)
	{
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0xA70558", Offset = "0xA70558", VA = "0xA70558")]
	public Recipe GetRecipe(CustomerType customer, GrillRate grillRate, int ingredientCount, IngredientType breadType)
	{
		return default(Recipe);
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0xA7A054", Offset = "0xA7A054", VA = "0xA7A054")]
	private bool ShouldFinishWithBread(bool comboFillingNecessary, IngredientType bottomBread, CustomerData customerData, RecipeIngredient[] ingredients)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0xA798C0", Offset = "0xA798C0", VA = "0xA798C0")]
	private void RemoveBannedIngredients(List<IngredientType> ingredientList, List<IngredientType> availableIngredients)
	{
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0xA7999C", Offset = "0xA7999C", VA = "0xA7999C")]
	private bool DetermineIfFried(GrillRate grillRate, IngredientType ingredientType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0xA796A4", Offset = "0xA796A4", VA = "0xA796A4")]
	private List<IngredientType> GetIngredientsAvailableInRound(IngredientType[][] fridgeSetup)
	{
		return null;
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0xA793DC", Offset = "0xA793DC", VA = "0xA793DC")]
	private int[] GetRecipeDistribution(CustomerType[] customers, SandwichSizes sandwichSizes)
	{
		return null;
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0xA703F0", Offset = "0xA703F0", VA = "0xA703F0")]
	public int GetRandomRecipeSize(CustomerType customer, SandwichSizes sandwichSizes)
	{
		return default(int);
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0xA79A68", Offset = "0xA79A68", VA = "0xA79A68")]
	private IngredientType EqualizedRandomizedIngredient(List<IngredientType> ingredientPool)
	{
		return default(IngredientType);
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0xA7A0A8", Offset = "0xA7A0A8", VA = "0xA7A0A8")]
	private RecipeIngredient[] LimitFriedIngredientCountForQuickCustomer(RecipeIngredient[] ingredients)
	{
		return null;
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0xA7955C", Offset = "0xA7955C", VA = "0xA7955C")]
	private IngredientType[] ShuffleBread(List<IngredientType> roundBread)
	{
		return null;
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0xA704E4", Offset = "0xA704E4", VA = "0xA704E4")]
	public IngredientType GetRandomBread()
	{
		return default(IngredientType);
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0xA7A188", Offset = "0xA7A188", VA = "0xA7A188")]
	public void SetRecipeGenerationValues(int maxIngredientCountDifference, int maxPlayerWorkloadDifference, float[] fryRates, float[,] sizeDistribution)
	{
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0xA7A424", Offset = "0xA7A424", VA = "0xA7A424")]
	public CookingRecipeFactory()
	{
	}
}
[Token(Token = "0x20001CB")]
public class DestroyIngredientOnTouch : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LayerMask targetLayer;

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0xA7A8D8", Offset = "0xA7A8D8", VA = "0xA7A8D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0xA7A930", Offset = "0xA7A930", VA = "0xA7A930")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0xA7AACC", Offset = "0xA7AACC", VA = "0xA7AACC")]
	public DestroyIngredientOnTouch()
	{
	}
}
[Token(Token = "0x20001CC")]
[DisallowMultipleComponent]
[RequireComponent(typeof(IngredientBase))]
public class DestructibleWhenThrown : NetworkedBehaviour
{
	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float speedThresholdPlayer;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float speedThresholdEnvironment;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Rigidbody rb;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private IngredientBase ingredient;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Grabbable grabbable;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 previousPos;

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0xA7AAD4", Offset = "0xA7AAD4", VA = "0xA7AAD4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0xA7AB04", Offset = "0xA7AB04", VA = "0xA7AB04")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0xA7AB34", Offset = "0xA7AB34", VA = "0xA7AB34")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0xA7AF10", Offset = "0xA7AF10", VA = "0xA7AF10")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0xA7B178", Offset = "0xA7B178", VA = "0xA7B178")]
	[PunRPC]
	private void CollideRPC(Vector3 collisionPosition, Vector3 movementDirection)
	{
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0xA7B304", Offset = "0xA7B304", VA = "0xA7B304")]
	public DestructibleWhenThrown()
	{
	}
}
[Token(Token = "0x20001CD")]
[DisallowMultipleComponent]
[RequireComponent(typeof(IngredientBase))]
public class Edible : NetworkedBehaviour
{
	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private IngredientBase ingredient;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Grabbable grabbable;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float eatDelay;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Color crumbColor;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float eatTimer;

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0xA7B318", Offset = "0xA7B318", VA = "0xA7B318")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0xA7B3C8", Offset = "0xA7B3C8", VA = "0xA7B3C8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0xA7B494", Offset = "0xA7B494", VA = "0xA7B494")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0xA7B6BC", Offset = "0xA7B6BC", VA = "0xA7B6BC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0xA7B76C", Offset = "0xA7B76C", VA = "0xA7B76C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0xA7B804", Offset = "0xA7B804", VA = "0xA7B804")]
	public void OnGrabEnd()
	{
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0xA7B80C", Offset = "0xA7B80C", VA = "0xA7B80C")]
	[PunRPC]
	private void EatRPC(float fryValue)
	{
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0xA7B980", Offset = "0xA7B980", VA = "0xA7B980")]
	public Edible()
	{
	}
}
[Token(Token = "0x20001CE")]
public class FlameParticlePool : SingleInstanceBehavior<FlameParticlePool>
{
	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ParticleSystem flameParticlesSerialized;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float emissionCycleSerialized;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ParticleSystem flameParticles;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<Transform> burningIngredients;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static List<Mesh> ingredientShape;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static List<float> timeLeftToEmit;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Transform flameParticlesTransform;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static Quaternion emitUpwards;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static ParticleSystem.ShapeModule shapeModule;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static float emissionCycle;

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0xA7B994", Offset = "0xA7B994", VA = "0xA7B994", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0xA7BA40", Offset = "0xA7BA40", VA = "0xA7BA40")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0xA7BCA0", Offset = "0xA7BCA0", VA = "0xA7BCA0")]
	public static void AddIngredientToPool(Transform t, Grillable grillable)
	{
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0xA7BF6C", Offset = "0xA7BF6C", VA = "0xA7BF6C")]
	public static void RemoveIngredientFromPool(Transform t)
	{
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0xA7C0D4", Offset = "0xA7C0D4", VA = "0xA7C0D4")]
	public static void ClearAllParticles()
	{
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0xA7C138", Offset = "0xA7C138", VA = "0xA7C138")]
	public FlameParticlePool()
	{
	}
}
[Token(Token = "0x20001CF")]
public class FlyingEmberPool : SingleInstanceBehavior<FlyingEmberPool>
{
	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ParticleSystem flyingEmbersExposed;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float[] emissionOdds;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static float[] emissionCycles;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static int[] burstCount;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static List<Transform> burningIngredients;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static List<float[]> timeLeftToEmit;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform flyingEmbersTransform;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Quaternion shootUpwards;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 positionOffset;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static ParticleSystem flyingEmbers;

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0xA7C308", Offset = "0xA7C308", VA = "0xA7C308", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0xA7C3A8", Offset = "0xA7C3A8", VA = "0xA7C3A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0xA7C698", Offset = "0xA7C698", VA = "0xA7C698")]
	public static void AddIngredientToPool(Transform t)
	{
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0xA7C920", Offset = "0xA7C920", VA = "0xA7C920")]
	public static void RemoveIngredientFromPool(Transform t)
	{
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0xA7CA4C", Offset = "0xA7CA4C", VA = "0xA7CA4C")]
	public static void ClearAllParticles()
	{
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0xA7CAB0", Offset = "0xA7CAB0", VA = "0xA7CAB0")]
	public FlyingEmberPool()
	{
	}
}
[Token(Token = "0x20001D0")]
public class FlyingEmbers : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000C07")]
	[Address(RVA = "0xA7DD1C", Offset = "0xA7DD1C", VA = "0xA7DD1C")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0xA7DF40", Offset = "0xA7DF40", VA = "0xA7DF40")]
	public FlyingEmbers()
	{
	}
}
[Token(Token = "0x20001D1")]
public class FryingGlow : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem glowSystem;

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0xA7DF48", Offset = "0xA7DF48", VA = "0xA7DF48")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0xA7DF4C", Offset = "0xA7DF4C", VA = "0xA7DF4C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0xA7E044", Offset = "0xA7E044", VA = "0xA7E044")]
	public void StartGlowing()
	{
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0xA7DF50", Offset = "0xA7DF50", VA = "0xA7DF50")]
	public void StopGlowing()
	{
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0xA7E0C8", Offset = "0xA7E0C8", VA = "0xA7E0C8")]
	public FryingGlow()
	{
	}
}
[Token(Token = "0x20001D2")]
public enum FryState
{
	[Token(Token = "0x4000C67")]
	Unfried,
	[Token(Token = "0x4000C68")]
	Fried,
	[Token(Token = "0x4000C69")]
	Burnt,
	[Token(Token = "0x4000C6A")]
	Burning
}
[Token(Token = "0x20001D3")]
public struct FryValuePair
{
	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public FryState state;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float value;

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0xA7E0F4", Offset = "0xA7E0F4", VA = "0xA7E0F4")]
	public FryValuePair(FryState state, float value)
	{
	}
}
[Token(Token = "0x20001D4")]
public class FryValue
{
	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static FryValuePair[] fryStateValues;

	[Token(Token = "0x4000C6E")]
	public const float maxValue = 2.6f;

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0xA7E100", Offset = "0xA7E100", VA = "0xA7E100")]
	public static float GetNextfryValue(float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0xA7E160", Offset = "0xA7E160", VA = "0xA7E160")]
	public static FryState GetFryState(float fryValue)
	{
		return default(FryState);
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0xA7E334", Offset = "0xA7E334", VA = "0xA7E334")]
	public static float GetFryValue(FryState fryState)
	{
		return default(float);
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0xA7E26C", Offset = "0xA7E26C", VA = "0xA7E26C")]
	public static float GetNextStateThreshold(FryState fryState)
	{
		return default(float);
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0xA7E3B0", Offset = "0xA7E3B0", VA = "0xA7E3B0")]
	public FryValue()
	{
	}
}
[Token(Token = "0x20001D5")]
[RequireComponent(typeof(IngredientBase))]
[DisallowMultipleComponent]
public class Grillable : NetworkedBehaviour, IPunObservable
{
	[Token(Token = "0x20001D6")]
	private enum GrillType
	{
		[Token(Token = "0x4000C86")]
		Slice,
		[Token(Token = "0x4000C87")]
		Whole
	}

	[Token(Token = "0x4000C6F")]
	private const float extinguishSpeed = 10f;

	[Token(Token = "0x4000C70")]
	private const float fryStateFriedThresholdFraction = 0.05f;

	[Token(Token = "0x4000C71")]
	private const float fryStateBurntThresholdFraction = 0.05f;

	[Token(Token = "0x4000C72")]
	private const float burnMercyTime = 5f;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MaterialPropertyBlock matPropBlock;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static float fryStateFriedThreshold;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float fryStateBurntThreshold;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public Renderer ingredientRenderer;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private HotGrabbable hotGrabbable;

	[NonSerialized]
	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform fireRoot;

	[NonSerialized]
	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public FryingGlow fryingGlow;

	[NonSerialized]
	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ParticleSystem fireParticles;

	[NonSerialized]
	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject fireParticlesGlow;

	[Token(Token = "0x4000C7C")]
	private const float stateChangeThreshold = 10f;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GrillType grillType;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float burningValue;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float timeFried;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private FryState fryState;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float burnMercyTimer;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool isBeingExtinguished;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	private bool inWater;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	private bool flyingEmberEmitting;

	[Token(Token = "0x17000187")]
	public float CurrentFryValue
	{
		[Token(Token = "0x6000C16")]
		[Address(RVA = "0xA7E474", Offset = "0xA7E474", VA = "0xA7E474")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000188")]
	public bool CanForceBurn
	{
		[Token(Token = "0x6000C17")]
		[Address(RVA = "0xA7DEA8", Offset = "0xA7DEA8", VA = "0xA7DEA8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000189")]
	public bool IsBuring
	{
		[Token(Token = "0x6000C18")]
		[Address(RVA = "0xA7E484", Offset = "0xA7E484", VA = "0xA7E484")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0xA7E494", Offset = "0xA7E494", VA = "0xA7E494")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0xA7E564", Offset = "0xA7E564", VA = "0xA7E564")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0xA7E570", Offset = "0xA7E570", VA = "0xA7E570")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0xA7E5EC", Offset = "0xA7E5EC", VA = "0xA7E5EC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0xA7E70C", Offset = "0xA7E70C", VA = "0xA7E70C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0xA7E770", Offset = "0xA7E770", VA = "0xA7E770")]
	public void HideFryParticles()
	{
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0xA7E93C", Offset = "0xA7E93C", VA = "0xA7E93C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0xA7EAB4", Offset = "0xA7EAB4", VA = "0xA7EAB4")]
	public void UpdateVisualFryState()
	{
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0xA7F34C", Offset = "0xA7F34C", VA = "0xA7F34C")]
	public void UpdateVisualsBurnState()
	{
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0xA7EE2C", Offset = "0xA7EE2C", VA = "0xA7EE2C")]
	private static void UpdateVisuals(Renderer renderer, float fryValue, GrillType grillType)
	{
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0xA7F368", Offset = "0xA7F368", VA = "0xA7F368")]
	public void OnFryingStarted()
	{
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0xA7F380", Offset = "0xA7F380", VA = "0xA7F380")]
	public void Fry(float elapsedTime)
	{
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0xA7F3F0", Offset = "0xA7F3F0", VA = "0xA7F3F0")]
	public void OnFryingStopped()
	{
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0xA7F408", Offset = "0xA7F408", VA = "0xA7F408")]
	public void SetFryValue(float fryValue)
	{
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0xA7F418", Offset = "0xA7F418", VA = "0xA7F418")]
	public static void GetFryVisualsCopyTo(float fryValue, GameObject visualsCopy)
	{
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0xA7F034", Offset = "0xA7F034", VA = "0xA7F034")]
	private void PlayFriedFeedback()
	{
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0xA7F5E8", Offset = "0xA7F5E8", VA = "0xA7F5E8")]
	[PunRPC]
	private void ForceBurnIngredientRPC()
	{
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0xA7F628", Offset = "0xA7F628", VA = "0xA7F628")]
	[PunRPC]
	private void StartExtinguishFireRPC()
	{
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0xA7F668", Offset = "0xA7F668", VA = "0xA7F668")]
	[PunRPC]
	private void StopExtinguishFireRPC()
	{
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0xA7E844", Offset = "0xA7E844", VA = "0xA7E844")]
	private void StopFire()
	{
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0xA7F28C", Offset = "0xA7F28C", VA = "0xA7F28C")]
	private void StartFlyingEmbersAndFlames()
	{
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0xA7F6B0", Offset = "0xA7F6B0", VA = "0xA7F6B0")]
	public void ForceExtinguish()
	{
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0xA7F734", Offset = "0xA7F734", VA = "0xA7F734", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0xA7F8A0", Offset = "0xA7F8A0", VA = "0xA7F8A0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0xA7F918", Offset = "0xA7F918", VA = "0xA7F918")]
	public Grillable()
	{
	}
}
[Token(Token = "0x20001D7")]
public class GrillingPopUpPool : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject toastyPopUpPrefab;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject skullPopUpPrefab;

	[Token(Token = "0x4000C8A")]
	private const int toastyCount = 8;

	[Token(Token = "0x4000C8B")]
	private const int skullCount = 8;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Transform[] toastyPopUps;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static GameObject[] toastyPopUpGOs;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Transform[] skullPopUps;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static GameObject[] skullPopUpGOs;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static int toastyIndex;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static int skullIndex;

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0xA7F920", Offset = "0xA7F920", VA = "0xA7F920")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0xA7F124", Offset = "0xA7F124", VA = "0xA7F124")]
	public static void DisplaySkullPopUp(Vector3 position)
	{
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0xA7F480", Offset = "0xA7F480", VA = "0xA7F480")]
	public static void DisplayToastyPopUp(Vector3 position)
	{
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0xA7FC68", Offset = "0xA7FC68", VA = "0xA7FC68")]
	public GrillingPopUpPool()
	{
	}
}
[Token(Token = "0x20001D8")]
public abstract class IngredientBase : NetworkedBehaviour
{
	[Token(Token = "0x1700018A")]
	public abstract IngredientType IngredientType
	{
		[Token(Token = "0x6000C37")]
		get;
	}

	[Token(Token = "0x1700018B")]
	public abstract bool IsRaw
	{
		[Token(Token = "0x6000C38")]
		get;
	}

	[Token(Token = "0x1700018C")]
	public abstract bool poofOnDestroy
	{
		[Token(Token = "0x6000C39")]
		get;
		[Token(Token = "0x6000C3A")]
		set;
	}

	[Token(Token = "0x1700018D")]
	public abstract bool IsBeingDestroyed
	{
		[Token(Token = "0x6000C3B")]
		get;
		[Token(Token = "0x6000C3C")]
		set;
	}

	[Token(Token = "0x1700018E")]
	public abstract bool CanBeDestroyedByThrow
	{
		[Token(Token = "0x6000C3D")]
		get;
	}

	[Token(Token = "0x1700018F")]
	public abstract Color CrumbColor
	{
		[Token(Token = "0x6000C3E")]
		get;
	}

	[Token(Token = "0x17000190")]
	public abstract float GetFryValue
	{
		[Token(Token = "0x6000C3F")]
		get;
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0xA7FD3C", Offset = "0xA7FD3C", VA = "0xA7FD3C")]
	protected IngredientBase()
	{
	}
}
[Token(Token = "0x20001D9")]
public enum IngredientType
{
	[Token(Token = "0x4000C93")]
	None,
	[Token(Token = "0x4000C94")]
	Bread,
	[Token(Token = "0x4000C95")]
	Ham,
	[Token(Token = "0x4000C96")]
	Cheese,
	[Token(Token = "0x4000C97")]
	Salad,
	[Token(Token = "0x4000C98")]
	Tomato,
	[Token(Token = "0x4000C99")]
	Mushroom,
	[Token(Token = "0x4000C9A")]
	DevilEgg,
	[Token(Token = "0x4000C9B")]
	Tentacle,
	[Token(Token = "0x4000C9C")]
	MoldyCheese,
	[Token(Token = "0x4000C9D")]
	Pumpkin,
	[Token(Token = "0x4000C9E")]
	BreadDark,
	[Token(Token = "0x4000C9F")]
	Bagel,
	[Token(Token = "0x4000CA0")]
	Salmon,
	[Token(Token = "0x4000CA1")]
	Cauldron,
	[Token(Token = "0x4000CA2")]
	Moon,
	[Token(Token = "0x4000CA3")]
	Onion,
	[Token(Token = "0x4000CA4")]
	Mayo,
	[Token(Token = "0x4000CA5")]
	Ketchup,
	[Token(Token = "0x4000CA6")]
	Spice,
	[Token(Token = "0x4000CA7")]
	Tofu,
	[Token(Token = "0x4000CA8")]
	Carrot,
	[Token(Token = "0x4000CA9")]
	Beet,
	[Token(Token = "0x4000CAA")]
	Egg,
	[Token(Token = "0x4000CAB")]
	Baguette,
	[Token(Token = "0x4000CAC")]
	Pepper,
	[Token(Token = "0x4000CAD")]
	RoyalSalad,
	[Token(Token = "0x4000CAE")]
	StarFruit,
	[Token(Token = "0x4000CAF")]
	Truffle,
	[Token(Token = "0x4000CB0")]
	Lobster,
	[Token(Token = "0x4000CB1")]
	Avocado,
	[Token(Token = "0x4000CB2")]
	RedOnion,
	[Token(Token = "0x4000CB3")]
	CandyCane,
	[Token(Token = "0x4000CB4")]
	Gingerbread,
	[Token(Token = "0x4000CB5")]
	Potato,
	[Token(Token = "0x4000CB6")]
	Snowman,
	[Token(Token = "0x4000CB7")]
	Turkey
}
[Token(Token = "0x20001DA")]
public class IngredientPrefabRegistry : SingleInstanceBehavior<IngredientPrefabRegistry>
{
	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] ingredientPrefabs;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] unprocessedIngredientPrefabs;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<IngredientType, GameObject> prefabsDict;

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IngredientType, GameObject> unProcessedPrefabsDict;

	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<IngredientType, Material> ingredientSliceMaterials;

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<IngredientType, IngredientSlice> ingredientsDict;

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0xA7FD44", Offset = "0xA7FD44", VA = "0xA7FD44", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0xA7FF90", Offset = "0xA7FF90", VA = "0xA7FF90")]
	public GameObject GetIngredientPrefab(IngredientType ingredientType)
	{
		return null;
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0xA80088", Offset = "0xA80088", VA = "0xA80088")]
	public GameObject GetUnprocessedIngredientPrefab(IngredientType ingredientType)
	{
		return null;
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0xA80180", Offset = "0xA80180", VA = "0xA80180")]
	public IngredientSliceData GetIngredientData(IngredientType ingredientType)
	{
		return default(IngredientSliceData);
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0xA80298", Offset = "0xA80298", VA = "0xA80298")]
	public Material GetIngredientSliceMaterial(IngredientType ingredientType)
	{
		return null;
	}

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0xA80390", Offset = "0xA80390", VA = "0xA80390")]
	public IngredientPrefabRegistry()
	{
	}
}
[Serializable]
[Token(Token = "0x20001DB")]
public struct IngredientSliceData
{
	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IngredientType ingredientType;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float softness;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float platePaddingTop;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float platePaddingBot;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float cuttingBoardYRotationOffset;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite icon;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite friedIcon;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite burntIcon;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color crumbColor;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("Optional top mesh used when the ingredient is the last ingredient type in the recipe and is correctly placed last")]
	public Mesh topMesh;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Mesh bottomMesh;

	[Token(Token = "0x17000191")]
	public bool HasTopSlice
	{
		[Token(Token = "0x6000C47")]
		[Address(RVA = "0xA804F0", Offset = "0xA804F0", VA = "0xA804F0")]
		get
		{
			return default(bool);
		}
	}
}
[Token(Token = "0x20001DC")]
public class IngredientSlice : IngredientBase
{
	[Token(Token = "0x4000CC9")]
	private const float cleaverCollisionMercyTime = 1.8f;

	[Token(Token = "0x4000CCA")]
	private const float dropOnPlateSphereRadius = 0.05f;

	[Token(Token = "0x4000CCB")]
	private const string plateColliderName = "AddToPlateCollider";

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Grabbable grabbable;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Grillable grillable;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IngredientSliceData ingredientData;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject visuals;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Collider[] collidersHit;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int justSpawnedLayer;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int defaultLayer;

	[Token(Token = "0x4000CD5")]
	private const string justSpawnedLayerName = "JustSpawnedSlice";

	[Token(Token = "0x4000CD6")]
	private const string defaultLayerName = "Ingredients";

	[Token(Token = "0x17000192")]
	public override IngredientType IngredientType
	{
		[Token(Token = "0x6000C48")]
		[Address(RVA = "0xA80550", Offset = "0xA80550", VA = "0xA80550", Slot = "4")]
		get
		{
			return default(IngredientType);
		}
	}

	[Token(Token = "0x17000193")]
	public override bool IsRaw
	{
		[Token(Token = "0x6000C49")]
		[Address(RVA = "0xA80558", Offset = "0xA80558", VA = "0xA80558", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000194")]
	public override float GetFryValue
	{
		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0xA80560", Offset = "0xA80560", VA = "0xA80560", Slot = "12")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000195")]
	public override Color CrumbColor
	{
		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0xA80584", Offset = "0xA80584", VA = "0xA80584", Slot = "11")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000196")]
	public override bool CanBeDestroyedByThrow
	{
		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0xA80590", Offset = "0xA80590", VA = "0xA80590", Slot = "10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000197")]
	public override bool IsBeingDestroyed
	{
		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0xA8060C", Offset = "0xA8060C", VA = "0xA8060C", Slot = "8")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0xA80614", Offset = "0xA80614", VA = "0xA80614", Slot = "9")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000198")]
	public override bool poofOnDestroy
	{
		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0xA80620", Offset = "0xA80620", VA = "0xA80620", Slot = "6")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C50")]
		[Address(RVA = "0xA80628", Offset = "0xA80628", VA = "0xA80628", Slot = "7")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000199")]
	public Grabbable Grabbable
	{
		[Token(Token = "0x6000C51")]
		[Address(RVA = "0xA80634", Offset = "0xA80634", VA = "0xA80634")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700019A")]
	public Grillable Grillable
	{
		[Token(Token = "0x6000C52")]
		[Address(RVA = "0xA8063C", Offset = "0xA8063C", VA = "0xA8063C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0xA80644", Offset = "0xA80644", VA = "0xA80644")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0xA806C0", Offset = "0xA806C0", VA = "0xA806C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C55")]
	[Address(RVA = "0xA807D0", Offset = "0xA807D0", VA = "0xA807D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0xA80938", Offset = "0xA80938", VA = "0xA80938")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0xA80AE0", Offset = "0xA80AE0", VA = "0xA80AE0")]
	private void OnGrabEnd()
	{
	}

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0xA80BB8", Offset = "0xA80BB8", VA = "0xA80BB8")]
	private Plate GetNearestPlate()
	{
		return null;
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0xA80CE0", Offset = "0xA80CE0", VA = "0xA80CE0")]
	private void AddIngredientToPlate(Plate nearestPlate, float dropForce)
	{
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0xA81098", Offset = "0xA81098", VA = "0xA81098")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0xA81260", Offset = "0xA81260", VA = "0xA81260")]
	private void CheckThrowIngredientStarGoal(Plate plate)
	{
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0xA80E04", Offset = "0xA80E04", VA = "0xA80E04")]
	public static IngredientType FindTypeToReplicate(RecipeIngredient[] recipeIngredients, List<StackedIngredientData> addedIngredients)
	{
		return default(IngredientType);
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0xA814C4", Offset = "0xA814C4", VA = "0xA814C4")]
	public IngredientSlice()
	{
	}
}
[Token(Token = "0x20001DD")]
[DisallowMultipleComponent]
[RequireComponent(typeof(Edible))]
[RequireComponent(typeof(Grabbable))]
[RequireComponent(typeof(Grillable))]
[RequireComponent(typeof(HotGrabbable))]
public class IngredientWhole : IngredientBase, IPunObservable
{
	[Token(Token = "0x20001DE")]
	public delegate void OnIngredientDisabledHandler(IngredientWhole ingredient);

	[Token(Token = "0x4000CD7")]
	private const float rawIngredientReleaseSphereRadius = 0.05f;

	[Token(Token = "0x4000CD8")]
	private const string CuttingBoardName = "RawIngredientTriggerVolume";

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private IngredientType ingredientType;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float chopProgressThreshold;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Grabbable grabbable;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Grillable grillable;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Renderer ingredientRenderer;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Collider[] colliders;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject visuals;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 fridgePositionOffset;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Vector3 fridgeRotationOffset;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float fridgeScaleMultiplier;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[Header("Cutting Board Settings")]
	public Vector3 cuttingBoardPositionOffset;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector3 cuttingBoardRotation;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[Header("Slice Spawn Settings")]
	public Vector3 sliceSpawnRotationOffset;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Action<bool> OnGrabbed;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public int onCuttingBoardViewID;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Collider[] collidersHit;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float destroyTimer;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float destroyTime;

	[Token(Token = "0x1700019B")]
	public override IngredientType IngredientType
	{
		[Token(Token = "0x6000C61")]
		[Address(RVA = "0xA816F4", Offset = "0xA816F4", VA = "0xA816F4", Slot = "4")]
		get
		{
			return default(IngredientType);
		}
	}

	[Token(Token = "0x1700019C")]
	public override bool IsRaw
	{
		[Token(Token = "0x6000C62")]
		[Address(RVA = "0xA816FC", Offset = "0xA816FC", VA = "0xA816FC", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700019D")]
	public override float GetFryValue
	{
		[Token(Token = "0x6000C63")]
		[Address(RVA = "0xA81704", Offset = "0xA81704", VA = "0xA81704", Slot = "12")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700019E")]
	public override Color CrumbColor
	{
		[Token(Token = "0x6000C64")]
		[Address(RVA = "0xA81728", Offset = "0xA81728", VA = "0xA81728", Slot = "11")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700019F")]
	public override bool CanBeDestroyedByThrow
	{
		[Token(Token = "0x6000C65")]
		[Address(RVA = "0xA81824", Offset = "0xA81824", VA = "0xA81824", Slot = "10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001A0")]
	public override bool poofOnDestroy
	{
		[Token(Token = "0x6000C66")]
		[Address(RVA = "0xA818A0", Offset = "0xA818A0", VA = "0xA818A0", Slot = "6")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C67")]
		[Address(RVA = "0xA818A8", Offset = "0xA818A8", VA = "0xA818A8", Slot = "7")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001A1")]
	public override bool IsBeingDestroyed
	{
		[Token(Token = "0x6000C68")]
		[Address(RVA = "0xA818B4", Offset = "0xA818B4", VA = "0xA818B4", Slot = "8")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C69")]
		[Address(RVA = "0xA818BC", Offset = "0xA818BC", VA = "0xA818BC", Slot = "9")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001A2")]
	public Grabbable Grabbable
	{
		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0xA818C8", Offset = "0xA818C8", VA = "0xA818C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A3")]
	public Grillable Grillable
	{
		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0xA818D0", Offset = "0xA818D0", VA = "0xA818D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A4")]
	public bool IsGrabbed
	{
		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0xA818D8", Offset = "0xA818D8", VA = "0xA818D8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001A5")]
	public bool IsBurning
	{
		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0xA818F4", Offset = "0xA818F4", VA = "0xA818F4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001A6")]
	private bool IsBurnt
	{
		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0xA81970", Offset = "0xA81970", VA = "0xA81970")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001A7")]
	public float ChopProgressThreshold
	{
		[Token(Token = "0x6000C70")]
		[Address(RVA = "0xA819F4", Offset = "0xA819F4", VA = "0xA819F4")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0xA819EC", Offset = "0xA819EC", VA = "0xA819EC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001A8")]
	public float ChopProgress
	{
		[Token(Token = "0x6000C72")]
		[Address(RVA = "0xA81A04", Offset = "0xA81A04", VA = "0xA81A04")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C71")]
		[Address(RVA = "0xA819FC", Offset = "0xA819FC", VA = "0xA819FC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x14000015")]
	public event OnIngredientDisabledHandler OnIngredientDisabled
	{
		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0xA815BC", Offset = "0xA815BC", VA = "0xA815BC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000C60")]
		[Address(RVA = "0xA81658", Offset = "0xA81658", VA = "0xA81658")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0xA81A0C", Offset = "0xA81A0C", VA = "0xA81A0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0xA81A18", Offset = "0xA81A18", VA = "0xA81A18")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0xA81AF8", Offset = "0xA81AF8", VA = "0xA81AF8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0xA81CF4", Offset = "0xA81CF4", VA = "0xA81CF4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0xA81C68", Offset = "0xA81C68", VA = "0xA81C68")]
	private void SetGfxAndPhx(bool flag)
	{
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0xA82168", Offset = "0xA82168", VA = "0xA82168")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0xA8222C", Offset = "0xA8222C", VA = "0xA8222C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0xA82358", Offset = "0xA82358", VA = "0xA82358")]
	private void OnGrabBegin()
	{
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0xA82388", Offset = "0xA82388", VA = "0xA82388")]
	private void OnRemoteGrabBegin()
	{
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0xA823A8", Offset = "0xA823A8", VA = "0xA823A8")]
	private void OnGrabEnd()
	{
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0xA8204C", Offset = "0xA8204C", VA = "0xA8204C")]
	private void RemoveFromCuttingBoard()
	{
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0xA82558", Offset = "0xA82558", VA = "0xA82558")]
	[PunRPC]
	private void ChopIngredientRPC(float force, bool superSharp)
	{
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0xA82E08", Offset = "0xA82E08", VA = "0xA82E08", Slot = "13")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0xA82BDC", Offset = "0xA82BDC", VA = "0xA82BDC")]
	private void ChopEffect()
	{
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0xA8299C", Offset = "0xA8299C", VA = "0xA8299C")]
	private void SliceEffect()
	{
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0xA82F6C", Offset = "0xA82F6C", VA = "0xA82F6C")]
	public IngredientWhole()
	{
	}
}
[Serializable]
[Token(Token = "0x20001DF")]
public struct Recipe
{
	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public RecipeIngredient[] ingredients;

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0xA8314C", Offset = "0xA8314C", VA = "0xA8314C")]
	public Recipe(RecipeIngredient[] ingredients)
	{
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0xA83154", Offset = "0xA83154", VA = "0xA83154", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x20001E0")]
public struct RecipeIngredient
{
	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int typeInt;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public bool fried;

	[Token(Token = "0x170001A9")]
	public IngredientType type
	{
		[Token(Token = "0x6000C89")]
		[Address(RVA = "0xA832C4", Offset = "0xA832C4", VA = "0xA832C4")]
		get
		{
			return default(IngredientType);
		}
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0xA832CC", Offset = "0xA832CC", VA = "0xA832CC")]
	public RecipeIngredient(IngredientType type)
	{
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0xA832D8", Offset = "0xA832D8", VA = "0xA832D8")]
	public RecipeIngredient(IngredientType type, bool fried)
	{
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0xA832E8", Offset = "0xA832E8", VA = "0xA832E8")]
	public float GetFryValue()
	{
		return default(float);
	}
}
[Token(Token = "0x20001E1")]
public class LeaderboardEndlessMode : SingleInstanceBehavior<LeaderboardEndlessMode>
{
	[Token(Token = "0x20001E2")]
	private enum LeaderboardType
	{
		[Token(Token = "0x4000D0B")]
		Global,
		[Token(Token = "0x4000D0C")]
		Friends
	}

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject root;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshPro header;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PokeButton[] switchLeaderboard;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMeshPro[] nameFields;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TextMeshPro[] scoreFields;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject solidBackground;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject splitBackground;

	[Token(Token = "0x4000CFA")]
	private const string localizationGlobal = "leaderboard_endless_global";

	[Token(Token = "0x4000CFB")]
	private const string localizationFriend = "leaderboard_endless_friends";

	[Token(Token = "0x4000CFC")]
	private const string localizationError = "leaderboard_endless_error";

	[Token(Token = "0x4000CFD")]
	private const string localizationLoading = "leaderboard_loading";

	[Token(Token = "0x4000CFE")]
	private const string leaderboardName = "Endless Mode";

	[Token(Token = "0x4000CFF")]
	private const string blankEntry = "-";

	[Token(Token = "0x4000D00")]
	private const int entriesToDisplay = 8;

	[Token(Token = "0x4000D01")]
	private const int topEntriesCount = 5;

	[Token(Token = "0x4000D02")]
	private const int entriesRelativeToPlayerCount = 3;

	[Token(Token = "0x4000D03")]
	private const int friendEntriesToGet = 50;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject[] switchLeaderboardGO;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LeaderboardType currentLeaderboardType;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Locale locale;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<LeaderboardResponse.Entry> leaderboardEntries;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string localUserId;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ILeaderboard leaderboardWrapper;

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0xA83340", Offset = "0xA83340", VA = "0xA83340")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0xA83F80", Offset = "0xA83F80", VA = "0xA83F80")]
	private void UpdateLocalUserId()
	{
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0xA84060", Offset = "0xA84060", VA = "0xA84060")]
	private void SubmitOfflineHighscore(int leaderboardScore)
	{
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0xA84160", Offset = "0xA84160", VA = "0xA84160")]
	public void SubmitHighScore(int highScore)
	{
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0xA84228", Offset = "0xA84228", VA = "0xA84228")]
	private void SwitchLeaderboard()
	{
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0xA842D4", Offset = "0xA842D4", VA = "0xA842D4")]
	private void GetLeaderboard()
	{
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0xA844FC", Offset = "0xA844FC", VA = "0xA844FC")]
	private void LeaderboardGetCallback(LeaderboardResponse response)
	{
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0xA8507C", Offset = "0xA8507C", VA = "0xA8507C")]
	private void LeaderboardGetPlayerCentricCallbackGlobal(LeaderboardResponse response)
	{
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0xA852B0", Offset = "0xA852B0", VA = "0xA852B0")]
	private void LeaderboardGetFullFriendList(LeaderboardResponse response)
	{
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0xA849E8", Offset = "0xA849E8", VA = "0xA849E8")]
	private void UpdateUI(bool splitScores, int friendlistRankOffset = -1)
	{
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0xA84FBC", Offset = "0xA84FBC", VA = "0xA84FBC")]
	private void OnFailedGetLeaderBoard()
	{
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0xA83EBC", Offset = "0xA83EBC", VA = "0xA83EBC")]
	private void ClearEntries()
	{
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0xA85534", Offset = "0xA85534", VA = "0xA85534")]
	public void SetActive(bool isActive)
	{
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0xA8557C", Offset = "0xA8557C", VA = "0xA8557C")]
	public void OnOpenEndlessLeaderboardPage()
	{
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0xA855F4", Offset = "0xA855F4", VA = "0xA855F4")]
	public LeaderboardEndlessMode()
	{
	}
}
[Token(Token = "0x20001E3")]
public class LeaderboardResponse
{
	[Token(Token = "0x20001E4")]
	public class Entry
	{
		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int Rank;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int Score;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string PlatformID;

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0xA8566C", Offset = "0xA8566C", VA = "0xA8566C")]
		public Entry(int rank, int score, string platformID)
		{
		}
	}

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool IsError;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Entry> Entries;

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0xA85664", Offset = "0xA85664", VA = "0xA85664")]
	public LeaderboardResponse()
	{
	}
}
[Token(Token = "0x20001E5")]
internal interface ILeaderboard
{
	[Token(Token = "0x6000C9F")]
	void GetLeaderboardEntries(string leaderboardName, int entriesToDisplay, LeaderboardFilterType filterType, LeaderboardStartAt startAt, Action<LeaderboardResponse> callback);

	[Token(Token = "0x6000CA0")]
	void WriteEntry(string leaderboardName, int score);

	[Token(Token = "0x6000CA1")]
	void InitLeaderboard(string leaderboardName);
}
[Token(Token = "0x20001E6")]
internal class LeaderboardMock : ILeaderboard
{
	[Token(Token = "0x20001E7")]
	private struct ScoreEntry
	{
		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public long score;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string fakePlatformId;

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0xA856A8", Offset = "0xA856A8", VA = "0xA856A8")]
		public ScoreEntry(long score, string fakePlatformId)
		{
		}
	}

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<string, long> myScorePerLeaderboard;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string myPlatformId;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private long? forceMyScore;

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly List<ScoreEntry> globalLeaderboard;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<string> myFriends;

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0xA836CC", Offset = "0xA836CC", VA = "0xA836CC")]
	public LeaderboardMock()
	{
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0xA856B0", Offset = "0xA856B0", VA = "0xA856B0")]
	public void ForceMyScore(long score)
	{
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0xA85720", Offset = "0xA85720", VA = "0xA85720", Slot = "4")]
	public void GetLeaderboardEntries(string leaderboardName, int limit, LeaderboardFilterType filterType, LeaderboardStartAt startAt, Action<LeaderboardResponse> callback)
	{
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0xA85E60", Offset = "0xA85E60", VA = "0xA85E60", Slot = "5")]
	public void WriteEntry(string leaderboardName, int score)
	{
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0xA85F34", Offset = "0xA85F34", VA = "0xA85F34", Slot = "6")]
	public void InitLeaderboard(string leaderboardName)
	{
	}
}
[Token(Token = "0x20001EA")]
internal class LeaderboardReal : ILeaderboard
{
	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0xA86098", Offset = "0xA86098", VA = "0xA86098", Slot = "4")]
	public void GetLeaderboardEntries(string leaderboardName, int entriesToDisplay, LeaderboardFilterType filterType, LeaderboardStartAt startAt, Action<LeaderboardResponse> callback)
	{
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0xA861AC", Offset = "0xA861AC", VA = "0xA861AC", Slot = "5")]
	public void WriteEntry(string leaderboardName, int score)
	{
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0xA861C8", Offset = "0xA861C8", VA = "0xA861C8", Slot = "6")]
	public void InitLeaderboard(string leaderboardName)
	{
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0xA83EB4", Offset = "0xA83EB4", VA = "0xA83EB4")]
	public LeaderboardReal()
	{
	}
}
[Token(Token = "0x20001EC")]
public class LifeCounter : SingleInstanceNetworkedBehavior<LifeCounter>, IPunObservable
{
	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int stressfulMusicThreshold;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MusicPitcher musicPitcher;

	[Token(Token = "0x170001AA")]
	public int LivesLeft
	{
		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0xA86618", Offset = "0xA86618", VA = "0xA86618")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0xA86620", Offset = "0xA86620", VA = "0xA86620")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001AB")]
	public int MaxLives
	{
		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0xA86628", Offset = "0xA86628", VA = "0xA86628")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0xA86630", Offset = "0xA86630", VA = "0xA86630")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001AC")]
	public bool IsAtCriticalHealth
	{
		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0xA86638", Offset = "0xA86638", VA = "0xA86638")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0xA86728", Offset = "0xA86728", VA = "0xA86728")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0xA867F0", Offset = "0xA867F0", VA = "0xA867F0")]
	public void ResetCounter(int maxLives)
	{
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0xA867F8", Offset = "0xA867F8", VA = "0xA867F8")]
	public bool DecreaseAndCheckIfAtZeroLives(int livesLost)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0xA8687C", Offset = "0xA8687C", VA = "0xA8687C", Slot = "6")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0xA869BC", Offset = "0xA869BC", VA = "0xA869BC")]
	public LifeCounter()
	{
	}
}
[Token(Token = "0x20001ED")]
public class MusicPitcher : SingleInstanceNetworkedBehavior<MusicPitcher>
{
	[Token(Token = "0x20001EE")]
	[CompilerGenerated]
	private sealed class <ShiftPitch>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MusicPitcher <>4__this;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float targetPitch;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <startPitch>5__2;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <transitionTime>5__3;

		[Token(Token = "0x170001AD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CCE")]
			[Address(RVA = "0xA870D0", Offset = "0xA870D0", VA = "0xA870D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CD0")]
			[Address(RVA = "0xA87118", Offset = "0xA87118", VA = "0xA87118", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0xA86ED8", Offset = "0xA86ED8", VA = "0xA86ED8")]
		[DebuggerHidden]
		public <ShiftPitch>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0xA86FDC", Offset = "0xA86FDC", VA = "0xA86FDC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0xA86FE0", Offset = "0xA86FE0", VA = "0xA86FE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0xA870D8", Offset = "0xA870D8", VA = "0xA870D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioMixer mixer;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string keyPitch;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float pitchTransitionTime;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool platesSlowedDown;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LifeCounter lifeCounter;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CookingGameState cookingGameState;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float slowPitch;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float normalPitch;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float fastPitch;

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0xA86A30", Offset = "0xA86A30", VA = "0xA86A30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0xA86BFC", Offset = "0xA86BFC", VA = "0xA86BFC", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0xA86CE4", Offset = "0xA86CE4", VA = "0xA86CE4")]
	public void SlowDownLevelMusic()
	{
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0xA86DA0", Offset = "0xA86DA0", VA = "0xA86DA0")]
	public void RemoveLevelMusicSlowDownEffect()
	{
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0xA86E04", Offset = "0xA86E04", VA = "0xA86E04")]
	public void RemoveLevelMusicSpeedUpEffect()
	{
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0xA8683C", Offset = "0xA8683C", VA = "0xA8683C")]
	public void SpeedUpLevelMusic()
	{
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0xA86E34", Offset = "0xA86E34", VA = "0xA86E34")]
	private void OnNewGameState(GameState oldState, GameState newState)
	{
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0xA86E88", Offset = "0xA86E88", VA = "0xA86E88")]
	public void OnRoundStart()
	{
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0xA86D28", Offset = "0xA86D28", VA = "0xA86D28")]
	[IteratorStateMachine(typeof(<ShiftPitch>d__17))]
	private IEnumerator ShiftPitch(float targetPitch)
	{
		return null;
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0xA86F00", Offset = "0xA86F00", VA = "0xA86F00")]
	public void OnReturnToLobby()
	{
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0xA86F30", Offset = "0xA86F30", VA = "0xA86F30")]
	public MusicPitcher()
	{
	}
}
[Token(Token = "0x20001EF")]
public class BlockListManager : SingleInstanceBehavior<BlockListManager>
{
	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SaveManager saveManager;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PhotonCallbackManager photonCallbackManager;

	[Token(Token = "0x170001AF")]
	public bool blockListAvailable
	{
		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0xA87120", Offset = "0xA87120", VA = "0xA87120")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0xA8713C", Offset = "0xA8713C", VA = "0xA8713C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0xA873C4", Offset = "0xA873C4", VA = "0xA873C4")]
	public CookoutUserId[] GetBlockedPlayersArray()
	{
		return null;
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0xA874C0", Offset = "0xA874C0", VA = "0xA874C0")]
	public string[] GetBlockedPlayerNamesArray()
	{
		return null;
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0xA875E8", Offset = "0xA875E8", VA = "0xA875E8")]
	public void BlockPlayer(CookoutUserData userData)
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0xA87B00", Offset = "0xA87B00", VA = "0xA87B00")]
	public void UnblockPlayer(CookoutUserId userId)
	{
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0xA87F30", Offset = "0xA87F30", VA = "0xA87F30")]
	private void UpdateRoomPlayerList()
	{
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0xA879E4", Offset = "0xA879E4", VA = "0xA879E4")]
	private void UpdateRoomBlockList()
	{
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0xA8854C", Offset = "0xA8854C", VA = "0xA8854C")]
	private void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
	{
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0xA88C48", Offset = "0xA88C48", VA = "0xA88C48")]
	private void OnPhotonPlayerDisconnected(PhotonPlayer player)
	{
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0xA88CAC", Offset = "0xA88CAC", VA = "0xA88CAC")]
	private void OnMasterClientChanged(PhotonPlayer newMasterClient)
	{
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0xA88D2C", Offset = "0xA88D2C", VA = "0xA88D2C", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0xA88EEC", Offset = "0xA88EEC", VA = "0xA88EEC")]
	public BlockListManager()
	{
	}
}
[Token(Token = "0x20001F1")]
public class CookingLauncher : SingleInstancePhotonCallbackListener<CookingLauncher>
{
	[Token(Token = "0x20001F2")]
	public enum Status
	{
		[Token(Token = "0x4000D49")]
		Connecting,
		[Token(Token = "0x4000D4A")]
		Connected,
		[Token(Token = "0x4000D4B")]
		LoadingPlayerData,
		[Token(Token = "0x4000D4C")]
		ReadyToJoinRoom,
		[Token(Token = "0x4000D4D")]
		JoiningRoom,
		[Token(Token = "0x4000D4E")]
		Disconnected,
		[Token(Token = "0x4000D4F")]
		StartingSinglePlayerOffline,
		[Token(Token = "0x4000D50")]
		OfflineMode_LoadingPlayerData,
		[Token(Token = "0x4000D51")]
		OfflineMode_ReadyToJoinRoom
	}

	[Token(Token = "0x20001F3")]
	[CompilerGenerated]
	private sealed class <Start>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CookingLauncher <>4__this;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SaveManager <save>5__2;

		[Token(Token = "0x170001B3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D06")]
			[Address(RVA = "0xA8F348", Offset = "0xA8F348", VA = "0xA8F348", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D08")]
			[Address(RVA = "0xA8F390", Offset = "0xA8F390", VA = "0xA8F390", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0xA896B0", Offset = "0xA896B0", VA = "0xA896B0")]
		[DebuggerHidden]
		public <Start>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0xA8D4D8", Offset = "0xA8D4D8", VA = "0xA8D4D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0xA8D4DC", Offset = "0xA8D4DC", VA = "0xA8D4DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0xA8F350", Offset = "0xA8F350", VA = "0xA8F350", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001F4")]
	[CompilerGenerated]
	private sealed class <WaitForPlayerData>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CookingLauncher <>4__this;

		[Token(Token = "0x170001B5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D0C")]
			[Address(RVA = "0xA8F5D0", Offset = "0xA8F5D0", VA = "0xA8F5D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D0E")]
			[Address(RVA = "0xA8F618", Offset = "0xA8F618", VA = "0xA8F618", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0xA89AF0", Offset = "0xA89AF0", VA = "0xA89AF0")]
		[DebuggerHidden]
		public <WaitForPlayerData>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0xA8F398", Offset = "0xA8F398", VA = "0xA8F398", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0xA8F39C", Offset = "0xA8F39C", VA = "0xA8F39C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0xA8F5D8", Offset = "0xA8F5D8", VA = "0xA8F5D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001F5")]
	[CompilerGenerated]
	private sealed class <WaitForPlayerDataOffline>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CookingLauncher <>4__this;

		[Token(Token = "0x170001B7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D12")]
			[Address(RVA = "0xA8F824", Offset = "0xA8F824", VA = "0xA8F824", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D14")]
			[Address(RVA = "0xA8F86C", Offset = "0xA8F86C", VA = "0xA8F86C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0xA89B18", Offset = "0xA89B18", VA = "0xA89B18")]
		[DebuggerHidden]
		public <WaitForPlayerDataOffline>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0xA8F620", Offset = "0xA8F620", VA = "0xA8F620", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0xA8F624", Offset = "0xA8F624", VA = "0xA8F624", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0xA8F82C", Offset = "0xA8F82C", VA = "0xA8F82C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string gameVersion;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool enableUnityLogging;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private CookoutApplicationLifecycle prefabCookoutApplicationLifecycle;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private LauncherMenu launcherMenu;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Vector3 defaultCameraPosition;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private Vector3 defaultCameraRotation;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private UnlockableAvatarCustomizationList unlockableAvatarCustomizationList;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private BuyableAvatarCustomizationList buyableAvatarCustomizationList;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public PokeButton[] roomsAvailable;

	[Token(Token = "0x4000D44")]
	private const float reconnectPhotonWaitTime = 3f;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float reconnectPhotonTimer;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool firstAvatarLoad;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Status connectingStatusCache;

	[Token(Token = "0x170001B0")]
	public bool ReadyToJoin
	{
		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0xA891BC", Offset = "0xA891BC", VA = "0xA891BC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001B1")]
	public bool ReadyToPlayOffline
	{
		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0xA891D8", Offset = "0xA891D8", VA = "0xA891D8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001B2")]
	public Status ConnectingStatus
	{
		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0xA89358", Offset = "0xA89358", VA = "0xA89358")]
		get
		{
			return default(Status);
		}
		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0xA89360", Offset = "0xA89360", VA = "0xA89360")]
		private set
		{
		}
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0xA89534", Offset = "0xA89534", VA = "0xA89534")]
	public void ResetIntro()
	{
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0xA89648", Offset = "0xA89648", VA = "0xA89648")]
	[IteratorStateMachine(typeof(<Start>d__22))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0xA896D8", Offset = "0xA896D8", VA = "0xA896D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0xA897F0", Offset = "0xA897F0", VA = "0xA897F0")]
	public void PlayOffline()
	{
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0xA89730", Offset = "0xA89730", VA = "0xA89730")]
	private void Connect()
	{
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0xA89908", Offset = "0xA89908", VA = "0xA89908", Slot = "39")]
	public override void OnJoinedLobby()
	{
	}

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0xA89A88", Offset = "0xA89A88", VA = "0xA89A88")]
	[IteratorStateMachine(typeof(<WaitForPlayerData>d__27))]
	private IEnumerator WaitForPlayerData()
	{
		return null;
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0xA898A0", Offset = "0xA898A0", VA = "0xA898A0")]
	[IteratorStateMachine(typeof(<WaitForPlayerDataOffline>d__28))]
	private IEnumerator WaitForPlayerDataOffline()
	{
		return null;
	}

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0xA89380", Offset = "0xA89380", VA = "0xA89380")]
	private void OnStatusChanged(Status oldState, Status newState)
	{
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0xA89B40", Offset = "0xA89B40", VA = "0xA89B40")]
	private void JoinOrCreateRoom(string roomName, RoomIntent roomIntent, RoomVisibility roomVisibility, ApplicationTracking.JoinData trackingData)
	{
	}

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0xA8A1AC", Offset = "0xA8A1AC", VA = "0xA8A1AC")]
	public void JoinRoom(string roomName, ApplicationTracking.JoinData trackingData)
	{
	}

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0xA8A668", Offset = "0xA8A668", VA = "0xA8A668")]
	public void CreateRoom(RoomIntent roomIntent, RoomVisibility roomVisibility, int maxPlayerCount = 4)
	{
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0xA8AD14", Offset = "0xA8AD14", VA = "0xA8AD14")]
	public void OnDeepLinkToRoom()
	{
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0xA8AE64", Offset = "0xA8AE64", VA = "0xA8AE64", Slot = "45")]
	public override void OnReceivedRoomListUpdate()
	{
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0xA8AEA4", Offset = "0xA8AEA4", VA = "0xA8AEA4", Slot = "46")]
	public override void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0xA8B53C", Offset = "0xA8B53C", VA = "0xA8B53C", Slot = "36")]
	public override void OnPhotonCreateRoomFailed(object[] codeAndMsg)
	{
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0xA8B92C", Offset = "0xA8B92C", VA = "0xA8B92C", Slot = "49")]
	public override void OnPhotonRandomJoinFailed(object[] codeAndMsg)
	{
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0xA8BCCC", Offset = "0xA8BCCC", VA = "0xA8BCCC", Slot = "37")]
	public override void OnPhotonJoinRoomFailed(object[] codeAndMsg)
	{
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0xA8C0BC", Offset = "0xA8C0BC", VA = "0xA8C0BC", Slot = "41")]
	public override void OnFailedToConnectToPhoton(DisconnectCause cause)
	{
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0xA8C484", Offset = "0xA8C484", VA = "0xA8C484", Slot = "43")]
	public override void OnConnectionFail(DisconnectCause cause)
	{
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0xA8C870", Offset = "0xA8C870", VA = "0xA8C870", Slot = "42")]
	public override void OnDisconnectedFromPhoton()
	{
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0xA8D35C", Offset = "0xA8D35C", VA = "0xA8D35C")]
	public void StartSinglePlayer()
	{
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0xA8CF24", Offset = "0xA8CF24", VA = "0xA8CF24")]
	private void EnterOfflineSinglePlayerRoom()
	{
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0xA8D418", Offset = "0xA8D418", VA = "0xA8D418")]
	public CookingLauncher()
	{
	}
}
[Token(Token = "0x20001F8")]
public class CookingNetworkManager : SingleInstancePhotonCallbackListener<CookingNetworkManager>
{
	[Token(Token = "0x20001F9")]
	public delegate void LocalPlayerMovedHandler(int spawnPointIndex);

	[Token(Token = "0x20001FA")]
	public delegate void OnPlayerMovedHandler(int playerID);

	[Token(Token = "0x20001FE")]
	[CompilerGenerated]
	private sealed class <ReturnToLauncherAfterDelay>d__59 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CookingNetworkManager <>4__this;

		[Token(Token = "0x170001C0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D5B")]
			[Address(RVA = "0xA966C4", Offset = "0xA966C4", VA = "0xA966C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D5D")]
			[Address(RVA = "0xA9670C", Offset = "0xA9670C", VA = "0xA9670C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0xA9546C", Offset = "0xA9546C", VA = "0xA9546C")]
		[DebuggerHidden]
		public <ReturnToLauncherAfterDelay>d__59(int <>1__state)
		{
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0xA96614", Offset = "0xA96614", VA = "0xA96614", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0xA96618", Offset = "0xA96618", VA = "0xA96618", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0xA966CC", Offset = "0xA966CC", VA = "0xA966CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D5F")]
	public const byte InstantiateVrAvatarEventCode = 123;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] playerSpawnPoints;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<string> playerPositionKeys;

	[Token(Token = "0x4000D66")]
	public const string masterPausedKey = "masterPaused";

	[Token(Token = "0x4000D67")]
	public const int noPlayerPositionAssigned = -1;

	[Token(Token = "0x4000D68")]
	public const int noNewPositionClaimed = -1;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PhotonCallbackManager photonCallbackManager;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int pendingPositionClaim;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool isReturningToLauncher;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	private bool masterClientPaused;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float masterClientPausedTimer;

	[Token(Token = "0x170001B9")]
	public static GameObject waitingForHostText
	{
		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0xA8FBDC", Offset = "0xA8FBDC", VA = "0xA8FBDC")]
		[CompilerGenerated]
		private get
		{
			return null;
		}
		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0xA8FC24", Offset = "0xA8FC24", VA = "0xA8FC24")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001BA")]
	public bool LocalPlayerAssignedPosition
	{
		[Token(Token = "0x6000D20")]
		[Address(RVA = "0xA8FC70", Offset = "0xA8FC70", VA = "0xA8FC70")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001BB")]
	public int LocalPlayerPosIndex
	{
		[Token(Token = "0x6000D21")]
		[Address(RVA = "0xA8FC80", Offset = "0xA8FC80", VA = "0xA8FC80")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000D22")]
		[Address(RVA = "0xA8FC88", Offset = "0xA8FC88", VA = "0xA8FC88")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001BC")]
	public PlayerVoIP LocalVoIP
	{
		[Token(Token = "0x6000D23")]
		[Address(RVA = "0xA8FC90", Offset = "0xA8FC90", VA = "0xA8FC90")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D24")]
		[Address(RVA = "0xA8FC98", Offset = "0xA8FC98", VA = "0xA8FC98")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001BD")]
	public bool LeavingGame
	{
		[Token(Token = "0x6000D25")]
		[Address(RVA = "0xA8FCA0", Offset = "0xA8FCA0", VA = "0xA8FCA0")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D26")]
		[Address(RVA = "0xA8FCA8", Offset = "0xA8FCA8", VA = "0xA8FCA8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x14000016")]
	public event LocalPlayerMovedHandler OnLocalPlayerMoved
	{
		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0xA8F96C", Offset = "0xA8F96C", VA = "0xA8F96C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0xA8FA08", Offset = "0xA8FA08", VA = "0xA8FA08")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000017")]
	public event OnPlayerMovedHandler OnPlayerMoved
	{
		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0xA8FAA4", Offset = "0xA8FAA4", VA = "0xA8FAA4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0xA8FB40", Offset = "0xA8FB40", VA = "0xA8FB40")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0xA8FCB4", Offset = "0xA8FCB4", VA = "0xA8FCB4", Slot = "62")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0xA8FD5C", Offset = "0xA8FD5C", VA = "0xA8FD5C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0xA90A34", Offset = "0xA90A34", VA = "0xA90A34")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0xA90BD8", Offset = "0xA90BD8", VA = "0xA90BD8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0xA90D30", Offset = "0xA90D30", VA = "0xA90D30")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0xA911E4", Offset = "0xA911E4", VA = "0xA911E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0xA91720", Offset = "0xA91720", VA = "0xA91720")]
	private void OnCookoutPhotonRecv(byte eventcode, object content, int senderid)
	{
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0xA92064", Offset = "0xA92064", VA = "0xA92064")]
	private void OnMasterClientChanged(PhotonPlayer newMasterClient)
	{
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0xA921D8", Offset = "0xA921D8", VA = "0xA921D8")]
	private void SetLocalMasterClientPaused(bool isPaused)
	{
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0xA91F20", Offset = "0xA91F20", VA = "0xA91F20")]
	private void UpdateRemoteAvatarPosition(int remotePlayerID)
	{
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0xA91B80", Offset = "0xA91B80", VA = "0xA91B80")]
	public void MoveLocalPlayerToNextFreePosition(bool newPlayer)
	{
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0xA92824", Offset = "0xA92824", VA = "0xA92824")]
	public int GetNextFreePlayerPosition()
	{
		return default(int);
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0xA9293C", Offset = "0xA9293C", VA = "0xA9293C")]
	public void MoveLocalPlayerToPosition(int newPositionIndex, int oldPositionIndex = -1)
	{
	}

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0xA92BB4", Offset = "0xA92BB4", VA = "0xA92BB4", Slot = "52")]
	public override void OnPhotonCustomRoomPropertiesChanged(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0xA923C0", Offset = "0xA923C0", VA = "0xA923C0")]
	private void MovePlayerAvatar(int id, string positionKey)
	{
	}

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0xA93180", Offset = "0xA93180", VA = "0xA93180")]
	public int GetLocalPlayerSpawnPointIndex()
	{
		return default(int);
	}

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0xA931E8", Offset = "0xA931E8", VA = "0xA931E8")]
	public int GetPlayerPositionIndex(int targetID)
	{
		return default(int);
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0xA93370", Offset = "0xA93370", VA = "0xA93370")]
	public int GetPlayerAtPosition(int playerSlotIndex)
	{
		return default(int);
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0xA934E8", Offset = "0xA934E8", VA = "0xA934E8", Slot = "48")]
	public override void OnPhotonPlayerDisconnected(PhotonPlayer otherPlayer)
	{
	}

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0xA9493C", Offset = "0xA9493C", VA = "0xA9493C")]
	public bool[] GetOccupiedSeats()
	{
		return null;
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0xA94BD4", Offset = "0xA94BD4", VA = "0xA94BD4", Slot = "43")]
	public override void OnConnectionFail(DisconnectCause cause)
	{
	}

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0xA94C30", Offset = "0xA94C30", VA = "0xA94C30")]
	public void ReturnToLauncher()
	{
	}

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0xA953F4", Offset = "0xA953F4", VA = "0xA953F4")]
	[IteratorStateMachine(typeof(<ReturnToLauncherAfterDelay>d__59))]
	public IEnumerator ReturnToLauncherAfterDelay(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0xA95494", Offset = "0xA95494", VA = "0xA95494", Slot = "34")]
	public override void OnLeftRoom()
	{
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0xA95884", Offset = "0xA95884", VA = "0xA95884", Slot = "42")]
	public override void OnDisconnectedFromPhoton()
	{
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0xA95060", Offset = "0xA95060", VA = "0xA95060")]
	private void ClearPoolsAndMainSceneObjects()
	{
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0xA957FC", Offset = "0xA957FC", VA = "0xA957FC")]
	private void LoadLauncherScene()
	{
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0xA88B3C", Offset = "0xA88B3C", VA = "0xA88B3C")]
	public void KickPlayer(PhotonPlayer player)
	{
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0xA95BEC", Offset = "0xA95BEC", VA = "0xA95BEC")]
	[PunRPC]
	private void KickPlayerRPC(int playerID)
	{
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0xA95CC0", Offset = "0xA95CC0", VA = "0xA95CC0")]
	public static bool SinglePlayerActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0xA95D80", Offset = "0xA95D80", VA = "0xA95D80")]
	public CookingNetworkManager()
	{
	}
}
[Token(Token = "0x20001FF")]
public class DisconnectedWarning : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 offsetFromCamera;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera mainCamera;

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0xA96714", Offset = "0xA96714", VA = "0xA96714")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0xA96780", Offset = "0xA96780", VA = "0xA96780")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0xA9679C", Offset = "0xA9679C", VA = "0xA9679C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0xA9686C", Offset = "0xA9686C", VA = "0xA9686C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0xA9696C", Offset = "0xA9696C", VA = "0xA9696C")]
	public DisconnectedWarning()
	{
	}
}
[Token(Token = "0x2000200")]
public class IdlePlayerKicker : SingleInstanceNetworkedBehavior<IdlePlayerKicker>, IPunObservable
{
	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool checkForIdlePlayer;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float idleTimeThreshold;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float idleTime;

	[Token(Token = "0x170001C2")]
	public bool IsActive
	{
		[Token(Token = "0x6000D63")]
		[Address(RVA = "0xA96974", Offset = "0xA96974", VA = "0xA96974")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0xA9697C", Offset = "0xA9697C", VA = "0xA9697C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0xA96AA4", Offset = "0xA96AA4", VA = "0xA96AA4")]
	private void KickIdlePlayer()
	{
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0xA96B84", Offset = "0xA96B84", VA = "0xA96B84")]
	[PunRPC]
	private void DebugSetIdleKickerActiveRPC(bool isActive)
	{
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0xA96B90", Offset = "0xA96B90", VA = "0xA96B90", Slot = "6")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0xA96C4C", Offset = "0xA96C4C", VA = "0xA96C4C")]
	public IdlePlayerKicker()
	{
	}
}
[Token(Token = "0x2000201")]
public interface IOwnershipTransferedListener
{
	[Token(Token = "0x6000D69")]
	void OnOwnershipTransfered(PhotonPlayer newOwner, PhotonPlayer oldOwner);
}
[Token(Token = "0x2000202")]
public class LauncherMenu : SingleInstanceBehavior<LauncherMenu>
{
	[Token(Token = "0x2000203")]
	public enum State
	{
		[Token(Token = "0x4000DAC")]
		Inactive,
		[Token(Token = "0x4000DAD")]
		Intro,
		[Token(Token = "0x4000DAE")]
		GameModeSelect,
		[Token(Token = "0x4000DAF")]
		Connecting,
		[Token(Token = "0x4000DB0")]
		MultiplayerMenu,
		[Token(Token = "0x4000DB1")]
		Settings,
		[Token(Token = "0x4000DB2")]
		BlockList,
		[Token(Token = "0x4000DB3")]
		AudioSettings,
		[Token(Token = "0x4000DB4")]
		LanguageSettings,
		[Token(Token = "0x4000DB5")]
		AvatarSelection,
		[Token(Token = "0x4000DB6")]
		Error
	}

	[Token(Token = "0x2000204")]
	private enum ActionOnReadyToJoin
	{
		[Token(Token = "0x4000DB8")]
		None,
		[Token(Token = "0x4000DB9")]
		SelectSinglePlayer,
		[Token(Token = "0x4000DBA")]
		SelectMultiplayer,
		[Token(Token = "0x4000DBB")]
		SelectTutorial
	}

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Button Materials")]
	[SerializeField]
	private Material activeMultiplayerButtonMat;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material inactiveButtonMat;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("References")]
	[SerializeField]
	private PokeButton singlePlayerButton;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private PokeButton multiPlayerButton;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private PokeButton settingsButton;

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private PokeButton tutorialButton;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private PokeButton avatarSelectionButton;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform launcherMenuRoot;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject modeSelectionRoot;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject connectionStateRoot;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private TextMeshPro connectingLabel;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private TextMeshPro connectionAttemptCountText;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private CookingLauncher launcher;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private PokeButton playOfflineButton;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject discordPrompt;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject handOffsetAdjustmentPrompt;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject patchPrompt;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private AudioSource musicAudioSource;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private TextMeshPro versionNumberText;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private GameObject errorMessageGO;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private GameObject newAvatarOptionNotification;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private PokeButton customizeDefaultAvatarButton;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private PokeButton setupNewOculusAvatarButton;

	[NonSerialized]
	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool versionMismatchWarn;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private LauncherMenuIntro launcherMenuIntro;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private LauncherMultiplayerMenu multiplayerMenu;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private LauncherMenuPopup popup;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private LauncherMenuBlockList launcherMenuBlockList;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private LauncherMenuSettings launcherMenuSettings;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private LauncherMenuAudioSettings LauncherMenuAudioSettings;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private LanguageSettings LauncherMenuLanguageSettings;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private LauncherMenuPopup launcherMenuPopup;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private AvatarSelectionMenu AvatarSelectionMenu;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Renderer multiplayerButtonRenderer;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private LocalizedText multiplayerButtonText;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private State menuStateBacking;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private ActionOnReadyToJoin actionOnReadyToJoin;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private int connectionAttemptCount;

	[Token(Token = "0x4000DA6")]
	private const float newAvatarScaleMin = 0.01f;

	[Token(Token = "0x4000DA7")]
	private const float newAvatarScaleMax = 0.012f;

	[Token(Token = "0x4000DA8")]
	private const float newAvatarCycleLength = 1.5f;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private float newAvatarAnimationTick;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Transform newAvatarOptionNotificationT;

	[Token(Token = "0x170001C3")]
	private State MenuState
	{
		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0xA96CC8", Offset = "0xA96CC8", VA = "0xA96CC8")]
		get
		{
			return default(State);
		}
		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0xA96CD0", Offset = "0xA96CD0", VA = "0xA96CD0")]
		set
		{
		}
	}

	[Token(Token = "0x170001C4")]
	public static bool NewAvatarOptionsAvailable
	{
		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0xA96F10", Offset = "0xA96F10", VA = "0xA96F10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0xA96FDC", Offset = "0xA96FDC", VA = "0xA96FDC", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0xA9756C", Offset = "0xA9756C", VA = "0xA9756C")]
	private void ShortcutToAvatarMenu(AvatarType expectedType)
	{
	}

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0xA976B8", Offset = "0xA976B8", VA = "0xA976B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0xA8F1F8", Offset = "0xA8F1F8", VA = "0xA8F1F8")]
	public void Init()
	{
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0xA97808", Offset = "0xA97808", VA = "0xA97808")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0xA97A64", Offset = "0xA97A64", VA = "0xA97A64")]
	public void VersionTextRefresh()
	{
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0xA97A34", Offset = "0xA97A34", VA = "0xA97A34")]
	private void OculusOnHMDMounted()
	{
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0xA97D08", Offset = "0xA97D08", VA = "0xA97D08")]
	public void PlayOffline()
	{
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0xA97E00", Offset = "0xA97E00", VA = "0xA97E00")]
	public void SelectSinglePlayer()
	{
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0xA9770C", Offset = "0xA9770C", VA = "0xA9770C")]
	public void SelectMultiPlayer()
	{
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0xA9809C", Offset = "0xA9809C", VA = "0xA9809C")]
	public void SelectTutorial()
	{
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0xA89628", Offset = "0xA89628", VA = "0xA89628")]
	public void ShowIntro()
	{
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0xA981C0", Offset = "0xA981C0", VA = "0xA981C0")]
	public void ShowSettings()
	{
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0xA89608", Offset = "0xA89608", VA = "0xA89608")]
	public void ShowGameModeSelect()
	{
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0xA981E0", Offset = "0xA981E0", VA = "0xA981E0")]
	public void ShowBlockList()
	{
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0xA98200", Offset = "0xA98200", VA = "0xA98200")]
	public void ShowAudioSettings()
	{
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0xA98220", Offset = "0xA98220", VA = "0xA98220")]
	public void ShowLanguageSettings()
	{
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0xA9761C", Offset = "0xA9761C", VA = "0xA9761C")]
	public void ShowAvatarSelection()
	{
	}

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0xA98240", Offset = "0xA98240", VA = "0xA98240")]
	public void ShowError()
	{
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0xA97F20", Offset = "0xA97F20", VA = "0xA97F20")]
	public void ShowConnecting(bool disconnected = false)
	{
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0xA96CEC", Offset = "0xA96CEC", VA = "0xA96CEC")]
	private void OnMenuStateChanged(State oldState, State newState)
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0xA8A078", Offset = "0xA8A078", VA = "0xA8A078")]
	public void OnReadyToJoinRoom()
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0xA8AE88", Offset = "0xA8AE88", VA = "0xA8AE88")]
	public void OnRoomListUpdate()
	{
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0xA8A144", Offset = "0xA8A144", VA = "0xA8A144")]
	public void StartingSinglePlayer()
	{
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0xA8F1D4", Offset = "0xA8F1D4", VA = "0xA8F1D4")]
	public void InformAboutDeprecatedAvatars()
	{
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0xA8A168", Offset = "0xA8A168", VA = "0xA8A168")]
	public void OnJoiningRoom()
	{
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0xA8B8E8", Offset = "0xA8B8E8", VA = "0xA8B8E8")]
	public void OnRoomHostFailed()
	{
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0xA8C078", Offset = "0xA8C078", VA = "0xA8C078")]
	public void OnRoomJoinFailed()
	{
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0xA89A0C", Offset = "0xA89A0C", VA = "0xA89A0C")]
	public void OnConnectedToPhoton()
	{
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0xA8C480", Offset = "0xA8C480", VA = "0xA8C480")]
	public void OnFailedToConnectToPhoton()
	{
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0xA8C84C", Offset = "0xA8C84C", VA = "0xA8C84C")]
	public void OnConnectionFail()
	{
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0xA9883C", Offset = "0xA9883C", VA = "0xA9883C")]
	public void DisplayVersionMismatchPopup()
	{
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0xA98DA8", Offset = "0xA98DA8", VA = "0xA98DA8")]
	public void ClosePopup()
	{
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0xA8CEF0", Offset = "0xA8CEF0", VA = "0xA8CEF0")]
	public void OnNetworkConnectionFailed()
	{
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0xA8ACF0", Offset = "0xA8ACF0", VA = "0xA8ACF0")]
	public void FailedToCreateUniqueRoomCode()
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0xA976E8", Offset = "0xA976E8", VA = "0xA976E8")]
	public void OnKickedFromRoom()
	{
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0xA98DC0", Offset = "0xA98DC0", VA = "0xA98DC0")]
	public void HideLauncher(bool isActive)
	{
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0xA98794", Offset = "0xA98794", VA = "0xA98794")]
	private void MultiplayerMenuButtonActiveSet(bool isActive)
	{
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0xA98E7C", Offset = "0xA98E7C", VA = "0xA98E7C")]
	public LauncherMenu()
	{
	}
}
[Token(Token = "0x2000206")]
public class LauncherMenuAudioSettings : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject SettingsParent;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PokeButton exitButton;

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0xA99064", Offset = "0xA99064", VA = "0xA99064")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0xA9875C", Offset = "0xA9875C", VA = "0xA9875C")]
	public void Show(bool shouldShow)
	{
	}

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0xA99148", Offset = "0xA99148", VA = "0xA99148")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0xA99150", Offset = "0xA99150", VA = "0xA99150")]
	public LauncherMenuAudioSettings()
	{
	}
}
[Token(Token = "0x2000208")]
public class LauncherMenuBlockList : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000209")]
	private class BlockedPlayer
	{
		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CookoutUserId id;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string name;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool hasUnblocked;

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0xA99398", Offset = "0xA99398", VA = "0xA99398")]
		public BlockedPlayer(CookoutUserId id, string name)
		{
		}
	}

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[Header("Row References")]
	private PokeButton[] unblockButtons;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private MeshRenderer[] unblockButtonRenderers;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshPro[] unblockButtonTexts;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMeshPro[] playerNameTexts;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material pressedMaterial;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Material defaultMaterial;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Other")]
	[SerializeField]
	private PokeButton scrollBackButton;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private PokeButton scrollForwardButton;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject blockListParent;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private TextMeshPro failedToLoadText;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject noPlayerBlockedText;

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private PokeButton exitButton;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private LauncherMenu launcherMenu;

	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int entriesPerPage;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private BlockedPlayer[] blockedPlayers;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int currentPageIndex;

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0xA99190", Offset = "0xA99190", VA = "0xA99190")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0xA982B0", Offset = "0xA982B0", VA = "0xA982B0")]
	public void Show(bool shouldShow)
	{
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0xA993DC", Offset = "0xA993DC", VA = "0xA993DC")]
	private void OnBlockedPlayerNameUpdated(int listIndex)
	{
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0xA9940C", Offset = "0xA9940C", VA = "0xA9940C")]
	private void ShowPage(int pageIndex)
	{
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0xA995D4", Offset = "0xA995D4", VA = "0xA995D4")]
	private void UpdateDisplayedPlayerRow(int buttonIndex, int listIndex)
	{
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0xA997A0", Offset = "0xA997A0", VA = "0xA997A0")]
	private void OnUnblockedPresed(int buttonIndex)
	{
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0xA998E0", Offset = "0xA998E0", VA = "0xA998E0")]
	private void ScrollForwardPressed()
	{
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0xA998EC", Offset = "0xA998EC", VA = "0xA998EC")]
	private void ScrollBackwardPressed()
	{
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0xA99790", Offset = "0xA99790", VA = "0xA99790")]
	private int ButtonIndexToListIndex(int buttonIndex)
	{
		return default(int);
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0xA995C4", Offset = "0xA995C4", VA = "0xA995C4")]
	private int ListIndexToButtonIndex(int listIndex)
	{
		return default(int);
	}

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0xA998F8", Offset = "0xA998F8", VA = "0xA998F8")]
	public LauncherMenuBlockList()
	{
	}
}
[Token(Token = "0x200020B")]
public class LauncherMenuIntro : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200020C")]
	private enum IntroState
	{
		[Token(Token = "0x4000E04")]
		Inactive,
		[Token(Token = "0x4000E05")]
		GDPR,
		[Token(Token = "0x4000E06")]
		Logo,
		[Token(Token = "0x4000E07")]
		AvatarSelection,
		[Token(Token = "0x4000E08")]
		Tutorial,
		[Token(Token = "0x4000E09")]
		ConfirmSkipTutorial
	}

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IntroState stateBacking;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool hasStartedWithLogo;

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("References")]
	[SerializeField]
	private PokeButton checkboxGDPR;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PokeButton acceptGDPRButton;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Material activeButtonMaterial;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material inactiveButtonMaterial;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private MeshRenderer acceptGDPRButtonRenderer;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private PokeButton playButton;

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private PokeButton[] playTutorialButtons;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private PokeButton skipTutorialButton;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private PokeButton confirmSkipTutorialButton;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject GDPRparent;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject logoParent;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject avatarSelectionParent;

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject startTutorialParent;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject confirmSkipTutorialParent;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject LoadingPrompt;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private MenuVisibility mainMenuVisuals;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private SpriteRenderer checkMarkRenderer;

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Sprite checkMarkFilled;

	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Sprite checkMarkOutline;

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	[Header("Logo Animation")]
	private Animator logoAnimator;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private Animator logoButtonAnimator;

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private GameObject subLogoJapanese;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private GameObject subLogoKorean;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private Renderer bannerRenderer;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private Texture[] bannerTextures;

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private float exitDelay;

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	[SerializeField]
	private float buttonEnterDelay;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private float buttonExitDelay;

	[Token(Token = "0x4000DF4")]
	public const int trueValue = 1;

	[Token(Token = "0x4000DF5")]
	public const string playerPrefKeyGDPR = "GDPRAccepted";

	[Token(Token = "0x4000DF6")]
	public const string playerPrefKeyIntroPassed = "IntroPassed";

	[Token(Token = "0x4000DF7")]
	private const string localeJP = "ja-JP";

	[Token(Token = "0x4000DF8")]
	private const string localeKR = "ko-KR";

	[Token(Token = "0x4000DF9")]
	private const string localeEN = "en-US";

	[Token(Token = "0x4000DFA")]
	private const string localeDE = "de-DE";

	[Token(Token = "0x4000DFB")]
	private const string localeFR = "fr-FR";

	[Token(Token = "0x4000DFC")]
	private const string localeES = "es-419";

	[Token(Token = "0x4000DFD")]
	private const string mainTexProperty = "_MainTex";

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private bool isGDPRChecked;

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
	private bool loadingOculusV2Avatar;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private MaterialPropertyBlock propertyBlock;

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private AvatarSelectionMenu avatarSelectionMenu;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private LauncherMenu launcherMenu;

	[Token(Token = "0x170001C5")]
	private IntroState State
	{
		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0xA99958", Offset = "0xA99958", VA = "0xA99958")]
		get
		{
			return default(IntroState);
		}
		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0xA99960", Offset = "0xA99960", VA = "0xA99960")]
		set
		{
		}
	}

	[Token(Token = "0x170001C6")]
	public static bool HasAcceptedGDPR
	{
		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0xA99B6C", Offset = "0xA99B6C", VA = "0xA99B6C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0xA99BC0", Offset = "0xA99BC0", VA = "0xA99BC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0xA99F00", Offset = "0xA99F00", VA = "0xA99F00")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0xA9A3B4", Offset = "0xA9A3B4", VA = "0xA9A3B4")]
	private void ToggleGDPRCheckbox()
	{
	}

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0xA9A3C4", Offset = "0xA9A3C4", VA = "0xA9A3C4")]
	private void UpdateGDPRButtonVisuals()
	{
	}

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0xA9A430", Offset = "0xA9A430", VA = "0xA9A430")]
	public void OnPlayButtonClicked()
	{
	}

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0xA9A5B4", Offset = "0xA9A5B4", VA = "0xA9A5B4")]
	public void OnChooseAvatarButtonClicked()
	{
	}

	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0xA9A5D4", Offset = "0xA9A5D4", VA = "0xA9A5D4")]
	private void MarkIntroAsPassed()
	{
	}

	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0xA99980", Offset = "0xA99980", VA = "0xA99980")]
	private void OnStateChange(IntroState oldState, IntroState newState)
	{
	}

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0xA99FE0", Offset = "0xA99FE0", VA = "0xA99FE0")]
	private void StartLogoAnimation()
	{
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0xA99FA0", Offset = "0xA99FA0", VA = "0xA99FA0")]
	private void ActivateGDPRUI()
	{
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0xA986A4", Offset = "0xA986A4", VA = "0xA986A4")]
	public void Show(bool shouldShow)
	{
	}

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0xA977CC", Offset = "0xA977CC", VA = "0xA977CC")]
	public void SkipLoadingSequence()
	{
	}

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0xA9A61C", Offset = "0xA9A61C", VA = "0xA9A61C")]
	public LauncherMenuIntro()
	{
	}
}
[Token(Token = "0x200020D")]
public class LauncherMenuPopup : SingleInstanceBehavior<LauncherMenuPopup>
{
	[Token(Token = "0x200020E")]
	public delegate void OnPopupDisplayedHandler();

	[Token(Token = "0x200020F")]
	public delegate void OnPopupHiddenHandler();

	[Token(Token = "0x2000210")]
	public enum PopupType
	{
		[Token(Token = "0x4000E28")]
		JoiningRoom,
		[Token(Token = "0x4000E29")]
		FailedToJoinRoom,
		[Token(Token = "0x4000E2A")]
		FailedToHostRoom,
		[Token(Token = "0x4000E2B")]
		FailedCreatingUniqueCode,
		[Token(Token = "0x4000E2C")]
		KickedFromRoom,
		[Token(Token = "0x4000E2D")]
		ConnectionToServerLost,
		[Token(Token = "0x4000E2E")]
		VersionMismatch,
		[Token(Token = "0x4000E2F")]
		ConfirmJoinRoom,
		[Token(Token = "0x4000E30")]
		QuickJoinFailed,
		[Token(Token = "0x4000E31")]
		None,
		[Token(Token = "0x4000E32")]
		DeprecatedAvatar
	}

	[Token(Token = "0x2000211")]
	public class DialogButtonSettings
	{
		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action onPressed;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string buttonText;

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0xA9B7EC", Offset = "0xA9B7EC", VA = "0xA9B7EC")]
		public DialogButtonSettings()
		{
		}
	}

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Generic Popup")]
	public GameObject popupRoot;

	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PokeButton[] exitButtons;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshPro popupText;

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject popupTextAvatarDeprecated;

	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshPro versionText;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject genericPopupParent;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PokeButton dialogButton;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public PokeButton cancelAvatarUpdate;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Header("Confirm Join Popup")]
	public GameObject confirmJoinPopupParent;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public PokeButton confirmJoinButton;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject forceAvatarChoiceParent;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public SpriteRenderer townSprite;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public SpriteRenderer playerCountSpriteRenderer;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TextMeshPro intentText;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TextMeshPro townName;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TextMeshPro[] playerNames;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public SpriteRenderer[] playerNameSprites;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Sprite emptySlotSprite;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Sprite occupiedSlotSprite;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private CookoutUserId[] playerUserIds;

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 startScale;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private PopupType displayedType;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private PopupType queuedPopupType;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Action onJoinPressedAction;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Collider[] colliders;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private TextMeshPro dialogButtonText;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Action dialogButtonPressAction;

	[Token(Token = "0x170001C7")]
	public bool IsShowing
	{
		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0xA99054", Offset = "0xA99054", VA = "0xA99054")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000018")]
	public event OnPopupDisplayedHandler OnPopupDisplayed
	{
		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0xA9AB90", Offset = "0xA9AB90", VA = "0xA9AB90")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0xA9AC2C", Offset = "0xA9AC2C", VA = "0xA9AC2C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000019")]
	public event OnPopupHiddenHandler OnPopupHidden
	{
		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0xA9ACC8", Offset = "0xA9ACC8", VA = "0xA9ACC8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0xA9AD64", Offset = "0xA9AD64", VA = "0xA9AD64")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0xA9AE00", Offset = "0xA9AE00", VA = "0xA9AE00", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0xA98860", Offset = "0xA98860", VA = "0xA98860")]
	public void ShowPopup(PopupType popupType, bool queueIfAlreadyShowing = false, [Optional] DialogButtonSettings dialogButtonSettings)
	{
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0xA9B0F8", Offset = "0xA9B0F8", VA = "0xA9B0F8")]
	private void EnableColliders(bool enabled)
	{
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0xA9B084", Offset = "0xA9B084", VA = "0xA9B084")]
	private void EnableExitButtons(bool enabled)
	{
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0xA9B160", Offset = "0xA9B160", VA = "0xA9B160")]
	public void ShowConfirmJoinPopup(Action OnJoinedPressed, Sprite environment, string townName, Sprite playerCountSprite, MatchmakingTicket roomTicket)
	{
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0xA9B4FC", Offset = "0xA9B4FC", VA = "0xA9B4FC")]
	private void OnDialogButtonPressed()
	{
	}

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0xA9B540", Offset = "0xA9B540", VA = "0xA9B540")]
	private void OnJoinButtonPressed()
	{
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0xA9763C", Offset = "0xA9763C", VA = "0xA9763C")]
	public void OnExitButtonClicked()
	{
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0xA9B578", Offset = "0xA9B578", VA = "0xA9B578")]
	public LauncherMenuPopup()
	{
	}
}
[Token(Token = "0x2000212")]
public class LauncherMenuSettings : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject SettingsParent;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PokeButton preferLeftHandButton;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PokeButton preferRightHandButton;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private PokeButton autoHoldHandButton;

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private PokeButton exitAudioSettingsButton;

	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private PokeButton exitLanguageSettingsButton;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private PokeButton audioSettingsButton;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private PokeButton languageSettingsButton;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private PokeButton openBlockListButton;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Material inactiveMat;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Material activeMat;

	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Renderer leftButtonRenderer;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Renderer rightButtonRenderer;

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Renderer autoHoldHandRenderer;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private LauncherMenu launcherMenu;

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0xA9B7F4", Offset = "0xA9B7F4", VA = "0xA9B7F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0xA98260", Offset = "0xA98260", VA = "0xA98260")]
	public void Show(bool shouldShow)
	{
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0xA9BB04", Offset = "0xA9BB04", VA = "0xA9BB04")]
	private void RefreshPreferredHandButtons()
	{
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0xA9BC24", Offset = "0xA9BC24", VA = "0xA9BC24")]
	private void RefreshAutoHoldButtons()
	{
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0xA9BD1C", Offset = "0xA9BD1C", VA = "0xA9BD1C")]
	private void SetPreferredHand(CookoutHandedness handedness)
	{
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0xA9BE10", Offset = "0xA9BE10", VA = "0xA9BE10")]
	private void SetAutoTogglePreference()
	{
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0xA9BF04", Offset = "0xA9BF04", VA = "0xA9BF04")]
	public LauncherMenuSettings()
	{
	}
}
[Token(Token = "0x2000213")]
public class LauncherMultiplayerMenu : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000214")]
	public enum MultiplayerMenuState
	{
		[Token(Token = "0x4000E88")]
		Inactive,
		[Token(Token = "0x4000E89")]
		StartMenu,
		[Token(Token = "0x4000E8A")]
		JoinByCode,
		[Token(Token = "0x4000E8B")]
		Host,
		[Token(Token = "0x4000E8C")]
		Matchmake,
		[Token(Token = "0x4000E8D")]
		RoomList
	}

	[Token(Token = "0x2000215")]
	private enum MatchmakingType
	{
		[Token(Token = "0x4000E8F")]
		Fun,
		[Token(Token = "0x4000E90")]
		Progression
	}

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CookingLauncher launcher;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PokeButton goBackButton;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Material selectButtonLettuceMaterial;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Material deselectLettuceButtonMaterial;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material selectButtonMaterial;

	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Material deselectButtonMaterial;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("MultiplayerMenu")]
	[SerializeField]
	private GameObject startMenuStateRoot;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private PokeButton enterCodeButton;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private PokeButton hostMenuButton;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private PokeButton quickplayButtonFun;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private PokeButton quickplayButtonProgression;

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private PokeButton roomListButton;

	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject recommendedRoomRoot;

	[Token(Token = "0x4000E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private RoomListItem[] recommendedRooms;

	[Token(Token = "0x4000E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Header("Room List")]
	[SerializeField]
	private GameObject roomListStateRoot;

	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Sprite spritePlayer1;

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Sprite spritePlayer2;

	[Token(Token = "0x4000E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Sprite spritePlayer3;

	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Sprite spriteLobbyCastle;

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Sprite spriteLobbyEndless;

	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private Sprite spriteLobbyForest;

	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private Sprite spriteLobbyVillage;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private Sprite spriteLobbyThroneRoom;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private Sprite spriteLobbyCreative;

	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private TMP_Text textPagination;

	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private PokeButton buttonPaginationPrev;

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private PokeButton buttonPaginationNext;

	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private TMP_Text noRoomsText;

	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private RoomListItem[] roomListItems;

	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private PokeButton[] filterRoomIntentButtons;

	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[Header("Room Code")]
	[SerializeField]
	private GameObject privateJoinStateRoot;

	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[Header("Host Room")]
	[SerializeField]
	private GameObject hostStateRoot;

	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private PokeButton roomCreateButton;

	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private PokeButton[] hostRoomIntentButtons;

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private PokeButton[] hostRoomVisibilityButtons;

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[Header("Matchmake")]
	[SerializeField]
	private GameObject matchmakeStateRoot;

	[Token(Token = "0x4000E68")]
	private const string NO_ROOM_LABEL = "---";

	[Token(Token = "0x4000E69")]
	private const float BUTTON_PRESS_COOLDOWN_TIME = 0.25f;

	[Token(Token = "0x4000E6A")]
	private const float POPUP_HIDDEN_BUTTON_DELAY = 0.25f;

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly CookoutUserId[] emptyList;

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly string[] emptyNameList;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private MultiplayerMenuState menuStatePrev;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private MultiplayerMenuState menuStateCurr;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private RoomNumpad roomNumpad;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private LauncherMenu launcherMenu;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private LauncherMenuPopup launcherMenuPopup;

	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private bool[] filterRoomIntent;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private RoomIntent hostRoomIntent;

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private RoomVisibility hostRoomVisibility;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private List<float> visitRoomTimestamp;

	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private List<string> visitRoomCode;

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private List<MatchmakingTicket> availableRoomTickets;

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private IList<MatchmakingTicket> validSortedRoomTickets;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private MatchmakingConfig matchmakingConfig;

	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private MatchmakingAlgorithm matchmakingAlgorithmQuickPlayFun;

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private MatchmakingAlgorithm matchmakingAlgorithmQuickPlayProgression;

	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private MatchmakingAlgorithm matchmakingAlgorithmFriends;

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private float buttonPressCooldown;

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private bool doRefreshRoomList;

	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private int roomListPaginationCursor;

	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private Renderer paginationPrevArrowRenderer;

	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private Renderer paginationNextArrowRenderer;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private MatchmakingType matchmakingType;

	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private bool[] quickplayFunValidIntents;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private bool[] quickplayProgressValidIntents;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private RoomIntent[] roomIntentOrderFun;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private RoomIntent[] roomIntentOrderProgress;

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0xA9BF58", Offset = "0xA9BF58", VA = "0xA9BF58")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0xA9D84C", Offset = "0xA9D84C", VA = "0xA9D84C")]
	private void OnPopupHidden()
	{
	}

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0xA9D860", Offset = "0xA9D860", VA = "0xA9D860")]
	private void ChangeState(MultiplayerMenuState menuStateNext)
	{
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0xA9D868", Offset = "0xA9D868", VA = "0xA9D868")]
	public void Show(bool shouldShow)
	{
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0xA9D884", Offset = "0xA9D884", VA = "0xA9D884")]
	private void GoToPreviousMenuState()
	{
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0xA9D8D4", Offset = "0xA9D8D4", VA = "0xA9D8D4")]
	public void OnJoiningRoom()
	{
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0xA9D9D0", Offset = "0xA9D9D0", VA = "0xA9D9D0")]
	public void OnRoomHostFailed()
	{
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0xA9D9D4", Offset = "0xA9D9D4", VA = "0xA9D9D4")]
	public void OnRoomJoinFailed()
	{
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0xA9DAE8", Offset = "0xA9DAE8", VA = "0xA9DAE8")]
	public void OnPhotonDisconnect()
	{
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0xA9DBD0", Offset = "0xA9DBD0", VA = "0xA9DBD0")]
	public void OnRoomListUpdate()
	{
	}

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0xA9E1CC", Offset = "0xA9E1CC", VA = "0xA9E1CC")]
	private void RefreshRoomListItem(RoomListItem room, MatchmakingTicket roomTicket)
	{
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0xA9E7B0", Offset = "0xA9E7B0", VA = "0xA9E7B0")]
	private void JoinRoomFromList(RoomListItem room, int iRoomTicket, bool suggestedRoom = false)
	{
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0xA9EB34", Offset = "0xA9EB34", VA = "0xA9EB34")]
	private void SubmitTelemetryMatchmaking(bool success, string reason, int roomCountValid, int roomCountTotal)
	{
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0xA9EF30", Offset = "0xA9EF30", VA = "0xA9EF30")]
	private MatchmakingTicket CreatePlayerTicket()
	{
		return null;
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0xA9F304", Offset = "0xA9F304", VA = "0xA9F304")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0xAA0214", Offset = "0xAA0214", VA = "0xAA0214")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0xAA02E8", Offset = "0xAA02E8", VA = "0xAA02E8")]
	public LauncherMultiplayerMenu()
	{
	}
}
[Token(Token = "0x200021A")]
public class NetworkedBehaviour : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PhotonView pvCache;

	[Token(Token = "0x170001C8")]
	public PhotonView photonView
	{
		[Token(Token = "0x6000E15")]
		[Address(RVA = "0xAA0860", Offset = "0xAA0860", VA = "0xAA0860")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0xAA08F4", Offset = "0xAA08F4", VA = "0xAA08F4")]
	public NetworkedBehaviour()
	{
	}
}
[Token(Token = "0x200021B")]
public class PhotonCallbackListener : PunBehaviour
{
	[Token(Token = "0x6000E17")]
	[Address(RVA = "0xAA08FC", Offset = "0xAA08FC", VA = "0xAA08FC", Slot = "62")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0xAA0A04", Offset = "0xAA0A04", VA = "0xAA0A04", Slot = "63")]
	public virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0xAA0B20", Offset = "0xAA0B20", VA = "0xAA0B20")]
	public PhotonCallbackListener()
	{
	}
}
[Token(Token = "0x200021C")]
public class PhotonCallbackManager : SingleInstancePhotonCallbackListener<PhotonCallbackManager>
{
	[Token(Token = "0x200021D")]
	public delegate void OnPlayerConnectedHandler(PhotonPlayer newPlayer);

	[Token(Token = "0x200021E")]
	public delegate void OnPlayerDisconnectedHandler(PhotonPlayer otherPlayer);

	[Token(Token = "0x200021F")]
	public delegate void OnPlayerPropertiesChangedHandler(PhotonPlayer player, ExitGames.Client.Photon.Hashtable props);

	[Token(Token = "0x2000220")]
	public delegate void OnPhotonCustomRoomPropertiesChangedHandler(ExitGames.Client.Photon.Hashtable props);

	[Token(Token = "0x2000221")]
	public delegate void OnMasterClientSwitchedHandler(PhotonPlayer newMasterClient);

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HashSet<PhotonView> grabbableOwnershipTransferListeners;

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Dictionary<PhotonView, IOwnershipTransferedListener> ownershipTransferListeners;

	[Token(Token = "0x1400001A")]
	public event OnPlayerConnectedHandler OnPlayerConnected
	{
		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0xAA0B28", Offset = "0xAA0B28", VA = "0xAA0B28")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0xAA0BC4", Offset = "0xAA0BC4", VA = "0xAA0BC4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001B")]
	public event OnPlayerDisconnectedHandler OnPlayerDisconnected
	{
		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0xAA0C60", Offset = "0xAA0C60", VA = "0xAA0C60")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0xAA0CFC", Offset = "0xAA0CFC", VA = "0xAA0CFC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001C")]
	public event OnPlayerPropertiesChangedHandler OnPlayerPropertiesChanged
	{
		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0xAA0D98", Offset = "0xAA0D98", VA = "0xAA0D98")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0xAA0E34", Offset = "0xAA0E34", VA = "0xAA0E34")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001D")]
	public event OnPhotonCustomRoomPropertiesChangedHandler OnRoomPropertiesChanged
	{
		[Token(Token = "0x6000E20")]
		[Address(RVA = "0xAA0ED0", Offset = "0xAA0ED0", VA = "0xAA0ED0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000E21")]
		[Address(RVA = "0xAA0F6C", Offset = "0xAA0F6C", VA = "0xAA0F6C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001E")]
	public event OnMasterClientSwitchedHandler OnMasterClientChanged
	{
		[Token(Token = "0x6000E22")]
		[Address(RVA = "0xAA1008", Offset = "0xAA1008", VA = "0xAA1008")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000E23")]
		[Address(RVA = "0xAA10A4", Offset = "0xAA10A4", VA = "0xAA10A4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0xAA1140", Offset = "0xAA1140", VA = "0xAA1140", Slot = "61")]
	public override void OnOwnershipTransfered(object[] viewAndPlayers)
	{
	}

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0xAA13F0", Offset = "0xAA13F0", VA = "0xAA13F0", Slot = "47")]
	public override void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
	{
	}

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0xAA140C", Offset = "0xAA140C", VA = "0xAA140C", Slot = "48")]
	public override void OnPhotonPlayerDisconnected(PhotonPlayer otherPlayer)
	{
	}

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0xAA1428", Offset = "0xAA1428", VA = "0xAA1428", Slot = "53")]
	public override void OnPhotonPlayerPropertiesChanged(object[] playerAndUpdatedProps)
	{
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0xAA1534", Offset = "0xAA1534", VA = "0xAA1534", Slot = "52")]
	public override void OnPhotonCustomRoomPropertiesChanged(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0xAA1550", Offset = "0xAA1550", VA = "0xAA1550", Slot = "35")]
	public override void OnMasterClientSwitched(PhotonPlayer newMasterClient)
	{
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0xAA156C", Offset = "0xAA156C", VA = "0xAA156C")]
	public PhotonCallbackManager()
	{
	}
}
[Token(Token = "0x2000222")]
public static class RoomCodeGenerator
{
	[Token(Token = "0x4000EA3")]
	public const int CodeLength = 7;

	[Token(Token = "0x4000EA4")]
	private const string regularRoomPrefix = "0";

	[Token(Token = "0x4000EA5")]
	private const string groupLaunchRoomPrefix = "1";

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0xAA1D94", Offset = "0xAA1D94", VA = "0xAA1D94")]
	public static string GenerateGroupLaunchRoom(string deepLinkRoomNamePart)
	{
		return null;
	}

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0xAA1E18", Offset = "0xAA1E18", VA = "0xAA1E18")]
	internal static string GenerateRegularRoom()
	{
		return null;
	}
}
[Token(Token = "0x2000223")]
public class SingleInstanceNetworkedBehavior<T> : NetworkedBehaviour where T : SingleInstanceNetworkedBehavior<T>
{
	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static T instance;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string noInstanceMessage;

	[Token(Token = "0x170001C9")]
	public static T Instance
	{
		[Token(Token = "0x6000E44")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E41")]
	static SingleInstanceNetworkedBehavior()
	{
	}

	[Token(Token = "0x6000E42")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000E43")]
	public virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000E45")]
	public static T GetInstance()
	{
		return null;
	}

	[Token(Token = "0x6000E46")]
	public SingleInstanceNetworkedBehavior()
	{
	}
}
[Token(Token = "0x2000224")]
public class SingleInstancePhotonCallbackListener<T> : PhotonCallbackListener where T : SingleInstancePhotonCallbackListener<T>
{
	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static T instance;

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string noInstanceMessage;

	[Token(Token = "0x170001CA")]
	public static T Instance
	{
		[Token(Token = "0x6000E4A")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E47")]
	static SingleInstancePhotonCallbackListener()
	{
	}

	[Token(Token = "0x6000E48")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000E49")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000E4B")]
	public static T GetInstance()
	{
		return null;
	}

	[Token(Token = "0x6000E4C")]
	public SingleInstancePhotonCallbackListener()
	{
	}
}
[Token(Token = "0x2000225")]
public class Notes : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[TextArea(3, 10)]
	public string note;

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0xAA1EEC", Offset = "0xAA1EEC", VA = "0xAA1EEC")]
	public Notes()
	{
	}
}
[Token(Token = "0x2000226")]
public class IngredientCapHandler
{
	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<IngredientBase> spawnedIngredients;

	[Token(Token = "0x170001CB")]
	public static bool CapReached
	{
		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0xAA1EF4", Offset = "0xAA1EF4", VA = "0xAA1EF4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001CC")]
	public static int maxSpawnCount
	{
		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0xAA1FA4", Offset = "0xAA1FA4", VA = "0xAA1FA4")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000E50")]
		[Address(RVA = "0xAA1FFC", Offset = "0xAA1FFC", VA = "0xAA1FFC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0xAA2058", Offset = "0xAA2058", VA = "0xAA2058")]
	public static void MakeSpaceIfCapReached()
	{
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0xAA2100", Offset = "0xAA2100", VA = "0xAA2100")]
	public static void OnIngredientSpawned(IngredientBase ingredient)
	{
	}

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0xAA21D0", Offset = "0xAA21D0", VA = "0xAA21D0")]
	public static void OnIngredientDespawn(IngredientBase ingredient)
	{
	}

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0xAA22A8", Offset = "0xAA22A8", VA = "0xAA22A8")]
	public static void AdjustCapSize(int newMax)
	{
	}

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0xAA2364", Offset = "0xAA2364", VA = "0xAA2364")]
	public IngredientCapHandler()
	{
	}
}
[Token(Token = "0x2000227")]
public class IngredientSliceFactory : SingleInstancePhotonCallbackListener<IngredientSliceFactory>
{
	[Token(Token = "0x2000228")]
	[CompilerGenerated]
	private sealed class <get_AllocatedObjects>d__8 : IEnumerable<IngredientSlice>, IEnumerable, IEnumerator<IngredientSlice>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IngredientSlice <>2__current;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IngredientSliceFactory <>4__this;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<IngredientType, ComponentPrefabPool<IngredientSlice>>.ValueCollection.Enumerator <>7__wrap1;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <i>5__3;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int <n>5__4;

		[Token(Token = "0x170001CE")]
		private IngredientSlice System.Collections.Generic.IEnumerator<IngredientSlice>.Current
		{
			[Token(Token = "0x6000E6E")]
			[Address(RVA = "0xAA4F8C", Offset = "0xAA4F8C", VA = "0xAA4F8C", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E70")]
			[Address(RVA = "0xAA4FD4", Offset = "0xAA4FD4", VA = "0xAA4FD4", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0xAA24BC", Offset = "0xAA24BC", VA = "0xAA24BC")]
		[DebuggerHidden]
		public <get_AllocatedObjects>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0xAA4C2C", Offset = "0xAA4C2C", VA = "0xAA4C2C", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0xAA4C48", Offset = "0xAA4C48", VA = "0xAA4C48", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0xAA4F3C", Offset = "0xAA4F3C", VA = "0xAA4F3C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0xAA4F94", Offset = "0xAA4F94", VA = "0xAA4F94", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0xAA4FDC", Offset = "0xAA4FDC", VA = "0xAA4FDC", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<IngredientSlice> System.Collections.Generic.IEnumerable<IngredientSlice>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0xAA5080", Offset = "0xAA5080", VA = "0xAA5080", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x4000EAD")]
	private const int INITIAL_POOL_CAPACITY = 4;

	[Token(Token = "0x4000EAE")]
	private const int INITIAL_POOL_CAPACITY_TOFU = 8;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly IngredientType[] ingredientSliceTypes;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform disabledPoolRoot;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private IngredientVfxFactory vfxFactory;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IngredientType, ComponentPrefabPool<IngredientSlice>> poolLookup;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<IngredientSlice> allocatedObjectsCache;

	[Token(Token = "0x170001CD")]
	public IEnumerable<IngredientSlice> AllocatedObjects
	{
		[Token(Token = "0x6000E57")]
		[Address(RVA = "0xAA2444", Offset = "0xAA2444", VA = "0xAA2444")]
		[IteratorStateMachine(typeof(<get_AllocatedObjects>d__8))]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0xAA24F0", Offset = "0xAA24F0", VA = "0xAA24F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0xAA2784", Offset = "0xAA2784", VA = "0xAA2784", Slot = "47")]
	public override void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
	{
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0xAA2D50", Offset = "0xAA2D50", VA = "0xAA2D50")]
	private IngredientSlice SpawnInternal(int viewId, IngredientType ingredientType, Vector3 pos, Quaternion rot)
	{
		return null;
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0xAA3054", Offset = "0xAA3054", VA = "0xAA3054")]
	[PunRPC]
	private void IngredientSliceSpawnRPC(int viewId, IngredientType ingredientType, Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0xAA3478", Offset = "0xAA3478", VA = "0xAA3478")]
	public IngredientSlice Spawn(IngredientType ingredientType, Vector3 pos, Quaternion rot)
	{
		return null;
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0xAA37FC", Offset = "0xAA37FC", VA = "0xAA37FC")]
	private void DespawnInternal(IngredientSlice instance, bool showPoof = true)
	{
	}

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0xAA3A64", Offset = "0xAA3A64", VA = "0xAA3A64")]
	[PunRPC]
	private void IngredientSliceDespawnRPC(int viewId)
	{
	}

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0xAA3BB0", Offset = "0xAA3BB0", VA = "0xAA3BB0")]
	[PunRPC]
	private void IngredientSliceDespawnAllRPC()
	{
	}

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0xAA3E94", Offset = "0xAA3E94", VA = "0xAA3E94")]
	[PunRPC]
	private void IngredientSliceDespawnAllOnConveyorBeltRPC()
	{
	}

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0xAA418C", Offset = "0xAA418C", VA = "0xAA418C")]
	[PunRPC]
	private void IngredientSlicePutOutFiresRPC()
	{
	}

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0xAA447C", Offset = "0xAA447C", VA = "0xAA447C")]
	public void DespawnLocal(IngredientSlice instance, bool showPoof = true)
	{
	}

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0xAA4484", Offset = "0xAA4484", VA = "0xAA4484")]
	public void Despawn(IngredientSlice instance)
	{
	}

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0xAA459C", Offset = "0xAA459C", VA = "0xAA459C")]
	public void DespawnAll()
	{
	}

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0xAA4664", Offset = "0xAA4664", VA = "0xAA4664")]
	public void DespawnAllLocalOnly()
	{
	}

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0xAA4948", Offset = "0xAA4948", VA = "0xAA4948")]
	public void DespawnAllOnConveyorBelt()
	{
	}

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0xAA4A10", Offset = "0xAA4A10", VA = "0xAA4A10")]
	public void ForceExtinguishAll()
	{
	}

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0xAA4AD8", Offset = "0xAA4AD8", VA = "0xAA4AD8")]
	public IngredientSliceFactory()
	{
	}
}
[Token(Token = "0x2000229")]
public class IngredientVfxFactory : SingleInstanceNetworkedBehavior<IngredientVfxFactory>
{
	[Token(Token = "0x4000EBB")]
	private const int INITIAL_POOL_CAPACITY = 16;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform disabledPoolRoot;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject fireParticlesPrefab;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject fryingGlowPrefab;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ComponentPrefabPool<Transform> fireParticlesPool;

	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ComponentPrefabPool<FryingGlow> fryingGlowPool;

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0xAA5084", Offset = "0xAA5084", VA = "0xAA5084")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0xAA51A8", Offset = "0xAA51A8", VA = "0xAA51A8")]
	private void SpawnInternal(Grillable grillable)
	{
	}

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0xAA5314", Offset = "0xAA5314", VA = "0xAA5314")]
	private void DespawnInternal(Grillable grillable)
	{
	}

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0xAA53B4", Offset = "0xAA53B4", VA = "0xAA53B4")]
	public void Attach(IngredientWhole ingredient)
	{
	}

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0xAA2F40", Offset = "0xAA2F40", VA = "0xAA2F40")]
	public void Attach(IngredientSlice ingredient)
	{
	}

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0xAA5560", Offset = "0xAA5560", VA = "0xAA5560")]
	public void Detach(IngredientWhole ingredient)
	{
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0xAA3A4C", Offset = "0xAA3A4C", VA = "0xAA3A4C")]
	public void Detach(IngredientSlice ingredient)
	{
	}

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0xAA5578", Offset = "0xAA5578", VA = "0xAA5578")]
	public IngredientVfxFactory()
	{
	}
}
[Token(Token = "0x200022A")]
public class IngredientWholeFactory : SingleInstancePhotonCallbackListener<IngredientWholeFactory>
{
	[Token(Token = "0x200022B")]
	[CompilerGenerated]
	private sealed class <get_AllocatedObjects>d__7 : IEnumerable<IngredientWhole>, IEnumerable, IEnumerator<IngredientWhole>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IngredientWhole <>2__current;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IngredientWholeFactory <>4__this;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<IngredientType, ComponentPrefabPool<IngredientWhole>>.ValueCollection.Enumerator <>7__wrap1;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <i>5__3;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int <n>5__4;

		[Token(Token = "0x170001D1")]
		private IngredientWhole System.Collections.Generic.IEnumerator<IngredientWhole>.Current
		{
			[Token(Token = "0x6000E92")]
			[Address(RVA = "0xAA7FF4", Offset = "0xAA7FF4", VA = "0xAA7FF4", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E94")]
			[Address(RVA = "0xAA803C", Offset = "0xAA803C", VA = "0xAA803C", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0xAA565C", Offset = "0xAA565C", VA = "0xAA565C")]
		[DebuggerHidden]
		public <get_AllocatedObjects>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0xAA7C94", Offset = "0xAA7C94", VA = "0xAA7C94", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0xAA7CB0", Offset = "0xAA7CB0", VA = "0xAA7CB0", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0xAA7FA4", Offset = "0xAA7FA4", VA = "0xAA7FA4")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0xAA7FFC", Offset = "0xAA7FFC", VA = "0xAA7FFC", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0xAA8044", Offset = "0xAA8044", VA = "0xAA8044", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<IngredientWhole> System.Collections.Generic.IEnumerable<IngredientWhole>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0xAA80E8", Offset = "0xAA80E8", VA = "0xAA80E8", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x4000EC1")]
	private const int INITIAL_POOL_CAPACITY = 4;

	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly IngredientType[] ingredientWholeTypes;

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform disabledPoolRoot;

	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private IngredientVfxFactory vfxFactory;

	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IngredientType, ComponentPrefabPool<IngredientWhole>> poolLookup;

	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<IngredientWhole> allocatedObjectsCache;

	[Token(Token = "0x170001D0")]
	public IEnumerable<IngredientWhole> AllocatedObjects
	{
		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0xAA55E4", Offset = "0xAA55E4", VA = "0xAA55E4")]
		[IteratorStateMachine(typeof(<get_AllocatedObjects>d__7))]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0xAA5690", Offset = "0xAA5690", VA = "0xAA5690")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0xAA5918", Offset = "0xAA5918", VA = "0xAA5918", Slot = "47")]
	public override void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
	{
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0xAA5EE4", Offset = "0xAA5EE4", VA = "0xAA5EE4")]
	private IngredientWhole SpawnInternal(int viewId, IngredientType ingredientType, Vector3 pos, Quaternion rot)
	{
		return null;
	}

	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0xAA60D4", Offset = "0xAA60D4", VA = "0xAA60D4")]
	[PunRPC]
	private void IngredientWholeSpawnRPC(int viewId, IngredientType ingredientType, Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6000E80")]
	[Address(RVA = "0xAA64F8", Offset = "0xAA64F8", VA = "0xAA64F8")]
	public IngredientWhole Spawn(IngredientType ingredientType, Vector3 pos, Quaternion rot)
	{
		return null;
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0xAA687C", Offset = "0xAA687C", VA = "0xAA687C")]
	private void DespawnInternal(IngredientWhole instance, bool showPoof = true)
	{
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0xAA6ACC", Offset = "0xAA6ACC", VA = "0xAA6ACC")]
	[PunRPC]
	private void IngredientWholeDespawnRPC(int viewId)
	{
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0xAA6C18", Offset = "0xAA6C18", VA = "0xAA6C18")]
	[PunRPC]
	private void IngredientWholeDespawnAllRPC()
	{
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0xAA6EFC", Offset = "0xAA6EFC", VA = "0xAA6EFC")]
	[PunRPC]
	private void IngredientWholeDespawnAllOnConveyorBeltRPC()
	{
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0xAA71F4", Offset = "0xAA71F4", VA = "0xAA71F4")]
	[PunRPC]
	private void IngredientWholePutOutFiresRPC()
	{
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0xAA74E4", Offset = "0xAA74E4", VA = "0xAA74E4")]
	public void DespawnLocal(IngredientWhole instance, bool showPoof)
	{
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0xAA74EC", Offset = "0xAA74EC", VA = "0xAA74EC")]
	public void Despawn(IngredientWhole instance)
	{
	}

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0xAA7604", Offset = "0xAA7604", VA = "0xAA7604")]
	public void DespawnAll()
	{
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0xAA76CC", Offset = "0xAA76CC", VA = "0xAA76CC")]
	public void DespawnAllLocalOnly()
	{
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0xAA79B0", Offset = "0xAA79B0", VA = "0xAA79B0")]
	public void DespawnAllOnConveyorBelt()
	{
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0xAA7A78", Offset = "0xAA7A78", VA = "0xAA7A78")]
	public void ForceExtinguishAll()
	{
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0xAA7B40", Offset = "0xAA7B40", VA = "0xAA7B40")]
	public IngredientWholeFactory()
	{
	}
}
[Token(Token = "0x200022C")]
public enum ParticleType
{
	[Token(Token = "0x4000ECF")]
	Eating,
	[Token(Token = "0x4000ED0")]
	InstantSandwichPoof,
	[Token(Token = "0x4000ED1")]
	GenericPoof,
	[Token(Token = "0x4000ED2")]
	ToothpickSpawn,
	[Token(Token = "0x4000ED3")]
	IngredientCollideBread,
	[Token(Token = "0x4000ED4")]
	SpiceShaker,
	[Token(Token = "0x4000ED5")]
	ScrubbingBubbles,
	[Token(Token = "0x4000ED6")]
	ThumbsUp,
	[Token(Token = "0x4000ED7")]
	ThumbsDown,
	[Token(Token = "0x4000ED8")]
	FireSparks,
	[Token(Token = "0x4000ED9")]
	IngredientChop,
	[Token(Token = "0x4000EDA")]
	IngredientChopSmall,
	[Token(Token = "0x4000EDB")]
	ChoppingCrumbs,
	[Token(Token = "0x4000EDC")]
	ChoppingSplinter,
	[Token(Token = "0x4000EDD")]
	PotionGrill,
	[Token(Token = "0x4000EDE")]
	PotionInstantSandwich,
	[Token(Token = "0x4000EDF")]
	PotionWash,
	[Token(Token = "0x4000EE0")]
	PotionPerfectizer,
	[Token(Token = "0x4000EE1")]
	PotionSharpness,
	[Token(Token = "0x4000EE2")]
	PotionTimeFreeze,
	[Token(Token = "0x4000EE3")]
	PotionTofu,
	[Token(Token = "0x4000EE4")]
	ThiefStealing,
	[Token(Token = "0x4000EE5")]
	FlowerPetals,
	[Token(Token = "0x4000EE6")]
	IngredientCollideHam,
	[Token(Token = "0x4000EE7")]
	IngredientCollideCheese,
	[Token(Token = "0x4000EE8")]
	IngredientCollideSalad,
	[Token(Token = "0x4000EE9")]
	IngredientCollideTomato,
	[Token(Token = "0x4000EEA")]
	IngredientCollideMushroom,
	[Token(Token = "0x4000EEB")]
	IngredientCollideTentacle,
	[Token(Token = "0x4000EEC")]
	IngredientCollideMoldyCheese,
	[Token(Token = "0x4000EED")]
	IngredientCollidePumpkin,
	[Token(Token = "0x4000EEE")]
	IngredientCollideBreadDark,
	[Token(Token = "0x4000EEF")]
	IngredientCollideBagel,
	[Token(Token = "0x4000EF0")]
	IngredientCollideSalmon,
	[Token(Token = "0x4000EF1")]
	IngredientCollideCauldron,
	[Token(Token = "0x4000EF2")]
	IngredientCollideMoon,
	[Token(Token = "0x4000EF3")]
	IngredientCollideOnion,
	[Token(Token = "0x4000EF4")]
	IngredientCollideTofu,
	[Token(Token = "0x4000EF5")]
	IngredientCollideCarrot,
	[Token(Token = "0x4000EF6")]
	IngredientCollideBeet,
	[Token(Token = "0x4000EF7")]
	IngredientCollideEgg,
	[Token(Token = "0x4000EF8")]
	IngredientCollideBaguette,
	[Token(Token = "0x4000EF9")]
	IngredientCollidePepper,
	[Token(Token = "0x4000EFA")]
	IngredientCollideRoyalSalad,
	[Token(Token = "0x4000EFB")]
	IngredientCollideStarFruit,
	[Token(Token = "0x4000EFC")]
	IngredientCollideTruffle,
	[Token(Token = "0x4000EFD")]
	IngredientCollideLobster,
	[Token(Token = "0x4000EFE")]
	IngredientCollideAvocado,
	[Token(Token = "0x4000EFF")]
	IngredientCollideRedOnion,
	[Token(Token = "0x4000F00")]
	LoopingFire,
	[Token(Token = "0x4000F01")]
	LoopingFireExtinguisher,
	[Token(Token = "0x4000F02")]
	LoopingGrillPoweredUp,
	[Token(Token = "0x4000F03")]
	LoopingIngredientFriedSmoke,
	[Token(Token = "0x4000F04")]
	LoopingIngredientBurntSmoke,
	[Token(Token = "0x4000F05")]
	OpenFridgeParticles,
	[Token(Token = "0x4000F06")]
	ServeBannerSmoke,
	[Token(Token = "0x4000F07")]
	LoopingWetPlate,
	[Token(Token = "0x4000F08")]
	IngredientAddedBurst,
	[Token(Token = "0x4000F09")]
	PlateCleanSparkle,
	[Token(Token = "0x4000F0A")]
	IngredientAddedSmall,
	[Token(Token = "0x4000F0B")]
	CondimentSplash,
	[Token(Token = "0x4000F0C")]
	WrongIngredientAdded,
	[Token(Token = "0x4000F0D")]
	IngredientCollisionQuestGeneric,
	[Token(Token = "0x4000F0E")]
	RewardBubbleBurst,
	[Token(Token = "0x4000F0F")]
	NewRecipeUnlocked,
	[Token(Token = "0x4000F10")]
	OldRecipeHandedInEffect,
	[Token(Token = "0x4000F11")]
	IngredientCollideCandyCane,
	[Token(Token = "0x4000F12")]
	IngredientCollideGingerbread,
	[Token(Token = "0x4000F13")]
	IngredientCollidePotato,
	[Token(Token = "0x4000F14")]
	IngredientCollideSnowman,
	[Token(Token = "0x4000F15")]
	IngredientCollideTurkey,
	[Token(Token = "0x4000F16")]
	BroFist,
	[Token(Token = "0x4000F17")]
	FencingSparks,
	[Token(Token = "0x4000F18")]
	HighFive
}
[Token(Token = "0x200022D")]
public class ParticlePool : SingleInstanceBehavior<ParticlePool>
{
	[Token(Token = "0x200022E")]
	public struct ParticelEffectBurst
	{
		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly ParticleType type;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ParticleSystem particleSystem;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float timer;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly Vector3 position;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly Quaternion rotation;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly Transform target;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BurstData burstData;

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0xAA98CC", Offset = "0xAA98CC", VA = "0xAA98CC")]
		public ParticelEffectBurst(ParticleType type, ParticleSystem particleSystem, Vector3 position, Quaternion rotation, BurstData burstData)
		{
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0xAA9C70", Offset = "0xAA9C70", VA = "0xAA9C70")]
		public ParticelEffectBurst(ParticleType type, ParticleSystem particleSystem, Transform target, BurstData burstData)
		{
		}
	}

	[Token(Token = "0x200022F")]
	public struct BurstData
	{
		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int cycles;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public readonly int burstCount;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly float interval;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly float probability;

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0xAA8C7C", Offset = "0xAA8C7C", VA = "0xAA8C7C")]
		public BurstData(int cycles, int burstCount, float interval, float probability)
		{
		}
	}

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] particleSystemPrefabs;

	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<IngredientType, ParticleType> ingredientCollisionEffects;

	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<ParticleType, List<ParticleSystem>> particleSystems;

	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Dictionary<ParticleType, Transform> particleSystemTransforms;

	[Token(Token = "0x4000F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Dictionary<ParticleType, BurstData[][]> cachedBurstData;

	[Token(Token = "0x4000F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Dictionary<ParticleType, ParticleSystem> ingredientCollisionSliceEmitter;

	[Token(Token = "0x4000F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static Dictionary<ParticleType, int> ingredientCollisionSliceBurstCount;

	[Token(Token = "0x4000F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Dictionary<ParticleType, bool> isLoopingParticleSystem;

	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static Dictionary<ParticleType, ParticleSystem[]> emitFacingPlayer;

	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static List<ParticelEffectBurst> activeBursts;

	[Token(Token = "0x4000F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static List<ParticelEffectBurst> activeLoopingBursts;

	[Token(Token = "0x4000F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static ParticleSystem.MainModule mainModule;

	[Token(Token = "0x4000F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static ParticleSystem.EmissionModule emissionModule;

	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static ParticleSystem.Burst burstModule;

	[Token(Token = "0x4000F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static ParticleSystem.ShapeModule shapeModule;

	[Token(Token = "0x4000F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static ParticelEffectBurst activeBurst;

	[Token(Token = "0x4000F29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private static ParticleType[] particleTypesInUse;

	[Token(Token = "0x4000F2A")]
	private const string IngredientCollideIdentifier = "IngredientCollide";

	[Token(Token = "0x4000F2B")]
	private const string IngredientCollideSubEmitterIdentifier = "ingredient";

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0xAA80EC", Offset = "0xAA80EC", VA = "0xAA80EC", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0xAA8C88", Offset = "0xAA8C88", VA = "0xAA8C88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0xAA9434", Offset = "0xAA9434", VA = "0xAA9434")]
	public static void PlayParticles(ParticleType type, Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0xAA98F4", Offset = "0xAA98F4", VA = "0xAA98F4")]
	public static void PlayLoopingParticles(ParticleType type, Transform target)
	{
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0xAA9D78", Offset = "0xAA9D78", VA = "0xAA9D78")]
	public static void StopLoopingParticles(ParticleType type, Transform target)
	{
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0xAA913C", Offset = "0xAA913C", VA = "0xAA913C")]
	public static void PlayBurst(Vector3 position, Quaternion rotation, ParticleType type, ParticleSystem particleSystem, int burstCount)
	{
	}

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0xAA9F28", Offset = "0xAA9F28", VA = "0xAA9F28")]
	public static void ClearAllParticles()
	{
	}

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0xAAA144", Offset = "0xAAA144", VA = "0xAAA144")]
	public static void ClearLoopingParticleSystem(ParticleType particleType)
	{
	}

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0xAAA308", Offset = "0xAAA308", VA = "0xAAA308")]
	public static void PlayIngredientCollision(Vector3 position, Quaternion rotation, IngredientType ingredientType, bool isWhole, Color color)
	{
	}

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0xAAA5EC", Offset = "0xAAA5EC", VA = "0xAAA5EC")]
	public static void PlayParticlesColoredSingleCycle(ParticleType type, Vector3 position, Quaternion rotation, Color color)
	{
	}

	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0xAAA908", Offset = "0xAAA908", VA = "0xAAA908")]
	public static void PlayParticlesSpice(ParticleType type, Vector3 position, Quaternion rotation, float emissionRate)
	{
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0xAAABFC", Offset = "0xAAABFC", VA = "0xAAABFC")]
	public ParticlePool()
	{
	}
}
[Token(Token = "0x2000230")]
public class ParticlePoolID : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleType type;

	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool isLooping;

	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool availableOnAndroid;

	[Token(Token = "0x4000F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool availableOnPC;

	[Token(Token = "0x4000F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem[] facePlayerEmitters;

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0xAAB21C", Offset = "0xAAB21C", VA = "0xAAB21C")]
	public ParticlePoolID()
	{
	}
}
[Token(Token = "0x2000231")]
public class PlatePool : SingleInstanceNetworkedBehavior<PlatePool>, IPunObservable
{
	[Token(Token = "0x4000F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool debugPlateOrders;

	[Token(Token = "0x4000F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Plate[] allPlates;

	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Queue<Plate> pooledPlates;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Dictionary<int, Plate> plateLookup;

	[Token(Token = "0x4000F40")]
	public const int unknownOrderID = -2;

	[Token(Token = "0x4000F41")]
	public const int pooledOrderID = -1;

	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int orderIDCount;

	[Token(Token = "0x4000F43")]
	private const int maxOrderID = 1000;

	[Token(Token = "0x170001D3")]
	public bool HasPlate
	{
		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0xAAB22C", Offset = "0xAAB22C", VA = "0xAAB22C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0xAAB27C", Offset = "0xAAB27C", VA = "0xAAB27C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0xAAB58C", Offset = "0xAAB58C", VA = "0xAAB58C")]
	public void SpawnPlate(int orderID, RecipeIngredient[] ingredients, CustomerType customer, int customerSlot, int timeStamp, ConveyorPlateSlot plateSlot, bool spawnDirty)
	{
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0xAAB8D4", Offset = "0xAAB8D4", VA = "0xAAB8D4")]
	[PunRPC]
	private void SpawnPlateRPC(int plateViewID, int orderID, RecipeIngredient[] ingredients, int customer, int customerSlot, int timeStamp, int plateSlotID, bool spawnDirty)
	{
	}

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0xAABC40", Offset = "0xAABC40", VA = "0xAABC40")]
	public void RemoveAllPlatesFromGame()
	{
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0xAABDC8", Offset = "0xAABDC8", VA = "0xAABDC8")]
	[PunRPC]
	private void RemovePlateFromGameRPC(int plateViewID)
	{
	}

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0xAABE84", Offset = "0xAABE84", VA = "0xAABE84")]
	public void ReturnInactivePlateToPool(Plate plate)
	{
	}

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0xAABF98", Offset = "0xAABF98", VA = "0xAABF98")]
	[PunRPC]
	private void PoolPlateRPC(int plateViewID)
	{
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0xAAC0D0", Offset = "0xAAC0D0", VA = "0xAAC0D0", Slot = "6")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0xAAC2E4", Offset = "0xAAC2E4", VA = "0xAAC2E4")]
	public int GenerateOrderID(int masterClientID)
	{
		return default(int);
	}

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0xAAC310", Offset = "0xAAC310", VA = "0xAAC310")]
	public static bool IsActiveOrderID(int orderID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0xAAC31C", Offset = "0xAAC31C", VA = "0xAAC31C")]
	public PlatePool()
	{
	}
}
[Token(Token = "0x2000232")]
internal sealed class ComponentPrefabPool<T> where T : Component
{
	[Token(Token = "0x2000233")]
	[CompilerGenerated]
	private sealed class <get_AllocatedObjects>d__11 : IEnumerable<T>, IEnumerable, IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ComponentPrefabPool<T> <>4__this;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <capacityMask>5__2;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__3;

		[Token(Token = "0x170001D6")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x6000EC4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EC6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EC1")]
		[DebuggerHidden]
		public <get_AllocatedObjects>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000EC2")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EC3")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC5")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6000EC7")]
		[DebuggerHidden]
		private IEnumerator<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000EC8")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x4000F44")]
	private const int MAX_CAPACITY = 4096;

	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private readonly Transform disabledParentTransform;

	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private readonly T prefab;

	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private T[] buffer;

	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int capacity;

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int size;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int head;

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int tail;

	[Token(Token = "0x170001D4")]
	internal T Prefab
	{
		[Token(Token = "0x6000EB4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001D5")]
	internal IEnumerable<T> AllocatedObjects
	{
		[Token(Token = "0x6000EB5")]
		[IteratorStateMachine(typeof(ComponentPrefabPool<>.<get_AllocatedObjects>d__11))]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000EB6")]
	internal ComponentPrefabPool(Transform disabledParentTransform, T prefab, int capacity)
	{
	}

	[Token(Token = "0x6000EB7")]
	internal T Pop()
	{
		return null;
	}

	[Token(Token = "0x6000EB8")]
	internal T Pop(Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000EB9")]
	internal T Pop(Transform parent, Vector3 localPosition, Quaternion localRotation)
	{
		return null;
	}

	[Token(Token = "0x6000EBA")]
	internal T Pop(Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x6000EBB")]
	internal void Push(T obj)
	{
	}

	[Token(Token = "0x6000EBC")]
	internal bool AssertSizeZero()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EBD")]
	internal bool AssertBufferIntegrity()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EBE")]
	private void IncreaseCapacity(int n)
	{
	}

	[Token(Token = "0x6000EBF")]
	private T PopInternal()
	{
		return null;
	}

	[Token(Token = "0x6000EC0")]
	private void PushInternal(T obj)
	{
	}
}
[Token(Token = "0x2000234")]
public class AvatarTesting : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform avatarRoot;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private OvrAvatarBodyTrackingBehavior trackingBehavior;

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0xAAC41C", Offset = "0xAAC41C", VA = "0xAAC41C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0xAAC678", Offset = "0xAAC678", VA = "0xAAC678")]
	public AvatarTesting()
	{
	}
}
[Token(Token = "0x2000237")]
public class CustomHandContainer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject HandPose;

	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform WristOffset;

	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0xAACEB8", Offset = "0xAACEB8", VA = "0xAACEB8")]
	public CustomHandContainer()
	{
	}
}
[Token(Token = "0x2000238")]
public class OculusAvatar2InputManager : OvrAvatarInputManager
{
	[Token(Token = "0x2000239")]
	private class InputTrackingDelegate : OvrAvatarInputTrackingDelegate
	{
		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Transform head;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Transform leftHand;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Transform rightHand;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OculusAvatar2InputManager inputManager;

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0xAACFBC", Offset = "0xAACFBC", VA = "0xAACFBC")]
		public InputTrackingDelegate(Transform head, Transform leftHand, Transform rightHand, OculusAvatar2InputManager inputManager)
		{
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0xAAD150", Offset = "0xAAD150", VA = "0xAAD150", Slot = "5")]
		public override bool GetRawInputTrackingState(out OvrAvatarInputTrackingState inputTrackingState)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0xAAD26C", Offset = "0xAAD26C", VA = "0xAAD26C")]
		private void UpdateTracking(ref Oculus.Avatar2.CAPI.ovrAvatar2Transform trackingTransform, Transform refTransform, Vector3 offset, Quaternion localRotation)
		{
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0xAAD334", Offset = "0xAAD334", VA = "0xAAD334")]
		private void UpdateControllerTracking(ref Oculus.Avatar2.CAPI.ovrAvatar2Transform trackingTransform, Transform refTransform, CookoutHandedness hand)
		{
		}
	}

	[Token(Token = "0x200023A")]
	private class InputControlDelegate : OvrAvatarInputControlDelegate
	{
		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0xAAD4B0", Offset = "0xAAD4B0", VA = "0xAAD4B0", Slot = "5")]
		public override bool GetInputControlState(out OvrAvatarInputControlState inputControlState)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0xAAD4F4", Offset = "0xAAD4F4", VA = "0xAAD4F4")]
		private void UpdateControllerState(ref OvrAvatarControllerState controllerState, CookoutHandedness handedness)
		{
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0xAAD088", Offset = "0xAAD088", VA = "0xAAD088")]
		public InputControlDelegate()
		{
		}
	}

	[Token(Token = "0x4000F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 avatarLeftHandOffset;

	[Token(Token = "0x4000F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 avatarRightHandOffset;

	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion avatarLeftHandRotation;

	[Token(Token = "0x4000F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion avatarRightHandRotation;

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0xAACEC0", Offset = "0xAACEC0", VA = "0xAACEC0")]
	public void Init(Transform head, Transform leftHand, Transform rightHand)
	{
	}

	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0xAAD090", Offset = "0xAAD090", VA = "0xAAD090", Slot = "5")]
	protected override void OnDestroyCalled()
	{
	}

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0xAAD098", Offset = "0xAAD098", VA = "0xAAD098")]
	public OculusAvatar2InputManager()
	{
	}
}
[Token(Token = "0x200023B")]
public class OculusAvatarV2Entity : OvrAvatarEntity
{
	[Token(Token = "0x200023C")]
	public delegate void AvatarV2NotFound();

	[Token(Token = "0x200023D")]
	public delegate void AvatarV2SkeletonFound();

	[Token(Token = "0x200023E")]
	public enum AssetSource
	{
		[Token(Token = "0x4000F71")]
		Zip,
		[Token(Token = "0x4000F72")]
		StreamingAssets
	}

	[Token(Token = "0x200023F")]
	[CompilerGenerated]
	private sealed class <LoadAvatarVisualsCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OculusAvatarV2Entity <>4__this;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CookoutUserId userID;

		[Token(Token = "0x170001D8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EF6")]
			[Address(RVA = "0xAAE294", Offset = "0xAAE294", VA = "0xAAE294", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EF8")]
			[Address(RVA = "0xAAE2DC", Offset = "0xAAE2DC", VA = "0xAAE2DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0xAADBE0", Offset = "0xAADBE0", VA = "0xAADBE0")]
		[DebuggerHidden]
		public <LoadAvatarVisualsCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0xAAE218", Offset = "0xAAE218", VA = "0xAAE218", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0xAAE21C", Offset = "0xAAE21C", VA = "0xAAE21C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0xAAE29C", Offset = "0xAAE29C", VA = "0xAAE29C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000240")]
	[CompilerGenerated]
	private sealed class <Retry_HasAvatarRequest>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OculusAvatarV2Entity <>4__this;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <totalAttempts>5__2;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool <continueRetries>5__3;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <retriesRemaining>5__4;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool <hasFoundAvatar>5__5;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		private bool <requestComplete>5__6;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Task<OvrAvatarManager.HasAvatarRequestResultCode> <hasAvatarRequest>5__7;

		[Token(Token = "0x170001DA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EFC")]
			[Address(RVA = "0xAAE724", Offset = "0xAAE724", VA = "0xAAE724", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EFE")]
			[Address(RVA = "0xAAE76C", Offset = "0xAAE76C", VA = "0xAAE76C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0xAADE1C", Offset = "0xAADE1C", VA = "0xAADE1C")]
		[DebuggerHidden]
		public <Retry_HasAvatarRequest>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0xAAE2E4", Offset = "0xAAE2E4", VA = "0xAAE2E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0xAAE2E8", Offset = "0xAAE2E8", VA = "0xAAE2E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0xAAE72C", Offset = "0xAAE72C", VA = "0xAAE72C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000241")]
	[CompilerGenerated]
	private sealed class <AutoRetry_LoadUser>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OculusAvatarV2Entity <>4__this;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <totalAttempts>5__2;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <remainingAttempts>5__3;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <didLoadAvatar>5__4;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <currentPollingInterval>5__5;

		[Token(Token = "0x170001DC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F02")]
			[Address(RVA = "0xAAE9D8", Offset = "0xAAE9D8", VA = "0xAAE9D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F04")]
			[Address(RVA = "0xAAEA20", Offset = "0xAAEA20", VA = "0xAAEA20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0xAADEAC", Offset = "0xAADEAC", VA = "0xAADEAC")]
		[DebuggerHidden]
		public <AutoRetry_LoadUser>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0xAAE774", Offset = "0xAAE774", VA = "0xAAE774", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0xAAE778", Offset = "0xAAE778", VA = "0xAAE778", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0xAAE9E0", Offset = "0xAAE9E0", VA = "0xAAE9E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F64")]
	private const string logscope = "sampleAvatar";

	[Token(Token = "0x4000F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	[SerializeField]
	[Header("Assets")]
	private AssetSource _assetSource;

	[Token(Token = "0x4000F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	[SerializeField]
	private string[] _assetPaths;

	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	[SerializeField]
	private string _assetPostfixDefault;

	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	[SerializeField]
	private string _assetPostfixAndroid;

	[Token(Token = "0x4000F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	[SerializeField]
	private bool _autoCdnRetry;

	[Token(Token = "0x4000F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A1")]
	private bool firstTimeLoad;

	[Token(Token = "0x4000F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A2")]
	private CookoutUserId currentUserId;

	[Token(Token = "0x4000F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AB")]
	private bool awaitingAvatarSkeletonframeDelay;

	[Token(Token = "0x4000F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
	private bool awaitingAvatarSkeleton;

	[Token(Token = "0x4000F6E")]
	public const string wristLPath = "Joint LeftHandWrist";

	[Token(Token = "0x4000F6F")]
	public const string wristRPath = "Joint RightHandWrist";

	[Token(Token = "0x1400001F")]
	public event AvatarV2NotFound OnAvatarV2NotFound
	{
		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0xAAD6E4", Offset = "0xAAD6E4", VA = "0xAAD6E4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0xAAD784", Offset = "0xAAD784", VA = "0xAAD784")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000020")]
	public event AvatarV2SkeletonFound OnAvatarV2SkeletonFound
	{
		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0xAAD824", Offset = "0xAAD824", VA = "0xAAD824")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0xAAD8C4", Offset = "0xAAD8C4", VA = "0xAAD8C4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0xAAD964", Offset = "0xAAD964", VA = "0xAAD964")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0xAADA94", Offset = "0xAADA94", VA = "0xAADA94")]
	public void ChangePresetAvatar(int index)
	{
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0xAACCBC", Offset = "0xAACCBC", VA = "0xAACCBC")]
	public void LoadAvatarVisuals(CookoutUserId userID)
	{
	}

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0xAADB64", Offset = "0xAADB64", VA = "0xAADB64")]
	[IteratorStateMachine(typeof(<LoadAvatarVisualsCoroutine>d__24))]
	private IEnumerator LoadAvatarVisualsCoroutine(CookoutUserId userID)
	{
		return null;
	}

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0xAADC08", Offset = "0xAADC08", VA = "0xAADC08")]
	public void LoadLocalAvatar()
	{
	}

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0xAADDB4", Offset = "0xAADDB4", VA = "0xAADDB4")]
	[IteratorStateMachine(typeof(<Retry_HasAvatarRequest>d__26))]
	private IEnumerator Retry_HasAvatarRequest()
	{
		return null;
	}

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0xAADE44", Offset = "0xAADE44", VA = "0xAADE44")]
	[IteratorStateMachine(typeof(<AutoRetry_LoadUser>d__27))]
	private IEnumerator AutoRetry_LoadUser()
	{
		return null;
	}

	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0xAADED4", Offset = "0xAADED4", VA = "0xAADED4")]
	private void UserHasNoAvatarFallback()
	{
	}

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0xAADF80", Offset = "0xAADF80", VA = "0xAADF80")]
	public OculusAvatarV2Entity()
	{
	}
}
[Token(Token = "0x2000242")]
public class OculusAvatarV2Handler : SingleInstanceBehavior<OculusAvatarV2Handler>
{
	[Token(Token = "0x4000F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OvrAvatarBodyTrackingBehavior trackingBehavior;

	[Token(Token = "0x170001DE")]
	public OvrAvatarBodyTrackingBehavior GetTrackingBehaviour
	{
		[Token(Token = "0x6000F05")]
		[Address(RVA = "0xAAEA28", Offset = "0xAAEA28", VA = "0xAAEA28")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0xAAEA30", Offset = "0xAAEA30", VA = "0xAAEA30")]
	public OculusAvatarV2Handler()
	{
	}
}
[Token(Token = "0x2000243")]
public class OculusAvatarV2RootReferences : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatarCustomHandPose LeftHand;

	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatarCustomHandPose RightHand;

	[Token(Token = "0x6000F07")]
	[Address(RVA = "0xAAEA9C", Offset = "0xAAEA9C", VA = "0xAAEA9C")]
	public OculusAvatarV2RootReferences()
	{
	}
}
[Token(Token = "0x2000244")]
public class DeepLinkLauncher : SingleInstanceBehavior<DeepLinkLauncher>
{
	[Token(Token = "0x2000245")]
	[CompilerGenerated]
	private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DeepLinkLauncher <>4__this;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CookoutMsg<CookoutPlatform.MsgType>.MsgBuffer<CookoutPlatform.MsgDeepLink> <deepLinkMsgs>5__2;

		[Token(Token = "0x170001DF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F10")]
			[Address(RVA = "0xAAF6D8", Offset = "0xAAF6D8", VA = "0xAAF6D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F12")]
			[Address(RVA = "0xAAF720", Offset = "0xAAF720", VA = "0xAAF720", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0xAAEB0C", Offset = "0xAAEB0C", VA = "0xAAEB0C")]
		[DebuggerHidden]
		public <Start>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0xAAEC50", Offset = "0xAAEC50", VA = "0xAAEC50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0xAAEC54", Offset = "0xAAEC54", VA = "0xAAEC54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0xAAF6E0", Offset = "0xAAF6E0", VA = "0xAAF6E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isGroupLaunch;

	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string targetRoom;

	[Token(Token = "0x6000F08")]
	[Address(RVA = "0xAAEAA4", Offset = "0xAAEAA4", VA = "0xAAEAA4")]
	[IteratorStateMachine(typeof(<Start>d__2))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0xAAEB34", Offset = "0xAAEB34", VA = "0xAAEB34")]
	public string ConsumeStoredRoomNamePart()
	{
		return null;
	}

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0xAAEB44", Offset = "0xAAEB44", VA = "0xAAEB44")]
	public bool ConsumeIsGroupLaunch()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0xAAEB54", Offset = "0xAAEB54", VA = "0xAAEB54")]
	public DeepLinkLauncher()
	{
	}
}
[Token(Token = "0x2000247")]
public class OculusSystemVoIPSuppressor : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000248")]
	[CompilerGenerated]
	private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OculusSystemVoIPSuppressor <>4__this;

		[Token(Token = "0x170001E3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F22")]
			[Address(RVA = "0xAB01B0", Offset = "0xAB01B0", VA = "0xAB01B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F24")]
			[Address(RVA = "0xAB01F8", Offset = "0xAB01F8", VA = "0xAB01F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0xAAF844", Offset = "0xAAF844", VA = "0xAAF844")]
		[DebuggerHidden]
		public <Start>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0xAAFD54", Offset = "0xAAFD54", VA = "0xAAFD54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0xAAFD58", Offset = "0xAAFD58", VA = "0xAAFD58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0xAB01B8", Offset = "0xAB01B8", VA = "0xAB01B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000F19")]
	[Address(RVA = "0xAAF7DC", Offset = "0xAAF7DC", VA = "0xAAF7DC")]
	[IteratorStateMachine(typeof(<Start>d__0))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0xAAF86C", Offset = "0xAAF86C", VA = "0xAAF86C")]
	private static void RefreshSuppressionState()
	{
	}

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0xAAF978", Offset = "0xAAF978", VA = "0xAAF978")]
	private void OnPlayerConnected(PhotonPlayer newPlayer)
	{
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0xAAF97C", Offset = "0xAAF97C", VA = "0xAAF97C")]
	private void OnPlayerDisconnected(PhotonPlayer otherPlayer)
	{
	}

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0xAAF980", Offset = "0xAAF980", VA = "0xAAF980")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0xAAFD4C", Offset = "0xAAFD4C", VA = "0xAAFD4C")]
	public OculusSystemVoIPSuppressor()
	{
	}
}
[Token(Token = "0x2000249")]
public class RichPresenceManager : SingleInstanceNetworkedBehavior<RichPresenceManager>
{
	[Token(Token = "0x200024A")]
	[CompilerGenerated]
	private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RichPresenceManager <>4__this;

		[Token(Token = "0x170001E5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F31")]
			[Address(RVA = "0xAB0E58", Offset = "0xAB0E58", VA = "0xAB0E58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F33")]
			[Address(RVA = "0xAB0EA0", Offset = "0xAB0EA0", VA = "0xAB0EA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0xAB0268", Offset = "0xAB0268", VA = "0xAB0268")]
		[DebuggerHidden]
		public <Start>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0xAB0A4C", Offset = "0xAB0A4C", VA = "0xAB0A4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0xAB0A50", Offset = "0xAB0A50", VA = "0xAB0A50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0xAB0E60", Offset = "0xAB0E60", VA = "0xAB0E60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool presenceEnabled;

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool debug;

	[Token(Token = "0x4000F98")]
	private const int maxPlayers = 4;

	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PhotonCallbackManager photonCallbackManager;

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0xAB0200", Offset = "0xAB0200", VA = "0xAB0200")]
	[IteratorStateMachine(typeof(<Start>d__4))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0xAB0290", Offset = "0xAB0290", VA = "0xAB0290")]
	public void EnablePresence()
	{
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0xAB029C", Offset = "0xAB029C", VA = "0xAB029C")]
	private void RefreshPresenceOptions()
	{
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0xAB06E0", Offset = "0xAB06E0", VA = "0xAB06E0")]
	private void OnPlayerConnected(PhotonPlayer newPlayer)
	{
	}

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0xAB06E4", Offset = "0xAB06E4", VA = "0xAB06E4")]
	private void OnPlayerDisconnected(PhotonPlayer otherPlayer)
	{
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0xAB06E8", Offset = "0xAB06E8", VA = "0xAB06E8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0xAB06EC", Offset = "0xAB06EC", VA = "0xAB06EC")]
	public void ClearPresence()
	{
	}

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0xAB0888", Offset = "0xAB0888", VA = "0xAB0888", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0xAB09D8", Offset = "0xAB09D8", VA = "0xAB09D8")]
	public RichPresenceManager()
	{
	}
}
[Token(Token = "0x200024B")]
public class PhotoCollection
{
	[Token(Token = "0x4000F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public RenderTexture sandwichWithContext;

	[Token(Token = "0x4000F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenderTexture onlySandwich;

	[Token(Token = "0x4000F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Plate.CreativeRecipeResults creativeRecipeResults;

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0xAB0EA8", Offset = "0xAB0EA8", VA = "0xAB0EA8")]
	public PhotoCollection()
	{
	}
}
[Token(Token = "0x200024C")]
public class PhotoFrame : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200024D")]
	public enum PhotoType
	{
		[Token(Token = "0x4000FA9")]
		SandwichWithContext,
		[Token(Token = "0x4000FAA")]
		OnlySandwich
	}

	[Token(Token = "0x4000FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x4000FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject newBadge;

	[Token(Token = "0x4000FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject almostBadge;

	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private LocalizedText recipeName;

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private PokeButton infoButton;

	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool canShowHintAndRecipeSimultaneous;

	[Token(Token = "0x4000FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PhotoType photoType;

	[Token(Token = "0x170001E7")]
	public PhotoCollection Collection
	{
		[Token(Token = "0x6000F35")]
		[Address(RVA = "0xAB0EB0", Offset = "0xAB0EB0", VA = "0xAB0EB0")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000F36")]
		[Address(RVA = "0xAB0EB8", Offset = "0xAB0EB8", VA = "0xAB0EB8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001E8")]
	public Action OnInfoButtonClick
	{
		[Token(Token = "0x6000F37")]
		[Address(RVA = "0xAB0EC0", Offset = "0xAB0EC0", VA = "0xAB0EC0")]
		set
		{
		}
	}

	[Token(Token = "0x170001E9")]
	public bool InfoButtonActive
	{
		[Token(Token = "0x6000F38")]
		[Address(RVA = "0xAB0EDC", Offset = "0xAB0EDC", VA = "0xAB0EDC")]
		set
		{
		}
	}

	[Token(Token = "0x6000F39")]
	[Address(RVA = "0xAB0EFC", Offset = "0xAB0EFC", VA = "0xAB0EFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0xAB0F00", Offset = "0xAB0F00", VA = "0xAB0F00")]
	public void ShowPhoto(PhotoCollection photoCollection, bool withInfoButton)
	{
	}

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0xAB10A0", Offset = "0xAB10A0", VA = "0xAB10A0")]
	public void ClearAndHide()
	{
	}

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0xAB10FC", Offset = "0xAB10FC", VA = "0xAB10FC")]
	public PhotoFrame()
	{
	}
}
[Token(Token = "0x200024E")]
public class PhotoGallery : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200024F")]
	private enum SubPage
	{
		[Token(Token = "0x4000FC3")]
		None,
		[Token(Token = "0x4000FC4")]
		Gallery,
		[Token(Token = "0x4000FC5")]
		Details,
		[Token(Token = "0x4000FC6")]
		PermissionPrompt
	}

	[Token(Token = "0x4000FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Gallery")]
	[SerializeField]
	private GameObject galleryContainer;

	[Token(Token = "0x4000FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PhotoFrame[] photoFrames;

	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PokeButton forwardButton;

	[Token(Token = "0x4000FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private PokeButton backButton;

	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TextMeshPro pageDisplayerText;

	[Token(Token = "0x4000FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject pagerBase;

	[Token(Token = "0x4000FB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Detailed view")]
	[SerializeField]
	private GameObject detailedViewBase;

	[Token(Token = "0x4000FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private PokeButton closeDetailedViewButton;

	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private PokeButton viewRecipeButton;

	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private PokeButton saveButton;

	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject shareContainer;

	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private PokeButton shareButton;

	[Token(Token = "0x4000FB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private PhotoFrame detailedPhotoFrame;

	[Token(Token = "0x4000FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private TextMeshPro hintText;

	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject photoToast;

	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[Header("PermissionPrompt")]
	[SerializeField]
	private GameObject premissionPromptBase;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private PokeButton permissionOkButton;

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private PokeButton permissionCancelButton;

	[Token(Token = "0x4000FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	[Header("Player ready")]
	private GameObject playerReadyContainer;

	[Token(Token = "0x4000FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	[Header("Other")]
	private Animator animator;

	[Token(Token = "0x4000FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Collider[] colliders;

	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int currentPage;

	[Token(Token = "0x4000FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<Action> syncActions;

	[Token(Token = "0x170001EA")]
	private int NumPages
	{
		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0xAB1104", Offset = "0xAB1104", VA = "0xAB1104")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0xAB12B0", Offset = "0xAB12B0", VA = "0xAB12B0")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0xAB1304", Offset = "0xAB1304", VA = "0xAB1304")]
	public void Start()
	{
	}

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0xAB17D0", Offset = "0xAB17D0", VA = "0xAB17D0")]
	public void Update()
	{
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0xAB14C0", Offset = "0xAB14C0", VA = "0xAB14C0")]
	public void Show(bool isVisible)
	{
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0xAB1958", Offset = "0xAB1958", VA = "0xAB1958")]
	private void ShowPage(int newPage)
	{
	}

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0xAB1D08", Offset = "0xAB1D08", VA = "0xAB1D08")]
	private void ShowDetailView(PhotoCollection photoCollection)
	{
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0xAB20C4", Offset = "0xAB20C4", VA = "0xAB20C4")]
	private void HideDetailView()
	{
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0xAB21BC", Offset = "0xAB21BC", VA = "0xAB21BC")]
	private void HidePermissionPrompt()
	{
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0xAB1888", Offset = "0xAB1888", VA = "0xAB1888")]
	private void SetButtons(SubPage subPage)
	{
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0xAB22F0", Offset = "0xAB22F0", VA = "0xAB22F0")]
	public void OnLocalPlayerVoted(bool wasLastVote)
	{
	}

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0xAB23FC", Offset = "0xAB23FC", VA = "0xAB23FC")]
	private void SharePhoto(PhotoCollection photoCollection)
	{
	}

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0xAB2628", Offset = "0xAB2628", VA = "0xAB2628")]
	private void SavePhoto(PhotoCollection photoCollection)
	{
	}

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0xAB2D34", Offset = "0xAB2D34", VA = "0xAB2D34")]
	private void EncodeToFile(RenderTexture texture, bool saveToPng, string basePath, string fileNameFormat)
	{
	}

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0xAB2F84", Offset = "0xAB2F84", VA = "0xAB2F84")]
	private Task<byte[]> EncodeTexture(Texture2D texture, bool saveToPng)
	{
		return null;
	}

	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0xAB30FC", Offset = "0xAB30FC", VA = "0xAB30FC")]
	private Task SaveDataToFile(byte[] imageData, string basePath, string fileNameFormat)
	{
		return null;
	}

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0xAB2530", Offset = "0xAB2530", VA = "0xAB2530")]
	private Task SaveToFile(RenderTexture photo, string filePath)
	{
		return null;
	}

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0xAB2E4C", Offset = "0xAB2E4C", VA = "0xAB2E4C")]
	private Texture2D ConvertToTexture2D(RenderTexture texture)
	{
		return null;
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0xAB2B24", Offset = "0xAB2B24", VA = "0xAB2B24")]
	private string GetPublicPictureFolder()
	{
		return null;
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0xAB2AC4", Offset = "0xAB2AC4", VA = "0xAB2AC4")]
	private bool CanSave()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0xAB3220", Offset = "0xAB3220", VA = "0xAB3220")]
	private static string GenerateFileName(string fileNameWithoutTime)
	{
		return null;
	}

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0xAB3310", Offset = "0xAB3310", VA = "0xAB3310")]
	public PhotoGallery()
	{
	}
}
[Token(Token = "0x200025A")]
public class PhotoMaker : SingleInstanceBehavior<PhotoMaker>
{
	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera captureCamera;

	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float maxAtHeight;

	[Token(Token = "0x4000FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 maxSandwichCameraPosition;

	[Token(Token = "0x4000FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion maxSandwichCameraRotation;

	[Token(Token = "0x4000FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float minAtHeight;

	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 minSandwichCameraPosition;

	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion minSandwichCameraRotation;

	[Token(Token = "0x4000FE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector2Int captureResolution;

	[Token(Token = "0x4000FE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<PhotoCollection> photoCollections;

	[Token(Token = "0x4000FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private CookingGameState gameState;

	[Token(Token = "0x4000FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool isActivated;

	[Token(Token = "0x170001EB")]
	public IReadOnlyList<PhotoCollection> Photos
	{
		[Token(Token = "0x6000F73")]
		[Address(RVA = "0xAB1260", Offset = "0xAB1260", VA = "0xAB1260")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000F74")]
	[Address(RVA = "0xAB3E34", Offset = "0xAB3E34", VA = "0xAB3E34")]
	public void Start()
	{
	}

	[Token(Token = "0x6000F75")]
	[Address(RVA = "0xAB3FD0", Offset = "0xAB3FD0", VA = "0xAB3FD0", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000F76")]
	[Address(RVA = "0xAB3FA0", Offset = "0xAB3FA0", VA = "0xAB3FA0")]
	private void OnStateChanged(GameState oldState, GameState newState)
	{
	}

	[Token(Token = "0x6000F77")]
	[Address(RVA = "0xAB40E8", Offset = "0xAB40E8", VA = "0xAB40E8")]
	private void TryActivatePhotos()
	{
	}

	[Token(Token = "0x6000F78")]
	[Address(RVA = "0xAB40D4", Offset = "0xAB40D4", VA = "0xAB40D4")]
	private void TryDeactivateAndCleanupPhotos()
	{
	}

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0xAB3510", Offset = "0xAB3510", VA = "0xAB3510")]
	public void DeleteAllPhotos()
	{
	}

	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0xAB4100", Offset = "0xAB4100", VA = "0xAB4100")]
	private static void DeleteRenderTexture(RenderTexture texture)
	{
	}

	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0xAB419C", Offset = "0xAB419C", VA = "0xAB419C")]
	private void PositionCameraForTargetHeight(float photoTargetHeight)
	{
	}

	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0xAB42B0", Offset = "0xAB42B0", VA = "0xAB42B0")]
	public void TryTakePhoto(Plate plate)
	{
	}

	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0xAB46E4", Offset = "0xAB46E4", VA = "0xAB46E4")]
	private RenderTexture CaptureToTexture(int layerMask)
	{
		return null;
	}

	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0xAB479C", Offset = "0xAB479C", VA = "0xAB479C")]
	public PhotoMaker()
	{
	}
}
[Token(Token = "0x200025B")]
public class ConveyorPlateSlot : NetworkedBehaviour, IPunObservable
{
	[Token(Token = "0x170001EC")]
	public int OccupantID
	{
		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0xAB48CC", Offset = "0xAB48CC", VA = "0xAB48CC")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F80")]
		[Address(RVA = "0xAB48D4", Offset = "0xAB48D4", VA = "0xAB48D4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001ED")]
	public int OccupantOrderID
	{
		[Token(Token = "0x6000F81")]
		[Address(RVA = "0xAB48DC", Offset = "0xAB48DC", VA = "0xAB48DC")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F82")]
		[Address(RVA = "0xAB48E4", Offset = "0xAB48E4", VA = "0xAB48E4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001EE")]
	public bool IsOccupied
	{
		[Token(Token = "0x6000F83")]
		[Address(RVA = "0xAAC0B4", Offset = "0xAAC0B4", VA = "0xAAC0B4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0xAB48EC", Offset = "0xAB48EC", VA = "0xAB48EC", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0xAAB8CC", Offset = "0xAAB8CC", VA = "0xAAB8CC")]
	public void MasterOccupy(int occupantID, int orderID)
	{
	}

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0xAB4A00", Offset = "0xAB4A00", VA = "0xAB4A00")]
	public void Free(int occupantToFreeID, int occupantOrderID)
	{
	}

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0xAB4B48", Offset = "0xAB4B48", VA = "0xAB4B48")]
	[PunRPC]
	private void FreePlateSlotRPC(int occupantToFreeID, int occupantToFreeOrderID)
	{
	}

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0xAAC0C4", Offset = "0xAAC0C4", VA = "0xAAC0C4")]
	public void MasterFree()
	{
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0xAB4BD4", Offset = "0xAB4BD4", VA = "0xAB4BD4")]
	public ConveyorPlateSlot()
	{
	}
}
[Token(Token = "0x200025C")]
public class FollowPlateSlot : NetworkedBehaviour, IGrabbableTransformController, IPunObservable
{
	[Token(Token = "0x4000FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool hasTarget;

	[Token(Token = "0x4000FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float returnTime;

	[Token(Token = "0x4000FF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool returnTimerEnabled;

	[Token(Token = "0x4000FF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public float returnTimer;

	[Token(Token = "0x4000FF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Grabbable grabbable;

	[Token(Token = "0x4000FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody rigidBody;

	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform targetTransform;

	[Token(Token = "0x4000FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private PlateCollision plateCollision;

	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool dependenciesFetched;

	[Token(Token = "0x170001EF")]
	public bool FollowingPlateSlot
	{
		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0xAB4BDC", Offset = "0xAB4BDC", VA = "0xAB4BDC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001F0")]
	public ConveyorPlateSlot TargetSlot
	{
		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0xAB4BFC", Offset = "0xAB4BFC", VA = "0xAB4BFC")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0xAB4C04", Offset = "0xAB4C04", VA = "0xAB4C04")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0xAB4C0C", Offset = "0xAB4C0C", VA = "0xAB4C0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0xAB4C78", Offset = "0xAB4C78", VA = "0xAB4C78")]
	private void GetDependencies()
	{
	}

	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0xAB4DD0", Offset = "0xAB4DD0", VA = "0xAB4DD0")]
	public void SetupToFollow(int plateSlotViewID)
	{
	}

	[Token(Token = "0x6000F90")]
	[Address(RVA = "0xAB4F04", Offset = "0xAB4F04", VA = "0xAB4F04")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000F91")]
	[Address(RVA = "0xAB5174", Offset = "0xAB5174", VA = "0xAB5174")]
	public void ForceReturn()
	{
	}

	[Token(Token = "0x6000F92")]
	[Address(RVA = "0xAB541C", Offset = "0xAB541C", VA = "0xAB541C")]
	public void StopFollowingPlateSlot(int orderID)
	{
	}

	[Token(Token = "0x6000F93")]
	[Address(RVA = "0xAB5518", Offset = "0xAB5518", VA = "0xAB5518")]
	public void OnGrabBegin()
	{
	}

	[Token(Token = "0x6000F94")]
	[Address(RVA = "0xAB5550", Offset = "0xAB5550", VA = "0xAB5550")]
	private void OnRemoteGrabBegin()
	{
	}

	[Token(Token = "0x6000F95")]
	[Address(RVA = "0xAB557C", Offset = "0xAB557C", VA = "0xAB557C", Slot = "4")]
	public bool ShouldDisableNetworkSyncing(bool isGrabbed)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F96")]
	[Address(RVA = "0xAB55A4", Offset = "0xAB55A4", VA = "0xAB55A4")]
	public Transform GetTargetSlotTransform()
	{
		return null;
	}

	[Token(Token = "0x6000F97")]
	[Address(RVA = "0xAB55AC", Offset = "0xAB55AC", VA = "0xAB55AC", Slot = "5")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000F98")]
	[Address(RVA = "0xAB56A8", Offset = "0xAB56A8", VA = "0xAB56A8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F99")]
	[Address(RVA = "0xAB577C", Offset = "0xAB577C", VA = "0xAB577C")]
	public FollowPlateSlot()
	{
	}
}
[Token(Token = "0x200025D")]
public class Plate : NetworkedBehaviour, IGrabbableTransformController, IPunObservable, IConsumableTarget
{
	[Token(Token = "0x200025E")]
	public enum PlateState
	{
		[Token(Token = "0x400102D")]
		Setup,
		[Token(Token = "0x400102E")]
		Inactive,
		[Token(Token = "0x400102F")]
		WaitingForIngredients,
		[Token(Token = "0x4001030")]
		Delivering,
		[Token(Token = "0x4001031")]
		TimedOut,
		[Token(Token = "0x4001032")]
		Shattered
	}

	[Token(Token = "0x200025F")]
	public struct CreativeRecipeResults
	{
		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public CreativeRecipeData recipe;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public CreativeModeFeedback feedback;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool unlockedNewRecipe;
	}

	[Token(Token = "0x4001001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<IngredientType> addedIngredientTypes;

	[Token(Token = "0x4001002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<bool> stackedCorrectly;

	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<bool> friedCorrectly;

	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public bool hasRemovedOrder;

	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Collider topIngredientGrabCollider;

	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private float mercyTime;

	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private PlateDirt plateDirt;

	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject Colliders;

	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private UseConsumableHere useConsumableHere;

	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 handInPosition;

	[Token(Token = "0x400100B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Grabbable grabbable;

	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Rigidbody rigidBody;

	[Token(Token = "0x400100D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private List<StackedIngredientData> addedIngredients;

	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<StackedIngredientData> networkAddedIngredients;

	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private CustomerData customerData;

	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private PlateAnimation plateAnimation;

	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private PlateCollision plateCollision;

	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private OrderMonitor orderMonitor;

	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OrderObscurer orderObscurer;

	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private ThievingHandler thievingHandler;

	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private CookingGame cookingGame;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private PlateCondiment plateCondiment;

	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private PlateSpice plateSpice;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private CustomerRegistry customerRegistry;

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private TimeSlowdownHandler timeSlowdownHandler;

	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private PlateAddToCollider addToPlateCollider;

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private PlateScoring.Grade recipeGrade;

	[Token(Token = "0x400101D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private bool playLocalDeliveryAnimation;

	[Token(Token = "0x400101E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13D")]
	private bool awaitingRemovalFromOwner;

	[Token(Token = "0x400101F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13E")]
	private bool awaitingRemovalSendDeliveryComplete;

	[Token(Token = "0x4001020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float respawnTime;

	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float respawnTimer;

	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float elapsedTime;

	[Token(Token = "0x4001023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private float maxWaitTime;

	[Token(Token = "0x4001024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float unfriedValue;

	[Token(Token = "0x4001025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private float friedValue;

	[Token(Token = "0x4001026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float previousTimeStamp;

	[Token(Token = "0x4001027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private int targetPlateSlot;

	[Token(Token = "0x4001028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private RecipeIngredient[] recipeIngredientReceiver;

	[Token(Token = "0x4001029")]
	private const float firstIngredientSnapFactor = 0.02f;

	[Token(Token = "0x400102A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public bool acceptsOnlyPerfectIngredients;

	[Token(Token = "0x170001F1")]
	public int OrderID
	{
		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0xAB578C", Offset = "0xAB578C", VA = "0xAB578C")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0xAB5794", Offset = "0xAB5794", VA = "0xAB5794")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001F2")]
	public Recipe OrderRecipe
	{
		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0xAB579C", Offset = "0xAB579C", VA = "0xAB579C")]
		[CompilerGenerated]
		get
		{
			return default(Recipe);
		}
		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0xAB57A4", Offset = "0xAB57A4", VA = "0xAB57A4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001F3")]
	public CustomerType OrderCustomer
	{
		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0xAB57AC", Offset = "0xAB57AC", VA = "0xAB57AC")]
		[CompilerGenerated]
		get
		{
			return default(CustomerType);
		}
		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0xAB57B4", Offset = "0xAB57B4", VA = "0xAB57B4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001F4")]
	public int CustomerSlot
	{
		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0xAB57BC", Offset = "0xAB57BC", VA = "0xAB57BC")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0xAB57C4", Offset = "0xAB57C4", VA = "0xAB57C4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001F5")]
	public PlateState MyPlateState
	{
		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0xAB57CC", Offset = "0xAB57CC", VA = "0xAB57CC")]
		[CompilerGenerated]
		get
		{
			return default(PlateState);
		}
		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0xAB57D4", Offset = "0xAB57D4", VA = "0xAB57D4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001F6")]
	public List<StackedIngredientData> AddedIngredientsData
	{
		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0xAB57DC", Offset = "0xAB57DC", VA = "0xAB57DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F7")]
	public bool ReadyToDeliver
	{
		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0xAB57E4", Offset = "0xAB57E4", VA = "0xAB57E4")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0xAB57EC", Offset = "0xAB57EC", VA = "0xAB57EC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001F8")]
	public float OrderTimeFraction
	{
		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0xAB57F8", Offset = "0xAB57F8", VA = "0xAB57F8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001F9")]
	public float OrderSafeTimeFraction
	{
		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0xAB581C", Offset = "0xAB581C", VA = "0xAB581C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001FA")]
	public float TimeLeft
	{
		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0xAB5848", Offset = "0xAB5848", VA = "0xAB5848")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001FB")]
	public bool PlateIsEmpty
	{
		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0xAB5858", Offset = "0xAB5858", VA = "0xAB5858")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001FC")]
	public int StackSize
	{
		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0xAB58A8", Offset = "0xAB58A8", VA = "0xAB58A8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001FD")]
	public bool CanSmash
	{
		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0xAB58F0", Offset = "0xAB58F0", VA = "0xAB58F0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001FE")]
	public UseConsumableHere UseConsumableHere
	{
		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0xAB5990", Offset = "0xAB5990", VA = "0xAB5990", Slot = "6")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0xAB5998", Offset = "0xAB5998", VA = "0xAB5998", Slot = "7")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001FF")]
	public bool ReactsToConsumables
	{
		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0xAB59A0", Offset = "0xAB59A0", VA = "0xAB59A0", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000200")]
	public bool IsLocallyHeld
	{
		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0xAB5A60", Offset = "0xAB5A60", VA = "0xAB5A60")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000201")]
	public FollowPlateSlot plateSlotFollower
	{
		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0xAB5A7C", Offset = "0xAB5A7C", VA = "0xAB5A7C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0xAB5A84", Offset = "0xAB5A84", VA = "0xAB5A84")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000202")]
	public bool IsClean
	{
		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0xAB5A8C", Offset = "0xAB5A8C", VA = "0xAB5A8C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000203")]
	private bool InTutorial
	{
		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0xAB5AA8", Offset = "0xAB5AA8", VA = "0xAB5AA8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000204")]
	public StackedIngredientData GetTopIngredient
	{
		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0xAB5B7C", Offset = "0xAB5B7C", VA = "0xAB5B7C")]
		get
		{
			return default(StackedIngredientData);
		}
	}

	[Token(Token = "0x17000205")]
	public bool CreativeModePlate
	{
		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0xAB5C04", Offset = "0xAB5C04", VA = "0xAB5C04")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0xAB5C0C", Offset = "0xAB5C0C", VA = "0xAB5C0C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000206")]
	public PlateVisuals PlateVisuals
	{
		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0xAB5C18", Offset = "0xAB5C18", VA = "0xAB5C18")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0xAB5C20", Offset = "0xAB5C20", VA = "0xAB5C20")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000207")]
	public CreativeRecipeResults DeliveredCreativeRecipeResults
	{
		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0xAB5C28", Offset = "0xAB5C28", VA = "0xAB5C28")]
		[CompilerGenerated]
		get
		{
			return default(CreativeRecipeResults);
		}
		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0xAB5C34", Offset = "0xAB5C34", VA = "0xAB5C34")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0xAB5C3C", Offset = "0xAB5C3C", VA = "0xAB5C3C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FBD")]
	[Address(RVA = "0xAB5EFC", Offset = "0xAB5EFC", VA = "0xAB5EFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FBE")]
	[Address(RVA = "0xAAB9C4", Offset = "0xAAB9C4", VA = "0xAAB9C4")]
	public void AddToGame(int orderID, Recipe recipe, CustomerType customer, int customerSlot, int timeStamp, int targetPlateSlotID, bool dirty)
	{
	}

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0xAB6350", Offset = "0xAB6350", VA = "0xAB6350")]
	private void OnPlateAddedToGame()
	{
	}

	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0xAB6830", Offset = "0xAB6830", VA = "0xAB6830")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0xAB685C", Offset = "0xAB685C", VA = "0xAB685C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0xAB6B7C", Offset = "0xAB6B7C", VA = "0xAB6B7C")]
	public void OnDeliveryComplete(int deliveredOrderID)
	{
	}

	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0xAB6478", Offset = "0xAB6478", VA = "0xAB6478")]
	private void SetPlateState(PlateState newState)
	{
	}

	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0xAB6B98", Offset = "0xAB6B98", VA = "0xAB6B98")]
	private void OnPlateStateChanged(PlateState oldState)
	{
	}

	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0xAAB350", Offset = "0xAAB350", VA = "0xAAB350")]
	public void RemoveFromGame(bool sendOnDeliveryComplete)
	{
	}

	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0xAB71C8", Offset = "0xAB71C8", VA = "0xAB71C8")]
	private void OnPlateRemovedFromGame()
	{
	}

	[Token(Token = "0x6000FC7")]
	[Address(RVA = "0xAB73BC", Offset = "0xAB73BC", VA = "0xAB73BC")]
	public void AddIngredientToPlate(IngredientType ingredientType, Vector3 position, Quaternion rotation, float fryValue, IngredientSlice ingredient, bool isTofu = false, bool showFeedbackToAll = false, float dropForce = 0f)
	{
	}

	[Token(Token = "0x6000FC8")]
	[Address(RVA = "0xAB7E78", Offset = "0xAB7E78", VA = "0xAB7E78")]
	[PunRPC]
	private void AddIngredientToPlateRPC(int ingredientType, float fryValue, float rotationRelativePlate, float posOnPlateX, float posOnPlateZ, bool isTofu)
	{
	}

	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0xAB8508", Offset = "0xAB8508", VA = "0xAB8508")]
	[PunRPC]
	private void AddTofuStackRPC(Vector3 position, Quaternion rotation, int numberOfTofu)
	{
	}

	[Token(Token = "0x6000FCA")]
	[Address(RVA = "0xAB85DC", Offset = "0xAB85DC", VA = "0xAB85DC")]
	[PunRPC]
	private void CreatePerfectSandwichStackRPC(bool keepTofu)
	{
	}

	[Token(Token = "0x6000FCB")]
	[Address(RVA = "0xAB6488", Offset = "0xAB6488", VA = "0xAB6488")]
	private void UpdateLocalOrderProgress()
	{
	}

	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0xAB8864", Offset = "0xAB8864", VA = "0xAB8864")]
	public void OnGrabEnd()
	{
	}

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0xAB8C78", Offset = "0xAB8C78", VA = "0xAB8C78")]
	public void OnRemoteGrabEnd()
	{
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0xAB8A38", Offset = "0xAB8A38", VA = "0xAB8A38")]
	public void CheckAndHandInIfPossible()
	{
	}

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0xAB8D00", Offset = "0xAB8D00", VA = "0xAB8D00")]
	public void HandInPlate(Vector3 handInPosition)
	{
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0xAB7158", Offset = "0xAB7158", VA = "0xAB7158")]
	private void OnPlateStoppedWaitingForIngredients()
	{
	}

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0xAB59C8", Offset = "0xAB59C8", VA = "0xAB59C8")]
	public PlateScoring.Grade GetFinalGrade()
	{
		return default(PlateScoring.Grade);
	}

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0xAB8F70", Offset = "0xAB8F70", VA = "0xAB8F70", Slot = "4")]
	public bool ShouldDisableNetworkSyncing(bool isGrabbed)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0xAB8F80", Offset = "0xAB8F80", VA = "0xAB8F80")]
	public void RemoveIngredientsFromPlate()
	{
	}

	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0xAB9044", Offset = "0xAB9044", VA = "0xAB9044")]
	[PunRPC]
	private void RemoveIngredientsFromPlateRPC()
	{
	}

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0xAB90A0", Offset = "0xAB90A0", VA = "0xAB90A0")]
	[PunRPC]
	private void ShatterPlateRPC(CustomerData.RequirementFeedback passesRequirements)
	{
	}

	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0xAB8184", Offset = "0xAB8184", VA = "0xAB8184")]
	private void CheckIfReadyToServe()
	{
	}

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0xAB916C", Offset = "0xAB916C", VA = "0xAB916C")]
	[PunRPC]
	public void ForceTimeoutRPC()
	{
	}

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0xAB91A8", Offset = "0xAB91A8", VA = "0xAB91A8", Slot = "5")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0xAB9BC4", Offset = "0xAB9BC4", VA = "0xAB9BC4")]
	private void UpdateNetworkedAddedIngredients()
	{
	}

	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0xAB8438", Offset = "0xAB8438", VA = "0xAB8438")]
	private void UpdateTopColliders()
	{
	}

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0xAB9EC0", Offset = "0xAB9EC0", VA = "0xAB9EC0")]
	private bool IdenticalStacksSoFar(List<StackedIngredientData> listOriginal, List<StackedIngredientData> listNew)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0xABA05C", Offset = "0xABA05C", VA = "0xABA05C")]
	public void RemoveTopIngredient()
	{
	}

	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0xAB9FC8", Offset = "0xAB9FC8", VA = "0xAB9FC8")]
	private void RemoveIngredient(int index, IngredientType removedType)
	{
	}

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0xAB62D0", Offset = "0xAB62D0", VA = "0xAB62D0")]
	private void WipePlate()
	{
	}

	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0xABA13C", Offset = "0xABA13C", VA = "0xABA13C")]
	public void StealTopIngredient()
	{
	}

	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0xABA164", Offset = "0xABA164", VA = "0xABA164")]
	public void OnPlayerDisconnected()
	{
	}

	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0xABA1A4", Offset = "0xABA1A4", VA = "0xABA1A4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0xABA2E4", Offset = "0xABA2E4", VA = "0xABA2E4")]
	public Plate()
	{
	}
}
[Token(Token = "0x2000260")]
public class PlateAddToCollider : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CapsuleCollider addToPlateCollider;

	[Token(Token = "0x4001037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float creativeModeColliderRadius;

	[Token(Token = "0x4001038")]
	private const float firstIngredientColliderRadius = 20f;

	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 colliderOriginPos;

	[Token(Token = "0x400103A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float toothpickColliderDefaultRadius;

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0xABA3D4", Offset = "0xABA3D4", VA = "0xABA3D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0xABA434", Offset = "0xABA434", VA = "0xABA434")]
	public void AdjustCollider(List<StackedIngredientData> addedIngredients, bool inCreativeMode)
	{
	}

	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0xABA668", Offset = "0xABA668", VA = "0xABA668")]
	public void OnPlateClear()
	{
	}

	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0xABA69C", Offset = "0xABA69C", VA = "0xABA69C")]
	public PlateAddToCollider()
	{
	}
}
[Token(Token = "0x2000261")]
public class PlateAnimation : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000262")]
	private enum AnimationStep
	{
		[Token(Token = "0x4001054")]
		Inactive,
		[Token(Token = "0x4001055")]
		GoingDownTableCenter,
		[Token(Token = "0x4001056")]
		GoingUpToCustomer,
		[Token(Token = "0x4001057")]
		CustomerReactAndEat,
		[Token(Token = "0x4001058")]
		EndDelay,
		[Token(Token = "0x4001059")]
		TimedOutCustomerReaction
	}

	[Token(Token = "0x400103B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Delivery Animation")]
	public float leaveDelayTime;

	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Header("Time out Animation")]
	public float crackTime;

	[Token(Token = "0x400103E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float animationCooldown;

	[Token(Token = "0x400103F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float timeLeftWhenStartShaking;

	[Token(Token = "0x4001040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float stackSizeAnimationThreshold;

	[Token(Token = "0x4001041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float risingUpToCustomerTime;

	[Token(Token = "0x4001042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private AnimationStep animationStep;

	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Plate plate;

	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PlateVisuals plateVisuals;

	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ConveyorBelt conveyorBelt;

	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OrderMonitor orderMonitor;

	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CustomerVisual customer;

	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Animator plateShake;

	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 belowTableCenterTarget;

	[Token(Token = "0x400104A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 infrontOfCustomerTarget;

	[Token(Token = "0x400104B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool customerFinishedEating;

	[Token(Token = "0x400104C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float leaveDelayTimer;

	[Token(Token = "0x400104D")]
	private const int numCrackStates = 3;

	[Token(Token = "0x400104E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int currentCrackState;

	[Token(Token = "0x400104F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float animationTimer;

	[Token(Token = "0x4001050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Rigidbody rigidBody;

	[Token(Token = "0x4001051")]
	private const int deliveringNoOrderID = -3;

	[Token(Token = "0x4001052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int deliveringOrderID;

	[Token(Token = "0x17000208")]
	public float StartShakingThreshold
	{
		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0xABA6AC", Offset = "0xABA6AC", VA = "0xABA6AC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000209")]
	public float StartCrackingTime
	{
		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0xABA6B4", Offset = "0xABA6B4", VA = "0xABA6B4")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0xABA6BC", Offset = "0xABA6BC", VA = "0xABA6BC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000FEA")]
	[Address(RVA = "0xABA6C4", Offset = "0xABA6C4", VA = "0xABA6C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FEB")]
	[Address(RVA = "0xABA7A4", Offset = "0xABA7A4", VA = "0xABA7A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FEC")]
	[Address(RVA = "0xABA92C", Offset = "0xABA92C", VA = "0xABA92C")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000FED")]
	[Address(RVA = "0xABA9F4", Offset = "0xABA9F4", VA = "0xABA9F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0xABAB00", Offset = "0xABAB00", VA = "0xABAB00")]
	public void UpdateCrackState(float timeLeftToTimeOut)
	{
	}

	[Token(Token = "0x6000FEF")]
	[Address(RVA = "0xABAC44", Offset = "0xABAC44", VA = "0xABAC44")]
	public void StartDelivery(Vector3 handInPosition)
	{
	}

	[Token(Token = "0x6000FF0")]
	[Address(RVA = "0xABB254", Offset = "0xABB254", VA = "0xABB254")]
	private void TryGettingCustomer()
	{
	}

	[Token(Token = "0x6000FF1")]
	[Address(RVA = "0xABB480", Offset = "0xABB480", VA = "0xABB480")]
	public void TickDeliveryAnimation()
	{
	}

	[Token(Token = "0x6000FF2")]
	[Address(RVA = "0xABB66C", Offset = "0xABB66C", VA = "0xABB66C")]
	public void FixedTickDeliveryAnimation()
	{
	}

	[Token(Token = "0x6000FF3")]
	[Address(RVA = "0xABBA2C", Offset = "0xABBA2C", VA = "0xABBA2C")]
	public void StartPlateTimeOut()
	{
	}

	[Token(Token = "0x6000FF4")]
	[Address(RVA = "0xABBB2C", Offset = "0xABBB2C", VA = "0xABBB2C")]
	public void TickTimeOutAnimation()
	{
	}

	[Token(Token = "0x6000FF5")]
	[Address(RVA = "0xABADA4", Offset = "0xABADA4", VA = "0xABADA4")]
	private void TryRemoveOrder()
	{
	}

	[Token(Token = "0x6000FF6")]
	[Address(RVA = "0xABADF4", Offset = "0xABADF4", VA = "0xABADF4")]
	private bool CheckIfCustomerIsAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FF7")]
	[Address(RVA = "0xABBB8C", Offset = "0xABBB8C", VA = "0xABBB8C")]
	public PlateAnimation()
	{
	}
}
[Token(Token = "0x2000263")]
public class PlateCollision : NetworkedBehaviour
{
	[Token(Token = "0x400105A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float speedThresholdPlayer;

	[Token(Token = "0x400105B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float speedThresholdStandard;

	[Token(Token = "0x400105C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float speedThresholdEnvironment;

	[Token(Token = "0x400105D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Grabbable grabbable;

	[Token(Token = "0x400105E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Plate plate;

	[Token(Token = "0x400105F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody rigidBody;

	[Token(Token = "0x4001060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Collider[] collidersHit;

	[Token(Token = "0x4001061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<Collider> plateColliders;

	[Token(Token = "0x4001062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private FollowPlateSlot followPlateSlot;

	[Token(Token = "0x4001063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private LayerMask plateOnBeltMask;

	[Token(Token = "0x4001064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private LayerMask plateOffBeltMask;

	[Token(Token = "0x4001065")]
	public const string handInColliderName = "HandInCollider";

	[Token(Token = "0x4001066")]
	public const string conveyorBeltTriggerName = "ConveyorBeltTrigger";

	[Token(Token = "0x4001067")]
	private const float isCloseRadius = 0.03f;

	[Token(Token = "0x4001068")]
	private const string throwInColliderName = "ThrowInCollider";

	[Token(Token = "0x4001069")]
	private const string environmentTag = "Environment";

	[Token(Token = "0x400106A")]
	private const string floorTag = "Floor";

	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0xABBE98", Offset = "0xABBE98", VA = "0xABBE98")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0xABC034", Offset = "0xABC034", VA = "0xABC034")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0xABC2B4", Offset = "0xABC2B4", VA = "0xABC2B4")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0xABC544", Offset = "0xABC544", VA = "0xABC544")]
	public bool IsCloseToCollider(string colliderName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0xABC604", Offset = "0xABC604", VA = "0xABC604")]
	public void AddPlateCollider(Collider collider)
	{
	}

	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0xABC700", Offset = "0xABC700", VA = "0xABC700")]
	public void RemovePlateCollider(Collider collider)
	{
	}

	[Token(Token = "0x6001000")]
	[Address(RVA = "0xABC790", Offset = "0xABC790", VA = "0xABC790")]
	public void PlateReturnedToBelt()
	{
	}

	[Token(Token = "0x6001001")]
	[Address(RVA = "0xABC908", Offset = "0xABC908", VA = "0xABC908")]
	public void PlateLeftBelt()
	{
	}

	[Token(Token = "0x6001002")]
	[Address(RVA = "0xABC9CC", Offset = "0xABC9CC", VA = "0xABC9CC")]
	public PlateCollision()
	{
	}
}
[Token(Token = "0x2000264")]
public class PlateCompleteEffect : SingleInstanceBehavior<PlateCompleteEffect>
{
	[Token(Token = "0x400106B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshPro coinTipText;

	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshPro creativeFeedbackText;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject coinTipParent;

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject creativeFeedbackParent;

	[Token(Token = "0x400106F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float startHeightOffset;

	[Token(Token = "0x4001070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float liveTime;

	[Token(Token = "0x4001071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float longLiveTime;

	[Token(Token = "0x4001072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform visualParent;

	[Token(Token = "0x4001073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject visualGameObject;

	[Token(Token = "0x4001074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 targetScale;

	[Token(Token = "0x4001075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float targetLocalHeight;

	[Token(Token = "0x4001076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject visualParentGO;

	[Token(Token = "0x4001077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem plateCompletePoof;

	[Token(Token = "0x4001078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Locale locale;

	[Token(Token = "0x4001079")]
	private const string localizationNew = "creative_recipe_new";

	[Token(Token = "0x6001003")]
	[Address(RVA = "0xABCA88", Offset = "0xABCA88", VA = "0xABCA88", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6001004")]
	[Address(RVA = "0xABCB68", Offset = "0xABCB68", VA = "0xABCB68")]
	private void Start()
	{
	}

	[Token(Token = "0x6001005")]
	[Address(RVA = "0xABCBB4", Offset = "0xABCBB4", VA = "0xABCBB4")]
	public void Show(PlateScoring.Grade grade, CustomerType customerType)
	{
	}

	[Token(Token = "0x6001006")]
	[Address(RVA = "0xABCE48", Offset = "0xABCE48", VA = "0xABCE48")]
	public void Show(CreativeRecipeData recipe, bool isNewRecipe, CreativeModeFeedback feedback)
	{
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0xABCCE0", Offset = "0xABCCE0", VA = "0xABCCE0")]
	private void AnimateVisual(CustomerType customerType)
	{
	}

	[Token(Token = "0x6001008")]
	[Address(RVA = "0xABCF14", Offset = "0xABCF14", VA = "0xABCF14")]
	private void AnimateVisualCreativeMode(CreativeRecipeData recipe, bool isNewRecipe, CreativeModeFeedback feedback)
	{
	}

	[Token(Token = "0x6001009")]
	[Address(RVA = "0xABD1BC", Offset = "0xABD1BC", VA = "0xABD1BC")]
	private void AnimateVisual(float timeToLive)
	{
	}

	[Token(Token = "0x600100A")]
	[Address(RVA = "0xABD3B0", Offset = "0xABD3B0", VA = "0xABD3B0")]
	public PlateCompleteEffect()
	{
	}
}
[Token(Token = "0x2000265")]
public class PlateDirt : NetworkedBehaviour, IPunObservable
{
	[Token(Token = "0x400107B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Renderer plateRenderer;

	[Token(Token = "0x400107C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform wetPlateParticlesAnchor;

	[Token(Token = "0x400107D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform cleanedParticlesAnchor;

	[Token(Token = "0x400107E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float dryTime;

	[Token(Token = "0x400107F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AnimationCurve dirtCurve;

	[Token(Token = "0x4001080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MaterialPropertyBlock propertyBlock;

	[Token(Token = "0x4001081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Plate plate;

	[Token(Token = "0x4001082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float dirtFraction;

	[Token(Token = "0x4001083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float bubbleProgress;

	[Token(Token = "0x4001084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float bubbleThreshold;

	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float dryTimer;

	[Token(Token = "0x4001086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool wetParticlesPlaying;

	[Token(Token = "0x4001087")]
	private const string propertyDirtFraction = "_DirtFraction";

	[Token(Token = "0x4001088")]
	private const string tagDishWater = "DishWater";

	[Token(Token = "0x1700020A")]
	public float DirtFraction
	{
		[Token(Token = "0x600100C")]
		[Address(RVA = "0xABD450", Offset = "0xABD450", VA = "0xABD450")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600100D")]
		[Address(RVA = "0xABD458", Offset = "0xABD458", VA = "0xABD458")]
		private set
		{
		}
	}

	[Token(Token = "0x1700020B")]
	public bool IsWet
	{
		[Token(Token = "0x600100E")]
		[Address(RVA = "0xABD52C", Offset = "0xABD52C", VA = "0xABD52C")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600100F")]
		[Address(RVA = "0xABD534", Offset = "0xABD534", VA = "0xABD534")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700020C")]
	public bool IsClean
	{
		[Token(Token = "0x6001010")]
		[Address(RVA = "0xABD540", Offset = "0xABD540", VA = "0xABD540")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001011")]
	[Address(RVA = "0xABD550", Offset = "0xABD550", VA = "0xABD550")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001012")]
	[Address(RVA = "0xABD5DC", Offset = "0xABD5DC", VA = "0xABD5DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001013")]
	[Address(RVA = "0xABD690", Offset = "0xABD690", VA = "0xABD690")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001014")]
	[Address(RVA = "0xABD930", Offset = "0xABD930", VA = "0xABD930")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6001015")]
	[Address(RVA = "0xABD9E0", Offset = "0xABD9E0", VA = "0xABD9E0")]
	public void Wash(float fractionWashedOff, bool botWashed = false)
	{
	}

	[Token(Token = "0x6001016")]
	[Address(RVA = "0xABDC78", Offset = "0xABDC78", VA = "0xABDC78")]
	[PunRPC]
	public void PlayWashBubblesRPC(bool plateCleaned)
	{
	}

	[Token(Token = "0x6001017")]
	[Address(RVA = "0xABDE54", Offset = "0xABDE54", VA = "0xABDE54")]
	public void ResetDirtFraction(float fraction)
	{
	}

	[Token(Token = "0x6001018")]
	[Address(RVA = "0xABDE60", Offset = "0xABDE60", VA = "0xABDE60")]
	public void OnPlateShatter()
	{
	}

	[Token(Token = "0x6001019")]
	[Address(RVA = "0xABD62C", Offset = "0xABD62C", VA = "0xABD62C")]
	private void StopWetParticles()
	{
	}

	[Token(Token = "0x600101A")]
	[Address(RVA = "0xABDE98", Offset = "0xABDE98", VA = "0xABDE98")]
	public void OnPlatePerfectized()
	{
	}

	[Token(Token = "0x600101B")]
	[Address(RVA = "0xABDED4", Offset = "0xABDED4", VA = "0xABDED4", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600101C")]
	[Address(RVA = "0xABE060", Offset = "0xABE060", VA = "0xABE060")]
	public PlateDirt()
	{
	}
}
[Token(Token = "0x2000266")]
public static class PlateScoring
{
	[Token(Token = "0x2000267")]
	public enum AddIngredientFeedback
	{
		[Token(Token = "0x400109B")]
		Perfect,
		[Token(Token = "0x400109C")]
		WrongIngredient,
		[Token(Token = "0x400109D")]
		ShouldBeMoreGrilled,
		[Token(Token = "0x400109E")]
		ShouldNotBeGrilled,
		[Token(Token = "0x400109F")]
		ShouldNotBeBurnt,
		[Token(Token = "0x40010A0")]
		WrongOrder,
		[Token(Token = "0x40010A1")]
		SloppilyStacked,
		[Token(Token = "0x40010A2")]
		AlreadyFull,
		[Token(Token = "0x40010A3")]
		CreativeModePlacement
	}

	[Token(Token = "0x2000268")]
	public enum Grade
	{
		[Token(Token = "0x40010A5")]
		Perfect,
		[Token(Token = "0x40010A6")]
		NotPerfect
	}

	[Token(Token = "0x4001089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string positivePrefix;

	[Token(Token = "0x400108A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int positiveVariationCount;

	[Token(Token = "0x400108B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string notFriedPrefix;

	[Token(Token = "0x400108C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int notFriedVariationCount;

	[Token(Token = "0x400108D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static string serveColdPrefix;

	[Token(Token = "0x400108E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static int serveColdVariationCount;

	[Token(Token = "0x400108F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static string burntPrefix;

	[Token(Token = "0x4001090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static int burntVariationCount;

	[Token(Token = "0x4001091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string wrongStackingOrderPrefix;

	[Token(Token = "0x4001092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static int wrongStackingOrderVariationCount;

	[Token(Token = "0x4001093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string notCenteredPrefix;

	[Token(Token = "0x4001094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static int notCenteredVariationCount;

	[Token(Token = "0x4001095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static string wrongIngredientPrefix;

	[Token(Token = "0x4001096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static int wrongIngredientVariationCount;

	[Token(Token = "0x4001097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static string alreadyFullPrefix;

	[Token(Token = "0x4001098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static int alreadyFullVariationCount;

	[Token(Token = "0x4001099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public static float ingredientCenteredOnPlateLimit;

	[Token(Token = "0x600101D")]
	[Address(RVA = "0xABE07C", Offset = "0xABE07C", VA = "0xABE07C")]
	public static AddIngredientFeedback CanAddIngredient(Plate plate, IList<StackedIngredientData> stackedIngredients, IngredientType ingredient, float fryValue, float localPosX, float localPosZ, bool isTofu)
	{
		return default(AddIngredientFeedback);
	}

	[Token(Token = "0x600101E")]
	[Address(RVA = "0xABE4B4", Offset = "0xABE4B4", VA = "0xABE4B4")]
	public static AddIngredientFeedback IsCorrectlyGrilled(float desiredFryAmount, float currentFryAmount, bool isTofu)
	{
		return default(AddIngredientFeedback);
	}

	[Token(Token = "0x600101F")]
	[Address(RVA = "0xABE5E8", Offset = "0xABE5E8", VA = "0xABE5E8")]
	public static bool IsNeatlyStackedAt(IngredientType type, IList<StackedIngredientData> addedIngredients, float posXRelativePlate, float posZRelativePlate)
	{
		return default(bool);
	}

	[Token(Token = "0x6001020")]
	[Address(RVA = "0xABE828", Offset = "0xABE828", VA = "0xABE828")]
	public static Grade GetPlateFinalGrade(RecipeIngredient[] recipeIngredients, IList<StackedIngredientData> addedIngredients, bool isClean, bool creativeModePlate)
	{
		return default(Grade);
	}

	[Token(Token = "0x6001021")]
	[Address(RVA = "0xABE94C", Offset = "0xABE94C", VA = "0xABE94C")]
	public static Grade GetPlateCurrentGrade(RecipeIngredient[] recipeIngredients, IList<StackedIngredientData> addedIngredients, bool isClean, bool creativeModePlate)
	{
		return default(Grade);
	}

	[Token(Token = "0x6001022")]
	[Address(RVA = "0xABEB94", Offset = "0xABEB94", VA = "0xABEB94")]
	public static string GetRandomizedFeedbackStringID(AddIngredientFeedback addIngredientFeedback)
	{
		return null;
	}
}
[Token(Token = "0x200026A")]
public class PlateServeBanner : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40010A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject readyToServe;

	[Token(Token = "0x40010A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject failed;

	[Token(Token = "0x40010AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform poofAnchor;

	[Token(Token = "0x40010AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float offsetFromTallSandwiches;

	[Token(Token = "0x40010AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 defaultPosition;

	[Token(Token = "0x6001027")]
	[Address(RVA = "0xABF010", Offset = "0xABF010", VA = "0xABF010")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001028")]
	[Address(RVA = "0xABF040", Offset = "0xABF040", VA = "0xABF040")]
	public void Show(bool passedRequirements, int numberOfIngredients, float sandwichHeight)
	{
	}

	[Token(Token = "0x6001029")]
	[Address(RVA = "0xABF1F8", Offset = "0xABF1F8", VA = "0xABF1F8")]
	public bool IsShowing()
	{
		return default(bool);
	}

	[Token(Token = "0x600102A")]
	[Address(RVA = "0xABF238", Offset = "0xABF238", VA = "0xABF238")]
	public void Hide()
	{
	}

	[Token(Token = "0x600102B")]
	[Address(RVA = "0xABF270", Offset = "0xABF270", VA = "0xABF270")]
	public PlateServeBanner()
	{
	}
}
[Token(Token = "0x200026B")]
public class PlateSpice : NetworkedBehaviour, IPunObservable
{
	[Token(Token = "0x40010AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float spiceCountdownThresholdIncrease;

	[Token(Token = "0x40010AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private int spiceStartingCountdown;

	[Token(Token = "0x40010AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float cooldown;

	[Token(Token = "0x40010B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int spiceCountdown;

	[Token(Token = "0x40010B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float cooldownTimer;

	[Token(Token = "0x40010B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float spiceCountdownThreshold;

	[Token(Token = "0x40010B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float spiceCountdownThresholdStart;

	[Token(Token = "0x40010B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float spiciness;

	[Token(Token = "0x40010B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Plate plate;

	[Token(Token = "0x40010B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PlateVisuals plateVisuals;

	[Token(Token = "0x600102C")]
	[Address(RVA = "0xABF284", Offset = "0xABF284", VA = "0xABF284")]
	private void Awake()
	{
	}

	[Token(Token = "0x600102D")]
	[Address(RVA = "0xABF310", Offset = "0xABF310", VA = "0xABF310")]
	private void Update()
	{
	}

	[Token(Token = "0x600102E")]
	[Address(RVA = "0xABF344", Offset = "0xABF344", VA = "0xABF344")]
	private void UpdateSpiceProgress()
	{
	}

	[Token(Token = "0x600102F")]
	[Address(RVA = "0xABF6D8", Offset = "0xABF6D8", VA = "0xABF6D8")]
	public void IncreaseSpiceParticles(float rate)
	{
	}

	[Token(Token = "0x6001030")]
	[Address(RVA = "0xABF7EC", Offset = "0xABF7EC", VA = "0xABF7EC")]
	[PunRPC]
	public void IncreaseSpiceParticlesRPC(float rate)
	{
	}

	[Token(Token = "0x6001031")]
	[Address(RVA = "0xABF84C", Offset = "0xABF84C", VA = "0xABF84C")]
	public void ResetPlateSpice()
	{
	}

	[Token(Token = "0x6001032")]
	[Address(RVA = "0xABF864", Offset = "0xABF864", VA = "0xABF864", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6001033")]
	[Address(RVA = "0xABF930", Offset = "0xABF930", VA = "0xABF930")]
	public PlateSpice()
	{
	}
}
[Token(Token = "0x200026C")]
public class PlateToothpick : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40010B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject toothpickPrefab;

	[Token(Token = "0x40010B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject ghostVisualStraight;

	[Token(Token = "0x40010B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject ghostVisualCrooked;

	[Token(Token = "0x40010BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Plate plate;

	[Token(Token = "0x40010BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private PlateDirt plateDirt;

	[Token(Token = "0x40010BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject ghostVisuals;

	[Token(Token = "0x40010BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject visualsParent;

	[Token(Token = "0x40010BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject toothpick;

	[Token(Token = "0x40010BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float yOrigin;

	[Token(Token = "0x40010C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float ghostVisualYOrigin;

	[Token(Token = "0x6001034")]
	[Address(RVA = "0xABF950", Offset = "0xABF950", VA = "0xABF950")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001035")]
	[Address(RVA = "0xABFA3C", Offset = "0xABFA3C", VA = "0xABFA3C")]
	public void OnNewIngredientAdded(int nStackedIngredients, StackedIngredientData newIngredient, float totalPadding)
	{
	}

	[Token(Token = "0x6001036")]
	[Address(RVA = "0xABFBD8", Offset = "0xABFBD8", VA = "0xABFBD8")]
	public void MaterializeAndAnimate(float topIngredientYPos, float topIngredientPadding)
	{
	}

	[Token(Token = "0x6001037")]
	[Address(RVA = "0xABFF24", Offset = "0xABFF24", VA = "0xABFF24")]
	public void HideGhostToothpick()
	{
	}

	[Token(Token = "0x6001038")]
	[Address(RVA = "0xABFF44", Offset = "0xABFF44", VA = "0xABFF44")]
	public void ResetToothpick(List<StackedIngredientData> addedIngredients, int recipeSize)
	{
	}

	[Token(Token = "0x6001039")]
	[Address(RVA = "0xAC0238", Offset = "0xAC0238", VA = "0xAC0238")]
	public PlateToothpick()
	{
	}
}
[Token(Token = "0x200026E")]
public class PlateVisuals : NetworkedBehaviour
{
	[Token(Token = "0x200026F")]
	public enum TextColor
	{
		[Token(Token = "0x40010F0")]
		White,
		[Token(Token = "0x40010F1")]
		Red,
		[Token(Token = "0x40010F2")]
		Yellow,
		[Token(Token = "0x40010F3")]
		Green
	}

	[Token(Token = "0x2000270")]
	[CompilerGenerated]
	private sealed class <ShowServeFeedbackWhenReady>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isPerfect;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlateVisuals <>4__this;

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float platePaddingTop;

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Plate plate;

		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool passedRequirements;

		[Token(Token = "0x1700020D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001061")]
			[Address(RVA = "0xAC32D4", Offset = "0xAC32D4", VA = "0xAC32D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001063")]
			[Address(RVA = "0xAC331C", Offset = "0xAC331C", VA = "0xAC331C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0xAC2020", Offset = "0xAC2020", VA = "0xAC2020")]
		[DebuggerHidden]
		public <ShowServeFeedbackWhenReady>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0xAC3138", Offset = "0xAC3138", VA = "0xAC3138", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0xAC313C", Offset = "0xAC313C", VA = "0xAC313C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0xAC32DC", Offset = "0xAC32DC", VA = "0xAC32DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Renderer plateRenderer;

	[Token(Token = "0x40010C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Material TofuMaterial;

	[Token(Token = "0x40010C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform ingredientVisualRoot;

	[Token(Token = "0x40010C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform ingredientAddedParticleAnchor;

	[Token(Token = "0x40010C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float timeLeftWhenTimeWarning;

	[Token(Token = "0x40010C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Color[] textColors;

	[Token(Token = "0x40010C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private ParticleSystem completeGlowEffect;

	[Token(Token = "0x40010CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private ParticleSystem PlateShatter;

	[Token(Token = "0x40010CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float maxDistanceFromStack;

	[Token(Token = "0x40010CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private float maxDistanceFromStackCreativeMode;

	[Token(Token = "0x40010CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Plate plate;

	[Token(Token = "0x40010CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject feedbackParent;

	[Token(Token = "0x40010CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private FeedbackPopup blimpFeedbackPopup;

	[Token(Token = "0x40010D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 feedbackParentOrigin;

	[Token(Token = "0x40010D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PlateServeBanner serveBanner;

	[Token(Token = "0x40010D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private PlateCondiment plateCondiment;

	[Token(Token = "0x40010D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject visuals;

	[Token(Token = "0x40010D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private GameObject plateNumberHolder;

	[Token(Token = "0x40010D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Renderer plateNumberHolderRenderer;

	[Token(Token = "0x40010D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<GameObject> ingredientVisualsList;

	[Token(Token = "0x40010D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private List<Renderer> ingredientVisualsRendererList;

	[Token(Token = "0x40010D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<Collider> ingredientVisualsColliderList;

	[Token(Token = "0x40010D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private PlateToothpick toothpick;

	[Token(Token = "0x40010DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private IEnumerator serveCoroutine;

	[Token(Token = "0x40010DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private MaterialPropertyBlock propertyBlock;

	[Token(Token = "0x40010DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private WaitForEndOfFrame waitForEndOfFrame;

	[Token(Token = "0x40010DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private GameObject timeWarning;

	[Token(Token = "0x40010DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private GameObject stolenIngredientWarning;

	[Token(Token = "0x40010DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private ParticleSystem isPerfectParticles;

	[Token(Token = "0x40010E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private GameObject isPerfectParticlesGO;

	[Token(Token = "0x40010E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private PlateDirt plateDirt;

	[Token(Token = "0x40010E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private EnvironmentLoader environmentLoader;

	[Token(Token = "0x40010E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private List<ParticleSystemRenderer> plateShardRenderers;

	[Token(Token = "0x40010E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private int plateTextureArrayIndex;

	[Token(Token = "0x40010E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private PlateCollision plateCollision;

	[Token(Token = "0x40010E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Locale locale;

	[Token(Token = "0x40010E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private PlateCompleteEffect plateCompleteEffect;

	[Token(Token = "0x40010E8")]
	private const float plateBasePadding = 0.005f;

	[Token(Token = "0x40010E9")]
	private const float regularPutOnPlateSpeedThreshold = 0.4f;

	[Token(Token = "0x40010EA")]
	private const float hardPutOnPlateSpeedThreshold = 1.3f;

	[Token(Token = "0x40010EB")]
	private const string plateIngredientTag = "PlateIngredient";

	[Token(Token = "0x40010EC")]
	private const string propertyTextureIndex = "_TextureIndex";

	[Token(Token = "0x40010ED")]
	private const string propertyCrackState = "_CrackState";

	[Token(Token = "0x40010EE")]
	private const string localizationShatteredPlateFeedback = "plate_shattered_on_serve";

	[Token(Token = "0x600103C")]
	[Address(RVA = "0xAC02CC", Offset = "0xAC02CC", VA = "0xAC02CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600103D")]
	[Address(RVA = "0xAC0648", Offset = "0xAC0648", VA = "0xAC0648")]
	private void Start()
	{
	}

	[Token(Token = "0x600103E")]
	[Address(RVA = "0xAC09C4", Offset = "0xAC09C4", VA = "0xAC09C4")]
	private void Update()
	{
	}

	[Token(Token = "0x600103F")]
	[Address(RVA = "0xAC0A30", Offset = "0xAC0A30", VA = "0xAC0A30")]
	public void PlateSpawned(CustomerType customerType, int plateTextureArrayIndex, int customerSlot, Vector3 spawnPosition)
	{
	}

	[Token(Token = "0x6001040")]
	[Address(RVA = "0xAC0C84", Offset = "0xAC0C84", VA = "0xAC0C84")]
	public void ShowStackingFeedback(PlateScoring.AddIngredientFeedback ingredientFeedback, IngredientType ingredient, bool showFeedbackToAll)
	{
	}

	[Token(Token = "0x6001041")]
	[Address(RVA = "0xABF548", Offset = "0xABF548", VA = "0xABF548")]
	public void ShowTextFeedback(string stringID, TextColor textColor = TextColor.White)
	{
	}

	[Token(Token = "0x6001042")]
	[Address(RVA = "0xAC0E34", Offset = "0xAC0E34", VA = "0xAC0E34")]
	[PunRPC]
	private void ShowTextFeedbackToAllRPC(string stringID, int textColorID)
	{
	}

	[Token(Token = "0x6001043")]
	[Address(RVA = "0xAC0E38", Offset = "0xAC0E38", VA = "0xAC0E38")]
	public void AddToStack(StackedIngredientData stackedData, List<StackedIngredientData> addedIngredients, int recipeLength)
	{
	}

	[Token(Token = "0x6001044")]
	[Address(RVA = "0xAC1C3C", Offset = "0xAC1C3C", VA = "0xAC1C3C")]
	[PunRPC]
	private void ShowAddIngredientFeedbackRPC(bool canAdd, bool playBigEffect, float force, int dropSoundInt)
	{
	}

	[Token(Token = "0x6001045")]
	[Address(RVA = "0xAC1A94", Offset = "0xAC1A94", VA = "0xAC1A94")]
	private void AdjustFeedbackPosition(float totalPadding)
	{
	}

	[Token(Token = "0x6001046")]
	[Address(RVA = "0xAC1EC0", Offset = "0xAC1EC0", VA = "0xAC1EC0")]
	public void ShowServeFeedback(Plate plate, bool passedRequirements, bool isPerfect, float platePaddingTop)
	{
	}

	[Token(Token = "0x6001047")]
	[Address(RVA = "0xAC1F78", Offset = "0xAC1F78", VA = "0xAC1F78")]
	[IteratorStateMachine(typeof(<ShowServeFeedbackWhenReady>d__56))]
	private IEnumerator ShowServeFeedbackWhenReady(Plate plate, bool passedRequirements, bool isPerfect, float platePaddingTop)
	{
		return null;
	}

	[Token(Token = "0x6001048")]
	[Address(RVA = "0xAC2048", Offset = "0xAC2048", VA = "0xAC2048")]
	public void HideServeFeedback()
	{
	}

	[Token(Token = "0x6001049")]
	[Address(RVA = "0xAC209C", Offset = "0xAC209C", VA = "0xAC209C")]
	public void HideServeFeedbackAndResetToothpick(List<StackedIngredientData> addedIngredients)
	{
	}

	[Token(Token = "0x600104A")]
	[Address(RVA = "0xAC20E8", Offset = "0xAC20E8", VA = "0xAC20E8")]
	public void HandInPlate(PlateScoring.Grade recipeGrade)
	{
	}

	[Token(Token = "0x600104B")]
	[Address(RVA = "0xAC21C8", Offset = "0xAC21C8", VA = "0xAC21C8")]
	public void HandInPlate(CreativeRecipeData recipe, bool isNewRecipe, CreativeModeFeedback feedback)
	{
	}

	[Token(Token = "0x600104C")]
	[Address(RVA = "0xAC2118", Offset = "0xAC2118", VA = "0xAC2118")]
	private void HandInPlate()
	{
	}

	[Token(Token = "0x600104D")]
	[Address(RVA = "0xAC21F0", Offset = "0xAC21F0", VA = "0xAC21F0")]
	public void HideNumberHolder()
	{
	}

	[Token(Token = "0x600104E")]
	[Address(RVA = "0xABA950", Offset = "0xABA950", VA = "0xABA950")]
	public void SetCrackState(int crackState)
	{
	}

	[Token(Token = "0x600104F")]
	[Address(RVA = "0xAC2210", Offset = "0xAC2210", VA = "0xAC2210")]
	public void ShatterPlate(CustomerData.RequirementFeedback passesRequirements)
	{
	}

	[Token(Token = "0x6001050")]
	[Address(RVA = "0xAC24F8", Offset = "0xAC24F8", VA = "0xAC24F8")]
	public void RespawnBrokenPlate(Vector3 respawnPosition)
	{
	}

	[Token(Token = "0x6001051")]
	[Address(RVA = "0xAC22C0", Offset = "0xAC22C0", VA = "0xAC22C0")]
	public void Show(bool shouldShow)
	{
	}

	[Token(Token = "0x6001052")]
	[Address(RVA = "0xABBA9C", Offset = "0xABBA9C", VA = "0xABBA9C")]
	internal void PlateTimedOut()
	{
	}

	[Token(Token = "0x6001053")]
	[Address(RVA = "0xAC25CC", Offset = "0xAC25CC", VA = "0xAC25CC")]
	[PunRPC]
	private void SnapToConveyorBeltEffectRPC(Vector3 position)
	{
	}

	[Token(Token = "0x6001054")]
	[Address(RVA = "0xAC23B0", Offset = "0xAC23B0", VA = "0xAC23B0")]
	private void PlayShatterParticles()
	{
	}

	[Token(Token = "0x6001055")]
	[Address(RVA = "0xAC26A0", Offset = "0xAC26A0", VA = "0xAC26A0")]
	public void RemoveIngredientAt(int index, IngredientType removedIngredientType, List<StackedIngredientData> remainingIngredients)
	{
	}

	[Token(Token = "0x6001056")]
	[Address(RVA = "0xAC2A70", Offset = "0xAC2A70", VA = "0xAC2A70")]
	public void ClearIngredients()
	{
	}

	[Token(Token = "0x6001057")]
	[Address(RVA = "0xAC2C9C", Offset = "0xAC2C9C", VA = "0xAC2C9C")]
	public void OnIngredientStolen()
	{
	}

	[Token(Token = "0x6001058")]
	[Address(RVA = "0xAC2E24", Offset = "0xAC2E24", VA = "0xAC2E24")]
	public Vector3 GetTopIngredientLocalPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001059")]
	[Address(RVA = "0xABF648", Offset = "0xABF648", VA = "0xABF648")]
	public Vector3 GetTopIngredientWorldPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600105A")]
	[Address(RVA = "0xAC2EE4", Offset = "0xAC2EE4", VA = "0xAC2EE4")]
	public float GetSandwichVisualHeight()
	{
		return default(float);
	}

	[Token(Token = "0x600105B")]
	[Address(RVA = "0xAC1B08", Offset = "0xAC1B08", VA = "0xAC1B08")]
	private void ResolveIsPerfectParticles()
	{
	}

	[Token(Token = "0x600105C")]
	[Address(RVA = "0xAC0C00", Offset = "0xAC0C00", VA = "0xAC0C00")]
	private void UpdateRendererPlateTexture(Renderer myRenderer)
	{
	}

	[Token(Token = "0x600105D")]
	[Address(RVA = "0xAC2FAC", Offset = "0xAC2FAC", VA = "0xAC2FAC")]
	public PlateVisuals()
	{
	}
}
[Serializable]
[Token(Token = "0x2000271")]
public struct StackedIngredientData
{
	[Token(Token = "0x40010FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IngredientType type;

	[Token(Token = "0x40010FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float fryValue;

	[Token(Token = "0x40010FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float yRotation;

	[Token(Token = "0x40010FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float xLocalPos;

	[Token(Token = "0x40010FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float zLocalPos;

	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool isTofu;

	[Token(Token = "0x6001064")]
	[Address(RVA = "0xAC3324", Offset = "0xAC3324", VA = "0xAC3324")]
	public bool Equals(StackedIngredientData other)
	{
		return default(bool);
	}

	[Token(Token = "0x6001065")]
	[Address(RVA = "0xAC347C", Offset = "0xAC347C", VA = "0xAC347C", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000272")]
public class PlayerColorManager
{
	[Token(Token = "0x4001101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Color[] playerColors;

	[Token(Token = "0x6001066")]
	[Address(RVA = "0xAC36D0", Offset = "0xAC36D0", VA = "0xAC36D0")]
	public static Color GetPlayerColor(int playerSlotIndex)
	{
		return default(Color);
	}

	[Token(Token = "0x6001067")]
	[Address(RVA = "0xAC3754", Offset = "0xAC3754", VA = "0xAC3754")]
	public static Color GetPlayerColorValue(PlayerColor color)
	{
		return default(Color);
	}

	[Token(Token = "0x6001068")]
	[Address(RVA = "0xAC38C8", Offset = "0xAC38C8", VA = "0xAC38C8")]
	public static PlayerColor GetLocalPlayerColor()
	{
		return default(PlayerColor);
	}

	[Token(Token = "0x6001069")]
	[Address(RVA = "0xAC39D0", Offset = "0xAC39D0", VA = "0xAC39D0")]
	public static PlayerColor GetPlayerColorEnum(int playerSlotIndex)
	{
		return default(PlayerColor);
	}

	[Token(Token = "0x600106A")]
	[Address(RVA = "0xAC39EC", Offset = "0xAC39EC", VA = "0xAC39EC")]
	public PlayerColorManager()
	{
	}
}
[Token(Token = "0x2000273")]
public class AudioPreferences : SingleInstanceBehavior<AudioPreferences>
{
	[Token(Token = "0x2000274")]
	public enum SoundGroup
	{
		[Token(Token = "0x400110A")]
		Sound,
		[Token(Token = "0x400110B")]
		Voice,
		[Token(Token = "0x400110C")]
		Music
	}

	[Token(Token = "0x4001102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioMixer audioMixer;

	[Token(Token = "0x4001103")]
	private const string soundVolumeKey = "SoundVolume";

	[Token(Token = "0x4001104")]
	private const string voiceVolumeKey = "VoiceVolume";

	[Token(Token = "0x4001105")]
	private const string musicVolumeKey = "MusicVolume";

	[Token(Token = "0x4001106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float soundVolumeLevel;

	[Token(Token = "0x4001107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float voiceVolumeLevel;

	[Token(Token = "0x4001108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float musicVolumeLevel;

	[Token(Token = "0x600106C")]
	[Address(RVA = "0xAC3AB8", Offset = "0xAC3AB8", VA = "0xAC3AB8", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600106D")]
	[Address(RVA = "0xAC3B00", Offset = "0xAC3B00", VA = "0xAC3B00")]
	private void Start()
	{
	}

	[Token(Token = "0x600106E")]
	[Address(RVA = "0xAC3BE8", Offset = "0xAC3BE8", VA = "0xAC3BE8")]
	private void ReadPlayerPrefs(string groupKey, out float volume)
	{
	}

	[Token(Token = "0x600106F")]
	[Address(RVA = "0xAC3C7C", Offset = "0xAC3C7C", VA = "0xAC3C7C")]
	public float GetGroupVolume(SoundGroup soundGroup)
	{
		return default(float);
	}

	[Token(Token = "0x6001070")]
	[Address(RVA = "0xAC3CB0", Offset = "0xAC3CB0", VA = "0xAC3CB0")]
	public void IncrementGroupVolume(SoundGroup soundGroup, bool increase)
	{
	}

	[Token(Token = "0x6001071")]
	[Address(RVA = "0xAC3D6C", Offset = "0xAC3D6C", VA = "0xAC3D6C")]
	private void IncrementVolumeAndSetMixer(string groupKey, ref float volume, bool increase)
	{
	}

	[Token(Token = "0x6001072")]
	[Address(RVA = "0xAC3C28", Offset = "0xAC3C28", VA = "0xAC3C28")]
	private void SetAudioMixerFloat(string groupKey, float volume)
	{
	}

	[Token(Token = "0x6001073")]
	[Address(RVA = "0xAC3DDC", Offset = "0xAC3DDC", VA = "0xAC3DDC")]
	public AudioPreferences()
	{
	}
}
[Token(Token = "0x2000275")]
public class AvatarColliderManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400110D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject mouthColliderPrefab;

	[Token(Token = "0x400110E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject bodyColliderPrefab;

	[Token(Token = "0x1700020F")]
	public Transform AttachmentRoot
	{
		[Token(Token = "0x6001074")]
		[Address(RVA = "0xAC3E48", Offset = "0xAC3E48", VA = "0xAC3E48")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6001075")]
		[Address(RVA = "0xAC3E50", Offset = "0xAC3E50", VA = "0xAC3E50")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6001076")]
	[Address(RVA = "0xAC3E58", Offset = "0xAC3E58", VA = "0xAC3E58")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001077")]
	[Address(RVA = "0xAC4024", Offset = "0xAC4024", VA = "0xAC4024")]
	private void Start()
	{
	}

	[Token(Token = "0x6001078")]
	[Address(RVA = "0xAC40B0", Offset = "0xAC40B0", VA = "0xAC40B0")]
	public AvatarColliderManager()
	{
	}
}
[Token(Token = "0x2000276")]
public interface ICookoutInput
{
	[Token(Token = "0x6001079")]
	void Initialize(CookoutControllerSettings cookoutControllerSettings, CookoutInputData cookoutInputData);

	[Token(Token = "0x600107A")]
	void Tick();

	[Token(Token = "0x600107B")]
	bool ButtonIsDown(CookoutInput.Button button);

	[Token(Token = "0x600107C")]
	bool ButtonWasPressed(CookoutInput.Button button);

	[Token(Token = "0x600107D")]
	bool ButtonWasReleased(CookoutInput.Button button);

	[Token(Token = "0x600107E")]
	bool IndexFingerExtended(CookoutHandedness handedness);

	[Token(Token = "0x600107F")]
	bool ThumbExtended(CookoutHandedness handedness);

	[Token(Token = "0x6001080")]
	bool RecenterPressed();

	[Token(Token = "0x6001081")]
	bool WasMenuButtonPressed();

	[Token(Token = "0x6001082")]
	bool HeadsetIsMountedSteam();
}
[Token(Token = "0x2000277")]
public sealed class CookoutInput : Singleton<CookoutInput>, ICookoutInput
{
	[Token(Token = "0x2000278")]
	[Flags]
	public enum Button
	{
		[Token(Token = "0x4001119")]
		A = 2,
		[Token(Token = "0x400111A")]
		B = 4,
		[Token(Token = "0x400111B")]
		X = 8,
		[Token(Token = "0x400111C")]
		Y = 0x10,
		[Token(Token = "0x400111D")]
		LeftIndex = 0x20,
		[Token(Token = "0x400111E")]
		LeftGrip = 0x40,
		[Token(Token = "0x400111F")]
		RightIndex = 0x80,
		[Token(Token = "0x4001120")]
		RightGrip = 0x100,
		[Token(Token = "0x4001121")]
		LeftMenu = 0x200,
		[Token(Token = "0x4001122")]
		LeftIndexTouch = 0x400,
		[Token(Token = "0x4001123")]
		RightIndexTouch = 0x800,
		[Token(Token = "0x4001124")]
		RightMenu = 0x1000,
		[Token(Token = "0x4001125")]
		RightThumbstickClick = 0x2000
	}

	[Token(Token = "0x4001110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<Button, string> buttonNames;

	[Token(Token = "0x4001111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CookoutControllerSettings cookoutControllerSettings;

	[Token(Token = "0x4001112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CookoutInputData cookoutInputData;

	[Token(Token = "0x4001113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Button previousButtonState;

	[Token(Token = "0x4001114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Button currentButtonState;

	[Token(Token = "0x4001115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<UnityEngine.XR.InputDevice> leftInputDevices;

	[Token(Token = "0x4001116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<UnityEngine.XR.InputDevice> rightInputDevices;

	[Token(Token = "0x4001117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private InputFeatureUsage<bool>[] thumbTouchFeatures;

	[Token(Token = "0x6001083")]
	[Address(RVA = "0xAC40B8", Offset = "0xAC40B8", VA = "0xAC40B8")]
	public CookoutInputData GetCookoutInputData()
	{
		return null;
	}

	[Token(Token = "0x6001084")]
	[Address(RVA = "0xAC40C0", Offset = "0xAC40C0", VA = "0xAC40C0")]
	public string GetCurrentButtonStateString()
	{
		return null;
	}

	[Token(Token = "0x6001085")]
	[Address(RVA = "0xAC452C", Offset = "0xAC452C", VA = "0xAC452C", Slot = "4")]
	public void Initialize(CookoutControllerSettings cookoutControllerSettings, CookoutInputData cookoutInputData)
	{
	}

	[Token(Token = "0x6001086")]
	[Address(RVA = "0xAC4534", Offset = "0xAC4534", VA = "0xAC4534", Slot = "5")]
	public void Tick()
	{
	}

	[Token(Token = "0x6001087")]
	[Address(RVA = "0xAC451C", Offset = "0xAC451C", VA = "0xAC451C", Slot = "6")]
	public bool ButtonIsDown(Button button)
	{
		return default(bool);
	}

	[Token(Token = "0x6001088")]
	[Address(RVA = "0xAC4E20", Offset = "0xAC4E20", VA = "0xAC4E20", Slot = "7")]
	public bool ButtonWasPressed(Button button)
	{
		return default(bool);
	}

	[Token(Token = "0x6001089")]
	[Address(RVA = "0xAC4E34", Offset = "0xAC4E34", VA = "0xAC4E34", Slot = "8")]
	public bool ButtonWasReleased(Button button)
	{
		return default(bool);
	}

	[Token(Token = "0x600108A")]
	[Address(RVA = "0xAC4E48", Offset = "0xAC4E48", VA = "0xAC4E48", Slot = "9")]
	public bool IndexFingerExtended(CookoutHandedness handedness)
	{
		return default(bool);
	}

	[Token(Token = "0x600108B")]
	[Address(RVA = "0xAC5078", Offset = "0xAC5078", VA = "0xAC5078", Slot = "10")]
	public bool ThumbExtended(CookoutHandedness handedness)
	{
		return default(bool);
	}

	[Token(Token = "0x600108C")]
	[Address(RVA = "0xAC5268", Offset = "0xAC5268", VA = "0xAC5268", Slot = "11")]
	public bool RecenterPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x600108D")]
	[Address(RVA = "0xAC5270", Offset = "0xAC5270", VA = "0xAC5270", Slot = "12")]
	public bool WasMenuButtonPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x600108E")]
	[Address(RVA = "0xAC45EC", Offset = "0xAC45EC", VA = "0xAC45EC")]
	private void ReadCurrentButtonState()
	{
	}

	[Token(Token = "0x600108F")]
	[Address(RVA = "0xAC4BB4", Offset = "0xAC4BB4", VA = "0xAC4BB4")]
	private void HandUpdate(HandInput hand, CookoutHandedness handedness)
	{
	}

	[Token(Token = "0x6001090")]
	[Address(RVA = "0xAC5280", Offset = "0xAC5280", VA = "0xAC5280", Slot = "13")]
	public bool HeadsetIsMountedSteam()
	{
		return default(bool);
	}

	[Token(Token = "0x6001091")]
	[Address(RVA = "0xAC5288", Offset = "0xAC5288", VA = "0xAC5288")]
	public CookoutInput()
	{
	}
}
[Token(Token = "0x2000279")]
[DisallowMultipleComponent]
public class Grabbable : NetworkedBehaviour, IPunObservable
{
	[Token(Token = "0x200027A")]
	private enum GrabSound
	{
		[Token(Token = "0x4001153")]
		Generic,
		[Token(Token = "0x4001154")]
		Plate
	}

	[Token(Token = "0x200027B")]
	public enum GrabbableDropSound
	{
		[Token(Token = "0x4001156")]
		Generic,
		[Token(Token = "0x4001157")]
		Slice,
		[Token(Token = "0x4001158")]
		Plate,
		[Token(Token = "0x4001159")]
		Tools,
		[Token(Token = "0x400115A")]
		Potion,
		[Token(Token = "0x400115B")]
		Cleaver,
		[Token(Token = "0x400115C")]
		Condiment,
		[Token(Token = "0x400115D")]
		MoistSlice
	}

	[Token(Token = "0x200027C")]
	public delegate void OnGrabBeginHandler();

	[Token(Token = "0x200027D")]
	public delegate void OnRemoteGrabBeginHandler();

	[Token(Token = "0x400112A")]
	private const float regularDropSpeedThreshold = 0.4f;

	[Token(Token = "0x400112B")]
	private const float hardDropSpeedThreshold = 1.3f;

	[Token(Token = "0x400112E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool overrideTagCheck;

	[Token(Token = "0x400112F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	public bool isNetworked;

	[Token(Token = "0x4001130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool snap;

	[Token(Token = "0x4001131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 snapPosition;

	[Token(Token = "0x4001132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector3 snapRotation;

	[Token(Token = "0x4001133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector3 cookoutAvatarSnapPosition;

	[Token(Token = "0x4001134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Vector3 cookoutAvatarSnapRotation;

	[Token(Token = "0x4001135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool regularMirrorMethod;

	[Token(Token = "0x4001136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Vector3 alternateMirrorRotation;

	[Token(Token = "0x4001137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector3 alternateCookoutAvatarMirrorRotation;

	[Token(Token = "0x4001138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public CookoutCustomHandPose grabPose;

	[Token(Token = "0x4001139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	public CookoutCustomHandPose cookoutAvatarGrabPose;

	[Token(Token = "0x400113A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private float throwSoundSpeedThreshold;

	[Token(Token = "0x400113B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[SerializeField]
	private float angularVelocityConstant;

	[Token(Token = "0x400113C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private bool hasRigidBodyView;

	[Token(Token = "0x400113D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[SerializeField]
	private GrabSound grabSound;

	[Token(Token = "0x400113E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private GrabbableDropSound dropSound;

	[Token(Token = "0x400113F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[SerializeField]
	private bool canOnlyBeGrabbedByOwner;

	[Token(Token = "0x4001142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private CookoutAvatarHand grabberRemote;

	[Token(Token = "0x4001143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool forceKinematicOnRelease;

	[Token(Token = "0x4001144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 onGrabbedRemotePos;

	[Token(Token = "0x4001145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Quaternion onGrabbedRemoteRot;

	[Token(Token = "0x4001146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private IGrabbableTransformController[] transformSyncControllers;

	[Token(Token = "0x4001147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 onGrabbedLocalPos;

	[Token(Token = "0x4001148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Quaternion onGrabbedLocalRot;

	[Token(Token = "0x4001149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Rigidbody rigidBody;

	[Token(Token = "0x400114A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private PhotonTransformView transformView;

	[Token(Token = "0x400114B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private PhotonRigidbodyView rigidView;

	[Token(Token = "0x400114C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private CookoutCustomHandPose oldGrabPose;

	[Token(Token = "0x400114D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Vector3[] trackedMoves;

	[Token(Token = "0x400114E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Vector3 previousPosition;

	[Token(Token = "0x400114F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private int numMovesTracked;

	[Token(Token = "0x4001150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private int currentTrackedMove;

	[Token(Token = "0x4001151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private bool isDropped;

	[Token(Token = "0x17000210")]
	public bool CanBeGrabbedByThisPlayer
	{
		[Token(Token = "0x600109A")]
		[Address(RVA = "0xAC5C84", Offset = "0xAC5C84", VA = "0xAC5C84")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000211")]
	public bool IsGrabbed
	{
		[Token(Token = "0x600109B")]
		[Address(RVA = "0xABC288", Offset = "0xABC288", VA = "0xABC288")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000212")]
	public bool IsLocallyOwned
	{
		[Token(Token = "0x600109C")]
		[Address(RVA = "0xAC5C98", Offset = "0xAC5C98", VA = "0xAC5C98")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000213")]
	public bool IsLocallyGrabbed
	{
		[Token(Token = "0x600109D")]
		[Address(RVA = "0xAC5CCC", Offset = "0xAC5CCC", VA = "0xAC5CCC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000214")]
	public bool IsRemoteGrabbed
	{
		[Token(Token = "0x600109E")]
		[Address(RVA = "0xAC5D48", Offset = "0xAC5D48", VA = "0xAC5D48")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600109F")]
		[Address(RVA = "0xAC5D50", Offset = "0xAC5D50", VA = "0xAC5D50")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000215")]
	public bool IsBeingTransferedBetweenPlayers
	{
		[Token(Token = "0x60010A0")]
		[Address(RVA = "0xAC5D5C", Offset = "0xAC5D5C", VA = "0xAC5D5C")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60010A1")]
		[Address(RVA = "0xAC5D64", Offset = "0xAC5D64", VA = "0xAC5D64")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000216")]
	public GrabbableDropSound DropSound
	{
		[Token(Token = "0x60010A2")]
		[Address(RVA = "0xAC5D70", Offset = "0xAC5D70", VA = "0xAC5D70")]
		get
		{
			return default(GrabbableDropSound);
		}
	}

	[Token(Token = "0x17000217")]
	public bool PendingGrabRequest
	{
		[Token(Token = "0x60010A3")]
		[Address(RVA = "0xAC5D78", Offset = "0xAC5D78", VA = "0xAC5D78")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60010A4")]
		[Address(RVA = "0xAC5D80", Offset = "0xAC5D80", VA = "0xAC5D80")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000218")]
	public CookoutAvatarHand grabberLocal
	{
		[Token(Token = "0x60010A5")]
		[Address(RVA = "0xAC5D8C", Offset = "0xAC5D8C", VA = "0xAC5D8C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60010A6")]
		[Address(RVA = "0xAC5D94", Offset = "0xAC5D94", VA = "0xAC5D94")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x14000021")]
	public event OnGrabBeginHandler OnGrabBegin
	{
		[Token(Token = "0x6001092")]
		[Address(RVA = "0xAC57A4", Offset = "0xAC57A4", VA = "0xAC57A4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001093")]
		[Address(RVA = "0xAC5840", Offset = "0xAC5840", VA = "0xAC5840")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000022")]
	public event OnGrabBeginHandler OnGrabEnd
	{
		[Token(Token = "0x6001094")]
		[Address(RVA = "0xAC58DC", Offset = "0xAC58DC", VA = "0xAC58DC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001095")]
		[Address(RVA = "0xAC5978", Offset = "0xAC5978", VA = "0xAC5978")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000023")]
	public event OnRemoteGrabBeginHandler OnRemoteGrab
	{
		[Token(Token = "0x6001096")]
		[Address(RVA = "0xAC5A14", Offset = "0xAC5A14", VA = "0xAC5A14")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001097")]
		[Address(RVA = "0xAC5AB0", Offset = "0xAC5AB0", VA = "0xAC5AB0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000024")]
	public event OnRemoteGrabBeginHandler OnRemoteGrabEnd
	{
		[Token(Token = "0x6001098")]
		[Address(RVA = "0xAC5B4C", Offset = "0xAC5B4C", VA = "0xAC5B4C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001099")]
		[Address(RVA = "0xAC5BE8", Offset = "0xAC5BE8", VA = "0xAC5BE8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60010A7")]
	[Address(RVA = "0xAC5D9C", Offset = "0xAC5D9C", VA = "0xAC5D9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010A8")]
	[Address(RVA = "0xAC5EC4", Offset = "0xAC5EC4", VA = "0xAC5EC4")]
	private void Start()
	{
	}

	[Token(Token = "0x60010A9")]
	[Address(RVA = "0xAC6070", Offset = "0xAC6070", VA = "0xAC6070")]
	public void InitIngredient()
	{
	}

	[Token(Token = "0x60010AA")]
	[Address(RVA = "0xAC60D0", Offset = "0xAC60D0", VA = "0xAC60D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010AB")]
	[Address(RVA = "0xAC6414", Offset = "0xAC6414", VA = "0xAC6414")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60010AC")]
	[Address(RVA = "0xAC6784", Offset = "0xAC6784", VA = "0xAC6784")]
	private void UpdateGrabbedPosition(CookoutAvatarHand hand, Vector3 localPosition, Quaternion localRotation)
	{
	}

	[Token(Token = "0x60010AD")]
	[Address(RVA = "0xAC6AC4", Offset = "0xAC6AC4", VA = "0xAC6AC4")]
	public void OnGrabbed(Transform handAnchor, CookoutAvatarHand hand, bool wasMine)
	{
	}

	[Token(Token = "0x60010AE")]
	[Address(RVA = "0xAC6C98", Offset = "0xAC6C98", VA = "0xAC6C98")]
	private void SendGrabEvent()
	{
	}

	[Token(Token = "0x60010AF")]
	[Address(RVA = "0xAC6D1C", Offset = "0xAC6D1C", VA = "0xAC6D1C")]
	public void OnOwnerChanged(PhotonPlayer newOwner, PhotonPlayer oldOwner)
	{
	}

	[Token(Token = "0x60010B0")]
	[Address(RVA = "0xAC6DFC", Offset = "0xAC6DFC", VA = "0xAC6DFC")]
	public void OnRelease(Vector3 force, Vector3 angularForce)
	{
	}

	[Token(Token = "0x60010B1")]
	[Address(RVA = "0xAC6FFC", Offset = "0xAC6FFC", VA = "0xAC6FFC")]
	public void SetForceKinematicOnRelease(bool value)
	{
	}

	[Token(Token = "0x60010B2")]
	[Address(RVA = "0xAC7008", Offset = "0xAC7008", VA = "0xAC7008", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60010B3")]
	[Address(RVA = "0xAC741C", Offset = "0xAC741C", VA = "0xAC741C")]
	private void RemoteGrab(CookoutAvatarHand grabber)
	{
	}

	[Token(Token = "0x60010B4")]
	[Address(RVA = "0xAC6320", Offset = "0xAC6320", VA = "0xAC6320")]
	private void RemoteRelease()
	{
	}

	[Token(Token = "0x60010B5")]
	[Address(RVA = "0xAC74E4", Offset = "0xAC74E4", VA = "0xAC74E4")]
	public bool ShouldDisableNetworkSyncing()
	{
		return default(bool);
	}

	[Token(Token = "0x60010B6")]
	[Address(RVA = "0xAC6CCC", Offset = "0xAC6CCC", VA = "0xAC6CCC")]
	private void GrabbableSound()
	{
	}

	[Token(Token = "0x60010B7")]
	[Address(RVA = "0xAC7510", Offset = "0xAC7510", VA = "0xAC7510")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60010B8")]
	[Address(RVA = "0xAC76F8", Offset = "0xAC76F8", VA = "0xAC76F8")]
	public void OnPlayerHandDestroyed(CookoutAvatarHand avatarHand)
	{
	}

	[Token(Token = "0x60010B9")]
	[Address(RVA = "0xAC7644", Offset = "0xAC7644", VA = "0xAC7644")]
	public Vector3 GetMovementForce()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010BA")]
	[Address(RVA = "0xAC7770", Offset = "0xAC7770", VA = "0xAC7770")]
	[PunRPC]
	private void ForceTransferReleaseRPC(NetMsgAvatarHand msg)
	{
	}

	[Token(Token = "0x60010BB")]
	[Address(RVA = "0xAC79F0", Offset = "0xAC79F0", VA = "0xAC79F0")]
	[PunRPC]
	private void ForceTransferGrabRPC(NetMsgAvatarHand msg)
	{
	}

	[Token(Token = "0x60010BC")]
	[Address(RVA = "0xAC792C", Offset = "0xAC792C", VA = "0xAC792C")]
	[PunRPC]
	private void GrabbableTransferFeedbackRPC(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x60010BD")]
	[Address(RVA = "0xAC7B38", Offset = "0xAC7B38", VA = "0xAC7B38")]
	public Grabbable()
	{
	}
}
[Serializable]
[Token(Token = "0x200027E")]
[CreateAssetMenu(fileName = "NewHapticClip", menuName = "Haptics/Haptic Clip")]
public class HapticClip : ScriptableObject
{
	[Token(Token = "0x400115E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vibration vibration;

	[Token(Token = "0x400115F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Range(0f, 10f)]
	public float length;

	[Token(Token = "0x4001160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(0f, 1f)]
	public float frequency;

	[Token(Token = "0x4001161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve amplitudeCurve;

	[Token(Token = "0x4001162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool loops;

	[Token(Token = "0x60010C6")]
	[Address(RVA = "0xAC7D5C", Offset = "0xAC7D5C", VA = "0xAC7D5C")]
	public HapticClip()
	{
	}
}
[Token(Token = "0x200027F")]
[CreateAssetMenu(fileName = "NewHapticClipList", menuName = "Haptics/Haptic Clip List")]
public class HapticClipList : ScriptableObject
{
	[Token(Token = "0x4001163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<HapticClip> hapticClipList;

	[Token(Token = "0x60010C7")]
	[Address(RVA = "0xAC7D64", Offset = "0xAC7D64", VA = "0xAC7D64")]
	public HapticClipList()
	{
	}
}
[Token(Token = "0x2000280")]
public enum Vibration
{
	[Token(Token = "0x4001165")]
	MenuButton,
	[Token(Token = "0x4001166")]
	BurntHand,
	[Token(Token = "0x4001167")]
	PopBubble,
	[Token(Token = "0x4001168")]
	Grab,
	[Token(Token = "0x4001169")]
	Release,
	[Token(Token = "0x400116A")]
	PanHitHeavy,
	[Token(Token = "0x400116B")]
	PanHitLight,
	[Token(Token = "0x400116C")]
	PanHitNudge,
	[Token(Token = "0x400116D")]
	SpiceShaker,
	[Token(Token = "0x400116E")]
	CondimentSqueeze,
	[Token(Token = "0x400116F")]
	CleaverChop,
	[Token(Token = "0x4001170")]
	CleaverSlice,
	[Token(Token = "0x4001171")]
	WashingPlate,
	[Token(Token = "0x4001172")]
	UncorkBottle,
	[Token(Token = "0x4001173")]
	VoteReminder,
	[Token(Token = "0x4001174")]
	BroFist
}
[Token(Token = "0x2000281")]
public interface IHapticMessages
{
	[Token(Token = "0x60010C8")]
	void Init();

	[Token(Token = "0x60010C9")]
	void Tick();

	[Token(Token = "0x60010CA")]
	void PlayHaptic(CookoutAvatarHand hand, Vibration vibration);

	[Token(Token = "0x60010CB")]
	void StopLoopingHaptics(CookoutHandedness handedness, Vibration vibration);

	[Token(Token = "0x60010CC")]
	void StopAllHaptics();
}
[Token(Token = "0x2000282")]
public sealed class HapticMessages : SingleInstanceBehavior<HapticMessages>, IHapticMessages
{
	[Token(Token = "0x4001175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HapticClipList hapticClipList;

	[Token(Token = "0x4001176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<Vibration, HapticClip> clipDictionary;

	[Token(Token = "0x4001177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private HapticClip playingClipLeft;

	[Token(Token = "0x4001178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private HapticClip playingClipRight;

	[Token(Token = "0x4001179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float clipLeftLifeTime;

	[Token(Token = "0x400117A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float clipRightLifeTime;

	[Token(Token = "0x400117B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float hapticStrength;

	[Token(Token = "0x400117C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<UnityEngine.XR.InputDevice> leftInputDevices;

	[Token(Token = "0x400117D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<UnityEngine.XR.InputDevice> rightInputDevices;

	[Token(Token = "0x60010CD")]
	[Address(RVA = "0xAC7D6C", Offset = "0xAC7D6C", VA = "0xAC7D6C", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60010CE")]
	[Address(RVA = "0xAC7E8C", Offset = "0xAC7E8C", VA = "0xAC7E8C")]
	private void Update()
	{
	}

	[Token(Token = "0x60010CF")]
	[Address(RVA = "0xAC7DBC", Offset = "0xAC7DBC", VA = "0xAC7DBC", Slot = "6")]
	public void Init()
	{
	}

	[Token(Token = "0x60010D0")]
	[Address(RVA = "0xAC7E90", Offset = "0xAC7E90", VA = "0xAC7E90", Slot = "7")]
	public void Tick()
	{
	}

	[Token(Token = "0x60010D1")]
	[Address(RVA = "0xAC81F0", Offset = "0xAC81F0", VA = "0xAC81F0", Slot = "8")]
	public void PlayHaptic(CookoutAvatarHand hand, Vibration vibration)
	{
	}

	[Token(Token = "0x60010D2")]
	[Address(RVA = "0xAC82AC", Offset = "0xAC82AC", VA = "0xAC82AC", Slot = "9")]
	public void StopLoopingHaptics(CookoutHandedness handedness, Vibration vibration)
	{
	}

	[Token(Token = "0x60010D3")]
	[Address(RVA = "0xAC847C", Offset = "0xAC847C", VA = "0xAC847C", Slot = "10")]
	public void StopAllHaptics()
	{
	}

	[Token(Token = "0x60010D4")]
	[Address(RVA = "0xAC7FB4", Offset = "0xAC7FB4", VA = "0xAC7FB4")]
	private void UpdateControllerHaptics(ref HapticClip clip, ref float clipLifeTime, List<UnityEngine.XR.InputDevice> inputDevices)
	{
	}

	[Token(Token = "0x60010D5")]
	[Address(RVA = "0xAC868C", Offset = "0xAC868C", VA = "0xAC868C")]
	public HapticMessages()
	{
	}
}
[Token(Token = "0x2000283")]
public class HeightAdjusterGrabbable : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400117E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action OnRelease;

	[Token(Token = "0x400117F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Grabbable grabbable;

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0xAC87A8", Offset = "0xAC87A8", VA = "0xAC87A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010D7")]
	[Address(RVA = "0xAC8858", Offset = "0xAC8858", VA = "0xAC8858")]
	public void OnGrabEnd()
	{
	}

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0xAC8874", Offset = "0xAC8874", VA = "0xAC8874")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0xAC8940", Offset = "0xAC8940", VA = "0xAC8940")]
	public HeightAdjusterGrabbable()
	{
	}
}
[Token(Token = "0x2000284")]
public class HeightAdjusterHandle : UnityEngine.MonoBehaviour, ILocallyGrabbable
{
	[Token(Token = "0x4001180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HeightAdjusterGrabbable adjusterGrabbable;

	[Token(Token = "0x4001181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private HeightAdjusterGrabbable adjusterSecondaryGrabbable;

	[Token(Token = "0x4001182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject tooltip;

	[Token(Token = "0x4001183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform[] tooltipAnchors;

	[Token(Token = "0x4001184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float handleHeight;

	[Token(Token = "0x4001185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Grabbable grabbable;

	[Token(Token = "0x4001186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Grabbable secondaryGrabbable;

	[Token(Token = "0x4001187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private PlayerHeightAdjuster playerHeightAdjuster;

	[Token(Token = "0x60010DA")]
	[Address(RVA = "0xAC8948", Offset = "0xAC8948", VA = "0xAC8948")]
	private void Start()
	{
	}

	[Token(Token = "0x60010DB")]
	[Address(RVA = "0xAC8ABC", Offset = "0xAC8ABC", VA = "0xAC8ABC", Slot = "4")]
	public void OnLocalGrab(CookoutAvatarHand grabbedBy, Transform handAnchor)
	{
	}

	[Token(Token = "0x60010DC")]
	[Address(RVA = "0xAC8FC4", Offset = "0xAC8FC4", VA = "0xAC8FC4")]
	private void OnGrabReleased()
	{
	}

	[Token(Token = "0x60010DD")]
	[Address(RVA = "0xAC907C", Offset = "0xAC907C", VA = "0xAC907C")]
	private void Update()
	{
	}

	[Token(Token = "0x60010DE")]
	[Address(RVA = "0xAC8C74", Offset = "0xAC8C74", VA = "0xAC8C74")]
	private void ToggleTooltip()
	{
	}

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0xAC91A0", Offset = "0xAC91A0", VA = "0xAC91A0")]
	public HeightAdjusterHandle()
	{
	}
}
[Token(Token = "0x2000285")]
[DisallowMultipleComponent]
public class HotGrabbable : NetworkedBehaviour
{
	[Token(Token = "0x4001188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool tooHot;

	[Token(Token = "0x4001189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Grabbable grabbable;

	[Token(Token = "0x17000219")]
	public bool TooHot
	{
		[Token(Token = "0x60010E0")]
		[Address(RVA = "0xAC91A8", Offset = "0xAC91A8", VA = "0xAC91A8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60010E1")]
		[Address(RVA = "0xAC91B0", Offset = "0xAC91B0", VA = "0xAC91B0")]
		set
		{
		}
	}

	[Token(Token = "0x60010E2")]
	[Address(RVA = "0xAC9318", Offset = "0xAC9318", VA = "0xAC9318")]
	private void Start()
	{
	}

	[Token(Token = "0x60010E3")]
	[Address(RVA = "0xAC9378", Offset = "0xAC9378", VA = "0xAC9378")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010E4")]
	[Address(RVA = "0xAC9380", Offset = "0xAC9380", VA = "0xAC9380")]
	public void GrabBurning()
	{
	}

	[Token(Token = "0x60010E5")]
	[Address(RVA = "0xAC9448", Offset = "0xAC9448", VA = "0xAC9448")]
	[PunRPC]
	private void GrabBurningRPC()
	{
	}

	[Token(Token = "0x60010E6")]
	[Address(RVA = "0xAC9540", Offset = "0xAC9540", VA = "0xAC9540")]
	public HotGrabbable()
	{
	}
}
[Token(Token = "0x2000286")]
public interface IGrabbableTransformController
{
	[Token(Token = "0x60010E7")]
	bool ShouldDisableNetworkSyncing(bool isGrabbed);
}
[Token(Token = "0x2000287")]
public interface ILocallyGrabbable
{
	[Token(Token = "0x60010E8")]
	void OnLocalGrab(CookoutAvatarHand grabbedBy, Transform handAnchor);
}
[Token(Token = "0x2000288")]
public class PlayerHeightAdjuster : SingleInstancePhotonCallbackListener<PlayerHeightAdjuster>
{
	[Token(Token = "0x2000289")]
	[CompilerGenerated]
	private sealed class <Start>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerHeightAdjuster <>4__this;

		[Token(Token = "0x1700021C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010F7")]
			[Address(RVA = "0xAC9EFC", Offset = "0xAC9EFC", VA = "0xAC9EFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010F9")]
			[Address(RVA = "0xAC9F44", Offset = "0xAC9F44", VA = "0xAC9F44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0xAC97A4", Offset = "0xAC97A4", VA = "0xAC97A4")]
		[DebuggerHidden]
		public <Start>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0xAC9CE4", Offset = "0xAC9CE4", VA = "0xAC9CE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0xAC9CE8", Offset = "0xAC9CE8", VA = "0xAC9CE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0xAC9F04", Offset = "0xAC9F04", VA = "0xAC9F04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400118A")]
	private const string playerHeightOffsetKey = "playerHeightOffset";

	[Token(Token = "0x400118B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float maxHeightDeltaAllowed;

	[Token(Token = "0x400118C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float baseHeight;

	[Token(Token = "0x1700021A")]
	private bool PlayerDataReady
	{
		[Token(Token = "0x60010E9")]
		[Address(RVA = "0xAC9548", Offset = "0xAC9548", VA = "0xAC9548")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700021B")]
	private string PlayerHeightPrefKey
	{
		[Token(Token = "0x60010EA")]
		[Address(RVA = "0xAC9614", Offset = "0xAC9614", VA = "0xAC9614")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60010EB")]
	[Address(RVA = "0xAC973C", Offset = "0xAC973C", VA = "0xAC973C")]
	[IteratorStateMachine(typeof(<Start>d__7))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60010EC")]
	[Address(RVA = "0xAC97CC", Offset = "0xAC97CC", VA = "0xAC97CC")]
	public void OnLocalPlayerAvatarAssignedPosition()
	{
	}

	[Token(Token = "0x60010ED")]
	[Address(RVA = "0xAC90E4", Offset = "0xAC90E4", VA = "0xAC90E4")]
	public void AdjustLocalPlayerHeightOffset(float heightDelta)
	{
	}

	[Token(Token = "0x60010EE")]
	[Address(RVA = "0xAC9008", Offset = "0xAC9008", VA = "0xAC9008")]
	public void SyncLocalPlayerHeight()
	{
	}

	[Token(Token = "0x60010EF")]
	[Address(RVA = "0xAC9800", Offset = "0xAC9800", VA = "0xAC9800")]
	private void SyncPlayerHeightOffset(float heightOffset, bool writeToPrefs = true)
	{
	}

	[Token(Token = "0x60010F0")]
	[Address(RVA = "0xAC99B8", Offset = "0xAC99B8", VA = "0xAC99B8")]
	public void UpdateRemoteAvatarHeightOffset(CookoutAvatar avatar)
	{
	}

	[Token(Token = "0x60010F1")]
	[Address(RVA = "0xAC9AA8", Offset = "0xAC9AA8", VA = "0xAC9AA8", Slot = "53")]
	public override void OnPhotonPlayerPropertiesChanged(object[] playerAndUpdatedProps)
	{
	}

	[Token(Token = "0x60010F2")]
	[Address(RVA = "0xAC994C", Offset = "0xAC994C", VA = "0xAC994C")]
	private void SetNewYPosition(CookoutAvatar avatar, float y)
	{
	}

	[Token(Token = "0x60010F3")]
	[Address(RVA = "0xAC9C6C", Offset = "0xAC9C6C", VA = "0xAC9C6C")]
	public PlayerHeightAdjuster()
	{
	}
}
[Token(Token = "0x200028A")]
public class PlayerNameDisplayer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject nameTagPrefab;

	[Token(Token = "0x4001191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TextMeshPro nameTagText;

	[Token(Token = "0x4001192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PhotonPlayer owner;

	[Token(Token = "0x4001193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject hostIcon;

	[Token(Token = "0x4001194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject nameTag;

	[Token(Token = "0x4001195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CookoutAvatar avatar;

	[Token(Token = "0x4001196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool waitingForName;

	[Token(Token = "0x60010FA")]
	[Address(RVA = "0xAC9F4C", Offset = "0xAC9F4C", VA = "0xAC9F4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010FB")]
	[Address(RVA = "0xACA0FC", Offset = "0xACA0FC", VA = "0xACA0FC")]
	private void Update()
	{
	}

	[Token(Token = "0x60010FC")]
	[Address(RVA = "0xACA33C", Offset = "0xACA33C", VA = "0xACA33C")]
	public void OnAvatarEnabled()
	{
	}

	[Token(Token = "0x60010FD")]
	[Address(RVA = "0xACA4B0", Offset = "0xACA4B0", VA = "0xACA4B0")]
	private void OnMasterClientChanged(PhotonPlayer newMasterClient)
	{
	}

	[Token(Token = "0x60010FE")]
	[Address(RVA = "0xACA4DC", Offset = "0xACA4DC", VA = "0xACA4DC")]
	public void OnAvatarDisabled()
	{
	}

	[Token(Token = "0x60010FF")]
	[Address(RVA = "0xACA700", Offset = "0xACA700", VA = "0xACA700")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001100")]
	[Address(RVA = "0xACA920", Offset = "0xACA920", VA = "0xACA920")]
	public PlayerNameDisplayer()
	{
	}
}
[Token(Token = "0x200028B")]
public class PlayerVoIP : NetworkedBehaviour
{
	[Token(Token = "0x4001197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioMixer mixer;

	[Token(Token = "0x4001198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string voiceGroup;

	[Token(Token = "0x4001199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource voiceSource;

	[Token(Token = "0x400119A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PhotonVoiceRecorder voiceRecorder;

	[Token(Token = "0x400119B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private VoIPManager voIPManager;

	[Token(Token = "0x400119C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int ownerID;

	[Token(Token = "0x6001101")]
	[Address(RVA = "0xACA928", Offset = "0xACA928", VA = "0xACA928")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001102")]
	[Address(RVA = "0xACA9A4", Offset = "0xACA9A4", VA = "0xACA9A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001103")]
	[Address(RVA = "0xACAB34", Offset = "0xACAB34", VA = "0xACAB34")]
	private void Update()
	{
	}

	[Token(Token = "0x6001104")]
	[Address(RVA = "0xACAC44", Offset = "0xACAC44", VA = "0xACAC44")]
	public void ToggleMicActive()
	{
	}

	[Token(Token = "0x6001105")]
	[Address(RVA = "0xACAC78", Offset = "0xACAC78", VA = "0xACAC78")]
	public bool IsMicEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6001106")]
	[Address(RVA = "0xACAC94", Offset = "0xACAC94", VA = "0xACAC94")]
	public void ToggleMute()
	{
	}

	[Token(Token = "0x6001107")]
	[Address(RVA = "0xACACC8", Offset = "0xACACC8", VA = "0xACACC8")]
	public bool IsMuted()
	{
		return default(bool);
	}

	[Token(Token = "0x6001108")]
	[Address(RVA = "0xACACF0", Offset = "0xACACF0", VA = "0xACACF0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001109")]
	[Address(RVA = "0xACAE04", Offset = "0xACAE04", VA = "0xACAE04")]
	public PlayerVoIP()
	{
	}
}
[Token(Token = "0x200028C")]
public class SafetyBubble : NetworkedBehaviour, IPunObservable
{
	[Token(Token = "0x400119D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject safetyBubbleCollider;

	[Token(Token = "0x400119E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject handIntruderCollider;

	[Token(Token = "0x400119F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject bodyIntruderCollider;

	[Token(Token = "0x40011A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool safetyBubbleActive;

	[Token(Token = "0x40011A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CookoutAvatar cookoutAvatar;

	[Token(Token = "0x40011A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<int, List<Collider>> intrudingPlayerColliders;

	[Token(Token = "0x40011A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject safetyBubbleGO;

	[Token(Token = "0x40011A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject leftHandCollider;

	[Token(Token = "0x40011A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject rightHandCollider;

	[Token(Token = "0x40011A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject bodyCollider;

	[Token(Token = "0x600110A")]
	[Address(RVA = "0xACAE54", Offset = "0xACAE54", VA = "0xACAE54")]
	private void Awake()
	{
	}

	[Token(Token = "0x600110B")]
	[Address(RVA = "0xACB1E0", Offset = "0xACB1E0", VA = "0xACB1E0")]
	private void OnTriggerEnterSafetyBubble(Collider other)
	{
	}

	[Token(Token = "0x600110C")]
	[Address(RVA = "0xACB478", Offset = "0xACB478", VA = "0xACB478")]
	private void OnTriggerExitSafetyBubble(Collider other)
	{
	}

	[Token(Token = "0x600110D")]
	[Address(RVA = "0xACB644", Offset = "0xACB644", VA = "0xACB644")]
	public void OnPlayerLeft(CookoutAvatar leavingPlayer)
	{
	}

	[Token(Token = "0x600110E")]
	[Address(RVA = "0xACB0EC", Offset = "0xACB0EC", VA = "0xACB0EC")]
	public void SetCollidersEnabled(bool isEnabled)
	{
	}

	[Token(Token = "0x600110F")]
	[Address(RVA = "0xACB708", Offset = "0xACB708", VA = "0xACB708", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6001110")]
	[Address(RVA = "0xACB7FC", Offset = "0xACB7FC", VA = "0xACB7FC")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6001111")]
	[Address(RVA = "0xACB964", Offset = "0xACB964", VA = "0xACB964")]
	public SafetyBubble()
	{
	}
}
[Serializable]
[Token(Token = "0x200028D")]
public sealed class CookoutKeybindings
{
	[Token(Token = "0x6001112")]
	[Address(RVA = "0xACB9E0", Offset = "0xACB9E0", VA = "0xACB9E0")]
	public CookoutKeybindings()
	{
	}
}
[Token(Token = "0x200028E")]
[CreateAssetMenu(menuName = "PlatformRelated/CookoutControllerSettings", fileName = "CookoutControllerSettings")]
public sealed class CookoutControllerSettings : ScriptableObject
{
	[Token(Token = "0x40011A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CookoutKeybindings cookoutKeybindings;

	[Token(Token = "0x6001113")]
	[Address(RVA = "0xACB9E8", Offset = "0xACB9E8", VA = "0xACB9E8")]
	public CookoutControllerSettings()
	{
	}
}
[Token(Token = "0x200028F")]
public class HandInput
{
	[Token(Token = "0x40011A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool grabPress;

	[Token(Token = "0x40011A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool grabHeld;

	[Token(Token = "0x40011AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public bool grabRelease;

	[Token(Token = "0x40011AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	public bool squeezePress;

	[Token(Token = "0x40011AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool SqueezeHeld;

	[Token(Token = "0x40011AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool squeezeRelease;

	[Token(Token = "0x40011AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	public bool thumbTouch;

	[Token(Token = "0x40011AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
	public bool indexFingerTouch;

	[Token(Token = "0x40011B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float indexFingerPull;

	[Token(Token = "0x6001114")]
	[Address(RVA = "0xACB9F0", Offset = "0xACB9F0", VA = "0xACB9F0")]
	public HandInput()
	{
	}
}
[Token(Token = "0x2000290")]
public class CookoutInputData
{
	[Token(Token = "0x40011B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly HandInput leftHand;

	[Token(Token = "0x40011B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly HandInput rightHand;

	[Token(Token = "0x40011B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool menuPress;

	[Token(Token = "0x40011B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool recenterPressed;

	[Token(Token = "0x6001115")]
	[Address(RVA = "0xAC5720", Offset = "0xAC5720", VA = "0xAC5720")]
	public CookoutInputData()
	{
	}
}
[Token(Token = "0x2000291")]
public class SteamControlTests : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6001116")]
	[Address(RVA = "0xACB9F8", Offset = "0xACB9F8", VA = "0xACB9F8")]
	public SteamControlTests()
	{
	}
}
[Token(Token = "0x2000292")]
public class VoIPManager : SingleInstanceBehavior<VoIPManager>
{
	[Token(Token = "0x40011B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<int, PlayerVoIP> players;

	[Token(Token = "0x6001117")]
	[Address(RVA = "0xACAACC", Offset = "0xACAACC", VA = "0xACAACC")]
	public void RegisterPlayer(int playerID, PlayerVoIP playerVoIP)
	{
	}

	[Token(Token = "0x6001118")]
	[Address(RVA = "0xACAD74", Offset = "0xACAD74", VA = "0xACAD74")]
	public void UnregisterPlayer(int playerID)
	{
	}

	[Token(Token = "0x6001119")]
	[Address(RVA = "0xACBA00", Offset = "0xACBA00", VA = "0xACBA00")]
	public void TogglePlayerMute(int playerID)
	{
	}

	[Token(Token = "0x600111A")]
	[Address(RVA = "0xACBA98", Offset = "0xACBA98", VA = "0xACBA98")]
	public bool IsPlayerMuted(int playerID)
	{
		return default(bool);
	}

	[Token(Token = "0x600111B")]
	[Address(RVA = "0xACBB34", Offset = "0xACBB34", VA = "0xACBB34")]
	public VoIPManager()
	{
	}
}
[Token(Token = "0x2000293")]
public class VotingHands : SingleInstanceNetworkedBehavior<VotingHands>
{
	[Token(Token = "0x2000294")]
	[CompilerGenerated]
	private sealed class <Start>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VotingHands <>4__this;

		[Token(Token = "0x1700021F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001128")]
			[Address(RVA = "0xACCB3C", Offset = "0xACCB3C", VA = "0xACCB3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000220")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600112A")]
			[Address(RVA = "0xACCB84", Offset = "0xACCB84", VA = "0xACCB84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0xACBC6C", Offset = "0xACBC6C", VA = "0xACBC6C")]
		[DebuggerHidden]
		public <Start>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0xACC858", Offset = "0xACC858", VA = "0xACC858", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0xACC85C", Offset = "0xACC85C", VA = "0xACC85C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0xACCB44", Offset = "0xACCB44", VA = "0xACCB44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40011B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float thumbsUpThreshold;

	[Token(Token = "0x40011B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float thumbDownThreshold;

	[Token(Token = "0x40011B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float holdTimeThreshold;

	[Token(Token = "0x40011BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float voteCooldownTime;

	[Token(Token = "0x40011BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float voteReminderCooldown;

	[Token(Token = "0x40011BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MapVoteCounter mapVoteCounter;

	[Token(Token = "0x40011BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CookingNetworkManager networkManager;

	[Token(Token = "0x40011BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool hasInitiated;

	[Token(Token = "0x40011BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float voteCooldown;

	[Token(Token = "0x40011C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float voteReminderTimer;

	[Token(Token = "0x40011C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RewardBubbleSpawner rewardBubbleSpawner;

	[Token(Token = "0x1700021E")]
	public bool HasVoted
	{
		[Token(Token = "0x600111C")]
		[Address(RVA = "0xACBBF0", Offset = "0xACBBF0", VA = "0xACBBF0")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600111D")]
		[Address(RVA = "0xACBBF8", Offset = "0xACBBF8", VA = "0xACBBF8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x600111E")]
	[Address(RVA = "0xACBC04", Offset = "0xACBC04", VA = "0xACBC04")]
	[IteratorStateMachine(typeof(<Start>d__15))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600111F")]
	[Address(RVA = "0xACBC94", Offset = "0xACBC94", VA = "0xACBC94")]
	private void Update()
	{
	}

	[Token(Token = "0x6001120")]
	[Address(RVA = "0xACC420", Offset = "0xACC420", VA = "0xACC420")]
	public void EndVote()
	{
	}

	[Token(Token = "0x6001121")]
	[Address(RVA = "0xACC4E0", Offset = "0xACC4E0", VA = "0xACC4E0")]
	public void StartVote()
	{
	}

	[Token(Token = "0x6001122")]
	[Address(RVA = "0xACC5D0", Offset = "0xACC5D0", VA = "0xACC5D0")]
	[PunRPC]
	private void PlayVoteFeedbackRPC(NetMsgAvatarHand msg, bool votedYes, int playerPosIndex)
	{
	}

	[Token(Token = "0x6001123")]
	[Address(RVA = "0xACC7D8", Offset = "0xACC7D8", VA = "0xACC7D8")]
	public VotingHands()
	{
	}
}
[Token(Token = "0x2000295")]
public class Preloader : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000296")]
	[CompilerGenerated]
	private sealed class <LoadLauncherScene>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Preloader <>4__this;

		[Token(Token = "0x17000221")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001131")]
			[Address(RVA = "0xACCDEC", Offset = "0xACCDEC", VA = "0xACCDEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000222")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001133")]
			[Address(RVA = "0xACCE34", Offset = "0xACCE34", VA = "0xACCE34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0xACCC2C", Offset = "0xACCC2C", VA = "0xACCC2C")]
		[DebuggerHidden]
		public <LoadLauncherScene>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0xACCC5C", Offset = "0xACCC5C", VA = "0xACCC5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0xACCC60", Offset = "0xACCC60", VA = "0xACCC60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0xACCDF4", Offset = "0xACCDF4", VA = "0xACCDF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40011C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VideoPlayer video;

	[Token(Token = "0x40011C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AsyncOperation asyncOperation;

	[Token(Token = "0x600112B")]
	[Address(RVA = "0xACCB8C", Offset = "0xACCB8C", VA = "0xACCB8C")]
	private void Start()
	{
	}

	[Token(Token = "0x600112C")]
	[Address(RVA = "0xACCBC4", Offset = "0xACCBC4", VA = "0xACCBC4")]
	[IteratorStateMachine(typeof(<LoadLauncherScene>d__3))]
	private IEnumerator LoadLauncherScene()
	{
		return null;
	}

	[Token(Token = "0x600112D")]
	[Address(RVA = "0xACCC54", Offset = "0xACCC54", VA = "0xACCC54")]
	public Preloader()
	{
	}
}
[Token(Token = "0x2000297")]
public class ContinueMarker : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000298")]
	[CompilerGenerated]
	private sealed class <MoveToCupRoutine>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ContinueMarker <>4__this;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool delayed;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform target;

		[Token(Token = "0x17000223")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600113E")]
			[Address(RVA = "0xACD8B0", Offset = "0xACD8B0", VA = "0xACD8B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000224")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001140")]
			[Address(RVA = "0xACD8F8", Offset = "0xACD8F8", VA = "0xACD8F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0xACD588", Offset = "0xACD588", VA = "0xACD588")]
		[DebuggerHidden]
		public <MoveToCupRoutine>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0xACD6F8", Offset = "0xACD6F8", VA = "0xACD6F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0xACD6FC", Offset = "0xACD6FC", VA = "0xACD6FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0xACD8B8", Offset = "0xACD8B8", VA = "0xACD8B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40011CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PokeButton button;

	[Token(Token = "0x40011CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float transitionTime;

	[Token(Token = "0x40011CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float appearTime;

	[Token(Token = "0x40011CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float mapAnimationDelay;

	[Token(Token = "0x40011CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMeshPro townName;

	[Token(Token = "0x40011CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TextMeshPro townNumber;

	[Token(Token = "0x40011D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator animator;

	[Token(Token = "0x40011D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private WaitForSeconds transitionWaitTime;

	[Token(Token = "0x40011D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WaitForSeconds appearWaitTime;

	[Token(Token = "0x40011D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private WaitForSeconds mapAnimationDelayTime;

	[Token(Token = "0x40011D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int latestCup;

	[Token(Token = "0x40011D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int arriveID;

	[Token(Token = "0x40011D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int departID;

	[Token(Token = "0x40011D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int idleID;

	[Token(Token = "0x40011D8")]
	private const string localizationEndlessHeader = "endless_header";

	[Token(Token = "0x40011D9")]
	private const string localizationTutorialHeader = "tutorial_header";

	[Token(Token = "0x40011DA")]
	private const string localizationCreativeHeader = "creative_header";

	[Token(Token = "0x40011DB")]
	private const string localizationCampaignTownHeader = "campaign_town_number";

	[Token(Token = "0x6001134")]
	[Address(RVA = "0xACCE3C", Offset = "0xACCE3C", VA = "0xACCE3C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001135")]
	[Address(RVA = "0xACCF64", Offset = "0xACCF64", VA = "0xACCF64")]
	public void MoveToCupInstant(int cupIndex)
	{
	}

	[Token(Token = "0x6001136")]
	[Address(RVA = "0xACD118", Offset = "0xACD118", VA = "0xACD118")]
	public void MoveToCup(int cupIndex, bool delayed = false)
	{
	}

	[Token(Token = "0x6001137")]
	[Address(RVA = "0xACD504", Offset = "0xACD504", VA = "0xACD504")]
	[IteratorStateMachine(typeof(<MoveToCupRoutine>d__21))]
	private IEnumerator MoveToCupRoutine(Transform target, bool delayed)
	{
		return null;
	}

	[Token(Token = "0x6001138")]
	[Address(RVA = "0xACD5B0", Offset = "0xACD5B0", VA = "0xACD5B0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001139")]
	[Address(RVA = "0xACD5DC", Offset = "0xACD5DC", VA = "0xACD5DC")]
	private void SetAnimationTrigger(int triggerID)
	{
	}

	[Token(Token = "0x600113A")]
	[Address(RVA = "0xACD648", Offset = "0xACD648", VA = "0xACD648")]
	public ContinueMarker()
	{
	}
}
[Token(Token = "0x2000299")]
public class CreativeModeTooltip : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40011E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CookingRound cookingRound;

	[Token(Token = "0x6001141")]
	[Address(RVA = "0xACD900", Offset = "0xACD900", VA = "0xACD900")]
	private void Start()
	{
	}

	[Token(Token = "0x6001142")]
	[Address(RVA = "0xACDA48", Offset = "0xACDA48", VA = "0xACDA48")]
	public void DisplayRetryLevelTip()
	{
	}

	[Token(Token = "0x6001143")]
	[Address(RVA = "0xACDB44", Offset = "0xACDB44", VA = "0xACDB44")]
	public void OnCreativeButtonPushed()
	{
	}

	[Token(Token = "0x6001144")]
	[Address(RVA = "0xACDB68", Offset = "0xACDB68", VA = "0xACDB68")]
	public void OnCountdownStarted()
	{
	}

	[Token(Token = "0x6001145")]
	[Address(RVA = "0xACDD1C", Offset = "0xACDD1C", VA = "0xACDD1C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001146")]
	[Address(RVA = "0xACDDF0", Offset = "0xACDDF0", VA = "0xACDDF0")]
	public CreativeModeTooltip()
	{
	}
}
[Token(Token = "0x200029A")]
public class CupButton : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40011E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PokeButton button;

	[Token(Token = "0x40011E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color lockedColor;

	[Token(Token = "0x40011E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isEndlessMode;

	[Token(Token = "0x40011E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float lockedYOffset;

	[Token(Token = "0x40011E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Town Visuals")]
	[SerializeField]
	private MeshRenderer buttonRenderer;

	[Token(Token = "0x40011E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform[] meeplePositions;

	[Token(Token = "0x40011E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Star Visuals")]
	[SerializeField]
	private MeshRenderer[] starRenderers;

	[Token(Token = "0x40011E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Header("Endless Mode Visuals")]
	[SerializeField]
	private GameObject endlessModeHighscore;

	[Token(Token = "0x40011EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isLocked;

	[Token(Token = "0x40011EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private MaterialPropertyBlock propertyBlock;

	[Token(Token = "0x40011EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Animator animator;

	[Token(Token = "0x40011ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject cupButtonPadlock;

	[Token(Token = "0x40011EE")]
	private const string propertyTextureIndex = "_TextureIndex";

	[Token(Token = "0x40011EF")]
	private const string propertyColor = "_Color";

	[Token(Token = "0x40011F0")]
	private const string triggerNextTown = "nextTown";

	[Token(Token = "0x40011F1")]
	private const string pathNamePadlock = "Padlock";

	[Token(Token = "0x6001147")]
	[Address(RVA = "0xACDDF8", Offset = "0xACDDF8", VA = "0xACDDF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001148")]
	[Address(RVA = "0xACDED8", Offset = "0xACDED8", VA = "0xACDED8")]
	public void SetLocked(bool locked)
	{
	}

	[Token(Token = "0x6001149")]
	[Address(RVA = "0xACE084", Offset = "0xACE084", VA = "0xACE084")]
	public void UpdateStarCount(int starCount)
	{
	}

	[Token(Token = "0x600114A")]
	[Address(RVA = "0xACE170", Offset = "0xACE170", VA = "0xACE170")]
	public void SetInteractable(bool interactable)
	{
	}

	[Token(Token = "0x600114B")]
	[Address(RVA = "0xACE1AC", Offset = "0xACE1AC", VA = "0xACE1AC")]
	public void PlayNextTownAnimation()
	{
	}

	[Token(Token = "0x600114C")]
	[Address(RVA = "0xACE200", Offset = "0xACE200", VA = "0xACE200")]
	public Vector3 GetMeeplePosition(PlayerColor playerColor)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600114D")]
	[Address(RVA = "0xACE23C", Offset = "0xACE23C", VA = "0xACE23C")]
	public CupButton()
	{
	}
}
[Token(Token = "0x200029B")]
public class Map : SingleInstanceNetworkedBehavior<Map>, IPunObservable
{
	[Token(Token = "0x200029C")]
	public delegate void OnConfirmCupStartedHandler();

	[Token(Token = "0x200029D")]
	public enum State
	{
		[Token(Token = "0x4001224")]
		Hidden,
		[Token(Token = "0x4001225")]
		CupSelect,
		[Token(Token = "0x4001226")]
		ConfirmCup,
		[Token(Token = "0x4001227")]
		ConfirmEndlessMode,
		[Token(Token = "0x4001228")]
		ConfirmTutorialMode,
		[Token(Token = "0x4001229")]
		ConfirmCreativeMode,
		[Token(Token = "0x400122A")]
		CupResults,
		[Token(Token = "0x400122B")]
		EndlessResults
	}

	[Token(Token = "0x40011F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Buttons")]
	public GameObject[] levelMarkers;

	[Token(Token = "0x40011F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] levelStarParents;

	[Token(Token = "0x40011F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CupButton[] CupButtons;

	[Token(Token = "0x40011F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MapHouse mapHouse;

	[Token(Token = "0x40011F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CupButton endlessModeButton;

	[Token(Token = "0x40011F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PokeButton tutorialModeButton;

	[Token(Token = "0x40011F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PokeButton creativeModeButton;

	[Token(Token = "0x40011F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ContinueMarker continueMarker;

	[Token(Token = "0x40011FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float buttonScaleUpTime;

	[Token(Token = "0x40011FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Header("Map")]
	public Transform mapRoot;

	[Token(Token = "0x40011FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject cupSelectionMenu;

	[Token(Token = "0x40011FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject levelSelectionMenu;

	[Token(Token = "0x40011FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public RetryLevelTip retryLevelTip;

	[Token(Token = "0x40011FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public CreativeModeTooltip creativeModeTip;

	[Token(Token = "0x4001200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject[] environments;

	[Token(Token = "0x4001201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float newEnvironmentCelebrationLifetime;

	[Token(Token = "0x4001202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[Header("Level Marker")]
	public Material roundStarLitMaterial;

	[Token(Token = "0x4001203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Material starUnlitMaterial;

	[Token(Token = "0x4001204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[Header("Star rotation speed")]
	public float starRotationSpeed;

	[Token(Token = "0x4001205")]
	public const int tutorialCupID = 1000;

	[Token(Token = "0x4001206")]
	public const int endlessEnvironmentID = 4;

	[Token(Token = "0x4001207")]
	public const int creativeEnvironmentID = 5;

	[Token(Token = "0x4001208")]
	public const int endlessModeCupID = 2000;

	[Token(Token = "0x4001209")]
	public const int creativeModeCupID = 3000;

	[Token(Token = "0x400120B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int selectedCupBacking;

	[Token(Token = "0x400120D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private MapVoteCounter mapVoteCounter;

	[Token(Token = "0x400120E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private MeshRenderer[][] starsAboveLevels;

	[Token(Token = "0x400120F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector3[][] levelStarStartPositions;

	[Token(Token = "0x4001210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3[][] levelStarStartScale;

	[Token(Token = "0x4001211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Quaternion[][] levelStarStartRotation;

	[Token(Token = "0x4001212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private int addedStars;

	[Token(Token = "0x4001213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private CookingCup cookingCup;

	[Token(Token = "0x4001214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private TableCenterUI tableCenterUI;

	[Token(Token = "0x4001215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private MapAnimation mapAnimation;

	[Token(Token = "0x4001216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Transform[] CupButtonTransforms;

	[Token(Token = "0x4001217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Vector3 defaultButtonScale;

	[Token(Token = "0x4001218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private bool waitingForFirstTimeSync;

	[Token(Token = "0x4001219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private int confirmCupID;

	[Token(Token = "0x400121A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private int cupResultCupID;

	[Token(Token = "0x400121B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private int cupResultLevel;

	[Token(Token = "0x400121C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private List<int> cupResultStars;

	[Token(Token = "0x400121D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private bool cupResultsFailed;

	[Token(Token = "0x400121E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
	private bool waitForStarsFromRoundResultDisplayer;

	[Token(Token = "0x400121F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private GameObject unlockForestCelebration;

	[Token(Token = "0x4001220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private GameObject unlockCastleCelebration;

	[Token(Token = "0x4001221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private GameObject unlockEndlessCelebration;

	[Token(Token = "0x4001222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private PhotonCallbackManager photonCallbackManager;

	[Token(Token = "0x17000225")]
	[HideInInspector]
	public int SelectedCup
	{
		[Token(Token = "0x6001150")]
		[Address(RVA = "0xACE388", Offset = "0xACE388", VA = "0xACE388")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001151")]
		[Address(RVA = "0xACE390", Offset = "0xACE390", VA = "0xACE390")]
		set
		{
		}
	}

	[Token(Token = "0x17000226")]
	public State MapState
	{
		[Token(Token = "0x6001152")]
		[Address(RVA = "0xACE4BC", Offset = "0xACE4BC", VA = "0xACE4BC")]
		[CompilerGenerated]
		get
		{
			return default(State);
		}
		[Token(Token = "0x6001153")]
		[Address(RVA = "0xACE4C4", Offset = "0xACE4C4", VA = "0xACE4C4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x14000025")]
	public event OnConfirmCupStartedHandler OnConfirmModeStart
	{
		[Token(Token = "0x600114E")]
		[Address(RVA = "0xACE250", Offset = "0xACE250", VA = "0xACE250")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600114F")]
		[Address(RVA = "0xACE2EC", Offset = "0xACE2EC", VA = "0xACE2EC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001154")]
	[Address(RVA = "0xACE4CC", Offset = "0xACE4CC", VA = "0xACE4CC", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6001155")]
	[Address(RVA = "0xACE6D0", Offset = "0xACE6D0", VA = "0xACE6D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001156")]
	[Address(RVA = "0xACF420", Offset = "0xACF420", VA = "0xACF420")]
	private void OnMasterClientChanged(PhotonPlayer newMasterClient)
	{
	}

	[Token(Token = "0x6001157")]
	[Address(RVA = "0xACF584", Offset = "0xACF584", VA = "0xACF584")]
	private void Update()
	{
	}

	[Token(Token = "0x6001158")]
	[Address(RVA = "0xACF628", Offset = "0xACF628", VA = "0xACF628")]
	private void OnGameStateChanged(GameState oldState, GameState newState)
	{
	}

	[Token(Token = "0x6001159")]
	[Address(RVA = "0xACF868", Offset = "0xACF868", VA = "0xACF868")]
	private void OnCountdownStarted()
	{
	}

	[Token(Token = "0x600115A")]
	[Address(RVA = "0xACF884", Offset = "0xACF884", VA = "0xACF884")]
	[PunRPC]
	private void SelectCupRPC(int cupID)
	{
	}

	[Token(Token = "0x600115B")]
	[Address(RVA = "0xACF888", Offset = "0xACF888", VA = "0xACF888")]
	[PunRPC]
	private void GoToCupConfirmationRPC(int cupID)
	{
	}

	[Token(Token = "0x600115C")]
	[Address(RVA = "0xACFA90", Offset = "0xACFA90", VA = "0xACFA90")]
	[PunRPC]
	private void GoToEndlessModeConfirmationRPC()
	{
	}

	[Token(Token = "0x600115D")]
	[Address(RVA = "0xACFC50", Offset = "0xACFC50", VA = "0xACFC50")]
	[PunRPC]
	private void GoToTutorialModeConfirmationRPC()
	{
	}

	[Token(Token = "0x600115E")]
	[Address(RVA = "0xACFCF0", Offset = "0xACFCF0", VA = "0xACFCF0")]
	[PunRPC]
	private void GoToCreativeModeConfirmationRPC()
	{
	}

	[Token(Token = "0x600115F")]
	[Address(RVA = "0xACFEB0", Offset = "0xACFEB0", VA = "0xACFEB0")]
	[PunRPC]
	private void ReturnToCupSelectRPC()
	{
	}

	[Token(Token = "0x6001160")]
	[Address(RVA = "0xACFED4", Offset = "0xACFED4", VA = "0xACFED4")]
	public void ShowCupResults(int cupID, int cupLevelIndex, int[] cupStars, bool cupFailed)
	{
	}

	[Token(Token = "0x6001161")]
	[Address(RVA = "0xAD0038", Offset = "0xAD0038", VA = "0xAD0038")]
	public void ShowEndlessResults()
	{
	}

	[Token(Token = "0x6001162")]
	[Address(RVA = "0xACF37C", Offset = "0xACF37C", VA = "0xACF37C")]
	private void SetState(State newState)
	{
	}

	[Token(Token = "0x6001163")]
	[Address(RVA = "0xAD005C", Offset = "0xAD005C", VA = "0xAD005C")]
	private void OnStateChanged(State previousState)
	{
	}

	[Token(Token = "0x6001164")]
	[Address(RVA = "0xAD04B0", Offset = "0xAD04B0", VA = "0xAD04B0")]
	private void ClearTableForVoting()
	{
	}

	[Token(Token = "0x6001165")]
	[Address(RVA = "0xAD0F38", Offset = "0xAD0F38", VA = "0xAD0F38")]
	public void SetCupButtonsEnabled(bool enabled)
	{
	}

	[Token(Token = "0x6001166")]
	[Address(RVA = "0xAD0FA8", Offset = "0xAD0FA8", VA = "0xAD0FA8")]
	public void UpdateUnlockedCups(bool[] availableCups, int latestCupCompleted)
	{
	}

	[Token(Token = "0x6001167")]
	[Address(RVA = "0xACD0A4", Offset = "0xACD0A4", VA = "0xACD0A4")]
	public Transform GetCupButtonTransform(int cupID)
	{
		return null;
	}

	[Token(Token = "0x6001168")]
	[Address(RVA = "0xAD12CC", Offset = "0xAD12CC", VA = "0xAD12CC")]
	public void ShowCupButton(int cupIndex, bool show)
	{
	}

	[Token(Token = "0x6001169")]
	[Address(RVA = "0xAD1428", Offset = "0xAD1428", VA = "0xAD1428")]
	public void UpdateCupStars(int[] cupStarCounts)
	{
	}

	[Token(Token = "0x600116A")]
	[Address(RVA = "0xAD15C4", Offset = "0xAD15C4", VA = "0xAD15C4")]
	public static int GetAverageStarCount(int cupStarCount, int numberOfLevels)
	{
		return default(int);
	}

	[Token(Token = "0x600116B")]
	[Address(RVA = "0xAD0A40", Offset = "0xAD0A40", VA = "0xAD0A40")]
	private void SelectCupEnvironment(int cupID)
	{
	}

	[Token(Token = "0x600116C")]
	[Address(RVA = "0xAD0A80", Offset = "0xAD0A80", VA = "0xAD0A80")]
	private void SelectCupEnvironmentByIndex(int environmentIndex)
	{
	}

	[Token(Token = "0x600116D")]
	[Address(RVA = "0xAD0B48", Offset = "0xAD0B48", VA = "0xAD0B48")]
	private void UpdateLevelMarkers()
	{
	}

	[Token(Token = "0x600116E")]
	[Address(RVA = "0xAD060C", Offset = "0xAD060C", VA = "0xAD060C")]
	private void ResetLevelStars()
	{
	}

	[Token(Token = "0x600116F")]
	[Address(RVA = "0xAD0BE4", Offset = "0xAD0BE4", VA = "0xAD0BE4")]
	private void UpdateLevelStars()
	{
	}

	[Token(Token = "0x6001170")]
	[Address(RVA = "0xAD15F4", Offset = "0xAD15F4", VA = "0xAD15F4")]
	public void AddStarToLevel(int levelIndex)
	{
	}

	[Token(Token = "0x6001171")]
	[Address(RVA = "0xAD16F8", Offset = "0xAD16F8", VA = "0xAD16F8")]
	public void SendStarsOfLevelTo(int levelIndex, Vector3 position, int numberOfStars)
	{
	}

	[Token(Token = "0x6001172")]
	[Address(RVA = "0xAD1820", Offset = "0xAD1820", VA = "0xAD1820")]
	private void SendStarTo(Vector3 position, GameObject star, float delay)
	{
	}

	[Token(Token = "0x6001173")]
	[Address(RVA = "0xAD08F8", Offset = "0xAD08F8", VA = "0xAD08F8")]
	private void UpdateDisplayedLevels(int cupID)
	{
	}

	[Token(Token = "0x6001174")]
	[Address(RVA = "0xAD0AEC", Offset = "0xAD0AEC", VA = "0xAD0AEC")]
	private void DisableLevelDisplays()
	{
	}

	[Token(Token = "0x6001175")]
	[Address(RVA = "0xACF3A0", Offset = "0xACF3A0", VA = "0xACF3A0")]
	private Vector3 GetHouseTarget(int levelIndex)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001176")]
	[Address(RVA = "0xAD1A74", Offset = "0xAD1A74", VA = "0xAD1A74")]
	public void OnOpenSPRoomToMP()
	{
	}

	[Token(Token = "0x6001177")]
	[Address(RVA = "0xAD1B7C", Offset = "0xAD1B7C", VA = "0xAD1B7C")]
	public void CelebrateNewEnvironmentUnlocked(CupData.Environment cupEnvironment)
	{
	}

	[Token(Token = "0x6001178")]
	[Address(RVA = "0xAD1DE0", Offset = "0xAD1DE0", VA = "0xAD1DE0", Slot = "6")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6001179")]
	[Address(RVA = "0xAD2248", Offset = "0xAD2248", VA = "0xAD2248", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x600117A")]
	[Address(RVA = "0xAD2348", Offset = "0xAD2348", VA = "0xAD2348")]
	public void DebugConfirmCup(int cupID)
	{
	}

	[Token(Token = "0x600117B")]
	[Address(RVA = "0xAD2398", Offset = "0xAD2398", VA = "0xAD2398")]
	public Map()
	{
	}
}
[Token(Token = "0x20002A1")]
public class MapAnimation : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector3 aboveMapCenterPos;

	[Token(Token = "0x4001234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private Vector3 mapCenterPos;

	[Token(Token = "0x4001235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Vector3 shrunkWorldMapScale;

	[Token(Token = "0x4001236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float targetButtonPositionYOffset;

	[Token(Token = "0x4001237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Animator mapLevelAnimator;

	[Token(Token = "0x4001238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RetryLevelTip retryLevelTip;

	[Token(Token = "0x4001239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject mapWorld;

	[Token(Token = "0x400123A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float delayBeforeMoveToCenter;

	[Token(Token = "0x400123B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private float moveTime;

	[Token(Token = "0x400123C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float mapWorldDisappearTime;

	[Token(Token = "0x400123D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform mapLevelTransform;

	[Token(Token = "0x400123E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject mapLevelGO;

	[Token(Token = "0x400123F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform mapWorldTransform;

	[Token(Token = "0x4001240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Map map;

	[Token(Token = "0x600118B")]
	[Address(RVA = "0x974268", Offset = "0x974268", VA = "0x974268")]
	private void Awake()
	{
	}

	[Token(Token = "0x600118C")]
	[Address(RVA = "0x974300", Offset = "0x974300", VA = "0x974300")]
	public void ZoomInOnLevel(Vector3 localStartPos)
	{
	}

	[Token(Token = "0x600118D")]
	[Address(RVA = "0x9744B4", Offset = "0x9744B4", VA = "0x9744B4")]
	public void ZoomOutToWorld(Vector3 localDestination)
	{
	}

	[Token(Token = "0x600118E")]
	[Address(RVA = "0x9746BC", Offset = "0x9746BC", VA = "0x9746BC")]
	public void NoTransitionAnimation(bool worldMapIsActive)
	{
	}

	[Token(Token = "0x600118F")]
	[Address(RVA = "0x974860", Offset = "0x974860", VA = "0x974860")]
	public MapAnimation()
	{
	}
}
[Token(Token = "0x20002A3")]
public class MapHouse : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20002A4")]
	[CompilerGenerated]
	private sealed class <MoveMapHouseCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MapHouse <>4__this;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 start;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 target;

		[Token(Token = "0x17000227")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011A0")]
			[Address(RVA = "0x975530", Offset = "0x975530", VA = "0x975530", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000228")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011A2")]
			[Address(RVA = "0x975578", Offset = "0x975578", VA = "0x975578", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0x975218", Offset = "0x975218", VA = "0x975218")]
		[DebuggerHidden]
		public <MoveMapHouseCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0x9753B4", Offset = "0x9753B4", VA = "0x9753B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0x9753B8", Offset = "0x9753B8", VA = "0x9753B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0x975538", Offset = "0x975538", VA = "0x975538", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject mapHouse;

	[Token(Token = "0x4001246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Animator mapHouseAnimator;

	[Token(Token = "0x4001247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private WaitForSeconds roundSummaryDelay;

	[Token(Token = "0x6001197")]
	[Address(RVA = "0x9750AC", Offset = "0x9750AC", VA = "0x9750AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001198")]
	[Address(RVA = "0x975100", Offset = "0x975100", VA = "0x975100")]
	public void MoveMapHouse(Vector3 start, Vector3 target)
	{
	}

	[Token(Token = "0x6001199")]
	[Address(RVA = "0x975174", Offset = "0x975174", VA = "0x975174")]
	[IteratorStateMachine(typeof(<MoveMapHouseCoroutine>d__5))]
	private IEnumerator MoveMapHouseCoroutine(Vector3 start, Vector3 target)
	{
		return null;
	}

	[Token(Token = "0x600119A")]
	[Address(RVA = "0x975240", Offset = "0x975240", VA = "0x975240")]
	public void ResetHousePosition(Vector3 pos)
	{
	}

	[Token(Token = "0x600119B")]
	[Address(RVA = "0x9752F4", Offset = "0x9752F4", VA = "0x9752F4")]
	public MapHouse()
	{
	}
}
[Token(Token = "0x20002A5")]
public class MapProgression : SingleInstanceNetworkedBehavior<MapProgression>, IPunObservable
{
	[Token(Token = "0x20002A6")]
	public enum Rank
	{
		[Token(Token = "0x4001259")]
		NotBeaten,
		[Token(Token = "0x400125A")]
		OneStarAverage,
		[Token(Token = "0x400125B")]
		TwoStarAverage,
		[Token(Token = "0x400125C")]
		ThreeStarAverage
	}

	[Token(Token = "0x400124D")]
	public const string beatenCupsKey = "beatenCups";

	[Token(Token = "0x400124E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int latestCupCompleted;

	[Token(Token = "0x400124F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ExitGames.Client.Photon.Hashtable syncHashTable;

	[Token(Token = "0x4001250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SaveManager saveManager;

	[Token(Token = "0x4001251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Map map;

	[Token(Token = "0x4001252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MapRoad mapRoad;

	[Token(Token = "0x4001253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int cupCount;

	[Token(Token = "0x4001254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int newEnvironmentUnlockedByCup;

	[Token(Token = "0x4001255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private PhotonCallbackManager photonCallbackManager;

	[Token(Token = "0x4001256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int currentCupPreviousRank;

	[Token(Token = "0x4001257")]
	private const int noCupCompleted = -1;

	[Token(Token = "0x17000229")]
	private Rank[] CupsRank
	{
		[Token(Token = "0x60011A3")]
		[Address(RVA = "0x975580", Offset = "0x975580", VA = "0x975580")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60011A4")]
	[Address(RVA = "0x9755C0", Offset = "0x9755C0", VA = "0x9755C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60011A5")]
	[Address(RVA = "0x975FD0", Offset = "0x975FD0", VA = "0x975FD0")]
	internal void UpdateRoomSelectedTownProperty(int townIndex)
	{
	}

	[Token(Token = "0x60011A6")]
	[Address(RVA = "0x975AF0", Offset = "0x975AF0", VA = "0x975AF0")]
	private static void UpdateRoomProgressionProperty()
	{
	}

	[Token(Token = "0x60011A7")]
	[Address(RVA = "0x9760E0", Offset = "0x9760E0", VA = "0x9760E0")]
	[PunRPC]
	public void UpdateLocalPlayerBeatenCupRPC(int cupIndex, int rankValue, int totalCupStars, bool isDebug)
	{
	}

	[Token(Token = "0x60011A8")]
	[Address(RVA = "0x9769BC", Offset = "0x9769BC", VA = "0x9769BC")]
	public bool GetNewEnvironmentUnlockedBy(int cupIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x60011A9")]
	[Address(RVA = "0x9769E0", Offset = "0x9769E0", VA = "0x9769E0")]
	private void OnMasterClientChanged(PhotonPlayer newMasterClient)
	{
	}

	[Token(Token = "0x60011AA")]
	[Address(RVA = "0x976A4C", Offset = "0x976A4C", VA = "0x976A4C")]
	public void OnPlayerPropertiesChanged(PhotonPlayer player, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x60011AB")]
	[Address(RVA = "0x976D70", Offset = "0x976D70", VA = "0x976D70")]
	public void OnPlayerDisconnected(PhotonPlayer otherPlayer)
	{
	}

	[Token(Token = "0x60011AC")]
	[Address(RVA = "0x976AD0", Offset = "0x976AD0", VA = "0x976AD0")]
	private void OnSharedPlayerProgressionChanged()
	{
	}

	[Token(Token = "0x60011AD")]
	[Address(RVA = "0x975EF0", Offset = "0x975EF0", VA = "0x975EF0")]
	public bool[] GetBeatenCups()
	{
		return null;
	}

	[Token(Token = "0x60011AE")]
	[Address(RVA = "0x976D74", Offset = "0x976D74", VA = "0x976D74")]
	public int GetNextRecommendedCup()
	{
		return default(int);
	}

	[Token(Token = "0x60011AF")]
	[Address(RVA = "0x976FBC", Offset = "0x976FBC", VA = "0x976FBC", Slot = "6")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60011B0")]
	[Address(RVA = "0x977094", Offset = "0x977094", VA = "0x977094", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x60011B1")]
	[Address(RVA = "0x977254", Offset = "0x977254", VA = "0x977254")]
	public void DebugSetNewEnvironmentSetByCup(int cupIndex)
	{
	}

	[Token(Token = "0x60011B2")]
	[Address(RVA = "0x97725C", Offset = "0x97725C", VA = "0x97725C")]
	public MapProgression()
	{
	}
}
[Token(Token = "0x20002A7")]
public class MapProgressMarker : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400125D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int unlockedByCup;

	[Token(Token = "0x400125E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject redMarker;

	[Token(Token = "0x400125F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject yellowMarker;

	[Token(Token = "0x4001260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject blueMarker;

	[Token(Token = "0x4001261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject greenMarker;

	[Token(Token = "0x4001262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 startScale;

	[Token(Token = "0x4001263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool animatingIn;

	[Token(Token = "0x4001264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float animationTime;

	[Token(Token = "0x60011B3")]
	[Address(RVA = "0x9772D8", Offset = "0x9772D8", VA = "0x9772D8")]
	public void Setup()
	{
	}

	[Token(Token = "0x60011B4")]
	[Address(RVA = "0x9773D8", Offset = "0x9773D8", VA = "0x9773D8")]
	public void SetPlayerColor(PlayerColor color)
	{
	}

	[Token(Token = "0x60011B5")]
	[Address(RVA = "0x9774A8", Offset = "0x9774A8", VA = "0x9774A8")]
	public void Show()
	{
	}

	[Token(Token = "0x60011B6")]
	[Address(RVA = "0x977500", Offset = "0x977500", VA = "0x977500")]
	public void Hide()
	{
	}

	[Token(Token = "0x60011B7")]
	[Address(RVA = "0x977590", Offset = "0x977590", VA = "0x977590")]
	public void ShowWithDelay(float delay)
	{
	}

	[Token(Token = "0x60011B8")]
	[Address(RVA = "0x977724", Offset = "0x977724", VA = "0x977724")]
	public MapProgressMarker()
	{
	}
}
[Token(Token = "0x20002A8")]
public class MapRoad : SingleInstanceNetworkedBehavior<MapRoad>
{
	[Token(Token = "0x4001265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private MapProgressMarker[] roadProgessMarkers;

	[Token(Token = "0x4001266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float roadFillTime;

	[Token(Token = "0x4001267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] meepleReferences;

	[Token(Token = "0x4001268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool setupComplete;

	[Token(Token = "0x4001269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<PlayerColor, GameObject> playerMeeples;

	[Token(Token = "0x400126A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 meepleStartScale;

	[Token(Token = "0x400126B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool isAnimatingLocalMeeple;

	[Token(Token = "0x400126C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int localMeepleLastIndex;

	[Token(Token = "0x400126D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PhotonCallbackManager photonCallbackManager;

	[Token(Token = "0x400126E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private MaterialPropertyBlock materialPropertyBlock;

	[Token(Token = "0x400126F")]
	private const string propertyColor = "_Color";

	[Token(Token = "0x4001270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private CookingNetworkManager cookingNetworkManager;

	[Token(Token = "0x60011BA")]
	[Address(RVA = "0x977740", Offset = "0x977740", VA = "0x977740", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60011BB")]
	[Address(RVA = "0x9777A4", Offset = "0x9777A4", VA = "0x9777A4")]
	private void Setup()
	{
	}

	[Token(Token = "0x60011BC")]
	[Address(RVA = "0x977A9C", Offset = "0x977A9C", VA = "0x977A9C")]
	private void Start()
	{
	}

	[Token(Token = "0x60011BD")]
	[Address(RVA = "0x978288", Offset = "0x978288", VA = "0x978288")]
	private void OnPlayerPropertiesChanged(PhotonPlayer player, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x60011BE")]
	[Address(RVA = "0x9783D8", Offset = "0x9783D8", VA = "0x9783D8")]
	private void OnLocalPlayerMoved(int spawnPointIndex)
	{
	}

	[Token(Token = "0x60011BF")]
	[Address(RVA = "0x978448", Offset = "0x978448", VA = "0x978448")]
	private void OnPlayerMoved(int playerID)
	{
	}

	[Token(Token = "0x60011C0")]
	[Address(RVA = "0x9787B0", Offset = "0x9787B0", VA = "0x9787B0")]
	public void OnPlayerDisconnectedAtPosition(int positionKey)
	{
	}

	[Token(Token = "0x60011C1")]
	[Address(RVA = "0x978008", Offset = "0x978008", VA = "0x978008")]
	private void UpdatePlayerMeepleIfAvailable(ExitGames.Client.Photon.Hashtable playerProperties, int playerID)
	{
	}

	[Token(Token = "0x60011C2")]
	[Address(RVA = "0x978854", Offset = "0x978854", VA = "0x978854")]
	private void MoveMeepleToCup(int playerID, PlayerColor playerColor, int cupIndex)
	{
	}

	[Token(Token = "0x60011C3")]
	[Address(RVA = "0x977F04", Offset = "0x977F04", VA = "0x977F04")]
	private void UpdateRoadProgressMarkerColor(PlayerColor playerColor)
	{
	}

	[Token(Token = "0x60011C4")]
	[Address(RVA = "0x977F68", Offset = "0x977F68", VA = "0x977F68")]
	private void UpdateRoadProgress(bool[] beatenCups)
	{
	}

	[Token(Token = "0x60011C5")]
	[Address(RVA = "0x976880", Offset = "0x976880", VA = "0x976880")]
	public void OnCupRankChangedLocally(int cupIndex, MapProgression.Rank newRank, MapProgression.Rank oldRank, bool isDebug)
	{
	}

	[Token(Token = "0x60011C6")]
	[Address(RVA = "0x978A70", Offset = "0x978A70", VA = "0x978A70")]
	public void PlayFillRoadAnimation(float startDelay, int latestUnlockedCup)
	{
	}

	[Token(Token = "0x60011C7")]
	[Address(RVA = "0x978E88", Offset = "0x978E88", VA = "0x978E88", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x60011C8")]
	[Address(RVA = "0x979070", Offset = "0x979070", VA = "0x979070")]
	public MapRoad()
	{
	}
}
[Token(Token = "0x20002AA")]
public class MapVoteCounter : SingleInstanceNetworkedBehavior<MapVoteCounter>, IPunObservable
{
	[Token(Token = "0x20002AB")]
	public enum VoteType
	{
		[Token(Token = "0x4001286")]
		None,
		[Token(Token = "0x4001287")]
		RoundReadyVote,
		[Token(Token = "0x4001288")]
		ConfirmSelectedEndless,
		[Token(Token = "0x4001289")]
		ConfirmTutorialMode,
		[Token(Token = "0x400128A")]
		RetryFailedCup,
		[Token(Token = "0x400128B")]
		ContinueCreativeMode
	}

	[Token(Token = "0x4001276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SpriteRenderer[] playerIcons;

	[Token(Token = "0x4001277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float pulseSpeed;

	[Token(Token = "0x4001278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private Vector3 thumbsUpMaxScale;

	[Token(Token = "0x4001279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject thumbsUpIcon;

	[Token(Token = "0x400127C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<int> playersWhoVoted;

	[Token(Token = "0x400127D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int voteID;

	[Token(Token = "0x400127E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 thumbsUpStartScale;

	[Token(Token = "0x400127F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private CookingGame cookingGame;

	[Token(Token = "0x4001280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private CookingCup cookingCup;

	[Token(Token = "0x4001281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private CookingRound cookingRound;

	[Token(Token = "0x4001282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private VotingHands votingHands;

	[Token(Token = "0x4001283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private CreativeMode creativeMode;

	[Token(Token = "0x4001284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private PhotonCallbackManager photonCallbackManager;

	[Token(Token = "0x1700022A")]
	public bool CanVote
	{
		[Token(Token = "0x60011CB")]
		[Address(RVA = "0x9792E4", Offset = "0x9792E4", VA = "0x9792E4")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60011CC")]
		[Address(RVA = "0x9792EC", Offset = "0x9792EC", VA = "0x9792EC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700022B")]
	public VoteType CurrentVoteType
	{
		[Token(Token = "0x60011CD")]
		[Address(RVA = "0x9792F8", Offset = "0x9792F8", VA = "0x9792F8")]
		[CompilerGenerated]
		get
		{
			return default(VoteType);
		}
		[Token(Token = "0x60011CE")]
		[Address(RVA = "0x979300", Offset = "0x979300", VA = "0x979300")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700022C")]
	public bool IHaveVoted
	{
		[Token(Token = "0x60011CF")]
		[Address(RVA = "0x979308", Offset = "0x979308", VA = "0x979308")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700022D")]
	public bool CanVoteNo
	{
		[Token(Token = "0x60011D0")]
		[Address(RVA = "0x9793C8", Offset = "0x9793C8", VA = "0x9793C8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60011D1")]
	[Address(RVA = "0x979370", Offset = "0x979370", VA = "0x979370")]
	public bool HavePlayerVoted(int playerId)
	{
		return default(bool);
	}

	[Token(Token = "0x60011D2")]
	[Address(RVA = "0x9793F0", Offset = "0x9793F0", VA = "0x9793F0")]
	private void Start()
	{
	}

	[Token(Token = "0x60011D3")]
	[Address(RVA = "0x97987C", Offset = "0x97987C", VA = "0x97987C")]
	private void Update()
	{
	}

	[Token(Token = "0x60011D4")]
	[Address(RVA = "0x979954", Offset = "0x979954", VA = "0x979954")]
	public void StartVote(VoteType voteType)
	{
	}

	[Token(Token = "0x60011D5")]
	[Address(RVA = "0x9799CC", Offset = "0x9799CC", VA = "0x9799CC")]
	public void FinishVote()
	{
	}

	[Token(Token = "0x60011D6")]
	[Address(RVA = "0x979850", Offset = "0x979850", VA = "0x979850")]
	private void OnCanVoteChanged(bool canVote)
	{
	}

	[Token(Token = "0x60011D7")]
	[Address(RVA = "0x979A30", Offset = "0x979A30", VA = "0x979A30")]
	public void Vote(bool pass)
	{
	}

	[Token(Token = "0x60011D8")]
	[Address(RVA = "0x979C8C", Offset = "0x979C8C", VA = "0x979C8C")]
	[PunRPC]
	private void PlayerVotedYesRPC(int playerID)
	{
	}

	[Token(Token = "0x60011D9")]
	[Address(RVA = "0x979E98", Offset = "0x979E98", VA = "0x979E98")]
	private void AllPlayersVoted()
	{
	}

	[Token(Token = "0x60011DA")]
	[Address(RVA = "0x979F9C", Offset = "0x979F9C", VA = "0x979F9C")]
	[PunRPC]
	private void PlayerVotedNoRPC()
	{
	}

	[Token(Token = "0x60011DB")]
	[Address(RVA = "0x97A26C", Offset = "0x97A26C", VA = "0x97A26C", Slot = "6")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60011DC")]
	[Address(RVA = "0x97A6C8", Offset = "0x97A6C8", VA = "0x97A6C8")]
	private void OnPlayerDisconnected(PhotonPlayer otherPlayer)
	{
	}

	[Token(Token = "0x60011DD")]
	[Address(RVA = "0x97A7DC", Offset = "0x97A7DC", VA = "0x97A7DC", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x60011DE")]
	[Address(RVA = "0x97A8DC", Offset = "0x97A8DC", VA = "0x97A8DC")]
	public MapVoteCounter()
	{
	}
}
[Token(Token = "0x20002AC")]
public class RetryLevelTip : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400128C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float showDelay;

	[Token(Token = "0x60011DF")]
	[Address(RVA = "0x97A9A0", Offset = "0x97A9A0", VA = "0x97A9A0")]
	private void Start()
	{
	}

	[Token(Token = "0x60011E0")]
	[Address(RVA = "0x974E84", Offset = "0x974E84", VA = "0x974E84")]
	public void DisplayRetryLevelTip()
	{
	}

	[Token(Token = "0x60011E1")]
	[Address(RVA = "0x9740D0", Offset = "0x9740D0", VA = "0x9740D0")]
	public void OnCupButtonPushed(int pushedButtonIndex)
	{
	}

	[Token(Token = "0x60011E2")]
	[Address(RVA = "0x97AAF4", Offset = "0x97AAF4", VA = "0x97AAF4")]
	public void OnReplayingLevel(int pushedButtonIndex)
	{
	}

	[Token(Token = "0x60011E3")]
	[Address(RVA = "0x97A9F4", Offset = "0x97A9F4", VA = "0x97A9F4")]
	private bool GetIsBeatenButNotPerfectlyRanked(int cupIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x60011E4")]
	[Address(RVA = "0x97AC34", Offset = "0x97AC34", VA = "0x97AC34")]
	public RetryLevelTip()
	{
	}
}
[Token(Token = "0x20002AE")]
public class DisablePerPlatform : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400128F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool DisableOnQuest;

	[Token(Token = "0x60011E7")]
	[Address(RVA = "0x97ADC4", Offset = "0x97ADC4", VA = "0x97ADC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011E8")]
	[Address(RVA = "0x97AE54", Offset = "0x97AE54", VA = "0x97AE54")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60011E9")]
	[Address(RVA = "0x97AEE4", Offset = "0x97AEE4", VA = "0x97AEE4")]
	public DisablePerPlatform()
	{
	}
}
[Token(Token = "0x20002AF")]
public class RoomNumpad : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20002B0")]
	private enum SubPage
	{
		[Token(Token = "0x400129F")]
		RoomCode,
		[Token(Token = "0x40012A0")]
		Joining,
		[Token(Token = "0x40012A1")]
		RoomNotFound
	}

	[Token(Token = "0x4001291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PokeButton[] numberButtons;

	[Token(Token = "0x4001292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PokeButton undoButton;

	[Token(Token = "0x4001293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro[] roomCodeNumbers;

	[Token(Token = "0x4001294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PokeButton joinButton;

	[Token(Token = "0x4001295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshPro descriptionText;

	[Token(Token = "0x4001296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject roomCodePage;

	[Token(Token = "0x4001297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject joiningPage;

	[Token(Token = "0x4001298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject roomNotFoundPage;

	[Token(Token = "0x4001299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public PokeButton backButton;

	[Token(Token = "0x400129A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action joinGameAction;

	[Token(Token = "0x400129B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material enabledButtonMaterial;

	[Token(Token = "0x400129C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material disableButtonMaterial;

	[Token(Token = "0x400129D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Locale locale;

	[Token(Token = "0x1700022E")]
	public string RoomCode
	{
		[Token(Token = "0x60011EA")]
		[Address(RVA = "0x97AEEC", Offset = "0x97AEEC", VA = "0x97AEEC")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60011EB")]
		[Address(RVA = "0x97AEF4", Offset = "0x97AEF4", VA = "0x97AEF4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60011EC")]
	[Address(RVA = "0x97AEFC", Offset = "0x97AEFC", VA = "0x97AEFC")]
	private void Start()
	{
	}

	[Token(Token = "0x60011ED")]
	[Address(RVA = "0x97B0FC", Offset = "0x97B0FC", VA = "0x97B0FC")]
	private void ShowSubPage(SubPage subPage)
	{
	}

	[Token(Token = "0x60011EE")]
	[Address(RVA = "0x97B160", Offset = "0x97B160", VA = "0x97B160")]
	private void SetRoomCode(string code)
	{
	}

	[Token(Token = "0x60011EF")]
	[Address(RVA = "0x97B31C", Offset = "0x97B31C", VA = "0x97B31C")]
	private void UpdateRoomCode(int digit)
	{
	}

	[Token(Token = "0x60011F0")]
	[Address(RVA = "0x97B378", Offset = "0x97B378", VA = "0x97B378")]
	private void UndoRoomCodeDigit()
	{
	}

	[Token(Token = "0x60011F1")]
	[Address(RVA = "0x97B230", Offset = "0x97B230", VA = "0x97B230")]
	private void SetJoinButtonActive(bool isActive)
	{
	}

	[Token(Token = "0x60011F2")]
	[Address(RVA = "0x97B3B4", Offset = "0x97B3B4", VA = "0x97B3B4")]
	public void OnShowJoinByCode()
	{
	}

	[Token(Token = "0x60011F3")]
	[Address(RVA = "0x97B408", Offset = "0x97B408", VA = "0x97B408")]
	public void OnFailedToFindRoom()
	{
	}

	[Token(Token = "0x60011F4")]
	[Address(RVA = "0x97B410", Offset = "0x97B410", VA = "0x97B410")]
	public RoomNumpad()
	{
	}
}
[Serializable]
[Token(Token = "0x20002B2")]
[CreateAssetMenu(fileName = "NewAchievementRewardDataList", menuName = "Achievement Reward Data List")]
public class AchievementRewardDataList : ScriptableObject
{
	[Token(Token = "0x40012A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int[] accumulatedStarRewardThreshold;

	[Token(Token = "0x40012A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ItemRewardID[] accumulatedStarRewardIDs;

	[Token(Token = "0x40012A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int[] accumulatedCoinRewardThreshold;

	[Token(Token = "0x40012A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ItemRewardID[] accumulatedCoinRewardIDs;

	[Token(Token = "0x40012A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ItemRewardID[] fullyCompleteAreaRewards;

	[Token(Token = "0x40012A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int[] cupClearMaxRankInMPLevelID;

	[Token(Token = "0x40012AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ItemRewardID[] cupClearMaxRankInMPRewardID;

	[Token(Token = "0x40012AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int[] accumlatedCreativeRecipeThreshold;

	[Token(Token = "0x40012AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ItemRewardID[] accumlatedCreativeRecipeRewardIDs;

	[Token(Token = "0x40012AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int[] serveCountCreativeModeThreshold;

	[Token(Token = "0x40012AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ItemRewardID[] serveCountCreativeModeRewardIDs;

	[Token(Token = "0x40012AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AvatarCustomizationUnlockCondition[] platformAchievementUnlockCondition;

	[Token(Token = "0x40012B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ItemRewardID[] platformAchievementRewardIDs;

	[Token(Token = "0x60011F9")]
	[Address(RVA = "0x97B474", Offset = "0x97B474", VA = "0x97B474")]
	public AchievementRewardDataList()
	{
	}
}
[Token(Token = "0x20002B3")]
public class AchievementRewardHandler : SingleInstanceBehavior<AchievementRewardHandler>
{
	[Token(Token = "0x20002B4")]
	public struct AccumulationsRewards
	{
		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int threshold;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ItemRewardID reward;

		[Token(Token = "0x6001211")]
		[Address(RVA = "0x97BAF4", Offset = "0x97BAF4", VA = "0x97BAF4")]
		public AccumulationsRewards(int threshold, ItemRewardID reward)
		{
		}
	}

	[Token(Token = "0x40012B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<ItemRewardID> achievementUnlocks;

	[Token(Token = "0x40012B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Dictionary<int, ItemRewardID> MaxRankInMPRewards;

	[Token(Token = "0x40012B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AchievementRewardDataList achievementRewardDataList;

	[Token(Token = "0x40012B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int accumulatedStars;

	[Token(Token = "0x40012BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int accumulatedCoins;

	[Token(Token = "0x40012BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SaveManager saveManager;

	[Token(Token = "0x40012BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RewardBubbleSpawner RewardBubbleSpawner;

	[Token(Token = "0x1700022F")]
	public AccumulationsRewards[] AccumulatedStarRewardArray
	{
		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x97B4CC", Offset = "0x97B4CC", VA = "0x97B4CC")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60011FB")]
		[Address(RVA = "0x97B4D4", Offset = "0x97B4D4", VA = "0x97B4D4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000230")]
	public AccumulationsRewards[] AccumulatedCoinRewardArray
	{
		[Token(Token = "0x60011FC")]
		[Address(RVA = "0x97B4DC", Offset = "0x97B4DC", VA = "0x97B4DC")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60011FD")]
		[Address(RVA = "0x97B4E4", Offset = "0x97B4E4", VA = "0x97B4E4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000231")]
	public AccumulationsRewards[] AccumulatedCreativeRecipeRewardArray
	{
		[Token(Token = "0x60011FE")]
		[Address(RVA = "0x97B4EC", Offset = "0x97B4EC", VA = "0x97B4EC")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60011FF")]
		[Address(RVA = "0x97B4F4", Offset = "0x97B4F4", VA = "0x97B4F4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000232")]
	public AccumulationsRewards[] ServeCountCreativeModeRewardArray
	{
		[Token(Token = "0x6001200")]
		[Address(RVA = "0x97B4FC", Offset = "0x97B4FC", VA = "0x97B4FC")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6001201")]
		[Address(RVA = "0x97B504", Offset = "0x97B504", VA = "0x97B504")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000233")]
	public ItemRewardID[] FullyCompleteAreaRewardArray
	{
		[Token(Token = "0x6001202")]
		[Address(RVA = "0x97B50C", Offset = "0x97B50C", VA = "0x97B50C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6001203")]
		[Address(RVA = "0x97B514", Offset = "0x97B514", VA = "0x97B514")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6001204")]
	[Address(RVA = "0x97B51C", Offset = "0x97B51C", VA = "0x97B51C", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6001205")]
	[Address(RVA = "0x97BAFC", Offset = "0x97BAFC", VA = "0x97BAFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001206")]
	[Address(RVA = "0x97BD14", Offset = "0x97BD14", VA = "0x97BD14")]
	private void SpawnReward(ItemRewardID rewardID)
	{
	}

	[Token(Token = "0x6001207")]
	[Address(RVA = "0x97BEA4", Offset = "0x97BEA4", VA = "0x97BEA4")]
	public void OnRoundComplete()
	{
	}

	[Token(Token = "0x6001208")]
	[Address(RVA = "0x97BF4C", Offset = "0x97BF4C", VA = "0x97BF4C")]
	public void OnCupComplete(CupData cupData, int cupID)
	{
	}

	[Token(Token = "0x6001209")]
	[Address(RVA = "0x97BC88", Offset = "0x97BC88", VA = "0x97BC88")]
	private int GetTotalStars()
	{
		return default(int);
	}

	[Token(Token = "0x600120A")]
	[Address(RVA = "0x97BEA8", Offset = "0x97BEA8", VA = "0x97BEA8")]
	private void SpawnNewlyUnlockedCoinRewards()
	{
	}

	[Token(Token = "0x600120B")]
	[Address(RVA = "0x97C148", Offset = "0x97C148", VA = "0x97C148")]
	public bool CheckIfAreaIsFullyCleared(CupData.Environment environment)
	{
		return default(bool);
	}

	[Token(Token = "0x600120C")]
	[Address(RVA = "0x97C344", Offset = "0x97C344", VA = "0x97C344")]
	public bool CheckIfUnlockedCupMaxRankInMPReward(int cupID)
	{
		return default(bool);
	}

	[Token(Token = "0x600120D")]
	[Address(RVA = "0x97C63C", Offset = "0x97C63C", VA = "0x97C63C")]
	public void SpawnCreativeRecipeCountRewards()
	{
	}

	[Token(Token = "0x600120E")]
	[Address(RVA = "0x97C7E8", Offset = "0x97C7E8", VA = "0x97C7E8")]
	public void SpawnCreativeModeServeCountRewards()
	{
	}

	[Token(Token = "0x600120F")]
	[Address(RVA = "0x97C958", Offset = "0x97C958", VA = "0x97C958")]
	public void DebugWipeAllProgress()
	{
	}

	[Token(Token = "0x6001210")]
	[Address(RVA = "0x97C960", Offset = "0x97C960", VA = "0x97C960")]
	public AchievementRewardHandler()
	{
	}
}
[Token(Token = "0x20002B5")]
public class EndlessModeRewardBubble : NetworkedBehaviour
{
	[Token(Token = "0x40012BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform iconParent;

	[Token(Token = "0x40012C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ConsumableRegistry registry;

	[Token(Token = "0x40012C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private EndlessModeRewardSpawner endlessModeRewardSpawner;

	[Token(Token = "0x40012C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ConsumableSpawner consumableSpawner;

	[Token(Token = "0x40012C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CookingNetworkManager networkManager;

	[Token(Token = "0x40012C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject bubbleIcon;

	[Token(Token = "0x40012C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RewardBubbleVisuals bubbleVisuals;

	[Token(Token = "0x40012C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ConsumableType type;

	[Token(Token = "0x40012C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool canPop;

	[Token(Token = "0x6001212")]
	[Address(RVA = "0x97CA60", Offset = "0x97CA60", VA = "0x97CA60")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001213")]
	[Address(RVA = "0x97CD08", Offset = "0x97CD08", VA = "0x97CD08")]
	private void Start()
	{
	}

	[Token(Token = "0x6001214")]
	[Address(RVA = "0x97CFA4", Offset = "0x97CFA4", VA = "0x97CFA4")]
	private void PopBubble(CookoutAvatarHand hand)
	{
	}

	[Token(Token = "0x6001215")]
	[Address(RVA = "0x97D430", Offset = "0x97D430", VA = "0x97D430")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001216")]
	[Address(RVA = "0x97D590", Offset = "0x97D590", VA = "0x97D590")]
	public EndlessModeRewardBubble()
	{
	}
}
[Token(Token = "0x20002B6")]
public enum ItemRewardID
{
	[Token(Token = "0x40012C9")]
	CleaverStandard = 0,
	[Token(Token = "0x40012CA")]
	CleaverDamascus = 1,
	[Token(Token = "0x40012CB")]
	CleaverDemon = 2,
	[Token(Token = "0x40012CC")]
	CleaverBattleAxe = 3,
	[Token(Token = "0x40012CD")]
	Cleaver03ChukaBocho = 4,
	[Token(Token = "0x40012CE")]
	Cleaver04CeramicBlade = 5,
	[Token(Token = "0x40012CF")]
	Cleaver05SabreCleaver = 6,
	[Token(Token = "0x40012D0")]
	Cleaver06ElegantCleaver = 7,
	[Token(Token = "0x40012D1")]
	Cleaver07ButchersKnife = 8,
	[Token(Token = "0x40012D2")]
	Cleaver08BambooKnife = 9,
	[Token(Token = "0x40012D3")]
	Cleaver15CurvedCleaver = 10,
	[Token(Token = "0x40012D4")]
	Cleaver19SharpBlade = 11,
	[Token(Token = "0x40012D5")]
	Cleaver09SleekCleaver = 12,
	[Token(Token = "0x40012D6")]
	Cleaver11ChefsKnife = 13,
	[Token(Token = "0x40012D7")]
	Cleaver17IvoryCleaver = 14,
	[Token(Token = "0x40012D8")]
	Cleaver23CrystalCleaver = 15,
	[Token(Token = "0x40012D9")]
	Cleaver25Katana = 16,
	[Token(Token = "0x40012DA")]
	Cleaver10StainlessCleaver = 17,
	[Token(Token = "0x40012DB")]
	Cleaver12RoundedCleaver = 18,
	[Token(Token = "0x40012DC")]
	Cleaver13DebaKnife = 19,
	[Token(Token = "0x40012DD")]
	Cleaver18SleekDamascus = 20,
	[Token(Token = "0x40012DE")]
	Cleaver14SlimKnife = 21,
	[Token(Token = "0x40012DF")]
	Cleaver16StraightEdge = 22,
	[Token(Token = "0x40012E0")]
	Cleaver20OldReliable = 23,
	[Token(Token = "0x40012E1")]
	Cleaver21AncientButcher = 24,
	[Token(Token = "0x40012E2")]
	Cleaver22MysticSword = 25,
	[Token(Token = "0x40012E3")]
	Cleaver24Mjolnir = 26,
	[Token(Token = "0x40012E4")]
	Cleaver26ElvenBlade = 27,
	[Token(Token = "0x40012E5")]
	Cleaver27StoneAgeAxe = 28,
	[Token(Token = "0x40012E6")]
	Cleaver28LeekKnife = 29,
	[Token(Token = "0x40012E7")]
	Cleaver29BlackSmithsKnife = 30,
	[Token(Token = "0x40012E8")]
	Cleaver30OrcHakker = 31,
	[Token(Token = "0x40012E9")]
	Cleaver31CarrotCleaver = 32,
	[Token(Token = "0x40012EA")]
	Cleaver32MyFirstCleaver = 33,
	[Token(Token = "0x40012EB")]
	Cleaver33RoyalCleaver = 34,
	[Token(Token = "0x40012EC")]
	Cleaver34CandyCaneCleaver = 35,
	[Token(Token = "0x40012ED")]
	Cleaver35PocketKnife = 36,
	[Token(Token = "0x40012EE")]
	Cleaver36ButterKnife = 37,
	[Token(Token = "0x40012EF")]
	Cleaver37DiyAxe = 38,
	[Token(Token = "0x40012F0")]
	Cleaver38DiyHammer = 39,
	[Token(Token = "0x40012F1")]
	Cleaver39VikingAxe = 40,
	[Token(Token = "0x40012F2")]
	Cleaver40DiySaw = 41,
	[Token(Token = "0x40012F3")]
	Cleaver41CutesyCleaver = 42,
	[Token(Token = "0x40012F4")]
	Cleaver42HeavyMetalAxe = 43,
	[Token(Token = "0x40012F5")]
	Cleaver43GoldenCleaver = 44,
	[Token(Token = "0x40012F6")]
	FridgeStandard = 1000,
	[Token(Token = "0x40012F7")]
	FridgeCopper = 1001,
	[Token(Token = "0x40012F8")]
	FridgeSilver = 1002,
	[Token(Token = "0x40012F9")]
	FridgeGold = 1003,
	[Token(Token = "0x40012FA")]
	FridgeFullmoon = 1004,
	[Token(Token = "0x40012FB")]
	FridgeDessert = 1005,
	[Token(Token = "0x40012FC")]
	FridgeCute = 1006,
	[Token(Token = "0x40012FD")]
	FridgeFrozen = 1007,
	[Token(Token = "0x40012FE")]
	FridgeFineChina = 1008,
	[Token(Token = "0x40012FF")]
	FridgeHoliday = 1009,
	[Token(Token = "0x4001300")]
	FridgeCow = 1010,
	[Token(Token = "0x4001301")]
	FridgeFlames = 1011,
	[Token(Token = "0x4001302")]
	FridgeBlackMarble = 1012,
	[Token(Token = "0x4001303")]
	FridgeWhiteMarble = 1013,
	[Token(Token = "0x4001304")]
	FridgeStainlessSteel = 1014,
	[Token(Token = "0x4001305")]
	CuttingBoardStandard = 2000,
	[Token(Token = "0x4001306")]
	CuttingBoardCopper = 2001,
	[Token(Token = "0x4001307")]
	CuttingBoardSilver = 2002,
	[Token(Token = "0x4001308")]
	CuttingBoard02Novelty = 2003,
	[Token(Token = "0x4001309")]
	CuttingBoard03Ash = 2004,
	[Token(Token = "0x400130A")]
	CuttingBoard04Checkered = 2005,
	[Token(Token = "0x400130B")]
	CuttingBoard05Herringbone = 2006,
	[Token(Token = "0x400130C")]
	CuttingBoard06Striped = 2007,
	[Token(Token = "0x400130D")]
	CuttingBoard07Gradient = 2008,
	[Token(Token = "0x400130E")]
	CuttingBoard08Wavy = 2009,
	[Token(Token = "0x400130F")]
	CuttingBoard09BlueRiver = 2010,
	[Token(Token = "0x4001310")]
	CuttingBoard10Opal = 2011,
	[Token(Token = "0x4001311")]
	CuttingBoard11Holiday = 2012,
	[Token(Token = "0x4001312")]
	CuttingBoard12Hexagon = 2013,
	[Token(Token = "0x4001313")]
	CuttingBoard13MarbleBlack = 2014,
	[Token(Token = "0x4001314")]
	CuttingBoard14MarbleWhite = 2015,
	[Token(Token = "0x4001315")]
	CuttingBoard15RetroBrand = 2016
}
[Token(Token = "0x20002B7")]
public enum RewardType
{
	[Token(Token = "0x4001317")]
	Cleaver,
	[Token(Token = "0x4001318")]
	Fridge,
	[Token(Token = "0x4001319")]
	CuttingBoard
}
[Token(Token = "0x20002B8")]
public class ItemRewardsRegistry : SingleInstanceBehavior<ItemRewardsRegistry>
{
	[Token(Token = "0x400131A")]
	public const int itemsPerCategory = 1000;

	[Token(Token = "0x400131C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ItemRewardID, RewardItem> rewardDictionary;

	[Token(Token = "0x400131D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ItemRewardID, string> rewardUnlockTexts;

	[Token(Token = "0x400131E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<ItemRewardID, string> rewardUnlockTextsBubble;

	[Token(Token = "0x400131F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private CupList cupList;

	[Token(Token = "0x4001320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private EndlessRewardList endlessRewardList;

	[Token(Token = "0x4001321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AchievementRewardDataList achievementRewardDataList;

	[Token(Token = "0x4001322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Cleaver[] cleavers;

	[Token(Token = "0x4001323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private CleaverList cleaverList;

	[Token(Token = "0x4001324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Fridge[] fridges;

	[Token(Token = "0x4001325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private FridgeList fridgeList;

	[Token(Token = "0x4001326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private CuttingBoard[] cuttingBoards;

	[Token(Token = "0x4001327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private CuttingBoardList cuttingBoardList;

	[Token(Token = "0x4001328")]
	private const string unlockByEndlessModeString = "inv_unlock_condition_1";

	[Token(Token = "0x4001329")]
	private const string unlockByProgressionSingularString = "inv_unlock_condition_2";

	[Token(Token = "0x400132A")]
	private const string unlockByProgressionPluralString = "inv_unlock_condition_3";

	[Token(Token = "0x400132B")]
	private const string unlockByAccumulateStarsString = "inv_unlock_condition_5";

	[Token(Token = "0x400132C")]
	private const string unlockByAccumulateCoinsString = "inv_unlock_condition_6";

	[Token(Token = "0x400132D")]
	private const string unlockByMaxRankInMPString = "inv_unlock_condition_8";

	[Token(Token = "0x400132E")]
	private const string fullyCompleteAreaBaseString = "inv_unlock_condition_";

	[Token(Token = "0x400132F")]
	private const string unlockByEndlessModeBubbleString = "inv_unlock_condition_bubble_1";

	[Token(Token = "0x4001330")]
	private const string unlockByProgressionSingularBubbleString = "inv_unlock_condition_bubble_2";

	[Token(Token = "0x4001331")]
	private const string unlockByProgressionPluralBubbleString = "inv_unlock_condition_bubble_3";

	[Token(Token = "0x4001332")]
	private const string unlockByAccumulateStarsBubbleString = "inv_unlock_condition_bubble_5";

	[Token(Token = "0x4001333")]
	private const string unlockByAccumulateCoinsBubbleString = "inv_unlock_condition_bubble_6";

	[Token(Token = "0x4001334")]
	private const string unlockByMaxRankInMPBubbleString = "inv_unlock_condition_bubble_8";

	[Token(Token = "0x4001335")]
	private const string fullyCompleteAreaBaseBubbleString = "inv_unlock_condition_bubble_";

	[Token(Token = "0x4001336")]
	private const string unlockByAccumulatedCreativeRecipeString = "inv_unlock_condition_bubble_14";

	[Token(Token = "0x4001337")]
	private const string unlockByCreativeModeServeCountString = "inv_unlock_condition_bubble_16";

	[Token(Token = "0x4001338")]
	private const string unlockByPlatformAchievementString = "inv_unlock_condition_bubble_18";

	[Token(Token = "0x4001339")]
	private const int fullyCompleteAreaStartIndex = 9;

	[Token(Token = "0x17000234")]
	public int[] RewardTypeCount
	{
		[Token(Token = "0x6001217")]
		[Address(RVA = "0x97D598", Offset = "0x97D598", VA = "0x97D598")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6001218")]
		[Address(RVA = "0x97D5A0", Offset = "0x97D5A0", VA = "0x97D5A0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6001219")]
	[Address(RVA = "0x97D5A8", Offset = "0x97D5A8", VA = "0x97D5A8", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600121A")]
	[Address(RVA = "0x97ECE4", Offset = "0x97ECE4", VA = "0x97ECE4")]
	private void AddReward(ItemRewardID rewardID, RewardItem data)
	{
	}

	[Token(Token = "0x600121B")]
	[Address(RVA = "0x97EECC", Offset = "0x97EECC", VA = "0x97EECC")]
	private void Start()
	{
	}

	[Token(Token = "0x600121C")]
	[Address(RVA = "0x97EF08", Offset = "0x97EF08", VA = "0x97EF08")]
	public static RewardType GetRewardType(ItemRewardID rewardID)
	{
		return default(RewardType);
	}

	[Token(Token = "0x600121D")]
	[Address(RVA = "0x97EF80", Offset = "0x97EF80", VA = "0x97EF80")]
	public RewardItem GetRewardData(ItemRewardID rewardID)
	{
		return null;
	}

	[Token(Token = "0x600121E")]
	[Address(RVA = "0x97ECD8", Offset = "0x97ECD8", VA = "0x97ECD8")]
	public static int GetOffset(RewardType type)
	{
		return default(int);
	}

	[Token(Token = "0x600121F")]
	[Address(RVA = "0x97EA00", Offset = "0x97EA00", VA = "0x97EA00")]
	private void TryAddUnlockText(ItemRewardID reward, string unlockText)
	{
	}

	[Token(Token = "0x6001220")]
	[Address(RVA = "0x97EB6C", Offset = "0x97EB6C", VA = "0x97EB6C")]
	private void TryAddUnlockTextBubble(ItemRewardID reward, string unlockTextBubble)
	{
	}

	[Token(Token = "0x6001221")]
	[Address(RVA = "0x97EFD8", Offset = "0x97EFD8", VA = "0x97EFD8")]
	public int NumberOfRewardsOfType(RewardType type)
	{
		return default(int);
	}

	[Token(Token = "0x6001222")]
	[Address(RVA = "0x97F078", Offset = "0x97F078", VA = "0x97F078")]
	public List<CleaverData> GetAllCleavers()
	{
		return null;
	}

	[Token(Token = "0x6001223")]
	[Address(RVA = "0x97F094", Offset = "0x97F094", VA = "0x97F094")]
	public List<FridgeData> GetAllFridges()
	{
		return null;
	}

	[Token(Token = "0x6001224")]
	[Address(RVA = "0x97F0B0", Offset = "0x97F0B0", VA = "0x97F0B0")]
	public List<CuttingBoardData> GetAllCuttingBoards()
	{
		return null;
	}

	[Token(Token = "0x6001225")]
	[Address(RVA = "0x97F0CC", Offset = "0x97F0CC", VA = "0x97F0CC")]
	public ItemRewardsRegistry()
	{
	}
}
[Token(Token = "0x20002B9")]
public class RewardBubble : NetworkedBehaviour, IPunObservable
{
	[Token(Token = "0x20002BA")]
	public enum BubbleType
	{
		[Token(Token = "0x4001357")]
		Coins,
		[Token(Token = "0x4001358")]
		Potion,
		[Token(Token = "0x4001359")]
		Item
	}

	[Token(Token = "0x400133A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action<RewardBubble> OnBubblePopped;

	[Token(Token = "0x400133B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshPro TextFeedback;

	[Token(Token = "0x400133C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform iconParent;

	[Token(Token = "0x400133D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject[] coinIcons;

	[Token(Token = "0x400133E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private int largeCoinIconThreshold;

	[Token(Token = "0x400133F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private int mediumCoinIconThreshold;

	[Token(Token = "0x4001340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float bubbleIconToButtonTime;

	[Token(Token = "0x4001341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float bubbleIconFlyDelay;

	[Token(Token = "0x4001342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool canPop;

	[Token(Token = "0x4001343")]
	private const float trailWidth = 0.22f;

	[Token(Token = "0x4001344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool isPopped;

	[Token(Token = "0x4001345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private BubbleType bubbleType;

	[Token(Token = "0x4001346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int coinReward;

	[Token(Token = "0x4001347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private ConsumableType consumableReward;

	[Token(Token = "0x4001348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ItemRewardID itemReward;

	[Token(Token = "0x4001349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private SaveManager saveManager;

	[Token(Token = "0x400134A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private RewardBubbleVisuals visuals;

	[Token(Token = "0x400134B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ItemRewardsRegistry rewardsRegistry;

	[Token(Token = "0x400134C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject bubbleIcon;

	[Token(Token = "0x400134D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject bubbleIconTrailGO;

	[Token(Token = "0x400134E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private TrailRenderer bubbleIconTrail;

	[Token(Token = "0x400134F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject bubbleIconRoot;

	[Token(Token = "0x4001350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private ConsumableRegistry consumableRegistry;

	[Token(Token = "0x4001351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private MaterialPropertyBlock materialPropertyBlock;

	[Token(Token = "0x4001352")]
	private const string propertyTextureIndex = "_TextureIndex";

	[Token(Token = "0x4001353")]
	private const string localizationRewardCoins = "reward_coins";

	[Token(Token = "0x4001354")]
	private const string tagPlayerHand = "PlayerHand";

	[Token(Token = "0x4001355")]
	private const string tagGrabbable = "Grabbable";

	[Token(Token = "0x6001226")]
	[Address(RVA = "0x97F138", Offset = "0x97F138", VA = "0x97F138")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001227")]
	[Address(RVA = "0x97F4B0", Offset = "0x97F4B0", VA = "0x97F4B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001228")]
	[Address(RVA = "0x97FF70", Offset = "0x97FF70", VA = "0x97FF70")]
	public void PopBubble([Optional] CookoutAvatarHand hand)
	{
	}

	[Token(Token = "0x6001229")]
	[Address(RVA = "0x980C40", Offset = "0x980C40", VA = "0x980C40")]
	private void ScaleTrailWidth(float newWidth)
	{
	}

	[Token(Token = "0x600122A")]
	[Address(RVA = "0x980C5C", Offset = "0x980C5C", VA = "0x980C5C")]
	private void FloatUpAndDestroy(float yPos)
	{
	}

	[Token(Token = "0x600122B")]
	[Address(RVA = "0x980D4C", Offset = "0x980D4C", VA = "0x980D4C", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600122C")]
	[Address(RVA = "0x980EEC", Offset = "0x980EEC", VA = "0x980EEC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600122D")]
	[Address(RVA = "0x981030", Offset = "0x981030", VA = "0x981030")]
	public RewardBubble()
	{
	}
}
[Token(Token = "0x20002BC")]
public class RewardBubbleSpawner : SingleInstanceNetworkedBehavior<RewardBubbleSpawner>, IPunObservable
{
	[Token(Token = "0x400135C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public int allPlayersBubbleCount;

	[Token(Token = "0x400135D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Vector3[] rewardBubbleSpawnPosition;

	[Token(Token = "0x400135E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float coinBubbleMinSize;

	[Token(Token = "0x400135F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float coinBubbleMaxSize;

	[Token(Token = "0x4001360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private int coinBubbleMaxSizeCoinVal;

	[Token(Token = "0x4001361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float consumableBubbleScale;

	[Token(Token = "0x4001362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float itemRewardBubbleScale;

	[Token(Token = "0x4001363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float minYSpeed;

	[Token(Token = "0x4001364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float maxYSpeed;

	[Token(Token = "0x4001365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float minXSpeed;

	[Token(Token = "0x4001366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float maxXSpeed;

	[Token(Token = "0x4001367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float minZSpeed;

	[Token(Token = "0x4001368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float maxZSpeed;

	[Token(Token = "0x4001369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private float minZOffset;

	[Token(Token = "0x400136A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float maxZOffset;

	[Token(Token = "0x400136B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private float maxTimeSpeed;

	[Token(Token = "0x400136C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float minTimeSpeed;

	[Token(Token = "0x400136D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject[] bubblePrefabs;

	[Token(Token = "0x400136E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 bubbleOffset;

	[Token(Token = "0x400136F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<RewardBubble> spawnedOwnedBubbles;

	[Token(Token = "0x4001370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private CookingCup cookingCup;

	[Token(Token = "0x4001371")]
	private const float tau = (float)Math.PI * 2f;

	[Token(Token = "0x17000235")]
	public bool HasActiveRewardBubbles
	{
		[Token(Token = "0x6001233")]
		[Address(RVA = "0x9816A4", Offset = "0x9816A4", VA = "0x9816A4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000236")]
	private int GetRandomDirection
	{
		[Token(Token = "0x6001234")]
		[Address(RVA = "0x9816F4", Offset = "0x9816F4", VA = "0x9816F4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001235")]
	[Address(RVA = "0x981718", Offset = "0x981718", VA = "0x981718")]
	private void Start()
	{
	}

	[Token(Token = "0x6001236")]
	[Address(RVA = "0x981800", Offset = "0x981800", VA = "0x981800")]
	public void SpawnCoinBubble(int coins, bool localPlayerOnly = false)
	{
	}

	[Token(Token = "0x6001237")]
	[Address(RVA = "0x9821F4", Offset = "0x9821F4", VA = "0x9821F4")]
	public void SpawnConsumableBubble(ConsumableType type, bool localPlayerOnly = false)
	{
	}

	[Token(Token = "0x6001238")]
	[Address(RVA = "0x97BD30", Offset = "0x97BD30", VA = "0x97BD30")]
	public void SpawnItemBubble(ItemRewardID item, bool localPlayerOnly = false)
	{
	}

	[Token(Token = "0x6001239")]
	[Address(RVA = "0x9819CC", Offset = "0x9819CC", VA = "0x9819CC")]
	[PunRPC]
	private void SpawnRewardBubblesRPC(int bubbleType, int payload)
	{
	}

	[Token(Token = "0x600123A")]
	[Address(RVA = "0x9823E4", Offset = "0x9823E4", VA = "0x9823E4")]
	private void OnBubblePopped(RewardBubble poppedBubble)
	{
	}

	[Token(Token = "0x600123B")]
	[Address(RVA = "0x9825EC", Offset = "0x9825EC", VA = "0x9825EC")]
	[PunRPC]
	private void ClearRewardBubbleRPC()
	{
	}

	[Token(Token = "0x600123C")]
	[Address(RVA = "0x98270C", Offset = "0x98270C", VA = "0x98270C")]
	[PunRPC]
	private void DecreaseRewardBubblesCountRPC()
	{
	}

	[Token(Token = "0x600123D")]
	[Address(RVA = "0x98271C", Offset = "0x98271C", VA = "0x98271C")]
	[PunRPC]
	private void CheckForMidCupAchievementBubblesRPC()
	{
	}

	[Token(Token = "0x600123E")]
	[Address(RVA = "0x9827E4", Offset = "0x9827E4", VA = "0x9827E4", Slot = "6")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600123F")]
	[Address(RVA = "0x9828A0", Offset = "0x9828A0", VA = "0x9828A0")]
	public RewardBubbleSpawner()
	{
	}
}
[Token(Token = "0x20002BE")]
public class RewardBubbleVisuals : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float sizeVariation;

	[Token(Token = "0x4001378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Color particleColor;

	[Token(Token = "0x4001379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform popParticlesAnchor;

	[Token(Token = "0x400137A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material questMaterial;

	[Token(Token = "0x400137B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private ParticleSystem smallBubbleParticles;

	[Token(Token = "0x400137C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool isEndlessModeBubble;

	[Token(Token = "0x400137D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 targetScale;

	[Token(Token = "0x400137E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float timeOffset;

	[Token(Token = "0x400137F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float scaleTimeOffset;

	[Token(Token = "0x4001380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float timeSpeed;

	[Token(Token = "0x4001381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 speeds;

	[Token(Token = "0x4001382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isPopped;

	[Token(Token = "0x4001383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 originPos;

	[Token(Token = "0x4001384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool spawnAnimationDone;

	[Token(Token = "0x4001385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private MeshRenderer bubbleRenderer;

	[Token(Token = "0x4001386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform myTransform;

	[Token(Token = "0x17000239")]
	public bool IsPopped
	{
		[Token(Token = "0x6001248")]
		[Address(RVA = "0x982B7C", Offset = "0x982B7C", VA = "0x982B7C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001247")]
		[Address(RVA = "0x97D2C8", Offset = "0x97D2C8", VA = "0x97D2C8")]
		set
		{
		}
	}

	[Token(Token = "0x6001249")]
	[Address(RVA = "0x982B84", Offset = "0x982B84", VA = "0x982B84")]
	private void Awake()
	{
	}

	[Token(Token = "0x600124A")]
	[Address(RVA = "0x982C44", Offset = "0x982C44", VA = "0x982C44")]
	private void Start()
	{
	}

	[Token(Token = "0x600124B")]
	[Address(RVA = "0x97F430", Offset = "0x97F430", VA = "0x97F430")]
	public void Init(Vector3 targetScale, float timeOffset, Vector3 speeds, Vector3 posOffset, float timeSpeed)
	{
	}

	[Token(Token = "0x600124C")]
	[Address(RVA = "0x982E84", Offset = "0x982E84", VA = "0x982E84")]
	private void Update()
	{
	}

	[Token(Token = "0x600124D")]
	[Address(RVA = "0x982F7C", Offset = "0x982F7C", VA = "0x982F7C")]
	public RewardBubbleVisuals()
	{
	}
}
[Token(Token = "0x20002BF")]
public abstract class RewardItem : ScriptableObject
{
	[Token(Token = "0x4001387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ItemRewardID id;

	[Token(Token = "0x4001388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string stringID;

	[Token(Token = "0x4001389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite icon;

	[Token(Token = "0x400138A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject bubbleIcon;

	[Token(Token = "0x400138B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int inventorySortingNumber;

	[Token(Token = "0x1700023A")]
	public string Name
	{
		[Token(Token = "0x600124F")]
		[Address(RVA = "0x980BE8", Offset = "0x980BE8", VA = "0x980BE8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700023B")]
	public string Description
	{
		[Token(Token = "0x6001250")]
		[Address(RVA = "0x98308C", Offset = "0x98308C", VA = "0x98308C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700023C")]
	public string UnlockInstruction
	{
		[Token(Token = "0x6001251")]
		[Address(RVA = "0x98311C", Offset = "0x98311C", VA = "0x98311C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6001252")]
		[Address(RVA = "0x983124", Offset = "0x983124", VA = "0x983124")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700023D")]
	public string UnlockInstructionBubble
	{
		[Token(Token = "0x6001253")]
		[Address(RVA = "0x98312C", Offset = "0x98312C", VA = "0x98312C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6001254")]
		[Address(RVA = "0x983134", Offset = "0x983134", VA = "0x983134")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6001255")]
	[Address(RVA = "0x98313C", Offset = "0x98313C", VA = "0x98313C")]
	protected RewardItem()
	{
	}
}
[Token(Token = "0x20002C0")]
public class UnlockCheckOnLoad : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20002C1")]
	[CompilerGenerated]
	private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700023E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600125C")]
			[Address(RVA = "0x983A08", Offset = "0x983A08", VA = "0x983A08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600125E")]
			[Address(RVA = "0x983A50", Offset = "0x983A50", VA = "0x983A50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0x9831A4", Offset = "0x9831A4", VA = "0x9831A4")]
		[DebuggerHidden]
		public <Start>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0x9839C4", Offset = "0x9839C4", VA = "0x9839C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0x9839C8", Offset = "0x9839C8", VA = "0x9839C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0x983A10", Offset = "0x983A10", VA = "0x983A10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6001256")]
	[Address(RVA = "0x983144", Offset = "0x983144", VA = "0x983144")]
	[IteratorStateMachine(typeof(<Start>d__0))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6001257")]
	[Address(RVA = "0x9831CC", Offset = "0x9831CC", VA = "0x9831CC")]
	public static void RefreshUnlocks()
	{
	}

	[Token(Token = "0x6001258")]
	[Address(RVA = "0x9839BC", Offset = "0x9839BC", VA = "0x9839BC")]
	public UnlockCheckOnLoad()
	{
	}
}
[Token(Token = "0x20002C2")]
public class SaveManager : SingleInstanceBehavior<SaveManager>
{
	[Token(Token = "0x20002C3")]
	public delegate void CoinCountChangedHandler();

	[Token(Token = "0x20002C4")]
	public delegate void ConsumableCountChangedHandler(ConsumableType type, int count);

	[Token(Token = "0x20002C5")]
	public delegate void ConsumableUnlockedHandler(ConsumableType type, bool isUnlocked);

	[Token(Token = "0x20002C6")]
	public delegate void AutoHoldChanged(bool isActive);

	[Token(Token = "0x20002C8")]
	[CompilerGenerated]
	private sealed class <Start>d__83 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SaveManager <>4__this;

		[Token(Token = "0x1700025C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012F6")]
			[Address(RVA = "0x989D98", Offset = "0x989D98", VA = "0x989D98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012F8")]
			[Address(RVA = "0x989DE0", Offset = "0x989DE0", VA = "0x989DE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0x9842DC", Offset = "0x9842DC", VA = "0x9842DC")]
		[DebuggerHidden]
		public <Start>d__83(int <>1__state)
		{
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0x989440", Offset = "0x989440", VA = "0x989440", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0x989444", Offset = "0x989444", VA = "0x989444", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0x989DA0", Offset = "0x989DA0", VA = "0x989DA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly List<int> defaultItems;

	[Token(Token = "0x4001391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly int[] emptyLoadout;

	[Token(Token = "0x4001396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private CupList cupList;

	[Token(Token = "0x4001397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public bool initialLoadComplete;

	[Token(Token = "0x400139A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private cookout.loadsave.v4.SaveGameData savegame;

	[Token(Token = "0x400139B")]
	private const string unknownUserName = "UNKNOWN";

	[Token(Token = "0x17000240")]
	public int CoinCount
	{
		[Token(Token = "0x6001267")]
		[Address(RVA = "0x980850", Offset = "0x980850", VA = "0x980850")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000241")]
	public int AccumulatedCoinCount
	{
		[Token(Token = "0x6001268")]
		[Address(RVA = "0x97BCF8", Offset = "0x97BCF8", VA = "0x97BCF8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000242")]
	public int[] ConsumableCount
	{
		[Token(Token = "0x6001269")]
		[Address(RVA = "0x980914", Offset = "0x980914", VA = "0x980914")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000243")]
	public bool[] ConsumablesUnlocked
	{
		[Token(Token = "0x600126A")]
		[Address(RVA = "0x983984", Offset = "0x983984", VA = "0x983984")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000244")]
	public int EndlessModeHighScore
	{
		[Token(Token = "0x600126B")]
		[Address(RVA = "0x9839A0", Offset = "0x9839A0", VA = "0x9839A0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000245")]
	public ItemRewardID CurrentCleaver
	{
		[Token(Token = "0x600126C")]
		[Address(RVA = "0x983F38", Offset = "0x983F38", VA = "0x983F38")]
		get
		{
			return default(ItemRewardID);
		}
	}

	[Token(Token = "0x17000246")]
	public ItemRewardID CurrentCuttingBoard
	{
		[Token(Token = "0x600126D")]
		[Address(RVA = "0x983F54", Offset = "0x983F54", VA = "0x983F54")]
		get
		{
			return default(ItemRewardID);
		}
	}

	[Token(Token = "0x17000247")]
	public ItemRewardID CurrentFridge
	{
		[Token(Token = "0x600126E")]
		[Address(RVA = "0x983F70", Offset = "0x983F70", VA = "0x983F70")]
		get
		{
			return default(ItemRewardID);
		}
	}

	[Token(Token = "0x17000248")]
	public int[] StoredLoadout
	{
		[Token(Token = "0x600126F")]
		[Address(RVA = "0x983F8C", Offset = "0x983F8C", VA = "0x983F8C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000249")]
	public ReadOnlyCollection<CookoutUserId> BlockedPlayers
	{
		[Token(Token = "0x6001270")]
		[Address(RVA = "0x983FE0", Offset = "0x983FE0", VA = "0x983FE0")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6001271")]
		[Address(RVA = "0x983FE8", Offset = "0x983FE8", VA = "0x983FE8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700024A")]
	public bool HasRetriedALevel
	{
		[Token(Token = "0x6001272")]
		[Address(RVA = "0x97A9D8", Offset = "0x97A9D8", VA = "0x97A9D8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700024B")]
	public bool HasSwitchedCreativeModeIngredients
	{
		[Token(Token = "0x6001273")]
		[Address(RVA = "0x983FF0", Offset = "0x983FF0", VA = "0x983FF0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700024C")]
	public bool HasTriedCreativeMode
	{
		[Token(Token = "0x6001274")]
		[Address(RVA = "0x98400C", Offset = "0x98400C", VA = "0x98400C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700024D")]
	public IList<CupData> Cups
	{
		[Token(Token = "0x6001275")]
		[Address(RVA = "0x984028", Offset = "0x984028", VA = "0x984028")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700024E")]
	public int UnlockedRecipeCount
	{
		[Token(Token = "0x6001276")]
		[Address(RVA = "0x97C790", Offset = "0x97C790", VA = "0x97C790")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700024F")]
	public int ServeCountCreativeMode
	{
		[Token(Token = "0x6001277")]
		[Address(RVA = "0x97C93C", Offset = "0x97C93C", VA = "0x97C93C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000250")]
	public int RabbitsServed
	{
		[Token(Token = "0x6001278")]
		[Address(RVA = "0x984044", Offset = "0x984044", VA = "0x984044")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000251")]
	public int StolenIngredients
	{
		[Token(Token = "0x6001279")]
		[Address(RVA = "0x984060", Offset = "0x984060", VA = "0x984060")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000252")]
	public int DishesWashed
	{
		[Token(Token = "0x600127A")]
		[Address(RVA = "0x98407C", Offset = "0x98407C", VA = "0x98407C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000253")]
	public int GrilledIngredients
	{
		[Token(Token = "0x600127B")]
		[Address(RVA = "0x984098", Offset = "0x984098", VA = "0x984098")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000254")]
	public int BotOvercharged
	{
		[Token(Token = "0x600127C")]
		[Address(RVA = "0x9840B4", Offset = "0x9840B4", VA = "0x9840B4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000255")]
	public int BurntIngredients
	{
		[Token(Token = "0x600127D")]
		[Address(RVA = "0x9840D0", Offset = "0x9840D0", VA = "0x9840D0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000256")]
	public int CoinsSpent
	{
		[Token(Token = "0x600127E")]
		[Address(RVA = "0x9840EC", Offset = "0x9840EC", VA = "0x9840EC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000257")]
	public int CustomersServed
	{
		[Token(Token = "0x600127F")]
		[Address(RVA = "0x984108", Offset = "0x984108", VA = "0x984108")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000258")]
	public bool[] UnlockedAchievements
	{
		[Token(Token = "0x6001280")]
		[Address(RVA = "0x984124", Offset = "0x984124", VA = "0x984124")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000259")]
	public bool NewAvatarOptionsAvailable
	{
		[Token(Token = "0x6001281")]
		[Address(RVA = "0x984140", Offset = "0x984140", VA = "0x984140")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700025A")]
	public bool HasTriedOculusAvatar
	{
		[Token(Token = "0x6001282")]
		[Address(RVA = "0x984200", Offset = "0x984200", VA = "0x984200")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700025B")]
	public ReadOnlyCollection<string> BlockedPlayerNames
	{
		[Token(Token = "0x6001283")]
		[Address(RVA = "0x98421C", Offset = "0x98421C", VA = "0x98421C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6001284")]
		[Address(RVA = "0x984224", Offset = "0x984224", VA = "0x984224")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x14000026")]
	public event CoinCountChangedHandler OnCoinCountChanged
	{
		[Token(Token = "0x600125F")]
		[Address(RVA = "0x983A58", Offset = "0x983A58", VA = "0x983A58")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001260")]
		[Address(RVA = "0x983AF4", Offset = "0x983AF4", VA = "0x983AF4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000027")]
	public event ConsumableCountChangedHandler OnConsumableCountChanged
	{
		[Token(Token = "0x6001261")]
		[Address(RVA = "0x983B90", Offset = "0x983B90", VA = "0x983B90")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001262")]
		[Address(RVA = "0x983C2C", Offset = "0x983C2C", VA = "0x983C2C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000028")]
	public event ConsumableUnlockedHandler OnConsumableUnlocked
	{
		[Token(Token = "0x6001263")]
		[Address(RVA = "0x983CC8", Offset = "0x983CC8", VA = "0x983CC8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001264")]
		[Address(RVA = "0x983D64", Offset = "0x983D64", VA = "0x983D64")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000029")]
	public event AutoHoldChanged OnAutoHoldChanged
	{
		[Token(Token = "0x6001265")]
		[Address(RVA = "0x983E00", Offset = "0x983E00", VA = "0x983E00")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001266")]
		[Address(RVA = "0x983E9C", Offset = "0x983E9C", VA = "0x983E9C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001285")]
	[Address(RVA = "0x98422C", Offset = "0x98422C", VA = "0x98422C", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6001286")]
	[Address(RVA = "0x984274", Offset = "0x984274", VA = "0x984274")]
	[IteratorStateMachine(typeof(<Start>d__83))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6001287")]
	[Address(RVA = "0x984304", Offset = "0x984304", VA = "0x984304")]
	private void LoadBeatenCups()
	{
	}

	[Token(Token = "0x6001288")]
	[Address(RVA = "0x984780", Offset = "0x984780", VA = "0x984780")]
	public bool GetHasBeatenCups()
	{
		return default(bool);
	}

	[Token(Token = "0x6001289")]
	[Address(RVA = "0x9755A4", Offset = "0x9755A4", VA = "0x9755A4")]
	public MapProgression.Rank[] GetBeatenCups()
	{
		return null;
	}

	[Token(Token = "0x600128A")]
	[Address(RVA = "0x976714", Offset = "0x976714", VA = "0x976714")]
	public void UpdateCupsBeatenStatus(MapProgression.Rank cupBeaten, int cupID)
	{
	}

	[Token(Token = "0x600128B")]
	[Address(RVA = "0x975C2C", Offset = "0x975C2C", VA = "0x975C2C")]
	public int[] GetCupStarCounts()
	{
		return null;
	}

	[Token(Token = "0x600128C")]
	[Address(RVA = "0x97680C", Offset = "0x97680C", VA = "0x97680C")]
	public void SaveCupStarCount(int cupIndex, int starCount)
	{
	}

	[Token(Token = "0x600128D")]
	[Address(RVA = "0x97C470", Offset = "0x97C470", VA = "0x97C470")]
	public bool[] GetCupMaxRankedInMP()
	{
		return null;
	}

	[Token(Token = "0x600128E")]
	[Address(RVA = "0x976844", Offset = "0x976844", VA = "0x976844")]
	public void SaveCupMaxRankedInMP(int cupIndex, bool completed)
	{
	}

	[Token(Token = "0x600128F")]
	[Address(RVA = "0x98086C", Offset = "0x98086C", VA = "0x98086C")]
	public void SaveCoinCount(int newCoinsValue, int coinsEarned = 0)
	{
	}

	[Token(Token = "0x6001290")]
	[Address(RVA = "0x984A60", Offset = "0x984A60", VA = "0x984A60")]
	private void LoadConsumables()
	{
	}

	[Token(Token = "0x6001291")]
	[Address(RVA = "0x985098", Offset = "0x985098", VA = "0x985098")]
	public void SaveConsumableCount(ConsumableType consumableType, int count)
	{
	}

	[Token(Token = "0x6001292")]
	[Address(RVA = "0x985110", Offset = "0x985110", VA = "0x985110")]
	public void SaveEndlessModeHighScore(int newHighscore)
	{
	}

	[Token(Token = "0x6001293")]
	[Address(RVA = "0x97C0E8", Offset = "0x97C0E8", VA = "0x97C0E8")]
	public bool GetItemUnlocked(ItemRewardID item)
	{
		return default(bool);
	}

	[Token(Token = "0x6001294")]
	[Address(RVA = "0x980930", Offset = "0x980930", VA = "0x980930")]
	public void SetUnlockItem(ItemRewardID item, bool unlocked)
	{
	}

	[Token(Token = "0x6001295")]
	[Address(RVA = "0x98512C", Offset = "0x98512C", VA = "0x98512C")]
	private void LoadUnlockedItems()
	{
	}

	[Token(Token = "0x6001296")]
	[Address(RVA = "0x985514", Offset = "0x985514", VA = "0x985514")]
	public void SaveEquippedCleaver(ItemRewardID cleaver)
	{
	}

	[Token(Token = "0x6001297")]
	[Address(RVA = "0x985530", Offset = "0x985530", VA = "0x985530")]
	public void SaveEquippedCuttingBoard(ItemRewardID cuttingBoard)
	{
	}

	[Token(Token = "0x6001298")]
	[Address(RVA = "0x98554C", Offset = "0x98554C", VA = "0x98554C")]
	public void SaveEquippedFridge(ItemRewardID fridge)
	{
	}

	[Token(Token = "0x6001299")]
	[Address(RVA = "0x9808B4", Offset = "0x9808B4", VA = "0x9808B4")]
	public void SetConsumableUnlocked(bool isUnlocked, ConsumableType type)
	{
	}

	[Token(Token = "0x600129A")]
	[Address(RVA = "0x985568", Offset = "0x985568", VA = "0x985568")]
	public void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x600129B")]
	[Address(RVA = "0x9855E4", Offset = "0x9855E4", VA = "0x9855E4")]
	public void StorePlayerPotionLoadout(int[] loadoutPotions)
	{
	}

	[Token(Token = "0x600129C")]
	[Address(RVA = "0x985654", Offset = "0x985654", VA = "0x985654")]
	public void AddBlockedPlayer(CookoutUserData oculusUserData)
	{
	}

	[Token(Token = "0x600129D")]
	[Address(RVA = "0x98578C", Offset = "0x98578C", VA = "0x98578C")]
	public void RemoveBlockedPlayer(CookoutUserId oculusUserID)
	{
	}

	[Token(Token = "0x600129E")]
	[Address(RVA = "0x985878", Offset = "0x985878", VA = "0x985878")]
	public void EditBlockedPlayerName(CookoutUserId oculusUserID, string newName)
	{
	}

	[Token(Token = "0x600129F")]
	[Address(RVA = "0x985938", Offset = "0x985938", VA = "0x985938")]
	public bool PlayerPrefersLeftHand()
	{
		return default(bool);
	}

	[Token(Token = "0x60012A0")]
	[Address(RVA = "0x985954", Offset = "0x985954", VA = "0x985954")]
	public void SetPlayerHandedness(CookoutHandedness handedness)
	{
	}

	[Token(Token = "0x60012A1")]
	[Address(RVA = "0x985978", Offset = "0x985978", VA = "0x985978")]
	public bool AutoHoldIsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x60012A2")]
	[Address(RVA = "0x985994", Offset = "0x985994", VA = "0x985994")]
	public void ToggleAutoHold()
	{
	}

	[Token(Token = "0x60012A3")]
	[Address(RVA = "0x97AC14", Offset = "0x97AC14", VA = "0x97AC14")]
	public void OnRetriedALevel()
	{
	}

	[Token(Token = "0x60012A4")]
	[Address(RVA = "0x9859DC", Offset = "0x9859DC", VA = "0x9859DC")]
	public void OnSwitchCreativeModeIngredients()
	{
	}

	[Token(Token = "0x60012A5")]
	[Address(RVA = "0x9859FC", Offset = "0x9859FC", VA = "0x9859FC")]
	public void OnPlayedCreativeMode()
	{
	}

	[Token(Token = "0x60012A6")]
	[Address(RVA = "0x985A1C", Offset = "0x985A1C", VA = "0x985A1C")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60012A7")]
	[Address(RVA = "0x985A90", Offset = "0x985A90", VA = "0x985A90", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x60012A8")]
	[Address(RVA = "0x985AE0", Offset = "0x985AE0", VA = "0x985AE0")]
	public void DebugWipeAccumulatedCoinRecords()
	{
	}

	[Token(Token = "0x60012A9")]
	[Address(RVA = "0x985AFC", Offset = "0x985AFC", VA = "0x985AFC")]
	public void DebugWipeAllMaxRankedInMP()
	{
	}

	[Token(Token = "0x60012AA")]
	[Address(RVA = "0x985B4C", Offset = "0x985B4C", VA = "0x985B4C")]
	public void DebugWipeFlags()
	{
	}

	[Token(Token = "0x60012AB")]
	[Address(RVA = "0x985B74", Offset = "0x985B74", VA = "0x985B74")]
	public ReadOnlyCollection<string> GetUnlockedRecipes()
	{
		return null;
	}

	[Token(Token = "0x60012AC")]
	[Address(RVA = "0x985C20", Offset = "0x985C20", VA = "0x985C20")]
	public void AddUnlockedRecipes(string recipe)
	{
	}

	[Token(Token = "0x60012AD")]
	[Address(RVA = "0x985DD0", Offset = "0x985DD0", VA = "0x985DD0")]
	public void ClearUnlockedRecipes()
	{
	}

	[Token(Token = "0x60012AE")]
	[Address(RVA = "0x985DD4", Offset = "0x985DD4", VA = "0x985DD4")]
	public List<CustomerType> GetUnlockedCreativeModeCustomers()
	{
		return null;
	}

	[Token(Token = "0x60012AF")]
	[Address(RVA = "0x985E64", Offset = "0x985E64", VA = "0x985E64")]
	public List<CustomerType> AddUnlockedCreativeModeCustomers(CustomerType customer)
	{
		return null;
	}

	[Token(Token = "0x60012B0")]
	[Address(RVA = "0x985F80", Offset = "0x985F80", VA = "0x985F80")]
	public void OnCreativeModePlateServed()
	{
	}

	[Token(Token = "0x60012B1")]
	[Address(RVA = "0x985FA4", Offset = "0x985FA4", VA = "0x985FA4")]
	public void DebugWipeCreativeModePlateServeCount()
	{
	}

	[Token(Token = "0x60012B2")]
	[Address(RVA = "0x985FC0", Offset = "0x985FC0", VA = "0x985FC0")]
	public int GetSelectedOculusAvatar()
	{
		return default(int);
	}

	[Token(Token = "0x60012B3")]
	[Address(RVA = "0x985FDC", Offset = "0x985FDC", VA = "0x985FDC")]
	public void SaveSelectedOculusAvatar(int oculusAvatarVisualType)
	{
	}

	[Token(Token = "0x60012B4")]
	[Address(RVA = "0x986000", Offset = "0x986000", VA = "0x986000")]
	public void SaveCookoutAvatarCustomization(CookoutAvatarVisualType avatarVisualType, AvatarHatType avatarHatType, AvatarBodyType avatarBodyType, int headMaterialIndex, AvatarHandMaterial handMaterial)
	{
	}

	[Token(Token = "0x60012B5")]
	[Address(RVA = "0x986034", Offset = "0x986034", VA = "0x986034")]
	public void OnRabbitServed()
	{
	}

	[Token(Token = "0x60012B6")]
	[Address(RVA = "0x986058", Offset = "0x986058", VA = "0x986058")]
	public void OnStolenIngredient()
	{
	}

	[Token(Token = "0x60012B7")]
	[Address(RVA = "0x98607C", Offset = "0x98607C", VA = "0x98607C")]
	public void OnDishWashed()
	{
	}

	[Token(Token = "0x60012B8")]
	[Address(RVA = "0x9860A0", Offset = "0x9860A0", VA = "0x9860A0")]
	public void OnGrilledIngredient()
	{
	}

	[Token(Token = "0x60012B9")]
	[Address(RVA = "0x9860C4", Offset = "0x9860C4", VA = "0x9860C4")]
	public void OnBurntIngredient()
	{
	}

	[Token(Token = "0x60012BA")]
	[Address(RVA = "0x9860E8", Offset = "0x9860E8", VA = "0x9860E8")]
	public void OnBotOvercharged()
	{
	}

	[Token(Token = "0x60012BB")]
	[Address(RVA = "0x98610C", Offset = "0x98610C", VA = "0x98610C")]
	public void OnCoinsSpent(int coins)
	{
	}

	[Token(Token = "0x60012BC")]
	[Address(RVA = "0x986130", Offset = "0x986130", VA = "0x986130")]
	public void OnCustomerServed()
	{
	}

	[Token(Token = "0x60012BD")]
	[Address(RVA = "0x986154", Offset = "0x986154", VA = "0x986154")]
	public void OnUnlockAchievement(int index)
	{
	}

	[Token(Token = "0x60012BE")]
	[Address(RVA = "0x986190", Offset = "0x986190", VA = "0x986190")]
	public CookoutAvatarVisualType GetSelectedCookoutAvatar()
	{
		return default(CookoutAvatarVisualType);
	}

	[Token(Token = "0x60012BF")]
	[Address(RVA = "0x9861AC", Offset = "0x9861AC", VA = "0x9861AC")]
	public AvatarType GetCurrentAvatarType()
	{
		return default(AvatarType);
	}

	[Token(Token = "0x60012C0")]
	[Address(RVA = "0x9861C8", Offset = "0x9861C8", VA = "0x9861C8")]
	public AvatarHatType GetCurrentAvatarHatType()
	{
		return default(AvatarHatType);
	}

	[Token(Token = "0x60012C1")]
	[Address(RVA = "0x9861E4", Offset = "0x9861E4", VA = "0x9861E4")]
	public AvatarBodyType GetCurrentAvatarBodyType()
	{
		return default(AvatarBodyType);
	}

	[Token(Token = "0x60012C2")]
	[Address(RVA = "0x986200", Offset = "0x986200", VA = "0x986200")]
	public int GetCurrentCookoutAvatarHeadMaterialIndex()
	{
		return default(int);
	}

	[Token(Token = "0x60012C3")]
	[Address(RVA = "0x98621C", Offset = "0x98621C", VA = "0x98621C")]
	public AvatarHandMaterial GetCurrentCookoutAvatarHandMaterial()
	{
		return default(AvatarHandMaterial);
	}

	[Token(Token = "0x60012C4")]
	[Address(RVA = "0x986238", Offset = "0x986238", VA = "0x986238")]
	public List<AvatarHatType> GetUnlockedAvatarHats()
	{
		return null;
	}

	[Token(Token = "0x60012C5")]
	[Address(RVA = "0x9862BC", Offset = "0x9862BC", VA = "0x9862BC")]
	public void UnlockAvatarHat(AvatarHatType hat)
	{
	}

	[Token(Token = "0x60012C6")]
	[Address(RVA = "0x986470", Offset = "0x986470", VA = "0x986470")]
	public void RemoveNewUnlockHat(AvatarHatType hat)
	{
	}

	[Token(Token = "0x60012C7")]
	[Address(RVA = "0x986518", Offset = "0x986518", VA = "0x986518")]
	public List<HeadUnlockData> GetUnlockedAvatarHeads()
	{
		return null;
	}

	[Token(Token = "0x60012C8")]
	[Address(RVA = "0x98659C", Offset = "0x98659C", VA = "0x98659C")]
	public void UnlockAvatarHead(CookoutAvatarVisualType type, int materialIndex)
	{
	}

	[Token(Token = "0x60012C9")]
	[Address(RVA = "0x98685C", Offset = "0x98685C", VA = "0x98685C")]
	public void RemoveNewUnlockHead(CookoutAvatarVisualType head, int materialIndex)
	{
	}

	[Token(Token = "0x60012CA")]
	[Address(RVA = "0x98697C", Offset = "0x98697C", VA = "0x98697C")]
	public List<AvatarBodyType> GetUnlockedAvatarBodies()
	{
		return null;
	}

	[Token(Token = "0x60012CB")]
	[Address(RVA = "0x986A00", Offset = "0x986A00", VA = "0x986A00")]
	public void UnlockAvatarBody(AvatarBodyType body)
	{
	}

	[Token(Token = "0x60012CC")]
	[Address(RVA = "0x986BB4", Offset = "0x986BB4", VA = "0x986BB4")]
	public void RemoveNewUnlockBody(AvatarBodyType body)
	{
	}

	[Token(Token = "0x60012CD")]
	[Address(RVA = "0x986C5C", Offset = "0x986C5C", VA = "0x986C5C")]
	public List<AvatarHandMaterial> GetUnlockedAvatarHandMaterials()
	{
		return null;
	}

	[Token(Token = "0x60012CE")]
	[Address(RVA = "0x986CE0", Offset = "0x986CE0", VA = "0x986CE0")]
	public void UnlockAvatarHandMaterials(AvatarHandMaterial handMaterials)
	{
	}

	[Token(Token = "0x60012CF")]
	[Address(RVA = "0x986E94", Offset = "0x986E94", VA = "0x986E94")]
	public void RemoveNewUnlockHand(AvatarHandMaterial handMaterials)
	{
	}

	[Token(Token = "0x60012D0")]
	[Address(RVA = "0x986F3C", Offset = "0x986F3C", VA = "0x986F3C")]
	public List<AvatarHatType> GetBoughtAvatarHats()
	{
		return null;
	}

	[Token(Token = "0x60012D1")]
	[Address(RVA = "0x986FC0", Offset = "0x986FC0", VA = "0x986FC0")]
	public void BuyAvatarHat(AvatarHatType hat)
	{
	}

	[Token(Token = "0x60012D2")]
	[Address(RVA = "0x9870CC", Offset = "0x9870CC", VA = "0x9870CC")]
	public List<HeadUnlockData> GetBoughtAvatarHeads()
	{
		return null;
	}

	[Token(Token = "0x60012D3")]
	[Address(RVA = "0x987150", Offset = "0x987150", VA = "0x987150")]
	public void BuyAvatarHead(CookoutAvatarVisualType type, int materialIndex)
	{
	}

	[Token(Token = "0x60012D4")]
	[Address(RVA = "0x987358", Offset = "0x987358", VA = "0x987358")]
	public List<AvatarBodyType> GetBoughtAvatarBodies()
	{
		return null;
	}

	[Token(Token = "0x60012D5")]
	[Address(RVA = "0x9873DC", Offset = "0x9873DC", VA = "0x9873DC")]
	public void BuyAvatarBody(AvatarBodyType body)
	{
	}

	[Token(Token = "0x60012D6")]
	[Address(RVA = "0x9874E8", Offset = "0x9874E8", VA = "0x9874E8")]
	public List<AvatarHandMaterial> GetBoughtAvatarHandMaterials()
	{
		return null;
	}

	[Token(Token = "0x60012D7")]
	[Address(RVA = "0x98756C", Offset = "0x98756C", VA = "0x98756C")]
	public void BuyAvatarHandMaterials(AvatarHandMaterial handMaterials)
	{
	}

	[Token(Token = "0x60012D8")]
	[Address(RVA = "0x987678", Offset = "0x987678", VA = "0x987678")]
	public List<AvatarHatType> GetNewHatsAvailable()
	{
		return null;
	}

	[Token(Token = "0x60012D9")]
	[Address(RVA = "0x987694", Offset = "0x987694", VA = "0x987694")]
	public List<HeadUnlockData> GetNewHeadsAvailable()
	{
		return null;
	}

	[Token(Token = "0x60012DA")]
	[Address(RVA = "0x9876B0", Offset = "0x9876B0", VA = "0x9876B0")]
	public List<AvatarBodyType> GetNewBodiesAvailable()
	{
		return null;
	}

	[Token(Token = "0x60012DB")]
	[Address(RVA = "0x9876CC", Offset = "0x9876CC", VA = "0x9876CC")]
	public List<AvatarHandMaterial> GetNewHandsAvailable()
	{
		return null;
	}

	[Token(Token = "0x60012DC")]
	[Address(RVA = "0x9876E8", Offset = "0x9876E8", VA = "0x9876E8")]
	public void OnTriedOculusAvatar()
	{
	}

	[Token(Token = "0x60012DD")]
	[Address(RVA = "0x987708", Offset = "0x987708", VA = "0x987708")]
	private static cookout.loadsave.v4.SaveGameData LoadSaveData()
	{
		return null;
	}

	[Token(Token = "0x60012DE")]
	[Address(RVA = "0x9847D4", Offset = "0x9847D4", VA = "0x9847D4")]
	public void SavePlayerData()
	{
	}

	[Token(Token = "0x60012DF")]
	[Address(RVA = "0x988AB8", Offset = "0x988AB8", VA = "0x988AB8")]
	public SaveManager()
	{
	}
}
[Token(Token = "0x20002C9")]
public class Bot : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20002CA")]
	public enum BotAction
	{
		[Token(Token = "0x40013ED")]
		None,
		[Token(Token = "0x40013EE")]
		PowerDown,
		[Token(Token = "0x40013EF")]
		PowerUp,
		[Token(Token = "0x40013F0")]
		RequestHelp,
		[Token(Token = "0x40013F1")]
		StartWorking,
		[Token(Token = "0x40013F2")]
		StartWashing,
		[Token(Token = "0x40013F3")]
		FailedWork,
		[Token(Token = "0x40013F4")]
		FinishedServe,
		[Token(Token = "0x40013F5")]
		FinishedWash,
		[Token(Token = "0x40013F6")]
		Enter,
		[Token(Token = "0x40013F7")]
		Exit,
		[Token(Token = "0x40013F8")]
		RoundEnd,
		[Token(Token = "0x40013F9")]
		Hit,
		[Token(Token = "0x40013FA")]
		LightHit,
		[Token(Token = "0x40013FB")]
		LookAtWindow,
		[Token(Token = "0x40013FC")]
		RechargeWhileOffline,
		[Token(Token = "0x40013FD")]
		StopTutorialWork,
		[Token(Token = "0x40013FE")]
		RechargeWhileActive,
		[Token(Token = "0x40013FF")]
		IdleVoice,
		[Token(Token = "0x4001400")]
		RoundCountdownVoice
	}

	[Token(Token = "0x40013A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro botNameText;

	[Token(Token = "0x40013A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SpriteRenderer timerRenderer;

	[Token(Token = "0x40013A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SpriteRenderer actionIcon;

	[Token(Token = "0x40013A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshPro targetPlateOrderText;

	[Token(Token = "0x40013A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SpriteRenderer plateIcon;

	[Token(Token = "0x40013A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite helpNeededIcon;

	[Token(Token = "0x40013A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Sprite outOfPowerIcon;

	[Token(Token = "0x40013A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Sprite idleIcon;

	[Token(Token = "0x40013AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Sprite washingIcon;

	[Token(Token = "0x40013AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Sprite tutorialIcon;

	[Token(Token = "0x40013AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Animator animator;

	[Token(Token = "0x40013AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public SkinnedMeshRenderer myRenderer;

	[Token(Token = "0x40013AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform mouthAnchor;

	[Token(Token = "0x40013AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TrailRenderer ingredientTrail;

	[Token(Token = "0x40013B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ParticleSystem[] ingredientTrailParticleSystems;

	[Token(Token = "0x40013B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TrailRenderer washTrail;

	[Token(Token = "0x40013B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ParticleSystem inhaleParticles;

	[Token(Token = "0x40013B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public ParticleSystem washMuzzleParticles;

	[Token(Token = "0x40013B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public ParticleSystem ingredientMuzzleParticles;

	[Token(Token = "0x40013B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ParticleSystem[] ingredientMuzzleParticlesSubSystems;

	[Token(Token = "0x40013B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public ParticleSystem waterDripParticles;

	[Token(Token = "0x40013B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ParticleSystem gurgleParticles;

	[Token(Token = "0x40013B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public ParticleSystem rechargeParticles;

	[Token(Token = "0x40013B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public ParticleSystem superChargedParticles;

	[Token(Token = "0x40013BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Color rechargeColor;

	[Token(Token = "0x40013BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Color superChargedColor;

	[Token(Token = "0x40013BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float hitAnimationVelocityThreshold;

	[Token(Token = "0x40013BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public float hitLightAnimationVelocityThreshold;

	[Token(Token = "0x40013BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public float hitCooldown;

	[Token(Token = "0x40013BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public float fridgeOpenTime;

	[Token(Token = "0x40013C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float powerDownTime;

	[Token(Token = "0x40013C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public float waterDripDelayTime;

	[Token(Token = "0x40013C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public float ingredientTrailTravelTime;

	[Token(Token = "0x40013C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public float startPrepareEffectDelay;

	[Token(Token = "0x40013C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public float startWashEffectDelay;

	[Token(Token = "0x40013C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public bool workDuringTutorial;

	[Token(Token = "0x40013C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public float idleVoiceWaitTime;

	[Token(Token = "0x40013C8")]
	private const float offlineSoundSpacing = 5f;

	[Token(Token = "0x40013C9")]
	private const string TogglePrepare = "Prepare";

	[Token(Token = "0x40013CA")]
	private const string TogglePowerDown = "PowerDown";

	[Token(Token = "0x40013CB")]
	private const string ToggleHelp = "Help";

	[Token(Token = "0x40013CC")]
	private const string ToggleTalk = "Talk";

	[Token(Token = "0x40013CD")]
	private const string ToggleWash = "Wash";

	[Token(Token = "0x40013CE")]
	private const string TriggerExit = "Exit";

	[Token(Token = "0x40013CF")]
	private const string TriggerStart = "Start";

	[Token(Token = "0x40013D0")]
	private const string TriggerHit = "Hit";

	[Token(Token = "0x40013D1")]
	private const string TriggerHitLight = "HitLight";

	[Token(Token = "0x40013D2")]
	private const string TriggerRecharge = "Recharge";

	[Token(Token = "0x40013D3")]
	private const string TriggerLookLeft = "LookLeft";

	[Token(Token = "0x40013D4")]
	private const string TriggerLookRight = "LookRight";

	[Token(Token = "0x40013D5")]
	private const string TriggerServe = "Serve";

	[Token(Token = "0x40013D6")]
	private const string TriggerFailServe = "FailServe";

	[Token(Token = "0x40013D7")]
	private const string TriggerWin = "Win";

	[Token(Token = "0x40013D8")]
	private const string TriggerLose = "Lose";

	[Token(Token = "0x40013D9")]
	private const string grabbableTag = "Grabbable";

	[Token(Token = "0x40013DA")]
	private const string propertyProgress = "_Progress";

	[Token(Token = "0x40013DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public PlaySoundResult currentVoiceLine;

	[Token(Token = "0x40013DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private BotAI botAI;

	[Token(Token = "0x40013DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private CookingRound cookingRound;

	[Token(Token = "0x40013DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private CookingGameState gameState;

	[Token(Token = "0x40013DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private IngredientPrefabRegistry ingredientRegistry;

	[Token(Token = "0x40013E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private MaterialPropertyBlock propertyBlock;

	[Token(Token = "0x40013E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private GameObject workingTimer;

	[Token(Token = "0x40013E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private GameObject ingredientTrailGO;

	[Token(Token = "0x40013E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private GameObject washTrailGO;

	[Token(Token = "0x40013E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private BotTutorialMode BotTutorialMode;

	[Token(Token = "0x40013E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private BotWashLoopState botWashLoopState;

	[Token(Token = "0x40013E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private float hitCooldownTimer;

	[Token(Token = "0x40013E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private float offlineSoundTimer;

	[Token(Token = "0x40013E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private float powerDownTimer;

	[Token(Token = "0x40013E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private ParticleSystem.MainModule particleMain;

	[Token(Token = "0x40013EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private float idleVoiceCountdown;

	[Token(Token = "0x40013EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private bool isLeaving;

	[Token(Token = "0x1700025E")]
	public Fridge MyFridge
	{
		[Token(Token = "0x60012F9")]
		[Address(RVA = "0x989DE8", Offset = "0x989DE8", VA = "0x989DE8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60012FA")]
		[Address(RVA = "0x989DF0", Offset = "0x989DF0", VA = "0x989DF0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700025F")]
	public float EnergyLeft
	{
		[Token(Token = "0x60012FB")]
		[Address(RVA = "0x989DF8", Offset = "0x989DF8", VA = "0x989DF8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000260")]
	public int Slot
	{
		[Token(Token = "0x60012FC")]
		[Address(RVA = "0x989E14", Offset = "0x989E14", VA = "0x989E14")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60012FD")]
		[Address(RVA = "0x989E1C", Offset = "0x989E1C", VA = "0x989E1C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60012FE")]
	[Address(RVA = "0x989E24", Offset = "0x989E24", VA = "0x989E24")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012FF")]
	[Address(RVA = "0x98A280", Offset = "0x98A280", VA = "0x98A280")]
	public void Enter()
	{
	}

	[Token(Token = "0x6001300")]
	[Address(RVA = "0x98AD3C", Offset = "0x98AD3C", VA = "0x98AD3C")]
	public void SetSlot(int slot)
	{
	}

	[Token(Token = "0x6001301")]
	[Address(RVA = "0x98AE3C", Offset = "0x98AE3C", VA = "0x98AE3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001302")]
	[Address(RVA = "0x98B470", Offset = "0x98B470", VA = "0x98B470")]
	private void OnRoundStart()
	{
	}

	[Token(Token = "0x6001303")]
	[Address(RVA = "0x98B6F4", Offset = "0x98B6F4", VA = "0x98B6F4")]
	private void OnCountdownStart()
	{
	}

	[Token(Token = "0x6001304")]
	[Address(RVA = "0x98BA28", Offset = "0x98BA28", VA = "0x98BA28")]
	private void OnGameStateChanged(GameState oldState, GameState newState)
	{
	}

	[Token(Token = "0x6001305")]
	[Address(RVA = "0x98BC3C", Offset = "0x98BC3C", VA = "0x98BC3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001306")]
	[Address(RVA = "0x98BEEC", Offset = "0x98BEEC", VA = "0x98BEEC")]
	private void SetDeliveryTarget()
	{
	}

	[Token(Token = "0x6001307")]
	[Address(RVA = "0x98C084", Offset = "0x98C084", VA = "0x98C084")]
	private void SetWashTarget()
	{
	}

	[Token(Token = "0x6001308")]
	[Address(RVA = "0x98B410", Offset = "0x98B410", VA = "0x98B410")]
	private void SetUIStateIcon(Sprite icon)
	{
	}

	[Token(Token = "0x6001309")]
	[Address(RVA = "0x98C140", Offset = "0x98C140", VA = "0x98C140")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600130A")]
	[Address(RVA = "0x98C338", Offset = "0x98C338", VA = "0x98C338")]
	public void RechargeStamina(float rechargeFraction)
	{
	}

	[Token(Token = "0x600130B")]
	[Address(RVA = "0x98C47C", Offset = "0x98C47C", VA = "0x98C47C")]
	private void PlayIngredientTrailFridgeToBot(float delay)
	{
	}

	[Token(Token = "0x600130C")]
	[Address(RVA = "0x98C7A8", Offset = "0x98C7A8", VA = "0x98C7A8")]
	private void PlayIngredientTrailBotToPlate()
	{
	}

	[Token(Token = "0x600130D")]
	[Address(RVA = "0x98C8BC", Offset = "0x98C8BC", VA = "0x98C8BC")]
	private void PlayWashTrailBotToPlate()
	{
	}

	[Token(Token = "0x600130E")]
	[Address(RVA = "0x98C9D0", Offset = "0x98C9D0", VA = "0x98C9D0")]
	public void DespawnBot(Action onDespawnComplete)
	{
	}

	[Token(Token = "0x600130F")]
	[Address(RVA = "0x98CB8C", Offset = "0x98CB8C", VA = "0x98CB8C")]
	public void TutorialStartWorking()
	{
	}

	[Token(Token = "0x6001310")]
	[Address(RVA = "0x98CBB4", Offset = "0x98CBB4", VA = "0x98CBB4")]
	public void TutorialStopWorking()
	{
	}

	[Token(Token = "0x6001311")]
	[Address(RVA = "0x98B6BC", Offset = "0x98B6BC", VA = "0x98B6BC")]
	public void ForcePowerDown()
	{
	}

	[Token(Token = "0x6001312")]
	[Address(RVA = "0x98A2E4", Offset = "0x98A2E4", VA = "0x98A2E4")]
	private void PlayAction(BotAction action)
	{
	}

	[Token(Token = "0x6001313")]
	[Address(RVA = "0x98B6FC", Offset = "0x98B6FC", VA = "0x98B6FC")]
	private void PlayVoiceLine(BotAction action)
	{
	}

	[Token(Token = "0x6001314")]
	[Address(RVA = "0x98CBD8", Offset = "0x98CBD8", VA = "0x98CBD8")]
	private void playRechargeEffect()
	{
	}

	[Token(Token = "0x6001315")]
	[Address(RVA = "0x98CCC4", Offset = "0x98CCC4", VA = "0x98CCC4")]
	public bool IsWaitingForPlayerHelp()
	{
		return default(bool);
	}

	[Token(Token = "0x6001316")]
	[Address(RVA = "0x98CCE0", Offset = "0x98CCE0", VA = "0x98CCE0")]
	public bool HasNoPower()
	{
		return default(bool);
	}

	[Token(Token = "0x6001317")]
	[Address(RVA = "0x98CCFC", Offset = "0x98CCFC", VA = "0x98CCFC")]
	private void OnWashLoopEnter()
	{
	}

	[Token(Token = "0x6001318")]
	[Address(RVA = "0x98CD18", Offset = "0x98CD18", VA = "0x98CD18")]
	private void OnWashLoopExit()
	{
	}

	[Token(Token = "0x6001319")]
	[Address(RVA = "0x98C598", Offset = "0x98C598", VA = "0x98C598")]
	private void SetIngredientTrailColor(IngredientType ingredient)
	{
	}

	[Token(Token = "0x600131A")]
	[Address(RVA = "0x98CD34", Offset = "0x98CD34", VA = "0x98CD34")]
	public void OnCrankReleased()
	{
	}

	[Token(Token = "0x600131B")]
	[Address(RVA = "0x98CD50", Offset = "0x98CD50", VA = "0x98CD50")]
	public void OnSuperchargedStateChanged(bool isActivated)
	{
	}

	[Token(Token = "0x600131C")]
	[Address(RVA = "0x98CE78", Offset = "0x98CE78", VA = "0x98CE78")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600131D")]
	[Address(RVA = "0x98D168", Offset = "0x98D168", VA = "0x98D168")]
	public Bot()
	{
	}
}
[Token(Token = "0x20002CF")]
public class BotAI : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400140E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float staminaBacking;

	[Token(Token = "0x400140F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float superChargeRateBacking;

	[Token(Token = "0x4001410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool superChargedActiveBacking;

	[Token(Token = "0x4001411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float maxStamina;

	[Token(Token = "0x4001412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float workTime;

	[Token(Token = "0x4001413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float washTime;

	[Token(Token = "0x4001414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float idleTime;

	[Token(Token = "0x4001415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float LookAtWindowThreshold;

	[Token(Token = "0x4001416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float grillTime;

	[Token(Token = "0x4001417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float powerUpThreshold;

	[Token(Token = "0x4001418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float delayBeforeServe;

	[Token(Token = "0x4001419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float delayBeforeWash;

	[Token(Token = "0x400141A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private float superChargeDuration;

	[Token(Token = "0x400141B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float superChargeMaxRate;

	[Token(Token = "0x400141C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private float superChargeMinRate;

	[Token(Token = "0x400141D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float superChargeSpeedUp;

	[Token(Token = "0x400141E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	[Header("Normal, Rabbit, Picky, Royal, Werewolf, Jester, Thief, Tutorial, FinalBossKing, FinalBossQueen")]
	private int[] customerPriority;

	[Token(Token = "0x400141F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private int timeRunningLowPriority;

	[Token(Token = "0x4001420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private int timeCriticalPriority;

	[Token(Token = "0x4001421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private int uniqueIngredientPriority;

	[Token(Token = "0x4001422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	private int plateTimeRunningOutThreshold;

	[Token(Token = "0x4001423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private int plateTimeCriticalThreshold;

	[Token(Token = "0x4001424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private CookingRound cookingRound;

	[Token(Token = "0x4001425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private BotCrank botCrank;

	[Token(Token = "0x4001426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private CustomerRegistry customerRegistry;

	[Token(Token = "0x4001427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<Plate> targetPlates;

	[Token(Token = "0x4001428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private List<RecipeIngredient> targetPlateIngredients;

	[Token(Token = "0x4001429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IngredientType[] myIngredients;

	[Token(Token = "0x400142A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private List<IngredientType> uniqueIngredients;

	[Token(Token = "0x400142B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float powerUpShakeCountdown;

	[Token(Token = "0x400142C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float workTimer;

	[Token(Token = "0x400142D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float idleTimer;

	[Token(Token = "0x400142E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Bot botMain;

	[Token(Token = "0x400142F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Fridge[] fridges;

	[Token(Token = "0x4001430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private CookingNetworkManager networkManager;

	[Token(Token = "0x4001431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private WorkspaceRegistry workspaceRegistry;

	[Token(Token = "0x4001432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OrderMonitor orderMonitor;

	[Token(Token = "0x4001433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private RecipeIngredient noIngredient;

	[Token(Token = "0x4001434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private List<RecipeIngredient> missingIngredients;

	[Token(Token = "0x4001435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private List<StackedIngredientData> addedIngredients;

	[Token(Token = "0x4001436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private List<RecipeIngredient> currentVisibleRecipe;

	[Token(Token = "0x4001437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private readonly RecipeIngredient noTargetIngredient;

	[Token(Token = "0x17000261")]
	public RecipeIngredient TargetIngredient
	{
		[Token(Token = "0x6001328")]
		[Address(RVA = "0x98E7F4", Offset = "0x98E7F4", VA = "0x98E7F4")]
		[CompilerGenerated]
		get
		{
			return default(RecipeIngredient);
		}
		[Token(Token = "0x6001329")]
		[Address(RVA = "0x98E7FC", Offset = "0x98E7FC", VA = "0x98E7FC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000262")]
	public Plate TargetPlate
	{
		[Token(Token = "0x600132A")]
		[Address(RVA = "0x98E804", Offset = "0x98E804", VA = "0x98E804")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600132B")]
		[Address(RVA = "0x98E80C", Offset = "0x98E80C", VA = "0x98E80C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000263")]
	public bool IsOffline
	{
		[Token(Token = "0x600132C")]
		[Address(RVA = "0x98E814", Offset = "0x98E814", VA = "0x98E814")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600132D")]
		[Address(RVA = "0x98E81C", Offset = "0x98E81C", VA = "0x98E81C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000264")]
	public bool RequestedHelp
	{
		[Token(Token = "0x600132E")]
		[Address(RVA = "0x98E828", Offset = "0x98E828", VA = "0x98E828")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600132F")]
		[Address(RVA = "0x98E830", Offset = "0x98E830", VA = "0x98E830")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000265")]
	public bool IsWashing
	{
		[Token(Token = "0x6001330")]
		[Address(RVA = "0x98E83C", Offset = "0x98E83C", VA = "0x98E83C")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001331")]
		[Address(RVA = "0x98E844", Offset = "0x98E844", VA = "0x98E844")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000266")]
	public float EnergyLeft
	{
		[Token(Token = "0x6001332")]
		[Address(RVA = "0x98E850", Offset = "0x98E850", VA = "0x98E850")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000267")]
	private float Stamina
	{
		[Token(Token = "0x6001333")]
		[Address(RVA = "0x98E860", Offset = "0x98E860", VA = "0x98E860")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001334")]
		[Address(RVA = "0x98E868", Offset = "0x98E868", VA = "0x98E868")]
		set
		{
		}
	}

	[Token(Token = "0x17000268")]
	public float SuperChargeRate
	{
		[Token(Token = "0x6001335")]
		[Address(RVA = "0x98E964", Offset = "0x98E964", VA = "0x98E964")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001336")]
		[Address(RVA = "0x98E96C", Offset = "0x98E96C", VA = "0x98E96C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000269")]
	private bool SuperChargedActive
	{
		[Token(Token = "0x6001337")]
		[Address(RVA = "0x98E9A8", Offset = "0x98E9A8", VA = "0x98E9A8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001338")]
		[Address(RVA = "0x98E9B0", Offset = "0x98E9B0", VA = "0x98E9B0")]
		set
		{
		}
	}

	[Token(Token = "0x6001339")]
	[Address(RVA = "0x98EB70", Offset = "0x98EB70", VA = "0x98EB70")]
	private void Start()
	{
	}

	[Token(Token = "0x600133A")]
	[Address(RVA = "0x98EFE8", Offset = "0x98EFE8", VA = "0x98EFE8")]
	public Bot.BotAction Tick()
	{
		return default(Bot.BotAction);
	}

	[Token(Token = "0x600133B")]
	[Address(RVA = "0x98F308", Offset = "0x98F308", VA = "0x98F308")]
	private Bot.BotAction ServeIngredient()
	{
		return default(Bot.BotAction);
	}

	[Token(Token = "0x600133C")]
	[Address(RVA = "0x98F1F4", Offset = "0x98F1F4", VA = "0x98F1F4")]
	private Bot.BotAction WashPlate()
	{
		return default(Bot.BotAction);
	}

	[Token(Token = "0x600133D")]
	[Address(RVA = "0x9905B0", Offset = "0x9905B0", VA = "0x9905B0")]
	private Bot.BotAction ResolveFinisingWork(bool success)
	{
		return default(Bot.BotAction);
	}

	[Token(Token = "0x600133E")]
	[Address(RVA = "0x98F558", Offset = "0x98F558", VA = "0x98F558")]
	private void DetermineValidPlateTargets()
	{
	}

	[Token(Token = "0x600133F")]
	[Address(RVA = "0x98FE3C", Offset = "0x98FE3C", VA = "0x98FE3C")]
	private void DetermineWhatPlateToWorkOn()
	{
	}

	[Token(Token = "0x6001340")]
	[Address(RVA = "0x99076C", Offset = "0x99076C", VA = "0x99076C")]
	private void OnRoundStart()
	{
	}

	[Token(Token = "0x6001341")]
	[Address(RVA = "0x990AD0", Offset = "0x990AD0", VA = "0x990AD0")]
	public void OnRoundEnded()
	{
	}

	[Token(Token = "0x6001342")]
	[Address(RVA = "0x99052C", Offset = "0x99052C", VA = "0x99052C")]
	private RecipeIngredient GetNextPlateIngredient(Plate plate)
	{
		return default(RecipeIngredient);
	}

	[Token(Token = "0x6001343")]
	[Address(RVA = "0x990414", Offset = "0x990414", VA = "0x990414")]
	private void AddToPlate(IngredientType ingredientType, Plate plate, float fryValue)
	{
	}

	[Token(Token = "0x6001344")]
	[Address(RVA = "0x990664", Offset = "0x990664", VA = "0x990664")]
	private void WashPlate(Plate plate)
	{
	}

	[Token(Token = "0x6001345")]
	[Address(RVA = "0x990AE8", Offset = "0x990AE8", VA = "0x990AE8")]
	public float elapsedTimeFraction()
	{
		return default(float);
	}

	[Token(Token = "0x6001346")]
	[Address(RVA = "0x990B28", Offset = "0x990B28", VA = "0x990B28")]
	public Bot.BotAction RechargeStamina(float fraction)
	{
		return default(Bot.BotAction);
	}

	[Token(Token = "0x6001347")]
	[Address(RVA = "0x9901E4", Offset = "0x9901E4", VA = "0x9901E4")]
	private bool PlateIsEmptyAndDirty(Plate plate)
	{
		return default(bool);
	}

	[Token(Token = "0x6001348")]
	[Address(RVA = "0x9902F4", Offset = "0x9902F4", VA = "0x9902F4")]
	private bool RequiresMoreOfIngredient(IngredientType ingredient, Plate plate)
	{
		return default(bool);
	}

	[Token(Token = "0x6001349")]
	[Address(RVA = "0x990250", Offset = "0x990250", VA = "0x990250")]
	private bool PlateIsPerfectSoFar(Plate plate)
	{
		return default(bool);
	}

	[Token(Token = "0x600134A")]
	[Address(RVA = "0x9908A8", Offset = "0x9908A8", VA = "0x9908A8")]
	public void UpdateMyIngredients()
	{
	}

	[Token(Token = "0x600134B")]
	[Address(RVA = "0x990AA4", Offset = "0x990AA4", VA = "0x990AA4")]
	public Bot.BotAction ForceShutDown()
	{
		return default(Bot.BotAction);
	}

	[Token(Token = "0x600134C")]
	[Address(RVA = "0x990CEC", Offset = "0x990CEC", VA = "0x990CEC")]
	public void OnCrankReleased()
	{
	}

	[Token(Token = "0x600134D")]
	[Address(RVA = "0x990D18", Offset = "0x990D18", VA = "0x990D18")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600134E")]
	[Address(RVA = "0x990DEC", Offset = "0x990DEC", VA = "0x990DEC")]
	public BotAI()
	{
	}
}
[Token(Token = "0x20002D2")]
public class BotCrank : SingleInstanceBehavior<BotCrank>, ILocallyGrabbable
{
	[Token(Token = "0x400143C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Grabbable grabbable;

	[Token(Token = "0x400143D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform handleAnchor;

	[Token(Token = "0x400143E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform rotationRoot;

	[Token(Token = "0x400143F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private MeshRenderer staminaMeterRenderer;

	[Token(Token = "0x4001440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float maxRotationPerFrame;

	[Token(Token = "0x4001441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float rechargeMagnitude;

	[Token(Token = "0x4001442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private ParticleSystem superchargeGlow;

	[Token(Token = "0x4001443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ParticleSystem superchargeParticles;

	[Token(Token = "0x4001444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private ParticleSystem staminaChargedParticles;

	[Token(Token = "0x4001445")]
	private const float soundThreshold = 30f;

	[Token(Token = "0x4001446")]
	private const float hapticThreshold = 5f;

	[Token(Token = "0x4001447")]
	private const string propertyFillRate = "_FillRate";

	[Token(Token = "0x4001448")]
	private const string propertyChargeRate = "_ChargeRate";

	[Token(Token = "0x4001449")]
	private const string propertyChargeIsVisible = "_ChargeIsVisible";

	[Token(Token = "0x400144A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private readonly Vector3 noYValue;

	[Token(Token = "0x400144B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Bot bot;

	[Token(Token = "0x400144C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private CookoutAvatarHand holdingHand;

	[Token(Token = "0x400144D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform holdingHandTransform;

	[Token(Token = "0x400144E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 previousCenterToHand;

	[Token(Token = "0x400144F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float soundCounter;

	[Token(Token = "0x4001450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private MaterialPropertyBlock propertyBlock;

	[Token(Token = "0x4001451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool chargeIsVisible;

	[Token(Token = "0x4001452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private PlaySoundResult crankSuperchargedSound;

	[Token(Token = "0x4001453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private CookingRound cookingRound;

	[Token(Token = "0x6001353")]
	[Address(RVA = "0x9914BC", Offset = "0x9914BC", VA = "0x9914BC", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6001354")]
	[Address(RVA = "0x9915A0", Offset = "0x9915A0", VA = "0x9915A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001355")]
	[Address(RVA = "0x9917F0", Offset = "0x9917F0", VA = "0x9917F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001356")]
	[Address(RVA = "0x9916D0", Offset = "0x9916D0", VA = "0x9916D0")]
	public void SetActive(bool isActive)
	{
	}

	[Token(Token = "0x6001357")]
	[Address(RVA = "0x991BB4", Offset = "0x991BB4", VA = "0x991BB4", Slot = "6")]
	public void OnLocalGrab(CookoutAvatarHand grabbedBy, Transform handAnchor)
	{
	}

	[Token(Token = "0x6001358")]
	[Address(RVA = "0x991C6C", Offset = "0x991C6C", VA = "0x991C6C")]
	private void OnRelease()
	{
	}

	[Token(Token = "0x6001359")]
	[Address(RVA = "0x98E8A0", Offset = "0x98E8A0", VA = "0x98E8A0")]
	public void UpdateStaminaMeter(float fillRate, float chargeRate, bool superChargeActive)
	{
	}

	[Token(Token = "0x600135A")]
	[Address(RVA = "0x98EA84", Offset = "0x98EA84", VA = "0x98EA84")]
	public void SetSuperchargeVisiblity(bool isVisible)
	{
	}

	[Token(Token = "0x600135B")]
	[Address(RVA = "0x990C68", Offset = "0x990C68", VA = "0x990C68")]
	public void OnSuperchargeIsFull()
	{
	}

	[Token(Token = "0x600135C")]
	[Address(RVA = "0x98EA14", Offset = "0x98EA14", VA = "0x98EA14")]
	public void SetChargeActiveGlow(bool isVisible)
	{
	}

	[Token(Token = "0x600135D")]
	[Address(RVA = "0x990CB8", Offset = "0x990CB8", VA = "0x990CB8")]
	public void OnStaminaCharged()
	{
	}

	[Token(Token = "0x600135E")]
	[Address(RVA = "0x991C88", Offset = "0x991C88", VA = "0x991C88")]
	private void OnRoundEnd()
	{
	}

	[Token(Token = "0x600135F")]
	[Address(RVA = "0x991CBC", Offset = "0x991CBC", VA = "0x991CBC", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6001360")]
	[Address(RVA = "0x991E44", Offset = "0x991E44", VA = "0x991E44")]
	public BotCrank()
	{
	}
}
[Token(Token = "0x20002D3")]
public class BotManager : SingleInstanceBehavior<BotManager>
{
	[Token(Token = "0x20002D4")]
	public delegate void OnBotCountChangedHandler();

	[Token(Token = "0x4001455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject botPrefab;

	[Token(Token = "0x4001456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform lightProbeAnchor;

	[Token(Token = "0x4001457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Bot> bots;

	[Token(Token = "0x4001458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CookingNetworkManager networkManager;

	[Token(Token = "0x4001459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PhotonCallbackManager photonCallbackManager;

	[Token(Token = "0x1700026A")]
	public Transform LightProbeAnchor
	{
		[Token(Token = "0x6001363")]
		[Address(RVA = "0x992008", Offset = "0x992008", VA = "0x992008")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700026B")]
	public bool IsPlayerAlone
	{
		[Token(Token = "0x6001364")]
		[Address(RVA = "0x992010", Offset = "0x992010", VA = "0x992010")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1400002A")]
	public event OnBotCountChangedHandler OnBotCountChanged
	{
		[Token(Token = "0x6001361")]
		[Address(RVA = "0x991ED0", Offset = "0x991ED0", VA = "0x991ED0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001362")]
		[Address(RVA = "0x991F6C", Offset = "0x991F6C", VA = "0x991F6C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001365")]
	[Address(RVA = "0x9920E0", Offset = "0x9920E0", VA = "0x9920E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001366")]
	[Address(RVA = "0x992720", Offset = "0x992720", VA = "0x992720")]
	private void OnPlayerConnected(PhotonPlayer newPlayer)
	{
	}

	[Token(Token = "0x6001367")]
	[Address(RVA = "0x992858", Offset = "0x992858", VA = "0x992858")]
	public void SpawnBot()
	{
	}

	[Token(Token = "0x6001368")]
	[Address(RVA = "0x992304", Offset = "0x992304", VA = "0x992304")]
	public void SpawnBotAtPosition(int position, bool forcePosition = false)
	{
	}

	[Token(Token = "0x6001369")]
	[Address(RVA = "0x992724", Offset = "0x992724", VA = "0x992724")]
	public void DespawnBots()
	{
	}

	[Token(Token = "0x600136A")]
	[Address(RVA = "0x992090", Offset = "0x992090", VA = "0x992090")]
	public bool HasActiveBots()
	{
		return default(bool);
	}

	[Token(Token = "0x600136B")]
	[Address(RVA = "0x9928F8", Offset = "0x9928F8", VA = "0x9928F8")]
	public bool[] GetBotSeats()
	{
		return null;
	}

	[Token(Token = "0x600136C")]
	[Address(RVA = "0x9929D4", Offset = "0x9929D4", VA = "0x9929D4")]
	public void TutorialMakeBotWork()
	{
	}

	[Token(Token = "0x600136D")]
	[Address(RVA = "0x992A60", Offset = "0x992A60", VA = "0x992A60")]
	public void TutorialStopBotWork()
	{
	}

	[Token(Token = "0x600136E")]
	[Address(RVA = "0x992AEC", Offset = "0x992AEC", VA = "0x992AEC")]
	public void TutorialForceBotsPowerDown()
	{
	}

	[Token(Token = "0x600136F")]
	[Address(RVA = "0x992B78", Offset = "0x992B78", VA = "0x992B78", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6001370")]
	[Address(RVA = "0x992C60", Offset = "0x992C60", VA = "0x992C60")]
	public void RespawnBotAndMovePlayer()
	{
	}

	[Token(Token = "0x6001371")]
	[Address(RVA = "0x993078", Offset = "0x993078", VA = "0x993078")]
	public void TutorialShowBot()
	{
	}

	[Token(Token = "0x6001372")]
	[Address(RVA = "0x9930D8", Offset = "0x9930D8", VA = "0x9930D8")]
	public Bot GetBot()
	{
		return null;
	}

	[Token(Token = "0x6001373")]
	[Address(RVA = "0x99312C", Offset = "0x99312C", VA = "0x99312C")]
	public BotManager()
	{
	}
}
[Token(Token = "0x20002D5")]
public class BotTutorialMode : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400145B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float remindCooldown;

	[Token(Token = "0x400145C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x400145D")]
	private const string talkToggle = "Talk";

	[Token(Token = "0x400145E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float remindTimer;

	[Token(Token = "0x400145F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TutorialMode tutorialMode;

	[Token(Token = "0x4001460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TutorialStep currentStep;

	[Token(Token = "0x4001461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static PlaySoundResult soundResult;

	[Token(Token = "0x1700026C")]
	public static float VoiceLineLength
	{
		[Token(Token = "0x6001379")]
		[Address(RVA = "0x993300", Offset = "0x993300", VA = "0x993300")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600137A")]
		[Address(RVA = "0x993348", Offset = "0x993348", VA = "0x993348")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700026D")]
	public bool IsNarrating
	{
		[Token(Token = "0x600137B")]
		[Address(RVA = "0x99339C", Offset = "0x99339C", VA = "0x99339C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600137C")]
	[Address(RVA = "0x9933F0", Offset = "0x9933F0", VA = "0x9933F0")]
	private void Start()
	{
	}

	[Token(Token = "0x600137D")]
	[Address(RVA = "0x993514", Offset = "0x993514", VA = "0x993514")]
	private void Update()
	{
	}

	[Token(Token = "0x600137E")]
	[Address(RVA = "0x993754", Offset = "0x993754", VA = "0x993754")]
	private void OnTutorialStateChanged(TutorialStep newStep)
	{
	}

	[Token(Token = "0x600137F")]
	[Address(RVA = "0x993570", Offset = "0x993570", VA = "0x993570")]
	private void PlayVoiceLine(TutorialStep step, bool fullDescription)
	{
	}

	[Token(Token = "0x6001380")]
	[Address(RVA = "0x9937A0", Offset = "0x9937A0", VA = "0x9937A0")]
	public static void StopCurrentVoiceLine()
	{
	}

	[Token(Token = "0x6001381")]
	[Address(RVA = "0x993810", Offset = "0x993810", VA = "0x993810")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001382")]
	[Address(RVA = "0x9938E4", Offset = "0x9938E4", VA = "0x9938E4")]
	public BotTutorialMode()
	{
	}
}
[Token(Token = "0x20002D6")]
public class BotWashLoopState : StateMachineBehaviour
{
	[Token(Token = "0x4001462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action OnWashLoopEnter;

	[Token(Token = "0x4001463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action OnWashLoopExit;

	[Token(Token = "0x6001384")]
	[Address(RVA = "0x993954", Offset = "0x993954", VA = "0x993954", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6001385")]
	[Address(RVA = "0x993970", Offset = "0x993970", VA = "0x993970", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6001386")]
	[Address(RVA = "0x99398C", Offset = "0x99398C", VA = "0x99398C")]
	public BotWashLoopState()
	{
	}
}
[Token(Token = "0x20002D7")]
public class RandomizeNextAnimationVariant : StateMachineBehaviour
{
	[Token(Token = "0x4001464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string parameterName;

	[Token(Token = "0x4001465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float[] parameterVariantOdds;

	[Token(Token = "0x4001466")]
	private const int parameterInactive = -1;

	[Token(Token = "0x6001387")]
	[Address(RVA = "0x993994", Offset = "0x993994", VA = "0x993994", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6001388")]
	[Address(RVA = "0x9939CC", Offset = "0x9939CC", VA = "0x9939CC")]
	private int GetAnimationVariant()
	{
		return default(int);
	}

	[Token(Token = "0x6001389")]
	[Address(RVA = "0x993A98", Offset = "0x993A98", VA = "0x993A98")]
	public RandomizeNextAnimationVariant()
	{
	}
}
[Token(Token = "0x20002D8")]
public class GoalNoIngredientRearranging : StarGoal
{
	[Token(Token = "0x4001467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CookingRound cookingRound;

	[Token(Token = "0x1700026E")]
	public override GoalType goalType
	{
		[Token(Token = "0x600138A")]
		[Address(RVA = "0x993AA0", Offset = "0x993AA0", VA = "0x993AA0", Slot = "6")]
		get
		{
			return default(GoalType);
		}
	}

	[Token(Token = "0x1700026F")]
	public override string GoalDescription
	{
		[Token(Token = "0x600138B")]
		[Address(RVA = "0x993AA8", Offset = "0x993AA8", VA = "0x993AA8", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000270")]
	public override string GoalResultsDescription
	{
		[Token(Token = "0x600138C")]
		[Address(RVA = "0x993AE8", Offset = "0x993AE8", VA = "0x993AE8", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600138D")]
	[Address(RVA = "0x993B28", Offset = "0x993B28", VA = "0x993B28")]
	public void Start()
	{
	}

	[Token(Token = "0x600138E")]
	[Address(RVA = "0x993F20", Offset = "0x993F20", VA = "0x993F20")]
	private void OnTopIngredientRemoved()
	{
	}

	[Token(Token = "0x600138F")]
	[Address(RVA = "0x993F90", Offset = "0x993F90", VA = "0x993F90")]
	private void OnRoundEnded()
	{
	}

	[Token(Token = "0x6001390")]
	[Address(RVA = "0x993FBC", Offset = "0x993FBC", VA = "0x993FBC", Slot = "15")]
	protected override void ReceiveSyncData(PhotonStream stream, GoalState oldState)
	{
	}

	[Token(Token = "0x6001391")]
	[Address(RVA = "0x993FD8", Offset = "0x993FD8", VA = "0x993FD8")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6001392")]
	[Address(RVA = "0x9941EC", Offset = "0x9941EC", VA = "0x9941EC")]
	public GoalNoIngredientRearranging()
	{
	}
}
[Token(Token = "0x20002D9")]
public class GoalServeAllCustomers : StarGoal, IPunObservable
{
	[Token(Token = "0x4001468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int targetCount;

	[Token(Token = "0x4001469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int servedCount;

	[Token(Token = "0x400146A")]
	private const string localizationKey = "stargoal_serve_all";

	[Token(Token = "0x400146B")]
	private const string localizationResultsKey = "stargoal_results_serve_all";

	[Token(Token = "0x17000271")]
	public override GoalType goalType
	{
		[Token(Token = "0x6001393")]
		[Address(RVA = "0x9941FC", Offset = "0x9941FC", VA = "0x9941FC", Slot = "6")]
		get
		{
			return default(GoalType);
		}
	}

	[Token(Token = "0x17000272")]
	public override string GoalDescription
	{
		[Token(Token = "0x6001394")]
		[Address(RVA = "0x994204", Offset = "0x994204", VA = "0x994204", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000273")]
	public override string GoalResultsDescription
	{
		[Token(Token = "0x6001395")]
		[Address(RVA = "0x99426C", Offset = "0x99426C", VA = "0x99426C", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001396")]
	[Address(RVA = "0x9942D4", Offset = "0x9942D4", VA = "0x9942D4")]
	public void Start()
	{
	}

	[Token(Token = "0x6001397")]
	[Address(RVA = "0x9944C4", Offset = "0x9944C4", VA = "0x9944C4", Slot = "9")]
	public override void ActivateGoal(LevelData level, LevelData.GoalData goalData, int playerCount)
	{
	}

	[Token(Token = "0x6001398")]
	[Address(RVA = "0x994500", Offset = "0x994500", VA = "0x994500")]
	private void OnPlateHandedIn(bool wasHandedIn, bool wasPerfect, CustomerType customerType, bool wasClean)
	{
	}

	[Token(Token = "0x6001399")]
	[Address(RVA = "0x994558", Offset = "0x994558", VA = "0x994558", Slot = "14")]
	protected override void SendSyncData(PhotonStream stream)
	{
	}

	[Token(Token = "0x600139A")]
	[Address(RVA = "0x9945F4", Offset = "0x9945F4", VA = "0x9945F4", Slot = "15")]
	protected override void ReceiveSyncData(PhotonStream stream, GoalState oldState)
	{
	}

	[Token(Token = "0x600139B")]
	[Address(RVA = "0x9946F4", Offset = "0x9946F4", VA = "0x9946F4", Slot = "11")]
	public override string GetPreRoundIconText()
	{
		return null;
	}

	[Token(Token = "0x600139C")]
	[Address(RVA = "0x99475C", Offset = "0x99475C", VA = "0x99475C", Slot = "12")]
	public override string GetRoundIconText()
	{
		return null;
	}

	[Token(Token = "0x600139D")]
	[Address(RVA = "0x9947FC", Offset = "0x9947FC", VA = "0x9947FC")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x600139E")]
	[Address(RVA = "0x99497C", Offset = "0x99497C", VA = "0x99497C")]
	public GoalServeAllCustomers()
	{
	}
}
[Token(Token = "0x20002DA")]
public class GoalServeAllPerfect : StarGoal, IPunObservable
{
	[Token(Token = "0x400146C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int targetCount;

	[Token(Token = "0x400146D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int servedCount;

	[Token(Token = "0x400146E")]
	private const string localizationKey = "stargoal_serve_allperfect";

	[Token(Token = "0x400146F")]
	private const string localizationResultsKey = "stargoal_serve_allperfect";

	[Token(Token = "0x17000274")]
	public override GoalType goalType
	{
		[Token(Token = "0x600139F")]
		[Address(RVA = "0x994984", Offset = "0x994984", VA = "0x994984", Slot = "6")]
		get
		{
			return default(GoalType);
		}
	}

	[Token(Token = "0x17000275")]
	public override string GoalDescription
	{
		[Token(Token = "0x60013A0")]
		[Address(RVA = "0x99498C", Offset = "0x99498C", VA = "0x99498C", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000276")]
	public override string GoalResultsDescription
	{
		[Token(Token = "0x60013A1")]
		[Address(RVA = "0x9949F4", Offset = "0x9949F4", VA = "0x9949F4", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60013A2")]
	[Address(RVA = "0x994A5C", Offset = "0x994A5C", VA = "0x994A5C")]
	public void Start()
	{
	}

	[Token(Token = "0x60013A3")]
	[Address(RVA = "0x994AEC", Offset = "0x994AEC", VA = "0x994AEC", Slot = "9")]
	public override void ActivateGoal(LevelData level, LevelData.GoalData goalData, int playerCount)
	{
	}

	[Token(Token = "0x60013A4")]
	[Address(RVA = "0x994B1C", Offset = "0x994B1C", VA = "0x994B1C")]
	private void OnPlateHandedIn(bool wasHandedIn, bool wasPerfect, CustomerType customerType, bool wasClean)
	{
	}

	[Token(Token = "0x60013A5")]
	[Address(RVA = "0x994B70", Offset = "0x994B70", VA = "0x994B70", Slot = "14")]
	protected override void SendSyncData(PhotonStream stream)
	{
	}

	[Token(Token = "0x60013A6")]
	[Address(RVA = "0x994C0C", Offset = "0x994C0C", VA = "0x994C0C", Slot = "15")]
	protected override void ReceiveSyncData(PhotonStream stream, GoalState oldState)
	{
	}

	[Token(Token = "0x60013A7")]
	[Address(RVA = "0x994D18", Offset = "0x994D18", VA = "0x994D18", Slot = "11")]
	public override string GetPreRoundIconText()
	{
		return null;
	}

	[Token(Token = "0x60013A8")]
	[Address(RVA = "0x994D80", Offset = "0x994D80", VA = "0x994D80", Slot = "12")]
	public override string GetRoundIconText()
	{
		return null;
	}

	[Token(Token = "0x60013A9")]
	[Address(RVA = "0x994E20", Offset = "0x994E20", VA = "0x994E20")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60013AA")]
	[Address(RVA = "0x994F04", Offset = "0x994F04", VA = "0x994F04")]
	public GoalServeAllPerfect()
	{
	}
}
[Token(Token = "0x20002DB")]
public class GoalServeManyCustomers : StarGoal, IPunObservable
{
	[Token(Token = "0x4001470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int targetCount;

	[Token(Token = "0x4001471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int servedCount;

	[Token(Token = "0x4001472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int remainingCount;

	[Token(Token = "0x4001473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private StringBuilder stringBuilder;

	[Token(Token = "0x4001474")]
	private const string localizationSingular = "stargoal_serve_customers_singular";

	[Token(Token = "0x4001475")]
	private const string localizationPlural = "stargoal_serve_customers_plural";

	[Token(Token = "0x4001476")]
	private const string localizationResultsSingular = "stargoal_results_serve_customers_singular";

	[Token(Token = "0x4001477")]
	private const string localizationResultsPlural = "stargoal_results_serve_customers_plural";

	[Token(Token = "0x4001478")]
	private const string replaceAmount = "{amount}";

	[Token(Token = "0x17000277")]
	public override GoalType goalType
	{
		[Token(Token = "0x60013AB")]
		[Address(RVA = "0x994F0C", Offset = "0x994F0C", VA = "0x994F0C", Slot = "6")]
		get
		{
			return default(GoalType);
		}
	}

	[Token(Token = "0x17000278")]
	public override string GoalDescription
	{
		[Token(Token = "0x60013AC")]
		[Address(RVA = "0x994F14", Offset = "0x994F14", VA = "0x994F14", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000279")]
	public override string GoalResultsDescription
	{
		[Token(Token = "0x60013AD")]
		[Address(RVA = "0x995090", Offset = "0x995090", VA = "0x995090", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60013AE")]
	[Address(RVA = "0x994F1C", Offset = "0x994F1C", VA = "0x994F1C")]
	private string getDescription(bool isResults)
	{
		return null;
	}

	[Token(Token = "0x60013AF")]
	[Address(RVA = "0x995098", Offset = "0x995098", VA = "0x995098")]
	public void Start()
	{
	}

	[Token(Token = "0x60013B0")]
	[Address(RVA = "0x995128", Offset = "0x995128", VA = "0x995128", Slot = "9")]
	public override void ActivateGoal(LevelData level, LevelData.GoalData goalData, int playerCount)
	{
	}

	[Token(Token = "0x60013B1")]
	[Address(RVA = "0x995180", Offset = "0x995180", VA = "0x995180")]
	private void OnPlateHandedIn(bool wasHandedIn, bool wasPerfect, CustomerType customerType, bool wasClean)
	{
	}

	[Token(Token = "0x60013B2")]
	[Address(RVA = "0x9951F0", Offset = "0x9951F0", VA = "0x9951F0", Slot = "14")]
	protected override void SendSyncData(PhotonStream stream)
	{
	}

	[Token(Token = "0x60013B3")]
	[Address(RVA = "0x9952B8", Offset = "0x9952B8", VA = "0x9952B8", Slot = "15")]
	protected override void ReceiveSyncData(PhotonStream stream, GoalState oldState)
	{
	}

	[Token(Token = "0x60013B4")]
	[Address(RVA = "0x9953F0", Offset = "0x9953F0", VA = "0x9953F0", Slot = "11")]
	public override string GetPreRoundIconText()
	{
		return null;
	}

	[Token(Token = "0x60013B5")]
	[Address(RVA = "0x995474", Offset = "0x995474", VA = "0x995474", Slot = "12")]
	public override string GetRoundIconText()
	{
		return null;
	}

	[Token(Token = "0x60013B6")]
	[Address(RVA = "0x995514", Offset = "0x995514", VA = "0x995514")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60013B7")]
	[Address(RVA = "0x9955F8", Offset = "0x9955F8", VA = "0x9955F8")]
	public GoalServeManyCustomers()
	{
	}
}
[Token(Token = "0x20002DC")]
public class GoalServeManyPerfect : StarGoal, IPunObservable
{
	[Token(Token = "0x4001479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int targetCount;

	[Token(Token = "0x400147A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int servedCount;

	[Token(Token = "0x400147B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int remainingCount;

	[Token(Token = "0x400147C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private StringBuilder stringBuilder;

	[Token(Token = "0x400147D")]
	private const string localizationSingular = "stargoal_serve_perfects_singular";

	[Token(Token = "0x400147E")]
	private const string localizationPlural = "stargoal_serve_perfects_plural";

	[Token(Token = "0x400147F")]
	private const string localizationResultsSingular = "stargoal_results_serve_perfects_singular";

	[Token(Token = "0x4001480")]
	private const string localizationResultsPlural = "stargoal_results_serve_perfects_plural";

	[Token(Token = "0x4001481")]
	private const string replaceAmount = "{amount}";

	[Token(Token = "0x1700027A")]
	public override GoalType goalType
	{
		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x995660", Offset = "0x995660", VA = "0x995660", Slot = "6")]
		get
		{
			return default(GoalType);
		}
	}

	[Token(Token = "0x1700027B")]
	public override string GoalDescription
	{
		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x995668", Offset = "0x995668", VA = "0x995668", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700027C")]
	public override string GoalResultsDescription
	{
		[Token(Token = "0x60013BA")]
		[Address(RVA = "0x9957E4", Offset = "0x9957E4", VA = "0x9957E4", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60013BB")]
	[Address(RVA = "0x995670", Offset = "0x995670", VA = "0x995670")]
	private string getDescription(bool isResults)
	{
		return null;
	}

	[Token(Token = "0x60013BC")]
	[Address(RVA = "0x9957EC", Offset = "0x9957EC", VA = "0x9957EC")]
	public void Start()
	{
	}

	[Token(Token = "0x60013BD")]
	[Address(RVA = "0x99587C", Offset = "0x99587C", VA = "0x99587C", Slot = "9")]
	public override void ActivateGoal(LevelData level, LevelData.GoalData goalData, int playerCount)
	{
	}

	[Token(Token = "0x60013BE")]
	[Address(RVA = "0x9958D4", Offset = "0x9958D4", VA = "0x9958D4")]
	private void OnPlateHandedIn(bool wasHandedIn, bool wasPerfect, CustomerType customerType, bool wasClean)
	{
	}

	[Token(Token = "0x60013BF")]
	[Address(RVA = "0x995948", Offset = "0x995948", VA = "0x995948", Slot = "14")]
	protected override void SendSyncData(PhotonStream stream)
	{
	}

	[Token(Token = "0x60013C0")]
	[Address(RVA = "0x995A10", Offset = "0x995A10", VA = "0x995A10", Slot = "15")]
	protected override void ReceiveSyncData(PhotonStream stream, GoalState oldState)
	{
	}

	[Token(Token = "0x60013C1")]
	[Address(RVA = "0x995B48", Offset = "0x995B48", VA = "0x995B48", Slot = "11")]
	public override string GetPreRoundIconText()
	{
		return null;
	}

	[Token(Token = "0x60013C2")]
	[Address(RVA = "0x995BCC", Offset = "0x995BCC", VA = "0x995BCC", Slot = "12")]
	public override string GetRoundIconText()
	{
		return null;
	}

	[Token(Token = "0x60013C3")]
	[Address(RVA = "0x995C6C", Offset = "0x995C6C", VA = "0x995C6C")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60013C4")]
	[Address(RVA = "0x995D50", Offset = "0x995D50", VA = "0x995D50")]
	public GoalServeManyPerfect()
	{
	}
}
[Token(Token = "0x20002DD")]
public class GoalServeManyPerfectsFinalLevel : StarGoal, IPunObservable
{
	[Token(Token = "0x4001482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int targetCount;

	[Token(Token = "0x4001483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int servedCount;

	[Token(Token = "0x4001484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int remainingCount;

	[Token(Token = "0x4001485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private StringBuilder stringBuilder;

	[Token(Token = "0x4001486")]
	private const string localizationSingular = "stargoal_serve_perfects_singular";

	[Token(Token = "0x4001487")]
	private const string localizationPlural = "stargoal_serve_perfects_plural";

	[Token(Token = "0x4001488")]
	private const string localizationResultsSingular = "stargoal_results_serve_perfects_singular";

	[Token(Token = "0x4001489")]
	private const string localizationResultsPlural = "stargoal_results_serve_perfects_plural";

	[Token(Token = "0x400148A")]
	private const string replaceAmount = "{amount}";

	[Token(Token = "0x1700027D")]
	public override GoalType goalType
	{
		[Token(Token = "0x60013C5")]
		[Address(RVA = "0x995DB8", Offset = "0x995DB8", VA = "0x995DB8", Slot = "6")]
		get
		{
			return default(GoalType);
		}
	}

	[Token(Token = "0x1700027E")]
	public override string GoalDescription
	{
		[Token(Token = "0x60013C6")]
		[Address(RVA = "0x995DC0", Offset = "0x995DC0", VA = "0x995DC0", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700027F")]
	public override string GoalResultsDescription
	{
		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x995F3C", Offset = "0x995F3C", VA = "0x995F3C", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60013C8")]
	[Address(RVA = "0x995DC8", Offset = "0x995DC8", VA = "0x995DC8")]
	private string getDescription(bool isResults)
	{
		return null;
	}

	[Token(Token = "0x60013C9")]
	[Address(RVA = "0x995F44", Offset = "0x995F44", VA = "0x995F44")]
	public void Start()
	{
	}

	[Token(Token = "0x60013CA")]
	[Address(RVA = "0x995FD4", Offset = "0x995FD4", VA = "0x995FD4", Slot = "9")]
	public override void ActivateGoal(LevelData level, LevelData.GoalData goalData, int playerCount)
	{
	}

	[Token(Token = "0x60013CB")]
	[Address(RVA = "0x9960F0", Offset = "0x9960F0", VA = "0x9960F0")]
	private void OnPlateHandedIn(bool wasHandedIn, bool wasPerfect, CustomerType customerType, bool wasClean)
	{
	}

	[Token(Token = "0x60013CC")]
	[Address(RVA = "0x996164", Offset = "0x996164", VA = "0x996164", Slot = "14")]
	protected override void SendSyncData(PhotonStream stream)
	{
	}

	[Token(Token = "0x60013CD")]
	[Address(RVA = "0x99622C", Offset = "0x99622C", VA = "0x99622C", Slot = "15")]
	protected override void ReceiveSyncData(PhotonStream stream, GoalState oldState)
	{
	}

	[Token(Token = "0x60013CE")]
	[Address(RVA = "0x996364", Offset = "0x996364", VA = "0x996364", Slot = "11")]
	public override string GetPreRoundIconText()
	{
		return null;
	}

	[Token(Token = "0x60013CF")]
	[Address(RVA = "0x9963E8", Offset = "0x9963E8", VA = "0x9963E8", Slot = "12")]
	public override string GetRoundIconText()
	{
		return null;
	}

	[Token(Token = "0x60013D0")]
	[Address(RVA = "0x996488", Offset = "0x996488", VA = "0x996488")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60013D1")]
	[Address(RVA = "0x99656C", Offset = "0x99656C", VA = "0x99656C")]
	public GoalServeManyPerfectsFinalLevel()
	{
	}
}
[Token(Token = "0x20002DE")]
public class GoalServePerfectTo : StarGoal
{
	[Token(Token = "0x400148B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private CustomerType target;

	[Token(Token = "0x400148C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int targetCount;

	[Token(Token = "0x400148D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int servedCount;

	[Token(Token = "0x400148E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int remainingCount;

	[Token(Token = "0x400148F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private StringBuilder stringBuilder;

	[Token(Token = "0x4001490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private CookingRound cookingRound;

	[Token(Token = "0x4001491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly string[] localizationSingular;

	[Token(Token = "0x4001492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly string[] localizationPlural;

	[Token(Token = "0x4001493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private readonly string[] localizationResultsSingular;

	[Token(Token = "0x4001494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private readonly string[] localizationResultsPlural;

	[Token(Token = "0x4001495")]
	private const string replaceAmount = "{amount}";

	[Token(Token = "0x17000280")]
	public override GoalType goalType
	{
		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x9965D4", Offset = "0x9965D4", VA = "0x9965D4", Slot = "6")]
		get
		{
			return default(GoalType);
		}
	}

	[Token(Token = "0x17000281")]
	public override string GoalDescription
	{
		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x9965DC", Offset = "0x9965DC", VA = "0x9965DC", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000282")]
	public override string GoalResultsDescription
	{
		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x99680C", Offset = "0x99680C", VA = "0x99680C", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60013D5")]
	[Address(RVA = "0x9965E4", Offset = "0x9965E4", VA = "0x9965E4")]
	private string getDescription(bool isResults)
	{
		return null;
	}

	[Token(Token = "0x60013D6")]
	[Address(RVA = "0x996814", Offset = "0x996814", VA = "0x996814")]
	public void Start()
	{
	}

	[Token(Token = "0x60013D7")]
	[Address(RVA = "0x9969A8", Offset = "0x9969A8", VA = "0x9969A8", Slot = "9")]
	public override void ActivateGoal(LevelData level, LevelData.GoalData goalData, int playerCount)
	{
	}

	[Token(Token = "0x60013D8")]
	[Address(RVA = "0x996A54", Offset = "0x996A54", VA = "0x996A54")]
	private void OnPlateHandedIn(bool wasHandedIn, bool wasPerfect, CustomerType customerType, bool wasClean)
	{
	}

	[Token(Token = "0x60013D9")]
	[Address(RVA = "0x996AD0", Offset = "0x996AD0", VA = "0x996AD0")]
	private void OnRoundEnded()
	{
	}

	[Token(Token = "0x60013DA")]
	[Address(RVA = "0x996AFC", Offset = "0x996AFC", VA = "0x996AFC", Slot = "14")]
	protected override void SendSyncData(PhotonStream stream)
	{
	}

	[Token(Token = "0x60013DB")]
	[Address(RVA = "0x996BE8", Offset = "0x996BE8", VA = "0x996BE8", Slot = "15")]
	protected override void ReceiveSyncData(PhotonStream stream, GoalState oldState)
	{
	}

	[Token(Token = "0x60013DC")]
	[Address(RVA = "0x996D80", Offset = "0x996D80", VA = "0x996D80", Slot = "10")]
	public override Sprite GetRoundIcon()
	{
		return null;
	}

	[Token(Token = "0x60013DD")]
	[Address(RVA = "0x996E60", Offset = "0x996E60", VA = "0x996E60", Slot = "11")]
	public override string GetPreRoundIconText()
	{
		return null;
	}

	[Token(Token = "0x60013DE")]
	[Address(RVA = "0x996EE4", Offset = "0x996EE4", VA = "0x996EE4", Slot = "12")]
	public override string GetRoundIconText()
	{
		return null;
	}

	[Token(Token = "0x60013DF")]
	[Address(RVA = "0x996F84", Offset = "0x996F84", VA = "0x996F84")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60013E0")]
	[Address(RVA = "0x9970FC", Offset = "0x9970FC", VA = "0x9970FC")]
	public GoalServePerfectTo()
	{
	}
}
[Token(Token = "0x20002DF")]
public class GoalSpeedRun : StarGoal, IPunObservable
{
	[Token(Token = "0x20002E0")]
	public enum Pace
	{
		[Token(Token = "0x40014AD")]
		Slow,
		[Token(Token = "0x40014AE")]
		Medium,
		[Token(Token = "0x40014AF")]
		Fast
	}

	[Token(Token = "0x4001496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Sprite[] preRoundIcons;

	[Token(Token = "0x4001497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly float[] warningThresholds;

	[Token(Token = "0x4001498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int startTime;

	[Token(Token = "0x4001499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float elapsedTime;

	[Token(Token = "0x400149A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float previousTimeStamp;

	[Token(Token = "0x400149B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool timerActive;

	[Token(Token = "0x400149C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int goalTimeThreshold;

	[Token(Token = "0x400149D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int nextTimerWarning;

	[Token(Token = "0x400149E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int targetCount;

	[Token(Token = "0x400149F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int servedCount;

	[Token(Token = "0x40014A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int remainingCount;

	[Token(Token = "0x40014A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Pace goalPace;

	[Token(Token = "0x40014A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private CookingRound cookingRound;

	[Token(Token = "0x40014A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private TimeSlowdownHandler slowdown;

	[Token(Token = "0x40014A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private StringBuilder stringBuilder;

	[Token(Token = "0x40014A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string latestRoundIconText;

	[Token(Token = "0x40014A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool roundIconTextChanged;

	[Token(Token = "0x40014A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private readonly string[] localizationSingular;

	[Token(Token = "0x40014A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private readonly string[] localizationPlural;

	[Token(Token = "0x40014A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private readonly string[] localizationResultsSingular;

	[Token(Token = "0x40014AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private readonly string[] localizationResultsPlural;

	[Token(Token = "0x40014AB")]
	private const string replaceAmount = "{amount}";

	[Token(Token = "0x17000283")]
	public override GoalType goalType
	{
		[Token(Token = "0x60013E1")]
		[Address(RVA = "0x997AF8", Offset = "0x997AF8", VA = "0x997AF8", Slot = "6")]
		get
		{
			return default(GoalType);
		}
	}

	[Token(Token = "0x17000284")]
	public override string GoalDescription
	{
		[Token(Token = "0x60013E2")]
		[Address(RVA = "0x997B00", Offset = "0x997B00", VA = "0x997B00", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000285")]
	public override string GoalResultsDescription
	{
		[Token(Token = "0x60013E3")]
		[Address(RVA = "0x997C78", Offset = "0x997C78", VA = "0x997C78", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60013E4")]
	[Address(RVA = "0x997C80", Offset = "0x997C80", VA = "0x997C80")]
	public void Start()
	{
	}

	[Token(Token = "0x60013E5")]
	[Address(RVA = "0x997B08", Offset = "0x997B08", VA = "0x997B08")]
	private string GenerateDescription(bool isResults)
	{
		return null;
	}

	[Token(Token = "0x60013E6")]
	[Address(RVA = "0x997EB0", Offset = "0x997EB0", VA = "0x997EB0", Slot = "9")]
	public override void ActivateGoal(LevelData level, LevelData.GoalData goalData, int playerCount)
	{
	}

	[Token(Token = "0x60013E7")]
	[Address(RVA = "0x997F4C", Offset = "0x997F4C", VA = "0x997F4C")]
	private void OnRoundStarted()
	{
	}

	[Token(Token = "0x60013E8")]
	[Address(RVA = "0x997FCC", Offset = "0x997FCC", VA = "0x997FCC")]
	private void Update()
	{
	}

	[Token(Token = "0x60013E9")]
	[Address(RVA = "0x998148", Offset = "0x998148", VA = "0x998148")]
	private void OnPlateHandedIn(bool wasHandedIn, bool wasPerfect, CustomerType customerType, bool wasClean)
	{
	}

	[Token(Token = "0x60013EA")]
	[Address(RVA = "0x998200", Offset = "0x998200", VA = "0x998200", Slot = "10")]
	public override Sprite GetRoundIcon()
	{
		return null;
	}

	[Token(Token = "0x60013EB")]
	[Address(RVA = "0x998234", Offset = "0x998234", VA = "0x998234", Slot = "14")]
	protected override void SendSyncData(PhotonStream stream)
	{
	}

	[Token(Token = "0x60013EC")]
	[Address(RVA = "0x9983FC", Offset = "0x9983FC", VA = "0x9983FC", Slot = "15")]
	protected override void ReceiveSyncData(PhotonStream stream, GoalState oldState)
	{
	}

	[Token(Token = "0x60013ED")]
	[Address(RVA = "0x9986F0", Offset = "0x9986F0", VA = "0x9986F0", Slot = "13")]
	public override float TimeFractionLeft()
	{
		return default(float);
	}

	[Token(Token = "0x60013EE")]
	[Address(RVA = "0x99871C", Offset = "0x99871C", VA = "0x99871C", Slot = "11")]
	public override string GetPreRoundIconText()
	{
		return null;
	}

	[Token(Token = "0x60013EF")]
	[Address(RVA = "0x9987A0", Offset = "0x9987A0", VA = "0x9987A0", Slot = "12")]
	public override string GetRoundIconText()
	{
		return null;
	}

	[Token(Token = "0x60013F0")]
	[Address(RVA = "0x998888", Offset = "0x998888", VA = "0x998888")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60013F1")]
	[Address(RVA = "0x998A00", Offset = "0x998A00", VA = "0x998A00")]
	public GoalSpeedRun()
	{
	}
}
[Token(Token = "0x20002E1")]
public class GoalThrowMany : StarGoal
{
	[Token(Token = "0x40014B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int targetCount;

	[Token(Token = "0x40014B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int thrownCount;

	[Token(Token = "0x40014B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CookingRound cookingRound;

	[Token(Token = "0x17000286")]
	public override GoalType goalType
	{
		[Token(Token = "0x60013F2")]
		[Address(RVA = "0x998E50", Offset = "0x998E50", VA = "0x998E50", Slot = "6")]
		get
		{
			return default(GoalType);
		}
	}

	[Token(Token = "0x17000287")]
	public override string GoalDescription
	{
		[Token(Token = "0x60013F3")]
		[Address(RVA = "0x998E58", Offset = "0x998E58", VA = "0x998E58", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000288")]
	public override string GoalResultsDescription
	{
		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x998F60", Offset = "0x998F60", VA = "0x998F60", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60013F5")]
	[Address(RVA = "0x999068", Offset = "0x999068", VA = "0x999068")]
	public void Start()
	{
	}

	[Token(Token = "0x60013F6")]
	[Address(RVA = "0x999354", Offset = "0x999354", VA = "0x999354", Slot = "9")]
	public override void ActivateGoal(LevelData level, LevelData.GoalData goalData, int playerCount)
	{
	}

	[Token(Token = "0x60013F7")]
	[Address(RVA = "0x999368", Offset = "0x999368", VA = "0x999368")]
	private void OnIngredientThrownOnPlate()
	{
	}

	[Token(Token = "0x60013F8")]
	[Address(RVA = "0x9993A4", Offset = "0x9993A4", VA = "0x9993A4")]
	private void OnRoundEnded()
	{
	}

	[Token(Token = "0x60013F9")]
	[Address(RVA = "0x9993D0", Offset = "0x9993D0", VA = "0x9993D0", Slot = "14")]
	protected override void SendSyncData(PhotonStream stream)
	{
	}

	[Token(Token = "0x60013FA")]
	[Address(RVA = "0x99946C", Offset = "0x99946C", VA = "0x99946C", Slot = "15")]
	protected override void ReceiveSyncData(PhotonStream stream, GoalState oldState)
	{
	}

	[Token(Token = "0x60013FB")]
	[Address(RVA = "0x99956C", Offset = "0x99956C", VA = "0x99956C", Slot = "11")]
	public override string GetPreRoundIconText()
	{
		return null;
	}

	[Token(Token = "0x60013FC")]
	[Address(RVA = "0x9995F0", Offset = "0x9995F0", VA = "0x9995F0", Slot = "12")]
	public override string GetRoundIconText()
	{
		return null;
	}

	[Token(Token = "0x60013FD")]
	[Address(RVA = "0x99969C", Offset = "0x99969C", VA = "0x99969C")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60013FE")]
	[Address(RVA = "0x9998B0", Offset = "0x9998B0", VA = "0x9998B0")]
	public GoalThrowMany()
	{
	}
}
[Token(Token = "0x20002E2")]
public class GoalTutorial : StarGoal, IPunObservable
{
	[Token(Token = "0x40014B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Sprite[] icons;

	[Token(Token = "0x40014B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int goalSlot;

	[Token(Token = "0x40014B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TutorialMode tutorialMode;

	[Token(Token = "0x40014B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int handInCount;

	[Token(Token = "0x40014B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int targetCount;

	[Token(Token = "0x40014B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private StringBuilder stringBuilder;

	[Token(Token = "0x40014B9")]
	private const string localizationSingular = "stargoal_serve_customers_singular";

	[Token(Token = "0x40014BA")]
	private const string localizationPlural = "stargoal_serve_customers_plural";

	[Token(Token = "0x40014BB")]
	private const string localizationPerfectSingular = "stargoal_serve_perfects_singular";

	[Token(Token = "0x40014BC")]
	private const string replaceAmount = "{amount}";

	[Token(Token = "0x17000289")]
	public override GoalType goalType
	{
		[Token(Token = "0x60013FF")]
		[Address(RVA = "0x9998B8", Offset = "0x9998B8", VA = "0x9998B8", Slot = "6")]
		get
		{
			return default(GoalType);
		}
	}

	[Token(Token = "0x1700028A")]
	public override string GoalDescription
	{
		[Token(Token = "0x6001400")]
		[Address(RVA = "0x9998C0", Offset = "0x9998C0", VA = "0x9998C0", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700028B")]
	public override string GoalResultsDescription
	{
		[Token(Token = "0x6001401")]
		[Address(RVA = "0x9998E4", Offset = "0x9998E4", VA = "0x9998E4", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001402")]
	[Address(RVA = "0x9998F8", Offset = "0x9998F8", VA = "0x9998F8")]
	public void Start()
	{
	}

	[Token(Token = "0x6001403")]
	[Address(RVA = "0x999A48", Offset = "0x999A48", VA = "0x999A48", Slot = "9")]
	public override void ActivateGoal(LevelData level, LevelData.GoalData goalData, int playerCount)
	{
	}

	[Token(Token = "0x6001404")]
	[Address(RVA = "0x999B9C", Offset = "0x999B9C", VA = "0x999B9C")]
	private void OnPlateHandedIn(bool wasHandedIn, bool wasPerfect, CustomerType customerType, bool wasClean)
	{
	}

	[Token(Token = "0x6001405")]
	[Address(RVA = "0x999BF8", Offset = "0x999BF8", VA = "0x999BF8", Slot = "12")]
	public override string GetRoundIconText()
	{
		return null;
	}

	[Token(Token = "0x6001406")]
	[Address(RVA = "0x999C98", Offset = "0x999C98", VA = "0x999C98", Slot = "10")]
	public override Sprite GetRoundIcon()
	{
		return null;
	}

	[Token(Token = "0x6001407")]
	[Address(RVA = "0x999CCC", Offset = "0x999CCC", VA = "0x999CCC", Slot = "14")]
	protected override void SendSyncData(PhotonStream stream)
	{
	}

	[Token(Token = "0x6001408")]
	[Address(RVA = "0x999D94", Offset = "0x999D94", VA = "0x999D94", Slot = "15")]
	protected override void ReceiveSyncData(PhotonStream stream, GoalState oldState)
	{
	}

	[Token(Token = "0x6001409")]
	[Address(RVA = "0x9998D4", Offset = "0x9998D4", VA = "0x9998D4")]
	private string GetDescription(int goalSlot)
	{
		return null;
	}

	[Token(Token = "0x600140A")]
	[Address(RVA = "0x999F34", Offset = "0x999F34", VA = "0x999F34")]
	private string getServeXDescription()
	{
		return null;
	}

	[Token(Token = "0x600140B")]
	[Address(RVA = "0x999ECC", Offset = "0x999ECC", VA = "0x999ECC")]
	private string getServePerfectDescription()
	{
		return null;
	}

	[Token(Token = "0x600140C")]
	[Address(RVA = "0x99A06C", Offset = "0x99A06C", VA = "0x99A06C")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x600140D")]
	[Address(RVA = "0x99A150", Offset = "0x99A150", VA = "0x99A150")]
	public GoalTutorial()
	{
	}
}
[Token(Token = "0x20002E3")]
public class GoalUseConsumable : StarGoal, IPunObservable
{
	[Token(Token = "0x40014BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int targetCount;

	[Token(Token = "0x40014BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int usedCount;

	[Token(Token = "0x40014BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CookingRound cookingRound;

	[Token(Token = "0x40014C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private StringBuilder stringBuilder;

	[Token(Token = "0x40014C1")]
	private const string localizationSingular = "stargoal_use_anypotion";

	[Token(Token = "0x40014C2")]
	private const string localizationPlural = "stargoal_use_anypotions";

	[Token(Token = "0x40014C3")]
	private const string localizationResultsSingular = "stargoal_results_use_anypotion";

	[Token(Token = "0x40014C4")]
	private const string localizationResultsPlural = "stargoal_results_use_anypotions";

	[Token(Token = "0x40014C5")]
	private const string replaceAmount = "{amount}";

	[Token(Token = "0x1700028C")]
	public override GoalType goalType
	{
		[Token(Token = "0x600140E")]
		[Address(RVA = "0x99A1E4", Offset = "0x99A1E4", VA = "0x99A1E4", Slot = "6")]
		get
		{
			return default(GoalType);
		}
	}

	[Token(Token = "0x1700028D")]
	public override string GoalDescription
	{
		[Token(Token = "0x600140F")]
		[Address(RVA = "0x99A1EC", Offset = "0x99A1EC", VA = "0x99A1EC", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700028E")]
	public override string GoalResultsDescription
	{
		[Token(Token = "0x6001410")]
		[Address(RVA = "0x99A368", Offset = "0x99A368", VA = "0x99A368", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001411")]
	[Address(RVA = "0x99A1F4", Offset = "0x99A1F4", VA = "0x99A1F4")]
	private string getDescription(bool isResults)
	{
		return null;
	}

	[Token(Token = "0x6001412")]
	[Address(RVA = "0x99A370", Offset = "0x99A370", VA = "0x99A370")]
	public void Start()
	{
	}

	[Token(Token = "0x6001413")]
	[Address(RVA = "0x99A664", Offset = "0x99A664", VA = "0x99A664", Slot = "9")]
	public override void ActivateGoal(LevelData level, LevelData.GoalData goalData, int playerCount)
	{
	}

	[Token(Token = "0x6001414")]
	[Address(RVA = "0x99A6A8", Offset = "0x99A6A8", VA = "0x99A6A8")]
	private void OnConsumableUsed(ConsumableType type)
	{
	}

	[Token(Token = "0x6001415")]
	[Address(RVA = "0x99A6E4", Offset = "0x99A6E4", VA = "0x99A6E4")]
	private void OnRoundEnded()
	{
	}

	[Token(Token = "0x6001416")]
	[Address(RVA = "0x99A710", Offset = "0x99A710", VA = "0x99A710", Slot = "11")]
	public override string GetPreRoundIconText()
	{
		return null;
	}

	[Token(Token = "0x6001417")]
	[Address(RVA = "0x99A794", Offset = "0x99A794", VA = "0x99A794", Slot = "12")]
	public override string GetRoundIconText()
	{
		return null;
	}

	[Token(Token = "0x6001418")]
	[Address(RVA = "0x99A834", Offset = "0x99A834", VA = "0x99A834", Slot = "14")]
	protected override void SendSyncData(PhotonStream stream)
	{
	}

	[Token(Token = "0x6001419")]
	[Address(RVA = "0x99A8D0", Offset = "0x99A8D0", VA = "0x99A8D0", Slot = "15")]
	protected override void ReceiveSyncData(PhotonStream stream, GoalState oldState)
	{
	}

	[Token(Token = "0x600141A")]
	[Address(RVA = "0x99A9D0", Offset = "0x99A9D0", VA = "0x99A9D0")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x600141B")]
	[Address(RVA = "0x99ABE4", Offset = "0x99ABE4", VA = "0x99ABE4")]
	public GoalUseConsumable()
	{
	}
}
[Token(Token = "0x20002E4")]
public class GoalUseConsumableX : StarGoal, IPunObservable
{
	[Token(Token = "0x40014C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int targetCount;

	[Token(Token = "0x40014C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ConsumableType target;

	[Token(Token = "0x40014C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int usedCount;

	[Token(Token = "0x40014C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CookingRound cookingRound;

	[Token(Token = "0x40014CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private StringBuilder stringBuilder;

	[Token(Token = "0x40014CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private readonly string[] localizationSingular;

	[Token(Token = "0x40014CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly string[] localizationPlural;

	[Token(Token = "0x40014CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly string[] localizationResultsSingular;

	[Token(Token = "0x40014CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private readonly string[] localizationResultsPlural;

	[Token(Token = "0x40014CF")]
	private const string replaceAmount = "{amount}";

	[Token(Token = "0x1700028F")]
	public override GoalType goalType
	{
		[Token(Token = "0x600141C")]
		[Address(RVA = "0x99AC4C", Offset = "0x99AC4C", VA = "0x99AC4C", Slot = "6")]
		get
		{
			return default(GoalType);
		}
	}

	[Token(Token = "0x17000290")]
	public override string GoalDescription
	{
		[Token(Token = "0x600141D")]
		[Address(RVA = "0x99AC54", Offset = "0x99AC54", VA = "0x99AC54", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000291")]
	public override string GoalResultsDescription
	{
		[Token(Token = "0x600141E")]
		[Address(RVA = "0x99AE84", Offset = "0x99AE84", VA = "0x99AE84", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600141F")]
	[Address(RVA = "0x99AC5C", Offset = "0x99AC5C", VA = "0x99AC5C")]
	private string getDescription(bool isResults)
	{
		return null;
	}

	[Token(Token = "0x6001420")]
	[Address(RVA = "0x99AE8C", Offset = "0x99AE8C", VA = "0x99AE8C")]
	public void Start()
	{
	}

	[Token(Token = "0x6001421")]
	[Address(RVA = "0x99B01C", Offset = "0x99B01C", VA = "0x99B01C", Slot = "9")]
	public override void ActivateGoal(LevelData level, LevelData.GoalData goalData, int playerCount)
	{
	}

	[Token(Token = "0x6001422")]
	[Address(RVA = "0x99B070", Offset = "0x99B070", VA = "0x99B070")]
	private void OnConsumableUsed(ConsumableType type)
	{
	}

	[Token(Token = "0x6001423")]
	[Address(RVA = "0x99B0BC", Offset = "0x99B0BC", VA = "0x99B0BC")]
	private void OnRoundEnded()
	{
	}

	[Token(Token = "0x6001424")]
	[Address(RVA = "0x99B0E8", Offset = "0x99B0E8", VA = "0x99B0E8", Slot = "10")]
	public override Sprite GetRoundIcon()
	{
		return null;
	}

	[Token(Token = "0x6001425")]
	[Address(RVA = "0x99B1D0", Offset = "0x99B1D0", VA = "0x99B1D0", Slot = "11")]
	public override string GetPreRoundIconText()
	{
		return null;
	}

	[Token(Token = "0x6001426")]
	[Address(RVA = "0x99B254", Offset = "0x99B254", VA = "0x99B254", Slot = "12")]
	public override string GetRoundIconText()
	{
		return null;
	}

	[Token(Token = "0x6001427")]
	[Address(RVA = "0x99B2F4", Offset = "0x99B2F4", VA = "0x99B2F4", Slot = "14")]
	protected override void SendSyncData(PhotonStream stream)
	{
	}

	[Token(Token = "0x6001428")]
	[Address(RVA = "0x99B3BC", Offset = "0x99B3BC", VA = "0x99B3BC", Slot = "15")]
	protected override void ReceiveSyncData(PhotonStream stream, GoalState oldState)
	{
	}

	[Token(Token = "0x6001429")]
	[Address(RVA = "0x99B4F0", Offset = "0x99B4F0", VA = "0x99B4F0")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x600142A")]
	[Address(RVA = "0x99B668", Offset = "0x99B668", VA = "0x99B668")]
	public GoalUseConsumableX()
	{
	}
}
[Token(Token = "0x20002E5")]
public class GoalUseNoConsumables : StarGoal, IPunObservable
{
	[Token(Token = "0x40014D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int targetCount;

	[Token(Token = "0x40014D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int servedCount;

	[Token(Token = "0x40014D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int remainingCount;

	[Token(Token = "0x40014D3")]
	private const string localizationSingular = "stargoal_use_nopotion_singular";

	[Token(Token = "0x40014D4")]
	private const string localizationPlural = "stargoal_use_nopotion_plural";

	[Token(Token = "0x40014D5")]
	private const string localizationResultsSingular = "stargoal_results_use_nopotion_singular";

	[Token(Token = "0x40014D6")]
	private const string localizationResultsPlural = "stargoal_results_use_nopotion_plural";

	[Token(Token = "0x40014D7")]
	private const string replaceAmount = "{amount}";

	[Token(Token = "0x40014D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private StringBuilder stringBuilder;

	[Token(Token = "0x17000292")]
	public override GoalType goalType
	{
		[Token(Token = "0x600142B")]
		[Address(RVA = "0x99C04C", Offset = "0x99C04C", VA = "0x99C04C", Slot = "6")]
		get
		{
			return default(GoalType);
		}
	}

	[Token(Token = "0x17000293")]
	public override string GoalDescription
	{
		[Token(Token = "0x600142C")]
		[Address(RVA = "0x99C054", Offset = "0x99C054", VA = "0x99C054", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000294")]
	public override string GoalResultsDescription
	{
		[Token(Token = "0x600142D")]
		[Address(RVA = "0x99C1D0", Offset = "0x99C1D0", VA = "0x99C1D0", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600142E")]
	[Address(RVA = "0x99C1D8", Offset = "0x99C1D8", VA = "0x99C1D8")]
	public void Start()
	{
	}

	[Token(Token = "0x600142F")]
	[Address(RVA = "0x99C05C", Offset = "0x99C05C", VA = "0x99C05C")]
	private string GetDescription(bool isResults)
	{
		return null;
	}

	[Token(Token = "0x6001430")]
	[Address(RVA = "0x99C2D4", Offset = "0x99C2D4", VA = "0x99C2D4", Slot = "9")]
	public override void ActivateGoal(LevelData level, LevelData.GoalData goalData, int playerCount)
	{
	}

	[Token(Token = "0x6001431")]
	[Address(RVA = "0x99C32C", Offset = "0x99C32C", VA = "0x99C32C")]
	private void FailGoal(ConsumableType type)
	{
	}

	[Token(Token = "0x6001432")]
	[Address(RVA = "0x99C358", Offset = "0x99C358", VA = "0x99C358")]
	private void OnPlateHandedIn(bool wasHandedIn, bool wasPerfect, CustomerType customerType, bool wasClean)
	{
	}

	[Token(Token = "0x6001433")]
	[Address(RVA = "0x99C3E4", Offset = "0x99C3E4", VA = "0x99C3E4", Slot = "14")]
	protected override void SendSyncData(PhotonStream stream)
	{
	}

	[Token(Token = "0x6001434")]
	[Address(RVA = "0x99C4AC", Offset = "0x99C4AC", VA = "0x99C4AC", Slot = "15")]
	protected override void ReceiveSyncData(PhotonStream stream, GoalState oldState)
	{
	}

	[Token(Token = "0x6001435")]
	[Address(RVA = "0x99C5E4", Offset = "0x99C5E4", VA = "0x99C5E4", Slot = "11")]
	public override string GetPreRoundIconText()
	{
		return null;
	}

	[Token(Token = "0x6001436")]
	[Address(RVA = "0x99C668", Offset = "0x99C668", VA = "0x99C668", Slot = "12")]
	public override string GetRoundIconText()
	{
		return null;
	}

	[Token(Token = "0x6001437")]
	[Address(RVA = "0x99C708", Offset = "0x99C708", VA = "0x99C708")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6001438")]
	[Address(RVA = "0x99C85C", Offset = "0x99C85C", VA = "0x99C85C")]
	public GoalUseNoConsumables()
	{
	}
}
[Token(Token = "0x20002E6")]
public class GoalWashAllPlates : StarGoal
{
	[Token(Token = "0x40014D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int remainingCount;

	[Token(Token = "0x40014DA")]
	private const string localizationKey = "stargoal_wash_all";

	[Token(Token = "0x40014DB")]
	private const string localizationResultsKey = "stargoal_results_wash_all";

	[Token(Token = "0x17000295")]
	public override GoalType goalType
	{
		[Token(Token = "0x6001439")]
		[Address(RVA = "0x99C8C4", Offset = "0x99C8C4", VA = "0x99C8C4", Slot = "6")]
		get
		{
			return default(GoalType);
		}
	}

	[Token(Token = "0x17000296")]
	public override string GoalDescription
	{
		[Token(Token = "0x600143A")]
		[Address(RVA = "0x99C8CC", Offset = "0x99C8CC", VA = "0x99C8CC", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000297")]
	public override string GoalResultsDescription
	{
		[Token(Token = "0x600143B")]
		[Address(RVA = "0x99C934", Offset = "0x99C934", VA = "0x99C934", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600143C")]
	[Address(RVA = "0x99C99C", Offset = "0x99C99C", VA = "0x99C99C")]
	public void Start()
	{
	}

	[Token(Token = "0x600143D")]
	[Address(RVA = "0x99CA2C", Offset = "0x99CA2C", VA = "0x99CA2C", Slot = "9")]
	public override void ActivateGoal(LevelData level, LevelData.GoalData goalData, int playerCount)
	{
	}

	[Token(Token = "0x600143E")]
	[Address(RVA = "0x99CA5C", Offset = "0x99CA5C", VA = "0x99CA5C")]
	private void OnPlateHandedIn(bool wasHandedIn, bool wasPerfect, CustomerType customerType, bool wasClean)
	{
	}

	[Token(Token = "0x600143F")]
	[Address(RVA = "0x99CAAC", Offset = "0x99CAAC", VA = "0x99CAAC", Slot = "14")]
	protected override void SendSyncData(PhotonStream stream)
	{
	}

	[Token(Token = "0x6001440")]
	[Address(RVA = "0x99CB24", Offset = "0x99CB24", VA = "0x99CB24", Slot = "15")]
	protected override void ReceiveSyncData(PhotonStream stream, GoalState oldState)
	{
	}

	[Token(Token = "0x6001441")]
	[Address(RVA = "0x99CBC4", Offset = "0x99CBC4", VA = "0x99CBC4")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6001442")]
	[Address(RVA = "0x99CCA8", Offset = "0x99CCA8", VA = "0x99CCA8")]
	public GoalWashAllPlates()
	{
	}
}
[Token(Token = "0x20002E7")]
public enum GoalState
{
	[Token(Token = "0x40014DD")]
	Inactive,
	[Token(Token = "0x40014DE")]
	Ongoing,
	[Token(Token = "0x40014DF")]
	Failed,
	[Token(Token = "0x40014E0")]
	Cleared
}
[Token(Token = "0x20002E8")]
public abstract class StarGoal : NetworkedBehaviour, IPunObservable
{
	[Token(Token = "0x40014E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected Sprite icon;

	[Token(Token = "0x40014E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GoalState stateBacking;

	[Token(Token = "0x40014E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected int playerCount;

	[Token(Token = "0x40014E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected bool displayDataChanged;

	[Token(Token = "0x40014E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected StarGoalsHandler goalsHandlerBacking;

	[Token(Token = "0x40014E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int goalIndex;

	[Token(Token = "0x17000298")]
	public GoalState State
	{
		[Token(Token = "0x6001443")]
		[Address(RVA = "0x99CCB0", Offset = "0x99CCB0", VA = "0x99CCB0")]
		get
		{
			return default(GoalState);
		}
		[Token(Token = "0x6001444")]
		[Address(RVA = "0x993F4C", Offset = "0x993F4C", VA = "0x993F4C")]
		set
		{
		}
	}

	[Token(Token = "0x17000299")]
	protected StarGoalsHandler GoalsHandler
	{
		[Token(Token = "0x6001445")]
		[Address(RVA = "0x993CBC", Offset = "0x993CBC", VA = "0x993CBC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700029A")]
	public abstract GoalType goalType
	{
		[Token(Token = "0x6001447")]
		get;
	}

	[Token(Token = "0x1700029B")]
	public abstract string GoalDescription
	{
		[Token(Token = "0x6001448")]
		get;
	}

	[Token(Token = "0x1700029C")]
	public abstract string GoalResultsDescription
	{
		[Token(Token = "0x6001449")]
		get;
	}

	[Token(Token = "0x6001446")]
	[Address(RVA = "0x99CE68", Offset = "0x99CE68", VA = "0x99CE68", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x600144A")]
	[Address(RVA = "0x9944F4", Offset = "0x9944F4", VA = "0x9944F4", Slot = "9")]
	public virtual void ActivateGoal(LevelData level, LevelData.GoalData goalData, int playerCount)
	{
	}

	[Token(Token = "0x600144B")]
	[Address(RVA = "0x99CF08", Offset = "0x99CF08", VA = "0x99CF08", Slot = "10")]
	public virtual Sprite GetRoundIcon()
	{
		return null;
	}

	[Token(Token = "0x600144C")]
	[Address(RVA = "0x99CF10", Offset = "0x99CF10", VA = "0x99CF10", Slot = "11")]
	public virtual string GetPreRoundIconText()
	{
		return null;
	}

	[Token(Token = "0x600144D")]
	[Address(RVA = "0x99CF58", Offset = "0x99CF58", VA = "0x99CF58", Slot = "12")]
	public virtual string GetRoundIconText()
	{
		return null;
	}

	[Token(Token = "0x600144E")]
	[Address(RVA = "0x99CFA0", Offset = "0x99CFA0", VA = "0x99CFA0", Slot = "13")]
	public virtual float TimeFractionLeft()
	{
		return default(float);
	}

	[Token(Token = "0x600144F")]
	[Address(RVA = "0x99CFA8", Offset = "0x99CFA8", VA = "0x99CFA8")]
	public bool ConsumeDisplayDataChange()
	{
		return default(bool);
	}

	[Token(Token = "0x6001450")]
	[Address(RVA = "0x99CFC4", Offset = "0x99CFC4", VA = "0x99CFC4", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6001451")]
	[Address(RVA = "0x99D1F8", Offset = "0x99D1F8", VA = "0x99D1F8", Slot = "14")]
	protected virtual void SendSyncData(PhotonStream stream)
	{
	}

	[Token(Token = "0x6001452")]
	[Address(RVA = "0x99D1FC", Offset = "0x99D1FC", VA = "0x99D1FC", Slot = "15")]
	protected virtual void ReceiveSyncData(PhotonStream stream, GoalState oldState)
	{
	}

	[Token(Token = "0x6001453")]
	[Address(RVA = "0x9941F4", Offset = "0x9941F4", VA = "0x9941F4")]
	protected StarGoal()
	{
	}
}
[Token(Token = "0x20002E9")]
public enum GoalType
{
	[Token(Token = "0x40014E8")]
	None = -1,
	[Token(Token = "0x40014E9")]
	ServeX,
	[Token(Token = "0x40014EA")]
	Speed,
	[Token(Token = "0x40014EB")]
	PerfectionX,
	[Token(Token = "0x40014EC")]
	NoConsumable,
	[Token(Token = "0x40014ED")]
	ServeAll,
	[Token(Token = "0x40014EE")]
	PerfectionAll,
	[Token(Token = "0x40014EF")]
	ServeManyPerfectsToType,
	[Token(Token = "0x40014F0")]
	UseAnyConsumable,
	[Token(Token = "0x40014F1")]
	WashAllPlates,
	[Token(Token = "0x40014F2")]
	NoRearranging,
	[Token(Token = "0x40014F3")]
	ThrowX,
	[Token(Token = "0x40014F4")]
	UseConsumableX,
	[Token(Token = "0x40014F5")]
	Tutorial,
	[Token(Token = "0x40014F6")]
	ServeXPerfectFinalLevel
}
[Token(Token = "0x20002EA")]
public class StarGoalsHandler : SingleInstanceNetworkedBehavior<StarGoalsHandler>, IPunObservable
{
	[Token(Token = "0x20002EB")]
	public delegate void StarGoalsPlateHandedIn(bool wasHandedIn, bool wasPerfect, CustomerType customerType, bool wasClean);

	[Token(Token = "0x20002EC")]
	public delegate void StarGoalsConsumableUsed(ConsumableType type);

	[Token(Token = "0x20002ED")]
	public delegate void StarGoalIngredientThrownOnPlate();

	[Token(Token = "0x20002EE")]
	public delegate void StarGoalsTopIngredientRemoved();

	[Token(Token = "0x20002EF")]
	public delegate void GoalWasCleared();

	[Token(Token = "0x40014F7")]
	public const int goalCount = 3;

	[Token(Token = "0x40014FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private StarGoal[] goalPrefabs;

	[Token(Token = "0x40014FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private PhotonView[] activeGoalViews;

	[Token(Token = "0x40014FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TableCenterUI tableCenterUI;

	[Token(Token = "0x4001500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private StarGoalsWindowUI starGoalsWindowUI;

	[Token(Token = "0x4001501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private StarGoal[] activeGoals;

	[Token(Token = "0x4001502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Dictionary<GoalType, GameObject> goalPrefabDict;

	[Token(Token = "0x1400002B")]
	public event StarGoalsPlateHandedIn OnPlateHandedIn
	{
		[Token(Token = "0x6001454")]
		[Address(RVA = "0x994428", Offset = "0x994428", VA = "0x994428")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001455")]
		[Address(RVA = "0x9948E0", Offset = "0x9948E0", VA = "0x9948E0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400002C")]
	public event StarGoalsConsumableUsed OnConsumableUsed
	{
		[Token(Token = "0x6001456")]
		[Address(RVA = "0x99A5C8", Offset = "0x99A5C8", VA = "0x99A5C8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001457")]
		[Address(RVA = "0x99AB48", Offset = "0x99AB48", VA = "0x99AB48")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400002D")]
	public event StarGoalIngredientThrownOnPlate OnIngredientThrownOnPlate
	{
		[Token(Token = "0x6001458")]
		[Address(RVA = "0x9992B8", Offset = "0x9992B8", VA = "0x9992B8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001459")]
		[Address(RVA = "0x999814", Offset = "0x999814", VA = "0x999814")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400002E")]
	public event StarGoalsTopIngredientRemoved OnTopIngredientRemoved
	{
		[Token(Token = "0x600145A")]
		[Address(RVA = "0x993E84", Offset = "0x993E84", VA = "0x993E84")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600145B")]
		[Address(RVA = "0x994150", Offset = "0x994150", VA = "0x994150")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400002F")]
	public event GoalWasCleared OnGoalCleared
	{
		[Token(Token = "0x600145C")]
		[Address(RVA = "0x99D200", Offset = "0x99D200", VA = "0x99D200")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600145D")]
		[Address(RVA = "0x99D29C", Offset = "0x99D29C", VA = "0x99D29C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600145E")]
	[Address(RVA = "0x99D338", Offset = "0x99D338", VA = "0x99D338")]
	private void Start()
	{
	}

	[Token(Token = "0x600145F")]
	[Address(RVA = "0x99D550", Offset = "0x99D550", VA = "0x99D550")]
	private void Update()
	{
	}

	[Token(Token = "0x6001460")]
	[Address(RVA = "0x99DB68", Offset = "0x99DB68", VA = "0x99DB68")]
	public void SetGoals(LevelData level)
	{
	}

	[Token(Token = "0x6001461")]
	[Address(RVA = "0x99D178", Offset = "0x99D178", VA = "0x99D178")]
	public void OnGoalActivated(StarGoal goal, int i)
	{
	}

	[Token(Token = "0x6001462")]
	[Address(RVA = "0x99DF44", Offset = "0x99DF44", VA = "0x99DF44")]
	public void RemoveActiveGoals()
	{
	}

	[Token(Token = "0x6001463")]
	[Address(RVA = "0x99CCB8", Offset = "0x99CCB8", VA = "0x99CCB8")]
	public void OnGoalFailed()
	{
	}

	[Token(Token = "0x6001464")]
	[Address(RVA = "0x99CE18", Offset = "0x99CE18", VA = "0x99CE18")]
	public void OnNewGoalCleared()
	{
	}

	[Token(Token = "0x6001465")]
	[Address(RVA = "0x99E114", Offset = "0x99E114", VA = "0x99E114")]
	public StarGoal[] GetActiveGoals()
	{
		return null;
	}

	[Token(Token = "0x6001466")]
	[Address(RVA = "0x99E11C", Offset = "0x99E11C", VA = "0x99E11C")]
	[PunRPC]
	public void OnIngredientThrownOnPlateRPC()
	{
	}

	[Token(Token = "0x6001467")]
	[Address(RVA = "0x99E16C", Offset = "0x99E16C", VA = "0x99E16C")]
	public void PlateRemovedFromPlay(bool wasHandedIn, bool wasPerfect, CustomerType customerType, bool wasClean)
	{
	}

	[Token(Token = "0x6001468")]
	[Address(RVA = "0x99E1F4", Offset = "0x99E1F4", VA = "0x99E1F4")]
	public void PlateTopIngredientRemoved()
	{
	}

	[Token(Token = "0x6001469")]
	[Address(RVA = "0x99E244", Offset = "0x99E244", VA = "0x99E244")]
	[PunRPC]
	private void ConsumableWasUsedRPC(int type)
	{
	}

	[Token(Token = "0x600146A")]
	[Address(RVA = "0x99E2A8", Offset = "0x99E2A8", VA = "0x99E2A8")]
	public bool[] GetClearedGoals()
	{
		return null;
	}

	[Token(Token = "0x600146B")]
	[Address(RVA = "0x99E3D0", Offset = "0x99E3D0", VA = "0x99E3D0")]
	public int GetClearedGoalsCount()
	{
		return default(int);
	}

	[Token(Token = "0x600146C")]
	[Address(RVA = "0x99E4AC", Offset = "0x99E4AC", VA = "0x99E4AC")]
	public float GetGoalTimeFraction(int index)
	{
		return default(float);
	}

	[Token(Token = "0x600146D")]
	[Address(RVA = "0x99E4EC", Offset = "0x99E4EC", VA = "0x99E4EC", Slot = "6")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600146E")]
	[Address(RVA = "0x99E7D4", Offset = "0x99E7D4", VA = "0x99E7D4")]
	public StarGoalsHandler()
	{
	}
}
[Token(Token = "0x20002F0")]
public class StarGoalsWindowUI : SingleInstanceBehavior<StarGoalsWindowUI>
{
	[Token(Token = "0x4001503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SpriteRenderer[] iconRenderers;

	[Token(Token = "0x4001504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshPro[] iconTexts;

	[Token(Token = "0x4001505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private MeshRenderer[] timerQuads;

	[Token(Token = "0x4001506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private SpriteRenderer[] goalStateIcons;

	[Token(Token = "0x4001507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private SpriteRenderer[] starTraceIcons;

	[Token(Token = "0x4001508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform[] starSlots;

	[Token(Token = "0x4001509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Sprite goalCleared;

	[Token(Token = "0x400150A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Sprite goalFailed;

	[Token(Token = "0x400150B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Header("Timer colors")]
	[SerializeField]
	private Color greenTimeColor;

	[Token(Token = "0x400150C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Color yellowTimeColor;

	[Token(Token = "0x400150D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Color redTimeColor;

	[Token(Token = "0x400150E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Color timeSlowdownColor;

	[Token(Token = "0x4001510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool[] isDisplayingGoal;

	[Token(Token = "0x4001511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private MaterialPropertyBlock propertyBlock;

	[Token(Token = "0x4001512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Transform[] starHolders;

	[Token(Token = "0x4001513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3[] starHoldersStartPositions;

	[Token(Token = "0x4001514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private TimeSlowdownHandler timeSlowdown;

	[Token(Token = "0x4001515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private StarGoalsHandler goalsHandler;

	[Token(Token = "0x4001516")]
	private const string propertyProgress = "_Progress";

	[Token(Token = "0x4001517")]
	private const string propertyColor = "_Color";

	[Token(Token = "0x4001518")]
	private const int goalCount = 3;

	[Token(Token = "0x1700029D")]
	public bool IsLocallyAnimating
	{
		[Token(Token = "0x6001483")]
		[Address(RVA = "0x99EC18", Offset = "0x99EC18", VA = "0x99EC18")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001484")]
		[Address(RVA = "0x99EC20", Offset = "0x99EC20", VA = "0x99EC20")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6001485")]
	[Address(RVA = "0x99EC2C", Offset = "0x99EC2C", VA = "0x99EC2C", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6001486")]
	[Address(RVA = "0x99EED8", Offset = "0x99EED8", VA = "0x99EED8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001487")]
	[Address(RVA = "0x99D70C", Offset = "0x99D70C", VA = "0x99D70C")]
	public void UpdateGoal(int goalIndex, Sprite icon, string iconText, GoalState goalState)
	{
	}

	[Token(Token = "0x6001488")]
	[Address(RVA = "0x99D848", Offset = "0x99D848", VA = "0x99D848")]
	public void UpdateTimedGoal(int goalIndex, float fractionLeft)
	{
	}

	[Token(Token = "0x6001489")]
	[Address(RVA = "0x99D6DC", Offset = "0x99D6DC", VA = "0x99D6DC")]
	public bool IsDisplayingGoalAtIndex(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x600148A")]
	[Address(RVA = "0x99DA08", Offset = "0x99DA08", VA = "0x99DA08")]
	public void RemoveGoalDisplayedAt(int i)
	{
	}

	[Token(Token = "0x600148B")]
	[Address(RVA = "0x99F03C", Offset = "0x99F03C", VA = "0x99F03C")]
	public void OnPostRoundAnimationStarted()
	{
	}

	[Token(Token = "0x600148C")]
	[Address(RVA = "0x99F13C", Offset = "0x99F13C", VA = "0x99F13C")]
	public Vector3 GetStarHolderStartPosition(int index)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600148D")]
	[Address(RVA = "0x99F178", Offset = "0x99F178", VA = "0x99F178")]
	public void MoveDownStarHolder(int i, float starHolderDropLength, float time)
	{
	}

	[Token(Token = "0x600148E")]
	[Address(RVA = "0x99F280", Offset = "0x99F280", VA = "0x99F280")]
	public void ShowGoalIconText(int index, string text, Sprite icon, bool showTimerQuad)
	{
	}

	[Token(Token = "0x600148F")]
	[Address(RVA = "0x99F380", Offset = "0x99F380", VA = "0x99F380")]
	public void ShowStarTrace(int index)
	{
	}

	[Token(Token = "0x6001490")]
	[Address(RVA = "0x99F3BC", Offset = "0x99F3BC", VA = "0x99F3BC")]
	public Transform GetStarSlot(int i)
	{
		return null;
	}

	[Token(Token = "0x6001491")]
	[Address(RVA = "0x99F3EC", Offset = "0x99F3EC", VA = "0x99F3EC")]
	public void OnPostRoundAnimationFinished()
	{
	}

	[Token(Token = "0x6001492")]
	[Address(RVA = "0x99F4FC", Offset = "0x99F4FC", VA = "0x99F4FC")]
	public StarGoalsWindowUI()
	{
	}
}
[Token(Token = "0x20002F1")]
public class TableCenterUI : SingleInstanceNetworkedBehavior<TableCenterUI>, IPunObservable
{
	[Token(Token = "0x20002F2")]
	public enum State
	{
		[Token(Token = "0x4001547")]
		Hidden,
		[Token(Token = "0x4001548")]
		ConfirmEndless,
		[Token(Token = "0x4001549")]
		RoundStarGoals,
		[Token(Token = "0x400154A")]
		ConfirmTutorialMode,
		[Token(Token = "0x400154B")]
		Story,
		[Token(Token = "0x400154C")]
		TutorialStory,
		[Token(Token = "0x400154D")]
		EndlessStory,
		[Token(Token = "0x400154E")]
		FinalLevelOutro,
		[Token(Token = "0x400154F")]
		FinalLevelOutro2Star,
		[Token(Token = "0x4001550")]
		FinalLevelOutro3Star,
		[Token(Token = "0x4001551")]
		ConfirmCreativeMode
	}

	[Token(Token = "0x20002F3")]
	[CompilerGenerated]
	private sealed class <PresentGoals>d__50 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TableCenterUI <>4__this;

		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x1700029F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014A2")]
			[Address(RVA = "0x9A0BC4", Offset = "0x9A0BC4", VA = "0x9A0BC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014A4")]
			[Address(RVA = "0x9A0C0C", Offset = "0x9A0C0C", VA = "0x9A0C0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0x99FAD0", Offset = "0x99FAD0", VA = "0x99FAD0")]
		[DebuggerHidden]
		public <PresentGoals>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0x9A07A0", Offset = "0x9A07A0", VA = "0x9A07A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0x9A07A4", Offset = "0x9A07A4", VA = "0x9A07A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0x9A0BCC", Offset = "0x9A0BCC", VA = "0x9A0BCC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001519")]
	private const int goalCount = 3;

	[Token(Token = "0x400151A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject visualsParent;

	[Token(Token = "0x400151B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x400151C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private MeshRenderer townBarIllustration;

	[Token(Token = "0x400151D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private LocalizedText townBarText;

	[Token(Token = "0x400151E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TextMeshPro subHeaderText;

	[Token(Token = "0x400151F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private TextMeshPro roundCounterText;

	[Token(Token = "0x4001520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Texture[] environmentIllustrations;

	[Token(Token = "0x4001521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Texture tutorialIllustration;

	[Token(Token = "0x4001522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject starGoalsPage;

	[Token(Token = "0x4001523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject storyPage;

	[Token(Token = "0x4001524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject tutorialPage;

	[Token(Token = "0x4001525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject endlessModePage;

	[Token(Token = "0x4001526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Header("Campaign: Star Goals")]
	[SerializeField]
	private GameObject starGoalsParent;

	[Token(Token = "0x4001527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject starGoalsBackground;

	[Token(Token = "0x4001528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private ParticleSystem goalParticles;

	[Token(Token = "0x4001529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject[] stars;

	[Token(Token = "0x400152A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private SpriteRenderer[] goalIcons;

	[Token(Token = "0x400152B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private TextMeshPro[] goalIconTexts;

	[Token(Token = "0x400152C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private TextMeshPro[] goalDescriptions;

	[Token(Token = "0x400152D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private Transform[] goalParticlesAnchors;

	[Token(Token = "0x400152E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private Color[] levelLengthColors;

	[Token(Token = "0x400152F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private float exitAnimationTime;

	[Token(Token = "0x4001530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[SerializeField]
	private float goalRevealSpacingTime;

	[Token(Token = "0x4001531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[Header("Endless Mode")]
	[SerializeField]
	private GameObject endlessModeParent;

	[Token(Token = "0x4001532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private TextMeshPro endlessPersonalBest;

	[Token(Token = "0x4001533")]
	private const string triggerEnter = "Enter";

	[Token(Token = "0x4001534")]
	private const string triggerExit = "Exit";

	[Token(Token = "0x4001535")]
	private const string propertyMainTexture = "_MainTex";

	[Token(Token = "0x4001536")]
	private const string localizationCampaginRound = "campaign_round";

	[Token(Token = "0x4001537")]
	private const string localizationEndlessHeader = "endless_header";

	[Token(Token = "0x4001538")]
	private const string localizationCreativeHeader = "creative_header";

	[Token(Token = "0x4001539")]
	private const string localizationTutorialHeader = "tutorial_header";

	[Token(Token = "0x400153A")]
	private const string localizationStoryOutroHeader = "story_outro_header";

	[Token(Token = "0x400153B")]
	private const string localizationEndlessPersonalBest = "endless_personal_best";

	[Token(Token = "0x400153C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3 starScale;

	[Token(Token = "0x400153D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private SaveManager saveManager;

	[Token(Token = "0x400153E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private MaterialPropertyBlock matPropBlock;

	[Token(Token = "0x400153F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private StoryDisplay storyDisplay;

	[Token(Token = "0x4001540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private WaitForSeconds goalRevealSpacing;

	[Token(Token = "0x4001541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private LocalizedText subHeaderTextLocalized;

	[Token(Token = "0x4001542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private State state;

	[Token(Token = "0x4001543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private Vector3 startPos;

	[Token(Token = "0x4001544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Coroutine starPresentationRoutine;

	[Token(Token = "0x4001545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private State syncedState;

	[Token(Token = "0x1700029E")]
	public float StoryVoiceOverLength
	{
		[Token(Token = "0x6001493")]
		[Address(RVA = "0x99F594", Offset = "0x99F594", VA = "0x99F594")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6001494")]
	[Address(RVA = "0x99F5B0", Offset = "0x99F5B0", VA = "0x99F5B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001495")]
	[Address(RVA = "0x99E04C", Offset = "0x99E04C", VA = "0x99E04C")]
	public void SetStarGoalIconAndText(int goalIndex, Sprite icon, string iconText, string description)
	{
	}

	[Token(Token = "0x6001496")]
	[Address(RVA = "0x99FA68", Offset = "0x99FA68", VA = "0x99FA68")]
	[IteratorStateMachine(typeof(<PresentGoals>d__50))]
	private IEnumerator PresentGoals()
	{
		return null;
	}

	[Token(Token = "0x6001497")]
	[Address(RVA = "0x99F7B4", Offset = "0x99F7B4", VA = "0x99F7B4")]
	public void ShowAtTableCenter(State newState)
	{
	}

	[Token(Token = "0x6001498")]
	[Address(RVA = "0x99FAF8", Offset = "0x99FAF8", VA = "0x99FAF8")]
	private void UpdateContent(State newState)
	{
	}

	[Token(Token = "0x6001499")]
	[Address(RVA = "0x99F914", Offset = "0x99F914", VA = "0x99F914")]
	public void Hide()
	{
	}

	[Token(Token = "0x600149A")]
	[Address(RVA = "0x9A04AC", Offset = "0x9A04AC", VA = "0x9A04AC")]
	public void OnStoryFinishedPlaying()
	{
	}

	[Token(Token = "0x600149B")]
	[Address(RVA = "0x9A0504", Offset = "0x9A0504", VA = "0x9A0504")]
	public void OnEndlessStoryFinished()
	{
	}

	[Token(Token = "0x600149C")]
	[Address(RVA = "0x9A055C", Offset = "0x9A055C", VA = "0x9A055C", Slot = "6")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600149D")]
	[Address(RVA = "0x9A0618", Offset = "0x9A0618", VA = "0x9A0618")]
	public TableCenterUI()
	{
	}
}
[Token(Token = "0x20002F4")]
public class ConveyorBelt : SingleInstanceNetworkedBehavior<ConveyorBelt>
{
	[Token(Token = "0x4001556")]
	private const float RADIUS_FROM_CENTER = 0.29f;

	[Token(Token = "0x4001557")]
	private const float CENTER_DOWN_TIMER = 1.5f;

	[Token(Token = "0x4001558")]
	private const float CENTER_AUDIO_TRIGGER_HEIGHT_DOWN = 1.18f;

	[Token(Token = "0x4001559")]
	private const float CENTER_AUDIO_TRIGGER_HEIGHT_UP = 1.05f;

	[Token(Token = "0x400155A")]
	private const float BELT_HEIGHT_DEFAULT = 1.08f;

	[Token(Token = "0x400155B")]
	private const float BELT_HEIGHT_MAP = 1.095f;

	[Token(Token = "0x400155C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject beltRenderer;

	[Token(Token = "0x400155D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Rigidbody beltPhysics;

	[Token(Token = "0x400155E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Rigidbody beltCenter;

	[Token(Token = "0x400155F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 centerStartPosition;

	[Token(Token = "0x4001560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 centerDownPosition;

	[Token(Token = "0x4001561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float centerDownTimer;

	[Token(Token = "0x4001562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float centerAudioLastPosY;

	[Token(Token = "0x4001563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CookingGameState gameState;

	[Token(Token = "0x4001564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Quaternion startRotation;

	[Token(Token = "0x4001565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Map.State? mapStateLast;

	[NonSerialized]
	[Token(Token = "0x4001566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float degreesPerSecond;

	[Token(Token = "0x170002A1")]
	public bool IsMoving
	{
		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x9A0C14", Offset = "0x9A0C14", VA = "0x9A0C14")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x9A0C1C", Offset = "0x9A0C1C", VA = "0x9A0C1C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170002A2")]
	public float BeltRotation
	{
		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x9A0C28", Offset = "0x9A0C28", VA = "0x9A0C28")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60014A8")]
		[Address(RVA = "0x9A0C30", Offset = "0x9A0C30", VA = "0x9A0C30")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170002A3")]
	public List<ConveyorPlateSlot> PlateSlots
	{
		[Token(Token = "0x60014A9")]
		[Address(RVA = "0x9A0C38", Offset = "0x9A0C38", VA = "0x9A0C38")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x9A0C40", Offset = "0x9A0C40", VA = "0x9A0C40")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170002A4")]
	public float CenterSurfaceHeight
	{
		[Token(Token = "0x60014AB")]
		[Address(RVA = "0x9A0C48", Offset = "0x9A0C48", VA = "0x9A0C48")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170002A5")]
	public Vector3 Pivot
	{
		[Token(Token = "0x60014AC")]
		[Address(RVA = "0x9A0C78", Offset = "0x9A0C78", VA = "0x9A0C78")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170002A6")]
	public int NumberOfSlots
	{
		[Token(Token = "0x60014AD")]
		[Address(RVA = "0x9A0CA0", Offset = "0x9A0CA0", VA = "0x9A0CA0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60014AE")]
	[Address(RVA = "0x9A0CE8", Offset = "0x9A0CE8", VA = "0x9A0CE8", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60014AF")]
	[Address(RVA = "0x9A1000", Offset = "0x9A1000", VA = "0x9A1000")]
	private void Start()
	{
	}

	[Token(Token = "0x60014B0")]
	[Address(RVA = "0x9A13CC", Offset = "0x9A13CC", VA = "0x9A13CC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60014B1")]
	[Address(RVA = "0x9A0F4C", Offset = "0x9A0F4C", VA = "0x9A0F4C")]
	private void RotateToNetworkedPosition()
	{
	}

	[Token(Token = "0x60014B2")]
	[Address(RVA = "0x9A184C", Offset = "0x9A184C", VA = "0x9A184C")]
	public void OnPlateHandIn()
	{
	}

	[Token(Token = "0x60014B3")]
	[Address(RVA = "0x9A1858", Offset = "0x9A1858", VA = "0x9A1858")]
	public ConveyorPlateSlot GetUnoccupiedSlot()
	{
		return null;
	}

	[Token(Token = "0x60014B4")]
	[Address(RVA = "0x9A0E08", Offset = "0x9A0E08", VA = "0x9A0E08")]
	private void PositionConveyorPlateSlots()
	{
	}

	[Token(Token = "0x60014B5")]
	[Address(RVA = "0x9A1954", Offset = "0x9A1954", VA = "0x9A1954")]
	private Vector3 PositionOnCircle(float angle, float radius, float height)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60014B6")]
	[Address(RVA = "0x9A1998", Offset = "0x9A1998", VA = "0x9A1998")]
	public void ShowBelt(bool shouldShow)
	{
	}

	[Token(Token = "0x60014B7")]
	[Address(RVA = "0x9A19B8", Offset = "0x9A19B8", VA = "0x9A19B8")]
	private void OnCountdownStarted()
	{
	}

	[Token(Token = "0x60014B8")]
	[Address(RVA = "0x9A19D8", Offset = "0x9A19D8", VA = "0x9A19D8")]
	private void OnRoundStart()
	{
	}

	[Token(Token = "0x60014B9")]
	[Address(RVA = "0x9A139C", Offset = "0x9A139C", VA = "0x9A139C")]
	private void StopBelt()
	{
	}

	[Token(Token = "0x60014BA")]
	[Address(RVA = "0x9A19F8", Offset = "0x9A19F8", VA = "0x9A19F8")]
	private void StartBelt()
	{
	}

	[Token(Token = "0x60014BB")]
	[Address(RVA = "0x9A1A04", Offset = "0x9A1A04", VA = "0x9A1A04")]
	private void OnGameStateChanged(GameState oldState, GameState newState)
	{
	}

	[Token(Token = "0x60014BC")]
	[Address(RVA = "0x9A1A4C", Offset = "0x9A1A4C", VA = "0x9A1A4C")]
	public void SetMoving(bool shouldMove)
	{
	}

	[Token(Token = "0x60014BD")]
	[Address(RVA = "0x9A1A78", Offset = "0x9A1A78", VA = "0x9A1A78")]
	public ConveyorBelt()
	{
	}
}
[Token(Token = "0x20002F5")]
public class FryingPan : NetworkedBehaviour
{
	[Token(Token = "0x400156A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float velocityLoss;

	[Token(Token = "0x400156B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float softSoundVelocityThreshold;

	[Token(Token = "0x400156C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float heavySoundVelocityThreshold;

	[Token(Token = "0x400156D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody myRigidbody;

	[Token(Token = "0x60014BE")]
	[Address(RVA = "0x9A1AE4", Offset = "0x9A1AE4", VA = "0x9A1AE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60014BF")]
	[Address(RVA = "0x9A1B34", Offset = "0x9A1B34", VA = "0x9A1B34")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60014C0")]
	[Address(RVA = "0x9A208C", Offset = "0x9A208C", VA = "0x9A208C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60014C1")]
	[Address(RVA = "0x9A2358", Offset = "0x9A2358", VA = "0x9A2358")]
	[PunRPC]
	private void PanCollisionRPC(Vector3 v, Vector3 vAng)
	{
	}

	[Token(Token = "0x60014C2")]
	[Address(RVA = "0x9A1E90", Offset = "0x9A1E90", VA = "0x9A1E90")]
	private void PlayHapticFeedback(CookoutAvatarHand hand)
	{
	}

	[Token(Token = "0x60014C3")]
	[Address(RVA = "0x9A24FC", Offset = "0x9A24FC", VA = "0x9A24FC")]
	public FryingPan()
	{
	}
}
[Token(Token = "0x20002F6")]
public class HandInColliderEnabler : SingleInstanceNetworkedBehavior<HandInColliderEnabler>, IPunObservable
{
	[Token(Token = "0x400156E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool collidersEnabledBacking;

	[Token(Token = "0x400156F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Collider handInCollider;

	[Token(Token = "0x4001570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Collider throwInCollider;

	[Token(Token = "0x170002A7")]
	public bool CollidersEnabled
	{
		[Token(Token = "0x60014C4")]
		[Address(RVA = "0x9A251C", Offset = "0x9A251C", VA = "0x9A251C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60014C5")]
		[Address(RVA = "0x9A2524", Offset = "0x9A2524", VA = "0x9A2524")]
		set
		{
		}
	}

	[Token(Token = "0x60014C6")]
	[Address(RVA = "0x9A256C", Offset = "0x9A256C", VA = "0x9A256C", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60014C7")]
	[Address(RVA = "0x9A25B4", Offset = "0x9A25B4", VA = "0x9A25B4", Slot = "6")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60014C8")]
	[Address(RVA = "0x9A267C", Offset = "0x9A267C", VA = "0x9A267C")]
	public HandInColliderEnabler()
	{
	}
}
[Token(Token = "0x20002F7")]
public class ReturnToOriginIfLost : NetworkedBehaviour, IPunObservable
{
	[Token(Token = "0x20002F8")]
	[CompilerGenerated]
	private sealed class <SetKinematicTemporary>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ReturnToOriginIfLost <>4__this;

		[Token(Token = "0x170002AA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014D9")]
			[Address(RVA = "0x9A33E8", Offset = "0x9A33E8", VA = "0x9A33E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014DB")]
			[Address(RVA = "0x9A3430", Offset = "0x9A3430", VA = "0x9A3430", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0x9A2F04", Offset = "0x9A2F04", VA = "0x9A2F04")]
		[DebuggerHidden]
		public <SetKinematicTemporary>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0x9A32C0", Offset = "0x9A32C0", VA = "0x9A32C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0x9A32C4", Offset = "0x9A32C4", VA = "0x9A32C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0x9A33F0", Offset = "0x9A33F0", VA = "0x9A33F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float returnDistanceThreshold;

	[Token(Token = "0x4001574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Vector3 myOriginPos;

	[Token(Token = "0x4001575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private Quaternion myOriginRot;

	[Token(Token = "0x4001576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private float returnToOriginTime;

	[Token(Token = "0x4001577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private bool setKinematicOnReturn;

	[Token(Token = "0x4001578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	[Header("Rubber band teleportation hotfix")]
	[SerializeField]
	private bool tempKinematicOnRespawn;

	[Token(Token = "0x4001579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private float tempKinematicDuration;

	[Token(Token = "0x400157A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private bool syncReturnPositionOverNetwork;

	[Token(Token = "0x400157B")]
	private const float returnHeightThreshold = 1.08f;

	[Token(Token = "0x400157C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Rigidbody rigidBody;

	[Token(Token = "0x400157D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private PhotonTransformView transformView;

	[Token(Token = "0x400157E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Grabbable grabbable;

	[Token(Token = "0x400157F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float returnToOriginTimer;

	[Token(Token = "0x4001580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float returnTimer;

	[Token(Token = "0x4001581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float returnCooldown;

	[Token(Token = "0x4001582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Transform myTransform;

	[Token(Token = "0x170002A8")]
	public Vector3 OriginPos
	{
		[Token(Token = "0x60014C9")]
		[Address(RVA = "0x9A26F0", Offset = "0x9A26F0", VA = "0x9A26F0")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60014CA")]
		[Address(RVA = "0x9A26FC", Offset = "0x9A26FC", VA = "0x9A26FC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170002A9")]
	public Quaternion OriginRot
	{
		[Token(Token = "0x60014CB")]
		[Address(RVA = "0x9A2708", Offset = "0x9A2708", VA = "0x9A2708")]
		[CompilerGenerated]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x60014CC")]
		[Address(RVA = "0x9A2714", Offset = "0x9A2714", VA = "0x9A2714")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60014CD")]
	[Address(RVA = "0x9A2720", Offset = "0x9A2720", VA = "0x9A2720")]
	private void Awake()
	{
	}

	[Token(Token = "0x60014CE")]
	[Address(RVA = "0x9A28B4", Offset = "0x9A28B4", VA = "0x9A28B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60014CF")]
	[Address(RVA = "0x9A2BFC", Offset = "0x9A2BFC", VA = "0x9A2BFC")]
	private void OnGrabBegin()
	{
	}

	[Token(Token = "0x60014D0")]
	[Address(RVA = "0x9A2AAC", Offset = "0x9A2AAC", VA = "0x9A2AAC")]
	public void ReturnToOriginPosition()
	{
	}

	[Token(Token = "0x60014D1")]
	[Address(RVA = "0x9A2C04", Offset = "0x9A2C04", VA = "0x9A2C04")]
	[PunRPC]
	private void ReturnToOriginPositionRPC(Vector3 currentPos)
	{
	}

	[Token(Token = "0x60014D2")]
	[Address(RVA = "0x9A2E9C", Offset = "0x9A2E9C", VA = "0x9A2E9C")]
	[IteratorStateMachine(typeof(<SetKinematicTemporary>d__29))]
	private IEnumerator SetKinematicTemporary()
	{
		return null;
	}

	[Token(Token = "0x60014D3")]
	[Address(RVA = "0x9A2F2C", Offset = "0x9A2F2C", VA = "0x9A2F2C", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60014D4")]
	[Address(RVA = "0x9A31C0", Offset = "0x9A31C0", VA = "0x9A31C0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60014D5")]
	[Address(RVA = "0x9A3294", Offset = "0x9A3294", VA = "0x9A3294")]
	public ReturnToOriginIfLost()
	{
	}
}
[Token(Token = "0x20002F9")]
public class SpiceShaker : NetworkedBehaviour
{
	[Token(Token = "0x4001586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float angleThreshold;

	[Token(Token = "0x4001587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float speedThreshold;

	[Token(Token = "0x4001588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float particleRate;

	[Token(Token = "0x4001589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float spiceMagnitude;

	[Token(Token = "0x400158A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject hitBox;

	[Token(Token = "0x400158B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool facingWorldDown;

	[Token(Token = "0x400158C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int numMovesTracked;

	[Token(Token = "0x400158D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int currentTrackedMove;

	[Token(Token = "0x400158E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3[] trackedMoves;

	[Token(Token = "0x400158F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 previousPos;

	[Token(Token = "0x4001590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool movingUp;

	[Token(Token = "0x4001591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform particleSpawnPoint;

	[Token(Token = "0x4001592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Grabbable grabbable;

	[Token(Token = "0x4001593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Collider[] collidersHit;

	[Token(Token = "0x60014DC")]
	[Address(RVA = "0x9A3438", Offset = "0x9A3438", VA = "0x9A3438")]
	private void Awake()
	{
	}

	[Token(Token = "0x60014DD")]
	[Address(RVA = "0x9A349C", Offset = "0x9A349C", VA = "0x9A349C")]
	private void Start()
	{
	}

	[Token(Token = "0x60014DE")]
	[Address(RVA = "0x9A357C", Offset = "0x9A357C", VA = "0x9A357C")]
	private void Update()
	{
	}

	[Token(Token = "0x60014DF")]
	[Address(RVA = "0x9A3F00", Offset = "0x9A3F00", VA = "0x9A3F00")]
	public SpiceShaker()
	{
	}
}
[Token(Token = "0x20002FA")]
public class TipHandler : SingleInstanceBehavior<TipHandler>, IPunObservable
{
	[Token(Token = "0x4001595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CustomerRegistry customerRegistry;

	[Token(Token = "0x4001596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CookingRound cookingRound;

	[Token(Token = "0x170002AC")]
	public int CoinTipSum
	{
		[Token(Token = "0x60014E0")]
		[Address(RVA = "0x9A3F6C", Offset = "0x9A3F6C", VA = "0x9A3F6C")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60014E1")]
		[Address(RVA = "0x9A3F74", Offset = "0x9A3F74", VA = "0x9A3F74")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60014E2")]
	[Address(RVA = "0x9A3F7C", Offset = "0x9A3F7C", VA = "0x9A3F7C")]
	private void Start()
	{
	}

	[Token(Token = "0x60014E3")]
	[Address(RVA = "0x9A413C", Offset = "0x9A413C", VA = "0x9A413C")]
	public void OnPlateDeliver(bool wasPerfect, CustomerType customer)
	{
	}

	[Token(Token = "0x60014E4")]
	[Address(RVA = "0x9A417C", Offset = "0x9A417C", VA = "0x9A417C")]
	public void OnRoundStart()
	{
	}

	[Token(Token = "0x60014E5")]
	[Address(RVA = "0x9A4184", Offset = "0x9A4184", VA = "0x9A4184", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x60014E6")]
	[Address(RVA = "0x9A4284", Offset = "0x9A4284", VA = "0x9A4284", Slot = "6")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60014E7")]
	[Address(RVA = "0x9A4340", Offset = "0x9A4340", VA = "0x9A4340")]
	public TipHandler()
	{
	}
}
[Token(Token = "0x20002FB")]
public class ApplicationTracking : SingleInstanceBehavior<ApplicationTracking>
{
	[Token(Token = "0x20002FC")]
	private enum Mode
	{
		[Token(Token = "0x400159B")]
		None,
		[Token(Token = "0x400159C")]
		Menu,
		[Token(Token = "0x400159D")]
		Tutorial,
		[Token(Token = "0x400159E")]
		SinglePlayer,
		[Token(Token = "0x400159F")]
		Multiplayer
	}

	[Token(Token = "0x20002FD")]
	public enum JoinRoomBy
	{
		[Token(Token = "0x40015A1")]
		None,
		[Token(Token = "0x40015A2")]
		RoomList,
		[Token(Token = "0x40015A3")]
		SuggestedRooms,
		[Token(Token = "0x40015A4")]
		EnterCode,
		[Token(Token = "0x40015A5")]
		QuickJoin,
		[Token(Token = "0x40015A6")]
		DeepLink,
		[Token(Token = "0x40015A7")]
		GroupLaunch,
		[Token(Token = "0x40015A8")]
		DebugMenu
	}

	[Token(Token = "0x20002FE")]
	public struct JoinData
	{
		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public JoinRoomBy joinRoomBy;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool[] filterButtonStates;
	}

	[Token(Token = "0x4001597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Mode currentMode;

	[Token(Token = "0x4001598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float startTimeStamp;

	[Token(Token = "0x4001599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TutorialMode tutorialMode;

	[Token(Token = "0x60014E8")]
	[Address(RVA = "0x9A43AC", Offset = "0x9A43AC", VA = "0x9A43AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60014E9")]
	[Address(RVA = "0x9A47F4", Offset = "0x9A47F4", VA = "0x9A47F4")]
	public static void SendSessionProgressionEvent(string event_name, MapProgression.Rank[] beatenCups)
	{
	}

	[Token(Token = "0x60014EA")]
	[Address(RVA = "0x9A4668", Offset = "0x9A4668", VA = "0x9A4668")]
	private void RefreshCurrentMode()
	{
	}

	[Token(Token = "0x60014EB")]
	[Address(RVA = "0x9A4A14", Offset = "0x9A4A14", VA = "0x9A4A14")]
	private void Instance_onTutorialStepChange(TutorialStep newStep)
	{
	}

	[Token(Token = "0x60014EC")]
	[Address(RVA = "0x9A4A90", Offset = "0x9A4A90", VA = "0x9A4A90")]
	private void SetNewMode(Mode newMode)
	{
	}

	[Token(Token = "0x60014ED")]
	[Address(RVA = "0x9A4AC0", Offset = "0x9A4AC0", VA = "0x9A4AC0")]
	private void SubmitTimeSpentInCurrentMode()
	{
	}

	[Token(Token = "0x60014EE")]
	[Address(RVA = "0x9A4DB0", Offset = "0x9A4DB0", VA = "0x9A4DB0")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60014EF")]
	[Address(RVA = "0x9A4DBC", Offset = "0x9A4DBC", VA = "0x9A4DBC")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60014F0")]
	[Address(RVA = "0x9A4DC0", Offset = "0x9A4DC0", VA = "0x9A4DC0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60014F1")]
	[Address(RVA = "0x9A4ED0", Offset = "0x9A4ED0", VA = "0x9A4ED0", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x60014F2")]
	[Address(RVA = "0x9A5064", Offset = "0x9A5064", VA = "0x9A5064")]
	public static void OnJoiningRoom(JoinData data)
	{
	}

	[Token(Token = "0x60014F3")]
	[Address(RVA = "0x9A53D4", Offset = "0x9A53D4", VA = "0x9A53D4")]
	private static Dictionary<RoomIntent, bool> GetIntentsIncludedInFilter(bool[] filterButtonStates)
	{
		return null;
	}

	[Token(Token = "0x60014F4")]
	[Address(RVA = "0x9A563C", Offset = "0x9A563C", VA = "0x9A563C")]
	public static void OnRoomListFilterChanged(int buttonIndex, bool isIncludedInFilter)
	{
	}

	[Token(Token = "0x60014F5")]
	[Address(RVA = "0x9A5964", Offset = "0x9A5964", VA = "0x9A5964")]
	public static void OnRoomCreated(RoomIntent roomIntent, RoomVisibility roomVisibility)
	{
	}

	[Token(Token = "0x60014F6")]
	[Address(RVA = "0x9A5BA0", Offset = "0x9A5BA0", VA = "0x9A5BA0")]
	public ApplicationTracking()
	{
	}
}
[Token(Token = "0x20002FF")]
public class BotTracking : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40015AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Bot bot;

	[Token(Token = "0x40015AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CookingRound cookingRound;

	[Token(Token = "0x40015AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float timeSpentWaiting;

	[Token(Token = "0x40015AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timeSpentUncharged;

	[Token(Token = "0x40015AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool roundActive;

	[Token(Token = "0x40015B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool outOfPower;

	[Token(Token = "0x40015B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int restartedCount;

	[Token(Token = "0x60014F7")]
	[Address(RVA = "0x9A5C0C", Offset = "0x9A5C0C", VA = "0x9A5C0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60014F8")]
	[Address(RVA = "0x9A5C5C", Offset = "0x9A5C5C", VA = "0x9A5C5C")]
	private void Start()
	{
	}

	[Token(Token = "0x60014F9")]
	[Address(RVA = "0x9A5DE8", Offset = "0x9A5DE8", VA = "0x9A5DE8")]
	private void Update()
	{
	}

	[Token(Token = "0x60014FA")]
	[Address(RVA = "0x9A5ECC", Offset = "0x9A5ECC", VA = "0x9A5ECC")]
	private void OnRoundStart()
	{
	}

	[Token(Token = "0x60014FB")]
	[Address(RVA = "0x9A5EE0", Offset = "0x9A5EE0", VA = "0x9A5EE0")]
	private void OnRoundStop()
	{
	}

	[Token(Token = "0x60014FC")]
	[Address(RVA = "0x9A6140", Offset = "0x9A6140", VA = "0x9A6140")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60014FD")]
	[Address(RVA = "0x9A6280", Offset = "0x9A6280", VA = "0x9A6280")]
	public BotTracking()
	{
	}
}
[Token(Token = "0x2000300")]
public static class CreativeModeTracking
{
	[Token(Token = "0x40015B2")]
	private const string roundEndByWristMenuEvent = "creative_round_end_by_wrist_menu";

	[Token(Token = "0x40015B3")]
	private const string startRoundEvent = "creative_round_start";

	[Token(Token = "0x40015B4")]
	private const string roundEndByVoteEvent = "creative_round_end_by_vote";

	[Token(Token = "0x40015B5")]
	private const string onRoundEndEvent = "creative_round_end_per_player";

	[Token(Token = "0x40015B6")]
	private const string onRecipeDiscoveredEvent = "creative_round_recipe_found";

	[Token(Token = "0x40015B7")]
	private const string playerCountParameter = "player_count";

	[Token(Token = "0x40015B8")]
	private const string recipesUnlockParameter = "recipe_unlock_count";

	[Token(Token = "0x40015B9")]
	private const string photoSaveCount = "photo_save_count";

	[Token(Token = "0x40015BA")]
	private const string photoShareCount = "photo_share_count";

	[Token(Token = "0x40015BB")]
	private const string newRecipeID = "recipe_id";

	[Token(Token = "0x60014FE")]
	[Address(RVA = "0x9A6288", Offset = "0x9A6288", VA = "0x9A6288")]
	public static void OnRoundEndByWristMenu()
	{
	}

	[Token(Token = "0x60014FF")]
	[Address(RVA = "0x9A640C", Offset = "0x9A640C", VA = "0x9A640C")]
	public static void OnStartedRound()
	{
	}

	[Token(Token = "0x6001500")]
	[Address(RVA = "0x9A6590", Offset = "0x9A6590", VA = "0x9A6590")]
	public static void OnRoundEndByVote()
	{
	}

	[Token(Token = "0x6001501")]
	[Address(RVA = "0x9A6714", Offset = "0x9A6714", VA = "0x9A6714")]
	public static void OnRoundEnded(int recipesFound, int photosSaved, int photosShared)
	{
	}

	[Token(Token = "0x6001502")]
	[Address(RVA = "0x9A696C", Offset = "0x9A696C", VA = "0x9A696C")]
	public static void OnNewRecipeFound(string recipeID)
	{
	}
}
[Token(Token = "0x2000301")]
public class FoodFightTracking : SingleInstanceBehavior<FoodFightTracking>
{
	[Token(Token = "0x40015BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int numberOfPlayerHits;

	[Token(Token = "0x6001503")]
	[Address(RVA = "0x9A6AB0", Offset = "0x9A6AB0", VA = "0x9A6AB0")]
	public void HitPlayerWithIngredient()
	{
	}

	[Token(Token = "0x6001504")]
	[Address(RVA = "0x9A6AC0", Offset = "0x9A6AC0", VA = "0x9A6AC0")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6001505")]
	[Address(RVA = "0x9A6C2C", Offset = "0x9A6C2C", VA = "0x9A6C2C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001506")]
	[Address(RVA = "0x9A6AD8", Offset = "0x9A6AD8", VA = "0x9A6AD8")]
	private void SubmitNumberOfPlayerHits()
	{
	}

	[Token(Token = "0x6001507")]
	[Address(RVA = "0x9A6C40", Offset = "0x9A6C40", VA = "0x9A6C40")]
	public FoodFightTracking()
	{
	}
}
[Token(Token = "0x2000302")]
public static class GameTracking
{
	[Token(Token = "0x6001508")]
	[Address(RVA = "0x9A6CAC", Offset = "0x9A6CAC", VA = "0x9A6CAC")]
	public static void Start()
	{
	}

	[Token(Token = "0x6001509")]
	[Address(RVA = "0x9A6DBC", Offset = "0x9A6DBC", VA = "0x9A6DBC")]
	public static void OnFirstTimeBeatenTown(int beatenTownIndex, MapProgression.Rank rank)
	{
	}
}
[Token(Token = "0x2000303")]
public class LauncherSettingsTracking
{
	[Token(Token = "0x40015BD")]
	private const string changeVolumeEvent = "settings_main_volume";

	[Token(Token = "0x40015BE")]
	private const string changeLanguageEvent = "settings_main_language";

	[Token(Token = "0x40015BF")]
	private const string changeAutoholdEvent = "settings_main_autohold";

	[Token(Token = "0x40015C0")]
	private const string changeHandednessEvent = "settings_main_handedness";

	[Token(Token = "0x40015C1")]
	private const string chosenLanguageParameter = "selected_language";

	[Token(Token = "0x40015C2")]
	private const string autoholdParameter = "auto_grip";

	[Token(Token = "0x40015C3")]
	private const string handednessParameter = "handedness";

	[Token(Token = "0x40015C4")]
	private const string volumeMusicParameter = "volume_music";

	[Token(Token = "0x40015C5")]
	private const string volumeVoipParameter = "volume_voip";

	[Token(Token = "0x40015C6")]
	private const string volumeSoundParameter = "volume_sound";

	[Token(Token = "0x40015C7")]
	private const string volumeMusicDeltaParameter = "volume_music_delta";

	[Token(Token = "0x40015C8")]
	private const string volumeVoipDeltaParameter = "volume_voip_delta";

	[Token(Token = "0x40015C9")]
	private const string volumeSoundDeltaParameter = "volume_sound_delta";

	[Token(Token = "0x40015CA")]
	private const string rightHanded = "Right";

	[Token(Token = "0x40015CB")]
	private const string leftHanded = "Left";

	[Token(Token = "0x40015CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float volumeMusic;

	[Token(Token = "0x40015CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float volumeVoip;

	[Token(Token = "0x40015CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float volumeSound;

	[Token(Token = "0x40015CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float volumeMusicDelta;

	[Token(Token = "0x40015D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static float volumeVoipDelta;

	[Token(Token = "0x40015D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static float volumeSoundDelta;

	[Token(Token = "0x600150A")]
	[Address(RVA = "0x9A74D0", Offset = "0x9A74D0", VA = "0x9A74D0")]
	public static void SubmitChangeLocalEvent(string chosenLanguage)
	{
	}

	[Token(Token = "0x600150B")]
	[Address(RVA = "0x9A7614", Offset = "0x9A7614", VA = "0x9A7614")]
	public static void SubmitChangeAutoholdEvent(bool autoholdActive)
	{
	}

	[Token(Token = "0x600150C")]
	[Address(RVA = "0x9A775C", Offset = "0x9A775C", VA = "0x9A775C")]
	public static void SubmitChangeHandednessEvent(CookoutHandedness handedness)
	{
	}

	[Token(Token = "0x600150D")]
	[Address(RVA = "0x9A78D8", Offset = "0x9A78D8", VA = "0x9A78D8")]
	public static void SubmitLauncherAudioSettings()
	{
	}

	[Token(Token = "0x600150E")]
	[Address(RVA = "0x9A7D5C", Offset = "0x9A7D5C", VA = "0x9A7D5C")]
	public LauncherSettingsTracking()
	{
	}
}
[Token(Token = "0x2000304")]
public class RoundPerformanceTracking : SingleInstanceBehavior<RoundPerformanceTracking>
{
	[Token(Token = "0x40015D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool debugMenuUsed;

	[Token(Token = "0x40015D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool failByRoyal;

	[Token(Token = "0x40015D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float roundStartTime;

	[Token(Token = "0x40015D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int[] consumablesUsed;

	[Token(Token = "0x40015D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LevelData level;

	[Token(Token = "0x40015D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int dishesWashed;

	[Token(Token = "0x40015D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int platesServedDirty;

	[Token(Token = "0x40015D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int consumablesUsedSum;

	[Token(Token = "0x40015DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int servedPlateCount;

	[Token(Token = "0x40015DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int servedPerfectPlateCount;

	[Token(Token = "0x40015DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] customerTypesServed;

	[Token(Token = "0x40015DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CookingRound cookingRound;

	[Token(Token = "0x40015DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private StarGoalsHandler goalsHandler;

	[Token(Token = "0x40015DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private CookingCup cookingCup;

	[Token(Token = "0x600150F")]
	[Address(RVA = "0x9A7D64", Offset = "0x9A7D64", VA = "0x9A7D64")]
	private void Start()
	{
	}

	[Token(Token = "0x6001510")]
	[Address(RVA = "0x9A808C", Offset = "0x9A808C", VA = "0x9A808C")]
	public void TrackRoundResult(bool roundFailed, bool roundAborted)
	{
	}

	[Token(Token = "0x6001511")]
	[Address(RVA = "0x9A84DC", Offset = "0x9A84DC", VA = "0x9A84DC")]
	private void TrackRoundEnd(string townName, int levelID, int playerCount, string clearState, bool townCleared, int clearTime, string levelLength, StarGoal[] goals, int[] consumableUsed, bool hasActiveBots)
	{
	}

	[Token(Token = "0x6001512")]
	[Address(RVA = "0x9A99D8", Offset = "0x9A99D8", VA = "0x9A99D8")]
	public void TrackEndlessRoundResult()
	{
	}

	[Token(Token = "0x6001513")]
	[Address(RVA = "0x9A9628", Offset = "0x9A9628", VA = "0x9A9628")]
	private string ParseGoalInfo(StarGoal goal, int goalIndex)
	{
		return null;
	}

	[Token(Token = "0x6001514")]
	[Address(RVA = "0x9AA824", Offset = "0x9AA824", VA = "0x9AA824")]
	private void RoundStart()
	{
	}

	[Token(Token = "0x6001515")]
	[Address(RVA = "0x9AA930", Offset = "0x9AA930", VA = "0x9AA930")]
	private void OnConsumableUsed(ConsumableType type)
	{
	}

	[Token(Token = "0x6001516")]
	[Address(RVA = "0x9AA974", Offset = "0x9AA974", VA = "0x9AA974")]
	private void OnPlateHandedIn(bool wasHandedIn, bool wasPerfect, CustomerType customerType, bool wasClean)
	{
	}

	[Token(Token = "0x6001517")]
	[Address(RVA = "0x9AAAE8", Offset = "0x9AAAE8", VA = "0x9AAAE8", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6001518")]
	[Address(RVA = "0x9AACB0", Offset = "0x9AACB0", VA = "0x9AACB0")]
	public RoundPerformanceTracking()
	{
	}
}
[Token(Token = "0x2000305")]
public class TutorialTracking : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000306")]
	private enum TutorialStartedFrom
	{
		[Token(Token = "0x40015E5")]
		None,
		[Token(Token = "0x40015E6")]
		Intro,
		[Token(Token = "0x40015E7")]
		IntroConfirmSkip,
		[Token(Token = "0x40015E8")]
		LauncherMenu,
		[Token(Token = "0x40015E9")]
		TownMap
	}

	[Token(Token = "0x40015E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TutorialStep currentStep;

	[Token(Token = "0x40015E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int startTimeStamp;

	[Token(Token = "0x40015E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int failedPerfectPlacements;

	[Token(Token = "0x40015E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TutorialStartedFrom tutorialStartedFrom;

	[Token(Token = "0x6001519")]
	[Address(RVA = "0x9AAE24", Offset = "0x9AAE24", VA = "0x9AAE24")]
	public void OnTutorialStepStarted(TutorialStep tutorialStep)
	{
	}

	[Token(Token = "0x600151A")]
	[Address(RVA = "0x9AAF34", Offset = "0x9AAF34", VA = "0x9AAF34")]
	public void OnTutorialStepEnded(TutorialStep tutorialStep)
	{
	}

	[Token(Token = "0x600151B")]
	[Address(RVA = "0x9AB344", Offset = "0x9AB344", VA = "0x9AB344")]
	public void FailedPlacingIngredientPerfectly()
	{
	}

	[Token(Token = "0x600151C")]
	[Address(RVA = "0x9AB360", Offset = "0x9AB360", VA = "0x9AB360")]
	public static void TutorialStartedFromIntro()
	{
	}

	[Token(Token = "0x600151D")]
	[Address(RVA = "0x9AB3AC", Offset = "0x9AB3AC", VA = "0x9AB3AC")]
	public static void TutorialStartedFromIntroConfirmSkip()
	{
	}

	[Token(Token = "0x600151E")]
	[Address(RVA = "0x9AB3F8", Offset = "0x9AB3F8", VA = "0x9AB3F8")]
	public static void TutorialStartedFromMenu()
	{
	}

	[Token(Token = "0x600151F")]
	[Address(RVA = "0x9AB444", Offset = "0x9AB444", VA = "0x9AB444")]
	public static void OnCookingSchoolSkipped()
	{
	}

	[Token(Token = "0x6001520")]
	[Address(RVA = "0x9AB504", Offset = "0x9AB504", VA = "0x9AB504")]
	public static void OnCookingSchoolStart(bool launchOnStartup)
	{
	}

	[Token(Token = "0x6001521")]
	[Address(RVA = "0x9AB6DC", Offset = "0x9AB6DC", VA = "0x9AB6DC")]
	public TutorialTracking()
	{
	}
}
[Token(Token = "0x2000307")]
public class WristMenuTracking
{
	[Token(Token = "0x40015EA")]
	private const string spawnBotEvent = "settings_wrist_spawn_bot";

	[Token(Token = "0x40015EB")]
	private const string settingsMuteEvent = "settings_wrist_mute";

	[Token(Token = "0x40015EC")]
	private const string settingsVolumeEvent = "settings_wrist_volume";

	[Token(Token = "0x40015ED")]
	private const string settingsAutoholdEvent = "settings_wrist_autohold";

	[Token(Token = "0x40015EE")]
	private const string abortCupRoundEvent = "aborted_cup_round";

	[Token(Token = "0x40015EF")]
	private const string abortEndlessRoundEvent = "aborted_endless_round";

	[Token(Token = "0x40015F0")]
	private const string abortTutorialEvent = "aborted_tutorial";

	[Token(Token = "0x40015F1")]
	private const string mutedSelfParameter = "muted_self";

	[Token(Token = "0x40015F2")]
	private const string mutedOthersParameter = "muted_others";

	[Token(Token = "0x40015F3")]
	private const string volumeMusicParameter = "volume_music";

	[Token(Token = "0x40015F4")]
	private const string volumeVoipParameter = "volume_voip";

	[Token(Token = "0x40015F5")]
	private const string volumeSoundParameter = "volume_sound";

	[Token(Token = "0x40015F6")]
	private const string volumeMusicDeltaParameter = "volume_music_delta";

	[Token(Token = "0x40015F7")]
	private const string volumeVoipDeltaParameter = "volume_voip_delta";

	[Token(Token = "0x40015F8")]
	private const string volumeSoundDeltaParameter = "volume_sound_delta";

	[Token(Token = "0x40015F9")]
	private const string autoGripParameter = "auto_grip";

	[Token(Token = "0x40015FA")]
	private const string cupIDParameter = "cup_ID";

	[Token(Token = "0x40015FB")]
	private const string cupRoundNumberParameter = "round_number";

	[Token(Token = "0x40015FC")]
	private const string abortRoundPlayerCountParameter = "player_count";

	[Token(Token = "0x40015FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool mutedSelf;

	[Token(Token = "0x40015FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int mutedOthers;

	[Token(Token = "0x40015FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool muteSettingsDirty;

	[Token(Token = "0x4001600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float volumeMusic;

	[Token(Token = "0x4001601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static float volumeVoip;

	[Token(Token = "0x4001602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static float volumeSound;

	[Token(Token = "0x4001603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static float volumeMusicDelta;

	[Token(Token = "0x4001604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static float volumeVoipDelta;

	[Token(Token = "0x4001605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static float volumeSoundDelta;

	[Token(Token = "0x6001522")]
	[Address(RVA = "0x9AB6EC", Offset = "0x9AB6EC", VA = "0x9AB6EC")]
	public static void SubmitBotSpawned()
	{
	}

	[Token(Token = "0x6001523")]
	[Address(RVA = "0x9AB7AC", Offset = "0x9AB7AC", VA = "0x9AB7AC")]
	public static void SubmitWristMenuAutoHoldToggled(bool autoHoldActive)
	{
	}

	[Token(Token = "0x6001524")]
	[Address(RVA = "0x9AB8F4", Offset = "0x9AB8F4", VA = "0x9AB8F4")]
	public static void SubmitPlayerMuteSettings()
	{
	}

	[Token(Token = "0x6001525")]
	[Address(RVA = "0x9ABB0C", Offset = "0x9ABB0C", VA = "0x9ABB0C")]
	public static void SubmitWristAudioSettings()
	{
	}

	[Token(Token = "0x6001526")]
	[Address(RVA = "0x9ABF90", Offset = "0x9ABF90", VA = "0x9ABF90")]
	public static void OnPlayerKicked(bool blocked)
	{
	}

	[Token(Token = "0x6001527")]
	[Address(RVA = "0x9AC0D8", Offset = "0x9AC0D8", VA = "0x9AC0D8")]
	public static void OnCupRoundAborted(int cupID, int roundNumber, int playerCount)
	{
	}

	[Token(Token = "0x6001528")]
	[Address(RVA = "0x9AC330", Offset = "0x9AC330", VA = "0x9AC330")]
	public static void OnEndlessRoundAborted(int playerCount)
	{
	}

	[Token(Token = "0x6001529")]
	[Address(RVA = "0x9AC478", Offset = "0x9AC478", VA = "0x9AC478")]
	public static void OnTutorialAborted()
	{
	}

	[Token(Token = "0x600152A")]
	[Address(RVA = "0x9AC538", Offset = "0x9AC538", VA = "0x9AC538")]
	public WristMenuTracking()
	{
	}
}
[Token(Token = "0x2000308")]
public enum TutorialStep
{
	[Token(Token = "0x4001607")]
	Story = -1,
	[Token(Token = "0x4001608")]
	Introduction,
	[Token(Token = "0x4001609")]
	OpenFridge,
	[Token(Token = "0x400160A")]
	ChopIngredient,
	[Token(Token = "0x400160B")]
	AddToPlate,
	[Token(Token = "0x400160C")]
	CompleteSandwich,
	[Token(Token = "0x400160D")]
	HandInPlate,
	[Token(Token = "0x400160E")]
	Perfection,
	[Token(Token = "0x400160F")]
	RearrangeSandwiches,
	[Token(Token = "0x4001610")]
	Timers,
	[Token(Token = "0x4001611")]
	IntroduceGoals,
	[Token(Token = "0x4001612")]
	FinishGoals,
	[Token(Token = "0x4001613")]
	BotCooperation,
	[Token(Token = "0x4001614")]
	BotRecharge,
	[Token(Token = "0x4001615")]
	Finished,
	[Token(Token = "0x4001616")]
	NotActive
}
[Token(Token = "0x2000309")]
public class TutorialMode : SingleInstanceBehavior<TutorialMode>
{
	[Token(Token = "0x200030A")]
	public delegate void TutorialStepChange(TutorialStep newStep);

	[Token(Token = "0x200030C")]
	[CompilerGenerated]
	private sealed class <TypeOutTextOverTime>d__81 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialMode <>4__this;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool showBot;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float totalTime;

		[Token(Token = "0x170002B2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001556")]
			[Address(RVA = "0x9AEC94", Offset = "0x9AEC94", VA = "0x9AEC94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001558")]
			[Address(RVA = "0x9AECDC", Offset = "0x9AECDC", VA = "0x9AECDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0x9AE834", Offset = "0x9AE834", VA = "0x9AE834")]
		[DebuggerHidden]
		public <TypeOutTextOverTime>d__81(int <>1__state)
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0x9AEAF0", Offset = "0x9AEAF0", VA = "0x9AEAF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0x9AEAF4", Offset = "0x9AEAF4", VA = "0x9AEAF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0x9AEC9C", Offset = "0x9AEC9C", VA = "0x9AEC9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TutorialStep currentStepBacking;

	[Token(Token = "0x4001618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool isActive;

	[Token(Token = "0x400161B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite storyPicture;

	[Token(Token = "0x400161C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool debugStepChanges;

	[Token(Token = "0x400161D")]
	private const string EnterTrigger = "Enter";

	[Token(Token = "0x400161E")]
	private const string ExitTrigger = "Exit";

	[Token(Token = "0x400161F")]
	private const string NextLineTrigger = "NextLine";

	[Token(Token = "0x4001620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private LevelData tutorialLevelData;

	[Token(Token = "0x4001621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x4001622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private TextMeshPro tutorialText;

	[Token(Token = "0x4001623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private TextMeshPro callToActionText;

	[Token(Token = "0x4001624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private VideoClip[] tutorialClips;

	[Token(Token = "0x4001625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private ParticleSystem pointerParticle;

	[Token(Token = "0x4001626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Transform pointerParticleTarget;

	[Token(Token = "0x4001627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Transform pointerAnchorWindow;

	[Token(Token = "0x4001628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private EmitFromMesh pointerEmitFromMesh;

	[Token(Token = "0x4001629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Transform pointerAnchorGoals;

	[Token(Token = "0x400162A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject dummyGoalsUI;

	[Token(Token = "0x400162B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private TextMeshPro[] dummyGoalsUIDescriptions;

	[Token(Token = "0x400162C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Animator speechBubbleAnimator;

	[Token(Token = "0x400162D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private float pauseBeforeEndingTutorial;

	[Token(Token = "0x400162E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private CookingRound cookingRound;

	[Token(Token = "0x400162F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private TimeSlowdownHandler timeSlowdownHandler;

	[Token(Token = "0x4001630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private GameObject speechBubbleRoot;

	[Token(Token = "0x4001631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private GameObject videoRoot;

	[Token(Token = "0x4001632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject pointerParticleGO;

	[Token(Token = "0x4001633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private TutorialModePlateHandler TutorialModePlateHandler;

	[Token(Token = "0x4001634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private ConveyorBelt conveyorBelt;

	[Token(Token = "0x4001635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Fridge[] fridges;

	[Token(Token = "0x4001636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HandInColliderEnabler handInColliderEnabler;

	[Token(Token = "0x4001637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private LocalizedText localizedTutorialText;

	[Token(Token = "0x4001638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private LocalizedText localizedCallToActionText;

	[Token(Token = "0x4001639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private StarGoalsHandler goalHandler;

	[Token(Token = "0x400163A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float endingTutorialCountdown;

	[Token(Token = "0x400163B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private int tutorialDescriptionLength;

	[Token(Token = "0x400163C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private int stringCharDisplayCount;

	[Token(Token = "0x400163D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private WaitForSeconds typingDelayBetweenChar;

	[Token(Token = "0x400163E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private TutorialTracking tutorialTracking;

	[Token(Token = "0x400163F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private BotManager botManager;

	[Token(Token = "0x4001640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Coroutine typingCoroutine;

	[Token(Token = "0x4001641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Renderer[] videoRenderers;

	[Token(Token = "0x4001642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Animator videoWindowAnimator;

	[Token(Token = "0x4001643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private int enterTriggerID;

	[Token(Token = "0x170002AD")]
	public TutorialStep CurrentStep
	{
		[Token(Token = "0x600152B")]
		[Address(RVA = "0x9AC540", Offset = "0x9AC540", VA = "0x9AC540")]
		get
		{
			return default(TutorialStep);
		}
		[Token(Token = "0x600152C")]
		[Address(RVA = "0x9AC548", Offset = "0x9AC548", VA = "0x9AC548")]
		private set
		{
		}
	}

	[Token(Token = "0x170002AE")]
	public bool IsActive
	{
		[Token(Token = "0x600152D")]
		[Address(RVA = "0x9ACC88", Offset = "0x9ACC88", VA = "0x9ACC88")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600152E")]
		[Address(RVA = "0x9ACC90", Offset = "0x9ACC90", VA = "0x9ACC90")]
		private set
		{
		}
	}

	[Token(Token = "0x170002AF")]
	public LevelData TutorialLevel
	{
		[Token(Token = "0x600152F")]
		[Address(RVA = "0x9ACCE4", Offset = "0x9ACCE4", VA = "0x9ACCE4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002B0")]
	public bool GoalsAreActive
	{
		[Token(Token = "0x6001530")]
		[Address(RVA = "0x9ACCEC", Offset = "0x9ACCEC", VA = "0x9ACCEC")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001531")]
		[Address(RVA = "0x9ACCF4", Offset = "0x9ACCF4", VA = "0x9ACCF4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170002B1")]
	public bool CanShowPlateHandInEffect
	{
		[Token(Token = "0x6001532")]
		[Address(RVA = "0x9ACD00", Offset = "0x9ACD00", VA = "0x9ACD00")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000030")]
	public event TutorialStepChange OnTutorialStepChange
	{
		[Token(Token = "0x6001533")]
		[Address(RVA = "0x9A45CC", Offset = "0x9A45CC", VA = "0x9A45CC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001534")]
		[Address(RVA = "0x9A4FC8", Offset = "0x9A4FC8", VA = "0x9A4FC8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001535")]
	[Address(RVA = "0x9ACD14", Offset = "0x9ACD14", VA = "0x9ACD14", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6001536")]
	[Address(RVA = "0x9AD008", Offset = "0x9AD008", VA = "0x9AD008")]
	private void SetVideoRenderersEnabled(bool enabled)
	{
	}

	[Token(Token = "0x6001537")]
	[Address(RVA = "0x9AD070", Offset = "0x9AD070", VA = "0x9AD070")]
	private void Start()
	{
	}

	[Token(Token = "0x6001538")]
	[Address(RVA = "0x9AD550", Offset = "0x9AD550", VA = "0x9AD550")]
	private void Update()
	{
	}

	[Token(Token = "0x6001539")]
	[Address(RVA = "0x9AC568", Offset = "0x9AC568", VA = "0x9AC568")]
	private void OnStepChange(TutorialStep oldStep, TutorialStep newStep)
	{
	}

	[Token(Token = "0x600153A")]
	[Address(RVA = "0x9ADA70", Offset = "0x9ADA70", VA = "0x9ADA70")]
	private void ShowVideoExample(TutorialStep newStep)
	{
	}

	[Token(Token = "0x600153B")]
	[Address(RVA = "0x9ADAE4", Offset = "0x9ADAE4", VA = "0x9ADAE4")]
	private void UnlockStepAction(TutorialStep newStep)
	{
	}

	[Token(Token = "0x600153C")]
	[Address(RVA = "0x9AD700", Offset = "0x9AD700", VA = "0x9AD700")]
	private void SetPlayerFridgeIngredients(IngredientType[] ingredients)
	{
	}

	[Token(Token = "0x600153D")]
	[Address(RVA = "0x9ADFD8", Offset = "0x9ADFD8", VA = "0x9ADFD8")]
	public void OnPlateDelivered(bool wasPerfect)
	{
	}

	[Token(Token = "0x600153E")]
	[Address(RVA = "0x9AE018", Offset = "0x9AE018", VA = "0x9AE018")]
	public void StartTutorialMode()
	{
	}

	[Token(Token = "0x600153F")]
	[Address(RVA = "0x9AE0D4", Offset = "0x9AE0D4", VA = "0x9AE0D4")]
	public void OnTutorialStart()
	{
	}

	[Token(Token = "0x6001540")]
	[Address(RVA = "0x9AE398", Offset = "0x9AE398", VA = "0x9AE398")]
	public void OnTutorialStoryComplete()
	{
	}

	[Token(Token = "0x6001541")]
	[Address(RVA = "0x9AD684", Offset = "0x9AD684", VA = "0x9AD684")]
	private void SetFridgeLocks(bool isLocked)
	{
	}

	[Token(Token = "0x6001542")]
	[Address(RVA = "0x9AE3D8", Offset = "0x9AE3D8", VA = "0x9AE3D8")]
	public void OnIngredientAddedToPlate(StackedIngredientData stackedData, bool readyToDeliver)
	{
	}

	[Token(Token = "0x6001543")]
	[Address(RVA = "0x9AE454", Offset = "0x9AE454", VA = "0x9AE454")]
	public void OnBotRecharged()
	{
	}

	[Token(Token = "0x6001544")]
	[Address(RVA = "0x9AE478", Offset = "0x9AE478", VA = "0x9AE478")]
	public void OnTriedAddingIngredientToPerfectOnlyPlate(bool canAddIngredient)
	{
	}

	[Token(Token = "0x6001545")]
	[Address(RVA = "0x9AE4B8", Offset = "0x9AE4B8", VA = "0x9AE4B8")]
	public void OnTutorialEnd()
	{
	}

	[Token(Token = "0x6001546")]
	[Address(RVA = "0x9AE3B8", Offset = "0x9AE3B8", VA = "0x9AE3B8")]
	public void GoToNextTutorialStep(TutorialStep from, TutorialStep to)
	{
	}

	[Token(Token = "0x6001547")]
	[Address(RVA = "0x9AE7C8", Offset = "0x9AE7C8", VA = "0x9AE7C8")]
	private void OnGoalCleared()
	{
	}

	[Token(Token = "0x6001548")]
	[Address(RVA = "0x9ADF84", Offset = "0x9ADF84", VA = "0x9ADF84")]
	private void PointTowardsPointOfInterest(Vector3 endPoint)
	{
	}

	[Token(Token = "0x6001549")]
	[Address(RVA = "0x9AD9E4", Offset = "0x9AD9E4", VA = "0x9AD9E4")]
	[IteratorStateMachine(typeof(<TypeOutTextOverTime>d__81))]
	private IEnumerator TypeOutTextOverTime(float totalTime, bool showBot = false)
	{
		return null;
	}

	[Token(Token = "0x600154A")]
	[Address(RVA = "0x9AE85C", Offset = "0x9AE85C", VA = "0x9AE85C", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x600154B")]
	[Address(RVA = "0x9AE95C", Offset = "0x9AE95C", VA = "0x9AE95C")]
	public void DebugSkipTutorialStep()
	{
	}

	[Token(Token = "0x600154C")]
	[Address(RVA = "0x9AE97C", Offset = "0x9AE97C", VA = "0x9AE97C")]
	public TutorialMode()
	{
	}
}
[Token(Token = "0x200030D")]
public class TutorialModePlateHandler : SingleInstanceBehavior<TutorialModePlateHandler>
{
	[Token(Token = "0x400164B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Recipe[] basicRecipes;

	[Token(Token = "0x400164C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Recipe[] perfectionRecipes;

	[Token(Token = "0x400164D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Recipe[] StandardRecipes;

	[Token(Token = "0x400164E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Recipe[] CooperationRecipe;

	[Token(Token = "0x400164F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<PhotonView> SpawnedPlates;

	[Token(Token = "0x4001650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CookingRound cookingRound;

	[Token(Token = "0x4001651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TutorialMode tutorialMode;

	[Token(Token = "0x170002B4")]
	public CustomerType GetNextCustomerType
	{
		[Token(Token = "0x6001559")]
		[Address(RVA = "0x9AECE4", Offset = "0x9AECE4", VA = "0x9AECE4")]
		get
		{
			return default(CustomerType);
		}
	}

	[Token(Token = "0x600155A")]
	[Address(RVA = "0x9AED10", Offset = "0x9AED10", VA = "0x9AED10")]
	private void Start()
	{
	}

	[Token(Token = "0x600155B")]
	[Address(RVA = "0x9AD734", Offset = "0x9AD734", VA = "0x9AD734")]
	public void ClearPlates()
	{
	}

	[Token(Token = "0x600155C")]
	[Address(RVA = "0x9AEE74", Offset = "0x9AEE74", VA = "0x9AEE74")]
	public void OnPlateSpawned(Plate plate)
	{
	}

	[Token(Token = "0x600155D")]
	[Address(RVA = "0x9ADF64", Offset = "0x9ADF64", VA = "0x9ADF64")]
	public void SpawnPlate()
	{
	}

	[Token(Token = "0x600155E")]
	[Address(RVA = "0x9AF27C", Offset = "0x9AF27C", VA = "0x9AF27C")]
	public void OnShatteredPlateRespawn(Plate plate)
	{
	}

	[Token(Token = "0x600155F")]
	[Address(RVA = "0x9AF2A8", Offset = "0x9AF2A8", VA = "0x9AF2A8")]
	public Recipe GetNewRecipe()
	{
		return default(Recipe);
	}

	[Token(Token = "0x6001560")]
	[Address(RVA = "0x9AEF64", Offset = "0x9AEF64", VA = "0x9AEF64")]
	private void AddUpsideDownSandwichToPlate(Plate plate)
	{
	}

	[Token(Token = "0x6001561")]
	[Address(RVA = "0x9AF330", Offset = "0x9AF330", VA = "0x9AF330")]
	public TutorialModePlateHandler()
	{
	}
}
[Token(Token = "0x200030E")]
public class CoinCount : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshPro coinCountText;

	[Token(Token = "0x4001653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float coinAdjustmentTime;

	[Token(Token = "0x4001654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool setupComplete;

	[Token(Token = "0x4001655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int coinStringValue;

	[Token(Token = "0x4001656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Color textStartColor;

	[Token(Token = "0x4001657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SaveManager saveManager;

	[Token(Token = "0x170002B5")]
	private int Balance
	{
		[Token(Token = "0x6001562")]
		[Address(RVA = "0x9AFC0C", Offset = "0x9AFC0C", VA = "0x9AFC0C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001563")]
	[Address(RVA = "0x9AFC28", Offset = "0x9AFC28", VA = "0x9AFC28")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001564")]
	[Address(RVA = "0x9AFC2C", Offset = "0x9AFC2C", VA = "0x9AFC2C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001565")]
	[Address(RVA = "0x9AFFD0", Offset = "0x9AFFD0", VA = "0x9AFFD0")]
	private void OnCoinCountChanged()
	{
	}

	[Token(Token = "0x6001566")]
	[Address(RVA = "0x9AFED0", Offset = "0x9AFED0", VA = "0x9AFED0")]
	private void TweenCoinCount(int newCount)
	{
	}

	[Token(Token = "0x6001567")]
	[Address(RVA = "0x9B001C", Offset = "0x9B001C", VA = "0x9B001C")]
	private void UpdateCoinCount(float newValue)
	{
	}

	[Token(Token = "0x6001568")]
	[Address(RVA = "0x9B01B4", Offset = "0x9B01B4", VA = "0x9B01B4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001569")]
	[Address(RVA = "0x9B0288", Offset = "0x9B0288", VA = "0x9B0288")]
	public void PlayCannotAffordEffect()
	{
	}

	[Token(Token = "0x600156A")]
	[Address(RVA = "0x9B04B8", Offset = "0x9B04B8", VA = "0x9B04B8")]
	public void PlayCannotAffordEffectAvatarMenu()
	{
	}

	[Token(Token = "0x600156B")]
	[Address(RVA = "0x9B06E4", Offset = "0x9B06E4", VA = "0x9B06E4")]
	public CoinCount()
	{
	}
}
[Token(Token = "0x200030F")]
public class CupWindowUI : SingleInstanceBehavior<CupWindowUI>
{
	[Token(Token = "0x2000310")]
	private enum DisplayerState
	{
		[Token(Token = "0x4001663")]
		Disabled,
		[Token(Token = "0x4001664")]
		CupRound,
		[Token(Token = "0x4001665")]
		EndlessRound,
		[Token(Token = "0x4001666")]
		CreativeRound
	}

	[Token(Token = "0x4001658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshPro customerLeftText;

	[Token(Token = "0x4001659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject cupModeUI;

	[Token(Token = "0x400165A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject endlessModeUI;

	[Token(Token = "0x400165B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CookingCup cookingCup;

	[Token(Token = "0x400165C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CookingRound cookingRound;

	[Token(Token = "0x400165D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CreativeMode creativeMode;

	[Token(Token = "0x400165E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CookingGameState cookingGameState;

	[Token(Token = "0x400165F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int customersCleared;

	[Token(Token = "0x4001660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int totalCustomers;

	[Token(Token = "0x4001661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private DisplayerState displayerState;

	[Token(Token = "0x6001574")]
	[Address(RVA = "0x9B0DD8", Offset = "0x9B0DD8", VA = "0x9B0DD8", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6001575")]
	[Address(RVA = "0x9B0E20", Offset = "0x9B0E20", VA = "0x9B0E20")]
	private void Start()
	{
	}

	[Token(Token = "0x6001576")]
	[Address(RVA = "0x9B12CC", Offset = "0x9B12CC", VA = "0x9B12CC")]
	private void UpdateDisplayedInfo()
	{
	}

	[Token(Token = "0x6001577")]
	[Address(RVA = "0x9B1314", Offset = "0x9B1314", VA = "0x9B1314")]
	private void OnRoundStart()
	{
	}

	[Token(Token = "0x6001578")]
	[Address(RVA = "0x9B15C0", Offset = "0x9B15C0", VA = "0x9B15C0")]
	private void OnRoundStop()
	{
	}

	[Token(Token = "0x6001579")]
	[Address(RVA = "0x9B15EC", Offset = "0x9B15EC", VA = "0x9B15EC")]
	private void Update()
	{
	}

	[Token(Token = "0x600157A")]
	[Address(RVA = "0x9B175C", Offset = "0x9B175C", VA = "0x9B175C")]
	private void OnGameStateChanged(GameState oldState, GameState newState)
	{
	}

	[Token(Token = "0x600157B")]
	[Address(RVA = "0x9B1800", Offset = "0x9B1800", VA = "0x9B1800", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x600157C")]
	[Address(RVA = "0x9B19D8", Offset = "0x9B19D8", VA = "0x9B19D8")]
	public CupWindowUI()
	{
	}
}
[Token(Token = "0x2000311")]
public class DiscordPrompt : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PokeButton closeButton;

	[Token(Token = "0x4001668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PokeButton openButton;

	[Token(Token = "0x4001669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject prompt;

	[Token(Token = "0x400166A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject openButtonGO;

	[Token(Token = "0x600157F")]
	[Address(RVA = "0x9B1A4C", Offset = "0x9B1A4C", VA = "0x9B1A4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001580")]
	[Address(RVA = "0x9B1B3C", Offset = "0x9B1B3C", VA = "0x9B1B3C")]
	private void Hide()
	{
	}

	[Token(Token = "0x6001581")]
	[Address(RVA = "0x9B1B74", Offset = "0x9B1B74", VA = "0x9B1B74")]
	private void Show()
	{
	}

	[Token(Token = "0x6001582")]
	[Address(RVA = "0x9B1BAC", Offset = "0x9B1BAC", VA = "0x9B1BAC")]
	public DiscordPrompt()
	{
	}
}
[Token(Token = "0x2000312")]
public class EndlessWaveDisplayer : SingleInstanceNetworkedBehavior<EndlessWaveDisplayer>, IPunObservable
{
	[Token(Token = "0x400166B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite perfectServedIcon;

	[Token(Token = "0x400166C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Sprite servedIcon;

	[Token(Token = "0x400166D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Sprite notServedIcon;

	[Token(Token = "0x400166E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TextMeshPro perfectCountText;

	[Token(Token = "0x400166F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SpriteRenderer prizeUnlockedBG;

	[Token(Token = "0x4001670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private SpriteRenderer[] serveIcons;

	[Token(Token = "0x4001671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private byte[] servedOrders;

	[Token(Token = "0x4001672")]
	private const int numberOfDisplayedOrders = 10;

	[Token(Token = "0x4001673")]
	private const byte unserved = 0;

	[Token(Token = "0x4001674")]
	private const byte served = 1;

	[Token(Token = "0x4001675")]
	private const byte servedPerfect = 2;

	[Token(Token = "0x6001583")]
	[Address(RVA = "0x9B1BB4", Offset = "0x9B1BB4", VA = "0x9B1BB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001584")]
	[Address(RVA = "0x9B1E5C", Offset = "0x9B1E5C", VA = "0x9B1E5C")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001585")]
	[Address(RVA = "0x9B1E9C", Offset = "0x9B1E9C", VA = "0x9B1E9C")]
	public void OnOrderServed(int numberOfServed, bool wasPerfect)
	{
	}

	[Token(Token = "0x6001586")]
	[Address(RVA = "0x9B1BFC", Offset = "0x9B1BFC", VA = "0x9B1BFC")]
	public void UpdateDisplay()
	{
	}

	[Token(Token = "0x6001587")]
	[Address(RVA = "0x9B1EDC", Offset = "0x9B1EDC", VA = "0x9B1EDC", Slot = "6")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6001588")]
	[Address(RVA = "0x9B2024", Offset = "0x9B2024", VA = "0x9B2024")]
	public EndlessWaveDisplayer()
	{
	}
}
[Token(Token = "0x2000313")]
public class FaceLocalPlayer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Global Rotation Settings")]
	public bool ignoreY;

	[Token(Token = "0x4001677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool flip;

	[Token(Token = "0x4001678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[Header("Local Rotation Settings")]
	public bool rotateLocallyOnly;

	[Token(Token = "0x6001589")]
	[Address(RVA = "0x9B20E0", Offset = "0x9B20E0", VA = "0x9B20E0")]
	private void Update()
	{
	}

	[Token(Token = "0x600158A")]
	[Address(RVA = "0x9B23A0", Offset = "0x9B23A0", VA = "0x9B23A0")]
	public FaceLocalPlayer()
	{
	}
}
[Token(Token = "0x2000314")]
public class FaceLocalPlayerSide : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3[] rotationsTowardLocalPlayer;

	[Token(Token = "0x600158B")]
	[Address(RVA = "0x9B23B0", Offset = "0x9B23B0", VA = "0x9B23B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600158C")]
	[Address(RVA = "0x9B23B4", Offset = "0x9B23B4", VA = "0x9B23B4")]
	private void Start()
	{
	}

	[Token(Token = "0x600158D")]
	[Address(RVA = "0x9B25C4", Offset = "0x9B25C4", VA = "0x9B25C4")]
	public void FacePlayerSide()
	{
	}

	[Token(Token = "0x600158E")]
	[Address(RVA = "0x9B25C8", Offset = "0x9B25C8", VA = "0x9B25C8")]
	private void OnLocalPlayerMoved(int spawnPointIndex)
	{
	}

	[Token(Token = "0x600158F")]
	[Address(RVA = "0x9B24DC", Offset = "0x9B24DC", VA = "0x9B24DC")]
	private void UpdateRotationIfAvailable()
	{
	}

	[Token(Token = "0x6001590")]
	[Address(RVA = "0x9B25CC", Offset = "0x9B25CC", VA = "0x9B25CC")]
	private void UpdateRotation(int spawnPointIndex)
	{
	}

	[Token(Token = "0x6001591")]
	[Address(RVA = "0x9B264C", Offset = "0x9B264C", VA = "0x9B264C")]
	public FaceLocalPlayerSide()
	{
	}
}
[Token(Token = "0x2000315")]
public class FeedbackPopup : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000316")]
	public enum PopupType
	{
		[Token(Token = "0x4001689")]
		Text,
		[Token(Token = "0x400168A")]
		Sprite
	}

	[Token(Token = "0x400167A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool isShowing;

	[Token(Token = "0x400167B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool playOnAwake;

	[Token(Token = "0x400167C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool fadeOutAutomatically;

	[Token(Token = "0x400167D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PopupType popupType;

	[Token(Token = "0x400167E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x400167F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float fadeOutDelay;

	[Token(Token = "0x4001680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float moveTime;

	[Token(Token = "0x4001681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float targetHeight;

	[Token(Token = "0x4001682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TextMeshPro textComponent;

	[Token(Token = "0x4001683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SpriteRenderer spriteRenderer;

	[Token(Token = "0x4001684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color visibleColor;

	[Token(Token = "0x4001685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color invisibleColor;

	[Token(Token = "0x4001686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 visibleScale;

	[Token(Token = "0x4001687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject parent;

	[Token(Token = "0x6001592")]
	[Address(RVA = "0x9B2654", Offset = "0x9B2654", VA = "0x9B2654")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001593")]
	[Address(RVA = "0x9B27C0", Offset = "0x9B27C0", VA = "0x9B27C0")]
	public void Show()
	{
	}

	[Token(Token = "0x6001594")]
	[Address(RVA = "0x9B27F8", Offset = "0x9B27F8", VA = "0x9B27F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001595")]
	[Address(RVA = "0x9B2B5C", Offset = "0x9B2B5C", VA = "0x9B2B5C")]
	private void FadeOut()
	{
	}

	[Token(Token = "0x6001596")]
	[Address(RVA = "0x9B2B0C", Offset = "0x9B2B0C", VA = "0x9B2B0C")]
	private void SetColor(Color color)
	{
	}

	[Token(Token = "0x6001597")]
	[Address(RVA = "0x9B2760", Offset = "0x9B2760", VA = "0x9B2760")]
	private Color GetColor()
	{
		return default(Color);
	}

	[Token(Token = "0x6001598")]
	[Address(RVA = "0x9B2D08", Offset = "0x9B2D08", VA = "0x9B2D08")]
	internal void SetText(string feedback, Color color)
	{
	}

	[Token(Token = "0x6001599")]
	[Address(RVA = "0x9B300C", Offset = "0x9B300C", VA = "0x9B300C")]
	public FeedbackPopup()
	{
	}
}
[Token(Token = "0x2000317")]
public class GhostMenu : NetworkedBehaviour, IPunObservable
{
	[Token(Token = "0x400168B")]
	private const int noLoadoutItem = -1;

	[Token(Token = "0x400168C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SpriteRenderer[] loadoutIcons;

	[Token(Token = "0x400168D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool shouldShow;

	[Token(Token = "0x400168E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool shouldShowLoadout;

	[Token(Token = "0x400168F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer meshRenderer;

	[Token(Token = "0x4001690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 position;

	[Token(Token = "0x4001691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion rotation;

	[Token(Token = "0x4001692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int[] loadout;

	[Token(Token = "0x4001693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ConsumableRegistry registry;

	[Token(Token = "0x600159E")]
	[Address(RVA = "0x9B305C", Offset = "0x9B305C", VA = "0x9B305C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600159F")]
	[Address(RVA = "0x9B320C", Offset = "0x9B320C", VA = "0x9B320C")]
	public void Setup(bool shouldShow, Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x60015A0")]
	[Address(RVA = "0x9B32B0", Offset = "0x9B32B0", VA = "0x9B32B0")]
	public void SetPosition(Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x60015A1")]
	[Address(RVA = "0x9B3354", Offset = "0x9B3354", VA = "0x9B3354")]
	public void Show(bool shouldShow)
	{
	}

	[Token(Token = "0x60015A2")]
	[Address(RVA = "0x9B3360", Offset = "0x9B3360", VA = "0x9B3360")]
	public void ResetLoadout()
	{
	}

	[Token(Token = "0x60015A3")]
	[Address(RVA = "0x9B3450", Offset = "0x9B3450", VA = "0x9B3450")]
	public void ShowLoadout(bool shouldShow)
	{
	}

	[Token(Token = "0x60015A4")]
	[Address(RVA = "0x9B33CC", Offset = "0x9B33CC", VA = "0x9B33CC")]
	public void UpdateLoadout(int loadoutIndex, int consumableType)
	{
	}

	[Token(Token = "0x60015A5")]
	[Address(RVA = "0x9B34E4", Offset = "0x9B34E4", VA = "0x9B34E4", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60015A6")]
	[Address(RVA = "0x9B3900", Offset = "0x9B3900", VA = "0x9B3900")]
	public GhostMenu()
	{
	}
}
[Token(Token = "0x2000318")]
public class HandOffsetAdjustment : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject MainPanel;

	[Token(Token = "0x4001695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PokeButton DistanceButtonForward;

	[Token(Token = "0x4001696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PokeButton DistanceButtonBack;

	[Token(Token = "0x4001697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private PokeButton HeightButtonUp;

	[Token(Token = "0x4001698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private PokeButton HeightButtonDown;

	[Token(Token = "0x4001699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private PokeButton RotationButtonForward;

	[Token(Token = "0x400169A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private PokeButton RotationButtonBack;

	[Token(Token = "0x400169B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private PokeButton ToggleButton;

	[Token(Token = "0x400169C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private PokeButton CloseButton;

	[Token(Token = "0x400169D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject panel;

	[Token(Token = "0x400169E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private LocalizedText DistanceText;

	[Token(Token = "0x400169F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private LocalizedText HeightText;

	[Token(Token = "0x40016A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private LocalizedText RotationText;

	[Token(Token = "0x40016A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 offsetPositionL;

	[Token(Token = "0x40016A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 offsetPositionR;

	[Token(Token = "0x40016A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Quaternion offsetRotationL;

	[Token(Token = "0x40016A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Quaternion offsetRotationR;

	[Token(Token = "0x40016A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int distanceStepCount;

	[Token(Token = "0x40016A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private int heightStepCount;

	[Token(Token = "0x40016A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int tiltStepCount;

	[Token(Token = "0x40016A8")]
	private const int STEP_LIMIT = 9;

	[Token(Token = "0x40016A9")]
	private const float ADJUSTMENT_STEP = 0.012f;

	[Token(Token = "0x40016AA")]
	private const float ADJUSTMENT_TILT_FAC = 270f;

	[Token(Token = "0x40016AB")]
	private const string PREFS_KEY_OFFSET_POS_L = "offset_pos_l";

	[Token(Token = "0x40016AC")]
	private const string PREFS_KEY_OFFSET_POS_R = "offset_pos_r";

	[Token(Token = "0x40016AD")]
	private const string PREFS_KEY_OFFSET_ROT_L = "offset_rot_l";

	[Token(Token = "0x40016AE")]
	private const string PREFS_KEY_OFFSET_ROT_R = "offset_rot_r";

	[Token(Token = "0x40016AF")]
	private const string PREFS_KEY_STEPS = "offset_steps";

	[Token(Token = "0x40016B0")]
	[CanBeNull]
	private const string PREFS_TOGGLE_STATE = "offset_toggle_state";

	[Token(Token = "0x60015A7")]
	[Address(RVA = "0x9B39AC", Offset = "0x9B39AC", VA = "0x9B39AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60015A8")]
	[Address(RVA = "0x9B405C", Offset = "0x9B405C", VA = "0x9B405C")]
	private void initVisable()
	{
	}

	[Token(Token = "0x60015A9")]
	[Address(RVA = "0x9B415C", Offset = "0x9B415C", VA = "0x9B415C")]
	private void showPanel()
	{
	}

	[Token(Token = "0x60015AA")]
	[Address(RVA = "0x9B41F0", Offset = "0x9B41F0", VA = "0x9B41F0")]
	private void hidePanel()
	{
	}

	[Token(Token = "0x60015AB")]
	[Address(RVA = "0x9B4284", Offset = "0x9B4284", VA = "0x9B4284")]
	private void adjustPos(Vector3 dir)
	{
	}

	[Token(Token = "0x60015AC")]
	[Address(RVA = "0x9B4888", Offset = "0x9B4888", VA = "0x9B4888")]
	private void longitudinalWrapper(int dir)
	{
	}

	[Token(Token = "0x60015AD")]
	[Address(RVA = "0x9B4974", Offset = "0x9B4974", VA = "0x9B4974")]
	private void verticalWrapper(int dir)
	{
	}

	[Token(Token = "0x60015AE")]
	[Address(RVA = "0x9B4A60", Offset = "0x9B4A60", VA = "0x9B4A60")]
	private void adjustForward()
	{
	}

	[Token(Token = "0x60015AF")]
	[Address(RVA = "0x9B4A68", Offset = "0x9B4A68", VA = "0x9B4A68")]
	private void adjustBack()
	{
	}

	[Token(Token = "0x60015B0")]
	[Address(RVA = "0x9B4A70", Offset = "0x9B4A70", VA = "0x9B4A70")]
	private void adjustUp()
	{
	}

	[Token(Token = "0x60015B1")]
	[Address(RVA = "0x9B4A78", Offset = "0x9B4A78", VA = "0x9B4A78")]
	private void adjustDown()
	{
	}

	[Token(Token = "0x60015B2")]
	[Address(RVA = "0x9B4A80", Offset = "0x9B4A80", VA = "0x9B4A80")]
	private void adjustRot(Vector3 dir)
	{
	}

	[Token(Token = "0x60015B3")]
	[Address(RVA = "0x9B4BA4", Offset = "0x9B4BA4", VA = "0x9B4BA4")]
	private void adjustClockwise()
	{
	}

	[Token(Token = "0x60015B4")]
	[Address(RVA = "0x9B4C70", Offset = "0x9B4C70", VA = "0x9B4C70")]
	private void adjustAntiClockwise()
	{
	}

	[Token(Token = "0x60015B5")]
	[Address(RVA = "0x9B3CE8", Offset = "0x9B3CE8", VA = "0x9B3CE8")]
	private void loadOffset()
	{
	}

	[Token(Token = "0x60015B6")]
	[Address(RVA = "0x9B4394", Offset = "0x9B4394", VA = "0x9B4394")]
	private void storeOffset()
	{
	}

	[Token(Token = "0x60015B7")]
	[Address(RVA = "0x9B4D3C", Offset = "0x9B4D3C", VA = "0x9B4D3C")]
	private void setLocalizedTexts()
	{
	}

	[Token(Token = "0x60015B8")]
	[Address(RVA = "0x9B42E4", Offset = "0x9B42E4", VA = "0x9B42E4")]
	private void _adjustOffset()
	{
	}

	[Token(Token = "0x60015B9")]
	[Address(RVA = "0x9B5088", Offset = "0x9B5088", VA = "0x9B5088")]
	public HandOffsetAdjustment()
	{
	}
}
[Token(Token = "0x2000319")]
public class InventoryMenu : SingleInstanceBehavior<InventoryMenu>
{
	[Token(Token = "0x200031A")]
	private enum State
	{
		[Token(Token = "0x40016EA")]
		Inactive,
		[Token(Token = "0x40016EB")]
		SelectType,
		[Token(Token = "0x40016EC")]
		SelectItem,
		[Token(Token = "0x40016ED")]
		ViewRecipes
	}

	[Token(Token = "0x40016B1")]
	private const int noItemSelected = -1;

	[Token(Token = "0x40016B2")]
	private const int itemButtonCount = 9;

	[Token(Token = "0x40016B3")]
	private const string propertyMainTexture = "_MainTex";

	[Token(Token = "0x40016B4")]
	private const string localizationHeaderCleavers = "inventory_header_cleavers";

	[Token(Token = "0x40016B5")]
	private const string localizationHeaderFridges = "inventory_header_fridges";

	[Token(Token = "0x40016B6")]
	private const string localizationHeaderBoards = "inventory_header_boards";

	[Token(Token = "0x40016B7")]
	private const string localizationHeaderRecipes = "inventory_header_recipes";

	[Token(Token = "0x40016B8")]
	private const string localizationInventoryHeader = "inventory_header";

	[Token(Token = "0x40016B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int selectedItem;

	[Token(Token = "0x40016BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private State currentStateBacking;

	[Token(Token = "0x40016BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Roots")]
	[SerializeField]
	private GameObject menuRoot;

	[Token(Token = "0x40016BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject itemSelectRoot;

	[Token(Token = "0x40016BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[Header("Texts")]
	private TextMeshPro bannerLabel;

	[Token(Token = "0x40016BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TextMeshPro SelectedItemLabel;

	[Token(Token = "0x40016BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TextMeshPro SelectedItemDescription;

	[Token(Token = "0x40016C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private TextMeshPro pageDisplayText;

	[Token(Token = "0x40016C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[Header("Buttons")]
	private PokeButton equipItemButton;

	[Token(Token = "0x40016C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private PokeButton exitTypeSelectButton;

	[Token(Token = "0x40016C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private PokeButton cleaverSelectButton;

	[Token(Token = "0x40016C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private PokeButton cuttingBoardSelectButton;

	[Token(Token = "0x40016C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private PokeButton fridgeSelectButton;

	[Token(Token = "0x40016C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private PokeButton viewRecipesButton;

	[Token(Token = "0x40016C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private PokeButton scrollUp;

	[Token(Token = "0x40016C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private PokeButton scrollDown;

	[Token(Token = "0x40016C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private PokeButton ExitItemSelectButton;

	[Token(Token = "0x40016CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject[] itemButtonsGO;

	[Token(Token = "0x40016CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[Header("Textures/Sprites")]
	[SerializeField]
	private Texture inactiveTexture;

	[Token(Token = "0x40016CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Texture activeTexture;

	[Token(Token = "0x40016CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Sprite lockedIcon;

	[Token(Token = "0x40016CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private Material inactiveMaterial;

	[Token(Token = "0x40016CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private Material activeMaterial;

	[Token(Token = "0x40016D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[Header("Other")]
	[SerializeField]
	private SpriteRenderer itemIconRenderer;

	[Token(Token = "0x40016D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private GameObject equipButtonLock;

	[Token(Token = "0x40016D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x40016D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private RewardType currentType;

	[Token(Token = "0x40016D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private GameObject equipButtonGO;

	[Token(Token = "0x40016D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private ItemRewardsRegistry rewardsRegistry;

	[Token(Token = "0x40016D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private MeshRenderer[] itemButtonRenderers;

	[Token(Token = "0x40016D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private SpriteRenderer[] itemButtonIcons;

	[Token(Token = "0x40016D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private GameObject[] itemButtonEquippedLabels;

	[Token(Token = "0x40016D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private PokeButton[] itemButtons;

	[Token(Token = "0x40016DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private SaveManager saveManager;

	[Token(Token = "0x40016DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool CurrentItemUnlocked;

	[Token(Token = "0x40016DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private MaterialPropertyBlock propertyBlock;

	[Token(Token = "0x40016DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Locale locale;

	[Token(Token = "0x40016DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Dictionary<RewardType, int> currentPage;

	[Token(Token = "0x40016DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Dictionary<RewardType, int> pageCounts;

	[Token(Token = "0x40016E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private int[] pageOffsets;

	[Token(Token = "0x40016E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private bool skipAnimation;

	[Token(Token = "0x40016E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Collider[] colliders;

	[Token(Token = "0x40016E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Renderer upButtonRenderer;

	[Token(Token = "0x40016E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Renderer downButtonRenderer;

	[Token(Token = "0x40016E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private ItemRewardID[] cleaverMapping;

	[Token(Token = "0x40016E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private ItemRewardID[] fridgesMapping;

	[Token(Token = "0x40016E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ItemRewardID[] cuttingBoardsMapping;

	[Token(Token = "0x40016E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private int selectedButtonIndex;

	[Token(Token = "0x170002B6")]
	private int SelectedItem
	{
		[Token(Token = "0x60015BA")]
		[Address(RVA = "0x9B5090", Offset = "0x9B5090", VA = "0x9B5090")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60015BB")]
		[Address(RVA = "0x9B5098", Offset = "0x9B5098", VA = "0x9B5098")]
		set
		{
		}
	}

	[Token(Token = "0x170002B7")]
	private State CurrentState
	{
		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x9B5144", Offset = "0x9B5144", VA = "0x9B5144")]
		get
		{
			return default(State);
		}
		[Token(Token = "0x60015BD")]
		[Address(RVA = "0x9B514C", Offset = "0x9B514C", VA = "0x9B514C")]
		set
		{
		}
	}

	[Token(Token = "0x170002B8")]
	public bool IsVisible
	{
		[Token(Token = "0x60015BE")]
		[Address(RVA = "0x9B5458", Offset = "0x9B5458", VA = "0x9B5458")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60015BF")]
	[Address(RVA = "0x9B5468", Offset = "0x9B5468", VA = "0x9B5468", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60015C0")]
	[Address(RVA = "0x9B5B90", Offset = "0x9B5B90", VA = "0x9B5B90")]
	public void Start()
	{
	}

	[Token(Token = "0x60015C1")]
	[Address(RVA = "0x9B5FE8", Offset = "0x9B5FE8", VA = "0x9B5FE8")]
	private void SetupSortMapping(List<RewardItem> rewardItems, ref ItemRewardID[] mapping)
	{
	}

	[Token(Token = "0x60015C2")]
	[Address(RVA = "0x9B6514", Offset = "0x9B6514", VA = "0x9B6514")]
	public void Show(bool shouldShow, bool skipHideAnimation)
	{
	}

	[Token(Token = "0x60015C3")]
	[Address(RVA = "0x9B515C", Offset = "0x9B515C", VA = "0x9B515C")]
	private void OnStateChange(State oldState)
	{
	}

	[Token(Token = "0x60015C4")]
	[Address(RVA = "0x9B641C", Offset = "0x9B641C", VA = "0x9B641C")]
	private void Hide(bool skipAnimation = false)
	{
	}

	[Token(Token = "0x60015C5")]
	[Address(RVA = "0x9B6530", Offset = "0x9B6530", VA = "0x9B6530")]
	private void SelectEquippable(int buttonIndex, ItemRewardID itemRewardID)
	{
	}

	[Token(Token = "0x60015C6")]
	[Address(RVA = "0x9B6644", Offset = "0x9B6644", VA = "0x9B6644")]
	private void SelectItem(int buttonIndex)
	{
	}

	[Token(Token = "0x60015C7")]
	[Address(RVA = "0x9B6764", Offset = "0x9B6764", VA = "0x9B6764")]
	private void SetItemTypeTab(RewardType type)
	{
	}

	[Token(Token = "0x60015C8")]
	[Address(RVA = "0x9B6C84", Offset = "0x9B6C84", VA = "0x9B6C84")]
	private ItemRewardID GetItemInSortedOrder(RewardType type, int index)
	{
		return default(ItemRewardID);
	}

	[Token(Token = "0x60015C9")]
	[Address(RVA = "0x9B6DE0", Offset = "0x9B6DE0", VA = "0x9B6DE0")]
	private void EquipSelectedItem()
	{
	}

	[Token(Token = "0x60015CA")]
	[Address(RVA = "0x9B6F40", Offset = "0x9B6F40", VA = "0x9B6F40")]
	public void RefreshUnlockedEquippable()
	{
	}

	[Token(Token = "0x60015CB")]
	[Address(RVA = "0x9B50A0", Offset = "0x9B50A0", VA = "0x9B50A0")]
	private void OnSelectedItem(int newSelectedItem)
	{
	}

	[Token(Token = "0x60015CC")]
	[Address(RVA = "0x9B73D0", Offset = "0x9B73D0", VA = "0x9B73D0")]
	private void ScrollUp()
	{
	}

	[Token(Token = "0x60015CD")]
	[Address(RVA = "0x9B7498", Offset = "0x9B7498", VA = "0x9B7498")]
	private void ScrollDown()
	{
	}

	[Token(Token = "0x60015CE")]
	[Address(RVA = "0x9B66C8", Offset = "0x9B66C8", VA = "0x9B66C8")]
	private void SetButtonActiveVisuals(Renderer renderer, bool isActive)
	{
	}

	[Token(Token = "0x60015CF")]
	[Address(RVA = "0x9B75A8", Offset = "0x9B75A8", VA = "0x9B75A8")]
	private void OnExitItemSelect()
	{
	}

	[Token(Token = "0x60015D0")]
	[Address(RVA = "0x9B75C8", Offset = "0x9B75C8", VA = "0x9B75C8")]
	public void OnRecipeBookClosed()
	{
	}

	[Token(Token = "0x60015D1")]
	[Address(RVA = "0x9B75E8", Offset = "0x9B75E8", VA = "0x9B75E8")]
	public InventoryMenu()
	{
	}
}
[Token(Token = "0x200031D")]
public class LanguageSettings : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40016F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PokeButton[] languageButtons;

	[Token(Token = "0x40016F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject SettingsParent;

	[Token(Token = "0x40016F5")]
	private const int languageCount = 8;

	[Token(Token = "0x40016F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SpriteRenderer[] checkMarks;

	[Token(Token = "0x40016F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Locale locale;

	[Token(Token = "0x40016F8")]
	private const string selectedLocaleKey = "selectedLanguage";

	[Token(Token = "0x60015DB")]
	[Address(RVA = "0x9B79D0", Offset = "0x9B79D0", VA = "0x9B79D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60015DC")]
	[Address(RVA = "0x9B7D3C", Offset = "0x9B7D3C", VA = "0x9B7D3C")]
	private void SelectLanguage(int index)
	{
	}

	[Token(Token = "0x60015DD")]
	public static List<T> FindObjectsOfTypeInLoadedScenes<T>()
	{
		return null;
	}

	[Token(Token = "0x60015DE")]
	[Address(RVA = "0x9B7F7C", Offset = "0x9B7F7C", VA = "0x9B7F7C")]
	public void Show(bool isEnabled)
	{
	}

	[Token(Token = "0x60015DF")]
	[Address(RVA = "0x9B7F9C", Offset = "0x9B7F9C", VA = "0x9B7F9C")]
	public LanguageSettings()
	{
	}
}
[Token(Token = "0x2000320")]
public class LifeDisplayer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40016FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform fullHeartsParent;

	[Token(Token = "0x40016FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform brokenHeartsParent;

	[Token(Token = "0x40016FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float heartXSpacing;

	[Token(Token = "0x4001700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private EndlessMode endlessMode;

	[Token(Token = "0x4001701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LifeCounter lifeCounter;

	[Token(Token = "0x4001702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int livesLeftDisplayed;

	[Token(Token = "0x4001703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int livesLeft;

	[Token(Token = "0x4001704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform[] fullHearts;

	[Token(Token = "0x4001705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform[] brokenHearts;

	[Token(Token = "0x60015E3")]
	[Address(RVA = "0x9B804C", Offset = "0x9B804C", VA = "0x9B804C")]
	private void Start()
	{
	}

	[Token(Token = "0x60015E4")]
	[Address(RVA = "0x9B8408", Offset = "0x9B8408", VA = "0x9B8408")]
	private void UpdateHeartStatus(int livesLeft, int heartIndex)
	{
	}

	[Token(Token = "0x60015E5")]
	[Address(RVA = "0x9B84D0", Offset = "0x9B84D0", VA = "0x9B84D0")]
	private void OnEndlessModeActiveChanged(bool active)
	{
	}

	[Token(Token = "0x60015E6")]
	[Address(RVA = "0x9B852C", Offset = "0x9B852C", VA = "0x9B852C")]
	private void Update()
	{
	}

	[Token(Token = "0x60015E7")]
	[Address(RVA = "0x9B85B8", Offset = "0x9B85B8", VA = "0x9B85B8")]
	private void UpdateMaxLives(int newLifeCount)
	{
	}

	[Token(Token = "0x60015E8")]
	[Address(RVA = "0x9B873C", Offset = "0x9B873C", VA = "0x9B873C")]
	public LifeDisplayer()
	{
	}
}
[Token(Token = "0x2000321")]
public class MenuVisibility : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000322")]
	private enum MenuState
	{
		[Token(Token = "0x400170A")]
		Startup,
		[Token(Token = "0x400170B")]
		Invisible,
		[Token(Token = "0x400170C")]
		Animating,
		[Token(Token = "0x400170D")]
		FullyVisible
	}

	[Token(Token = "0x4001706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject menuRoot;

	[Token(Token = "0x4001707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MenuState menuState;

	[Token(Token = "0x4001708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool firstTimeSetup;

	[Token(Token = "0x60015EB")]
	[Address(RVA = "0x9B8760", Offset = "0x9B8760", VA = "0x9B8760")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015EC")]
	[Address(RVA = "0x9B87F4", Offset = "0x9B87F4", VA = "0x9B87F4")]
	public void SetActive(bool visible, bool animate)
	{
	}

	[Token(Token = "0x60015ED")]
	[Address(RVA = "0x9B8948", Offset = "0x9B8948", VA = "0x9B8948")]
	private void ShowContent()
	{
	}

	[Token(Token = "0x60015EE")]
	[Address(RVA = "0x9B8974", Offset = "0x9B8974", VA = "0x9B8974")]
	private void OnAnimationEventShowContent()
	{
	}

	[Token(Token = "0x60015EF")]
	[Address(RVA = "0x9B8978", Offset = "0x9B8978", VA = "0x9B8978")]
	public MenuVisibility()
	{
	}
}
[Token(Token = "0x2000323")]
public class NameTagOffset : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400170E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 offset;

	[Token(Token = "0x60015F1")]
	[Address(RVA = "0x9B89CC", Offset = "0x9B89CC", VA = "0x9B89CC")]
	public NameTagOffset()
	{
	}
}
[Token(Token = "0x2000324")]
public class NewEnvironmentUnlockedCelebration : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400170F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject celebrationMessage;

	[Token(Token = "0x4001710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float floatUpTime;

	[Token(Token = "0x4001711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float displayTime;

	[Token(Token = "0x4001712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float disappearTime;

	[Token(Token = "0x4001713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 targetScale;

	[Token(Token = "0x4001714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 targetPosition;

	[Token(Token = "0x60015F2")]
	[Address(RVA = "0x9B89D4", Offset = "0x9B89D4", VA = "0x9B89D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015F3")]
	[Address(RVA = "0x9B8A30", Offset = "0x9B8A30", VA = "0x9B8A30")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60015F4")]
	[Address(RVA = "0x9B8BF0", Offset = "0x9B8BF0", VA = "0x9B8BF0")]
	public NewEnvironmentUnlockedCelebration()
	{
	}
}
[Token(Token = "0x2000325")]
public class Order : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000326")]
	private enum MarkedStatus
	{
		[Token(Token = "0x4001739")]
		NotMarked,
		[Token(Token = "0x400173A")]
		YellowMark,
		[Token(Token = "0x400173B")]
		GreenMark
	}

	[Token(Token = "0x4001715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int customerSlot;

	[Token(Token = "0x4001716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float obscureSpeed;

	[Token(Token = "0x4001717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OrderIcon[] orderIcons;

	[Token(Token = "0x4001718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject readyToDeliverMarker;

	[Token(Token = "0x4001719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject cannotHandInMarker;

	[Token(Token = "0x400171A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Timer colors")]
	public Color greenTimeColor;

	[Token(Token = "0x400171B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color yellowTimeColor;

	[Token(Token = "0x400171C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color redTimeColor;

	[Token(Token = "0x400171E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Sprite obscuredIngredientIcon;

	[Token(Token = "0x400171F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Renderer timerRenderer;

	[Token(Token = "0x4001720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Transform timerTransform;

	[Token(Token = "0x4001721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject iconGrid;

	[Token(Token = "0x4001722")]
	public const int ingredientsDisplayedAtOnce = 5;

	[Token(Token = "0x4001723")]
	private const int notObscured = -1;

	[Token(Token = "0x4001724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<OrderIcon> displayedIngredients;

	[Token(Token = "0x4001725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private RecipeIngredient[] recipe;

	[Token(Token = "0x4001726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<int> obscuredIngredients;

	[Token(Token = "0x4001727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private CustomerType customerType;

	[Token(Token = "0x4001728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private OrderMonitor orderMonitor;

	[Token(Token = "0x4001729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private TimeSlowdownHandler timeSlowdownHandler;

	[Token(Token = "0x400172A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private GameObject ingredientsParent;

	[Token(Token = "0x400172B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float timerStartScale;

	[Token(Token = "0x400172C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float orderStartXScale;

	[Token(Token = "0x400172D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Dictionary<int, MarkedStatus> markedOffIndices;

	[Token(Token = "0x400172E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float startHeight;

	[Token(Token = "0x400172F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float scrollStep;

	[Token(Token = "0x4001730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int highestScrollIndex;

	[Token(Token = "0x4001731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private bool firstTime;

	[Token(Token = "0x4001732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float timeIsRunningOutAlarmThreshold;

	[Token(Token = "0x4001733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private bool timeIsRunningOutAlarm;

	[Token(Token = "0x4001734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private MaterialPropertyBlock matPropBlock;

	[Token(Token = "0x4001735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool isShowing;

	[Token(Token = "0x4001736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
	private bool setupComplete;

	[Token(Token = "0x4001737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private int colorPropertyID;

	[Token(Token = "0x170002B9")]
	public int BottomVisibleIngredientIndex
	{
		[Token(Token = "0x60015F6")]
		[Address(RVA = "0x9B8CE4", Offset = "0x9B8CE4", VA = "0x9B8CE4")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60015F7")]
		[Address(RVA = "0x9B8CEC", Offset = "0x9B8CEC", VA = "0x9B8CEC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60015F8")]
	[Address(RVA = "0x9B8CF4", Offset = "0x9B8CF4", VA = "0x9B8CF4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015F9")]
	[Address(RVA = "0x9B8E60", Offset = "0x9B8E60", VA = "0x9B8E60")]
	private void Start()
	{
	}

	[Token(Token = "0x60015FA")]
	[Address(RVA = "0x9B9014", Offset = "0x9B9014", VA = "0x9B9014")]
	public void ShowOrder(RecipeIngredient[] ingredients, float animationDelay, CustomerData customerData)
	{
	}

	[Token(Token = "0x60015FB")]
	[Address(RVA = "0x9B8FE4", Offset = "0x9B8FE4", VA = "0x9B8FE4")]
	public void Hide()
	{
	}

	[Token(Token = "0x60015FC")]
	[Address(RVA = "0x9B95F0", Offset = "0x9B95F0", VA = "0x9B95F0")]
	public void UpdateTimer(float timeFraction, float safeTimeFraction, bool timerSlowedDown)
	{
	}

	[Token(Token = "0x60015FD")]
	[Address(RVA = "0x9B989C", Offset = "0x9B989C", VA = "0x9B989C")]
	public void UpdateObscuredIngredients()
	{
	}

	[Token(Token = "0x60015FE")]
	[Address(RVA = "0x9B9A54", Offset = "0x9B9A54", VA = "0x9B9A54")]
	public void MarkOffAddedIngredients(IList<IngredientType> addedIngredients, IList<bool> stackedCorrectly, IList<bool> friedCorrectly)
	{
	}

	[Token(Token = "0x60015FF")]
	[Address(RVA = "0x9BA0BC", Offset = "0x9BA0BC", VA = "0x9BA0BC")]
	private void UpdateScrolling()
	{
	}

	[Token(Token = "0x6001600")]
	[Address(RVA = "0x9BA010", Offset = "0x9BA010", VA = "0x9BA010")]
	private static void MarkIngredient(OrderIcon displayedIngredient, MarkedStatus markedStatus)
	{
	}

	[Token(Token = "0x6001601")]
	[Address(RVA = "0x9BA1E0", Offset = "0x9BA1E0", VA = "0x9BA1E0")]
	public void MarkAsReadyToDeliver(bool fullyAssembled, bool canBeHandedIn)
	{
	}

	[Token(Token = "0x6001602")]
	[Address(RVA = "0x9B9338", Offset = "0x9B9338", VA = "0x9B9338")]
	private void SetIngredientIcon(int index)
	{
	}

	[Token(Token = "0x6001603")]
	[Address(RVA = "0x9BA250", Offset = "0x9BA250", VA = "0x9BA250")]
	public void ObscureIngredient(int index, int jesterID)
	{
	}

	[Token(Token = "0x6001604")]
	[Address(RVA = "0x9BA2B8", Offset = "0x9BA2B8", VA = "0x9BA2B8")]
	public void RemoveObscuredIcons(int jesterID)
	{
	}

	[Token(Token = "0x6001605")]
	[Address(RVA = "0x9BA384", Offset = "0x9BA384", VA = "0x9BA384")]
	public bool CanBeFurtherObscured()
	{
		return default(bool);
	}

	[Token(Token = "0x6001606")]
	[Address(RVA = "0x9BA478", Offset = "0x9BA478", VA = "0x9BA478")]
	public int GetRandomUnassignedIngredient()
	{
		return default(int);
	}

	[Token(Token = "0x6001607")]
	[Address(RVA = "0x9BA674", Offset = "0x9BA674", VA = "0x9BA674")]
	public bool OrderIconIsObscured(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6001608")]
	[Address(RVA = "0x9BA6D8", Offset = "0x9BA6D8", VA = "0x9BA6D8")]
	public void SetOrderHidden(bool isHidden)
	{
	}

	[Token(Token = "0x6001609")]
	[Address(RVA = "0x9BA6FC", Offset = "0x9BA6FC", VA = "0x9BA6FC")]
	public Order()
	{
	}
}
[Token(Token = "0x2000327")]
public class OrderIcon : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400173C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpriteRenderer icon;

	[Token(Token = "0x400173D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpriteRenderer iconShadow;

	[Token(Token = "0x400173E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SpriteRenderer addedMarker;

	[Token(Token = "0x600160A")]
	[Address(RVA = "0x9BA80C", Offset = "0x9BA80C", VA = "0x9BA80C")]
	public OrderIcon()
	{
	}
}
[Token(Token = "0x2000328")]
public class OrderMonitor : SingleInstanceNetworkedBehavior<OrderMonitor>
{
	[Token(Token = "0x4001742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform[] customerModelSlots;

	[Token(Token = "0x4001743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Order[] orders;

	[Token(Token = "0x4001744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isQuitting;

	[Token(Token = "0x4001745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<int, CustomerVisual> customers;

	[Token(Token = "0x4001746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CustomerRegistry customerRegistry;

	[Token(Token = "0x4001747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private CookingRound cookingRound;

	[Token(Token = "0x4001748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private CookingGameState gameState;

	[Token(Token = "0x4001749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private TimeSlowdownHandler timeSlowdownHandler;

	[Token(Token = "0x400174A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private OrderObscurer orderObscurer;

	[Token(Token = "0x400174B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int[] customerTutorialPlacement;

	[Token(Token = "0x400174C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int[][] customerStandardPlacements;

	[Token(Token = "0x400174D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<int> freeSlotCache;

	[Token(Token = "0x400174E")]
	private const int unassignedSlot = -1;

	[Token(Token = "0x170002BA")]
	public int[] CustomerSlots
	{
		[Token(Token = "0x600160B")]
		[Address(RVA = "0x9BA814", Offset = "0x9BA814", VA = "0x9BA814")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600160C")]
		[Address(RVA = "0x9BA81C", Offset = "0x9BA81C", VA = "0x9BA81C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170002BB")]
	public List<Plate> Plates
	{
		[Token(Token = "0x600160D")]
		[Address(RVA = "0x9BA824", Offset = "0x9BA824", VA = "0x9BA824")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600160E")]
		[Address(RVA = "0x9BA82C", Offset = "0x9BA82C", VA = "0x9BA82C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170002BC")]
	public Dictionary<int, Order> OrdersByID
	{
		[Token(Token = "0x600160F")]
		[Address(RVA = "0x9BA834", Offset = "0x9BA834", VA = "0x9BA834")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6001610")]
		[Address(RVA = "0x9BA83C", Offset = "0x9BA83C", VA = "0x9BA83C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6001611")]
	[Address(RVA = "0x9BA844", Offset = "0x9BA844", VA = "0x9BA844", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6001612")]
	[Address(RVA = "0x9BA9FC", Offset = "0x9BA9FC", VA = "0x9BA9FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001613")]
	[Address(RVA = "0x9BAD34", Offset = "0x9BAD34", VA = "0x9BAD34")]
	private void Update()
	{
	}

	[Token(Token = "0x6001614")]
	[Address(RVA = "0x9BAE90", Offset = "0x9BAE90", VA = "0x9BAE90")]
	private void OnApplicationQuitting()
	{
	}

	[Token(Token = "0x6001615")]
	[Address(RVA = "0x9BAE9C", Offset = "0x9BAE9C", VA = "0x9BAE9C")]
	public void OnNewRoundStarted()
	{
	}

	[Token(Token = "0x6001616")]
	[Address(RVA = "0x9BAEF0", Offset = "0x9BAEF0", VA = "0x9BAEF0")]
	public bool HasFreeSlot()
	{
		return default(bool);
	}

	[Token(Token = "0x6001617")]
	[Address(RVA = "0x9BB0B8", Offset = "0x9BB0B8", VA = "0x9BB0B8")]
	public int ReserveCustomerSlot(int orderID, CustomerType customerType)
	{
		return default(int);
	}

	[Token(Token = "0x6001618")]
	[Address(RVA = "0x9BB1E4", Offset = "0x9BB1E4", VA = "0x9BB1E4")]
	private int GetFreeCustomerSlot(int orderID)
	{
		return default(int);
	}

	[Token(Token = "0x6001619")]
	[Address(RVA = "0x9BB2E8", Offset = "0x9BB2E8", VA = "0x9BB2E8")]
	private List<int> GetFreeSlots()
	{
		return null;
	}

	[Token(Token = "0x600161A")]
	[Address(RVA = "0x9BB59C", Offset = "0x9BB59C", VA = "0x9BB59C")]
	public void ReleaseCustomerSlot(int orderID)
	{
	}

	[Token(Token = "0x600161B")]
	[Address(RVA = "0x9BB758", Offset = "0x9BB758", VA = "0x9BB758")]
	public void UpdateOrder(Plate plate)
	{
	}

	[Token(Token = "0x600161C")]
	[Address(RVA = "0x9BB968", Offset = "0x9BB968", VA = "0x9BB968")]
	private void AddOrder(Plate plate, RecipeIngredient[] recipeIngredients, IList<IngredientType> addedIngredients, IList<bool> stackedCorrectly, bool readyToDeliver)
	{
	}

	[Token(Token = "0x600161D")]
	[Address(RVA = "0x9BC360", Offset = "0x9BC360", VA = "0x9BC360")]
	public bool HasOrderForPlate(Plate plate)
	{
		return default(bool);
	}

	[Token(Token = "0x600161E")]
	[Address(RVA = "0x9BC5BC", Offset = "0x9BC5BC", VA = "0x9BC5BC")]
	public void RemoveOrder(Plate plate)
	{
	}

	[Token(Token = "0x600161F")]
	[Address(RVA = "0x9BC93C", Offset = "0x9BC93C", VA = "0x9BC93C")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6001620")]
	[Address(RVA = "0x9BCA64", Offset = "0x9BCA64", VA = "0x9BCA64")]
	public void OnCustomerVisualSpawned(int orderID, int slotID, Transform modelTransform, Vector3 offset, CustomerVisual customerVisual)
	{
	}

	[Token(Token = "0x6001621")]
	[Address(RVA = "0x9BCC9C", Offset = "0x9BCC9C", VA = "0x9BCC9C")]
	public bool HasCustomerVisual(int orderID)
	{
		return default(bool);
	}

	[Token(Token = "0x6001622")]
	[Address(RVA = "0x9BCD6C", Offset = "0x9BCD6C", VA = "0x9BCD6C")]
	public CustomerVisual GetCustomerVisual(int orderID)
	{
		return null;
	}

	[Token(Token = "0x6001623")]
	[Address(RVA = "0x9BCDC4", Offset = "0x9BCDC4", VA = "0x9BCDC4")]
	public void RemoveCustomer(int orderID)
	{
	}

	[Token(Token = "0x6001624")]
	[Address(RVA = "0x9BCE54", Offset = "0x9BCE54", VA = "0x9BCE54")]
	public void OnTimeSlowdownStart()
	{
	}

	[Token(Token = "0x6001625")]
	[Address(RVA = "0x9BD008", Offset = "0x9BD008", VA = "0x9BD008")]
	public void OnTimeSlowdownEnd()
	{
	}

	[Token(Token = "0x6001626")]
	[Address(RVA = "0x9BC898", Offset = "0x9BC898", VA = "0x9BC898")]
	private void ResumeCustomerAnimation(Plate plate)
	{
	}

	[Token(Token = "0x6001627")]
	[Address(RVA = "0x9BD094", Offset = "0x9BD094", VA = "0x9BD094")]
	public void SetOrdersHidden(bool isHidden)
	{
	}

	[Token(Token = "0x6001628")]
	[Address(RVA = "0x9BB460", Offset = "0x9BB460", VA = "0x9BB460")]
	public string GetDebugCustomerSlotContent()
	{
		return null;
	}

	[Token(Token = "0x6001629")]
	[Address(RVA = "0x9BBEA0", Offset = "0x9BBEA0", VA = "0x9BBEA0")]
	private string GetDebugPlateAndOrderContent()
	{
		return null;
	}

	[Token(Token = "0x600162A")]
	[Address(RVA = "0x9BD170", Offset = "0x9BD170", VA = "0x9BD170")]
	public OrderMonitor()
	{
	}
}
[Token(Token = "0x2000329")]
public class OrderObscurer : SingleInstanceNetworkedBehavior<OrderObscurer>
{
	[Token(Token = "0x4001750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float obscureTime;

	[Token(Token = "0x4001751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float obscureTimer;

	[Token(Token = "0x4001752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<int> activeJesterOrderIDs;

	[Token(Token = "0x4001753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OrderMonitor orderMonitor;

	[Token(Token = "0x4001754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CookingRound cookingRound;

	[Token(Token = "0x4001755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TimeSlowdownHandler slowdown;

	[Token(Token = "0x4001756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<int> orderIDs;

	[Token(Token = "0x4001757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> ingredientIndices;

	[Token(Token = "0x4001758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<int> jesterOrderIDs;

	[Token(Token = "0x170002BD")]
	public bool ObscurerActive
	{
		[Token(Token = "0x600162B")]
		[Address(RVA = "0x9BE4B4", Offset = "0x9BE4B4", VA = "0x9BE4B4")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600162C")]
		[Address(RVA = "0x9BE4BC", Offset = "0x9BE4BC", VA = "0x9BE4BC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x600162D")]
	[Address(RVA = "0x9BE4C8", Offset = "0x9BE4C8", VA = "0x9BE4C8")]
	private void Start()
	{
	}

	[Token(Token = "0x600162E")]
	[Address(RVA = "0x9BE8F4", Offset = "0x9BE8F4", VA = "0x9BE8F4")]
	private void Update()
	{
	}

	[Token(Token = "0x600162F")]
	[Address(RVA = "0x9BEF78", Offset = "0x9BEF78", VA = "0x9BEF78", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6001630")]
	[Address(RVA = "0x9BF04C", Offset = "0x9BF04C", VA = "0x9BF04C")]
	private void OnRoundStart()
	{
	}

	[Token(Token = "0x6001631")]
	[Address(RVA = "0x9BE9E0", Offset = "0x9BE9E0", VA = "0x9BE9E0")]
	private void ObscureRandomPlayerOrderIngredient()
	{
	}

	[Token(Token = "0x6001632")]
	[Address(RVA = "0x9BF0A4", Offset = "0x9BF0A4", VA = "0x9BF0A4")]
	[PunRPC]
	private void ObscureRandomPlayerOrderIngredientRPC(int[] targetOrderIDs, int[] ingredientIndices, int[] jesterOrderIDs)
	{
	}

	[Token(Token = "0x6001633")]
	[Address(RVA = "0x9BF280", Offset = "0x9BF280", VA = "0x9BF280")]
	public void RemoveJester(int jesterOrderID)
	{
	}

	[Token(Token = "0x6001634")]
	[Address(RVA = "0x9BE820", Offset = "0x9BE820", VA = "0x9BE820")]
	public void AddJester(int orderID)
	{
	}

	[Token(Token = "0x6001635")]
	[Address(RVA = "0x9BF3E0", Offset = "0x9BF3E0", VA = "0x9BF3E0")]
	public OrderObscurer()
	{
	}
}
[Token(Token = "0x200032A")]
public class PatchNotesPrompt : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PokeButton closeButton;

	[Token(Token = "0x400175A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PokeButton openButton;

	[Token(Token = "0x400175B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject prompt;

	[Token(Token = "0x400175C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject openButtonGO;

	[Token(Token = "0x6001636")]
	[Address(RVA = "0x9BF4FC", Offset = "0x9BF4FC", VA = "0x9BF4FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001637")]
	[Address(RVA = "0x9BF5EC", Offset = "0x9BF5EC", VA = "0x9BF5EC")]
	private void Hide()
	{
	}

	[Token(Token = "0x6001638")]
	[Address(RVA = "0x9BF624", Offset = "0x9BF624", VA = "0x9BF624")]
	private void Show()
	{
	}

	[Token(Token = "0x6001639")]
	[Address(RVA = "0x9BF65C", Offset = "0x9BF65C", VA = "0x9BF65C")]
	public PatchNotesPrompt()
	{
	}
}
[Token(Token = "0x200032B")]
public class PlayerHint : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400175D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshPro hintText;

	[Token(Token = "0x400175E")]
	private const int hintCount = 10;

	[Token(Token = "0x400175F")]
	private const string hintPrefix = "hint_";

	[Token(Token = "0x600163A")]
	[Address(RVA = "0x9BF664", Offset = "0x9BF664", VA = "0x9BF664")]
	private void Awake()
	{
	}

	[Token(Token = "0x600163B")]
	[Address(RVA = "0x9BF668", Offset = "0x9BF668", VA = "0x9BF668")]
	private void Start()
	{
	}

	[Token(Token = "0x600163C")]
	[Address(RVA = "0x9BF66C", Offset = "0x9BF66C", VA = "0x9BF66C")]
	public void ShowRandomHint()
	{
	}

	[Token(Token = "0x600163D")]
	[Address(RVA = "0x9BF778", Offset = "0x9BF778", VA = "0x9BF778")]
	public PlayerHint()
	{
	}
}
[Token(Token = "0x200032C")]
public class PlayersReadyUI : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SpriteRenderer[] playerIcons;

	[Token(Token = "0x4001761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject[] votedMarkers;

	[Token(Token = "0x600163E")]
	[Address(RVA = "0x9BF780", Offset = "0x9BF780", VA = "0x9BF780")]
	private void Awake()
	{
	}

	[Token(Token = "0x600163F")]
	[Address(RVA = "0x9BF8AC", Offset = "0x9BF8AC", VA = "0x9BF8AC")]
	public void Update()
	{
	}

	[Token(Token = "0x6001640")]
	[Address(RVA = "0x9BF8B0", Offset = "0x9BF8B0", VA = "0x9BF8B0")]
	private void UpdateAreDoneIcons()
	{
	}

	[Token(Token = "0x6001641")]
	[Address(RVA = "0x9BFE38", Offset = "0x9BFE38", VA = "0x9BFE38")]
	public PlayersReadyUI()
	{
	}
}
[Token(Token = "0x200032E")]
public class PokeButton : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200032F")]
	public enum Interaction
	{
		[Token(Token = "0x400177A")]
		IndexFingerPoke,
		[Token(Token = "0x400177B")]
		FullHand
	}

	[Token(Token = "0x2000330")]
	public enum ButtonDirection
	{
		[Token(Token = "0x400177D")]
		Forward,
		[Token(Token = "0x400177E")]
		Backward,
		[Token(Token = "0x400177F")]
		Up,
		[Token(Token = "0x4001780")]
		Down,
		[Token(Token = "0x4001781")]
		Right,
		[Token(Token = "0x4001782")]
		Left
	}

	[Token(Token = "0x2000331")]
	public enum PressEffect
	{
		[Token(Token = "0x4001784")]
		None,
		[Token(Token = "0x4001785")]
		Tween
	}

	[Token(Token = "0x2000332")]
	public enum ButtonPressSound
	{
		[Token(Token = "0x4001787")]
		Standard,
		[Token(Token = "0x4001788")]
		None
	}

	[Token(Token = "0x4001763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Action onClick;

	[Token(Token = "0x4001764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Action onRelease;

	[Token(Token = "0x4001765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ButtonDirection buttonFaceDirection;

	[Token(Token = "0x4001766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool active;

	[Token(Token = "0x4001767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool soundOnInactive;

	[Token(Token = "0x4001768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Func<bool> shouldIgnoreClicks;

	[Token(Token = "0x4001769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject buttonBody;

	[Token(Token = "0x400176A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float delayBetweenClicks;

	[Token(Token = "0x400176B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("Stop a button from being clickable for a short time to avoid accidental clicks when enabled")]
	public float OnEnableClickableDelay;

	[Token(Token = "0x400176C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Interaction Type")]
	public Interaction interaction;

	[Token(Token = "0x400176D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Header("Index Finger Poke Settings")]
	public bool requireMinAngleToPoke;

	[Token(Token = "0x400176E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float minAngleToPoke;

	[Token(Token = "0x400176F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool forcePointerPose;

	[Token(Token = "0x4001770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Tooltip("The minimum angle in degrees between the hand speed direction & the button facing direction to poke the button")]
	[Header("Hand Velocity Direction Settings")]
	public float minHandVelocityButtonAngle;

	[Token(Token = "0x4001771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[Header("Press Effect")]
	public PressEffect pressEffect;

	[Token(Token = "0x4001772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonPressSound pressSound;

	[Token(Token = "0x4001773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[Tooltip("Used only if press effect is set to Tween")]
	public float tweenOffset;

	[Token(Token = "0x4001774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool vibrates;

	[Token(Token = "0x4001775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float clickDelayTimer;

	[Token(Token = "0x4001776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 localStartPosition;

	[Token(Token = "0x4001777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private CookoutAvatarHand hand;

	[Token(Token = "0x4001778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool isBeingPoked;

	[Token(Token = "0x170002BE")]
	public Action OnClick
	{
		[Token(Token = "0x6001644")]
		[Address(RVA = "0x9BFE64", Offset = "0x9BFE64", VA = "0x9BFE64")]
		set
		{
		}
	}

	[Token(Token = "0x170002BF")]
	public Action OnRelease
	{
		[Token(Token = "0x6001645")]
		[Address(RVA = "0x9BFE6C", Offset = "0x9BFE6C", VA = "0x9BFE6C")]
		set
		{
		}
	}

	[Token(Token = "0x6001646")]
	[Address(RVA = "0x9BFE74", Offset = "0x9BFE74", VA = "0x9BFE74")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001647")]
	[Address(RVA = "0x9BFEB4", Offset = "0x9BFEB4", VA = "0x9BFEB4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001648")]
	[Address(RVA = "0x9BFEC8", Offset = "0x9BFEC8", VA = "0x9BFEC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001649")]
	[Address(RVA = "0x9BFFCC", Offset = "0x9BFFCC", VA = "0x9BFFCC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600164A")]
	[Address(RVA = "0x9C0720", Offset = "0x9C0720", VA = "0x9C0720")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600164B")]
	[Address(RVA = "0x9C05A8", Offset = "0x9C05A8", VA = "0x9C05A8")]
	private void ClickButton()
	{
	}

	[Token(Token = "0x600164C")]
	[Address(RVA = "0x9C07F8", Offset = "0x9C07F8", VA = "0x9C07F8")]
	private void TweenButtonBody()
	{
	}

	[Token(Token = "0x600164D")]
	[Address(RVA = "0x9C0408", Offset = "0x9C0408", VA = "0x9C0408")]
	private Vector3 GetDirectionVector(ButtonDirection direction)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600164E")]
	[Address(RVA = "0x9C08E0", Offset = "0x9C08E0", VA = "0x9C08E0")]
	public PokeButton()
	{
	}
}
[Token(Token = "0x2000333")]
public class PreRoundUI : SingleInstanceBehavior<PreRoundUI>
{
	[Token(Token = "0x2000334")]
	public enum MenuState
	{
		[Token(Token = "0x40017B9")]
		Disabled,
		[Token(Token = "0x40017BA")]
		Tutorial,
		[Token(Token = "0x40017BB")]
		EndlessTutorial0,
		[Token(Token = "0x40017BC")]
		EndlessTutorial1,
		[Token(Token = "0x40017BD")]
		EndlessTutorial2,
		[Token(Token = "0x40017BE")]
		EndlessRewardDisplay,
		[Token(Token = "0x40017BF")]
		SlotSelect,
		[Token(Token = "0x40017C0")]
		PotionSelect,
		[Token(Token = "0x40017C1")]
		Vote,
		[Token(Token = "0x40017C2")]
		Voted,
		[Token(Token = "0x40017C3")]
		HiddenByInventory,
		[Token(Token = "0x40017C4")]
		EndlessLeaderboard,
		[Token(Token = "0x40017C5")]
		creativeTutorial
	}

	[Token(Token = "0x4001789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MenuState stateBacking;

	[Token(Token = "0x400178A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Roots")]
	[SerializeField]
	private GameObject mainRoot;

	[Token(Token = "0x400178B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject tutorialRoot;

	[Token(Token = "0x400178C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject potionSelectSlotRoot;

	[Token(Token = "0x400178D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject potionSelectRoot;

	[Token(Token = "0x400178E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject voteRoot;

	[Token(Token = "0x400178F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject preVoteRoot;

	[Token(Token = "0x4001790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject postVoteRoot;

	[Token(Token = "0x4001791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject endlessRewardDisplayRoot;

	[Token(Token = "0x4001792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[Header("Buttons")]
	private GameObject nextStepButtonGO;

	[Token(Token = "0x4001793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject goBackButtonGO;

	[Token(Token = "0x4001794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	[Header("Other")]
	private TextMeshPro pageDisplayerText;

	[Token(Token = "0x4001795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject coinPouch;

	[Token(Token = "0x4001796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Texture inactiveTexture;

	[Token(Token = "0x4001797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Texture activeTexture;

	[Token(Token = "0x4001798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x4001799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private TextMeshPro header;

	[Token(Token = "0x400179A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Material inactiveMaterial;

	[Token(Token = "0x400179B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Material activeMaterial;

	[Token(Token = "0x400179C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int currentStateIndex;

	[Token(Token = "0x400179D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<MenuState> stateFlow;

	[Token(Token = "0x400179E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private TutorialDisplay tutorial;

	[Token(Token = "0x400179F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private EndlessRewardDisplay endlessRewardDisplay;

	[Token(Token = "0x40017A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private CookingCup cookingCup;

	[Token(Token = "0x40017A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private CookingRound cookingRound;

	[Token(Token = "0x40017A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private PlayerHint hint;

	[Token(Token = "0x40017A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private SaveManager saveManager;

	[Token(Token = "0x40017A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private ConsumableMenu consumableMenu;

	[Token(Token = "0x40017A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private MapVoteCounter voteCounter;

	[Token(Token = "0x40017A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private PokeButton nextStepButton;

	[Token(Token = "0x40017A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private PokeButton goBackButton;

	[Token(Token = "0x40017A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private bool unlockedConsumables;

	[Token(Token = "0x40017A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private MenuState stateBeforeHiding;

	[Token(Token = "0x40017AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private bool hasSeenEndlessTutorial;

	[Token(Token = "0x40017AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Collider[] colliders;

	[Token(Token = "0x40017AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Renderer nextStepRenderer;

	[Token(Token = "0x40017AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Renderer goBackButtonRenderer;

	[Token(Token = "0x40017AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Transform nextStepButtonTransform;

	[Token(Token = "0x40017AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private LeaderboardEndlessMode LeaderboardEndlessMode;

	[Token(Token = "0x40017B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Vector3 nextStepStartScale;

	[Token(Token = "0x40017B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private float nextStepPulseSpeed;

	[Token(Token = "0x40017B2")]
	private const string localizationHeaderTutorial = "preround_header_tutorial";

	[Token(Token = "0x40017B3")]
	private const string localizationHeaderEndlessReward = "endless_rewardsheader";

	[Token(Token = "0x40017B4")]
	private const string localizationHeaderPotionSelection = "preround_header_potionselection";

	[Token(Token = "0x40017B5")]
	private const string localizationHeaderSelectPotion = "preround_header_selectpotion";

	[Token(Token = "0x40017B6")]
	private const string localizationHeaderConfirm = "preround_header_confirm";

	[Token(Token = "0x40017B7")]
	private const string localizationHeaderReady = "preround_header_ready";

	[Token(Token = "0x170002C0")]
	public MenuState State
	{
		[Token(Token = "0x600164F")]
		[Address(RVA = "0x9C0924", Offset = "0x9C0924", VA = "0x9C0924")]
		get
		{
			return default(MenuState);
		}
		[Token(Token = "0x6001650")]
		[Address(RVA = "0x9C092C", Offset = "0x9C092C", VA = "0x9C092C")]
		private set
		{
		}
	}

	[Token(Token = "0x170002C1")]
	public bool IsActive
	{
		[Token(Token = "0x6001651")]
		[Address(RVA = "0x9C0DB4", Offset = "0x9C0DB4", VA = "0x9C0DB4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001652")]
	[Address(RVA = "0x9C0DC4", Offset = "0x9C0DC4", VA = "0x9C0DC4", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6001653")]
	[Address(RVA = "0x9C1004", Offset = "0x9C1004", VA = "0x9C1004")]
	private void Start()
	{
	}

	[Token(Token = "0x6001654")]
	[Address(RVA = "0x9C1570", Offset = "0x9C1570", VA = "0x9C1570")]
	private void Update()
	{
	}

	[Token(Token = "0x6001655")]
	[Address(RVA = "0x9C0934", Offset = "0x9C0934", VA = "0x9C0934")]
	private void OnStateChange()
	{
	}

	[Token(Token = "0x6001656")]
	[Address(RVA = "0x9C1AA0", Offset = "0x9C1AA0", VA = "0x9C1AA0")]
	public void GoToNextStep()
	{
	}

	[Token(Token = "0x6001657")]
	[Address(RVA = "0x9C1DF8", Offset = "0x9C1DF8", VA = "0x9C1DF8")]
	public void GoToPreviousStep()
	{
	}

	[Token(Token = "0x6001658")]
	[Address(RVA = "0x9C1D30", Offset = "0x9C1D30", VA = "0x9C1D30")]
	private void RefreshChangeStateButtons()
	{
	}

	[Token(Token = "0x6001659")]
	[Address(RVA = "0x9C1F98", Offset = "0x9C1F98", VA = "0x9C1F98")]
	public void OnVoted()
	{
	}

	[Token(Token = "0x600165A")]
	[Address(RVA = "0x9C207C", Offset = "0x9C207C", VA = "0x9C207C")]
	public void Show(bool shouldShow, bool wasHiddenByInventory, bool isHiddenByInventory, bool instantlyToVoting)
	{
	}

	[Token(Token = "0x600165B")]
	[Address(RVA = "0x9C1C54", Offset = "0x9C1C54", VA = "0x9C1C54")]
	private void UpdatePageCount(int activePageIndex)
	{
	}

	[Token(Token = "0x600165C")]
	[Address(RVA = "0x9C283C", Offset = "0x9C283C", VA = "0x9C283C")]
	public void OnSlotSelected()
	{
	}

	[Token(Token = "0x600165D")]
	[Address(RVA = "0x9C2848", Offset = "0x9C2848", VA = "0x9C2848")]
	public void OnFinishPotionSelection()
	{
	}

	[Token(Token = "0x600165E")]
	[Address(RVA = "0x9C2854", Offset = "0x9C2854", VA = "0x9C2854")]
	public void UpdateGhostMenuLoadout(int slot, int potionType)
	{
	}

	[Token(Token = "0x600165F")]
	[Address(RVA = "0x9C2940", Offset = "0x9C2940", VA = "0x9C2940")]
	public bool CanBeHiddenByInventory()
	{
		return default(bool);
	}

	[Token(Token = "0x6001660")]
	[Address(RVA = "0x9C2990", Offset = "0x9C2990", VA = "0x9C2990")]
	public PreRoundUI()
	{
	}
}
[Token(Token = "0x2000335")]
public sealed class RoomListItem : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40017C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PokeButton button;

	[Token(Token = "0x40017C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpriteRenderer environment;

	[Token(Token = "0x40017C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SpriteRenderer playerCount;

	[Token(Token = "0x40017C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text owner;

	[Token(Token = "0x40017CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_Text intent;

	[Token(Token = "0x40017CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TMP_Text townName;

	[Token(Token = "0x6001661")]
	[Address(RVA = "0x9C2A58", Offset = "0x9C2A58", VA = "0x9C2A58")]
	public RoomListItem()
	{
	}
}
[Token(Token = "0x2000336")]
public class RoundCountdown : SingleInstanceBehavior<RoundCountdown>
{
	[Token(Token = "0x2000337")]
	[CompilerGenerated]
	private sealed class <DoRoundCountDown>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoundCountdown <>4__this;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float countdownLength;

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CookingRound <cookingRound>5__2;

		[Token(Token = "0x170002C2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600166C")]
			[Address(RVA = "0x9C3224", Offset = "0x9C3224", VA = "0x9C3224", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600166E")]
			[Address(RVA = "0x9C326C", Offset = "0x9C326C", VA = "0x9C326C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0x9C2D94", Offset = "0x9C2D94", VA = "0x9C2D94")]
		[DebuggerHidden]
		public <DoRoundCountDown>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0x9C2EB8", Offset = "0x9C2EB8", VA = "0x9C2EB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0x9C2EBC", Offset = "0x9C2EBC", VA = "0x9C2EBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0x9C322C", Offset = "0x9C322C", VA = "0x9C322C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000338")]
	[CompilerGenerated]
	private sealed class <DoPauseCountdown>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoundCountdown <>4__this;

		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float countdownLength;

		[Token(Token = "0x170002C4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001672")]
			[Address(RVA = "0x9C34E4", Offset = "0x9C34E4", VA = "0x9C34E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001674")]
			[Address(RVA = "0x9C352C", Offset = "0x9C352C", VA = "0x9C352C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0x9C2DBC", Offset = "0x9C2DBC", VA = "0x9C2DBC")]
		[DebuggerHidden]
		public <DoPauseCountdown>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0x9C3274", Offset = "0x9C3274", VA = "0x9C3274", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0x9C3278", Offset = "0x9C3278", VA = "0x9C3278", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0x9C34EC", Offset = "0x9C34EC", VA = "0x9C34EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40017CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshPro roundCountDownText;

	[Token(Token = "0x40017CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshPro roundCountDownLabel;

	[Token(Token = "0x40017CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Animator anim;

	[Token(Token = "0x40017CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject endlessPauseCup;

	[Token(Token = "0x40017D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool finalCountdownSoundPlaying;

	[Token(Token = "0x40017D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int latestWholeSecondsLeft;

	[Token(Token = "0x40017D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WaitForSeconds countdownStartDelay;

	[Token(Token = "0x6001662")]
	[Address(RVA = "0x9C2A60", Offset = "0x9C2A60", VA = "0x9C2A60", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6001663")]
	[Address(RVA = "0x9C2AC8", Offset = "0x9C2AC8", VA = "0x9C2AC8")]
	public void ShowCountdown(float countdownLength, bool isEndlessModePause = false)
	{
	}

	[Token(Token = "0x6001664")]
	[Address(RVA = "0x9C2C98", Offset = "0x9C2C98", VA = "0x9C2C98")]
	public void Hide()
	{
	}

	[Token(Token = "0x6001665")]
	[Address(RVA = "0x9C2BA8", Offset = "0x9C2BA8", VA = "0x9C2BA8")]
	[IteratorStateMachine(typeof(<DoRoundCountDown>d__10))]
	private IEnumerator DoRoundCountDown(float countdownLength)
	{
		return null;
	}

	[Token(Token = "0x6001666")]
	[Address(RVA = "0x9C2C20", Offset = "0x9C2C20", VA = "0x9C2C20")]
	[IteratorStateMachine(typeof(<DoPauseCountdown>d__11))]
	private IEnumerator DoPauseCountdown(float countdownLength)
	{
		return null;
	}

	[Token(Token = "0x6001667")]
	[Address(RVA = "0x9C2DE4", Offset = "0x9C2DE4", VA = "0x9C2DE4")]
	public RoundCountdown()
	{
	}
}
[Token(Token = "0x2000339")]
public class RoundResultDisplayer : SingleInstanceNetworkedBehavior<RoundResultDisplayer>, IPunObservable
{
	[Token(Token = "0x200033A")]
	public enum State
	{
		[Token(Token = "0x4001819")]
		Hidden,
		[Token(Token = "0x400181A")]
		ShowWin,
		[Token(Token = "0x400181B")]
		ShowFail,
		[Token(Token = "0x400181C")]
		ShowRoyalFail,
		[Token(Token = "0x400181D")]
		ShowAborted
	}

	[Token(Token = "0x200033C")]
	[CompilerGenerated]
	private sealed class <Show>d__66 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoundResultDisplayer <>4__this;

		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StarGoal[] <starGoals>5__2;

		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <targetPosition>5__3;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <i>5__4;

		[Token(Token = "0x170002C6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600168C")]
			[Address(RVA = "0x9C651C", Offset = "0x9C651C", VA = "0x9C651C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600168E")]
			[Address(RVA = "0x9C6564", Offset = "0x9C6564", VA = "0x9C6564", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0x9C4410", Offset = "0x9C4410", VA = "0x9C4410")]
		[DebuggerHidden]
		public <Show>d__66(int <>1__state)
		{
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0x9C5288", Offset = "0x9C5288", VA = "0x9C5288", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0x9C528C", Offset = "0x9C528C", VA = "0x9C528C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0x9C6524", Offset = "0x9C6524", VA = "0x9C6524", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200033E")]
	[CompilerGenerated]
	private sealed class <ShowRoyalFail>d__74 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoundResultDisplayer <>4__this;

		[Token(Token = "0x170002C8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001695")]
			[Address(RVA = "0x9C69C0", Offset = "0x9C69C0", VA = "0x9C69C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001697")]
			[Address(RVA = "0x9C6A08", Offset = "0x9C6A08", VA = "0x9C6A08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0x9C4B58", Offset = "0x9C4B58", VA = "0x9C4B58")]
		[DebuggerHidden]
		public <ShowRoyalFail>d__74(int <>1__state)
		{
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0x9C66F8", Offset = "0x9C66F8", VA = "0x9C66F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0x9C66FC", Offset = "0x9C66FC", VA = "0x9C66FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0x9C69C8", Offset = "0x9C69C8", VA = "0x9C69C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200033F")]
	[CompilerGenerated]
	private sealed class <ShowAborted>d__75 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoundResultDisplayer <>4__this;

		[Token(Token = "0x170002CA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600169B")]
			[Address(RVA = "0x9C6CD8", Offset = "0x9C6CD8", VA = "0x9C6CD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600169D")]
			[Address(RVA = "0x9C6D20", Offset = "0x9C6D20", VA = "0x9C6D20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0x9C4B80", Offset = "0x9C4B80", VA = "0x9C4B80")]
		[DebuggerHidden]
		public <ShowAborted>d__75(int <>1__state)
		{
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0x9C6A10", Offset = "0x9C6A10", VA = "0x9C6A10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0x9C6A14", Offset = "0x9C6A14", VA = "0x9C6A14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0x9C6CE0", Offset = "0x9C6CE0", VA = "0x9C6CE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40017DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Color clearedTextColor;

	[Token(Token = "0x40017DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Color failedTextColor;

	[Token(Token = "0x40017DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Sprite clearGoalMarker;

	[Token(Token = "0x40017DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Sprite failedGoalMarker;

	[Token(Token = "0x40017E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject[] starMeshes;

	[Token(Token = "0x40017E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject[] brokenStarMeshes;

	[Token(Token = "0x40017E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private ParticleSystem[] starBurstSystems;

	[Token(Token = "0x40017E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject gameOverDisplay;

	[Token(Token = "0x40017E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject royalFailDisplay;

	[Token(Token = "0x40017E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject abortedDisplay;

	[Token(Token = "0x40017E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private SpriteRenderer goalStateIcon;

	[Token(Token = "0x40017E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private TextMeshPro goalDescriptionText;

	[Token(Token = "0x40017E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private ParticleSystem starGoalClearParticles;

	[Token(Token = "0x40017E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private ParticleSystem starGoalFailParticles;

	[Token(Token = "0x40017EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	[Header("Star Holder Drop Settings")]
	private float starHolderDropLength;

	[Token(Token = "0x40017EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[Header("Timing Settings")]
	[SerializeField]
	private float startDelayTime;

	[Token(Token = "0x40017EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private float beforeDropDelayTime;

	[Token(Token = "0x40017ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[SerializeField]
	private float dropDurationTime;

	[Token(Token = "0x40017EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private float dropLandPaddingTime;

	[Token(Token = "0x40017EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[SerializeField]
	private float nextGoalDelayTime;

	[Token(Token = "0x40017F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private float beforeFlyingStarDelayTime;

	[Token(Token = "0x40017F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[SerializeField]
	private float flyingStarPacingTime;

	[Token(Token = "0x40017F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private float finalDelayBeforeVoteTime;

	[Token(Token = "0x40017F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[SerializeField]
	private float trophyBarDisappearTime;

	[Token(Token = "0x40017F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private float royalFailDelayTime;

	[Token(Token = "0x40017F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[SerializeField]
	private float abortedDelayTime;

	[Token(Token = "0x40017F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public State state;

	[Token(Token = "0x40017F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private int cupID;

	[Token(Token = "0x40017F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int levelIndexInCup;

	[Token(Token = "0x40017F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int[] cupStars;

	[Token(Token = "0x40017FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool cupFinished;

	[Token(Token = "0x40017FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private int starsEarnedThisRound;

	[Token(Token = "0x40017FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool[] goalsCleared;

	[Token(Token = "0x40017FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private CookingRound cookingRound;

	[Token(Token = "0x40017FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Map map;

	[Token(Token = "0x40017FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private StarGoalsWindowUI starGoalsWindowUI;

	[Token(Token = "0x4001800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Transform starGoalClearParticlesTransform;

	[Token(Token = "0x4001801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Transform starGoalFailParticlesTransform;

	[Token(Token = "0x4001802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private TrophyStarBar trophyStarBar;

	[Token(Token = "0x4001803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private TrailRenderer[] starTrails;

	[Token(Token = "0x4001804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private FaceLocalPlayer[] starsFaceLocalPlayer;

	[Token(Token = "0x4001805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Renderer[] starRenderers;

	[Token(Token = "0x4001806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Vector3 starDefaultScale;

	[Token(Token = "0x4001807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private Color defaultDescriptionColor;

	[Token(Token = "0x4001808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private GameObject visualParent;

	[Token(Token = "0x4001809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Coroutine displayRoutine;

	[Token(Token = "0x400180A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private bool isBeingHidden;

	[Token(Token = "0x400180B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x171")]
	private bool setupComplete;

	[Token(Token = "0x400180C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private WaitForSeconds startDelay;

	[Token(Token = "0x400180D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private WaitForSeconds beforeDropDelay;

	[Token(Token = "0x400180E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private WaitForSeconds dropDuration;

	[Token(Token = "0x400180F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private WaitForSeconds nextGoalDelay;

	[Token(Token = "0x4001810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private WaitForSeconds beforeFlyingStarDelay;

	[Token(Token = "0x4001811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private WaitForSeconds flyingStarPacing;

	[Token(Token = "0x4001812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private WaitForSeconds finalDelayBeforeVote;

	[Token(Token = "0x4001813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private WaitForSeconds trophyBarDisappearDuration;

	[Token(Token = "0x4001814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private WaitForSeconds royalFailDelay;

	[Token(Token = "0x4001815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private WaitForSeconds abortedDelay;

	[Token(Token = "0x4001816")]
	private const int goalCount = 3;

	[Token(Token = "0x4001817")]
	private const float trailWidth = 0.22f;

	[Token(Token = "0x6001675")]
	[Address(RVA = "0x9C3534", Offset = "0x9C3534", VA = "0x9C3534", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6001676")]
	[Address(RVA = "0x9C39AC", Offset = "0x9C39AC", VA = "0x9C39AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001677")]
	[Address(RVA = "0x9C39F0", Offset = "0x9C39F0", VA = "0x9C39F0")]
	private void Setup()
	{
	}

	[Token(Token = "0x6001678")]
	[Address(RVA = "0x9C3D5C", Offset = "0x9C3D5C", VA = "0x9C3D5C")]
	public void ShowResults(int cupID, int levelIndexInCup, bool failedCup, bool royalFail, bool cupFinished, bool[] goalsCleared, int[] cupStars, bool aborted)
	{
	}

	[Token(Token = "0x6001679")]
	[Address(RVA = "0x9C3DA0", Offset = "0x9C3DA0", VA = "0x9C3DA0")]
	private void DisplayResultsLocally()
	{
	}

	[Token(Token = "0x600167A")]
	[Address(RVA = "0x9C43A8", Offset = "0x9C43A8", VA = "0x9C43A8")]
	[IteratorStateMachine(typeof(<Show>d__66))]
	private IEnumerator Show()
	{
		return null;
	}

	[Token(Token = "0x600167B")]
	[Address(RVA = "0x9C4438", Offset = "0x9C4438", VA = "0x9C4438")]
	private void ScaleTrailWidth(float newWidth)
	{
	}

	[Token(Token = "0x600167C")]
	[Address(RVA = "0x9C44E8", Offset = "0x9C44E8", VA = "0x9C44E8")]
	private void OnCountdownStarted()
	{
	}

	[Token(Token = "0x600167D")]
	[Address(RVA = "0x9C4700", Offset = "0x9C4700", VA = "0x9C4700")]
	private void OnConfirmModeStart()
	{
	}

	[Token(Token = "0x600167E")]
	[Address(RVA = "0x9C4710", Offset = "0x9C4710", VA = "0x9C4710")]
	public void Hide()
	{
	}

	[Token(Token = "0x600167F")]
	[Address(RVA = "0x9C47D8", Offset = "0x9C47D8", VA = "0x9C47D8")]
	[PunRPC]
	private void HideResultsRPC()
	{
	}

	[Token(Token = "0x6001680")]
	[Address(RVA = "0x9C44F8", Offset = "0x9C44F8", VA = "0x9C44F8")]
	public void HideLocally(float disappearTime, float destroyDelay)
	{
	}

	[Token(Token = "0x6001681")]
	[Address(RVA = "0x9C47F0", Offset = "0x9C47F0", VA = "0x9C47F0")]
	private void OnStarReachedBar(GameObject star, int levelIndex)
	{
	}

	[Token(Token = "0x6001682")]
	[Address(RVA = "0x9C4284", Offset = "0x9C4284", VA = "0x9C4284")]
	[IteratorStateMachine(typeof(<ShowRoyalFail>d__74))]
	private IEnumerator ShowRoyalFail()
	{
		return null;
	}

	[Token(Token = "0x6001683")]
	[Address(RVA = "0x9C421C", Offset = "0x9C421C", VA = "0x9C421C")]
	[IteratorStateMachine(typeof(<ShowAborted>d__75))]
	private IEnumerator ShowAborted()
	{
		return null;
	}

	[Token(Token = "0x6001684")]
	[Address(RVA = "0x9C4BA8", Offset = "0x9C4BA8", VA = "0x9C4BA8", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6001685")]
	[Address(RVA = "0x9C4D30", Offset = "0x9C4D30", VA = "0x9C4D30", Slot = "6")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6001686")]
	[Address(RVA = "0x9C5164", Offset = "0x9C5164", VA = "0x9C5164")]
	public RoundResultDisplayer()
	{
	}
}
[Token(Token = "0x2000340")]
public class SpinTransform : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400182F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector3 axis;

	[Token(Token = "0x4001830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float speed;

	[Token(Token = "0x600169E")]
	[Address(RVA = "0x9C6D28", Offset = "0x9C6D28", VA = "0x9C6D28")]
	private void Update()
	{
	}

	[Token(Token = "0x600169F")]
	[Address(RVA = "0x9C6D84", Offset = "0x9C6D84", VA = "0x9C6D84")]
	public SpinTransform()
	{
	}
}
[Token(Token = "0x2000341")]
public class StoryDisplay : SingleInstanceBehavior<StoryDisplay>
{
	[Token(Token = "0x4001832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject root;

	[Token(Token = "0x4001833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float narrationPadding;

	[Token(Token = "0x4001834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Sprite endlessStoryPicture;

	[Token(Token = "0x4001835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Sprite creativeStoryPicture;

	[Token(Token = "0x4001836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[Header("Final Level")]
	private Sprite outro1Star;

	[Token(Token = "0x4001837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Sprite outro2Star;

	[Token(Token = "0x4001838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Sprite outro3Star;

	[Token(Token = "0x4001839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PlaySoundResult currentVoiceClip;

	[Token(Token = "0x400183A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private TextMeshPro text;

	[Token(Token = "0x400183B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private SpriteRenderer storyPicture;

	[Token(Token = "0x400183C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private TableCenterUI TableCenterUI;

	[Token(Token = "0x400183D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private CookingRound cookingRound;

	[Token(Token = "0x400183E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float storyTimer;

	[Token(Token = "0x400183F")]
	private const string localizationStoryIntro = "story_intro";

	[Token(Token = "0x4001840")]
	private const string localizationStoryEndless = "story_Endless";

	[Token(Token = "0x4001841")]
	private const string localizationCreativeStory = "creative_mode_story";

	[Token(Token = "0x170002CC")]
	public float voiceOverLength
	{
		[Token(Token = "0x60016A0")]
		[Address(RVA = "0x9C6D8C", Offset = "0x9C6D8C", VA = "0x9C6D8C")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60016A1")]
		[Address(RVA = "0x9C6D94", Offset = "0x9C6D94", VA = "0x9C6D94")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60016A2")]
	[Address(RVA = "0x9C6D9C", Offset = "0x9C6D9C", VA = "0x9C6D9C", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60016A3")]
	[Address(RVA = "0x9C6EAC", Offset = "0x9C6EAC", VA = "0x9C6EAC")]
	private void Start()
	{
	}

	[Token(Token = "0x60016A4")]
	[Address(RVA = "0x9C6FD0", Offset = "0x9C6FD0", VA = "0x9C6FD0")]
	private void Update()
	{
	}

	[Token(Token = "0x60016A5")]
	[Address(RVA = "0x9C7028", Offset = "0x9C7028", VA = "0x9C7028")]
	public void Show(int cupID)
	{
	}

	[Token(Token = "0x60016A6")]
	[Address(RVA = "0x9C7234", Offset = "0x9C7234", VA = "0x9C7234")]
	public void ShowTutorialStory()
	{
	}

	[Token(Token = "0x60016A7")]
	[Address(RVA = "0x9C7444", Offset = "0x9C7444", VA = "0x9C7444")]
	public void ShowEndlessStory()
	{
	}

	[Token(Token = "0x60016A8")]
	[Address(RVA = "0x9C75B0", Offset = "0x9C75B0", VA = "0x9C75B0")]
	public void ShowCreativeStory()
	{
	}

	[Token(Token = "0x60016A9")]
	[Address(RVA = "0x9C771C", Offset = "0x9C771C", VA = "0x9C771C")]
	private void OnTutorialStoryFinished()
	{
	}

	[Token(Token = "0x60016AA")]
	[Address(RVA = "0x9C7934", Offset = "0x9C7934", VA = "0x9C7934")]
	public void ShowFinalLevelOutro(TableCenterUI.State outroState)
	{
	}

	[Token(Token = "0x60016AB")]
	[Address(RVA = "0x9C7200", Offset = "0x9C7200", VA = "0x9C7200")]
	public void StopCurrentVoiceClip()
	{
	}

	[Token(Token = "0x60016AC")]
	[Address(RVA = "0x9C7A8C", Offset = "0x9C7A8C", VA = "0x9C7A8C", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x60016AD")]
	[Address(RVA = "0x9C7B8C", Offset = "0x9C7B8C", VA = "0x9C7B8C")]
	public StoryDisplay()
	{
	}
}
[Token(Token = "0x2000342")]
public class ThanksForPlaying : SingleInstanceBehavior<ThanksForPlaying>
{
	[Token(Token = "0x4001842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject root;

	[Token(Token = "0x4001843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshPro starsCollectedText;

	[Token(Token = "0x4001844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshPro inventoryUnlocksText;

	[Token(Token = "0x4001845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMeshPro endlessRecordText;

	[Token(Token = "0x4001846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x4001847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private PokeButton closeButton;

	[Token(Token = "0x4001848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int totalStars;

	[Token(Token = "0x4001849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int totalInventoryUnlocks;

	[Token(Token = "0x400184A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CookingCup cookingCup;

	[Token(Token = "0x400184B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private SaveManager saveManager;

	[Token(Token = "0x400184C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ItemRewardsRegistry itemRewardsRegistry;

	[Token(Token = "0x400184D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isShowing;

	[Token(Token = "0x400184E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Collider[] colliders;

	[Token(Token = "0x400184F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool setupComplete;

	[Token(Token = "0x60016B3")]
	[Address(RVA = "0x9C7E90", Offset = "0x9C7E90", VA = "0x9C7E90", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60016B4")]
	[Address(RVA = "0x9C7F2C", Offset = "0x9C7F2C", VA = "0x9C7F2C")]
	private void Start()
	{
	}

	[Token(Token = "0x60016B5")]
	[Address(RVA = "0x9C825C", Offset = "0x9C825C", VA = "0x9C825C")]
	public void Show(bool shouldShow, bool skipExitAnimation)
	{
	}

	[Token(Token = "0x60016B6")]
	[Address(RVA = "0x9C8430", Offset = "0x9C8430", VA = "0x9C8430")]
	public void RefreshStats()
	{
	}

	[Token(Token = "0x60016B7")]
	[Address(RVA = "0x9C871C", Offset = "0x9C871C", VA = "0x9C871C")]
	public ThanksForPlaying()
	{
	}
}
[Token(Token = "0x2000343")]
public class ThievingHandler : SingleInstanceNetworkedBehavior<ThievingHandler>
{
	[Token(Token = "0x4001850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float stealCooldown;

	[Token(Token = "0x4001851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float stealTimer;

	[Token(Token = "0x4001852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<int> activeThieves;

	[Token(Token = "0x4001853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OrderMonitor orderMonitor;

	[Token(Token = "0x4001854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CookingRound cookingRound;

	[Token(Token = "0x4001855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private TimeSlowdownHandler slowdown;

	[Token(Token = "0x4001856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CustomerRegistry customerRegistry;

	[Token(Token = "0x4001857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<int> platesWithStealables;

	[Token(Token = "0x60016B8")]
	[Address(RVA = "0x9C8788", Offset = "0x9C8788", VA = "0x9C8788")]
	private void Start()
	{
	}

	[Token(Token = "0x60016B9")]
	[Address(RVA = "0x9C8C80", Offset = "0x9C8C80", VA = "0x9C8C80")]
	private void Update()
	{
	}

	[Token(Token = "0x60016BA")]
	[Address(RVA = "0x9C91B4", Offset = "0x9C91B4", VA = "0x9C91B4", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x60016BB")]
	[Address(RVA = "0x9C9288", Offset = "0x9C9288", VA = "0x9C9288")]
	private void OnRoundStart()
	{
	}

	[Token(Token = "0x60016BC")]
	[Address(RVA = "0x9C92E0", Offset = "0x9C92E0", VA = "0x9C92E0")]
	public void RemoveThief(int thiefID)
	{
	}

	[Token(Token = "0x60016BD")]
	[Address(RVA = "0x9C8BB4", Offset = "0x9C8BB4", VA = "0x9C8BB4")]
	public void AddThief(int id)
	{
	}

	[Token(Token = "0x60016BE")]
	[Address(RVA = "0x9C8D6C", Offset = "0x9C8D6C", VA = "0x9C8D6C")]
	private void StealIngredients()
	{
	}

	[Token(Token = "0x60016BF")]
	[Address(RVA = "0x9C9338", Offset = "0x9C9338", VA = "0x9C9338")]
	[PunRPC]
	private void StealIngredientRPC(int victimPlateViewID, int thiefPlateViewID, int thiefOrder)
	{
	}

	[Token(Token = "0x60016C0")]
	[Address(RVA = "0x9C9510", Offset = "0x9C9510", VA = "0x9C9510")]
	public ThievingHandler()
	{
	}
}
[Token(Token = "0x2000344")]
public class TownCompleteCelebration : SingleInstanceNetworkedBehavior<TownCompleteCelebration>, IPunObservable
{
	[Token(Token = "0x2000346")]
	[CompilerGenerated]
	private sealed class <ScoreCountupCoroutine>d__70 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TownCompleteCelebration <>4__this;

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <numberOfLevels>5__2;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <totalStars>5__3;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <starsToReward>5__4;

		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <starCountup>5__5;

		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WaitForSeconds <fillTime>5__6;

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <fillTimeValue>5__7;

		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int <i>5__8;

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TableCenterUI <tableCenterUI>5__9;

		[Token(Token = "0x170002CD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016D6")]
			[Address(RVA = "0x9CBAD0", Offset = "0x9CBAD0", VA = "0x9CBAD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016D8")]
			[Address(RVA = "0x9CBB18", Offset = "0x9CBB18", VA = "0x9CBB18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0x9CAC80", Offset = "0x9CAC80", VA = "0x9CAC80")]
		[DebuggerHidden]
		public <ScoreCountupCoroutine>d__70(int <>1__state)
		{
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0x9CB16C", Offset = "0x9CB16C", VA = "0x9CB16C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0x9CB170", Offset = "0x9CB170", VA = "0x9CB170", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0x9CBAD8", Offset = "0x9CBAD8", VA = "0x9CBAD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000347")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass73_0
	{
		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TownCompleteCelebration <>4__this;

		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int nextCup;

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CupButton nextCupButton;

		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action <>9__1;

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0x9CBB20", Offset = "0x9CBB20", VA = "0x9CBB20")]
		public <>c__DisplayClass73_0()
		{
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0x9CBB28", Offset = "0x9CBB28", VA = "0x9CBB28")]
		internal void <ReturnToMap>b__0()
		{
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0x9CBE74", Offset = "0x9CBE74", VA = "0x9CBE74")]
		internal void <ReturnToMap>b__1()
		{
		}
	}

	[Token(Token = "0x2000348")]
	[CompilerGenerated]
	private sealed class <ReturnToMap>d__73 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TownCompleteCelebration <>4__this;

		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass73_0 <>8__1;

		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Map <map>5__2;

		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CupButton <cupButtonTarget>5__3;

		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <distance>5__4;

		[Token(Token = "0x40018B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <startDistance>5__5;

		[Token(Token = "0x170002CF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016DF")]
			[Address(RVA = "0x9CC768", Offset = "0x9CC768", VA = "0x9CC768", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016E1")]
			[Address(RVA = "0x9CC7B0", Offset = "0x9CC7B0", VA = "0x9CC7B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0x9CAD64", Offset = "0x9CAD64", VA = "0x9CAD64")]
		[DebuggerHidden]
		public <ReturnToMap>d__73(int <>1__state)
		{
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0x9CBE90", Offset = "0x9CBE90", VA = "0x9CBE90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0x9CBE94", Offset = "0x9CBE94", VA = "0x9CBE94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0x9CC770", Offset = "0x9CC770", VA = "0x9CC770", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("References")]
	[SerializeField]
	private Renderer[] starRenderers;

	[Token(Token = "0x4001859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject[] townVisuals;

	[Token(Token = "0x400185A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject[] bannerVisuals;

	[Token(Token = "0x400185B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private LocalizedText townNameText;

	[Token(Token = "0x400185C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private ParticleSystem starFullParticles;

	[Token(Token = "0x400185D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ParticleSystem[] starShimmerParticles;

	[Token(Token = "0x400185E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private ParticleSystem confettiParticles;

	[Token(Token = "0x400185F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private ParticleSystem fireworksParticles;

	[Token(Token = "0x4001860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private ParticleSystem fireworksLoopingParticles;

	[Token(Token = "0x4001861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private TrailRenderer trailRenderer;

	[Token(Token = "0x4001862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Transform[] starShimmerTransform;

	[Token(Token = "0x4001863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x4001864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject[] RewardIconRoots;

	[Token(Token = "0x4001865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Sprite coinRewardIcon;

	[Token(Token = "0x4001866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	[Header("Celebration Settings")]
	private Vector3 starTarget;

	[Token(Token = "0x4001867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[SerializeField]
	private Vector3 moveToMapTargetScale;

	[Token(Token = "0x4001868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private float moveToMapSpeed;

	[Token(Token = "0x4001869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[SerializeField]
	private float reachedMapTreshold;

	[Token(Token = "0x400186A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private float StarFillRateTime;

	[Token(Token = "0x400186B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[SerializeField]
	private float waitForMapTransitionTime;

	[Token(Token = "0x400186C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private float waitForHighRankEffectsTime;

	[Token(Token = "0x400186D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[SerializeField]
	private float celebrationFinishTime;

	[Token(Token = "0x400186E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private float returnToTownSelectDelay;

	[Token(Token = "0x400186F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[SerializeField]
	private float roadFillTimeDelay;

	[Token(Token = "0x4001870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private float delayBeforeShowingNextTown;

	[Token(Token = "0x4001871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[SerializeField]
	private float delayNextTownOnRegionCelebration;

	[Token(Token = "0x4001872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private float trailWidth;

	[Token(Token = "0x4001873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[SerializeField]
	private float singleFireworkLaunchCooldown;

	[Token(Token = "0x4001874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private float multipleFireworkLaunchCooldown;

	[Token(Token = "0x4001875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[SerializeField]
	[Header("Final Level")]
	private float hideTownCelebrationTime;

	[Token(Token = "0x4001876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private float delayAfterVoiceOver;

	[Token(Token = "0x4001877")]
	private const float shimmerStartX = 0.011153f;

	[Token(Token = "0x4001878")]
	private const float shimmerStopX = -0.0086469f;

	[Token(Token = "0x4001879")]
	private const float shimmerDeltaX = -0.0197999f;

	[Token(Token = "0x400187A")]
	private const string triggerEnter = "Enter";

	[Token(Token = "0x400187B")]
	private const string triggerExit = "Exit";

	[Token(Token = "0x400187C")]
	private const string propertyProgress = "_Progress";

	[Token(Token = "0x400187D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private bool isRunning;

	[Token(Token = "0x400187E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private int cupIndex;

	[Token(Token = "0x400187F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private int[] cupStars;

	[Token(Token = "0x4001880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool isRunningLocally;

	[Token(Token = "0x4001881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Map progressionMap;

	[Token(Token = "0x4001882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool[] filledStars;

	[Token(Token = "0x4001883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Vector3 startPosition;

	[Token(Token = "0x4001884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Coroutine countupRoutine;

	[Token(Token = "0x4001885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private GameObject visualsParent;

	[Token(Token = "0x4001886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool finalTown;

	[Token(Token = "0x4001887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private float singleFireworkLaunchTimer;

	[Token(Token = "0x4001888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float multipleFireworkLaunchTimer;

	[Token(Token = "0x4001889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private WaitForSeconds StarFillRate;

	[Token(Token = "0x400188A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private WaitForSeconds starFillRateOneLevel;

	[Token(Token = "0x400188B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private WaitForSeconds waitForMapTransition;

	[Token(Token = "0x400188C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private WaitForSeconds celebrationFinishDelay;

	[Token(Token = "0x400188D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private WaitForSeconds waitForHighRankEffects;

	[Token(Token = "0x400188E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private WaitForSeconds returnToTownSelect;

	[Token(Token = "0x400188F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private WaitForSeconds hideTownCelebrationDelay;

	[Token(Token = "0x4001890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private MaterialPropertyBlock matPropBlock;

	[Token(Token = "0x4001891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private CookingGameState gameState;

	[Token(Token = "0x4001892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private Transform starFullParticlesTransform;

	[Token(Token = "0x4001893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private CookingCup cookingCup;

	[Token(Token = "0x4001894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private MapRoad mapRoad;

	[Token(Token = "0x4001895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private FaceLocalPlayerSide faceLocalPlayerSide;

	[Token(Token = "0x4001896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private SpriteRenderer[] rewardIconRenderers;

	[Token(Token = "0x4001897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private PlaySoundResult goldenToastSound;

	[Token(Token = "0x60016C1")]
	[Address(RVA = "0x9C95F4", Offset = "0x9C95F4", VA = "0x9C95F4", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60016C2")]
	[Address(RVA = "0x9C9BA0", Offset = "0x9C9BA0", VA = "0x9C9BA0")]
	private void Start()
	{
	}

	[Token(Token = "0x60016C3")]
	[Address(RVA = "0x9C9F28", Offset = "0x9C9F28", VA = "0x9C9F28")]
	private void Update()
	{
	}

	[Token(Token = "0x60016C4")]
	[Address(RVA = "0x9C9FD0", Offset = "0x9C9FD0", VA = "0x9C9FD0")]
	public void Show(int cupIndex, int[] cupStars)
	{
	}

	[Token(Token = "0x60016C5")]
	[Address(RVA = "0x9CA68C", Offset = "0x9CA68C", VA = "0x9CA68C", Slot = "6")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60016C6")]
	[Address(RVA = "0x9C9FE4", Offset = "0x9C9FE4", VA = "0x9C9FE4")]
	private void ScoreCountup()
	{
	}

	[Token(Token = "0x60016C7")]
	[Address(RVA = "0x9CAC18", Offset = "0x9CAC18", VA = "0x9CAC18")]
	[IteratorStateMachine(typeof(<ScoreCountupCoroutine>d__70))]
	private IEnumerator ScoreCountupCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60016C8")]
	[Address(RVA = "0x9CA954", Offset = "0x9CA954", VA = "0x9CA954")]
	private void UpdateStarProgress(float progress)
	{
	}

	[Token(Token = "0x60016C9")]
	[Address(RVA = "0x9CACA8", Offset = "0x9CACA8", VA = "0x9CACA8")]
	private void OnGameStateChanged(GameState oldState, GameState newState)
	{
	}

	[Token(Token = "0x60016CA")]
	[Address(RVA = "0x9CACFC", Offset = "0x9CACFC", VA = "0x9CACFC")]
	[IteratorStateMachine(typeof(<ReturnToMap>d__73))]
	private IEnumerator ReturnToMap()
	{
		return null;
	}

	[Token(Token = "0x60016CB")]
	[Address(RVA = "0x9C9EA8", Offset = "0x9C9EA8", VA = "0x9C9EA8")]
	private void Hide()
	{
	}

	[Token(Token = "0x60016CC")]
	[Address(RVA = "0x9C9B08", Offset = "0x9C9B08", VA = "0x9C9B08")]
	private void SetShimmerLocalPosition(int id, float progress)
	{
	}

	[Token(Token = "0x60016CD")]
	[Address(RVA = "0x9CAD8C", Offset = "0x9CAD8C", VA = "0x9CAD8C")]
	private void HideEarnedRewardIcons(int rank)
	{
	}

	[Token(Token = "0x60016CE")]
	[Address(RVA = "0x9CAF08", Offset = "0x9CAF08", VA = "0x9CAF08", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x60016CF")]
	[Address(RVA = "0x9CB008", Offset = "0x9CB008", VA = "0x9CB008")]
	public TownCompleteCelebration()
	{
	}
}
[Token(Token = "0x2000349")]
public class TrophyStarBar : SingleInstanceBehavior<TrophyStarBar>
{
	[Token(Token = "0x40018B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform[] trophyThresholds;

	[Token(Token = "0x40018B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material starLit;

	[Token(Token = "0x40018B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Material starUnlit;

	[Token(Token = "0x40018B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float starStartY;

	[Token(Token = "0x40018B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float starStopY;

	[Token(Token = "0x40018B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform[] starsParents;

	[Token(Token = "0x40018B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private ParticleSystem[] starParticles;

	[Token(Token = "0x40018B8")]
	private const float exitAnimatyionTime = 0.3f;

	[Token(Token = "0x40018B9")]
	private const float minThresholdHeight = -0.098f;

	[Token(Token = "0x40018BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int cupMaxStarCount;

	[Token(Token = "0x40018BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer[][] stars;

	[Token(Token = "0x40018BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform[][] starsTransform;

	[Token(Token = "0x40018BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int currentActiveStars;

	[Token(Token = "0x40018BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private CookingGameState cookingGameState;

	[Token(Token = "0x40018BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Animator animator;

	[Token(Token = "0x40018C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int nextParticleSystem;

	[Token(Token = "0x60016E2")]
	[Address(RVA = "0x9CC7B8", Offset = "0x9CC7B8", VA = "0x9CC7B8", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60016E3")]
	[Address(RVA = "0x9CCA94", Offset = "0x9CCA94", VA = "0x9CCA94")]
	private void Start()
	{
	}

	[Token(Token = "0x60016E4")]
	[Address(RVA = "0x9CCD1C", Offset = "0x9CCD1C", VA = "0x9CCD1C")]
	private void OnNewGameState(GameState oldState, GameState newState)
	{
	}

	[Token(Token = "0x60016E5")]
	[Address(RVA = "0x9CCBD0", Offset = "0x9CCBD0", VA = "0x9CCBD0")]
	private void SetStarStatus(int activeStars)
	{
	}

	[Token(Token = "0x60016E6")]
	[Address(RVA = "0x9C42EC", Offset = "0x9C42EC", VA = "0x9C42EC")]
	public void Show(int numberOfStars)
	{
	}

	[Token(Token = "0x60016E7")]
	[Address(RVA = "0x9C63E0", Offset = "0x9C63E0", VA = "0x9C63E0")]
	public void Hide(bool instantDisappear)
	{
	}

	[Token(Token = "0x60016E8")]
	[Address(RVA = "0x9C49D8", Offset = "0x9C49D8", VA = "0x9C49D8")]
	public void AddStar()
	{
	}

	[Token(Token = "0x60016E9")]
	[Address(RVA = "0x9CCD2C", Offset = "0x9CCD2C", VA = "0x9CCD2C")]
	public void SetCupStarsAndThresholdValues(int cupID)
	{
	}

	[Token(Token = "0x60016EA")]
	[Address(RVA = "0x9CCFE8", Offset = "0x9CCFE8", VA = "0x9CCFE8", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x60016EB")]
	[Address(RVA = "0x9CD0D0", Offset = "0x9CD0D0", VA = "0x9CD0D0")]
	public TrophyStarBar()
	{
	}
}
[Token(Token = "0x200034A")]
public class TutorialDisplay : SingleInstanceBehavior<TutorialDisplay>
{
	[Token(Token = "0x40018C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject root;

	[Token(Token = "0x40018C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite[] endlessTutorialSprites;

	[Token(Token = "0x40018C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Sprite creativeModeSprite;

	[Token(Token = "0x40018C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TextMeshPro title;

	[Token(Token = "0x40018C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TextMeshPro description;

	[Token(Token = "0x40018C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SpriteRenderer tutorialPicture;

	[Token(Token = "0x40018C7")]
	private const string localizationEndlessHeader = "endless_header";

	[Token(Token = "0x40018C8")]
	private const string localizationCreativeHeader = "creative_header";

	[Token(Token = "0x40018C9")]
	private const string localizationCreativeDescription = "creative_mode_tutorial";

	[Token(Token = "0x60016ED")]
	[Address(RVA = "0x9CD1CC", Offset = "0x9CD1CC", VA = "0x9CD1CC", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60016EE")]
	[Address(RVA = "0x9C1620", Offset = "0x9C1620", VA = "0x9C1620")]
	public void ShowCupTutorial(int cupID, int levelIndex)
	{
	}

	[Token(Token = "0x60016EF")]
	[Address(RVA = "0x9C18AC", Offset = "0x9C18AC", VA = "0x9C18AC")]
	public void ShowEndlessTutorial(int pageIndex)
	{
	}

	[Token(Token = "0x60016F0")]
	[Address(RVA = "0x9C17C0", Offset = "0x9C17C0", VA = "0x9C17C0")]
	public void ShowCreativeTutorial()
	{
	}

	[Token(Token = "0x60016F1")]
	[Address(RVA = "0x9CD314", Offset = "0x9CD314", VA = "0x9CD314")]
	public TutorialDisplay()
	{
	}
}
[Token(Token = "0x200034B")]
public class TutorialSuggestMultiplayer : SingleInstanceBehavior<TutorialSuggestMultiplayer>
{
	[Token(Token = "0x40018CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CupData tutorialTown;

	[Token(Token = "0x40018CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PokeButton continueSoloButton;

	[Token(Token = "0x40018CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PokeButton playMultiplayerButton;

	[Token(Token = "0x40018CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool startedDirectlyInTutorial;

	[Token(Token = "0x40018CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool justBeatTutorialTownFirstTime;

	[Token(Token = "0x40018D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int tutorialTownCupIndex;

	[Token(Token = "0x40018D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CookingGameState gameStateManager;

	[Token(Token = "0x40018D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private BotManager botManager;

	[Token(Token = "0x40018D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Animator animator;

	[Token(Token = "0x40018D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject visuals;

	[Token(Token = "0x40018D5")]
	private const int singlePlayerPositionIndex = 0;

	[Token(Token = "0x40018D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Collider[] colliders;

	[Token(Token = "0x170002D1")]
	public bool IsShowing
	{
		[Token(Token = "0x60016F2")]
		[Address(RVA = "0x9CD380", Offset = "0x9CD380", VA = "0x9CD380")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60016F3")]
		[Address(RVA = "0x9CD388", Offset = "0x9CD388", VA = "0x9CD388")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60016F4")]
	[Address(RVA = "0x9CD394", Offset = "0x9CD394", VA = "0x9CD394", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60016F5")]
	[Address(RVA = "0x9CD514", Offset = "0x9CD514", VA = "0x9CD514")]
	private void Start()
	{
	}

	[Token(Token = "0x60016F6")]
	[Address(RVA = "0x9CD870", Offset = "0x9CD870", VA = "0x9CD870")]
	public void OnTownBeatenFirstTime(int cupIndex)
	{
	}

	[Token(Token = "0x60016F7")]
	[Address(RVA = "0x9CD888", Offset = "0x9CD888", VA = "0x9CD888")]
	private void OnGameStateChanged(GameState oldState, GameState newState)
	{
	}

	[Token(Token = "0x60016F8")]
	[Address(RVA = "0x9CDA60", Offset = "0x9CDA60", VA = "0x9CDA60")]
	public void Show(bool shouldShow)
	{
	}

	[Token(Token = "0x60016F9")]
	[Address(RVA = "0x9CDD0C", Offset = "0x9CDD0C", VA = "0x9CDD0C")]
	private void OnContinueSingleplayer()
	{
	}

	[Token(Token = "0x60016FA")]
	[Address(RVA = "0x9CDE54", Offset = "0x9CDE54", VA = "0x9CDE54")]
	private void OnSwitchToMultiplayer()
	{
	}

	[Token(Token = "0x60016FB")]
	[Address(RVA = "0x9CDF90", Offset = "0x9CDF90", VA = "0x9CDF90", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x60016FC")]
	[Address(RVA = "0x9CE090", Offset = "0x9CE090", VA = "0x9CE090")]
	public TutorialSuggestMultiplayer()
	{
	}
}
[Token(Token = "0x200034C")]
public class WorkSpaceMenu : SingleInstanceBehavior<WorkSpaceMenu>
{
	[Token(Token = "0x200034D")]
	public enum MenuState
	{
		[Token(Token = "0x40018E7")]
		Hidden,
		[Token(Token = "0x40018E8")]
		PreRoundUI,
		[Token(Token = "0x40018E9")]
		Inventory,
		[Token(Token = "0x40018EA")]
		InventoryHidingPreRoundUI,
		[Token(Token = "0x40018EB")]
		SuggestMultiplayer,
		[Token(Token = "0x40018EC")]
		ThanksForPlaying,
		[Token(Token = "0x40018ED")]
		PhotoGallery
	}

	[Token(Token = "0x40018D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MenuState menuStateBacking;

	[Token(Token = "0x40018D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[Header("Spawn locations")]
	private Vector3[] spawnLocations;

	[Token(Token = "0x40018D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Vector3[] spawnRotations;

	[Token(Token = "0x40018DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Menus")]
	[SerializeField]
	private PreRoundUI preRoundUI;

	[Token(Token = "0x40018DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private InventoryMenu inventoryMenu;

	[Token(Token = "0x40018DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TutorialSuggestMultiplayer tutorialSuggestMultiplayer;

	[Token(Token = "0x40018DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject ghostMenuPrefab;

	[Token(Token = "0x40018DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private ThanksForPlaying thanksForPlaying;

	[Token(Token = "0x40018DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private PhotoGallery photoGallery;

	[Token(Token = "0x40018E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private CookingNetworkManager cookingNetworkManager;

	[Token(Token = "0x40018E2")]
	private const float exitAnimationTime = 1.033f;

	[Token(Token = "0x40018E3")]
	private const float enterAnimationTime = 1.033f;

	[Token(Token = "0x40018E4")]
	private const string enterAnimationTrigger = "Enter";

	[Token(Token = "0x40018E5")]
	private const string exitAnimationTrigger = "Exit";

	[Token(Token = "0x170002D2")]
	public MenuState State
	{
		[Token(Token = "0x60016FD")]
		[Address(RVA = "0x9CE0FC", Offset = "0x9CE0FC", VA = "0x9CE0FC")]
		get
		{
			return default(MenuState);
		}
		[Token(Token = "0x60016FE")]
		[Address(RVA = "0x9CE104", Offset = "0x9CE104", VA = "0x9CE104")]
		private set
		{
		}
	}

	[Token(Token = "0x170002D3")]
	public GhostMenu GhostMenu
	{
		[Token(Token = "0x60016FF")]
		[Address(RVA = "0x9CE2F0", Offset = "0x9CE2F0", VA = "0x9CE2F0")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6001700")]
		[Address(RVA = "0x9CE2F8", Offset = "0x9CE2F8", VA = "0x9CE2F8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6001701")]
	[Address(RVA = "0x9CE300", Offset = "0x9CE300", VA = "0x9CE300", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6001702")]
	[Address(RVA = "0x9CE348", Offset = "0x9CE348", VA = "0x9CE348")]
	private void Start()
	{
	}

	[Token(Token = "0x6001703")]
	[Address(RVA = "0x9CE744", Offset = "0x9CE744", VA = "0x9CE744")]
	public void OnInventoryButtonPressed()
	{
	}

	[Token(Token = "0x6001704")]
	[Address(RVA = "0x9C1550", Offset = "0x9C1550", VA = "0x9C1550")]
	public void PreparePlayerForRound()
	{
	}

	[Token(Token = "0x6001705")]
	[Address(RVA = "0x9CE124", Offset = "0x9CE124", VA = "0x9CE124")]
	private void OnMenuStateChanged(MenuState oldState, MenuState newState)
	{
	}

	[Token(Token = "0x6001706")]
	[Address(RVA = "0x9CE8BC", Offset = "0x9CE8BC", VA = "0x9CE8BC")]
	private void UpdateFridge(int playerPosIndex, bool menuHidden)
	{
	}

	[Token(Token = "0x6001707")]
	[Address(RVA = "0x9CE60C", Offset = "0x9CE60C", VA = "0x9CE60C")]
	private void OnLocalPlayerMoved(int playerPosIndex)
	{
	}

	[Token(Token = "0x6001708")]
	[Address(RVA = "0x9CEA94", Offset = "0x9CEA94", VA = "0x9CEA94")]
	public void RefreshInventoryButtonActiveStatus()
	{
	}

	[Token(Token = "0x6001709")]
	[Address(RVA = "0x9CEC5C", Offset = "0x9CEC5C", VA = "0x9CEC5C")]
	public void OnLocalPlayerVoted(bool wasLastVote)
	{
	}

	[Token(Token = "0x600170A")]
	[Address(RVA = "0x9CEC90", Offset = "0x9CEC90", VA = "0x9CEC90")]
	public void ShowPhotoGallery()
	{
	}

	[Token(Token = "0x600170B")]
	[Address(RVA = "0x9CDA3C", Offset = "0x9CDA3C", VA = "0x9CDA3C")]
	public void ShowTutorialSuggestMultiplayer()
	{
	}

	[Token(Token = "0x600170C")]
	[Address(RVA = "0x9CDE34", Offset = "0x9CDE34", VA = "0x9CDE34")]
	public void HideTutorialSuggestMultiplayer()
	{
	}

	[Token(Token = "0x600170D")]
	[Address(RVA = "0x9CC744", Offset = "0x9CC744", VA = "0x9CC744")]
	public void ShowThanksForPlaying()
	{
	}

	[Token(Token = "0x600170E")]
	[Address(RVA = "0x9CECB0", Offset = "0x9CECB0", VA = "0x9CECB0")]
	public void CloseThanksForPlaying()
	{
	}

	[Token(Token = "0x600170F")]
	[Address(RVA = "0x9CECD0", Offset = "0x9CECD0", VA = "0x9CECD0")]
	public void Hide()
	{
	}

	[Token(Token = "0x6001710")]
	[Address(RVA = "0x9C2634", Offset = "0x9C2634", VA = "0x9C2634")]
	public void PlayEnterOrExitAnimation(bool isEntering, Animator animator, GameObject visuals, Collider[] colliders, [Optional] Action callbackWhenDone)
	{
	}

	[Token(Token = "0x6001711")]
	[Address(RVA = "0x9CECF0", Offset = "0x9CECF0", VA = "0x9CECF0")]
	public WorkSpaceMenu()
	{
	}
}
[Token(Token = "0x200034F")]
public class WristMenu : SingleInstanceBehavior<WristMenu>
{
	[Token(Token = "0x2000350")]
	private enum State
	{
		[Token(Token = "0x4001932")]
		Hidden,
		[Token(Token = "0x4001933")]
		Menu,
		[Token(Token = "0x4001934")]
		KickPopup,
		[Token(Token = "0x4001935")]
		AudioPopup,
		[Token(Token = "0x4001936")]
		LeavePopup,
		[Token(Token = "0x4001937")]
		CancelRoundPopup,
		[Token(Token = "0x4001938")]
		MakeRoomPrivatePopup,
		[Token(Token = "0x4001939")]
		MakeRoomPublicPopup
	}

	[Token(Token = "0x2000351")]
	public enum Seat
	{
		[Token(Token = "0x400193B")]
		Empty,
		[Token(Token = "0x400193C")]
		Player,
		[Token(Token = "0x400193D")]
		Bot
	}

	[Token(Token = "0x40018F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject wristWatchLeft;

	[Token(Token = "0x40018F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject wristWatchRight;

	[Token(Token = "0x40018F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PokeButton closeMenuButton;

	[Token(Token = "0x40018F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMeshPro roomCodeText;

	[Token(Token = "0x40018F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private PokeButton[] menuButtons;

	[Token(Token = "0x40018F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private PokeButton leaveRoomButton;

	[Token(Token = "0x40018F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private PokeButton cancelRoundButton;

	[Token(Token = "0x40018F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private PokeButton toogleRoomVisibilityButton;

	[Token(Token = "0x40018FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private PokeButton spawnBotButton;

	[Token(Token = "0x40018FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private PokeButton reportPlayersButton;

	[Token(Token = "0x40018FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private PokeButton audioButton;

	[Token(Token = "0x40018FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject menuRoot;

	[Token(Token = "0x40018FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Transform wristRoot;

	[Token(Token = "0x40018FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[Header("Player Row")]
	private Color localPlayerColor;

	[Token(Token = "0x4001900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Color remotePlayerColor;

	[Token(Token = "0x4001901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private SpriteRenderer[] playerIcons;

	[Token(Token = "0x4001902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private SpriteRenderer[] hostIcons;

	[Token(Token = "0x4001903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private TextMeshPro[] playerNames;

	[Token(Token = "0x4001904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private SpriteRenderer[] playerRowBackgrounds;

	[Token(Token = "0x4001905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private PokeButton[] KickButtons;

	[Token(Token = "0x4001906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	[Header("Mute & Unmute")]
	private Sprite mutePlayerIcon;

	[Token(Token = "0x4001907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private Sprite unmutePlayerIcon;

	[Token(Token = "0x4001908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private Sprite muteLocalMicIcon;

	[Token(Token = "0x4001909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private Sprite unmuteLocalMicIcon;

	[Token(Token = "0x400190A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private PokeButton[] mutePlayerButtons;

	[Token(Token = "0x400190B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private SpriteRenderer[] mutePlayerButtonIcons;

	[Token(Token = "0x400190C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private PokeButton[] muteLocalMicButtons;

	[Token(Token = "0x400190D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private SpriteRenderer[] muteLocalMicButtonIcons;

	[Token(Token = "0x400190E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[Header("Popup General")]
	[SerializeField]
	private PokeButton closePopupButton;

	[Token(Token = "0x400190F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private GameObject popupParent;

	[Token(Token = "0x4001910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	[Header("Kick Popup")]
	private GameObject kickPopupParent;

	[Token(Token = "0x4001911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private TextMeshPro kickPlayerName;

	[Token(Token = "0x4001912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private PokeButton confirmKickButton;

	[Token(Token = "0x4001913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private PokeButton confirmKickAndBlockButton;

	[Token(Token = "0x4001914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[Header("Leave Popup")]
	[SerializeField]
	private GameObject leavePopupParent;

	[Token(Token = "0x4001915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private PokeButton confirmLeaveButton;

	[Token(Token = "0x4001916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	[Header("Cancel Round Popup")]
	private GameObject cancelRoundPopupParent;

	[Token(Token = "0x4001917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private PokeButton cancelRoundConfirmButton;

	[Token(Token = "0x4001918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[Header("Confirm Make Room Private Popup")]
	[SerializeField]
	private GameObject makePrivatePopupParent;

	[Token(Token = "0x4001919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private PokeButton makePrivateConfirmButton;

	[Token(Token = "0x400191A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[Header("Confirm Make Room Public Popup")]
	[SerializeField]
	private GameObject makePublicPopupParent;

	[Token(Token = "0x400191B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[SerializeField]
	private PokeButton makePublicConfirmButton;

	[Token(Token = "0x400191C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	[Header("Audio Popup")]
	private GameObject audioPopupParent;

	[Token(Token = "0x400191D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private State state;

	[Token(Token = "0x400191E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private Seat[] seats;

	[Token(Token = "0x400191F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private BotManager botManager;

	[Token(Token = "0x4001920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private CookingNetworkManager cookingNetworkManager;

	[Token(Token = "0x4001921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private PhotonCallbackManager photonCallbackManager;

	[Token(Token = "0x4001922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private CookingRound cookingRound;

	[Token(Token = "0x4001923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private CookingGameState gameState;

	[Token(Token = "0x4001924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private Locale locale;

	[Token(Token = "0x4001925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private int selectedPlayerPositionIndex;

	[Token(Token = "0x4001926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private Transform menuParent;

	[Token(Token = "0x4001927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private TextMeshPro toggleRoomVisibilityText;

	[Token(Token = "0x4001928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private List<string> userReportingPlayerList;

	[Token(Token = "0x4001929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private List<string> userReportingPlayerIds;

	[Token(Token = "0x400192A")]
	private const string localizationMakeRoomPublic = "wristmenu_make_public";

	[Token(Token = "0x400192B")]
	private const string localizationMakeRoomPrivate = "wristmenu_make_private";

	[Token(Token = "0x400192C")]
	private const string localizationSinglePlayer = "wristmenu_singleplayer";

	[Token(Token = "0x400192D")]
	private const string localizationRoomCode = "wristmenu_roomcode";

	[Token(Token = "0x400192E")]
	private const string localizationHost = "wristmenu_host";

	[Token(Token = "0x400192F")]
	private const string localizationBotName = "wristmenu_botname";

	[Token(Token = "0x4001930")]
	private const string localizationEmpty = "wristmenu_empty";

	[Token(Token = "0x170002D4")]
	private bool IsShowingPopup
	{
		[Token(Token = "0x6001714")]
		[Address(RVA = "0x9CEE3C", Offset = "0x9CEE3C", VA = "0x9CEE3C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002D5")]
	private bool CancelRoundEnabled
	{
		[Token(Token = "0x6001715")]
		[Address(RVA = "0x9CEE64", Offset = "0x9CEE64", VA = "0x9CEE64")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001716")]
	[Address(RVA = "0x9CEF54", Offset = "0x9CEF54", VA = "0x9CEF54", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6001717")]
	[Address(RVA = "0x9CF05C", Offset = "0x9CF05C", VA = "0x9CF05C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001718")]
	[Address(RVA = "0x9D04F4", Offset = "0x9D04F4", VA = "0x9D04F4")]
	private void OnMenuCloseButtonPressed()
	{
	}

	[Token(Token = "0x6001719")]
	[Address(RVA = "0x9D028C", Offset = "0x9D028C", VA = "0x9D028C")]
	private void UpdateRoomCode()
	{
	}

	[Token(Token = "0x600171A")]
	[Address(RVA = "0x9D0098", Offset = "0x9D0098", VA = "0x9D0098")]
	private void SetState(State newState)
	{
	}

	[Token(Token = "0x600171B")]
	[Address(RVA = "0x9D1074", Offset = "0x9D1074", VA = "0x9D1074")]
	private void Update()
	{
	}

	[Token(Token = "0x600171C")]
	[Address(RVA = "0x9D10F0", Offset = "0x9D10F0", VA = "0x9D10F0")]
	private void ReturnToLobby()
	{
	}

	[Token(Token = "0x600171D")]
	[Address(RVA = "0x9D110C", Offset = "0x9D110C", VA = "0x9D110C")]
	private void ToggleRoomVisibilityClicked()
	{
	}

	[Token(Token = "0x600171E")]
	[Address(RVA = "0x9D11F4", Offset = "0x9D11F4", VA = "0x9D11F4")]
	public void SetRoomVisibility(RoomVisibility roomVisibility)
	{
	}

	[Token(Token = "0x600171F")]
	[Address(RVA = "0x9D0BD8", Offset = "0x9D0BD8", VA = "0x9D0BD8")]
	private void RefreshToggleVisibilityButton()
	{
	}

	[Token(Token = "0x6001720")]
	[Address(RVA = "0x9D1318", Offset = "0x9D1318", VA = "0x9D1318")]
	private void ToggleMicActive()
	{
	}

	[Token(Token = "0x6001721")]
	[Address(RVA = "0x9D10E0", Offset = "0x9D10E0", VA = "0x9D10E0")]
	private void ToggleMenu()
	{
	}

	[Token(Token = "0x6001722")]
	[Address(RVA = "0x9D1988", Offset = "0x9D1988", VA = "0x9D1988")]
	public void Hide()
	{
	}

	[Token(Token = "0x6001723")]
	[Address(RVA = "0x9D1990", Offset = "0x9D1990", VA = "0x9D1990")]
	private void OnPlayerConnected(PhotonPlayer player)
	{
	}

	[Token(Token = "0x6001724")]
	[Address(RVA = "0x9D1994", Offset = "0x9D1994", VA = "0x9D1994")]
	private void OnPlayerDisconnected(PhotonPlayer player)
	{
	}

	[Token(Token = "0x6001725")]
	[Address(RVA = "0x9D1998", Offset = "0x9D1998", VA = "0x9D1998")]
	private void OnMasterClientChanged(PhotonPlayer newMasterClient)
	{
	}

	[Token(Token = "0x6001726")]
	[Address(RVA = "0x9D19B0", Offset = "0x9D19B0", VA = "0x9D19B0")]
	private void OnPlayerMoved(int playerID)
	{
	}

	[Token(Token = "0x6001727")]
	[Address(RVA = "0x9D04FC", Offset = "0x9D04FC", VA = "0x9D04FC")]
	private void RefreshPlayerSeats()
	{
	}

	[Token(Token = "0x6001728")]
	[Address(RVA = "0x9D19B4", Offset = "0x9D19B4", VA = "0x9D19B4")]
	private void UpdatePlayerIcon(int index, Color color, bool isMaster)
	{
	}

	[Token(Token = "0x6001729")]
	[Address(RVA = "0x9D0E1C", Offset = "0x9D0E1C", VA = "0x9D0E1C")]
	private string GetPlayerName(int positionIndex, PhotonPlayer photonPlayer)
	{
		return null;
	}

	[Token(Token = "0x600172A")]
	[Address(RVA = "0x9D1350", Offset = "0x9D1350", VA = "0x9D1350")]
	private void RefreshMuteAndKickButtons()
	{
	}

	[Token(Token = "0x600172B")]
	[Address(RVA = "0x9D1AD8", Offset = "0x9D1AD8", VA = "0x9D1AD8")]
	private void RefreshSpawnBotButton()
	{
	}

	[Token(Token = "0x600172C")]
	[Address(RVA = "0x9D1B54", Offset = "0x9D1B54", VA = "0x9D1B54")]
	private void SpawnBot()
	{
	}

	[Token(Token = "0x600172D")]
	[Address(RVA = "0x9D1B78", Offset = "0x9D1B78", VA = "0x9D1B78")]
	private void OnMuteButtonClicked(int positionIndex)
	{
	}

	[Token(Token = "0x600172E")]
	[Address(RVA = "0x9D1C84", Offset = "0x9D1C84", VA = "0x9D1C84")]
	private void OnKickButtonPressed(int positionIndex)
	{
	}

	[Token(Token = "0x600172F")]
	[Address(RVA = "0x9D1D2C", Offset = "0x9D1D2C", VA = "0x9D1D2C")]
	private void KickAndBlockPlayer()
	{
	}

	[Token(Token = "0x6001730")]
	[Address(RVA = "0x9D1F2C", Offset = "0x9D1F2C", VA = "0x9D1F2C")]
	private void KickPlayer()
	{
	}

	[Token(Token = "0x6001731")]
	[Address(RVA = "0x9D0D84", Offset = "0x9D0D84", VA = "0x9D0D84")]
	private PhotonPlayer GetPlayer(int ID)
	{
		return null;
	}

	[Token(Token = "0x6001732")]
	[Address(RVA = "0x9D1F7C", Offset = "0x9D1F7C", VA = "0x9D1F7C")]
	private void OnCountdownStarted()
	{
	}

	[Token(Token = "0x6001733")]
	[Address(RVA = "0x9D1FD0", Offset = "0x9D1FD0", VA = "0x9D1FD0")]
	private void OnRoundStop()
	{
	}

	[Token(Token = "0x6001734")]
	[Address(RVA = "0x9D2004", Offset = "0x9D2004", VA = "0x9D2004")]
	private void OnRoundStart()
	{
	}

	[Token(Token = "0x6001735")]
	[Address(RVA = "0x9D204C", Offset = "0x9D204C", VA = "0x9D204C")]
	private void CancelRound()
	{
	}

	[Token(Token = "0x6001736")]
	[Address(RVA = "0x9D238C", Offset = "0x9D238C", VA = "0x9D238C")]
	private void OnGameStateChanged(GameState oldState, GameState newState)
	{
	}

	[Token(Token = "0x6001737")]
	[Address(RVA = "0x9D23A4", Offset = "0x9D23A4", VA = "0x9D23A4")]
	public void MasterClientRefresh()
	{
	}

	[Token(Token = "0x6001738")]
	[Address(RVA = "0x9D039C", Offset = "0x9D039C", VA = "0x9D039C")]
	private void TrackingInit()
	{
	}

	[Token(Token = "0x6001739")]
	[Address(RVA = "0x9D17B4", Offset = "0x9D17B4", VA = "0x9D17B4")]
	private void TrackingUpdateMuted()
	{
	}

	[Token(Token = "0x600173A")]
	[Address(RVA = "0x9D243C", Offset = "0x9D243C", VA = "0x9D243C")]
	public void OnLeavingMainScene()
	{
	}

	[Token(Token = "0x600173B")]
	[Address(RVA = "0x9D24A8", Offset = "0x9D24A8", VA = "0x9D24A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600173C")]
	[Address(RVA = "0x9D24C0", Offset = "0x9D24C0", VA = "0x9D24C0", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x600173D")]
	[Address(RVA = "0x9D2958", Offset = "0x9D2958", VA = "0x9D2958")]
	public WristMenu()
	{
	}
}
[Token(Token = "0x2000353")]
public class WristMenuAutoholdSettings : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PokeButton autoHoldHandButton;

	[Token(Token = "0x4001941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material inactiveMat;

	[Token(Token = "0x4001942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Material activeMat;

	[Token(Token = "0x4001943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SaveManager saveManager;

	[Token(Token = "0x4001944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MeshRenderer autoHoldButtonRenderer;

	[Token(Token = "0x600174C")]
	[Address(RVA = "0x9D2BC8", Offset = "0x9D2BC8", VA = "0x9D2BC8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600174D")]
	[Address(RVA = "0x9D2C18", Offset = "0x9D2C18", VA = "0x9D2C18")]
	private void Start()
	{
	}

	[Token(Token = "0x600174E")]
	[Address(RVA = "0x9D2D84", Offset = "0x9D2D84", VA = "0x9D2D84")]
	private void SetAutoTogglePreference()
	{
	}

	[Token(Token = "0x600174F")]
	[Address(RVA = "0x9D2D3C", Offset = "0x9D2D3C", VA = "0x9D2D3C")]
	private void RefreshAutoHoldStatus()
	{
	}

	[Token(Token = "0x6001750")]
	[Address(RVA = "0x9D2DC8", Offset = "0x9D2DC8", VA = "0x9D2DC8")]
	public WristMenuAutoholdSettings()
	{
	}
}
[Token(Token = "0x2000354")]
public class Cleaver : NetworkedBehaviour, IPunObservable, IConsumableTarget
{
	[Token(Token = "0x4001945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool superSharpBacking;

	[Token(Token = "0x4001947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float maxChopForce;

	[Token(Token = "0x4001948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float minChopForce;

	[Token(Token = "0x4001949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private CleaverSafety safety;

	[Token(Token = "0x400194A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform centerOfMass;

	[Token(Token = "0x400194B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Collider blade;

	[Token(Token = "0x400194C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float maxChopAngle;

	[Token(Token = "0x400194D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float maxChopAngleReversed;

	[Token(Token = "0x400194E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float attachAngleMax;

	[Token(Token = "0x400194F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private float attachAngleReversed;

	[Token(Token = "0x4001950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float snapUpperYThreshold;

	[Token(Token = "0x4001951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private float snapLowerYThreshold;

	[Token(Token = "0x4001952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float attachToBoardVelocityThreshold;

	[Token(Token = "0x4001953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private float chopSplinterSpeedThreshold;

	[Token(Token = "0x4001954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private float backSwingCooldown;

	[Token(Token = "0x4001955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject superSharpnessVFX;

	[Token(Token = "0x4001956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[Tooltip("When thrown into a cutting board, force the cleaver an extra x cm into the board to make it feel like it stuck properly.")]
	private float forceExtraIntoCuttingBoard;

	[Token(Token = "0x4001957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[HideInInspector]
	public bool doubleEdged;

	[Token(Token = "0x4001958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Rigidbody rigidBody;

	[Token(Token = "0x4001959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Grabbable grabbable;

	[Token(Token = "0x400195A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<Transform> insideIngredientTransforms;

	[Token(Token = "0x400195B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<IngredientWhole> insideIngredients;

	[Token(Token = "0x400195C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Collider[] collidersHit;

	[Token(Token = "0x400195D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 colliderExtents;

	[Token(Token = "0x400195E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private CookingRound cookingRound;

	[Token(Token = "0x400195F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private EndlessMode endlessMode;

	[Token(Token = "0x4001960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float backSwingTimer;

	[Token(Token = "0x4001961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private bool lastHitWasForwardEdge;

	[Token(Token = "0x4001962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float fencingCooldown;

	[Token(Token = "0x4001963")]
	private const float fencingCooldownTime = 0.1f;

	[Token(Token = "0x4001964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public int inSafetyZone;

	[Token(Token = "0x4001965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float pausePhysicsTimer;

	[Token(Token = "0x170002D6")]
	public bool SuperSharp
	{
		[Token(Token = "0x6001751")]
		[Address(RVA = "0x9D2DD0", Offset = "0x9D2DD0", VA = "0x9D2DD0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001752")]
		[Address(RVA = "0x9D2DD8", Offset = "0x9D2DD8", VA = "0x9D2DD8")]
		private set
		{
		}
	}

	[Token(Token = "0x170002D7")]
	public UseConsumableHere UseConsumableHere
	{
		[Token(Token = "0x6001753")]
		[Address(RVA = "0x9D2E08", Offset = "0x9D2E08", VA = "0x9D2E08", Slot = "5")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6001754")]
		[Address(RVA = "0x9D2E10", Offset = "0x9D2E10", VA = "0x9D2E10", Slot = "6")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170002D8")]
	public bool ReactsToConsumables
	{
		[Token(Token = "0x6001755")]
		[Address(RVA = "0x9D2E18", Offset = "0x9D2E18", VA = "0x9D2E18", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001756")]
	[Address(RVA = "0x9D2E28", Offset = "0x9D2E28", VA = "0x9D2E28")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001757")]
	[Address(RVA = "0x9D3000", Offset = "0x9D3000", VA = "0x9D3000")]
	private void Start()
	{
	}

	[Token(Token = "0x6001758")]
	[Address(RVA = "0x9D3278", Offset = "0x9D3278", VA = "0x9D3278")]
	private void Update()
	{
	}

	[Token(Token = "0x6001759")]
	[Address(RVA = "0x9D331C", Offset = "0x9D331C", VA = "0x9D331C")]
	public void OnGrabBegin()
	{
	}

	[Token(Token = "0x600175A")]
	[Address(RVA = "0x9D336C", Offset = "0x9D336C", VA = "0x9D336C")]
	public void OnGrabEnd()
	{
	}

	[Token(Token = "0x600175B")]
	[Address(RVA = "0x9D38F0", Offset = "0x9D38F0", VA = "0x9D38F0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600175C")]
	[Address(RVA = "0x9D4C04", Offset = "0x9D4C04", VA = "0x9D4C04")]
	private void OnIngredientDisabled(IngredientWhole ingredient)
	{
	}

	[Token(Token = "0x600175D")]
	[Address(RVA = "0x9D4C8C", Offset = "0x9D4C8C", VA = "0x9D4C8C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600175E")]
	[Address(RVA = "0x9D4B10", Offset = "0x9D4B10", VA = "0x9D4B10")]
	private void RemoveInsideIngredient(IngredientWhole ingredient)
	{
	}

	[Token(Token = "0x600175F")]
	[Address(RVA = "0x9D37A8", Offset = "0x9D37A8", VA = "0x9D37A8")]
	private void AnchorCleaver(bool wasReleased)
	{
	}

	[Token(Token = "0x6001760")]
	[Address(RVA = "0x9D4770", Offset = "0x9D4770", VA = "0x9D4770")]
	private bool ChoppingWithEdgeFacingForward()
	{
		return default(bool);
	}

	[Token(Token = "0x6001761")]
	[Address(RVA = "0x9D34F4", Offset = "0x9D34F4", VA = "0x9D34F4")]
	private bool EdgeFacingChoppingBoard()
	{
		return default(bool);
	}

	[Token(Token = "0x6001762")]
	[Address(RVA = "0x9D4D94", Offset = "0x9D4D94", VA = "0x9D4D94")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001763")]
	[Address(RVA = "0x9D4FBC", Offset = "0x9D4FBC", VA = "0x9D4FBC")]
	private void EndSuperSharpness()
	{
	}

	[Token(Token = "0x6001764")]
	[Address(RVA = "0x9D4FC4", Offset = "0x9D4FC4", VA = "0x9D4FC4")]
	private void ApplyCreativeModeSuperSharpness()
	{
	}

	[Token(Token = "0x6001765")]
	[Address(RVA = "0x9D515C", Offset = "0x9D515C", VA = "0x9D515C")]
	[PunRPC]
	private void ActiveSuperSharpRPC()
	{
	}

	[Token(Token = "0x6001766")]
	[Address(RVA = "0x9D49C8", Offset = "0x9D49C8", VA = "0x9D49C8")]
	[PunRPC]
	private void FencingRPC(Vector3 fencingPosition, int otherPlayerID)
	{
	}

	[Token(Token = "0x6001767")]
	[Address(RVA = "0x9D518C", Offset = "0x9D518C", VA = "0x9D518C", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6001768")]
	[Address(RVA = "0x9D54E8", Offset = "0x9D54E8", VA = "0x9D54E8")]
	public Cleaver()
	{
	}
}
[Token(Token = "0x2000355")]
public enum CleaverShape
{
	[Token(Token = "0x4001967")]
	Regular,
	[Token(Token = "0x4001968")]
	BattleAxe,
	[Token(Token = "0x4001969")]
	CurvedBlade,
	[Token(Token = "0x400196A")]
	SleekDamascus,
	[Token(Token = "0x400196B")]
	machete,
	[Token(Token = "0x400196C")]
	Royal,
	[Token(Token = "0x400196D")]
	ChukaBocho,
	[Token(Token = "0x400196E")]
	SleekCleaver,
	[Token(Token = "0x400196F")]
	Rounded,
	[Token(Token = "0x4001970")]
	Butcher,
	[Token(Token = "0x4001971")]
	Bone,
	[Token(Token = "0x4001972")]
	Orc,
	[Token(Token = "0x4001973")]
	Carrot,
	[Token(Token = "0x4001974")]
	BrokenSword,
	[Token(Token = "0x4001975")]
	Mjolnir,
	[Token(Token = "0x4001976")]
	PlasticKnife,
	[Token(Token = "0x4001977")]
	DiyAxe,
	[Token(Token = "0x4001978")]
	DiyHammer,
	[Token(Token = "0x4001979")]
	DiySaw
}
[Serializable]
[Token(Token = "0x2000356")]
[CreateAssetMenu(fileName = "NewCleaverData", menuName = "Cleaver Data/Cleaver Data")]
public class CleaverData : RewardItem
{
	[Token(Token = "0x400197A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Mesh mesh;

	[Token(Token = "0x400197B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material material;

	[Token(Token = "0x400197C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material questMaterial;

	[Token(Token = "0x400197D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public CleaverShape shape;

	[Token(Token = "0x400197E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool doubleEdged;

	[Token(Token = "0x400197F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector3 snapPosition;

	[Token(Token = "0x4001980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Vector3 snapRotation;

	[Token(Token = "0x4001981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector3 alternateSnapRotation;

	[Token(Token = "0x4001982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Mesh superSharpParticleMesh;

	[Token(Token = "0x6001769")]
	[Address(RVA = "0x9D5604", Offset = "0x9D5604", VA = "0x9D5604")]
	public CleaverData()
	{
	}
}
[Token(Token = "0x2000357")]
public class CleaverDispenser : UnityEngine.MonoBehaviour, ILocallyGrabbable
{
	[Token(Token = "0x4001983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Grabbable cleaverGrabbable;

	[Token(Token = "0x4001984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Renderer ghostCleaverRenderer;

	[Token(Token = "0x4001985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private int id;

	[Token(Token = "0x4001986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool isMine;

	[Token(Token = "0x4001987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CookingNetworkManager cookingNetworkManager;

	[Token(Token = "0x600176A")]
	[Address(RVA = "0x9D560C", Offset = "0x9D560C", VA = "0x9D560C")]
	private void Start()
	{
	}

	[Token(Token = "0x600176B")]
	[Address(RVA = "0x9D57D0", Offset = "0x9D57D0", VA = "0x9D57D0", Slot = "4")]
	public void OnLocalGrab(CookoutAvatarHand grabbedBy, Transform handAnchor)
	{
	}

	[Token(Token = "0x600176C")]
	[Address(RVA = "0x9D57BC", Offset = "0x9D57BC", VA = "0x9D57BC")]
	public void SetMyDispenser(int myIndex)
	{
	}

	[Token(Token = "0x600176D")]
	[Address(RVA = "0x9D5B08", Offset = "0x9D5B08", VA = "0x9D5B08")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600176E")]
	[Address(RVA = "0x9D5BDC", Offset = "0x9D5BDC", VA = "0x9D5BDC")]
	private void Update()
	{
	}

	[Token(Token = "0x600176F")]
	[Address(RVA = "0x9D5C1C", Offset = "0x9D5C1C", VA = "0x9D5C1C")]
	public CleaverDispenser()
	{
	}
}
[Token(Token = "0x2000358")]
[CreateAssetMenu(fileName = "NewCleaverList", menuName = "Cleaver Data/Cleaver List")]
public class CleaverList : ScriptableObject
{
	[Token(Token = "0x4001988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<CleaverData> cleaverDataList;

	[Token(Token = "0x6001770")]
	[Address(RVA = "0x9D5C24", Offset = "0x9D5C24", VA = "0x9D5C24")]
	public CleaverList()
	{
	}
}
[Token(Token = "0x2000359")]
public class CleaverSafety : NetworkedBehaviour
{
	[Token(Token = "0x4001989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject Edge;

	[Token(Token = "0x400198A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject Flower;

	[Token(Token = "0x400198B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float highSpeedThreshold;

	[Token(Token = "0x400198C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float pausePhysicsTime;

	[Token(Token = "0x400198D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool activated;

	[Token(Token = "0x400198E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PhotonView cleaverView;

	[Token(Token = "0x400198F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Cleaver cleaver;

	[Token(Token = "0x4001990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Rigidbody rigidBody;

	[Token(Token = "0x4001991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Collider[] triggers;

	[Token(Token = "0x6001771")]
	[Address(RVA = "0x9D5C2C", Offset = "0x9D5C2C", VA = "0x9D5C2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001772")]
	[Address(RVA = "0x9D5D20", Offset = "0x9D5D20", VA = "0x9D5D20")]
	private void Update()
	{
	}

	[Token(Token = "0x6001773")]
	[Address(RVA = "0x9D5DE4", Offset = "0x9D5DE4", VA = "0x9D5DE4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001774")]
	[Address(RVA = "0x9D6168", Offset = "0x9D6168", VA = "0x9D6168")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6001775")]
	[Address(RVA = "0x9D6020", Offset = "0x9D6020", VA = "0x9D6020")]
	public void SetSafety(bool safetyOn)
	{
	}

	[Token(Token = "0x6001776")]
	[Address(RVA = "0x9D62F4", Offset = "0x9D62F4", VA = "0x9D62F4")]
	public void SafetyPhotonSerializationReceive(int newSafetyCount, float newPauseTimer)
	{
	}

	[Token(Token = "0x6001777")]
	[Address(RVA = "0x9D6400", Offset = "0x9D6400", VA = "0x9D6400")]
	public void SetActiveTrigger(int id)
	{
	}

	[Token(Token = "0x6001778")]
	[Address(RVA = "0x9D646C", Offset = "0x9D646C", VA = "0x9D646C")]
	public CleaverSafety()
	{
	}
}
[Token(Token = "0x200035A")]
public class CleaverVisuals : NetworkedBehaviour, IPunObservable
{
	[Token(Token = "0x4001992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ItemRewardID cleaverType;

	[Token(Token = "0x4001993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private CleaverShape shape;

	[Token(Token = "0x4001994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private MeshFilter meshFilter;

	[Token(Token = "0x4001995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Renderer myRenderer;

	[Token(Token = "0x4001996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform collidersHandleParent;

	[Token(Token = "0x4001997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform collidersBladeParent;

	[Token(Token = "0x4001998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private CleaverSafety safety;

	[Token(Token = "0x4001999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private ParticleSystem superSharpParticles;

	[Token(Token = "0x400199A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ItemRewardsRegistry rewardsRegistry;

	[Token(Token = "0x400199B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Cleaver cleaver;

	[Token(Token = "0x400199C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Grabbable grabbable;

	[Token(Token = "0x170002D9")]
	public ItemRewardID CleaverType
	{
		[Token(Token = "0x6001779")]
		[Address(RVA = "0x9D6480", Offset = "0x9D6480", VA = "0x9D6480")]
		get
		{
			return default(ItemRewardID);
		}
		[Token(Token = "0x600177A")]
		[Address(RVA = "0x9D6488", Offset = "0x9D6488", VA = "0x9D6488")]
		set
		{
		}
	}

	[Token(Token = "0x170002DA")]
	public CleaverShape Shape
	{
		[Token(Token = "0x600177B")]
		[Address(RVA = "0x9D6720", Offset = "0x9D6720", VA = "0x9D6720")]
		get
		{
			return default(CleaverShape);
		}
		[Token(Token = "0x600177C")]
		[Address(RVA = "0x9D666C", Offset = "0x9D666C", VA = "0x9D666C")]
		set
		{
		}
	}

	[Token(Token = "0x600177D")]
	[Address(RVA = "0x9D6728", Offset = "0x9D6728", VA = "0x9D6728")]
	private void Start()
	{
	}

	[Token(Token = "0x600177E")]
	[Address(RVA = "0x9D6850", Offset = "0x9D6850", VA = "0x9D6850")]
	[PunRPC]
	private void SetCleaverTypeRPC(int type)
	{
	}

	[Token(Token = "0x600177F")]
	[Address(RVA = "0x9D6854", Offset = "0x9D6854", VA = "0x9D6854", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6001780")]
	[Address(RVA = "0x9D6A0C", Offset = "0x9D6A0C", VA = "0x9D6A0C")]
	public CleaverVisuals()
	{
	}
}
[Token(Token = "0x200035B")]
public class CuttingBoard : NetworkedBehaviour, IPunObservable
{
	[Token(Token = "0x400199D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ItemRewardID type;

	[Token(Token = "0x400199E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform choppingBoardCenter;

	[Token(Token = "0x400199F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int ingredientViewID;

	[Token(Token = "0x40019A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ItemRewardsRegistry rewardsRegistry;

	[Token(Token = "0x40019A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x40019A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MaterialPropertyBlock materialPropertyBlock;

	[Token(Token = "0x40019A3")]
	private const string propertyTextureIndex = "_TextureIndex";

	[Token(Token = "0x170002DB")]
	public ItemRewardID Type
	{
		[Token(Token = "0x6001781")]
		[Address(RVA = "0x9D6A14", Offset = "0x9D6A14", VA = "0x9D6A14")]
		get
		{
			return default(ItemRewardID);
		}
		[Token(Token = "0x6001782")]
		[Address(RVA = "0x9D6A1C", Offset = "0x9D6A1C", VA = "0x9D6A1C")]
		set
		{
		}
	}

	[Token(Token = "0x6001783")]
	[Address(RVA = "0x9D6B28", Offset = "0x9D6B28", VA = "0x9D6B28")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001784")]
	[Address(RVA = "0x9D6B88", Offset = "0x9D6B88", VA = "0x9D6B88")]
	private void Start()
	{
	}

	[Token(Token = "0x6001785")]
	[Address(RVA = "0x9D6D10", Offset = "0x9D6D10", VA = "0x9D6D10")]
	public bool HasNoIngredient()
	{
		return default(bool);
	}

	[Token(Token = "0x6001786")]
	[Address(RVA = "0x9D6D98", Offset = "0x9D6D98", VA = "0x9D6D98")]
	public void AddIngredientToCuttingBoard(int newIngredientViewID)
	{
	}

	[Token(Token = "0x6001787")]
	[Address(RVA = "0x9D6FA0", Offset = "0x9D6FA0", VA = "0x9D6FA0")]
	[PunRPC]
	private void RemoveIngredientFromCuttingBoardRPC()
	{
	}

	[Token(Token = "0x6001788")]
	[Address(RVA = "0x9D6FAC", Offset = "0x9D6FAC", VA = "0x9D6FAC", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6001789")]
	[Address(RVA = "0x9D70E0", Offset = "0x9D70E0", VA = "0x9D70E0")]
	[PunRPC]
	private void SplinterParticlesRPC()
	{
	}

	[Token(Token = "0x600178A")]
	[Address(RVA = "0x9D7230", Offset = "0x9D7230", VA = "0x9D7230")]
	[PunRPC]
	private void SetCuttingBoardTypeRPC(int type)
	{
	}

	[Token(Token = "0x600178B")]
	[Address(RVA = "0x9D7234", Offset = "0x9D7234", VA = "0x9D7234")]
	public IngredientType GetIngredientOnBoard()
	{
		return default(IngredientType);
	}

	[Token(Token = "0x600178C")]
	[Address(RVA = "0x9D72F4", Offset = "0x9D72F4", VA = "0x9D72F4")]
	public CuttingBoard()
	{
	}
}
[Serializable]
[Token(Token = "0x200035C")]
[CreateAssetMenu(fileName = "NewCuttingBoardData", menuName = "Cutting Board Data/Cutting Board Data")]
public class CuttingBoardData : RewardItem
{
	[Token(Token = "0x40019A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int textureIndex;

	[Token(Token = "0x600178D")]
	[Address(RVA = "0x9D72FC", Offset = "0x9D72FC", VA = "0x9D72FC")]
	public CuttingBoardData()
	{
	}
}
[Token(Token = "0x200035D")]
[CreateAssetMenu(fileName = "NewCleaverList", menuName = "Cutting Board Data/Cutting Board List")]
public class CuttingBoardList : ScriptableObject
{
	[Token(Token = "0x40019A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<CuttingBoardData> cuttingBoardDataList;

	[Token(Token = "0x600178E")]
	[Address(RVA = "0x9D7304", Offset = "0x9D7304", VA = "0x9D7304")]
	public CuttingBoardList()
	{
	}
}
[Token(Token = "0x200035E")]
public class DishBrush : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40019A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float cleaningConstant;

	[Token(Token = "0x40019A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float speedThreshold;

	[Token(Token = "0x40019A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float minCleanFraction;

	[Token(Token = "0x40019A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float maxCleanFraction;

	[Token(Token = "0x40019AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float brushColliderRadius;

	[Token(Token = "0x40019AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform brushHead;

	[Token(Token = "0x40019AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float brushSoundCooldown;

	[Token(Token = "0x40019AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Collider[] collidersHit;

	[Token(Token = "0x40019AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Grabbable grabbable;

	[Token(Token = "0x40019AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] trackedMoves;

	[Token(Token = "0x40019B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 previousPosition;

	[Token(Token = "0x40019B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int currentTrackedMove;

	[Token(Token = "0x40019B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float hapticCooldownTimer;

	[Token(Token = "0x40019B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float brushSoundCooldownTimer;

	[Token(Token = "0x40019B4")]
	private const int numMovesTracked = 5;

	[Token(Token = "0x40019B5")]
	private const float hapticCooldown = 0.056f;

	[Token(Token = "0x40019B6")]
	private const string grabbableTag = "Grabbable";

	[Token(Token = "0x40019B7")]
	private const string plateName = "Plate";

	[Token(Token = "0x600178F")]
	[Address(RVA = "0x9D730C", Offset = "0x9D730C", VA = "0x9D730C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001790")]
	[Address(RVA = "0x9D73AC", Offset = "0x9D73AC", VA = "0x9D73AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001791")]
	[Address(RVA = "0x9D786C", Offset = "0x9D786C", VA = "0x9D786C")]
	private Vector3 MeanValue(Vector3[] values)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001792")]
	[Address(RVA = "0x9D7920", Offset = "0x9D7920", VA = "0x9D7920")]
	public DishBrush()
	{
	}
}
[Token(Token = "0x200035F")]
public class FireExtinguisher : NetworkedBehaviour, IPunObservable
{
	[Token(Token = "0x2000360")]
	private struct IngredientInRange
	{
		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Grillable grillable;

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int intersectingColliderCount;

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0x9D8530", Offset = "0x9D8530", VA = "0x9D8530")]
		public IngredientInRange(Grillable grillable, int intersectingColliderCount = 1)
		{
		}
	}

	[Token(Token = "0x40019B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform particleAnchor;

	[Token(Token = "0x40019B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Grabbable grabbable;

	[Token(Token = "0x40019BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CookoutInput input;

	[Token(Token = "0x40019BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isSpraying;

	[Token(Token = "0x40019BC")]
	private const string grabbableTag = "Grabbable";

	[Token(Token = "0x40019BD")]
	private const string nameSlice = "Slice";

	[Token(Token = "0x40019BE")]
	private const string nameWhole = "Whole";

	[Token(Token = "0x40019BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<IngredientInRange> ingredientsInRange;

	[Token(Token = "0x6001793")]
	[Address(RVA = "0x9D799C", Offset = "0x9D799C", VA = "0x9D799C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001794")]
	[Address(RVA = "0x9D7AA0", Offset = "0x9D7AA0", VA = "0x9D7AA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001795")]
	[Address(RVA = "0x9D7AEC", Offset = "0x9D7AEC", VA = "0x9D7AEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001796")]
	[Address(RVA = "0x9D7E6C", Offset = "0x9D7E6C", VA = "0x9D7E6C")]
	public void TryRemoveIngredient(Grillable grillable)
	{
	}

	[Token(Token = "0x6001797")]
	[Address(RVA = "0x9D7D40", Offset = "0x9D7D40", VA = "0x9D7D40")]
	private void StopExtinguishingInRangeIngredients()
	{
	}

	[Token(Token = "0x6001798")]
	[Address(RVA = "0x9D7FB4", Offset = "0x9D7FB4", VA = "0x9D7FB4")]
	public void OnGrabEnd()
	{
	}

	[Token(Token = "0x6001799")]
	[Address(RVA = "0x9D8038", Offset = "0x9D8038", VA = "0x9D8038", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600179A")]
	[Address(RVA = "0x9D7CA0", Offset = "0x9D7CA0", VA = "0x9D7CA0")]
	private void OnSprayingChanged()
	{
	}

	[Token(Token = "0x600179B")]
	[Address(RVA = "0x9D8110", Offset = "0x9D8110", VA = "0x9D8110")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600179C")]
	[Address(RVA = "0x9D81C8", Offset = "0x9D81C8", VA = "0x9D81C8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600179D")]
	[Address(RVA = "0x9D853C", Offset = "0x9D853C", VA = "0x9D853C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600179E")]
	[Address(RVA = "0x9D8890", Offset = "0x9D8890", VA = "0x9D8890")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600179F")]
	[Address(RVA = "0x9D8964", Offset = "0x9D8964", VA = "0x9D8964")]
	public FireExtinguisher()
	{
	}
}
[Token(Token = "0x2000361")]
public class Fridge : NetworkedBehaviour, IPunObservable
{
	[Token(Token = "0x40019C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly IngredientType[][] villageIngredients;

	[Token(Token = "0x40019C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly IngredientType[][] forestIngredients;

	[Token(Token = "0x40019C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly IngredientType[][] castleIngredients;

	[Token(Token = "0x40019C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly IngredientType[][] endlessModeIngredients;

	[Token(Token = "0x40019C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly IngredientType[] breadOnlyFridge;

	[Token(Token = "0x40019C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly IngredientType[][] tutorialIngredients;

	[Token(Token = "0x40019C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly IngredientType[][] fullIngredientSets;

	[Token(Token = "0x40019C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ItemRewardID type;

	[Token(Token = "0x40019CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int fridgeIDBacking;

	[Token(Token = "0x40019CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PokeButton fridgeButton;

	[Token(Token = "0x40019CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform fridgePlayerIconTransform;

	[Token(Token = "0x40019CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject fridgeButtonActive;

	[Token(Token = "0x40019CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject fridgeButtonInactive;

	[Token(Token = "0x40019CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject cycleIngredientsPrevious;

	[Token(Token = "0x40019D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject cycleIngredientsNext;

	[Token(Token = "0x40019D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject cycleIngredientsButtonFrames;

	[Token(Token = "0x40019D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject creativeModeToolTip;

	[Token(Token = "0x40019D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float extensionSpeed;

	[Token(Token = "0x40019D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float extendedHeightOffset;

	[Token(Token = "0x40019D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float interactableAboveHeight;

	[Token(Token = "0x40019D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool shouldBeExtended;

	[Token(Token = "0x40019D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 flatPosition;

	[Token(Token = "0x40019D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 extendedPosition;

	[Token(Token = "0x40019D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform extendablePart;

	[Token(Token = "0x40019DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool interactable;

	[Token(Token = "0x40019DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private FridgeIngredient[] fridgeIngredients;

	[Token(Token = "0x40019DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Transform openParticlesAnchor;

	[Token(Token = "0x40019DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private ParticleSystem closedParticles;

	[Token(Token = "0x40019DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool forceShutBacking;

	[Token(Token = "0x40019DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	private bool fridgeIconIsVisible;

	[Token(Token = "0x40019E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
	private bool tooltipActive;

	[Token(Token = "0x40019E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private int ingredientSetIndex;

	[Token(Token = "0x40019E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private EnvironmentLoader environmentLoader;

	[Token(Token = "0x40019E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ItemRewardsRegistry rewardsRegistry;

	[Token(Token = "0x40019E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private CookingRound cookingRound;

	[Token(Token = "0x40019E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private MeshRenderer fridgeRendererBody;

	[Token(Token = "0x40019E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private MeshRenderer switchIngredientRendererBody;

	[Token(Token = "0x40019E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Rigidbody rigidBody;

	[Token(Token = "0x40019E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private IngredientType[] ingredientTypesBacking;

	[Token(Token = "0x40019E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private IngredientType[] ingredientsToSwitchTo;

	[Token(Token = "0x40019EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private MaterialPropertyBlock materialPropertyBlock;

	[Token(Token = "0x40019EB")]
	private const string propertyTextureIndex = "_TextureIndex";

	[Token(Token = "0x170002DC")]
	public ItemRewardID Type
	{
		[Token(Token = "0x60017A1")]
		[Address(RVA = "0x9D89E4", Offset = "0x9D89E4", VA = "0x9D89E4")]
		get
		{
			return default(ItemRewardID);
		}
		[Token(Token = "0x60017A2")]
		[Address(RVA = "0x9D89EC", Offset = "0x9D89EC", VA = "0x9D89EC")]
		set
		{
		}
	}

	[Token(Token = "0x170002DD")]
	public bool ForceShut
	{
		[Token(Token = "0x60017A3")]
		[Address(RVA = "0x9D8B3C", Offset = "0x9D8B3C", VA = "0x9D8B3C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60017A4")]
		[Address(RVA = "0x9D8B44", Offset = "0x9D8B44", VA = "0x9D8B44")]
		set
		{
		}
	}

	[Token(Token = "0x170002DE")]
	public int FridgeID
	{
		[Token(Token = "0x60017A5")]
		[Address(RVA = "0x9D8C94", Offset = "0x9D8C94", VA = "0x9D8C94")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170002DF")]
	private bool InCreativeModeRound
	{
		[Token(Token = "0x60017A6")]
		[Address(RVA = "0x9D8EC0", Offset = "0x9D8EC0", VA = "0x9D8EC0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60017A7")]
	[Address(RVA = "0x9D8F94", Offset = "0x9D8F94", VA = "0x9D8F94")]
	private void Awake()
	{
	}

	[Token(Token = "0x60017A8")]
	[Address(RVA = "0x9D92E0", Offset = "0x9D92E0", VA = "0x9D92E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60017A9")]
	[Address(RVA = "0x9D9D78", Offset = "0x9D9D78", VA = "0x9D9D78")]
	private void OnLocalPlayerMoved(int spawnPointIndex)
	{
	}

	[Token(Token = "0x60017AA")]
	[Address(RVA = "0x9D9EAC", Offset = "0x9D9EAC", VA = "0x9D9EAC")]
	private void OnEnvironmentChanged()
	{
	}

	[Token(Token = "0x60017AB")]
	[Address(RVA = "0x9D9EB0", Offset = "0x9D9EB0", VA = "0x9D9EB0")]
	public void OnButtonClicked()
	{
	}

	[Token(Token = "0x60017AC")]
	[Address(RVA = "0x9DA1A4", Offset = "0x9DA1A4", VA = "0x9DA1A4")]
	private void OnIngredientGrabbed()
	{
	}

	[Token(Token = "0x60017AD")]
	[Address(RVA = "0x9DA3D4", Offset = "0x9DA3D4", VA = "0x9DA3D4")]
	[PunRPC]
	private void OnFridgeToggleRPC(bool extend)
	{
	}

	[Token(Token = "0x60017AE")]
	[Address(RVA = "0x9DA548", Offset = "0x9DA548", VA = "0x9DA548")]
	[PunRPC]
	private void OnFridgeIngredientGrabbedRPC()
	{
	}

	[Token(Token = "0x60017AF")]
	[Address(RVA = "0x9DA58C", Offset = "0x9DA58C", VA = "0x9DA58C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60017B0")]
	[Address(RVA = "0x9D9A00", Offset = "0x9D9A00", VA = "0x9D9A00")]
	private void SetInteractable(bool isInteractable)
	{
	}

	[Token(Token = "0x60017B1")]
	[Address(RVA = "0x9D8CBC", Offset = "0x9D8CBC", VA = "0x9D8CBC")]
	private int GetClosestPlayerIndex()
	{
		return default(int);
	}

	[Token(Token = "0x60017B2")]
	[Address(RVA = "0x9D9AC4", Offset = "0x9D9AC4", VA = "0x9D9AC4")]
	public void SetIngredientsAccordingToEnvironment()
	{
	}

	[Token(Token = "0x60017B3")]
	[Address(RVA = "0x9DAC54", Offset = "0x9DAC54", VA = "0x9DAC54")]
	public static IngredientType[][] GetIngredientsForEnvironment(CupData.Environment environment)
	{
		return null;
	}

	[Token(Token = "0x60017B4")]
	[Address(RVA = "0x9DAAC8", Offset = "0x9DAAC8", VA = "0x9DAAC8")]
	public void SwitchIngredientsInFridge(IngredientType[] ingredients, bool instantSwitch)
	{
	}

	[Token(Token = "0x60017B5")]
	[Address(RVA = "0x9DAE0C", Offset = "0x9DAE0C", VA = "0x9DAE0C")]
	public IngredientType[] GetCurrentIngredients()
	{
		return null;
	}

	[Token(Token = "0x60017B6")]
	[Address(RVA = "0x9DAE80", Offset = "0x9DAE80", VA = "0x9DAE80")]
	public Vector3 GetIngredientPositionAndHide(IngredientType type)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60017B7")]
	[Address(RVA = "0x9DB0E8", Offset = "0x9DB0E8", VA = "0x9DB0E8")]
	public void UpdateFridgePlayerIconVisibility(bool workSpaceMenuShowing)
	{
	}

	[Token(Token = "0x60017B8")]
	[Address(RVA = "0x9DB26C", Offset = "0x9DB26C", VA = "0x9DB26C")]
	public void CycleFullSetIngredients(int indexOffset)
	{
	}

	[Token(Token = "0x60017B9")]
	[Address(RVA = "0x9DB428", Offset = "0x9DB428", VA = "0x9DB428")]
	private void OnRoundStart()
	{
	}

	[Token(Token = "0x60017BA")]
	[Address(RVA = "0x9DB6A4", Offset = "0x9DB6A4", VA = "0x9DB6A4")]
	private void OnRoundStop()
	{
	}

	[Token(Token = "0x60017BB")]
	[Address(RVA = "0x9D9A68", Offset = "0x9D9A68", VA = "0x9D9A68")]
	private void SetCycleIngredientsButtonsActive(bool isActive)
	{
	}

	[Token(Token = "0x60017BC")]
	[Address(RVA = "0x9DB8AC", Offset = "0x9DB8AC", VA = "0x9DB8AC")]
	[PunRPC]
	private void SetFridgeTypeRPC(int type)
	{
	}

	[Token(Token = "0x60017BD")]
	[Address(RVA = "0x9DB8B0", Offset = "0x9DB8B0", VA = "0x9DB8B0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60017BE")]
	[Address(RVA = "0x9DBA78", Offset = "0x9DBA78", VA = "0x9DBA78", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60017BF")]
	[Address(RVA = "0x9DBDB8", Offset = "0x9DBDB8", VA = "0x9DBDB8")]
	public Fridge()
	{
	}
}
[Serializable]
[Token(Token = "0x2000362")]
[CreateAssetMenu(fileName = "NewFridgeData", menuName = "Fridge Data/Fridge Data")]
public class FridgeData : RewardItem
{
	[Token(Token = "0x40019EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int textureIndex;

	[Token(Token = "0x60017C3")]
	[Address(RVA = "0x9DC880", Offset = "0x9DC880", VA = "0x9DC880")]
	public FridgeData()
	{
	}
}
[Token(Token = "0x2000363")]
public class FridgeIngredient : UnityEngine.MonoBehaviour, ILocallyGrabbable
{
	[Token(Token = "0x40019ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action OnIngredientGrabbed;

	[Token(Token = "0x40019EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public IngredientType ingredientType;

	[Token(Token = "0x40019EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private MeshRenderer ContentSignIcon;

	[Token(Token = "0x40019F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IngredientPrefabRegistry ingredientRegistry;

	[Token(Token = "0x40019F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Collider trigger;

	[Token(Token = "0x40019F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject rawIngredientVisuals;

	[Token(Token = "0x40019F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform visualsParent;

	[Token(Token = "0x40019F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MaterialPropertyBlock matPropBlock;

	[Token(Token = "0x40019F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private EnvironmentLoader EnvironmentLoader;

	[Token(Token = "0x40019F6")]
	private const string propertyTextureIndex = "_TextureIndex";

	[Token(Token = "0x170002E0")]
	private IngredientPrefabRegistry IngredientRegistry
	{
		[Token(Token = "0x60017C4")]
		[Address(RVA = "0x9DC888", Offset = "0x9DC888", VA = "0x9DC888")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60017C5")]
	[Address(RVA = "0x9DC994", Offset = "0x9DC994", VA = "0x9DC994")]
	private void Awake()
	{
	}

	[Token(Token = "0x60017C6")]
	[Address(RVA = "0x9DCA58", Offset = "0x9DCA58", VA = "0x9DCA58")]
	private void Start()
	{
	}

	[Token(Token = "0x60017C7")]
	[Address(RVA = "0x9DA83C", Offset = "0x9DA83C", VA = "0x9DA83C")]
	public void SetNewIngredientType(IngredientType ingredientType)
	{
	}

	[Token(Token = "0x60017C8")]
	[Address(RVA = "0x9DCB20", Offset = "0x9DCB20", VA = "0x9DCB20")]
	public void UpdateIngredientTransform()
	{
	}

	[Token(Token = "0x60017C9")]
	[Address(RVA = "0x9DAA2C", Offset = "0x9DAA2C", VA = "0x9DAA2C")]
	public void SetInteractable(bool interactable)
	{
	}

	[Token(Token = "0x60017CA")]
	[Address(RVA = "0x9DCC7C", Offset = "0x9DCC7C", VA = "0x9DCC7C", Slot = "4")]
	public void OnLocalGrab(CookoutAvatarHand grabbedBy, Transform handAnchor)
	{
	}

	[Token(Token = "0x60017CB")]
	[Address(RVA = "0x9DCE70", Offset = "0x9DCE70", VA = "0x9DCE70")]
	public FridgeIngredient()
	{
	}
}
[Token(Token = "0x2000364")]
[CreateAssetMenu(fileName = "NewFridgeList", menuName = "Fridge Data/Fridge List")]
public class FridgeList : ScriptableObject
{
	[Token(Token = "0x40019F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<FridgeData> fridgeDataList;

	[Token(Token = "0x60017CC")]
	[Address(RVA = "0x9DCE78", Offset = "0x9DCE78", VA = "0x9DCE78")]
	public FridgeList()
	{
	}
}
[Token(Token = "0x2000365")]
public class WorkspaceRegistry : SingleInstanceBehavior<WorkspaceRegistry>
{
	[Token(Token = "0x40019F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CuttingBoard[] cuttingBoardsInScene;

	[Token(Token = "0x40019FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Fridge[] fridgesInScene;

	[Token(Token = "0x170002E1")]
	public CuttingBoard[] CuttingBoards
	{
		[Token(Token = "0x60017CD")]
		[Address(RVA = "0x9DCE80", Offset = "0x9DCE80", VA = "0x9DCE80")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60017CE")]
		[Address(RVA = "0x9DCE88", Offset = "0x9DCE88", VA = "0x9DCE88")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170002E2")]
	public Fridge[] Fridges
	{
		[Token(Token = "0x60017CF")]
		[Address(RVA = "0x9DCE90", Offset = "0x9DCE90", VA = "0x9DCE90")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60017D0")]
		[Address(RVA = "0x9DCE98", Offset = "0x9DCE98", VA = "0x9DCE98")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60017D1")]
	[Address(RVA = "0x9DCEA0", Offset = "0x9DCEA0", VA = "0x9DCEA0", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60017D2")]
	[Address(RVA = "0x9DCEFC", Offset = "0x9DCEFC", VA = "0x9DCEFC")]
	public WorkspaceRegistry()
	{
	}
}
[Token(Token = "0x2000366")]
public class FryingArea : NetworkedBehaviour, IPunObservable, IConsumableTarget
{
	[Token(Token = "0x2000367")]
	private enum GrillState
	{
		[Token(Token = "0x4001A20")]
		Off,
		[Token(Token = "0x4001A21")]
		On,
		[Token(Token = "0x4001A22")]
		PoweredUp
	}

	[Token(Token = "0x2000368")]
	private struct IngredientInRange
	{
		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Grillable grillable;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int intersectingColliderCount;

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0x9DE3DC", Offset = "0x9DE3DC", VA = "0x9DE3DC")]
		public IngredientInRange(Grillable grillable, int intersectingColliderCount = 1)
		{
		}
	}

	[Token(Token = "0x40019FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isLocked;

	[Token(Token = "0x40019FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float coalsEmissiveRate;

	[Token(Token = "0x40019FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GrillState state;

	[Token(Token = "0x4001A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private UseConsumableHere useConsumableHere;

	[Token(Token = "0x4001A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private PokeButton powerButton;

	[Token(Token = "0x4001A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject lockedMesh;

	[Token(Token = "0x4001A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Grabbable extinguisher;

	[Token(Token = "0x4001A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform poweredUpParticlesAnchor;

	[Token(Token = "0x4001A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Vector3 buttonInactiveOffset;

	[Token(Token = "0x4001A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Animator lockAnimator;

	[Token(Token = "0x4001A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private ParticleSystem unlockParticles;

	[Token(Token = "0x4001A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private float unlockParticlesDelay;

	[Token(Token = "0x4001A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	private float powerUpRate;

	[Token(Token = "0x4001A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float ovenOnTransitionTime;

	[Token(Token = "0x4001A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float ovenOffTransitionTime;

	[Token(Token = "0x4001A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float fryingFactor;

	[Token(Token = "0x4001A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float coalsEmissiveTarget;

	[Token(Token = "0x4001A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float friedStateValue;

	[Token(Token = "0x4001A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<IngredientInRange> fryTargets;

	[Token(Token = "0x4001A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Renderer ovenBodyRenderer;

	[Token(Token = "0x4001A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private SpriteRenderer buttonGlowRenderer;

	[Token(Token = "0x4001A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private CookingRound cookingRound;

	[Token(Token = "0x4001A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private EndlessMode endlessMode;

	[Token(Token = "0x4001A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private MaterialPropertyBlock propertyBlock;

	[Token(Token = "0x4001A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Transform buttonTransform;

	[Token(Token = "0x4001A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Transform buttonBodyTransform;

	[Token(Token = "0x4001A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private GameObject lockGameObject;

	[Token(Token = "0x4001A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private ReturnToOriginIfLost extinguisherReturn;

	[Token(Token = "0x4001A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private GameObject unlockedMesh;

	[Token(Token = "0x4001A1A")]
	private const string propertyEmissive = "_Emissive";

	[Token(Token = "0x4001A1B")]
	private const string tagGrabbable = "Grabbable";

	[Token(Token = "0x4001A1C")]
	private const string nameSlice = "Slice";

	[Token(Token = "0x4001A1D")]
	private const string nameWhole = "Whole";

	[Token(Token = "0x4001A1E")]
	private const string triggerPlay = "play";

	[Token(Token = "0x170002E3")]
	public bool IsLocked
	{
		[Token(Token = "0x60017D3")]
		[Address(RVA = "0x9DCFB8", Offset = "0x9DCFB8", VA = "0x9DCFB8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60017D4")]
		[Address(RVA = "0x9DCFC0", Offset = "0x9DCFC0", VA = "0x9DCFC0")]
		set
		{
		}
	}

	[Token(Token = "0x170002E4")]
	private float CoalsEmissiveRate
	{
		[Token(Token = "0x60017D5")]
		[Address(RVA = "0x9DD2D0", Offset = "0x9DD2D0", VA = "0x9DD2D0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60017D6")]
		[Address(RVA = "0x9DD2D8", Offset = "0x9DD2D8", VA = "0x9DD2D8")]
		set
		{
		}
	}

	[Token(Token = "0x170002E5")]
	private GrillState State
	{
		[Token(Token = "0x60017D7")]
		[Address(RVA = "0x9DD368", Offset = "0x9DD368", VA = "0x9DD368")]
		get
		{
			return default(GrillState);
		}
		[Token(Token = "0x60017D8")]
		[Address(RVA = "0x9DD1AC", Offset = "0x9DD1AC", VA = "0x9DD1AC")]
		set
		{
		}
	}

	[Token(Token = "0x170002E6")]
	private bool IsOn
	{
		[Token(Token = "0x60017D9")]
		[Address(RVA = "0x9DD520", Offset = "0x9DD520", VA = "0x9DD520")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002E7")]
	private bool IsPoweredUp
	{
		[Token(Token = "0x60017DA")]
		[Address(RVA = "0x9DD530", Offset = "0x9DD530", VA = "0x9DD530")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002E8")]
	public UseConsumableHere UseConsumableHere
	{
		[Token(Token = "0x60017DB")]
		[Address(RVA = "0x9DD540", Offset = "0x9DD540", VA = "0x9DD540", Slot = "5")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60017DC")]
		[Address(RVA = "0x9DD548", Offset = "0x9DD548", VA = "0x9DD548", Slot = "6")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170002E9")]
	public bool ReactsToConsumables
	{
		[Token(Token = "0x60017DD")]
		[Address(RVA = "0x9DD550", Offset = "0x9DD550", VA = "0x9DD550", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60017DE")]
	[Address(RVA = "0x9DD560", Offset = "0x9DD560", VA = "0x9DD560")]
	private void Awake()
	{
	}

	[Token(Token = "0x60017DF")]
	[Address(RVA = "0x9DD71C", Offset = "0x9DD71C", VA = "0x9DD71C")]
	private void Start()
	{
	}

	[Token(Token = "0x60017E0")]
	[Address(RVA = "0x9DDB38", Offset = "0x9DDB38", VA = "0x9DDB38")]
	private void Update()
	{
	}

	[Token(Token = "0x60017E1")]
	[Address(RVA = "0x9DD370", Offset = "0x9DD370", VA = "0x9DD370")]
	private void OnGrillStateChanged(GrillState oldState, GrillState newState)
	{
	}

	[Token(Token = "0x60017E2")]
	[Address(RVA = "0x9DDCB4", Offset = "0x9DDCB4", VA = "0x9DDCB4")]
	[PunRPC]
	private void TurnOvenOnOffRPC(bool newIsOn)
	{
	}

	[Token(Token = "0x60017E3")]
	[Address(RVA = "0x9DDCDC", Offset = "0x9DDCDC", VA = "0x9DDCDC")]
	[PunRPC]
	private void OvenButtonTooHotFeedbackRPC()
	{
	}

	[Token(Token = "0x60017E4")]
	[Address(RVA = "0x9DDDC4", Offset = "0x9DDDC4", VA = "0x9DDDC4")]
	private void ApplyCreativeModePoweredUp()
	{
	}

	[Token(Token = "0x60017E5")]
	[Address(RVA = "0x9DDF5C", Offset = "0x9DDF5C", VA = "0x9DDF5C")]
	private void OnRoundStartOrEnd()
	{
	}

	[Token(Token = "0x60017E6")]
	[Address(RVA = "0x9DDF74", Offset = "0x9DDF74", VA = "0x9DDF74")]
	private void OnEndlessModeBreak()
	{
	}

	[Token(Token = "0x60017E7")]
	[Address(RVA = "0x9DDF98", Offset = "0x9DDF98", VA = "0x9DDF98")]
	public void TryRemoveIngredient(Grillable grillable)
	{
	}

	[Token(Token = "0x60017E8")]
	[Address(RVA = "0x9DE0F8", Offset = "0x9DE0F8", VA = "0x9DE0F8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60017E9")]
	[Address(RVA = "0x9DE3E8", Offset = "0x9DE3E8", VA = "0x9DE3E8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60017EA")]
	[Address(RVA = "0x9DE680", Offset = "0x9DE680", VA = "0x9DE680")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60017EB")]
	[Address(RVA = "0x9DD1CC", Offset = "0x9DD1CC", VA = "0x9DD1CC")]
	private void OnUnlockedGrill()
	{
	}

	[Token(Token = "0x60017EC")]
	[Address(RVA = "0x9DE840", Offset = "0x9DE840", VA = "0x9DE840")]
	[PunRPC]
	private void ActivateOvenPowerUpRPC()
	{
	}

	[Token(Token = "0x60017ED")]
	[Address(RVA = "0x9DE868", Offset = "0x9DE868", VA = "0x9DE868", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60017EE")]
	[Address(RVA = "0x9DEA18", Offset = "0x9DEA18", VA = "0x9DEA18")]
	public FryingArea()
	{
	}
}
[Token(Token = "0x2000369")]
public class PlayerLoadout : SingleInstanceBehavior<PlayerLoadout>
{
	[Token(Token = "0x4001A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CleaverVisuals[] cleavers;

	[Token(Token = "0x4001A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private CuttingBoard[] cuttingBoards;

	[Token(Token = "0x4001A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Fridge[] fridges;

	[Token(Token = "0x4001A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CookingNetworkManager networkManager;

	[Token(Token = "0x4001A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SaveManager saveManager;

	[Token(Token = "0x4001A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int lastPlayerPositionIndex;

	[Token(Token = "0x60017F2")]
	[Address(RVA = "0x9DECD8", Offset = "0x9DECD8", VA = "0x9DECD8")]
	private void Start()
	{
	}

	[Token(Token = "0x60017F3")]
	[Address(RVA = "0x9DEED4", Offset = "0x9DEED4", VA = "0x9DEED4")]
	public void EquipReward(ItemRewardID type)
	{
	}

	[Token(Token = "0x60017F4")]
	[Address(RVA = "0x9DF438", Offset = "0x9DF438", VA = "0x9DF438")]
	private void OnNewWorkspace(int index)
	{
	}

	[Token(Token = "0x60017F5")]
	[Address(RVA = "0x9DF904", Offset = "0x9DF904", VA = "0x9DF904", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x60017F6")]
	[Address(RVA = "0x9DFA04", Offset = "0x9DFA04", VA = "0x9DFA04")]
	public PlayerLoadout()
	{
	}
}
[Token(Token = "0x200036A")]
public class ShowPlayerColor : NetworkedBehaviour
{
	[Token(Token = "0x4001A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int playerSlot;

	[Token(Token = "0x4001A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool hideDuringRound;

	[Token(Token = "0x4001A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MaterialPropertyBlock propertyBlock;

	[Token(Token = "0x4001A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshRenderer colorRenderer;

	[Token(Token = "0x4001A2F")]
	private const string propertyTextureIndex = "_TextureIndex";

	[Token(Token = "0x4001A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CookingRound cookingRound;

	[Token(Token = "0x60017F7")]
	[Address(RVA = "0x9DFAF4", Offset = "0x9DFAF4", VA = "0x9DFAF4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60017F8")]
	[Address(RVA = "0x9DFB78", Offset = "0x9DFB78", VA = "0x9DFB78")]
	private void Start()
	{
	}

	[Token(Token = "0x60017F9")]
	[Address(RVA = "0x9DFE5C", Offset = "0x9DFE5C", VA = "0x9DFE5C")]
	private void UpdateVisibility()
	{
	}

	[Token(Token = "0x60017FA")]
	[Address(RVA = "0x9DFDD8", Offset = "0x9DFDD8", VA = "0x9DFDD8")]
	private void UpdateColor(int playerSlotIndex)
	{
	}

	[Token(Token = "0x60017FB")]
	[Address(RVA = "0x9DFF5C", Offset = "0x9DFF5C", VA = "0x9DFF5C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60017FC")]
	[Address(RVA = "0x9E0178", Offset = "0x9E0178", VA = "0x9E0178")]
	public ShowPlayerColor()
	{
	}
}
[Token(Token = "0x200036B")]
public class Sink : NetworkedBehaviour, IPunObservable, IConsumableTarget
{
	[Token(Token = "0x4001A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isPoweredUp;

	[Token(Token = "0x4001A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool isLocked;

	[Token(Token = "0x4001A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UseConsumableHere useConsumableHere;

	[Token(Token = "0x4001A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Animator lockAnimator;

	[Token(Token = "0x4001A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ParticleSystem unlockParticles;

	[Token(Token = "0x4001A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float unlockParticlesDelay;

	[Token(Token = "0x4001A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Collider trigger;

	[Token(Token = "0x4001A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private ParticleSystem poweredUpParticles;

	[Token(Token = "0x4001A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private MeshRenderer poweredUpMesh;

	[Token(Token = "0x4001A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Material regularWaterMaterial;

	[Token(Token = "0x4001A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Material poweredUpWaterMaterial;

	[Token(Token = "0x4001A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private MeshRenderer waterRenderer;

	[Token(Token = "0x4001A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private ParticleSystemRenderer[] bubbleParticles;

	[Token(Token = "0x4001A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Grabbable brush;

	[Token(Token = "0x4001A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject lid;

	[Token(Token = "0x4001A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject water;

	[Token(Token = "0x4001A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private ReturnToOriginIfLost brushReturn;

	[Token(Token = "0x4001A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private CookingGameState gameState;

	[Token(Token = "0x4001A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private EndlessMode endlessMode;

	[Token(Token = "0x4001A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private GameObject lockGameObject;

	[Token(Token = "0x170002EA")]
	public bool IsPoweredUp
	{
		[Token(Token = "0x60017FD")]
		[Address(RVA = "0x9E0188", Offset = "0x9E0188", VA = "0x9E0188")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60017FE")]
		[Address(RVA = "0x9E0190", Offset = "0x9E0190", VA = "0x9E0190")]
		set
		{
		}
	}

	[Token(Token = "0x170002EB")]
	public bool IsLocked
	{
		[Token(Token = "0x60017FF")]
		[Address(RVA = "0x9E029C", Offset = "0x9E029C", VA = "0x9E029C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001800")]
		[Address(RVA = "0x9E02A4", Offset = "0x9E02A4", VA = "0x9E02A4")]
		set
		{
		}
	}

	[Token(Token = "0x170002EC")]
	public UseConsumableHere UseConsumableHere
	{
		[Token(Token = "0x6001801")]
		[Address(RVA = "0x9E05E4", Offset = "0x9E05E4", VA = "0x9E05E4", Slot = "5")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6001802")]
		[Address(RVA = "0x9E05EC", Offset = "0x9E05EC", VA = "0x9E05EC", Slot = "6")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170002ED")]
	public bool ReactsToConsumables
	{
		[Token(Token = "0x6001803")]
		[Address(RVA = "0x9E05F4", Offset = "0x9E05F4", VA = "0x9E05F4", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001804")]
	[Address(RVA = "0x9E0604", Offset = "0x9E0604", VA = "0x9E0604")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001805")]
	[Address(RVA = "0x9E069C", Offset = "0x9E069C", VA = "0x9E069C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001806")]
	[Address(RVA = "0x9E08F8", Offset = "0x9E08F8", VA = "0x9E08F8")]
	private void OnGameStateChanged(GameState oldState, GameState newState)
	{
	}

	[Token(Token = "0x6001807")]
	[Address(RVA = "0x9E0928", Offset = "0x9E0928", VA = "0x9E0928")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001808")]
	[Address(RVA = "0x9E0A90", Offset = "0x9E0A90", VA = "0x9E0A90")]
	private void EndSinkPowerUp()
	{
	}

	[Token(Token = "0x6001809")]
	[Address(RVA = "0x9E04E0", Offset = "0x9E04E0", VA = "0x9E04E0")]
	private void OnUnlockedSink()
	{
	}

	[Token(Token = "0x600180A")]
	[Address(RVA = "0x9E0A98", Offset = "0x9E0A98", VA = "0x9E0A98")]
	[PunRPC]
	private void ActivateSinkPowerUpRPC(bool isPoweredUp)
	{
	}

	[Token(Token = "0x600180B")]
	[Address(RVA = "0x9E0AAC", Offset = "0x9E0AAC", VA = "0x9E0AAC", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600180C")]
	[Address(RVA = "0x9E0BD0", Offset = "0x9E0BD0", VA = "0x9E0BD0")]
	public Sink()
	{
	}
}
[Token(Token = "0x200036C")]
public class SnapToHanger : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform myHanger;

	[Token(Token = "0x4001A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ReturnToOriginIfLost returnToOrigin;

	[Token(Token = "0x4001A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Grabbable grabbable;

	[Token(Token = "0x4001A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody rigidBody;

	[Token(Token = "0x4001A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool inTrigger;

	[Token(Token = "0x170002EE")]
	public bool IsAttached
	{
		[Token(Token = "0x600180E")]
		[Address(RVA = "0x9E0C4C", Offset = "0x9E0C4C", VA = "0x9E0C4C")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600180F")]
		[Address(RVA = "0x9E0C54", Offset = "0x9E0C54", VA = "0x9E0C54")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6001810")]
	[Address(RVA = "0x9E0C60", Offset = "0x9E0C60", VA = "0x9E0C60")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001811")]
	[Address(RVA = "0x9E0DC0", Offset = "0x9E0DC0", VA = "0x9E0DC0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001812")]
	[Address(RVA = "0x9E0E50", Offset = "0x9E0E50", VA = "0x9E0E50")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6001813")]
	[Address(RVA = "0x9E0EDC", Offset = "0x9E0EDC", VA = "0x9E0EDC")]
	public void OnGrabBegin()
	{
	}

	[Token(Token = "0x6001814")]
	[Address(RVA = "0x9E0EE4", Offset = "0x9E0EE4", VA = "0x9E0EE4")]
	public void OnGrabEnd()
	{
	}

	[Token(Token = "0x6001815")]
	[Address(RVA = "0x9E0F7C", Offset = "0x9E0F7C", VA = "0x9E0F7C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001816")]
	[Address(RVA = "0x9E10A8", Offset = "0x9E10A8", VA = "0x9E10A8")]
	public SnapToHanger()
	{
	}
}
[Token(Token = "0x200036D")]
public class AssignAnimationClip : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AnimationClip animationClip;

	[Token(Token = "0x4001A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animation anim;

	[Token(Token = "0x6001817")]
	[Address(RVA = "0x9E10B8", Offset = "0x9E10B8", VA = "0x9E10B8")]
	private void playAnimation()
	{
	}

	[Token(Token = "0x6001818")]
	[Address(RVA = "0x9E1134", Offset = "0x9E1134", VA = "0x9E1134")]
	private void Update()
	{
	}

	[Token(Token = "0x6001819")]
	[Address(RVA = "0x9E1160", Offset = "0x9E1160", VA = "0x9E1160")]
	public AssignAnimationClip()
	{
	}
}
[Token(Token = "0x200036E")]
public class AssignMeshRenderer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject _hero;

	[Token(Token = "0x4001A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem _ps;

	[Token(Token = "0x4001A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SkinnedMeshRenderer _heroSkin;

	[Token(Token = "0x600181A")]
	[Address(RVA = "0x9E1168", Offset = "0x9E1168", VA = "0x9E1168")]
	private void Start()
	{
	}

	[Token(Token = "0x600181B")]
	[Address(RVA = "0x9E1268", Offset = "0x9E1268", VA = "0x9E1268")]
	private void Update()
	{
	}

	[Token(Token = "0x600181C")]
	[Address(RVA = "0x9E126C", Offset = "0x9E126C", VA = "0x9E126C")]
	public AssignMeshRenderer()
	{
	}
}
[Token(Token = "0x200036F")]
public class AssignShapePosition : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem ps;

	[Token(Token = "0x4001A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform target;

	[Token(Token = "0x4001A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 source;

	[Token(Token = "0x600181D")]
	[Address(RVA = "0x9E1274", Offset = "0x9E1274", VA = "0x9E1274")]
	private void Awake()
	{
	}

	[Token(Token = "0x600181E")]
	[Address(RVA = "0x9E1300", Offset = "0x9E1300", VA = "0x9E1300")]
	private void Update()
	{
	}

	[Token(Token = "0x600181F")]
	[Address(RVA = "0x9E14D0", Offset = "0x9E14D0", VA = "0x9E14D0")]
	public AssignShapePosition()
	{
	}
}
[Token(Token = "0x2000370")]
public class EmitFromMesh : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem ps;

	[Token(Token = "0x4001A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem.VelocityOverLifetimeModule velocityModule;

	[Token(Token = "0x4001A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem.EmitParams emitParams;

	[Token(Token = "0x4001A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private Transform target;

	[Token(Token = "0x4001A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private float distanceSpeedScale;

	[Token(Token = "0x4001A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[SerializeField]
	private float burstInterval;

	[Token(Token = "0x4001A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float distance;

	[Token(Token = "0x4001A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float burstTimer;

	[Token(Token = "0x6001820")]
	[Address(RVA = "0x9E14D8", Offset = "0x9E14D8", VA = "0x9E14D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001821")]
	[Address(RVA = "0x9E1544", Offset = "0x9E1544", VA = "0x9E1544")]
	private void Update()
	{
	}

	[Token(Token = "0x6001822")]
	[Address(RVA = "0x9E1694", Offset = "0x9E1694", VA = "0x9E1694")]
	private void DoEmit()
	{
	}

	[Token(Token = "0x6001823")]
	[Address(RVA = "0x9E15AC", Offset = "0x9E15AC", VA = "0x9E15AC")]
	private void CheckDistance()
	{
	}

	[Token(Token = "0x6001824")]
	[Address(RVA = "0x9E167C", Offset = "0x9E167C", VA = "0x9E167C")]
	private void SetRadialVelocity()
	{
	}

	[Token(Token = "0x6001825")]
	[Address(RVA = "0x9E1724", Offset = "0x9E1724", VA = "0x9E1724")]
	public void StartEmit()
	{
	}

	[Token(Token = "0x6001826")]
	[Address(RVA = "0x9E1740", Offset = "0x9E1740", VA = "0x9E1740")]
	public void StopEmit()
	{
	}

	[Token(Token = "0x6001827")]
	[Address(RVA = "0x9E1748", Offset = "0x9E1748", VA = "0x9E1748")]
	public EmitFromMesh()
	{
	}
}
[Token(Token = "0x2000371")]
public class EmitFromMeshArray : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem ps;

	[Token(Token = "0x4001A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private MeshRenderer[] emissionMeshes;

	[Token(Token = "0x6001828")]
	[Address(RVA = "0x9E1750", Offset = "0x9E1750", VA = "0x9E1750")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001829")]
	[Address(RVA = "0x9E17DC", Offset = "0x9E17DC", VA = "0x9E17DC")]
	private void Update()
	{
	}

	[Token(Token = "0x600182A")]
	[Address(RVA = "0x9E17E0", Offset = "0x9E17E0", VA = "0x9E17E0")]
	private void DoEmit()
	{
	}

	[Token(Token = "0x600182B")]
	[Address(RVA = "0x9E188C", Offset = "0x9E188C", VA = "0x9E188C")]
	public EmitFromMeshArray()
	{
	}
}
[Token(Token = "0x2000372")]
public class LookAtObject : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform target;

	[Token(Token = "0x600182C")]
	[Address(RVA = "0x9E1894", Offset = "0x9E1894", VA = "0x9E1894")]
	private void Update()
	{
	}

	[Token(Token = "0x600182D")]
	[Address(RVA = "0x9E18BC", Offset = "0x9E18BC", VA = "0x9E18BC")]
	public LookAtObject()
	{
	}
}
[Token(Token = "0x2000373")]
public class SetRotation : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x600182E")]
	[Address(RVA = "0x9E18C4", Offset = "0x9E18C4", VA = "0x9E18C4")]
	private void Start()
	{
	}

	[Token(Token = "0x600182F")]
	[Address(RVA = "0x9E1928", Offset = "0x9E1928", VA = "0x9E1928")]
	public SetRotation()
	{
	}
}
[Token(Token = "0x2000374")]
public abstract class RGVersion
{
	[Token(Token = "0x4001A5F")]
	public const string VERSION = "1.14.220773";

	[Token(Token = "0x6001830")]
	[Address(RVA = "0x9E1930", Offset = "0x9E1930", VA = "0x9E1930")]
	protected RGVersion()
	{
	}
}
namespace UnityEngine.UI
{
	[Token(Token = "0x2000375")]
	public class LetterSpacing : BaseMeshEffect
	{
		[Token(Token = "0x4001A60")]
		private const string SupportedTagRegexPattersn = "<b>|</b>|<i>|</i>|<size=.*?>|</size>|<color=.*?>|</color>|<material=.*?>|</material>";

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool useRichText;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_spacing;

		[Token(Token = "0x170002EF")]
		public float spacing
		{
			[Token(Token = "0x6001832")]
			[Address(RVA = "0x9E1940", Offset = "0x9E1940", VA = "0x9E1940")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001833")]
			[Address(RVA = "0x9E1948", Offset = "0x9E1948", VA = "0x9E1948")]
			set
			{
			}
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0x9E1938", Offset = "0x9E1938", VA = "0x9E1938")]
		protected LetterSpacing()
		{
		}

		[Token(Token = "0x6001834")]
		[Address(RVA = "0x9E1A0C", Offset = "0x9E1A0C", VA = "0x9E1A0C", Slot = "20")]
		public override void ModifyMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6001835")]
		[Address(RVA = "0x9E1AD8", Offset = "0x9E1AD8", VA = "0x9E1AD8")]
		public void ModifyVertices(List<UIVertex> verts)
		{
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0x9E258C", Offset = "0x9E258C", VA = "0x9E258C")]
		private IEnumerator GetRegexMatchedTagCollection(string line, out int lineLengthWithoutTags)
		{
			return null;
		}
	}
}
namespace cookout.loadsave
{
	[Token(Token = "0x2000376")]
	public interface ISaveGameData
	{
	}
	[Token(Token = "0x2000377")]
	public sealed class LoadSaveGameDataBinder : SerializationBinder
	{
		[Token(Token = "0x6001837")]
		[Address(RVA = "0x9E28F8", Offset = "0x9E28F8", VA = "0x9E28F8", Slot = "5")]
		public override Type BindToType(string assemblyName, string typeName)
		{
			return null;
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0x9E2A30", Offset = "0x9E2A30", VA = "0x9E2A30")]
		public LoadSaveGameDataBinder()
		{
		}
	}
	[Token(Token = "0x2000378")]
	public sealed class SaveGameDataPatcher
	{
		[Token(Token = "0x6001839")]
		[Address(RVA = "0x9E2A38", Offset = "0x9E2A38", VA = "0x9E2A38")]
		public bool Patch(ISaveGameData savegame, out ISaveGameData savegamePatched)
		{
			return default(bool);
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0x9E2D08", Offset = "0x9E2D08", VA = "0x9E2D08")]
		private cookout.loadsave.v2.SaveGameData PatchInternal(cookout.loadsave.v1.SaveGameData savegame)
		{
			return null;
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0x9E30D8", Offset = "0x9E30D8", VA = "0x9E30D8")]
		private cookout.loadsave.v3.SaveGameData PatchInternal(cookout.loadsave.v2.SaveGameData savegame)
		{
			return null;
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0x9E34AC", Offset = "0x9E34AC", VA = "0x9E34AC")]
		private cookout.loadsave.v4.SaveGameData PatchInternal(cookout.loadsave.v3.SaveGameData savegame)
		{
			return null;
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0x9E3834", Offset = "0x9E3834", VA = "0x9E3834")]
		public SaveGameDataPatcher()
		{
		}
	}
}
namespace cookout.loadsave.v4
{
	[Serializable]
	[Token(Token = "0x200037A")]
	public class SaveGameData : ISaveGameData
	{
		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MapProgression.Rank[] cupRanks;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] cupStars;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool[] cupMaxRankedInMP;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int[] consumableCount;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool[] consumablesUnlocked;

		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int coins;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int accumulatedCoins;

		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int endlessModeHighScore;

		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<int> items;

		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ItemRewardID currentCleaver;

		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public ItemRewardID currentCuttingBoard;

		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ItemRewardID currentFridge;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int[] storedLoadoutSlots;

		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<CookoutUserId> blockedPlayers;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool isLeftHanded;

		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool autoHoldActive;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		public bool retriedALevel;

		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<string> recipesUnlocked;

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<CustomerType> creativeModeCustomersUnlocked;

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool hasSwitchedCreativeModeIngredients;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public int serveCountCreativeMode;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool hasTriedCreativeMode;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public List<string> blockedPlayerNames;

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public int oculusAvatarVisualType;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public CookoutAvatarVisualType cookoutAvatarVisualType;

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
		public AvatarType avatarType;

		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA6")]
		public AvatarHatType cookoutAvatarHatType;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA7")]
		public AvatarBodyType cookoutAvatarBodyType;

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public int cookoutAvatarHeadMaterialIndex;

		[Token(Token = "0x4001A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public AvatarHandMaterial cookoutAvatarHandMaterial;

		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public List<AvatarHatType> unlockedHats;

		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public List<HeadUnlockData> unlockedHeads;

		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public List<AvatarBodyType> unlockedBodies;

		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public List<AvatarHandMaterial> unlockedHandMaterials;

		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public List<AvatarHatType> boughtHats;

		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public List<HeadUnlockData> boughtHeads;

		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public List<AvatarBodyType> boughtBodies;

		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public List<AvatarHandMaterial> boughtHandMaterials;

		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public bool[] unlockedAchievements;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public int rabbitsServed;

		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public int stolenIngredients;

		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public int dishesWashed;

		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public int grilledIngredients;

		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public int botOvercharged;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public int burntIngredients;

		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public int coinsSpent;

		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public int customersServed;

		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public List<AvatarHatType> newHatsAvailable;

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public List<HeadUnlockData> newHeadsAvailable;

		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public List<AvatarBodyType> newBodiesAvailable;

		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public List<AvatarHandMaterial> newHandsAvailable;

		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public bool hasTriedOculusAvatar;

		[Token(Token = "0x6001841")]
		[Address(RVA = "0x9E382C", Offset = "0x9E382C", VA = "0x9E382C")]
		public SaveGameData()
		{
		}
	}
}
namespace cookout.loadsave.v3
{
	[Serializable]
	[Token(Token = "0x200037B")]
	public class SaveGameData : ISaveGameData
	{
		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MapProgression.Rank[] cupRanks;

		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] cupStars;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool[] cupMaxRankedInMP;

		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int[] consumableCount;

		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool[] consumablesUnlocked;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int coins;

		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int accumulatedCoins;

		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int endlessModeHighScore;

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<int> items;

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ItemRewardID currentCleaver;

		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public ItemRewardID currentCuttingBoard;

		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ItemRewardID currentFridge;

		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int[] storedLoadoutSlots;

		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<CookoutUserId> blockedPlayers;

		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool isLeftHanded;

		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool autoHoldActive;

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		public bool retriedALevel;

		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<string> recipesUnlocked;

		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<CustomerType> creativeModeCustomersUnlocked;

		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool hasSwitchedCreativeModeIngredients;

		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public int serveCountCreativeMode;

		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool hasTriedCreativeMode;

		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public List<string> blockedPlayerNames;

		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public int oculusAvatarVisualType;

		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public CookoutAvatarVisualType cookoutAvatarVisualType;

		[Token(Token = "0x4001AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
		public AvatarType avatarType;

		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA6")]
		public AvatarHatType cookoutAvatarHatType;

		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA7")]
		public AvatarBodyType cookoutAvatarBodyType;

		[Token(Token = "0x4001AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public int cookoutAvatarHeadMaterialIndex;

		[Token(Token = "0x4001AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public AvatarHandMaterial cookoutAvatarHandMaterial;

		[Token(Token = "0x4001AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public List<AvatarHatType> unlockedHats;

		[Token(Token = "0x4001AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public List<HeadUnlockData> unlockedHeads;

		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public List<AvatarBodyType> unlockedBodies;

		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public List<AvatarHandMaterial> unlockedHandMaterials;

		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public List<AvatarHatType> boughtHats;

		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public List<HeadUnlockData> boughtHeads;

		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public List<AvatarBodyType> boughtBodies;

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public List<AvatarHandMaterial> boughtHandMaterials;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public bool[] unlockedAchievements;

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public int rabbitsServed;

		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public int stolenIngredients;

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public int dishesWashed;

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public int grilledIngredients;

		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public int botOvercharged;

		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public int burntIngredients;

		[Token(Token = "0x4001AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public int coinsSpent;

		[Token(Token = "0x4001AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public int customersServed;

		[Token(Token = "0x6001842")]
		[Address(RVA = "0x9E3824", Offset = "0x9E3824", VA = "0x9E3824")]
		public SaveGameData()
		{
		}
	}
}
namespace cookout.loadsave.v2
{
	[Serializable]
	[Token(Token = "0x200037C")]
	public class SaveGameData : ISaveGameData
	{
		[Token(Token = "0x4001AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MapProgression.Rank[] cupRanks;

		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] cupStars;

		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool[] cupMaxRankedInMP;

		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int[] consumableCount;

		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool[] consumablesUnlocked;

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int coins;

		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int accumulatedCoins;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int endlessModeHighScore;

		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<int> items;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ItemRewardID currentCleaver;

		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public ItemRewardID currentCuttingBoard;

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ItemRewardID currentFridge;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int[] storedLoadoutSlots;

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<CookoutUserId> blockedPlayers;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool isLeftHanded;

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool autoHoldActive;

		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		public bool retriedALevel;

		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<string> recipesUnlocked;

		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<CustomerType> creativeModeCustomersUnlocked;

		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool hasSwitchedCreativeModeIngredients;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public int serveCountCreativeMode;

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool hasTriedCreativeMode;

		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public List<string> blockedPlayerNames;

		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public int oculusAvatarVisualType;

		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public CookoutAvatarVisualType cookoutAvatarVisualType;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
		public AvatarType avatarType;

		[Token(Token = "0x6001843")]
		[Address(RVA = "0x9E381C", Offset = "0x9E381C", VA = "0x9E381C")]
		public SaveGameData()
		{
		}
	}
}
namespace cookout.loadsave.v1
{
	[Serializable]
	[Token(Token = "0x200037D")]
	public class SaveGameData : ISaveGameData
	{
		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MapProgression.Rank[] cupRanks;

		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] cupStars;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool[] cupMaxRankedInMP;

		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int[] consumableCount;

		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool[] consumablesUnlocked;

		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int coins;

		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int accumulatedCoins;

		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int endlessModeHighScore;

		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<int> items;

		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ItemRewardID currentCleaver;

		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public ItemRewardID currentCuttingBoard;

		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ItemRewardID currentFridge;

		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int[] StoredLoadoutSlots;

		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<long> blockedPlayers;

		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool isLeftHanded;

		[Token(Token = "0x4001AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool autoHoldActive;

		[Token(Token = "0x4001AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		public bool retriedALevel;

		[Token(Token = "0x4001AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<string> recipesUnlocked;

		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<CustomerType> creativeModeCustomersUnlocked;

		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool hasSwitchedCreativeModeIngredients;

		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public int serveCountCreativeMode;

		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool hasTriedCreativeMode;

		[Token(Token = "0x6001844")]
		[Address(RVA = "0x9E38C0", Offset = "0x9E38C0", VA = "0x9E38C0")]
		public SaveGameData()
		{
		}
	}
}
namespace cookout.matchmaking
{
	[Token(Token = "0x200037E")]
	public sealed class MatchmakingAlgorithm
	{
		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IList<MatchmakingRule> rules;

		[Token(Token = "0x6001845")]
		[Address(RVA = "0x9E38C8", Offset = "0x9E38C8", VA = "0x9E38C8")]
		public MatchmakingAlgorithm(IList<MatchmakingRule> rules)
		{
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0x9E38F0", Offset = "0x9E38F0", VA = "0x9E38F0")]
		public IList<MatchmakingTicket> Calculate(MatchmakingTicket playerTicket, IList<MatchmakingTicket> roomTicketCandidates)
		{
			return null;
		}
	}
	[Token(Token = "0x200037F")]
	public sealed class MatchmakingConfig
	{
		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int versionMajor;

		[Token(Token = "0x4001AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int versionMinor;

		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int roomVisitCooldownSeconds;

		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int ruleWeightRoomIntent;

		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int ruleWeightPlayerProgression;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int ruleWeightPlayerCount;

		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int ruleWeightFriends;

		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RoomIntent[] roomIntentOrder;

		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int[] roomIntentDistance;

		[Token(Token = "0x6001847")]
		[Address(RVA = "0x9E3DB0", Offset = "0x9E3DB0", VA = "0x9E3DB0")]
		public MatchmakingConfig()
		{
		}
	}
	[Token(Token = "0x2000380")]
	public abstract class MatchmakingRule
	{
		[Token(Token = "0x6001848")]
		public abstract bool IsValid(MatchmakingTicket playerTicket, MatchmakingTicket roomTicket);

		[Token(Token = "0x6001849")]
		public abstract int CalcError(MatchmakingTicket playerTicket, MatchmakingTicket roomTicket);

		[Token(Token = "0x600184A")]
		[Address(RVA = "0x9E3DB8", Offset = "0x9E3DB8", VA = "0x9E3DB8")]
		protected MatchmakingRule()
		{
		}
	}
	[Token(Token = "0x2000381")]
	public sealed class MatchmakingRuleVersion : MatchmakingRule
	{
		[Token(Token = "0x600184B")]
		[Address(RVA = "0x9E3DC0", Offset = "0x9E3DC0", VA = "0x9E3DC0", Slot = "4")]
		public override bool IsValid(MatchmakingTicket playerTicket, MatchmakingTicket roomTicket)
		{
			return default(bool);
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0x9E3E00", Offset = "0x9E3E00", VA = "0x9E3E00", Slot = "5")]
		public override int CalcError(MatchmakingTicket playerTicket, MatchmakingTicket roomTicket)
		{
			return default(int);
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0x9E3E08", Offset = "0x9E3E08", VA = "0x9E3E08")]
		public MatchmakingRuleVersion()
		{
		}
	}
	[Token(Token = "0x2000382")]
	public sealed class MatchmakingRuleRoomVisibilityPublic : MatchmakingRule
	{
		[Token(Token = "0x600184E")]
		[Address(RVA = "0x9E3E10", Offset = "0x9E3E10", VA = "0x9E3E10", Slot = "4")]
		public override bool IsValid(MatchmakingTicket playerTicket, MatchmakingTicket roomTicket)
		{
			return default(bool);
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0x9E3E30", Offset = "0x9E3E30", VA = "0x9E3E30", Slot = "5")]
		public override int CalcError(MatchmakingTicket playerTicket, MatchmakingTicket roomTicket)
		{
			return default(int);
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0x9E3E38", Offset = "0x9E3E38", VA = "0x9E3E38")]
		public MatchmakingRuleRoomVisibilityPublic()
		{
		}
	}
	[Token(Token = "0x2000383")]
	public sealed class MatchmakingRuleRoomVisibilityFriends : MatchmakingRule
	{
		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IReadOnlyList<CookoutUserId> userIdFriends;

		[Token(Token = "0x6001851")]
		[Address(RVA = "0x9E3E40", Offset = "0x9E3E40", VA = "0x9E3E40")]
		public MatchmakingRuleRoomVisibilityFriends(IReadOnlyList<CookoutUserId> userIdFriends)
		{
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0x9E3E68", Offset = "0x9E3E68", VA = "0x9E3E68", Slot = "4")]
		public override bool IsValid(MatchmakingTicket playerTicket, MatchmakingTicket roomTicket)
		{
			return default(bool);
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0x9E3F30", Offset = "0x9E3F30", VA = "0x9E3F30", Slot = "5")]
		public override int CalcError(MatchmakingTicket playerTicket, MatchmakingTicket roomTicket)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000384")]
	public sealed class MatchmakingRuleRoomPublicOrFriends : MatchmakingRule
	{
		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IReadOnlyList<CookoutUserId> userIdFriends;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly int weight;

		[Token(Token = "0x6001855")]
		[Address(RVA = "0x9E3F98", Offset = "0x9E3F98", VA = "0x9E3F98")]
		public MatchmakingRuleRoomPublicOrFriends(IReadOnlyList<CookoutUserId> userIdFriends, int weight)
		{
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0x9E3FC8", Offset = "0x9E3FC8", VA = "0x9E3FC8", Slot = "4")]
		public override bool IsValid(MatchmakingTicket playerTicket, MatchmakingTicket roomTicket)
		{
			return default(bool);
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0x9E40A0", Offset = "0x9E40A0", VA = "0x9E40A0", Slot = "5")]
		public override int CalcError(MatchmakingTicket playerTicket, MatchmakingTicket roomTicket)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000385")]
	public sealed class MatchmakingRuleBlockList : MatchmakingRule
	{
		[Token(Token = "0x600185A")]
		[Address(RVA = "0x9E4220", Offset = "0x9E4220", VA = "0x9E4220", Slot = "4")]
		public override bool IsValid(MatchmakingTicket playerTicket, MatchmakingTicket roomTicket)
		{
			return default(bool);
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0x9E435C", Offset = "0x9E435C", VA = "0x9E435C", Slot = "5")]
		public override int CalcError(MatchmakingTicket playerTicket, MatchmakingTicket roomTicket)
		{
			return default(int);
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0x9E4364", Offset = "0x9E4364", VA = "0x9E4364")]
		public MatchmakingRuleBlockList()
		{
		}
	}
	[Token(Token = "0x2000387")]
	public sealed class MatchmakingRuleRoomOwnerIsSet : MatchmakingRule
	{
		[Token(Token = "0x600185F")]
		[Address(RVA = "0x9E43D8", Offset = "0x9E43D8", VA = "0x9E43D8", Slot = "4")]
		public override bool IsValid(MatchmakingTicket playerTicket, MatchmakingTicket roomTicket)
		{
			return default(bool);
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0x9E43F8", Offset = "0x9E43F8", VA = "0x9E43F8", Slot = "5")]
		public override int CalcError(MatchmakingTicket playerTicket, MatchmakingTicket roomTicket)
		{
			return default(int);
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0x9E4400", Offset = "0x9E4400", VA = "0x9E4400")]
		public MatchmakingRuleRoomOwnerIsSet()
		{
		}
	}
	[Token(Token = "0x2000388")]
	public sealed class MatchmakingRuleRoomVisitCooldown : MatchmakingRule
	{
		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IReadOnlyList<string> visitRoomCode;

		[Token(Token = "0x6001862")]
		[Address(RVA = "0x9E4408", Offset = "0x9E4408", VA = "0x9E4408")]
		public MatchmakingRuleRoomVisitCooldown(IReadOnlyList<string> visitRoomCode)
		{
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0x9E4430", Offset = "0x9E4430", VA = "0x9E4430", Slot = "4")]
		public override bool IsValid(MatchmakingTicket playerTicket, MatchmakingTicket roomTicket)
		{
			return default(bool);
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0x9E4494", Offset = "0x9E4494", VA = "0x9E4494", Slot = "5")]
		public override int CalcError(MatchmakingTicket playerTicket, MatchmakingTicket roomTicket)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000389")]
	public sealed class MatchmakingRuleRoomIntentSoft : MatchmakingRule
	{
		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly int weight;

		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly RoomIntent[] roomIntentOrder;

		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly int[] roomIntentDistance;

		[Token(Token = "0x6001865")]
		[Address(RVA = "0x9E449C", Offset = "0x9E449C", VA = "0x9E449C")]
		public MatchmakingRuleRoomIntentSoft(int weight, RoomIntent[] roomIntentOrder, int[] roomIntentDistance)
		{
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0x9E44D8", Offset = "0x9E44D8", VA = "0x9E44D8", Slot = "4")]
		public override bool IsValid(MatchmakingTicket playerTicket, MatchmakingTicket roomTicket)
		{
			return default(bool);
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0x9E44E0", Offset = "0x9E44E0", VA = "0x9E44E0", Slot = "5")]
		public override int CalcError(MatchmakingTicket playerTicket, MatchmakingTicket roomTicket)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200038A")]
	public sealed class MatchmakingRuleRoomIntentHard : MatchmakingRule
	{
		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IReadOnlyList<bool> roomIntent;

		[Token(Token = "0x6001868")]
		[Address(RVA = "0x9E45C8", Offset = "0x9E45C8", VA = "0x9E45C8")]
		public MatchmakingRuleRoomIntentHard(params bool[] roomIntent)
		{
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0x9E45F0", Offset = "0x9E45F0", VA = "0x9E45F0", Slot = "4")]
		public override bool IsValid(MatchmakingTicket playerTicket, MatchmakingTicket roomTicket)
		{
			return default(bool);
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0x9E46A0", Offset = "0x9E46A0", VA = "0x9E46A0", Slot = "5")]
		public override int CalcError(MatchmakingTicket playerTicket, MatchmakingTicket roomTicket)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200038B")]
	public sealed class MatchmakingRulePlayerProgression : MatchmakingRule
	{
		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly int weight;

		[Token(Token = "0x600186B")]
		[Address(RVA = "0x9E46A8", Offset = "0x9E46A8", VA = "0x9E46A8")]
		public MatchmakingRulePlayerProgression(int weight)
		{
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0x9E46D0", Offset = "0x9E46D0", VA = "0x9E46D0", Slot = "4")]
		public override bool IsValid(MatchmakingTicket playerTicket, MatchmakingTicket roomTicket)
		{
			return default(bool);
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0x9E46D8", Offset = "0x9E46D8", VA = "0x9E46D8", Slot = "5")]
		public override int CalcError(MatchmakingTicket playerTicket, MatchmakingTicket roomTicket)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200038C")]
	public sealed class MatchmakingRulePlayerCount : MatchmakingRule
	{
		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly int weight;

		[Token(Token = "0x600186E")]
		[Address(RVA = "0x9E475C", Offset = "0x9E475C", VA = "0x9E475C")]
		public MatchmakingRulePlayerCount(int weight)
		{
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0x9E4784", Offset = "0x9E4784", VA = "0x9E4784", Slot = "4")]
		public override bool IsValid(MatchmakingTicket playerTicket, MatchmakingTicket roomTicket)
		{
			return default(bool);
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0x9E47B8", Offset = "0x9E47B8", VA = "0x9E47B8", Slot = "5")]
		public override int CalcError(MatchmakingTicket playerTicket, MatchmakingTicket roomTicket)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200038D")]
	public sealed class MatchmakingTicket
	{
		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly RoomVersion roomVersion;

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string roomCode;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string roomOwner;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly RoomVisibility roomVisibility;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public readonly RoomIntent roomIntent;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly int roomPlayerProgression;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public readonly int roomSelectedTown;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly int roomPlayerCount;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public readonly int roomPlayerCountMax;

		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly CookoutUserId[] playerIDList;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly CookoutUserId[] blockIDList;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly string[] playerNameList;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public readonly string[] blockNameList;

		[Token(Token = "0x6001871")]
		[Address(RVA = "0x9E47F0", Offset = "0x9E47F0", VA = "0x9E47F0")]
		public MatchmakingTicket(RoomVersion roomVersion, string roomCode, string roomOwner, RoomVisibility roomVisibility, RoomIntent roomIntent, int roomPlayerProgression, int roomPlayerCount, int roomPlayerCountMax, CookoutUserId[] playerIDList, CookoutUserId[] blockIDList, string[] playerNameList, string[] blockNameList, int roomSelectedTown)
		{
		}
	}
}
namespace RGCommon
{
	[Token(Token = "0x200038E")]
	public static class SynthesizedAudio
	{
		[Token(Token = "0x200038F")]
		private abstract class Generator
		{
			[Token(Token = "0x4001B1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly float frequency;

			[Token(Token = "0x4001B1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public readonly float amplitude;

			[Token(Token = "0x4001B1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			protected int position;

			[Token(Token = "0x6001873")]
			[Address(RVA = "0x9E4AB4", Offset = "0x9E4AB4", VA = "0x9E4AB4")]
			public Generator(float frequency, float amplitude)
			{
			}

			[Token(Token = "0x6001874")]
			public abstract void OnAudioRead(float[] data);

			[Token(Token = "0x6001875")]
			[Address(RVA = "0x9E4AE0", Offset = "0x9E4AE0", VA = "0x9E4AE0")]
			public void OnAudioSetPosition(int newPosition)
			{
			}
		}

		[Token(Token = "0x2000390")]
		private class SineGenerator : Generator
		{
			[Token(Token = "0x6001876")]
			[Address(RVA = "0x9E4A88", Offset = "0x9E4A88", VA = "0x9E4A88")]
			public SineGenerator(float frequency, float amplitude)
			{
			}

			[Token(Token = "0x6001877")]
			[Address(RVA = "0x9E4AE8", Offset = "0x9E4AE8", VA = "0x9E4AE8", Slot = "4")]
			public override void OnAudioRead(float[] data)
			{
			}
		}

		[Token(Token = "0x4001B1A")]
		private const int sampleRate = 44100;

		[Token(Token = "0x6001872")]
		[Address(RVA = "0x9E488C", Offset = "0x9E488C", VA = "0x9E488C")]
		public static AudioClip GenerateSineBeep(float frequency, float amplitude, float lengthInSeconds)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000391")]
	public class BuildInformation
	{
		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string platform;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string versionString;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int[] versionArray;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int buildNumber;

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool release;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool debug;

		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string targetDirectory;

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool loaded;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static BuildInformation instance;

		[Token(Token = "0x6001878")]
		[Address(RVA = "0x9E4B74", Offset = "0x9E4B74", VA = "0x9E4B74", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0x9E4B7C", Offset = "0x9E4B7C", VA = "0x9E4B7C")]
		public static BuildInformation GetInstance()
		{
			return null;
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0x9E4DD8", Offset = "0x9E4DD8", VA = "0x9E4DD8")]
		public int GetAndroidVersionCode()
		{
			return default(int);
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0x9E4E30", Offset = "0x9E4E30", VA = "0x9E4E30")]
		public BuildInformation()
		{
		}
	}
	[Token(Token = "0x2000392")]
	public class VersionDisplay : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x600187C")]
		[Address(RVA = "0x9E4E38", Offset = "0x9E4E38", VA = "0x9E4E38")]
		private void Start()
		{
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0x9E5080", Offset = "0x9E5080", VA = "0x9E5080")]
		public VersionDisplay()
		{
		}
	}
	[Token(Token = "0x2000393")]
	public static class VersionInformation
	{
		[Token(Token = "0x170002F0")]
		public static string Version
		{
			[Token(Token = "0x600187E")]
			[Address(RVA = "0x9E5030", Offset = "0x9E5030", VA = "0x9E5030")]
			get
			{
				return null;
			}
		}
	}
	[Token(Token = "0x2000394")]
	public static class BestMatch
	{
		[Token(Token = "0x600187F")]
		public static void UpdateIfGreater<T>(ref T currentBest, ref float bestValue, T candidate, float candidateValue)
		{
		}

		[Token(Token = "0x6001880")]
		public static void UpdateIfLess<T>(ref T currentBest, ref float bestValue, T candidate, float candidateValue)
		{
		}
	}
	[Token(Token = "0x2000395")]
	public static class Collections
	{
		[Token(Token = "0x6001881")]
		public static void Shuffle<T>(T[] values)
		{
		}

		[Token(Token = "0x6001882")]
		public static void Shuffle<T>(List<T> values)
		{
		}
	}
	[Token(Token = "0x2000396")]
	public class CSVTable
	{
		[Token(Token = "0x2000397")]
		public struct Row
		{
			[Token(Token = "0x4001B2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int index;

			[Token(Token = "0x4001B2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private Dictionary<string, int> headerIndexes;

			[Token(Token = "0x4001B2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private string[] columns;

			[Token(Token = "0x170002F3")]
			public int Count
			{
				[Token(Token = "0x600189B")]
				[Address(RVA = "0x9E68F8", Offset = "0x9E68F8", VA = "0x9E68F8")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x600188E")]
			[Address(RVA = "0x9E577C", Offset = "0x9E577C", VA = "0x9E577C")]
			internal Row(int index, Dictionary<string, int> headerIndexes, string[] columns)
			{
			}

			[Token(Token = "0x600188F")]
			[Address(RVA = "0x9E61B4", Offset = "0x9E61B4", VA = "0x9E61B4")]
			private void ValidateHeader(string header)
			{
			}

			[Token(Token = "0x6001890")]
			[Address(RVA = "0x9E63F0", Offset = "0x9E63F0", VA = "0x9E63F0")]
			private void ValidateIndex(int i)
			{
			}

			[Token(Token = "0x6001891")]
			[Address(RVA = "0x9E6628", Offset = "0x9E6628", VA = "0x9E6628")]
			public bool HasValue(int i)
			{
				return default(bool);
			}

			[Token(Token = "0x6001892")]
			[Address(RVA = "0x9E667C", Offset = "0x9E667C", VA = "0x9E667C")]
			public bool NotEmpty(string header)
			{
				return default(bool);
			}

			[Token(Token = "0x6001893")]
			[Address(RVA = "0x9E66EC", Offset = "0x9E66EC", VA = "0x9E66EC")]
			public string GetColumn(int i)
			{
				return null;
			}

			[Token(Token = "0x6001894")]
			[Address(RVA = "0x9E6730", Offset = "0x9E6730", VA = "0x9E6730")]
			public string GetColumn(string header)
			{
				return null;
			}

			[Token(Token = "0x6001895")]
			[Address(RVA = "0x9E67A0", Offset = "0x9E67A0", VA = "0x9E67A0")]
			public int GetColumnInt(string header)
			{
				return default(int);
			}

			[Token(Token = "0x6001896")]
			[Address(RVA = "0x9E67B4", Offset = "0x9E67B4", VA = "0x9E67B4")]
			public int GetColumnInt(int i)
			{
				return default(int);
			}

			[Token(Token = "0x6001897")]
			[Address(RVA = "0x9E67C8", Offset = "0x9E67C8", VA = "0x9E67C8")]
			public float GetColumnFloat(string header)
			{
				return default(float);
			}

			[Token(Token = "0x6001898")]
			[Address(RVA = "0x9E67DC", Offset = "0x9E67DC", VA = "0x9E67DC")]
			public float GetColumnFloat(int i)
			{
				return default(float);
			}

			[Token(Token = "0x6001899")]
			[Address(RVA = "0x9E67F0", Offset = "0x9E67F0", VA = "0x9E67F0")]
			public bool GetColumnBool(string header)
			{
				return default(bool);
			}

			[Token(Token = "0x600189A")]
			[Address(RVA = "0x9E6854", Offset = "0x9E6854", VA = "0x9E6854")]
			public bool GetColumnBool(int i)
			{
				return default(bool);
			}

			[Token(Token = "0x600189C")]
			[Address(RVA = "0x9E6914", Offset = "0x9E6914", VA = "0x9E6914")]
			public int Index()
			{
				return default(int);
			}

			[Token(Token = "0x600189D")]
			[Address(RVA = "0x9E691C", Offset = "0x9E691C", VA = "0x9E691C", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string path;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isLoaded;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Row[] rows;

		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string[] headers;

		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<string, int> headerIndexes;

		[Token(Token = "0x170002F1")]
		public int NumRows
		{
			[Token(Token = "0x6001887")]
			[Address(RVA = "0x9E58F0", Offset = "0x9E58F0", VA = "0x9E58F0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002F2")]
		public int NumColumns
		{
			[Token(Token = "0x6001888")]
			[Address(RVA = "0x9E5910", Offset = "0x9E5910", VA = "0x9E5910")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0x9E5088", Offset = "0x9E5088", VA = "0x9E5088")]
		public void LoadFromResources(string path)
		{
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0x9E5788", Offset = "0x9E5788", VA = "0x9E5788")]
		public string GetHeader(int i)
		{
			return null;
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0x9E5840", Offset = "0x9E5840", VA = "0x9E5840")]
		public int GetHeaderIndex(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0x9E5898", Offset = "0x9E5898", VA = "0x9E5898")]
		public bool HasHeader(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0x9E592C", Offset = "0x9E592C", VA = "0x9E592C")]
		public Row GetRow(int i)
		{
			return default(Row);
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0x9E59F4", Offset = "0x9E59F4", VA = "0x9E59F4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0x9E5B8C", Offset = "0x9E5B8C", VA = "0x9E5B8C")]
		public bool LoadFromFile(string path)
		{
			return default(bool);
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0x9E5C4C", Offset = "0x9E5C4C", VA = "0x9E5C4C")]
		public void Parse(string[] textLines)
		{
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0x9E61AC", Offset = "0x9E61AC", VA = "0x9E61AC")]
		public CSVTable()
		{
		}
	}
	[Token(Token = "0x2000398")]
	public class PerFrameCounter : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x600189E")]
		[Address(RVA = "0x9E6A00", Offset = "0x9E6A00", VA = "0x9E6A00")]
		[Conditional("UNITY_EDITOR")]
		public static void Add(string name, int amount = 1)
		{
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0x9E6A04", Offset = "0x9E6A04", VA = "0x9E6A04")]
		public PerFrameCounter()
		{
		}
	}
	[Token(Token = "0x2000399")]
	public class SpeedControl : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool enableOnDevice;

		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public KeyCode activationKey;

		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float speedFactorWhenActivated;

		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool activated;

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0x9E6A0C", Offset = "0x9E6A0C", VA = "0x9E6A0C")]
		private void Start()
		{
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0x9E6A18", Offset = "0x9E6A18", VA = "0x9E6A18")]
		private void Update()
		{
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0x9E6A60", Offset = "0x9E6A60", VA = "0x9E6A60")]
		public SpeedControl()
		{
		}
	}
	[Token(Token = "0x200039A")]
	public class ToggleActive : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] objects;

		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KeyCode key;

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0x9E6A78", Offset = "0x9E6A78", VA = "0x9E6A78")]
		private void Update()
		{
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0x9E6B04", Offset = "0x9E6B04", VA = "0x9E6B04")]
		public ToggleActive()
		{
		}
	}
	[Token(Token = "0x200039B")]
	public class CameraControl : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x200039C")]
		private struct Pose
		{
			[Token(Token = "0x4001B44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 position;

			[Token(Token = "0x4001B45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Quaternion rotation;

			[Token(Token = "0x60018AD")]
			[Address(RVA = "0x9E79C8", Offset = "0x9E79C8", VA = "0x9E79C8")]
			public Pose(Vector3 position, Quaternion rotation)
			{
			}
		}

		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("The size of one step. (Can be scaled with the shift/ctrl/alt keys.)")]
		public float stepSize;

		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Tooltip("In desktop mode, move smoothly instead of in discrete steps")]
		public bool smoothOnDesktop;

		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("When moving smoothly, move at this speed")]
		public float smoothMovementSpeed;

		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private new Transform transform;

		[Token(Token = "0x4001B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Camera camera;

		[Token(Token = "0x4001B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform cameraTransform;

		[Token(Token = "0x4001B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UnityEngine.XR.InputDevice hmdDevice;

		[Token(Token = "0x4001B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float[] stepSizes;

		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float[] rotationAngles;

		[Token(Token = "0x4001B3E")]
		private const float mouseSpeed = 2f;

		[Token(Token = "0x4001B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool mouseEnabled;

		[Token(Token = "0x4001B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool userIsWearingHeadset;

		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool desktopMode;

		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Pose? poseInDesktopMode;

		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Pose? poseInXRMode;

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0x9E6B14", Offset = "0x9E6B14", VA = "0x9E6B14")]
		public bool IsDesktopMode()
		{
			return default(bool);
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0x9E6B1C", Offset = "0x9E6B1C", VA = "0x9E6B1C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0x9E6BDC", Offset = "0x9E6BDC", VA = "0x9E6BDC")]
		private void Update()
		{
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0x9E74C8", Offset = "0x9E74C8", VA = "0x9E74C8")]
		private bool IsUserPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x60018A9")]
		private T GetKeyAmount<T>(KeyCode key, T value)
		{
			return (T)null;
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0x9E7584", Offset = "0x9E7584", VA = "0x9E7584")]
		private void SetDesktopMode(bool newDesktopMode)
		{
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0x9E7894", Offset = "0x9E7894", VA = "0x9E7894")]
		private void SetTrackingEnabled(bool enable)
		{
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0x9E78F4", Offset = "0x9E78F4", VA = "0x9E78F4")]
		public CameraControl()
		{
		}
	}
	[Token(Token = "0x200039D")]
	public class CaptureCamera : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x200039E")]
		public enum FileFormat
		{
			[Token(Token = "0x4001B4C")]
			PNG,
			[Token(Token = "0x4001B4D")]
			PNGWithAlpha,
			[Token(Token = "0x4001B4E")]
			JPG,
			[Token(Token = "0x4001B4F")]
			EXR
		}

		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Name of input in InputManager that triggers capturing the camera")]
		public string inputName;

		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2Int resolution;

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FileFormat fileFormat;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string[] extensions;

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("Camera to capture. Default is main camera")]
		public Camera cameraToCapture;

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0x9E79DC", Offset = "0x9E79DC", VA = "0x9E79DC")]
		public void Update()
		{
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0x9E7BE4", Offset = "0x9E7BE4", VA = "0x9E7BE4")]
		private void Capture(Camera cam)
		{
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0x9E7FE4", Offset = "0x9E7FE4", VA = "0x9E7FE4")]
		private TextureFormat GetTargetTextureFormat()
		{
			return default(TextureFormat);
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0x9E8008", Offset = "0x9E8008", VA = "0x9E8008")]
		public CaptureCamera()
		{
		}
	}
	[Token(Token = "0x200039F")]
	public class EditorCameraControl : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float mouseSpeed;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxKeyboardRotation;

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KeyCode freezeKey;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float touchRotationSpeed;

		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float keyboardRotationSpeed;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public KeyCode turnLeftKey;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public KeyCode turnRightKey;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public KeyCode lookUpKey;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public KeyCode lookDownKey;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public KeyCode recenterKey;

		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool startMouseEnabled;

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Tooltip("If set, rotate the camera in the opposite direction of this object's orientation to disable head rotation tracking")]
		public Transform vrHead;

		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion startRotation;

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 currentRotation;

		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3? currentPosition;

		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool mouseEnabled;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private XRInputSubsystem XRInputSubsystem;

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0x9E81C8", Offset = "0x9E81C8", VA = "0x9E81C8")]
		private void Start()
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0x9E8260", Offset = "0x9E8260", VA = "0x9E8260")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0x9E82BC", Offset = "0x9E82BC", VA = "0x9E82BC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0x9E82E8", Offset = "0x9E82E8", VA = "0x9E82E8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0x9E8304", Offset = "0x9E8304", VA = "0x9E8304")]
		public void SetPosition(Vector3 localPosition)
		{
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0x9E83DC", Offset = "0x9E83DC", VA = "0x9E83DC")]
		private void Update()
		{
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0x9E8844", Offset = "0x9E8844", VA = "0x9E8844")]
		public EditorCameraControl()
		{
		}
	}
	[Token(Token = "0x20003A0")]
	public class Fader : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float targetAlpha;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float fadeTime;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Shader fadeShader;

		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color color;

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected float currentAlpha;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material fadeMaterial;

		[Token(Token = "0x170002F4")]
		public bool Done
		{
			[Token(Token = "0x60018BC")]
			[Address(RVA = "0x9E889C", Offset = "0x9E889C", VA = "0x9E889C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0x9E8888", Offset = "0x9E8888", VA = "0x9E8888")]
		public void FadeIn()
		{
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0x9E8890", Offset = "0x9E8890", VA = "0x9E8890")]
		public void FadeOut()
		{
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0x9E88B0", Offset = "0x9E88B0", VA = "0x9E88B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0x9E8A7C", Offset = "0x9E8A7C", VA = "0x9E8A7C")]
		private void Start()
		{
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0x9E8A88", Offset = "0x9E8A88", VA = "0x9E8A88")]
		private void Reset()
		{
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0x9E8930", Offset = "0x9E8930", VA = "0x9E8930")]
		private void Setup()
		{
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0x9E8A8C", Offset = "0x9E8A8C", VA = "0x9E8A8C")]
		private void Update()
		{
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0x9E8B18", Offset = "0x9E8B18", VA = "0x9E8B18")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0x9E8BBC", Offset = "0x9E8BBC", VA = "0x9E8BBC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0x9E8C60", Offset = "0x9E8C60", VA = "0x9E8C60")]
		private void SceneWasLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0x9E8C68", Offset = "0x9E8C68", VA = "0x9E8C68")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0x9E8CF8", Offset = "0x9E8CF8", VA = "0x9E8CF8")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0x9E8DD8", Offset = "0x9E8DD8", VA = "0x9E8DD8")]
		public Fader()
		{
		}
	}
	[Token(Token = "0x20003A1")]
	public class FpsDisplay : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float updateInterval;

		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public KeyCode toggleKey;

		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool visible;

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float warningTime;

		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color standardColor;

		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color warningColor;

		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TextMesh textMesh;

		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Renderer rendererComponent;

		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int frameCount;

		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int warningCount;

		[Token(Token = "0x4001B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float elapsed;

		[Token(Token = "0x4001B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float fps;

		[Token(Token = "0x4001B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float msPerFrame;

		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float maxTime;

		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float minTime;

		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string text;

		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float lastUpdate;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float collectionStartTime;

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0x9E8DF4", Offset = "0x9E8DF4", VA = "0x9E8DF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0x9E8E70", Offset = "0x9E8E70", VA = "0x9E8E70")]
		private void Start()
		{
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0x9E8EC4", Offset = "0x9E8EC4", VA = "0x9E8EC4")]
		private void Update()
		{
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0x9E8FF4", Offset = "0x9E8FF4", VA = "0x9E8FF4")]
		public void ToggleVisibility()
		{
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0x9E9040", Offset = "0x9E9040", VA = "0x9E9040")]
		private void UpdateDisplay()
		{
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0x9E9274", Offset = "0x9E9274", VA = "0x9E9274")]
		public FpsDisplay()
		{
		}
	}
	[Token(Token = "0x20003A2")]
	public class Screenshot : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode screenshotKey;

		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int superSize;

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0x9E92B0", Offset = "0x9E92B0", VA = "0x9E92B0")]
		public void Start()
		{
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0x9E9308", Offset = "0x9E9308", VA = "0x9E9308")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0x9E93D4", Offset = "0x9E93D4", VA = "0x9E93D4")]
		public static string ScreenShotName()
		{
			return null;
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0x9E9334", Offset = "0x9E9334", VA = "0x9E9334")]
		public void TakeScreenshot()
		{
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0x9E947C", Offset = "0x9E947C", VA = "0x9E947C")]
		public Screenshot()
		{
		}
	}
	[Token(Token = "0x20003A3")]
	public static class Find
	{
		[Token(Token = "0x60018D3")]
		[Address(RVA = "0x9D6CCC", Offset = "0x9D6CCC", VA = "0x9D6CCC")]
		public static GameObject ChildByName(Component tag, string path)
		{
			return null;
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0x9E95AC", Offset = "0x9E95AC", VA = "0x9E95AC")]
		public static GameObject ChildByName(object tag, GameObject go, string path)
		{
			return null;
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0x9DAA90", Offset = "0x9DAA90", VA = "0x9DAA90")]
		public static Transform ChildTransformByName(Component tag, string path)
		{
			return null;
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0x9E95F4", Offset = "0x9E95F4", VA = "0x9E95F4")]
		public static Transform ChildTransformByName(object tag, Transform go, string path)
		{
			return null;
		}

		[Token(Token = "0x60018D7")]
		public static T ComponentOnGameObject<T>(Component tag) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60018D8")]
		public static T ComponentOnGameObject<T>(GameObject tag) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60018D9")]
		public static T ComponentOnGameObject<T>(object tag, GameObject go) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60018DA")]
		public static T ComponentOrCreate<T>(GameObject gameObject) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60018DB")]
		public static T ComponentOnChild<T>(Component tag, string path) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60018DC")]
		public static T ComponentOnChild<T>(object tag, GameObject go, string path) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60018DD")]
		public static T ComponentInChildren<T>(Component tag) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60018DE")]
		public static T ComponentInChildren<T>(object tag, GameObject go) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60018DF")]
		public static T ComponentOrNull<T>(GameObject container) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60018E0")]
		public static List<T> ComponentsInActiveScene<T>(bool includeInactive) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60018E1")]
		public static List<T> ComponentsInScene<T>(Scene scene, bool includeInactive) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0x9E9490", Offset = "0x9E9490", VA = "0x9E9490")]
		private static Transform InternalFindChildByName(object tag, Transform transform, string path)
		{
			return null;
		}

		[Token(Token = "0x60018E3")]
		private static T InternalFindComponentOnGameObject<T>(object tag, GameObject go) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60018E4")]
		private static T InternalFindComponentOnChild<T>(object tag, GameObject go, string path) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60018E5")]
		private static T InternalFindComponentInChildren<T>(object tag, GameObject go)
		{
			return (T)null;
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0x9E95F8", Offset = "0x9E95F8", VA = "0x9E95F8")]
		private static string FormatError(string template, object tag, GameObject go, string path, Type t, string reason)
		{
			return null;
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0x9E9638", Offset = "0x9E9638", VA = "0x9E9638")]
		private static string FormatTag(object theTag)
		{
			return null;
		}
	}
	[Token(Token = "0x20003A4")]
	public static class ComponentValidation
	{
		[Token(Token = "0x60018E8")]
		[Address(RVA = "0x9E976C", Offset = "0x9E976C", VA = "0x9E976C")]
		public static bool DisableIfNull(UnityEngine.MonoBehaviour component, object attributeValue, string attributeName)
		{
			return default(bool);
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0x9E9944", Offset = "0x9E9944", VA = "0x9E9944")]
		[Conditional("UNITY_ASSERTIONS")]
		public static void FailIfNull(object component, object attributeValue, string attributeName)
		{
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0x9E98A4", Offset = "0x9E98A4", VA = "0x9E98A4")]
		public static bool IsNull(object o)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003A5")]
	public class DontDestroyOnLoad : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x60018EB")]
		[Address(RVA = "0x9E9B0C", Offset = "0x9E9B0C", VA = "0x9E9B0C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0x9E9B78", Offset = "0x9E9B78", VA = "0x9E9B78")]
		public DontDestroyOnLoad()
		{
		}
	}
	[Token(Token = "0x20003A6")]
	public class Loader : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20003A7")]
		[CompilerGenerated]
		private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Loader <>4__this;

			[Token(Token = "0x4001B80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Fader[] <faders>5__2;

			[Token(Token = "0x4001B81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startTime>5__3;

			[Token(Token = "0x4001B82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private AsyncOperation <async>5__4;

			[Token(Token = "0x170002F5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018F2")]
				[Address(RVA = "0x9E9F8C", Offset = "0x9E9F8C", VA = "0x9E9F8C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018F4")]
				[Address(RVA = "0x9E9FD4", Offset = "0x9E9FD4", VA = "0x9E9FD4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018EF")]
			[Address(RVA = "0x9E9BE8", Offset = "0x9E9BE8", VA = "0x9E9BE8")]
			[DebuggerHidden]
			public <Start>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x60018F0")]
			[Address(RVA = "0x9E9C18", Offset = "0x9E9C18", VA = "0x9E9C18", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018F1")]
			[Address(RVA = "0x9E9C1C", Offset = "0x9E9C1C", VA = "0x9E9C1C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018F3")]
			[Address(RVA = "0x9E9F94", Offset = "0x9E9F94", VA = "0x9E9F94", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string scene;

		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minimumTime;

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0x9E9B80", Offset = "0x9E9B80", VA = "0x9E9B80")]
		[IteratorStateMachine(typeof(<Start>d__2))]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0x9E9C10", Offset = "0x9E9C10", VA = "0x9E9C10")]
		public Loader()
		{
		}
	}
	[Token(Token = "0x20003A8")]
	public struct ObjectAndTransform
	{
		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly GameObject gameObject;

		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly Transform transform;

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0x9E9FDC", Offset = "0x9E9FDC", VA = "0x9E9FDC")]
		public ObjectAndTransform(GameObject obj)
		{
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0x9EA008", Offset = "0x9EA008", VA = "0x9EA008")]
		public ObjectAndTransform(Transform t)
		{
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0x9EA03C", Offset = "0x9EA03C", VA = "0x9EA03C")]
		public ObjectAndTransform(GameObject obj, Transform t)
		{
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0x9EA070", Offset = "0x9EA070", VA = "0x9EA070", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0x9EA0DC", Offset = "0x9EA0DC", VA = "0x9EA0DC")]
		public bool IsNull()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003A9")]
	[DisallowMultipleComponent]
	public abstract class SingleInstanceBehavior<T> : UnityEngine.MonoBehaviour where T : SingleInstanceBehavior<T>
	{
		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T instance;

		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string noInstanceMessage;

		[Token(Token = "0x170002F7")]
		public static T Instance
		{
			[Token(Token = "0x60018FD")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018FA")]
		static SingleInstanceBehavior()
		{
		}

		[Token(Token = "0x60018FB")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x60018FC")]
		public virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60018FE")]
		public static T GetInstance()
		{
			return null;
		}

		[Token(Token = "0x60018FF")]
		protected SingleInstanceBehavior()
		{
		}
	}
	[Token(Token = "0x20003AA")]
	public class Singleton<T> where T : Singleton<T>, new()
	{
		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T instance;

		[Token(Token = "0x170002F8")]
		public static T Instance
		{
			[Token(Token = "0x6001901")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001900")]
		public Singleton()
		{
		}

		[Token(Token = "0x6001902")]
		public static T GetInstance()
		{
			return null;
		}
	}
	[Token(Token = "0x20003AB")]
	public class SingletonBehavior<T> : UnityEngine.MonoBehaviour where T : SingletonBehavior<T>
	{
		[Token(Token = "0x4001B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T instance;

		[Token(Token = "0x170002F9")]
		public static T Instance
		{
			[Token(Token = "0x6001905")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001903")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x6001904")]
		public virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001906")]
		public static T GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6001907")]
		public SingletonBehavior()
		{
		}
	}
	[Token(Token = "0x20003AC")]
	public class Locale : Singleton<Locale>
	{
		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string language;

		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string country;

		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string explicitlySetLocale;

		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string currentLocale;

		[Token(Token = "0x4001B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string[] availableLocales;

		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string[] stringIDs;

		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<string, string> strings;

		[Token(Token = "0x4001B90")]
		private const string resourceFolder = "Text";

		[Token(Token = "0x4001B91")]
		private const string binaryResourceSuffix = "_Strings";

		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, string> countrySpecificLocales;

		[Token(Token = "0x6001908")]
		[Address(RVA = "0x9EA13C", Offset = "0x9EA13C", VA = "0x9EA13C")]
		public Locale()
		{
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0x9EA92C", Offset = "0x9EA92C", VA = "0x9EA92C")]
		public string GetString(string key)
		{
			return null;
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0x9EA9BC", Offset = "0x9EA9BC", VA = "0x9EA9BC")]
		public bool TryGetString(string key, out string localized)
		{
			return default(bool);
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0x9EAA4C", Offset = "0x9EAA4C", VA = "0x9EAA4C")]
		public string Format(string key, params object[] templateArguments)
		{
			return null;
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0x9EAC0C", Offset = "0x9EAC0C", VA = "0x9EAC0C")]
		public bool TryFormat(string key, out string localized, params object[] templateArguments)
		{
			return default(bool);
		}

		[Token(Token = "0x600190D")]
		[Address(RVA = "0x9EADF0", Offset = "0x9EADF0", VA = "0x9EADF0")]
		public string GetDefaultLanguageOrLocale()
		{
			return null;
		}

		[Token(Token = "0x600190E")]
		[Address(RVA = "0x9EAE0C", Offset = "0x9EAE0C", VA = "0x9EAE0C")]
		public string GetDefaultCountry()
		{
			return null;
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0x9EAE14", Offset = "0x9EAE14", VA = "0x9EAE14")]
		public string GetCurrentLocale()
		{
			return null;
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0x9EAE1C", Offset = "0x9EAE1C", VA = "0x9EAE1C")]
		public void SetLocale(string localeCode)
		{
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0x9EAE24", Offset = "0x9EAE24", VA = "0x9EAE24")]
		public string[] GetAvailableLocales()
		{
			return null;
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0x9EA5F8", Offset = "0x9EA5F8", VA = "0x9EA5F8")]
		public string GetLocale(string[] availableLocales)
		{
			return null;
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0x9EAE54", Offset = "0x9EAE54", VA = "0x9EAE54")]
		public string[] GetStringIDs()
		{
			return null;
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0x9EAEB0", Offset = "0x9EAEB0", VA = "0x9EAEB0")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0x9EA1AC", Offset = "0x9EA1AC", VA = "0x9EA1AC")]
		private void LoadAvailableLocales()
		{
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0x9EA80C", Offset = "0x9EA80C", VA = "0x9EA80C")]
		private void LoadStrings()
		{
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0x9EAEC8", Offset = "0x9EAEC8", VA = "0x9EAEC8")]
		private bool TryLoadStrings()
		{
			return default(bool);
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0x9EB008", Offset = "0x9EB008", VA = "0x9EB008")]
		private bool TryLoadStringsFromBinaryAssets()
		{
			return default(bool);
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0x9EA328", Offset = "0x9EA328", VA = "0x9EA328")]
		private void SetDefaultLanguageAndCountry()
		{
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0x9EB214", Offset = "0x9EB214", VA = "0x9EB214")]
		[Obsolete("GetLanguage is deprecated, use GetResourceLocale instead.")]
		public string GetLanguage()
		{
			return null;
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0x9EB21C", Offset = "0x9EB21C", VA = "0x9EB21C")]
		[Obsolete("SetLanguage is deprecated, use SetLocale instead.")]
		public void SetLanguage(string languageCode)
		{
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0x9EB224", Offset = "0x9EB224", VA = "0x9EB224")]
		[Obsolete("GetAvailableLanguages is deprecated, use GetAvailableLocales instead.")]
		public string[] GetAvailableLanguages()
		{
			return null;
		}
	}
	[Token(Token = "0x20003AD")]
	public class LocaleFonts : SingleInstanceBehavior<LocaleFonts>
	{
		[Serializable]
		[Token(Token = "0x20003AE")]
		public class Settings
		{
			[Token(Token = "0x4001B94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Tooltip("Locale code (language or language-region)")]
			public string locale;

			[Token(Token = "0x4001B95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[Tooltip("The font to use for text in this locale")]
			public Font[] font;

			[Token(Token = "0x4001B96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[Tooltip("The TMPro font to use for text in this locale")]
			public TMP_FontAsset[] fontTMPro;

			[Token(Token = "0x4001B97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[Tooltip("Optional material applied only on TMPro GUI components, use to fix the TMPro UGUI disappears bug.")]
			public Material[] materialTMProGUI;

			[Token(Token = "0x4001B98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[Tooltip("The size of the text relative to the original font")]
			public float scale;

			[Token(Token = "0x6001920")]
			[Address(RVA = "0x9EC830", Offset = "0x9EC830", VA = "0x9EC830")]
			public Settings()
			{
			}
		}

		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Tooltip("Locales that should use a specific font")]
		private Settings[] localeSettings;

		[Token(Token = "0x600191E")]
		[Address(RVA = "0x9EC6E4", Offset = "0x9EC6E4", VA = "0x9EC6E4")]
		public Settings GetCurrentLocaleSettings()
		{
			return null;
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0x9EC7C4", Offset = "0x9EC7C4", VA = "0x9EC7C4")]
		public LocaleFonts()
		{
		}
	}
	[Token(Token = "0x20003AF")]
	public enum FontMaterialID
	{
		[Token(Token = "0x4001B9A")]
		InteractiveHeader,
		[Token(Token = "0x4001B9B")]
		InteractiveBasic,
		[Token(Token = "0x4001B9C")]
		InteractiveOutline,
		[Token(Token = "0x4001B9D")]
		NonInteractiveOutline,
		[Token(Token = "0x4001B9E")]
		NonInteractiveBasic,
		[Token(Token = "0x4001B9F")]
		Overlay,
		[Token(Token = "0x4001BA0")]
		NonInteractiveHeader
	}
	[Token(Token = "0x20003B0")]
	[DisallowMultipleComponent]
	public class LocalizedText : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20003B1")]
		private struct FontProxy
		{
			[Token(Token = "0x4001BAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Font font;

			[Token(Token = "0x4001BAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public TMP_FontAsset fontTMPro;

			[Token(Token = "0x4001BAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material materialTMProGUI;
		}

		[Token(Token = "0x20003B2")]
		private interface ITextComponent
		{
			[Token(Token = "0x170002FA")]
			string Text
			{
				[Token(Token = "0x600192A")]
				get;
				[Token(Token = "0x600192B")]
				set;
			}

			[Token(Token = "0x170002FB")]
			FontProxy Font
			{
				[Token(Token = "0x600192C")]
				get;
				[Token(Token = "0x600192D")]
				set;
			}

			[Token(Token = "0x170002FC")]
			float FontSize
			{
				[Token(Token = "0x600192E")]
				get;
				[Token(Token = "0x600192F")]
				set;
			}
		}

		[Token(Token = "0x20003B3")]
		private sealed class TextComponent : ITextComponent
		{
			[Token(Token = "0x4001BAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Text textComponent;

			[Token(Token = "0x170002FD")]
			public string Text
			{
				[Token(Token = "0x6001931")]
				[Address(RVA = "0x9ED640", Offset = "0x9ED640", VA = "0x9ED640", Slot = "4")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001932")]
				[Address(RVA = "0x9ED664", Offset = "0x9ED664", VA = "0x9ED664", Slot = "5")]
				set
				{
				}
			}

			[Token(Token = "0x170002FE")]
			public FontProxy Font
			{
				[Token(Token = "0x6001933")]
				[Address(RVA = "0x9ED688", Offset = "0x9ED688", VA = "0x9ED688", Slot = "6")]
				get
				{
					return default(FontProxy);
				}
				[Token(Token = "0x6001934")]
				[Address(RVA = "0x9ED6C4", Offset = "0x9ED6C4", VA = "0x9ED6C4", Slot = "7")]
				set
				{
				}
			}

			[Token(Token = "0x170002FF")]
			public float FontSize
			{
				[Token(Token = "0x6001935")]
				[Address(RVA = "0x9ED6E4", Offset = "0x9ED6E4", VA = "0x9ED6E4", Slot = "8")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001936")]
				[Address(RVA = "0x9ED708", Offset = "0x9ED708", VA = "0x9ED708", Slot = "9")]
				set
				{
				}
			}

			[Token(Token = "0x6001930")]
			[Address(RVA = "0x9ED53C", Offset = "0x9ED53C", VA = "0x9ED53C")]
			public TextComponent(Text text)
			{
			}
		}

		[Token(Token = "0x20003B4")]
		private sealed class TextMeshComponent : ITextComponent
		{
			[Token(Token = "0x4001BAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly TextMesh textComponent;

			[Token(Token = "0x17000300")]
			public string Text
			{
				[Token(Token = "0x6001938")]
				[Address(RVA = "0x9ED7FC", Offset = "0x9ED7FC", VA = "0x9ED7FC", Slot = "4")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001939")]
				[Address(RVA = "0x9ED818", Offset = "0x9ED818", VA = "0x9ED818", Slot = "5")]
				set
				{
				}
			}

			[Token(Token = "0x17000301")]
			public FontProxy Font
			{
				[Token(Token = "0x600193A")]
				[Address(RVA = "0x9ED834", Offset = "0x9ED834", VA = "0x9ED834", Slot = "6")]
				get
				{
					return default(FontProxy);
				}
				[Token(Token = "0x600193B")]
				[Address(RVA = "0x9ED870", Offset = "0x9ED870", VA = "0x9ED870", Slot = "7")]
				set
				{
				}
			}

			[Token(Token = "0x17000302")]
			public float FontSize
			{
				[Token(Token = "0x600193C")]
				[Address(RVA = "0x9ED890", Offset = "0x9ED890", VA = "0x9ED890", Slot = "8")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x600193D")]
				[Address(RVA = "0x9ED8B4", Offset = "0x9ED8B4", VA = "0x9ED8B4", Slot = "9")]
				set
				{
				}
			}

			[Token(Token = "0x6001937")]
			[Address(RVA = "0x9ED564", Offset = "0x9ED564", VA = "0x9ED564")]
			public TextMeshComponent(TextMesh text)
			{
			}
		}

		[Token(Token = "0x20003B5")]
		private sealed class TextComponentTMPro : ITextComponent
		{
			[Token(Token = "0x4001BAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly TMP_Text textComponent;

			[Token(Token = "0x17000303")]
			public string Text
			{
				[Token(Token = "0x600193F")]
				[Address(RVA = "0x9ED9A8", Offset = "0x9ED9A8", VA = "0x9ED9A8", Slot = "4")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001940")]
				[Address(RVA = "0x9ED9CC", Offset = "0x9ED9CC", VA = "0x9ED9CC", Slot = "5")]
				set
				{
				}
			}

			[Token(Token = "0x17000304")]
			public FontProxy Font
			{
				[Token(Token = "0x6001941")]
				[Address(RVA = "0x9ED9F0", Offset = "0x9ED9F0", VA = "0x9ED9F0", Slot = "6")]
				get
				{
					return default(FontProxy);
				}
				[Token(Token = "0x6001942")]
				[Address(RVA = "0x9EDA14", Offset = "0x9EDA14", VA = "0x9EDA14", Slot = "7")]
				set
				{
				}
			}

			[Token(Token = "0x17000305")]
			public float FontSize
			{
				[Token(Token = "0x6001943")]
				[Address(RVA = "0x9EDAB4", Offset = "0x9EDAB4", VA = "0x9EDAB4", Slot = "8")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001944")]
				[Address(RVA = "0x9EDAD0", Offset = "0x9EDAD0", VA = "0x9EDAD0", Slot = "9")]
				set
				{
				}
			}

			[Token(Token = "0x600193E")]
			[Address(RVA = "0x9ED58C", Offset = "0x9ED58C", VA = "0x9ED58C")]
			public TextComponentTMPro(TMP_Text text)
			{
			}
		}

		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string stringID;

		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool shouldUpdateFont;

		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private FontMaterialID fontMaterialID;

		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ITextComponent textComponent;

		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string[] templateArguments;

		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int?[] templateArgumentsInts;

		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool fontOverridden;

		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private FontProxy? originalFont;

		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float originalFontSize;

		[Token(Token = "0x6001921")]
		[Address(RVA = "0x9EC840", Offset = "0x9EC840", VA = "0x9EC840")]
		private void Start()
		{
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0x9ED25C", Offset = "0x9ED25C", VA = "0x9ED25C")]
		public void ShowString(string stringID)
		{
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0x9ED264", Offset = "0x9ED264", VA = "0x9ED264")]
		public void SetTemplateArgument(int index, string value)
		{
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0x9ED338", Offset = "0x9ED338", VA = "0x9ED338")]
		public void SetTemplateArgument(int index, int value)
		{
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0x9ED47C", Offset = "0x9ED47C", VA = "0x9ED47C")]
		public void ShowRawText(string text)
		{
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0x9ECBBC", Offset = "0x9ECBBC", VA = "0x9ECBBC")]
		public void UpdateText()
		{
		}

		[Token(Token = "0x6001927")]
		[Address(RVA = "0x9ECCCC", Offset = "0x9ECCCC", VA = "0x9ECCCC")]
		public void UpdateFont(bool forceChangeInEditor = false)
		{
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0x9EC864", Offset = "0x9EC864", VA = "0x9EC864")]
		private void FindComponents()
		{
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0x9ED5B4", Offset = "0x9ED5B4", VA = "0x9ED5B4")]
		public LocalizedText()
		{
		}
	}
	[Token(Token = "0x20003B6")]
	public struct SeparatedStringReader
	{
		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private byte[] bytes;

		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int index;

		[Token(Token = "0x6001945")]
		[Address(RVA = "0x9EDAEC", Offset = "0x9EDAEC", VA = "0x9EDAEC")]
		public SeparatedStringReader(byte[] bytes, int startingIndex = 0)
		{
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0x9EDAF8", Offset = "0x9EDAF8", VA = "0x9EDAF8")]
		public bool HasNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0x9EDB20", Offset = "0x9EDB20", VA = "0x9EDB20")]
		public string GetNext()
		{
			return null;
		}
	}
	[Token(Token = "0x20003B7")]
	public class TextTemplateDemo : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool useIntegerArgument;

		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int number;

		[Token(Token = "0x6001948")]
		[Address(RVA = "0x9EDBCC", Offset = "0x9EDBCC", VA = "0x9EDBCC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001949")]
		[Address(RVA = "0x9EDC9C", Offset = "0x9EDC9C", VA = "0x9EDC9C")]
		public TextTemplateDemo()
		{
		}
	}
	[Token(Token = "0x20003B8")]
	public class Translations : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20003B9")]
		public struct StringEntry
		{
			[Token(Token = "0x4001BB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string id;

			[Token(Token = "0x4001BB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string translation;
		}

		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StringEntry[] entries;

		[Token(Token = "0x600194A")]
		[Address(RVA = "0x9EDCAC", Offset = "0x9EDCAC", VA = "0x9EDCAC")]
		public Translations()
		{
		}
	}
	[Token(Token = "0x20003BA")]
	public static class Interpolation
	{
		[Token(Token = "0x600194B")]
		[Address(RVA = "0x9EDCB4", Offset = "0x9EDCB4", VA = "0x9EDCB4")]
		public static float EaseInEaseOut(float progress, int depth)
		{
			return default(float);
		}

		[Token(Token = "0x600194C")]
		[Address(RVA = "0x9EDD10", Offset = "0x9EDD10", VA = "0x9EDD10")]
		public static bool ProgressOverTime(float startTime, float totalTime, ref float progress)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003BB")]
	public abstract class TwoD
	{
		[Token(Token = "0x600194D")]
		[Address(RVA = "0x9EDD7C", Offset = "0x9EDD7C", VA = "0x9EDD7C")]
		public static bool TriangleIsInBounds(Rect bounds, Vector2 p0, Vector2 p1, Vector2 p2)
		{
			return default(bool);
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0x9EE200", Offset = "0x9EE200", VA = "0x9EE200")]
		public static bool TriangleContainsPoint(Vector2 vertex0, Vector2 vertex1, Vector2 vertex2, Vector2 point)
		{
			return default(bool);
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0x9EE2B8", Offset = "0x9EE2B8", VA = "0x9EE2B8")]
		public static bool PointsOnSameSide(Vector2 line0, Vector2 line1, Vector2 point0, Vector2 point1)
		{
			return default(bool);
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0x9EE334", Offset = "0x9EE334", VA = "0x9EE334")]
		public static Vector3 ToBarycentric(Vector2 p0, Vector2 p1, Vector2 p2, Vector2 p)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0x9EE304", Offset = "0x9EE304", VA = "0x9EE304")]
		public static float Determinant(Vector2 p0, Vector2 p1, Vector2 p2)
		{
			return default(float);
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0x9EDF0C", Offset = "0x9EDF0C", VA = "0x9EDF0C")]
		public static bool TriangleIntersectsRectangle(Vector2 vertex0, Vector2 vertex1, Vector2 vertex2, Rect rect)
		{
			return default(bool);
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0x9EE38C", Offset = "0x9EE38C", VA = "0x9EE38C")]
		[Obsolete("Use VectorExtensions.SwizzleXZ instead")]
		public static Vector2 SwizzleXZ(Vector3 v)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0x9EE394", Offset = "0x9EE394", VA = "0x9EE394")]
		protected TwoD()
		{
		}
	}
	[Token(Token = "0x20003BC")]
	public class MeasurePoint : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int nextNumber;

		[Token(Token = "0x4001BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int number;

		[Token(Token = "0x6001955")]
		[Address(RVA = "0x9EE39C", Offset = "0x9EE39C", VA = "0x9EE39C")]
		public MeasurePoint()
		{
		}
	}
	[Token(Token = "0x20003BD")]
	public class DummyEvent : Tracking.TrackingEvent
	{
		[Token(Token = "0x4001BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static DummyEvent instance;

		[Token(Token = "0x6001956")]
		[Address(RVA = "0x9EE3A4", Offset = "0x9EE3A4", VA = "0x9EE3A4", Slot = "6")]
		public Tracking.TrackingEvent AddParameter(string name, float value)
		{
			return null;
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0x9EE3A8", Offset = "0x9EE3A8", VA = "0x9EE3A8", Slot = "8")]
		public Tracking.TrackingEvent AddParameter(string name, bool value)
		{
			return null;
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0x9EE3AC", Offset = "0x9EE3AC", VA = "0x9EE3AC", Slot = "7")]
		public Tracking.TrackingEvent AddParameter(string name, double value)
		{
			return null;
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0x9EE3B0", Offset = "0x9EE3B0", VA = "0x9EE3B0", Slot = "5")]
		public Tracking.TrackingEvent AddParameter(string name, int value)
		{
			return null;
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0x9EE3B4", Offset = "0x9EE3B4", VA = "0x9EE3B4", Slot = "4")]
		public Tracking.TrackingEvent AddParameter(string name, string value)
		{
			return null;
		}

		[Token(Token = "0x600195B")]
		[Address(RVA = "0x9EE3B8", Offset = "0x9EE3B8", VA = "0x9EE3B8", Slot = "9")]
		public void Submit()
		{
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0x9EE3BC", Offset = "0x9EE3BC", VA = "0x9EE3BC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600195D")]
		[Address(RVA = "0x9EE3FC", Offset = "0x9EE3FC", VA = "0x9EE3FC")]
		public DummyEvent()
		{
		}
	}
	[Token(Token = "0x20003BE")]
	public class ErrorCheckingTracker : Tracking.Tracker
	{
		[Token(Token = "0x20003BF")]
		public class Failure : ApplicationException
		{
			[Token(Token = "0x6001961")]
			[Address(RVA = "0x9EE65C", Offset = "0x9EE65C", VA = "0x9EE65C")]
			public Failure(string message)
			{
			}
		}

		[Token(Token = "0x20003C0")]
		private class ErrorCheckingEvent : Tracking.TrackingEvent
		{
			[Token(Token = "0x4001BBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly string eventName;

			[Token(Token = "0x4001BBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Dictionary<string, string> parameters;

			[Token(Token = "0x4001BBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private bool revenueSet;

			[Token(Token = "0x4001BBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			public bool isSubmitted;

			[Token(Token = "0x6001962")]
			[Address(RVA = "0x9EE664", Offset = "0x9EE664", VA = "0x9EE664")]
			public ErrorCheckingEvent(string eventName)
			{
			}

			[Token(Token = "0x6001963")]
			[Address(RVA = "0x9EE6FC", Offset = "0x9EE6FC", VA = "0x9EE6FC", Slot = "4")]
			public Tracking.TrackingEvent AddParameter(string name, string value)
			{
				return null;
			}

			[Token(Token = "0x6001964")]
			[Address(RVA = "0x9EE9A4", Offset = "0x9EE9A4", VA = "0x9EE9A4", Slot = "6")]
			public Tracking.TrackingEvent AddParameter(string name, float value)
			{
				return null;
			}

			[Token(Token = "0x6001965")]
			[Address(RVA = "0x9EE9E4", Offset = "0x9EE9E4", VA = "0x9EE9E4", Slot = "7")]
			public Tracking.TrackingEvent AddParameter(string name, double value)
			{
				return null;
			}

			[Token(Token = "0x6001966")]
			[Address(RVA = "0x9EEA24", Offset = "0x9EEA24", VA = "0x9EEA24", Slot = "5")]
			public Tracking.TrackingEvent AddParameter(string name, int value)
			{
				return null;
			}

			[Token(Token = "0x6001967")]
			[Address(RVA = "0x9EEA64", Offset = "0x9EEA64", VA = "0x9EEA64", Slot = "8")]
			public Tracking.TrackingEvent AddParameter(string name, bool value)
			{
				return null;
			}

			[Token(Token = "0x6001968")]
			[Address(RVA = "0x9EEAA8", Offset = "0x9EEAA8", VA = "0x9EEAA8", Slot = "9")]
			public void Submit()
			{
			}

			[Token(Token = "0x6001969")]
			[Address(RVA = "0x9EEB40", Offset = "0x9EEB40", VA = "0x9EEB40", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[Token(Token = "0x4001BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ErrorCheckingEvent currentEvent;

		[Token(Token = "0x600195F")]
		[Address(RVA = "0x9EE468", Offset = "0x9EE468", VA = "0x9EE468", Slot = "4")]
		public Tracking.TrackingEvent Track(string eventName)
		{
			return null;
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0x9EE6F4", Offset = "0x9EE6F4", VA = "0x9EE6F4")]
		public ErrorCheckingTracker()
		{
		}
	}
	[Token(Token = "0x20003C1")]
	public class FirebaseTracking : UnityEngine.MonoBehaviour, Tracking.Tracker
	{
		[Token(Token = "0x600196A")]
		[Address(RVA = "0x9EEB8C", Offset = "0x9EEB8C", VA = "0x9EEB8C", Slot = "4")]
		private Tracking.TrackingEvent RGCommon.Tracking.Tracker.Track(string eventName)
		{
			return null;
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0x9EEBDC", Offset = "0x9EEBDC", VA = "0x9EEBDC")]
		public FirebaseTracking()
		{
		}
	}
	[Token(Token = "0x20003C2")]
	public class HTTPTracking : UnityEngine.MonoBehaviour, Tracking.Tracker, Tracking.TrackingEvent
	{
		[Token(Token = "0x20003C3")]
		private struct Timing
		{
			[Token(Token = "0x4001BD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float time;

			[Token(Token = "0x4001BD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float variation;
		}

		[Token(Token = "0x20003C4")]
		[CompilerGenerated]
		private sealed class <Quit>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HTTPTracking <>4__this;

			[Token(Token = "0x17000306")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001985")]
				[Address(RVA = "0x9EFE04", Offset = "0x9EFE04", VA = "0x9EFE04", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000307")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001987")]
				[Address(RVA = "0x9EFE4C", Offset = "0x9EFE4C", VA = "0x9EFE4C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001982")]
			[Address(RVA = "0x9EF9C8", Offset = "0x9EF9C8", VA = "0x9EF9C8")]
			[DebuggerHidden]
			public <Quit>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6001983")]
			[Address(RVA = "0x9EFD00", Offset = "0x9EFD00", VA = "0x9EFD00", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001984")]
			[Address(RVA = "0x9EFD04", Offset = "0x9EFD04", VA = "0x9EFD04", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001986")]
			[Address(RVA = "0x9EFE0C", Offset = "0x9EFE0C", VA = "0x9EFE0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003C5")]
		[CompilerGenerated]
		private sealed class <Start>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HTTPTracking <>4__this;

			[Token(Token = "0x4001BDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <nextSendTime>5__2;

			[Token(Token = "0x17000308")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600198B")]
				[Address(RVA = "0x9EFF90", Offset = "0x9EFF90", VA = "0x9EFF90", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000309")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600198D")]
				[Address(RVA = "0x9EFFD8", Offset = "0x9EFFD8", VA = "0x9EFFD8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001988")]
			[Address(RVA = "0x9EFA58", Offset = "0x9EFA58", VA = "0x9EFA58")]
			[DebuggerHidden]
			public <Start>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6001989")]
			[Address(RVA = "0x9EFE54", Offset = "0x9EFE54", VA = "0x9EFE54", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600198A")]
			[Address(RVA = "0x9EFE58", Offset = "0x9EFE58", VA = "0x9EFE58", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600198C")]
			[Address(RVA = "0x9EFF98", Offset = "0x9EFF98", VA = "0x9EFF98", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003C6")]
		[CompilerGenerated]
		private sealed class <SendPending>d__35 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HTTPTracking <>4__this;

			[Token(Token = "0x4001BDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private string <prefsKey>5__2;

			[Token(Token = "0x1700030A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001991")]
				[Address(RVA = "0x9F04AC", Offset = "0x9F04AC", VA = "0x9F04AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700030B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001993")]
				[Address(RVA = "0x9F04F4", Offset = "0x9F04F4", VA = "0x9F04F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600198E")]
			[Address(RVA = "0x9EFAE8", Offset = "0x9EFAE8", VA = "0x9EFAE8")]
			[DebuggerHidden]
			public <SendPending>d__35(int <>1__state)
			{
			}

			[Token(Token = "0x600198F")]
			[Address(RVA = "0x9EFFE0", Offset = "0x9EFFE0", VA = "0x9EFFE0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001990")]
			[Address(RVA = "0x9EFFE4", Offset = "0x9EFFE4", VA = "0x9EFFE4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001992")]
			[Address(RVA = "0x9F04B4", Offset = "0x9F04B4", VA = "0x9F04B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003C7")]
		[CompilerGenerated]
		private sealed class <SendBatch>d__37 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int batchNumber;

			[Token(Token = "0x4001BE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string eventsData;

			[Token(Token = "0x4001BE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public HTTPTracking <>4__this;

			[Token(Token = "0x4001BE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UnityWebRequest <request>5__2;

			[Token(Token = "0x1700030C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001998")]
				[Address(RVA = "0x9F112C", Offset = "0x9F112C", VA = "0x9F112C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700030D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600199A")]
				[Address(RVA = "0x9F1174", Offset = "0x9F1174", VA = "0x9F1174", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001994")]
			[Address(RVA = "0x9EFB8C", Offset = "0x9EFB8C", VA = "0x9EFB8C")]
			[DebuggerHidden]
			public <SendBatch>d__37(int <>1__state)
			{
			}

			[Token(Token = "0x6001995")]
			[Address(RVA = "0x9F04FC", Offset = "0x9F04FC", VA = "0x9F04FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001996")]
			[Address(RVA = "0x9F0518", Offset = "0x9F0518", VA = "0x9F0518", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001997")]
			[Address(RVA = "0x9F107C", Offset = "0x9F107C", VA = "0x9F107C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001999")]
			[Address(RVA = "0x9F1134", Offset = "0x9F1134", VA = "0x9F1134", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BBF")]
		private const float highFrequencyTime = 300f;

		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Timing highFrequencyTimeBetweenSends;

		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Timing standardTimeBetweenSends;

		[Token(Token = "0x4001BC2")]
		private const string serverUrl = "https://e.resgam.com/";

		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly DateTime epoch;

		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string baseUrl;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StringBuilder eventLog;

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool eventOngoing;

		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool quitting;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool sendNow;

		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		private bool stopped;

		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly string NEXT_BATCH_NUMBER_KEY;

		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly string FIRST_UNSENT_BATCH_KEY;

		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly string BATCH_KEY_PREFIX;

		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int currentBatchNumber;

		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int firstUnsentBatch;

		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool lastSendFailed;

		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int lastResponseCode;

		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int consecutiveSendFailures;

		[Token(Token = "0x600196C")]
		[Address(RVA = "0x9EEBE4", Offset = "0x9EEBE4", VA = "0x9EEBE4", Slot = "5")]
		public Tracking.TrackingEvent AddParameter(string name, string value)
		{
			return null;
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0x9EEDBC", Offset = "0x9EEDBC", VA = "0x9EEDBC", Slot = "7")]
		public Tracking.TrackingEvent AddParameter(string name, float value)
		{
			return null;
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0x9EEED4", Offset = "0x9EEED4", VA = "0x9EEED4", Slot = "9")]
		public Tracking.TrackingEvent AddParameter(string name, bool value)
		{
			return null;
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0x9EEFB4", Offset = "0x9EEFB4", VA = "0x9EEFB4", Slot = "8")]
		public Tracking.TrackingEvent AddParameter(string name, double value)
		{
			return null;
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0x9EF0CC", Offset = "0x9EF0CC", VA = "0x9EF0CC", Slot = "6")]
		public Tracking.TrackingEvent AddParameter(string name, int value)
		{
			return null;
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0x9EF1E4", Offset = "0x9EF1E4", VA = "0x9EF1E4", Slot = "10")]
		public void Submit()
		{
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0x9EF20C", Offset = "0x9EF20C", VA = "0x9EF20C", Slot = "4")]
		public Tracking.TrackingEvent Track(string eventName)
		{
			return null;
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0x9EF3E0", Offset = "0x9EF3E0", VA = "0x9EF3E0")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0x9EF660", Offset = "0x9EF660", VA = "0x9EF660")]
		public bool HasOutgoingEvents()
		{
			return default(bool);
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0x9EF6A4", Offset = "0x9EF6A4", VA = "0x9EF6A4")]
		public void SendNow()
		{
		}

		[Token(Token = "0x6001976")]
		[Address(RVA = "0x9EF6B0", Offset = "0x9EF6B0", VA = "0x9EF6B0")]
		private bool OnWantsToQuit()
		{
			return default(bool);
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0x9EF7B8", Offset = "0x9EF7B8", VA = "0x9EF7B8")]
		private void OnApplicationPause(bool pause)
		{
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0x9EF994", Offset = "0x9EF994", VA = "0x9EF994")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0x9EF750", Offset = "0x9EF750", VA = "0x9EF750")]
		[IteratorStateMachine(typeof(<Quit>d__33))]
		private IEnumerator Quit()
		{
			return null;
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0x9EF9F0", Offset = "0x9EF9F0", VA = "0x9EF9F0")]
		[IteratorStateMachine(typeof(<Start>d__34))]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0x9EFA80", Offset = "0x9EFA80", VA = "0x9EFA80")]
		[IteratorStateMachine(typeof(<SendPending>d__35))]
		private IEnumerator SendPending()
		{
			return null;
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0x9EF7C4", Offset = "0x9EF7C4", VA = "0x9EF7C4")]
		private void EndBatch()
		{
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0x9EFB10", Offset = "0x9EFB10", VA = "0x9EFB10")]
		[IteratorStateMachine(typeof(<SendBatch>d__37))]
		private IEnumerator SendBatch(int batchNumber, string eventsData)
		{
			return null;
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0x9EECB4", Offset = "0x9EECB4", VA = "0x9EECB4")]
		private static string Encode(string v)
		{
			return null;
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0x9EF334", Offset = "0x9EF334", VA = "0x9EF334")]
		private static double GetTimestamp()
		{
			return default(double);
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0x9EFBB4", Offset = "0x9EFBB4", VA = "0x9EFBB4")]
		public HTTPTracking()
		{
		}
	}
	[Token(Token = "0x20003C8")]
	public class LifecycleTracking : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string platform;

		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string PRODUCT_VERSION_KEY;

		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool hasSentStopEvent;

		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool? lastKnownPause;

		[Token(Token = "0x4001BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string androidVersion;

		[Token(Token = "0x600199B")]
		[Address(RVA = "0x9F117C", Offset = "0x9F117C", VA = "0x9F117C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0x9F11D4", Offset = "0x9F11D4", VA = "0x9F11D4")]
		private void Start()
		{
		}

		[Token(Token = "0x600199D")]
		[Address(RVA = "0x9F1A64", Offset = "0x9F1A64", VA = "0x9F1A64")]
		private void OnApplicationPause(bool pause)
		{
		}

		[Token(Token = "0x600199E")]
		[Address(RVA = "0x9F1BD4", Offset = "0x9F1BD4", VA = "0x9F1BD4")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600199F")]
		[Address(RVA = "0x9F15CC", Offset = "0x9F15CC", VA = "0x9F15CC")]
		private Tracking.TrackingEvent AddCommonParameters(Tracking.TrackingEvent ev)
		{
			return null;
		}

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0x9F1CA8", Offset = "0x9F1CA8", VA = "0x9F1CA8")]
		public LifecycleTracking()
		{
		}
	}
	[Token(Token = "0x20003C9")]
	internal class MultiTracker : Tracking.Tracker
	{
		[Token(Token = "0x20003CA")]
		private class MultiEvent : Tracking.TrackingEvent
		{
			[Token(Token = "0x4001BEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Tracking.TrackingEvent[] events;

			[Token(Token = "0x60019A4")]
			[Address(RVA = "0x9F20B4", Offset = "0x9F20B4", VA = "0x9F20B4")]
			public MultiEvent(Tracking.TrackingEvent[] events)
			{
			}

			[Token(Token = "0x60019A5")]
			[Address(RVA = "0x9F2158", Offset = "0x9F2158", VA = "0x9F2158", Slot = "5")]
			public Tracking.TrackingEvent AddParameter(string name, int value)
			{
				return null;
			}

			[Token(Token = "0x60019A6")]
			[Address(RVA = "0x9F2264", Offset = "0x9F2264", VA = "0x9F2264", Slot = "7")]
			public Tracking.TrackingEvent AddParameter(string name, double value)
			{
				return null;
			}

			[Token(Token = "0x60019A7")]
			[Address(RVA = "0x9F2378", Offset = "0x9F2378", VA = "0x9F2378", Slot = "8")]
			public Tracking.TrackingEvent AddParameter(string name, bool value)
			{
				return null;
			}

			[Token(Token = "0x60019A8")]
			[Address(RVA = "0x9F2488", Offset = "0x9F2488", VA = "0x9F2488", Slot = "6")]
			public Tracking.TrackingEvent AddParameter(string name, float value)
			{
				return null;
			}

			[Token(Token = "0x60019A9")]
			[Address(RVA = "0x9F259C", Offset = "0x9F259C", VA = "0x9F259C", Slot = "4")]
			public Tracking.TrackingEvent AddParameter(string name, string value)
			{
				return null;
			}

			[Token(Token = "0x60019AA")]
			[Address(RVA = "0x9F26A4", Offset = "0x9F26A4", VA = "0x9F26A4", Slot = "9")]
			public void Submit()
			{
			}
		}

		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Tracking.Tracker> trackers;

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0x9F1D10", Offset = "0x9F1D10", VA = "0x9F1D10", Slot = "4")]
		public Tracking.TrackingEvent Track(string eventName)
		{
			return null;
		}

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0x9F20DC", Offset = "0x9F20DC", VA = "0x9F20DC")]
		public MultiTracker()
		{
		}
	}
	[Token(Token = "0x20003CB")]
	public static class SimpleTracking
	{
		[Token(Token = "0x20003CC")]
		public struct Settings
		{
			[Token(Token = "0x4001BEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string productName;

			[Token(Token = "0x4001BEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string platform;
		}

		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool started;

		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static HTTPTracking httpTracking;

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0x9F2934", Offset = "0x9F2934", VA = "0x9F2934")]
		public static void Start(Settings settings)
		{
		}
	}
	[Token(Token = "0x20003CD")]
	public static class Tracking
	{
		[Token(Token = "0x20003CE")]
		public interface TrackingEvent
		{
			[Token(Token = "0x60019B3")]
			TrackingEvent AddParameter(string name, string value);

			[Token(Token = "0x60019B4")]
			TrackingEvent AddParameter(string name, int value);

			[Token(Token = "0x60019B5")]
			TrackingEvent AddParameter(string name, float value);

			[Token(Token = "0x60019B6")]
			TrackingEvent AddParameter(string name, double value);

			[Token(Token = "0x60019B7")]
			TrackingEvent AddParameter(string name, bool value);

			[Token(Token = "0x60019B8")]
			void Submit();
		}

		[Token(Token = "0x20003CF")]
		public interface Tracker
		{
			[Token(Token = "0x60019B9")]
			TrackingEvent Track(string eventName);
		}

		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string installationId;

		[Token(Token = "0x4001BF1")]
		private const string installationIdPrefsKey = "installationId";

		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string productId;

		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Tracker tracker;

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0x9F03B4", Offset = "0x9F03B4", VA = "0x9F03B4")]
		public static TrackingEvent Track(string eventName)
		{
			return null;
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0x9EF4C4", Offset = "0x9EF4C4", VA = "0x9EF4C4")]
		public static void RegisterTracker(Tracker newTracker)
		{
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0x9F2AEC", Offset = "0x9F2AEC", VA = "0x9F2AEC")]
		public static void DeregisterTracker(Tracker trackerToBeRemoved)
		{
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0x9F2BC4", Offset = "0x9F2BC4", VA = "0x9F2BC4")]
		public static void SetProduct(string product)
		{
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0x9F0EF4", Offset = "0x9F0EF4", VA = "0x9F0EF4")]
		public static string GetProduct()
		{
			return null;
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0x9F0F8C", Offset = "0x9F0F8C", VA = "0x9F0F8C")]
		public static string GetVersion()
		{
			return null;
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0x9F0F94", Offset = "0x9F0F94", VA = "0x9F0F94")]
		public static string GetUserId()
		{
			return null;
		}
	}
	[Token(Token = "0x20003D0")]
	public static class TrackingNames
	{
		[Token(Token = "0x4001BF4")]
		public const string eventAddPaymentInfo = "add_payment_info";

		[Token(Token = "0x4001BF5")]
		public const string eventAddToCart = "add_to_cart";

		[Token(Token = "0x4001BF6")]
		public const string eventAddToWishlist = "add_to_wishlist";

		[Token(Token = "0x4001BF7")]
		public const string eventAppOpen = "app_open";

		[Token(Token = "0x4001BF8")]
		public const string eventBeginCheckout = "begin_checkout";

		[Token(Token = "0x4001BF9")]
		public const string eventCampaignDetails = "campaign_details";

		[Token(Token = "0x4001BFA")]
		public const string eventCheckoutProgress = "checkout_progress";

		[Token(Token = "0x4001BFB")]
		public const string eventEarnVirtualCurrency = "earn_virtual_currency";

		[Token(Token = "0x4001BFC")]
		public const string eventEcommercePurchase = "ecommerce_purchase";

		[Token(Token = "0x4001BFD")]
		public const string eventGenerateLead = "generate_lead";

		[Token(Token = "0x4001BFE")]
		public const string eventJoinGroup = "join_group";

		[Token(Token = "0x4001BFF")]
		public const string eventLevelUp = "level_up";

		[Token(Token = "0x4001C00")]
		public const string eventLogin = "login";

		[Token(Token = "0x4001C01")]
		public const string eventPostScore = "post_score";

		[Token(Token = "0x4001C02")]
		public const string eventPresentOffer = "present_offer";

		[Token(Token = "0x4001C03")]
		public const string eventPurchaseRefund = "purchase_refund";

		[Token(Token = "0x4001C04")]
		public const string eventRemoveFromCart = "remove_from_cart";

		[Token(Token = "0x4001C05")]
		public const string eventSearch = "search";

		[Token(Token = "0x4001C06")]
		public const string eventSelectContent = "select_content";

		[Token(Token = "0x4001C07")]
		public const string eventSetCheckoutOption = "set_checkout_option";

		[Token(Token = "0x4001C08")]
		public const string eventShare = "share";

		[Token(Token = "0x4001C09")]
		public const string eventSignUp = "sign_up";

		[Token(Token = "0x4001C0A")]
		public const string eventSpendVirtualCurrency = "spend_virtual_currency";

		[Token(Token = "0x4001C0B")]
		public const string eventTutorialBegin = "tutorial_begin";

		[Token(Token = "0x4001C0C")]
		public const string eventTutorialComplete = "tutorial_complete";

		[Token(Token = "0x4001C0D")]
		public const string eventUnlockAchievement = "unlock_achievement";

		[Token(Token = "0x4001C0E")]
		public const string eventViewItem = "view_item";

		[Token(Token = "0x4001C0F")]
		public const string eventViewItemList = "view_item_list";

		[Token(Token = "0x4001C10")]
		public const string eventViewSearchResults = "view_search_results";

		[Token(Token = "0x4001C11")]
		public const string parameterAchievementId = "achievement_id";

		[Token(Token = "0x4001C12")]
		public const string parameterAdNetworkClickID = "aclid";

		[Token(Token = "0x4001C13")]
		public const string parameterAffiliation = "affiliation";

		[Token(Token = "0x4001C14")]
		public const string parameterCampaign = "campaign";

		[Token(Token = "0x4001C15")]
		public const string parameterCharacter = "character";

		[Token(Token = "0x4001C16")]
		public const string parameterCheckoutOption = "checkout_option";

		[Token(Token = "0x4001C17")]
		public const string parameterCheckoutStep = "checkout_step";

		[Token(Token = "0x4001C18")]
		public const string parameterContent = "content";

		[Token(Token = "0x4001C19")]
		public const string parameterContentType = "content_type";

		[Token(Token = "0x4001C1A")]
		public const string parameterCoupon = "coupon";

		[Token(Token = "0x4001C1B")]
		public const string parameterCP1 = "cp1";

		[Token(Token = "0x4001C1C")]
		public const string parameterCreativeName = "creative_name";

		[Token(Token = "0x4001C1D")]
		public const string parameterCreativeSlot = "creative_slot";

		[Token(Token = "0x4001C1E")]
		public const string parameterCurrency = "currency";

		[Token(Token = "0x4001C1F")]
		public const string parameterDestination = "destination";

		[Token(Token = "0x4001C20")]
		public const string parameterEndDate = "end_date";

		[Token(Token = "0x4001C21")]
		public const string parameterFlightNumber = "flight_number";

		[Token(Token = "0x4001C22")]
		public const string parameterGroupId = "group_id";

		[Token(Token = "0x4001C23")]
		public const string parameterItemBrand = "item_brand";

		[Token(Token = "0x4001C24")]
		public const string parameterItemCategory = "item_category";

		[Token(Token = "0x4001C25")]
		public const string parameterItemId = "item_id";

		[Token(Token = "0x4001C26")]
		public const string parameterItemList = "item_list";

		[Token(Token = "0x4001C27")]
		public const string parameterItemLocationId = "item_location_id";

		[Token(Token = "0x4001C28")]
		public const string parameterItemName = "item_name";

		[Token(Token = "0x4001C29")]
		public const string parameterItemVariant = "item_variant";

		[Token(Token = "0x4001C2A")]
		public const string parameterLevel = "level";

		[Token(Token = "0x4001C2B")]
		public const string parameterLocation = "location";

		[Token(Token = "0x4001C2C")]
		public const string parameterMedium = "medium";

		[Token(Token = "0x4001C2D")]
		public const string parameterNumberOfNights = "number_of_nights";

		[Token(Token = "0x4001C2E")]
		public const string parameterNumberOfPassengers = "number_of_passengers";

		[Token(Token = "0x4001C2F")]
		public const string parameterNumberOfRooms = "number_of_rooms";

		[Token(Token = "0x4001C30")]
		public const string parameterOrigin = "origin";

		[Token(Token = "0x4001C31")]
		public const string parameterPrice = "price";

		[Token(Token = "0x4001C32")]
		public const string parameterQuantity = "quantity";

		[Token(Token = "0x4001C33")]
		public const string parameterScore = "score";

		[Token(Token = "0x4001C34")]
		public const string parameterSearchTerm = "search_term";

		[Token(Token = "0x4001C35")]
		public const string parameterShipping = "shipping";

		[Token(Token = "0x4001C36")]
		public const string parameterSignUpMethod = "sign_up_method";

		[Token(Token = "0x4001C37")]
		public const string parameterSource = "source";

		[Token(Token = "0x4001C38")]
		public const string parameterStartDate = "start_date";

		[Token(Token = "0x4001C39")]
		public const string parameterTax = "tax";

		[Token(Token = "0x4001C3A")]
		public const string parameterTerm = "term";

		[Token(Token = "0x4001C3B")]
		public const string parameterTransactionId = "transaction_id";

		[Token(Token = "0x4001C3C")]
		public const string parameterTravelClass = "travel_class";

		[Token(Token = "0x4001C3D")]
		public const string parameterValue = "value";

		[Token(Token = "0x4001C3E")]
		public const string parameterVirtualCurrencyName = "virtual_currency_name";

		[Token(Token = "0x4001C3F")]
		public const string userPropertySignUpMethod = "sign_up_method";
	}
	[Token(Token = "0x20003D1")]
	public class TrackingPlatformNames
	{
		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string Quest;

		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string Quest2;

		[Token(Token = "0x4001C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string Rift;

		[Token(Token = "0x4001C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string SteamVR;

		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string Windows;

		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static string[] SuggestedPlarformNames;

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0x9F2C10", Offset = "0x9F2C10", VA = "0x9F2C10")]
		public TrackingPlatformNames()
		{
		}
	}
	[Token(Token = "0x20003D2")]
	public class FollowPose : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("The object to follow if not main camera")]
		public Transform objectToFollow;

		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[Tooltip("How long it takes for the object to settle at the target object's position")]
		private float movementSmoothTime;

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[Tooltip("How long it takes for the object to settle at the target object's rotation")]
		private float rotationSmoothTime;

		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("Offset from target object's global position")]
		[SerializeField]
		private Vector3 globalPositionOffset;

		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[Tooltip("Offset from target object's local position")]
		private Vector3 localPositionOffset;

		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[Tooltip("Offset from target object's local position")]
		private Vector3 rotationOffset;

		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[Tooltip("Make sure the horizon stays straight")]
		private bool keepHorizontal;

		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private new Transform transform;

		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 movementVelocity;

		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Quaternion rotationVelocity;

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0x9F2E1C", Offset = "0x9F2E1C", VA = "0x9F2E1C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0x9F2E38", Offset = "0x9F2E38", VA = "0x9F2E38")]
		private void Update()
		{
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0x9F3194", Offset = "0x9F3194", VA = "0x9F3194")]
		private static Quaternion SmoothDamp(Quaternion rot, Quaternion target, ref Quaternion deriv, float time)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0x9F3408", Offset = "0x9F3408", VA = "0x9F3408")]
		public FollowPose()
		{
		}
	}
	[Token(Token = "0x20003D3")]
	public class VideoSlate : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode visibilityKey;

		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public KeyCode slateKey;

		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GUIStyle guiStyle;

		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int framesLeft;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Texture2D bgTexture;

		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int slateNumber;

		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool showSlateNumber;

		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AudioSource audioSource;

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0x9F34A0", Offset = "0x9F34A0", VA = "0x9F34A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019C1")]
		[Address(RVA = "0x9F35F4", Offset = "0x9F35F4", VA = "0x9F35F4")]
		private void Update()
		{
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0x9F36C0", Offset = "0x9F36C0", VA = "0x9F36C0")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0x9F3A88", Offset = "0x9F3A88", VA = "0x9F3A88")]
		public VideoSlate()
		{
		}
	}
}
namespace RGCommon.Network
{
	[Token(Token = "0x20003D4")]
	public interface NetworkConnectionProxy
	{
		[Token(Token = "0x60019C4")]
		void Connect(string networkProtocolVersion);

		[Token(Token = "0x60019C5")]
		void JoinLobby(string lobbyName);

		[Token(Token = "0x60019C6")]
		void JoinRoom(string roomCode);

		[Token(Token = "0x60019C7")]
		void LeaveRoom(string roomCode);

		[Token(Token = "0x60019C8")]
		void Reconnect();

		[Token(Token = "0x60019C9")]
		void RejoinRoom(string roomCode);

		[Token(Token = "0x60019CA")]
		void CreateRoom(string roomCode, int maxPlayers, bool isVisible);

		[Token(Token = "0x60019CB")]
		int GetPingRoundtripTime();

		[Token(Token = "0x60019CC")]
		int GetReliableSendsCount();

		[Token(Token = "0x60019CD")]
		int GetReliableResendsCount();

		[Token(Token = "0x60019CE")]
		double GetTime();

		[Token(Token = "0x60019CF")]
		void Disconnect();

		[Token(Token = "0x60019D0")]
		float GetSerializationRate();

		[Token(Token = "0x60019D1")]
		Dictionary<NetworkingRegion, int> GetRegionPings();
	}
	[Token(Token = "0x20003D5")]
	public enum NetworkConnectionState
	{
		[Token(Token = "0x4001C59")]
		Disconnected,
		[Token(Token = "0x4001C5A")]
		Connected,
		[Token(Token = "0x4001C5B")]
		Joined,
		[Token(Token = "0x4001C5C")]
		Connecting,
		[Token(Token = "0x4001C5D")]
		Joining,
		[Token(Token = "0x4001C5E")]
		Leaving,
		[Token(Token = "0x4001C5F")]
		CreatingRoom,
		[Token(Token = "0x4001C60")]
		Disconnecting,
		[Token(Token = "0x4001C61")]
		JoiningLobby
	}
	[Token(Token = "0x20003D6")]
	public enum NetworkConnectionEvent
	{
		[Token(Token = "0x4001C63")]
		OnConnect,
		[Token(Token = "0x4001C64")]
		OnConnectFail,
		[Token(Token = "0x4001C65")]
		OnDisconnectError,
		[Token(Token = "0x4001C66")]
		OnDisconnectIntentional,
		[Token(Token = "0x4001C67")]
		OnJoin,
		[Token(Token = "0x4001C68")]
		OnJoinFail,
		[Token(Token = "0x4001C69")]
		OnJoinFailExpectedRejoin,
		[Token(Token = "0x4001C6A")]
		OnLeftRoom,
		[Token(Token = "0x4001C6B")]
		OnJoinedLobby,
		[Token(Token = "0x4001C6C")]
		OnCreatedRoom,
		[Token(Token = "0x4001C6D")]
		OnCreateRoomFailed,
		[Token(Token = "0x4001C6E")]
		RequestConnect,
		[Token(Token = "0x4001C6F")]
		RequestJoin,
		[Token(Token = "0x4001C70")]
		RequestLeaveRoom,
		[Token(Token = "0x4001C71")]
		RequestCreateRoom,
		[Token(Token = "0x4001C72")]
		RequestDisconnect,
		[Token(Token = "0x4001C73")]
		Tick,
		[Token(Token = "0x4001C74")]
		OnLeftLobby
	}
	[Token(Token = "0x20003D7")]
	public enum NetworkPeerEvent
	{
		[Token(Token = "0x4001C76")]
		Active,
		[Token(Token = "0x4001C77")]
		Inactive,
		[Token(Token = "0x4001C78")]
		Connect,
		[Token(Token = "0x4001C79")]
		Disconnect
	}
	[Token(Token = "0x20003D8")]
	public static class NetworkSettings
	{
		[Token(Token = "0x4001C7A")]
		public const int NUMBER_OF_TICKS_PER_PING_MEASUREMENT = 100;

		[Token(Token = "0x4001C7B")]
		public const int NUMBER_OF_PING_MEASUREMENTS = 30;

		[Token(Token = "0x4001C7C")]
		public const int APP_BACKGROUND_DISCONNECT_TIMEOUT = 0;

		[Token(Token = "0x4001C7D")]
		public const int PHOTON_NETWORK_SENDRATE = 20;

		[Token(Token = "0x4001C7E")]
		public const int PLAYER_TTL = 5000;

		[Token(Token = "0x4001C7F")]
		public const int MAX_PLAYERS = 2;

		[Token(Token = "0x4001C80")]
		public const int MAX_SPECTATORS = 8;
	}
	[Token(Token = "0x20003D9")]
	public struct PeerEvent
	{
		[Token(Token = "0x4001C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly NetworkPeerEvent networkEvent;

		[Token(Token = "0x4001C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public readonly int serverID;

		[Token(Token = "0x4001C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string userID;

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0x9F3B04", Offset = "0x9F3B04", VA = "0x9F3B04")]
		public PeerEvent(NetworkPeerEvent networkEvent, int netID, string userID)
		{
		}
	}
	[Token(Token = "0x20003DA")]
	public enum FailJoinRoomReasons
	{
		[Token(Token = "0x4001C85")]
		None,
		[Token(Token = "0x4001C86")]
		RoomDoesNotExist,
		[Token(Token = "0x4001C87")]
		RoomIsFull,
		[Token(Token = "0x4001C88")]
		FailExpectedRejoin
	}
	[Token(Token = "0x20003DB")]
	public struct PlayerNetworkData
	{
		[Token(Token = "0x4001C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly int netID;

		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string userID;

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0x9F3B10", Offset = "0x9F3B10", VA = "0x9F3B10")]
		public PlayerNetworkData(int netID, string userID)
		{
		}
	}
	[Token(Token = "0x20003DC")]
	public class NetworkData
	{
		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NetworkConnectionState networkConnectionStatePrev;

		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public NetworkConnectionState networkConnectionState;

		[Token(Token = "0x4001C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string roomCode;

		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool roomIsVisible;

		[Token(Token = "0x4001C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int maxNumberOfPlayersInRoom;

		[Token(Token = "0x4001C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isMaster;

		[Token(Token = "0x4001C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int masterID;

		[Token(Token = "0x4001C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int localPlayerServerId;

		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly Queue<NetworkConnectionEvent> networkConnectionEventQueue;

		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly Queue<PeerEvent> networkPeerEventQueue;

		[Token(Token = "0x4001C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public FailJoinRoomReasons lastJoinRoomFailReason;

		[Token(Token = "0x4001C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float serializationRate;

		[Token(Token = "0x4001C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int ticksSinceLastPing;

		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int nextPingMeasurementIndex;

		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public readonly double[] timeMeasurements;

		[Token(Token = "0x4001C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public readonly int[] pingMeasurements;

		[Token(Token = "0x4001C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public readonly int[] reliableResendMeasurements;

		[Token(Token = "0x4001C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public readonly double[] lossPerSecondMeasurements;

		[Token(Token = "0x4001C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int currentPing;

		[Token(Token = "0x4001C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public int disconnectCount;

		[Token(Token = "0x4001C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<string> rooms;

		[Token(Token = "0x4001CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool shouldJoinLobby;

		[Token(Token = "0x4001CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public string lobbyName;

		[Token(Token = "0x4001CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public NetworkingRegion selectedNetworkingRegion;

		[Token(Token = "0x4001CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int consecutiveConnectErrorCount;

		[Token(Token = "0x4001CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Dictionary<NetworkingRegion, int> regionPings;

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0x9F3B1C", Offset = "0x9F3B1C", VA = "0x9F3B1C")]
		public NetworkData()
		{
		}
	}
	[Token(Token = "0x20003DD")]
	public interface NetworkRegionSelector
	{
		[Token(Token = "0x60019D5")]
		void SelectRegion(NetworkingRegion region);

		[Token(Token = "0x60019D6")]
		NetworkingRegion GetSelectedRegion();
	}
	[Token(Token = "0x20003DE")]
	public interface NetworkRegionProvider
	{
		[Token(Token = "0x60019D7")]
		NetworkingRegion GetCurrentRegion();
	}
	[Token(Token = "0x20003DF")]
	public enum NetworkingRegion
	{
		[Token(Token = "0x4001CA6")]
		None,
		[Token(Token = "0x4001CA7")]
		Best,
		[Token(Token = "0x4001CA8")]
		EU,
		[Token(Token = "0x4001CA9")]
		US,
		[Token(Token = "0x4001CAA")]
		Asia,
		[Token(Token = "0x4001CAB")]
		Japan,
		[Token(Token = "0x4001CAC")]
		Australia,
		[Token(Token = "0x4001CAD")]
		UsWest,
		[Token(Token = "0x4001CAE")]
		SouthAmerica,
		[Token(Token = "0x4001CAF")]
		India,
		[Token(Token = "0x4001CB0")]
		CanadaEast,
		[Token(Token = "0x4001CB1")]
		SouthKorea,
		[Token(Token = "0x4001CB2")]
		Russia,
		[Token(Token = "0x4001CB3")]
		RussiaEast,
		[Token(Token = "0x4001CB4")]
		ChineseMainland,
		[Token(Token = "0x4001CB5")]
		SouthAfrica
	}
}
namespace RGCommon.VectorExtensions
{
	[Token(Token = "0x20003E0")]
	public static class VectorComponentReplacement
	{
		[Token(Token = "0x60019D8")]
		[Address(RVA = "0x9F3C9C", Offset = "0x9F3C9C", VA = "0x9F3C9C")]
		public static Vector3 WithX(this Vector3 original, float newX)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0x9F3CA4", Offset = "0x9F3CA4", VA = "0x9F3CA4")]
		public static Vector3 WithY(this Vector3 original, float newY)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0x9F3CAC", Offset = "0x9F3CAC", VA = "0x9F3CAC")]
		public static Vector3 WithZ(this Vector3 original, float newZ)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0x9F3CB4", Offset = "0x9F3CB4", VA = "0x9F3CB4")]
		public static Vector2 WithX(this Vector2 original, float newX)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0x9F3CBC", Offset = "0x9F3CBC", VA = "0x9F3CBC")]
		public static Vector2 WithY(this Vector2 original, float newY)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0x9F3CC4", Offset = "0x9F3CC4", VA = "0x9F3CC4")]
		public static Vector3 NegX(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0x9F3CCC", Offset = "0x9F3CCC", VA = "0x9F3CCC")]
		public static Vector3 NegY(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0x9F3CD4", Offset = "0x9F3CD4", VA = "0x9F3CD4")]
		public static Vector3 NegZ(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0x9F3CDC", Offset = "0x9F3CDC", VA = "0x9F3CDC")]
		public static Vector2 NegX(this Vector2 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0x9F3CE4", Offset = "0x9F3CE4", VA = "0x9F3CE4")]
		public static Vector2 NegY(this Vector2 original)
		{
			return default(Vector2);
		}
	}
	[Token(Token = "0x20003E1")]
	public static class VectorSwizzle
	{
		[Token(Token = "0x60019E2")]
		[Address(RVA = "0x9F3CEC", Offset = "0x9F3CEC", VA = "0x9F3CEC")]
		public static Vector2 Swizzle00(this Vector3 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0x9F3CF8", Offset = "0x9F3CF8", VA = "0x9F3CF8")]
		public static Vector2 Swizzle0X(this Vector3 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0x9F3D04", Offset = "0x9F3D04", VA = "0x9F3D04")]
		public static Vector2 Swizzle0Y(this Vector3 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0x9F3D0C", Offset = "0x9F3D0C", VA = "0x9F3D0C")]
		public static Vector2 Swizzle0Z(this Vector3 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0x9F3D18", Offset = "0x9F3D18", VA = "0x9F3D18")]
		public static Vector2 SwizzleX0(this Vector3 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0x9F3D20", Offset = "0x9F3D20", VA = "0x9F3D20")]
		public static Vector2 SwizzleXX(this Vector3 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0x9F3D28", Offset = "0x9F3D28", VA = "0x9F3D28")]
		public static Vector2 SwizzleXY(this Vector3 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0x9F3D2C", Offset = "0x9F3D2C", VA = "0x9F3D2C")]
		public static Vector2 SwizzleXZ(this Vector3 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0x9F3D34", Offset = "0x9F3D34", VA = "0x9F3D34")]
		public static Vector2 SwizzleY0(this Vector3 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0x9F3D40", Offset = "0x9F3D40", VA = "0x9F3D40")]
		public static Vector2 SwizzleYX(this Vector3 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0x9F3D50", Offset = "0x9F3D50", VA = "0x9F3D50")]
		public static Vector2 SwizzleYY(this Vector3 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0x9F3D58", Offset = "0x9F3D58", VA = "0x9F3D58")]
		public static Vector2 SwizzleYZ(this Vector3 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0x9F3D64", Offset = "0x9F3D64", VA = "0x9F3D64")]
		public static Vector2 SwizzleZ0(this Vector3 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0x9F3D70", Offset = "0x9F3D70", VA = "0x9F3D70")]
		public static Vector2 SwizzleZX(this Vector3 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0x9F3D7C", Offset = "0x9F3D7C", VA = "0x9F3D7C")]
		public static Vector2 SwizzleZY(this Vector3 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0x9F3D84", Offset = "0x9F3D84", VA = "0x9F3D84")]
		public static Vector2 SwizzleZZ(this Vector3 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0x9F3D90", Offset = "0x9F3D90", VA = "0x9F3D90")]
		public static Vector3 Swizzle000(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0x9F3DA0", Offset = "0x9F3DA0", VA = "0x9F3DA0")]
		public static Vector3 Swizzle00X(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0x9F3DB0", Offset = "0x9F3DB0", VA = "0x9F3DB0")]
		public static Vector3 Swizzle00Y(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0x9F3DC0", Offset = "0x9F3DC0", VA = "0x9F3DC0")]
		public static Vector3 Swizzle00Z(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0x9F3DCC", Offset = "0x9F3DCC", VA = "0x9F3DCC")]
		public static Vector3 Swizzle0X0(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0x9F3DDC", Offset = "0x9F3DDC", VA = "0x9F3DDC")]
		public static Vector3 Swizzle0XX(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0x9F3DEC", Offset = "0x9F3DEC", VA = "0x9F3DEC")]
		public static Vector3 Swizzle0XY(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0x9F3E04", Offset = "0x9F3E04", VA = "0x9F3E04")]
		public static Vector3 Swizzle0XZ(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0x9F3E10", Offset = "0x9F3E10", VA = "0x9F3E10")]
		public static Vector3 Swizzle0Y0(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0x9F3E1C", Offset = "0x9F3E1C", VA = "0x9F3E1C")]
		public static Vector3 Swizzle0YX(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0x9F3E28", Offset = "0x9F3E28", VA = "0x9F3E28")]
		public static Vector3 Swizzle0YY(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0x9F3E34", Offset = "0x9F3E34", VA = "0x9F3E34")]
		public static Vector3 Swizzle0YZ(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0x9F3E3C", Offset = "0x9F3E3C", VA = "0x9F3E3C")]
		public static Vector3 Swizzle0Z0(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0x9F3E4C", Offset = "0x9F3E4C", VA = "0x9F3E4C")]
		public static Vector3 Swizzle0ZX(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0x9F3E60", Offset = "0x9F3E60", VA = "0x9F3E60")]
		public static Vector3 Swizzle0ZY(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0x9F3E74", Offset = "0x9F3E74", VA = "0x9F3E74")]
		public static Vector3 Swizzle0ZZ(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0x9F3E80", Offset = "0x9F3E80", VA = "0x9F3E80")]
		public static Vector3 SwizzleX00(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0x9F3E8C", Offset = "0x9F3E8C", VA = "0x9F3E8C")]
		public static Vector3 SwizzleX0X(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0x9F3E98", Offset = "0x9F3E98", VA = "0x9F3E98")]
		public static Vector3 SwizzleX0Y(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0x9F3EA4", Offset = "0x9F3EA4", VA = "0x9F3EA4")]
		public static Vector3 SwizzleX0Z(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0x9F3EAC", Offset = "0x9F3EAC", VA = "0x9F3EAC")]
		public static Vector3 SwizzleXX0(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0x9F3EB8", Offset = "0x9F3EB8", VA = "0x9F3EB8")]
		public static Vector3 SwizzleXXX(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0x9F3EC4", Offset = "0x9F3EC4", VA = "0x9F3EC4")]
		public static Vector3 SwizzleXXY(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0x9F3ED0", Offset = "0x9F3ED0", VA = "0x9F3ED0")]
		public static Vector3 SwizzleXXZ(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0x9F3ED8", Offset = "0x9F3ED8", VA = "0x9F3ED8")]
		public static Vector3 SwizzleXY0(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0x9F3EE0", Offset = "0x9F3EE0", VA = "0x9F3EE0")]
		public static Vector3 SwizzleXYX(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0x9F3EE8", Offset = "0x9F3EE8", VA = "0x9F3EE8")]
		public static Vector3 SwizzleXYY(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0x9F3EF0", Offset = "0x9F3EF0", VA = "0x9F3EF0")]
		public static Vector3 SwizzleXYZ(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0x9F3EF4", Offset = "0x9F3EF4", VA = "0x9F3EF4")]
		public static Vector3 SwizzleXZ0(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0x9F3F00", Offset = "0x9F3F00", VA = "0x9F3F00")]
		public static Vector3 SwizzleXZX(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0x9F3F0C", Offset = "0x9F3F0C", VA = "0x9F3F0C")]
		public static Vector3 SwizzleXZY(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0x9F3F1C", Offset = "0x9F3F1C", VA = "0x9F3F1C")]
		public static Vector3 SwizzleXZZ(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0x9F3F24", Offset = "0x9F3F24", VA = "0x9F3F24")]
		public static Vector3 SwizzleY00(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0x9F3F34", Offset = "0x9F3F34", VA = "0x9F3F34")]
		public static Vector3 SwizzleY0X(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0x9F3F4C", Offset = "0x9F3F4C", VA = "0x9F3F4C")]
		public static Vector3 SwizzleY0Y(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0x9F3F5C", Offset = "0x9F3F5C", VA = "0x9F3F5C")]
		public static Vector3 SwizzleY0Z(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0x9F3F68", Offset = "0x9F3F68", VA = "0x9F3F68")]
		public static Vector3 SwizzleYX0(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0x9F3F7C", Offset = "0x9F3F7C", VA = "0x9F3F7C")]
		public static Vector3 SwizzleYXX(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0x9F3F8C", Offset = "0x9F3F8C", VA = "0x9F3F8C")]
		public static Vector3 SwizzleYXY(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0x9F3F9C", Offset = "0x9F3F9C", VA = "0x9F3F9C")]
		public static Vector3 SwizzleYXZ(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0x9F3FAC", Offset = "0x9F3FAC", VA = "0x9F3FAC")]
		public static Vector3 SwizzleYY0(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0x9F3FB8", Offset = "0x9F3FB8", VA = "0x9F3FB8")]
		public static Vector3 SwizzleYYX(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0x9F3FC4", Offset = "0x9F3FC4", VA = "0x9F3FC4")]
		public static Vector3 SwizzleYYY(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0x9F3FD0", Offset = "0x9F3FD0", VA = "0x9F3FD0")]
		public static Vector3 SwizzleYYZ(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0x9F3FD8", Offset = "0x9F3FD8", VA = "0x9F3FD8")]
		public static Vector3 SwizzleYZ0(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0x9F3FEC", Offset = "0x9F3FEC", VA = "0x9F3FEC")]
		public static Vector3 SwizzleYZX(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0x9F4000", Offset = "0x9F4000", VA = "0x9F4000")]
		public static Vector3 SwizzleYZY(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0x9F4010", Offset = "0x9F4010", VA = "0x9F4010")]
		public static Vector3 SwizzleYZZ(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0x9F401C", Offset = "0x9F401C", VA = "0x9F401C")]
		public static Vector3 SwizzleZ00(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0x9F402C", Offset = "0x9F402C", VA = "0x9F402C")]
		public static Vector3 SwizzleZ0X(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0x9F4040", Offset = "0x9F4040", VA = "0x9F4040")]
		public static Vector3 SwizzleZ0Y(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0x9F4054", Offset = "0x9F4054", VA = "0x9F4054")]
		public static Vector3 SwizzleZ0Z(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0x9F4060", Offset = "0x9F4060", VA = "0x9F4060")]
		public static Vector3 SwizzleZX0(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0x9F4078", Offset = "0x9F4078", VA = "0x9F4078")]
		public static Vector3 SwizzleZXX(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0x9F4088", Offset = "0x9F4088", VA = "0x9F4088")]
		public static Vector3 SwizzleZXY(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0x9F409C", Offset = "0x9F409C", VA = "0x9F409C")]
		public static Vector3 SwizzleZXZ(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0x9F40A8", Offset = "0x9F40A8", VA = "0x9F40A8")]
		public static Vector3 SwizzleZY0(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0x9F40B4", Offset = "0x9F40B4", VA = "0x9F40B4")]
		public static Vector3 SwizzleZYX(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0x9F40C4", Offset = "0x9F40C4", VA = "0x9F40C4")]
		public static Vector3 SwizzleZYY(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0x9F40D0", Offset = "0x9F40D0", VA = "0x9F40D0")]
		public static Vector3 SwizzleZYZ(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0x9F40D8", Offset = "0x9F40D8", VA = "0x9F40D8")]
		public static Vector3 SwizzleZZ0(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0x9F40E8", Offset = "0x9F40E8", VA = "0x9F40E8")]
		public static Vector3 SwizzleZZX(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0x9F40F8", Offset = "0x9F40F8", VA = "0x9F40F8")]
		public static Vector3 SwizzleZZY(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0x9F4108", Offset = "0x9F4108", VA = "0x9F4108")]
		public static Vector3 SwizzleZZZ(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0x9F4114", Offset = "0x9F4114", VA = "0x9F4114")]
		public static Vector2 Swizzle00(this Vector2 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0x9F4120", Offset = "0x9F4120", VA = "0x9F4120")]
		public static Vector2 Swizzle0X(this Vector2 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0x9F412C", Offset = "0x9F412C", VA = "0x9F412C")]
		public static Vector2 Swizzle0Y(this Vector2 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0x9F4134", Offset = "0x9F4134", VA = "0x9F4134")]
		public static Vector2 SwizzleX0(this Vector2 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0x9F413C", Offset = "0x9F413C", VA = "0x9F413C")]
		public static Vector2 SwizzleXX(this Vector2 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0x9F4144", Offset = "0x9F4144", VA = "0x9F4144")]
		public static Vector2 SwizzleXY(this Vector2 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0x9F4148", Offset = "0x9F4148", VA = "0x9F4148")]
		public static Vector2 SwizzleY0(this Vector2 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0x9F4154", Offset = "0x9F4154", VA = "0x9F4154")]
		public static Vector2 SwizzleYX(this Vector2 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0x9F4164", Offset = "0x9F4164", VA = "0x9F4164")]
		public static Vector2 SwizzleYY(this Vector2 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0x9F416C", Offset = "0x9F416C", VA = "0x9F416C")]
		public static Vector3 Swizzle000(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0x9F417C", Offset = "0x9F417C", VA = "0x9F417C")]
		public static Vector3 Swizzle00X(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0x9F418C", Offset = "0x9F418C", VA = "0x9F418C")]
		public static Vector3 Swizzle00Y(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0x9F419C", Offset = "0x9F419C", VA = "0x9F419C")]
		public static Vector3 Swizzle0X0(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0x9F41AC", Offset = "0x9F41AC", VA = "0x9F41AC")]
		public static Vector3 Swizzle0XX(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0x9F41BC", Offset = "0x9F41BC", VA = "0x9F41BC")]
		public static Vector3 Swizzle0XY(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0x9F41D4", Offset = "0x9F41D4", VA = "0x9F41D4")]
		public static Vector3 Swizzle0Y0(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0x9F41E0", Offset = "0x9F41E0", VA = "0x9F41E0")]
		public static Vector3 Swizzle0YX(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0x9F41EC", Offset = "0x9F41EC", VA = "0x9F41EC")]
		public static Vector3 Swizzle0YY(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0x9F41F8", Offset = "0x9F41F8", VA = "0x9F41F8")]
		public static Vector3 SwizzleX00(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0x9F4204", Offset = "0x9F4204", VA = "0x9F4204")]
		public static Vector3 SwizzleX0X(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0x9F4210", Offset = "0x9F4210", VA = "0x9F4210")]
		public static Vector3 SwizzleX0Y(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0x9F421C", Offset = "0x9F421C", VA = "0x9F421C")]
		public static Vector3 SwizzleXX0(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0x9F4228", Offset = "0x9F4228", VA = "0x9F4228")]
		public static Vector3 SwizzleXXX(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0x9F4234", Offset = "0x9F4234", VA = "0x9F4234")]
		public static Vector3 SwizzleXXY(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0x9F4240", Offset = "0x9F4240", VA = "0x9F4240")]
		public static Vector3 SwizzleXY0(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0x9F4248", Offset = "0x9F4248", VA = "0x9F4248")]
		public static Vector3 SwizzleXYX(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0x9F4250", Offset = "0x9F4250", VA = "0x9F4250")]
		public static Vector3 SwizzleXYY(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0x9F4258", Offset = "0x9F4258", VA = "0x9F4258")]
		public static Vector3 SwizzleY00(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0x9F4268", Offset = "0x9F4268", VA = "0x9F4268")]
		public static Vector3 SwizzleY0X(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0x9F4280", Offset = "0x9F4280", VA = "0x9F4280")]
		public static Vector3 SwizzleY0Y(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0x9F4290", Offset = "0x9F4290", VA = "0x9F4290")]
		public static Vector3 SwizzleYX0(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0x9F42A4", Offset = "0x9F42A4", VA = "0x9F42A4")]
		public static Vector3 SwizzleYXX(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0x9F42B4", Offset = "0x9F42B4", VA = "0x9F42B4")]
		public static Vector3 SwizzleYXY(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0x9F42C4", Offset = "0x9F42C4", VA = "0x9F42C4")]
		public static Vector3 SwizzleYY0(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0x9F42D0", Offset = "0x9F42D0", VA = "0x9F42D0")]
		public static Vector3 SwizzleYYX(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0x9F42DC", Offset = "0x9F42DC", VA = "0x9F42DC")]
		public static Vector3 SwizzleYYY(this Vector2 original)
		{
			return default(Vector3);
		}
	}
}
namespace RGCommon.Logging
{
	[Token(Token = "0x20003E2")]
	public interface ILogger
	{
		[Token(Token = "0x6001A56")]
		void Error(string message);

		[Token(Token = "0x6001A57")]
		void Warn(string message);

		[Token(Token = "0x6001A58")]
		void Info(string message);
	}
	[Token(Token = "0x20003E3")]
	public class DefaultLogger : ILogger
	{
		[Token(Token = "0x6001A59")]
		[Address(RVA = "0x9F42E8", Offset = "0x9F42E8", VA = "0x9F42E8", Slot = "4")]
		public void Error(string message)
		{
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0x9F4340", Offset = "0x9F4340", VA = "0x9F4340", Slot = "5")]
		public void Warn(string message)
		{
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0x9F4398", Offset = "0x9F4398", VA = "0x9F4398", Slot = "6")]
		public void Info(string message)
		{
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0x9F43F0", Offset = "0x9F43F0", VA = "0x9F43F0")]
		public DefaultLogger()
		{
		}
	}
}
namespace RGCommon.ECS
{
	[Token(Token = "0x20003E4")]
	public interface ITickable
	{
		[Token(Token = "0x6001A5D")]
		void Tick();
	}
	[Token(Token = "0x20003E5")]
	public interface IFixedTickable
	{
		[Token(Token = "0x6001A5E")]
		void FixedTick();
	}
	[Token(Token = "0x20003E6")]
	public interface ILateTickable
	{
		[Token(Token = "0x6001A5F")]
		void LateTick();
	}
}
namespace Photon
{
	[Token(Token = "0x20003E7")]
	public class MonoBehaviour : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PhotonView pvCache;

		[Token(Token = "0x1700030E")]
		public PhotonView photonView
		{
			[Token(Token = "0x6001A60")]
			[Address(RVA = "0x9F43F8", Offset = "0x9F43F8", VA = "0x9F43F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0x9F4478", Offset = "0x9F4478", VA = "0x9F4478")]
		public MonoBehaviour()
		{
		}
	}
	[Token(Token = "0x20003E8")]
	public class PunBehaviour : MonoBehaviour, IPunCallbacks
	{
		[Token(Token = "0x6001A62")]
		[Address(RVA = "0x9F4480", Offset = "0x9F4480", VA = "0x9F4480", Slot = "33")]
		public virtual void OnConnectedToPhoton()
		{
		}

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0x9F4484", Offset = "0x9F4484", VA = "0x9F4484", Slot = "34")]
		public virtual void OnLeftRoom()
		{
		}

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0x9F4488", Offset = "0x9F4488", VA = "0x9F4488", Slot = "35")]
		public virtual void OnMasterClientSwitched(PhotonPlayer newMasterClient)
		{
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0x9F448C", Offset = "0x9F448C", VA = "0x9F448C", Slot = "36")]
		public virtual void OnPhotonCreateRoomFailed(object[] codeAndMsg)
		{
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0x9F4490", Offset = "0x9F4490", VA = "0x9F4490", Slot = "37")]
		public virtual void OnPhotonJoinRoomFailed(object[] codeAndMsg)
		{
		}

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0x9F4494", Offset = "0x9F4494", VA = "0x9F4494", Slot = "38")]
		public virtual void OnCreatedRoom()
		{
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0x9F4498", Offset = "0x9F4498", VA = "0x9F4498", Slot = "39")]
		public virtual void OnJoinedLobby()
		{
		}

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0x9F449C", Offset = "0x9F449C", VA = "0x9F449C", Slot = "40")]
		public virtual void OnLeftLobby()
		{
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0x9F44A0", Offset = "0x9F44A0", VA = "0x9F44A0", Slot = "41")]
		public virtual void OnFailedToConnectToPhoton(DisconnectCause cause)
		{
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0x9F44A4", Offset = "0x9F44A4", VA = "0x9F44A4", Slot = "42")]
		public virtual void OnDisconnectedFromPhoton()
		{
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0x9F44A8", Offset = "0x9F44A8", VA = "0x9F44A8", Slot = "43")]
		public virtual void OnConnectionFail(DisconnectCause cause)
		{
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0x9F44AC", Offset = "0x9F44AC", VA = "0x9F44AC", Slot = "44")]
		public virtual void OnPhotonInstantiate(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0x9F44B0", Offset = "0x9F44B0", VA = "0x9F44B0", Slot = "45")]
		public virtual void OnReceivedRoomListUpdate()
		{
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0x9F44B4", Offset = "0x9F44B4", VA = "0x9F44B4", Slot = "46")]
		public virtual void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0x9F44B8", Offset = "0x9F44B8", VA = "0x9F44B8", Slot = "47")]
		public virtual void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
		{
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0x9F44BC", Offset = "0x9F44BC", VA = "0x9F44BC", Slot = "48")]
		public virtual void OnPhotonPlayerDisconnected(PhotonPlayer otherPlayer)
		{
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0x9F44C0", Offset = "0x9F44C0", VA = "0x9F44C0", Slot = "49")]
		public virtual void OnPhotonRandomJoinFailed(object[] codeAndMsg)
		{
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0x9F44C4", Offset = "0x9F44C4", VA = "0x9F44C4", Slot = "50")]
		public virtual void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0x9F44C8", Offset = "0x9F44C8", VA = "0x9F44C8", Slot = "51")]
		public virtual void OnPhotonMaxCccuReached()
		{
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0x9F44CC", Offset = "0x9F44CC", VA = "0x9F44CC", Slot = "52")]
		public virtual void OnPhotonCustomRoomPropertiesChanged(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0x9F44D0", Offset = "0x9F44D0", VA = "0x9F44D0", Slot = "53")]
		public virtual void OnPhotonPlayerPropertiesChanged(object[] playerAndUpdatedProps)
		{
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0x9F44D4", Offset = "0x9F44D4", VA = "0x9F44D4", Slot = "54")]
		public virtual void OnUpdatedFriendList()
		{
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0x9F44D8", Offset = "0x9F44D8", VA = "0x9F44D8", Slot = "55")]
		public virtual void OnCustomAuthenticationFailed(string debugMessage)
		{
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0x9F44DC", Offset = "0x9F44DC", VA = "0x9F44DC", Slot = "56")]
		public virtual void OnCustomAuthenticationResponse(Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0x9F44E0", Offset = "0x9F44E0", VA = "0x9F44E0", Slot = "57")]
		public virtual void OnWebRpcResponse(OperationResponse response)
		{
		}

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0x9F44E4", Offset = "0x9F44E4", VA = "0x9F44E4", Slot = "58")]
		public virtual void OnOwnershipRequest(object[] viewAndPlayer)
		{
		}

		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0x9F44E8", Offset = "0x9F44E8", VA = "0x9F44E8", Slot = "59")]
		public virtual void OnLobbyStatisticsUpdate()
		{
		}

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0x9F44EC", Offset = "0x9F44EC", VA = "0x9F44EC", Slot = "60")]
		public virtual void OnPhotonPlayerActivityChanged(PhotonPlayer otherPlayer)
		{
		}

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0x9F44F0", Offset = "0x9F44F0", VA = "0x9F44F0", Slot = "61")]
		public virtual void OnOwnershipTransfered(object[] viewAndPlayers)
		{
		}

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0x9F44F4", Offset = "0x9F44F4", VA = "0x9F44F4")]
		public PunBehaviour()
		{
		}
	}
}
namespace Photon.Realtime
{
	[Token(Token = "0x20003E9")]
	public abstract class PhotonPing : IDisposable
	{
		[Token(Token = "0x4001CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string DebugString;

		[Token(Token = "0x4001CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Successful;

		[Token(Token = "0x4001CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		protected internal bool GotResult;

		[Token(Token = "0x4001CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected internal int PingLength;

		[Token(Token = "0x4001CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected internal byte[] PingBytes;

		[Token(Token = "0x4001CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected internal byte PingId;

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0x9F44FC", Offset = "0x9F44FC", VA = "0x9F44FC", Slot = "5")]
		public virtual bool StartPing(string ip)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0x9F453C", Offset = "0x9F453C", VA = "0x9F453C", Slot = "6")]
		public virtual bool Done()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0x9F457C", Offset = "0x9F457C", VA = "0x9F457C", Slot = "7")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0x9F45BC", Offset = "0x9F45BC", VA = "0x9F45BC")]
		protected internal void Init()
		{
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0x9F45FC", Offset = "0x9F45FC", VA = "0x9F45FC")]
		protected PhotonPing()
		{
		}
	}
	[Token(Token = "0x20003EA")]
	public class PingMono : PhotonPing
	{
		[Token(Token = "0x4001CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Socket sock;

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0x9F46A4", Offset = "0x9F46A4", VA = "0x9F46A4", Slot = "5")]
		public override bool StartPing(string ip)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0x9F491C", Offset = "0x9F491C", VA = "0x9F491C", Slot = "6")]
		public override bool Done()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0x9F4A44", Offset = "0x9F4A44", VA = "0x9F4A44", Slot = "7")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0x9F4AE4", Offset = "0x9F4AE4", VA = "0x9F4AE4")]
		public PingMono()
		{
		}
	}
}
namespace ExitGames.UtilityScripts
{
	[Token(Token = "0x20003EB")]
	public class PlayerRoomIndexing : PunBehaviour
	{
		[Token(Token = "0x20003EC")]
		public delegate void RoomIndexingChanged();

		[Token(Token = "0x4001CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PlayerRoomIndexing instance;

		[Token(Token = "0x4001CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoomIndexingChanged OnRoomIndexingChanged;

		[Token(Token = "0x4001CC0")]
		public const string RoomPlayerIndexedProp = "PlayerIndexes";

		[Token(Token = "0x4001CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int[] _playerIds;

		[Token(Token = "0x4001CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private object _indexes;

		[Token(Token = "0x4001CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<int, int> _indexesLUT;

		[Token(Token = "0x4001CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<bool> _indexesPool;

		[Token(Token = "0x4001CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private PhotonPlayer _p;

		[Token(Token = "0x1700030F")]
		public int[] PlayerIds
		{
			[Token(Token = "0x6001A89")]
			[Address(RVA = "0x9F4AE8", Offset = "0x9F4AE8", VA = "0x9F4AE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0x9F4AF0", Offset = "0x9F4AF0", VA = "0x9F4AF0")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0x9F4E64", Offset = "0x9F4E64", VA = "0x9F4E64", Slot = "46")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0x9F5660", Offset = "0x9F5660", VA = "0x9F5660", Slot = "34")]
		public override void OnLeftRoom()
		{
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0x9F5664", Offset = "0x9F5664", VA = "0x9F5664", Slot = "47")]
		public override void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
		{
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0x9F56E4", Offset = "0x9F56E4", VA = "0x9F56E4", Slot = "48")]
		public override void OnPhotonPlayerDisconnected(PhotonPlayer otherPlayer)
		{
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0x9F5948", Offset = "0x9F5948", VA = "0x9F5948", Slot = "52")]
		public override void OnPhotonCustomRoomPropertiesChanged(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0x9F59CC", Offset = "0x9F59CC", VA = "0x9F59CC", Slot = "35")]
		public override void OnMasterClientSwitched(PhotonPlayer newMasterClient)
		{
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0x9F5A3C", Offset = "0x9F5A3C", VA = "0x9F5A3C")]
		public int GetRoomIndex(PhotonPlayer player)
		{
			return default(int);
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0x9F4C14", Offset = "0x9F4C14", VA = "0x9F4C14")]
		private void SanitizeIndexing(bool forceIndexing = false)
		{
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0x9F5344", Offset = "0x9F5344", VA = "0x9F5344")]
		private void RefreshData()
		{
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0x9F4EF0", Offset = "0x9F4EF0", VA = "0x9F4EF0")]
		private void AssignIndex(PhotonPlayer player)
		{
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0x9F5764", Offset = "0x9F5764", VA = "0x9F5764")]
		private void UnAssignIndex(PhotonPlayer player)
		{
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0x9F5AD4", Offset = "0x9F5AD4", VA = "0x9F5AD4")]
		public PlayerRoomIndexing()
		{
		}
	}
	[Token(Token = "0x20003ED")]
	public static class PlayerRoomIndexingExtensions
	{
		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0x9F5BD8", Offset = "0x9F5BD8", VA = "0x9F5BD8")]
		public static int GetRoomIndex(this PhotonPlayer player)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20003EE")]
	public class ButtonInsideScrollList : UnityEngine.MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x4001CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ScrollRect scrollRect;

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0x9F5CD4", Offset = "0x9F5CD4", VA = "0x9F5CD4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0x9F5D24", Offset = "0x9F5D24", VA = "0x9F5D24", Slot = "4")]
		private void UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0x9F5DC4", Offset = "0x9F5DC4", VA = "0x9F5DC4", Slot = "5")]
		private void UnityEngine.EventSystems.IPointerUpHandler.OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0x9F5E60", Offset = "0x9F5E60", VA = "0x9F5E60")]
		public ButtonInsideScrollList()
		{
		}
	}
	[Token(Token = "0x20003EF")]
	[RequireComponent(typeof(Text))]
	public class TextButtonTransition : UnityEngine.MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4001CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text _text;

		[Token(Token = "0x4001CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color NormalColor;

		[Token(Token = "0x4001CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color HoverColor;

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0x9F5E68", Offset = "0x9F5E68", VA = "0x9F5E68")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0x9F5EB8", Offset = "0x9F5EB8", VA = "0x9F5EB8", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0x9F5EE8", Offset = "0x9F5EE8", VA = "0x9F5EE8", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0x9F5F18", Offset = "0x9F5F18", VA = "0x9F5F18")]
		public TextButtonTransition()
		{
		}
	}
	[Token(Token = "0x20003F0")]
	[RequireComponent(typeof(Text))]
	public class TextToggleIsOnTransition : UnityEngine.MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4001CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle toggle;

		[Token(Token = "0x4001CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text _text;

		[Token(Token = "0x4001CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color NormalOnColor;

		[Token(Token = "0x4001CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color NormalOffColor;

		[Token(Token = "0x4001CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color HoverOnColor;

		[Token(Token = "0x4001CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color HoverOffColor;

		[Token(Token = "0x4001CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isHover;

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0x9F5F30", Offset = "0x9F5F30", VA = "0x9F5F30")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0x9F5FFC", Offset = "0x9F5FFC", VA = "0x9F5FFC")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0x9F60A4", Offset = "0x9F60A4", VA = "0x9F60A4")]
		public void OnValueChanged(bool isOn)
		{
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0x9F6140", Offset = "0x9F6140", VA = "0x9F6140", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0x9F61B4", Offset = "0x9F61B4", VA = "0x9F61B4", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0x9F6224", Offset = "0x9F6224", VA = "0x9F6224")]
		public TextToggleIsOnTransition()
		{
		}
	}
}
namespace ExitGames.Client.Photon.Chat
{
	[Token(Token = "0x20003F1")]
	public class ChannelCreationOptions
	{
		[Token(Token = "0x4001CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ChannelCreationOptions Default;

		[Token(Token = "0x17000310")]
		public bool PublishSubscribers
		{
			[Token(Token = "0x6001AAA")]
			[Address(RVA = "0x9F6248", Offset = "0x9F6248", VA = "0x9F6248")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AAB")]
			[Address(RVA = "0x9F6250", Offset = "0x9F6250", VA = "0x9F6250")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000311")]
		public int MaxSubscribers
		{
			[Token(Token = "0x6001AAC")]
			[Address(RVA = "0x9F625C", Offset = "0x9F625C", VA = "0x9F625C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001AAD")]
			[Address(RVA = "0x9F6264", Offset = "0x9F6264", VA = "0x9F6264")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0x9F626C", Offset = "0x9F626C", VA = "0x9F626C")]
		public ChannelCreationOptions()
		{
		}
	}
	[Token(Token = "0x20003F2")]
	public class ChannelWellKnownProperties
	{
		[Token(Token = "0x4001CD4")]
		public const byte MaxSubscribers = byte.MaxValue;

		[Token(Token = "0x4001CD5")]
		public const byte PublishSubscribers = 254;

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0x9F62D8", Offset = "0x9F62D8", VA = "0x9F62D8")]
		public ChannelWellKnownProperties()
		{
		}
	}
	[Token(Token = "0x20003F3")]
	public class ChatChannel
	{
		[Token(Token = "0x4001CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Name;

		[Token(Token = "0x4001CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly List<string> Senders;

		[Token(Token = "0x4001CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly List<object> Messages;

		[Token(Token = "0x4001CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int MessageLimit;

		[Token(Token = "0x4001CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<object, object> properties;

		[Token(Token = "0x4001CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly HashSet<string> Subscribers;

		[Token(Token = "0x17000312")]
		public bool IsPrivate
		{
			[Token(Token = "0x6001AB1")]
			[Address(RVA = "0x9F62E0", Offset = "0x9F62E0", VA = "0x9F62E0")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AB2")]
			[Address(RVA = "0x9F62E8", Offset = "0x9F62E8", VA = "0x9F62E8")]
			[CompilerGenerated]
			protected internal set
			{
			}
		}

		[Token(Token = "0x17000313")]
		public int MessageCount
		{
			[Token(Token = "0x6001AB3")]
			[Address(RVA = "0x9F62F4", Offset = "0x9F62F4", VA = "0x9F62F4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000314")]
		public int LastMsgId
		{
			[Token(Token = "0x6001AB4")]
			[Address(RVA = "0x9F633C", Offset = "0x9F633C", VA = "0x9F633C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001AB5")]
			[Address(RVA = "0x9F6344", Offset = "0x9F6344", VA = "0x9F6344")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x17000315")]
		public bool PublishSubscribers
		{
			[Token(Token = "0x6001AB6")]
			[Address(RVA = "0x9F634C", Offset = "0x9F634C", VA = "0x9F634C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AB7")]
			[Address(RVA = "0x9F6354", Offset = "0x9F6354", VA = "0x9F6354")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x17000316")]
		public int MaxSubscribers
		{
			[Token(Token = "0x6001AB8")]
			[Address(RVA = "0x9F6360", Offset = "0x9F6360", VA = "0x9F6360")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001AB9")]
			[Address(RVA = "0x9F6368", Offset = "0x9F6368", VA = "0x9F6368")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0x9F6370", Offset = "0x9F6370", VA = "0x9F6370")]
		public ChatChannel(string name)
		{
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0x9F6488", Offset = "0x9F6488", VA = "0x9F6488")]
		public void Add(string sender, object message, int msgId)
		{
		}

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0x9F6670", Offset = "0x9F6670", VA = "0x9F6670")]
		public void Add(string[] senders, object[] messages, int lastMsgId)
		{
		}

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0x9F65B4", Offset = "0x9F65B4", VA = "0x9F65B4")]
		public void TruncateMessages()
		{
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0x9F670C", Offset = "0x9F670C", VA = "0x9F670C")]
		public void ClearMessages()
		{
		}

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0x9F67B4", Offset = "0x9F67B4", VA = "0x9F67B4")]
		public string ToStringMessages()
		{
			return null;
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0x9F68F0", Offset = "0x9F68F0", VA = "0x9F68F0")]
		internal void ReadProperties(Dictionary<object, object> newProperties)
		{
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0x9F6D34", Offset = "0x9F6D34", VA = "0x9F6D34")]
		internal bool TryAddSubscriber(string user)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0x9F6DD8", Offset = "0x9F6DD8", VA = "0x9F6DD8")]
		internal void AddSubscribers(string[] users)
		{
		}
	}
	[Token(Token = "0x20003F4")]
	public class ChatClient : IPhotonPeerListener
	{
		[Token(Token = "0x4001CE0")]
		private const int FriendRequestListMax = 1024;

		[Token(Token = "0x4001CE1")]
		public const int DefaultMaxSubscribers = 100;

		[Token(Token = "0x4001CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string chatRegion;

		[Token(Token = "0x4001CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int MessageLimit;

		[Token(Token = "0x4001CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly Dictionary<string, ChatChannel> PublicChannels;

		[Token(Token = "0x4001CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public readonly Dictionary<string, ChatChannel> PrivateChannels;

		[Token(Token = "0x4001CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly HashSet<string> PublicChannelsUnsubscribing;

		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly IChatClientListener listener;

		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ChatPeer chatPeer;

		[Token(Token = "0x4001CF0")]
		private const string ChatAppName = "chat";

		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool didAuthenticate;

		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int msDeltaForServiceCalls;

		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int msTimestampOfLastServiceCall;

		[Token(Token = "0x17000317")]
		public string NameServerAddress
		{
			[Token(Token = "0x6001AC3")]
			[Address(RVA = "0x9F6E40", Offset = "0x9F6E40", VA = "0x9F6E40")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AC4")]
			[Address(RVA = "0x9F6E48", Offset = "0x9F6E48", VA = "0x9F6E48")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000318")]
		public string FrontendAddress
		{
			[Token(Token = "0x6001AC5")]
			[Address(RVA = "0x9F6E50", Offset = "0x9F6E50", VA = "0x9F6E50")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AC6")]
			[Address(RVA = "0x9F6E58", Offset = "0x9F6E58", VA = "0x9F6E58")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000319")]
		public string ChatRegion
		{
			[Token(Token = "0x6001AC7")]
			[Address(RVA = "0x9F6E60", Offset = "0x9F6E60", VA = "0x9F6E60")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AC8")]
			[Address(RVA = "0x9F6E68", Offset = "0x9F6E68", VA = "0x9F6E68")]
			set
			{
			}
		}

		[Token(Token = "0x1700031A")]
		public ChatState State
		{
			[Token(Token = "0x6001AC9")]
			[Address(RVA = "0x9F6E70", Offset = "0x9F6E70", VA = "0x9F6E70")]
			[CompilerGenerated]
			get
			{
				return default(ChatState);
			}
			[Token(Token = "0x6001ACA")]
			[Address(RVA = "0x9F6E78", Offset = "0x9F6E78", VA = "0x9F6E78")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700031B")]
		public ChatDisconnectCause DisconnectedCause
		{
			[Token(Token = "0x6001ACB")]
			[Address(RVA = "0x9F6E80", Offset = "0x9F6E80", VA = "0x9F6E80")]
			[CompilerGenerated]
			get
			{
				return default(ChatDisconnectCause);
			}
			[Token(Token = "0x6001ACC")]
			[Address(RVA = "0x9F6E88", Offset = "0x9F6E88", VA = "0x9F6E88")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700031C")]
		public bool CanChat
		{
			[Token(Token = "0x6001ACD")]
			[Address(RVA = "0x9F6E90", Offset = "0x9F6E90", VA = "0x9F6E90")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700031D")]
		private bool HasPeer
		{
			[Token(Token = "0x6001ACF")]
			[Address(RVA = "0x9F6EB4", Offset = "0x9F6EB4", VA = "0x9F6EB4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700031E")]
		public string AppVersion
		{
			[Token(Token = "0x6001AD0")]
			[Address(RVA = "0x9F6F70", Offset = "0x9F6F70", VA = "0x9F6F70")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AD1")]
			[Address(RVA = "0x9F6F78", Offset = "0x9F6F78", VA = "0x9F6F78")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700031F")]
		public string AppId
		{
			[Token(Token = "0x6001AD2")]
			[Address(RVA = "0x9F6F80", Offset = "0x9F6F80", VA = "0x9F6F80")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AD3")]
			[Address(RVA = "0x9F6F88", Offset = "0x9F6F88", VA = "0x9F6F88")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000320")]
		public AuthenticationValues AuthValues
		{
			[Token(Token = "0x6001AD4")]
			[Address(RVA = "0x9F6F90", Offset = "0x9F6F90", VA = "0x9F6F90")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AD5")]
			[Address(RVA = "0x9F6F98", Offset = "0x9F6F98", VA = "0x9F6F98")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000321")]
		public string UserId
		{
			[Token(Token = "0x6001AD6")]
			[Address(RVA = "0x9F6FA0", Offset = "0x9F6FA0", VA = "0x9F6FA0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AD7")]
			[Address(RVA = "0x9F6FB8", Offset = "0x9F6FB8", VA = "0x9F6FB8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000322")]
		public bool UseBackgroundWorkerForSending
		{
			[Token(Token = "0x6001AD8")]
			[Address(RVA = "0x9F7040", Offset = "0x9F7040", VA = "0x9F7040")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AD9")]
			[Address(RVA = "0x9F7048", Offset = "0x9F7048", VA = "0x9F7048")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000323")]
		public ConnectionProtocol TransportProtocol
		{
			[Token(Token = "0x6001ADA")]
			[Address(RVA = "0x9F7054", Offset = "0x9F7054", VA = "0x9F7054")]
			get
			{
				return default(ConnectionProtocol);
			}
			[Token(Token = "0x6001ADB")]
			[Address(RVA = "0x9F7070", Offset = "0x9F7070", VA = "0x9F7070")]
			set
			{
			}
		}

		[Token(Token = "0x17000324")]
		public Dictionary<ConnectionProtocol, Type> SocketImplementationConfig
		{
			[Token(Token = "0x6001ADC")]
			[Address(RVA = "0x9F7210", Offset = "0x9F7210", VA = "0x9F7210")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000325")]
		public DebugLevel DebugOut
		{
			[Token(Token = "0x6001AF8")]
			[Address(RVA = "0x9F76D0", Offset = "0x9F76D0", VA = "0x9F76D0")]
			get
			{
				return default(DebugLevel);
			}
			[Token(Token = "0x6001AF7")]
			[Address(RVA = "0x9F920C", Offset = "0x9F920C", VA = "0x9F920C")]
			set
			{
			}
		}

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0x9F6EC4", Offset = "0x9F6EC4", VA = "0x9F6EC4")]
		public bool CanChatInChannel(string channelName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0x9F722C", Offset = "0x9F722C", VA = "0x9F722C")]
		public ChatClient(IChatClientListener listener, ConnectionProtocol protocol = ConnectionProtocol.Udp)
		{
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0x9F73FC", Offset = "0x9F73FC", VA = "0x9F73FC")]
		public bool Connect(string appId, string appVersion, AuthenticationValues authValues)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0x9F780C", Offset = "0x9F780C", VA = "0x9F780C")]
		public void Service()
		{
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0x9F7884", Offset = "0x9F7884", VA = "0x9F7884")]
		private bool SendOutgoingInBackground()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0x9F78B8", Offset = "0x9F78B8", VA = "0x9F78B8")]
		[Obsolete("Better use UseBackgroundWorkerForSending and Service().")]
		public void SendAcksOnly()
		{
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0x9F78D4", Offset = "0x9F78D4", VA = "0x9F78D4")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0x9F7918", Offset = "0x9F7918", VA = "0x9F7918")]
		public void StopThread()
		{
		}

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0x9F7930", Offset = "0x9F7930", VA = "0x9F7930")]
		public bool Subscribe(string[] channels)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0x9F7938", Offset = "0x9F7938", VA = "0x9F7938")]
		public bool Subscribe(string[] channels, int messagesFromHistory)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0x9F7C34", Offset = "0x9F7C34", VA = "0x9F7C34")]
		public bool Subscribe(string[] channels, int[] lastMsgIds)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0x9F801C", Offset = "0x9F801C", VA = "0x9F801C")]
		public bool Unsubscribe(string[] channels)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0x9F8218", Offset = "0x9F8218", VA = "0x9F8218")]
		public bool PublishMessage(string channelName, object message, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0x9F84E4", Offset = "0x9F84E4", VA = "0x9F84E4")]
		internal bool PublishMessageUnreliable(string channelName, object message, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0x9F8224", Offset = "0x9F8224", VA = "0x9F8224")]
		private bool publishMessage(string channelName, object message, bool reliable, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0x9F84F0", Offset = "0x9F84F0", VA = "0x9F84F0")]
		public bool SendPrivateMessage(string target, object message, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0x9F8500", Offset = "0x9F8500", VA = "0x9F8500")]
		public bool SendPrivateMessage(string target, object message, bool encrypt, bool forwardAsWebhook)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0x9F87DC", Offset = "0x9F87DC", VA = "0x9F87DC")]
		internal bool SendPrivateMessageUnreliable(string target, object message, bool encrypt, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0x9F8510", Offset = "0x9F8510", VA = "0x9F8510")]
		private bool sendPrivateMessage(string target, object message, bool encrypt, bool reliable, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0x9F87EC", Offset = "0x9F87EC", VA = "0x9F87EC")]
		private bool SetOnlineStatus(int status, object message, bool skipMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0x9F8A54", Offset = "0x9F8A54", VA = "0x9F8A54")]
		public bool SetOnlineStatus(int status)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0x9F8A60", Offset = "0x9F8A60", VA = "0x9F8A60")]
		public bool SetOnlineStatus(int status, object message)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0x9F8A68", Offset = "0x9F8A68", VA = "0x9F8A68")]
		public bool AddFriends(string[] friends)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0x9F8D80", Offset = "0x9F8D80", VA = "0x9F8D80")]
		public bool RemoveFriends(string[] friends)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0x9F9098", Offset = "0x9F9098", VA = "0x9F9098")]
		public string GetPrivateChannelNameByUser(string userName)
		{
			return null;
		}

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0x9F90FC", Offset = "0x9F90FC", VA = "0x9F90FC")]
		public bool TryGetChannel(string channelName, bool isPrivate, out ChatChannel channel)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0x9F9174", Offset = "0x9F9174", VA = "0x9F9174")]
		public bool TryGetChannel(string channelName, out ChatChannel channel)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0x9F9228", Offset = "0x9F9228", VA = "0x9F9228", Slot = "4")]
		private void ExitGames.Client.Photon.IPhotonPeerListener.DebugReturn(DebugLevel level, string message)
		{
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0x9F92E0", Offset = "0x9F92E0", VA = "0x9F92E0", Slot = "7")]
		private void ExitGames.Client.Photon.IPhotonPeerListener.OnEvent(EventData eventData)
		{
		}

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0x9FA7DC", Offset = "0x9FA7DC", VA = "0x9FA7DC", Slot = "5")]
		private void ExitGames.Client.Photon.IPhotonPeerListener.OnOperationResponse(OperationResponse operationResponse)
		{
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0x9FAF4C", Offset = "0x9FAF4C", VA = "0x9FAF4C", Slot = "6")]
		private void ExitGames.Client.Photon.IPhotonPeerListener.OnStatusChanged(StatusCode statusCode)
		{
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0x9F7AE4", Offset = "0x9F7AE4", VA = "0x9F7AE4")]
		private bool SendChannelOperation(string[] channels, byte operation, int historyLength)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0x9F9684", Offset = "0x9F9684", VA = "0x9F9684")]
		private void HandlePrivateMessageEvent(EventData eventData)
		{
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0x9F9350", Offset = "0x9F9350", VA = "0x9F9350")]
		private void HandleChatMessagesEvent(EventData eventData)
		{
		}

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0x9F9B0C", Offset = "0x9F9B0C", VA = "0x9F9B0C")]
		private void HandleSubscribeEvent(EventData eventData)
		{
		}

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0x9F9EDC", Offset = "0x9F9EDC", VA = "0x9F9EDC")]
		private void HandleUnsubscribeEvent(EventData eventData)
		{
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0x9FA9F0", Offset = "0x9FA9F0", VA = "0x9FA9F0")]
		private void HandleAuthResponse(OperationResponse operationResponse)
		{
		}

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0x9F9944", Offset = "0x9F9944", VA = "0x9F9944")]
		private void HandleStatusUpdate(EventData eventData)
		{
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0x9FB86C", Offset = "0x9FB86C", VA = "0x9FB86C")]
		private void ConnectToFrontEnd()
		{
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0x9FB64C", Offset = "0x9FB64C", VA = "0x9FB64C")]
		private bool AuthenticateOnFrontEnd()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0x9FA4F4", Offset = "0x9FA4F4", VA = "0x9FA4F4")]
		private void HandleUserUnsubscribedEvent(EventData eventData)
		{
		}

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0x9FA070", Offset = "0x9FA070", VA = "0x9FA070")]
		private void HandleUserSubscribedEvent(EventData eventData)
		{
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0x9FB988", Offset = "0x9FB988", VA = "0x9FB988")]
		public bool Subscribe(string channel, int lastMsgId = 0, int messagesFromHistory = -1, [Optional] ChannelCreationOptions creationOptions)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003F5")]
	public enum ChatDisconnectCause
	{
		[Token(Token = "0x4001CF6")]
		None,
		[Token(Token = "0x4001CF7")]
		DisconnectByServerUserLimit,
		[Token(Token = "0x4001CF8")]
		ExceptionOnConnect,
		[Token(Token = "0x4001CF9")]
		DisconnectByServer,
		[Token(Token = "0x4001CFA")]
		TimeoutDisconnect,
		[Token(Token = "0x4001CFB")]
		Exception,
		[Token(Token = "0x4001CFC")]
		InvalidAuthentication,
		[Token(Token = "0x4001CFD")]
		MaxCcuReached,
		[Token(Token = "0x4001CFE")]
		InvalidRegion,
		[Token(Token = "0x4001CFF")]
		OperationNotAllowedInCurrentState,
		[Token(Token = "0x4001D00")]
		CustomAuthenticationFailed
	}
	[Token(Token = "0x20003F6")]
	public class ChatEventCode
	{
		[Token(Token = "0x4001D01")]
		public const byte ChatMessages = 0;

		[Token(Token = "0x4001D02")]
		public const byte Users = 1;

		[Token(Token = "0x4001D03")]
		public const byte PrivateMessage = 2;

		[Token(Token = "0x4001D04")]
		public const byte FriendsList = 3;

		[Token(Token = "0x4001D05")]
		public const byte StatusUpdate = 4;

		[Token(Token = "0x4001D06")]
		public const byte Subscribe = 5;

		[Token(Token = "0x4001D07")]
		public const byte Unsubscribe = 6;

		[Token(Token = "0x4001D08")]
		public const byte UserSubscribed = 8;

		[Token(Token = "0x4001D09")]
		public const byte UserUnsubscribed = 9;

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0x9FC098", Offset = "0x9FC098", VA = "0x9FC098")]
		public ChatEventCode()
		{
		}
	}
	[Token(Token = "0x20003F7")]
	public class ChatOperationCode
	{
		[Token(Token = "0x4001D0A")]
		public const byte Authenticate = 230;

		[Token(Token = "0x4001D0B")]
		public const byte Subscribe = 0;

		[Token(Token = "0x4001D0C")]
		public const byte Unsubscribe = 1;

		[Token(Token = "0x4001D0D")]
		public const byte Publish = 2;

		[Token(Token = "0x4001D0E")]
		public const byte SendPrivate = 3;

		[Token(Token = "0x4001D0F")]
		public const byte ChannelHistory = 4;

		[Token(Token = "0x4001D10")]
		public const byte UpdateStatus = 5;

		[Token(Token = "0x4001D11")]
		public const byte AddFriends = 6;

		[Token(Token = "0x4001D12")]
		public const byte RemoveFriends = 7;

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0x9FC0A0", Offset = "0x9FC0A0", VA = "0x9FC0A0")]
		public ChatOperationCode()
		{
		}
	}
	[Token(Token = "0x20003F8")]
	public class ChatParameterCode
	{
		[Token(Token = "0x4001D13")]
		public const byte Channels = 0;

		[Token(Token = "0x4001D14")]
		public const byte Channel = 1;

		[Token(Token = "0x4001D15")]
		public const byte Messages = 2;

		[Token(Token = "0x4001D16")]
		public const byte Message = 3;

		[Token(Token = "0x4001D17")]
		public const byte Senders = 4;

		[Token(Token = "0x4001D18")]
		public const byte Sender = 5;

		[Token(Token = "0x4001D19")]
		public const byte ChannelUserCount = 6;

		[Token(Token = "0x4001D1A")]
		public const byte UserId = 225;

		[Token(Token = "0x4001D1B")]
		public const byte MsgId = 8;

		[Token(Token = "0x4001D1C")]
		public const byte MsgIds = 9;

		[Token(Token = "0x4001D1D")]
		public const byte Secret = 221;

		[Token(Token = "0x4001D1E")]
		public const byte SubscribeResults = 15;

		[Token(Token = "0x4001D1F")]
		public const byte Status = 10;

		[Token(Token = "0x4001D20")]
		public const byte Friends = 11;

		[Token(Token = "0x4001D21")]
		public const byte SkipMessage = 12;

		[Token(Token = "0x4001D22")]
		public const byte HistoryLength = 14;

		[Token(Token = "0x4001D23")]
		public const byte WebFlags = 21;

		[Token(Token = "0x4001D24")]
		public const byte Properties = 22;

		[Token(Token = "0x4001D25")]
		public const byte ChannelSubscribers = 23;

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0x9FC0A8", Offset = "0x9FC0A8", VA = "0x9FC0A8")]
		public ChatParameterCode()
		{
		}
	}
	[Token(Token = "0x20003F9")]
	public class ChatPeer : PhotonPeer
	{
		[Token(Token = "0x4001D26")]
		public const string NameServerHost = "ns.exitgames.com";

		[Token(Token = "0x4001D27")]
		public const string NameServerHttp = "http://ns.exitgamescloud.com:80/photon/n";

		[Token(Token = "0x4001D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<ConnectionProtocol, int> ProtocolToNameServerPort;

		[Token(Token = "0x17000326")]
		public string NameServerAddress
		{
			[Token(Token = "0x6001B0C")]
			[Address(RVA = "0x9F76EC", Offset = "0x9F76EC", VA = "0x9F76EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000327")]
		internal virtual bool IsProtocolSecure
		{
			[Token(Token = "0x6001B0D")]
			[Address(RVA = "0x9FC24C", Offset = "0x9FC24C", VA = "0x9FC24C", Slot = "18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0x9F7384", Offset = "0x9F7384", VA = "0x9F7384")]
		public ChatPeer(IPhotonPeerListener listener, ConnectionProtocol protocol)
		{
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0x9FC26C", Offset = "0x9FC26C", VA = "0x9FC26C")]
		[Conditional("UNITY")]
		private void ConfigUnitySockets()
		{
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0x9FC0B0", Offset = "0x9FC0B0", VA = "0x9FC0B0")]
		private string GetNameServerAddress()
		{
			return null;
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0x9F76F0", Offset = "0x9F76F0", VA = "0x9F76F0")]
		public bool Connect()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0x9FB3A8", Offset = "0x9FB3A8", VA = "0x9FB3A8")]
		public bool AuthenticateOnNameServer(string appId, string appVersion, string region, AuthenticationValues authValues)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003FA")]
	public enum CustomAuthenticationType : byte
	{
		[Token(Token = "0x4001D2A")]
		Custom = 0,
		[Token(Token = "0x4001D2B")]
		Steam = 1,
		[Token(Token = "0x4001D2C")]
		Facebook = 2,
		[Token(Token = "0x4001D2D")]
		Oculus = 3,
		[Token(Token = "0x4001D2E")]
		PlayStation = 4,
		[Token(Token = "0x4001D2F")]
		Xbox = 5,
		[Token(Token = "0x4001D30")]
		None = byte.MaxValue
	}
	[Token(Token = "0x20003FB")]
	public class AuthenticationValues
	{
		[Token(Token = "0x4001D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private CustomAuthenticationType authType;

		[Token(Token = "0x17000328")]
		public CustomAuthenticationType AuthType
		{
			[Token(Token = "0x6001B14")]
			[Address(RVA = "0x9FC4CC", Offset = "0x9FC4CC", VA = "0x9FC4CC")]
			get
			{
				return default(CustomAuthenticationType);
			}
			[Token(Token = "0x6001B15")]
			[Address(RVA = "0x9FC4D4", Offset = "0x9FC4D4", VA = "0x9FC4D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000329")]
		public string AuthGetParameters
		{
			[Token(Token = "0x6001B16")]
			[Address(RVA = "0x9FC4DC", Offset = "0x9FC4DC", VA = "0x9FC4DC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B17")]
			[Address(RVA = "0x9FC4E4", Offset = "0x9FC4E4", VA = "0x9FC4E4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700032A")]
		public object AuthPostData
		{
			[Token(Token = "0x6001B18")]
			[Address(RVA = "0x9FC4EC", Offset = "0x9FC4EC", VA = "0x9FC4EC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B19")]
			[Address(RVA = "0x9FC4F4", Offset = "0x9FC4F4", VA = "0x9FC4F4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700032B")]
		public string Token
		{
			[Token(Token = "0x6001B1A")]
			[Address(RVA = "0x9FC4FC", Offset = "0x9FC4FC", VA = "0x9FC4FC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B1B")]
			[Address(RVA = "0x9FC504", Offset = "0x9FC504", VA = "0x9FC504")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700032C")]
		public string UserId
		{
			[Token(Token = "0x6001B1C")]
			[Address(RVA = "0x9FC50C", Offset = "0x9FC50C", VA = "0x9FC50C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B1D")]
			[Address(RVA = "0x9FC514", Offset = "0x9FC514", VA = "0x9FC514")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0x9F7030", Offset = "0x9F7030", VA = "0x9F7030")]
		public AuthenticationValues()
		{
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0x9FC51C", Offset = "0x9FC51C", VA = "0x9FC51C")]
		public AuthenticationValues(string userId)
		{
		}

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0x9FC54C", Offset = "0x9FC54C", VA = "0x9FC54C", Slot = "4")]
		public virtual void SetAuthPostData(string stringData)
		{
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0x9FC588", Offset = "0x9FC588", VA = "0x9FC588", Slot = "5")]
		public virtual void SetAuthPostData(byte[] byteData)
		{
		}

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0x9FC590", Offset = "0x9FC590", VA = "0x9FC590", Slot = "6")]
		public virtual void AddAuthParameter(string key, string value)
		{
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0x9FC764", Offset = "0x9FC764", VA = "0x9FC764", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003FC")]
	public class ParameterCode
	{
		[Token(Token = "0x4001D36")]
		public const byte ApplicationId = 224;

		[Token(Token = "0x4001D37")]
		public const byte Secret = 221;

		[Token(Token = "0x4001D38")]
		public const byte AppVersion = 220;

		[Token(Token = "0x4001D39")]
		public const byte ClientAuthenticationType = 217;

		[Token(Token = "0x4001D3A")]
		public const byte ClientAuthenticationParams = 216;

		[Token(Token = "0x4001D3B")]
		public const byte ClientAuthenticationData = 214;

		[Token(Token = "0x4001D3C")]
		public const byte Region = 210;

		[Token(Token = "0x4001D3D")]
		public const byte Address = 230;

		[Token(Token = "0x4001D3E")]
		public const byte UserId = 225;

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0x9FC7FC", Offset = "0x9FC7FC", VA = "0x9FC7FC")]
		public ParameterCode()
		{
		}
	}
	[Token(Token = "0x20003FD")]
	public class ErrorCode
	{
		[Token(Token = "0x4001D3F")]
		public const int Ok = 0;

		[Token(Token = "0x4001D40")]
		public const int OperationNotAllowedInCurrentState = -3;

		[Token(Token = "0x4001D41")]
		public const int InvalidOperationCode = -2;

		[Token(Token = "0x4001D42")]
		public const int InternalServerError = -1;

		[Token(Token = "0x4001D43")]
		public const int InvalidAuthentication = 32767;

		[Token(Token = "0x4001D44")]
		public const int GameIdAlreadyExists = 32766;

		[Token(Token = "0x4001D45")]
		public const int GameFull = 32765;

		[Token(Token = "0x4001D46")]
		public const int GameClosed = 32764;

		[Token(Token = "0x4001D47")]
		public const int ServerFull = 32762;

		[Token(Token = "0x4001D48")]
		public const int UserBlocked = 32761;

		[Token(Token = "0x4001D49")]
		public const int NoRandomMatchFound = 32760;

		[Token(Token = "0x4001D4A")]
		public const int GameDoesNotExist = 32758;

		[Token(Token = "0x4001D4B")]
		public const int MaxCcuReached = 32757;

		[Token(Token = "0x4001D4C")]
		public const int InvalidRegion = 32756;

		[Token(Token = "0x4001D4D")]
		public const int CustomAuthenticationFailed = 32755;

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0x9FC804", Offset = "0x9FC804", VA = "0x9FC804")]
		public ErrorCode()
		{
		}
	}
	[Token(Token = "0x20003FE")]
	public enum ChatState
	{
		[Token(Token = "0x4001D4F")]
		Uninitialized,
		[Token(Token = "0x4001D50")]
		ConnectingToNameServer,
		[Token(Token = "0x4001D51")]
		ConnectedToNameServer,
		[Token(Token = "0x4001D52")]
		Authenticating,
		[Token(Token = "0x4001D53")]
		Authenticated,
		[Token(Token = "0x4001D54")]
		DisconnectingFromNameServer,
		[Token(Token = "0x4001D55")]
		ConnectingToFrontEnd,
		[Token(Token = "0x4001D56")]
		ConnectedToFrontEnd,
		[Token(Token = "0x4001D57")]
		DisconnectingFromFrontEnd,
		[Token(Token = "0x4001D58")]
		QueuedComingFromFrontEnd,
		[Token(Token = "0x4001D59")]
		Disconnecting,
		[Token(Token = "0x4001D5A")]
		Disconnected
	}
	[Token(Token = "0x20003FF")]
	public static class ChatUserStatus
	{
		[Token(Token = "0x4001D5B")]
		public const int Offline = 0;

		[Token(Token = "0x4001D5C")]
		public const int Invisible = 1;

		[Token(Token = "0x4001D5D")]
		public const int Online = 2;

		[Token(Token = "0x4001D5E")]
		public const int Away = 3;

		[Token(Token = "0x4001D5F")]
		public const int DND = 4;

		[Token(Token = "0x4001D60")]
		public const int LFG = 5;

		[Token(Token = "0x4001D61")]
		public const int Playing = 6;
	}
	[Token(Token = "0x2000400")]
	public interface IChatClientListener
	{
		[Token(Token = "0x6001B26")]
		void DebugReturn(DebugLevel level, string message);

		[Token(Token = "0x6001B27")]
		void OnDisconnected();

		[Token(Token = "0x6001B28")]
		void OnConnected();

		[Token(Token = "0x6001B29")]
		void OnChatStateChange(ChatState state);

		[Token(Token = "0x6001B2A")]
		void OnGetMessages(string channelName, string[] senders, object[] messages);

		[Token(Token = "0x6001B2B")]
		void OnPrivateMessage(string sender, object message, string channelName);

		[Token(Token = "0x6001B2C")]
		void OnSubscribed(string[] channels, bool[] results);

		[Token(Token = "0x6001B2D")]
		void OnUnsubscribed(string[] channels);

		[Token(Token = "0x6001B2E")]
		void OnStatusUpdate(string user, int status, bool gotMessage, object message);

		[Token(Token = "0x6001B2F")]
		void OnUserSubscribed(string channel, string user);

		[Token(Token = "0x6001B30")]
		void OnUserUnsubscribed(string channel, string user);
	}
}
namespace ExitGames.Client.DemoParticle
{
	[Token(Token = "0x2000401")]
	public class TimeKeeper
	{
		[Token(Token = "0x4001D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int lastExecutionTime;

		[Token(Token = "0x4001D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool shouldExecute;

		[Token(Token = "0x1700032D")]
		public int Interval
		{
			[Token(Token = "0x6001B31")]
			[Address(RVA = "0x9FC80C", Offset = "0x9FC80C", VA = "0x9FC80C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001B32")]
			[Address(RVA = "0x9FC814", Offset = "0x9FC814", VA = "0x9FC814")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700032E")]
		public bool IsEnabled
		{
			[Token(Token = "0x6001B33")]
			[Address(RVA = "0x9FC81C", Offset = "0x9FC81C", VA = "0x9FC81C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B34")]
			[Address(RVA = "0x9FC824", Offset = "0x9FC824", VA = "0x9FC824")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700032F")]
		public bool ShouldExecute
		{
			[Token(Token = "0x6001B35")]
			[Address(RVA = "0x9FC830", Offset = "0x9FC830", VA = "0x9FC830")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B36")]
			[Address(RVA = "0x9FC87C", Offset = "0x9FC87C", VA = "0x9FC87C")]
			set
			{
			}
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0x9FC888", Offset = "0x9FC888", VA = "0x9FC888")]
		public TimeKeeper(int interval)
		{
		}

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0x9FC8C8", Offset = "0x9FC8C8", VA = "0x9FC8C8")]
		public void Reset()
		{
		}
	}
}
namespace ExitGames.Client.GUI
{
	[Token(Token = "0x2000402")]
	public enum GizmoType
	{
		[Token(Token = "0x4001D67")]
		WireSphere,
		[Token(Token = "0x4001D68")]
		Sphere,
		[Token(Token = "0x4001D69")]
		WireCube,
		[Token(Token = "0x4001D6A")]
		Cube
	}
	[Token(Token = "0x2000403")]
	public class GizmoTypeDrawer
	{
		[Token(Token = "0x6001B39")]
		[Address(RVA = "0x9FC8E8", Offset = "0x9FC8E8", VA = "0x9FC8E8")]
		public static void Draw(Vector3 center, GizmoType type, Color color, float size)
		{
		}

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0x9FCA6C", Offset = "0x9FCA6C", VA = "0x9FCA6C")]
		public GizmoTypeDrawer()
		{
		}
	}
}
namespace ntw.CurvedTextMeshPro
{
	[Token(Token = "0x2000404")]
	[ExecuteInEditMode]
	public class TextProOnACircle : TextProOnACurve
	{
		[Token(Token = "0x4001D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Tooltip("The radius of the text circle arc")]
		[SerializeField]
		private float m_radius;

		[Token(Token = "0x4001D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[Tooltip("How much degrees the text arc should span")]
		private float m_arcDegrees;

		[Token(Token = "0x4001D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[Tooltip("The angular offset at which the arc should be centered, in degrees")]
		private float m_angularOffset;

		[Token(Token = "0x4001D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_oldRadius;

		[Token(Token = "0x4001D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_oldArcDegrees;

		[Token(Token = "0x4001D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_oldAngularOffset;

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0x9FCA74", Offset = "0x9FCA74", VA = "0x9FCA74", Slot = "4")]
		protected override bool ParametersHaveChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0x9FCAC8", Offset = "0x9FCAC8", VA = "0x9FCAC8", Slot = "5")]
		protected override Matrix4x4 ComputeTransformationMatrix(Vector3 charMidBaselinePos, float zeroToOnePos, TMP_TextInfo textInfo, int charIdx)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0x9FCC84", Offset = "0x9FCC84", VA = "0x9FCC84")]
		public TextProOnACircle()
		{
		}
	}
	[Token(Token = "0x2000405")]
	[ExecuteInEditMode]
	public abstract class TextProOnACurve : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4001D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_forceUpdate;

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0x9FCCAC", Offset = "0x9FCCAC", VA = "0x9FCCAC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0x9FCD0C", Offset = "0x9FCD0C", VA = "0x9FCD0C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0x9FCD18", Offset = "0x9FCD18", VA = "0x9FCD18")]
		protected void Update()
		{
		}

		[Token(Token = "0x6001B41")]
		protected abstract bool ParametersHaveChanged();

		[Token(Token = "0x6001B42")]
		protected abstract Matrix4x4 ComputeTransformationMatrix(Vector3 charMidBaselinePos, float zeroToOnePos, TMP_TextInfo textInfo, int charIdx);

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0x9FCCA4", Offset = "0x9FCCA4", VA = "0x9FCCA4")]
		protected TextProOnACurve()
		{
		}
	}
	[Token(Token = "0x2000406")]
	[ExecuteInEditMode]
	public class TextProOnAExp : TextProOnACurve
	{
		[Token(Token = "0x4001D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[Tooltip("The base of the exponential curve")]
		private float m_expBase;

		[Token(Token = "0x4001D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_oldExpBase;

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0x9FD150", Offset = "0x9FD150", VA = "0x9FD150", Slot = "4")]
		protected override bool ParametersHaveChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0x9FD168", Offset = "0x9FD168", VA = "0x9FD168", Slot = "5")]
		protected override Matrix4x4 ComputeTransformationMatrix(Vector3 charMidBaselinePos, float zeroToOnePos, TMP_TextInfo textInfo, int charIdx)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0x9FD2EC", Offset = "0x9FD2EC", VA = "0x9FD2EC")]
		public TextProOnAExp()
		{
		}
	}
}
