using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Threading;
using DataPlatform;
using HighlightPlus;
using Il2CppDummyDll;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using PlayWay.Water;
using TMPro;
using UnityAOT;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.SocialPlatforms;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityPlugin;
using UnityPluginLog;
using Users;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class AntiBugPitch : MonoBehaviour
{
	[Token(Token = "0x6000001")]
	[Address(RVA = "0x7E4D84", Offset = "0x7E4D84", VA = "0x7E4D84")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x7E4DEC", Offset = "0x7E4DEC", VA = "0x7E4DEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x7E4DF0", Offset = "0x7E4DF0", VA = "0x7E4DF0")]
	public AntiBugPitch()
	{
	}
}
[Token(Token = "0x2000003")]
public class Dragon_AI : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource DeathSound;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource FireAttack;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool DIED;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Telegraph Attack;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool switchattack;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ParticleSystem[] PFXfire;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Light FireLight;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Ship MyShip;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Animator MyAnim;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float WaitForAttack;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float WaitForAttackHand;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool attackedByHand;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float WaitForIdle;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int cmd;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform SplashHit;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeToHit;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Ship NearestEnemyShip;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float NearestEnemyShip_dst;

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x7CF7A0", Offset = "0x7CF7A0", VA = "0x7CF7A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x7CF918", Offset = "0x7CF918", VA = "0x7CF918")]
	public void FindNearesShip(float minDst = 110f)
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x7CFBD0", Offset = "0x7CFBD0", VA = "0x7CFBD0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x7D07A0", Offset = "0x7D07A0", VA = "0x7D07A0")]
	public Dragon_AI()
	{
	}
}
[Token(Token = "0x2000004")]
public class CageOpening : MonoBehaviour
{
	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform OpenArea;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private H_AnimRotation OpenAnim;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool Take1;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animator HumInCage;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Animator HumInCageQWEST;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float ProcIt;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Action _callback;

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x84ED28", Offset = "0x84ED28", VA = "0x84ED28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x84ED2C", Offset = "0x84ED2C", VA = "0x84ED2C")]
	public void SetActive(bool active)
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x84ED98", Offset = "0x84ED98", VA = "0x84ED98")]
	public void SetOnCageOpen(Action callback)
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x84EDA0", Offset = "0x84EDA0", VA = "0x84EDA0")]
	private void Update()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x84F3A0", Offset = "0x84F3A0", VA = "0x84F3A0")]
	public CageOpening()
	{
	}
}
[Token(Token = "0x2000005")]
public class Dance : MonoBehaviour
{
	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform LinkedListToDanceCenter;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform MyLady;

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x7C6A40", Offset = "0x7C6A40", VA = "0x7C6A40")]
	private void Start()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x7C6A44", Offset = "0x7C6A44", VA = "0x7C6A44")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x7C6AEC", Offset = "0x7C6AEC", VA = "0x7C6AEC")]
	public Dance()
	{
	}
}
[Token(Token = "0x2000006")]
public class DLC_totem : MonoBehaviour
{
	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Totem MyTotem;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Light1;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Light2;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Light3;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject Light4;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] Kuski;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float totemFill;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject totem;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Slider totemSlider;

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x7C55D8", Offset = "0x7C55D8", VA = "0x7C55D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x7C55F8", Offset = "0x7C55F8", VA = "0x7C55F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x7C623C", Offset = "0x7C623C", VA = "0x7C623C")]
	public DLC_totem()
	{
	}
}
[Token(Token = "0x2000007")]
public class FarBBrd : MonoBehaviour
{
	[Token(Token = "0x6000013")]
	[Address(RVA = "0x7AE884", Offset = "0x7AE884", VA = "0x7AE884")]
	private void Start()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x7AE888", Offset = "0x7AE888", VA = "0x7AE888")]
	private void Update()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x7AE968", Offset = "0x7AE968", VA = "0x7AE968")]
	public FarBBrd()
	{
	}
}
[Token(Token = "0x2000008")]
public class FluteProc : MonoBehaviour
{
	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform HandLink;

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x7B3B80", Offset = "0x7B3B80", VA = "0x7B3B80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x7B3B84", Offset = "0x7B3B84", VA = "0x7B3B84")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x7B3C34", Offset = "0x7B3C34", VA = "0x7B3C34")]
	public FluteProc()
	{
	}
}
[Token(Token = "0x2000009")]
public class HealHero : MonoBehaviour
{
	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool activeBtnExit;

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x16A0BCC", Offset = "0x16A0BCC", VA = "0x16A0BCC")]
	private void Start()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x16A0BD0", Offset = "0x16A0BD0", VA = "0x16A0BD0")]
	private void Update()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x16A10F4", Offset = "0x16A10F4", VA = "0x16A10F4")]
	public HealHero()
	{
	}
}
[Token(Token = "0x200000A")]
public struct EnemySave
{
	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string id;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float health;

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x7D5AFC", Offset = "0x7D5AFC", VA = "0x7D5AFC")]
	public EnemySave(Vector3 position, string id, float health)
	{
	}
}
[Token(Token = "0x200000B")]
public class IslLocation : MonoBehaviour
{
	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579E04", Offset = "0x579E04")]
	private NewEvent <ProcIt>k__BackingField;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int LandQwestID;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CageOpening[] AllCages;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ChestOpening[] AllChests;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] AllEnemies;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Totem ThisTotem;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int_z OpenedCagesHere;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int_z OpenedChestsHere;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int_z KilledEnemiesHere;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool ShowOnMap;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool RevealedOnMap;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool VisitedMark;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	public bool Town;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private string TownEventLink;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float NoFoliageRadiusLarge;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float NoFoliageRadiusSmall;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float LodMeDistanceLarge;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float LodMeDistanceSmall;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector3 LargePosition;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Vector3 SmallPosition;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public string locationID;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Vector2 chunckedPostion;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public int loadDistance;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public int unloadDistance;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public int showDistance;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private bool showOnLoad;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private TerrianIniterDet initer;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public CampData loadedLocation;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public List<EnemySave> savedEnemies;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public List<Skeleton> enemies;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool WasActiveLarge;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
	private bool WasActiveSmall;

	[Token(Token = "0x17000001")]
	public NewEvent ProcIt
	{
		[Token(Token = "0x600001D")]
		[Address(RVA = "0x1569F78", Offset = "0x1569F78", VA = "0x1569F78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5873EC", Offset = "0x5873EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600001E")]
		[Address(RVA = "0x1569F80", Offset = "0x1569F80", VA = "0x1569F80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5873FC", Offset = "0x5873FC")]
		private set
		{
		}
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x1569F88", Offset = "0x1569F88", VA = "0x1569F88")]
	public bool IsLoaded()
	{
		return default(bool);
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x1569FFC", Offset = "0x1569FFC", VA = "0x1569FFC")]
	public Scene GetLocationScene()
	{
		return default(Scene);
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x156A030", Offset = "0x156A030", VA = "0x156A030")]
	public void UpdateChunkedValuesOnStart(int chunkSize)
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x156A10C", Offset = "0x156A10C", VA = "0x156A10C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x156A14C", Offset = "0x156A14C", VA = "0x156A14C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x156A4B8", Offset = "0x156A4B8", VA = "0x156A4B8")]
	public bool Unload(bool onlyOfDisabled = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x156A7F0", Offset = "0x156A7F0", VA = "0x156A7F0")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x156ABCC", Offset = "0x156ABCC", VA = "0x156ABCC")]
	public void Show(ScenesFactory scenesFactory)
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x156ACAC", Offset = "0x156ACAC", VA = "0x156ACAC")]
	private void OnChestOpen()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x156AD88", Offset = "0x156AD88", VA = "0x156AD88")]
	private void OnCageOpen()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x156AE64", Offset = "0x156AE64", VA = "0x156AE64")]
	public void OnLocationLoad(string ID, GameObject root)
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x156BB10", Offset = "0x156BB10", VA = "0x156BB10")]
	private void UpdateChests()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x156B770", Offset = "0x156B770", VA = "0x156B770")]
	private void SpawnEnemies(int killedCount = 0)
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x156A8C8", Offset = "0x156A8C8", VA = "0x156A8C8")]
	private void UpdateSomething(bool enable)
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x156BDBC", Offset = "0x156BDBC", VA = "0x156BDBC")]
	private void Update()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x156BBA0", Offset = "0x156BBA0", VA = "0x156BBA0")]
	public void TryToExitTown()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x156C38C", Offset = "0x156C38C", VA = "0x156C38C")]
	public IslLocation()
	{
	}
}
[Token(Token = "0x200000C")]
public class MarketCircle : MonoBehaviour
{
	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject OpenArea;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool OpenedOnce;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[SerializeField]
	private bool OpenStore;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	[SerializeField]
	private bool OpenTabern;

	[Token(Token = "0x400004E")]
	private const float EnterDistance = 0.0003f;

	[Token(Token = "0x400004F")]
	private const float LeaveDistance = 0.001f;

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x15A1168", Offset = "0x15A1168", VA = "0x15A1168")]
	private void Update()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x15A16E8", Offset = "0x15A16E8", VA = "0x15A16E8")]
	public MarketCircle()
	{
	}
}
[Token(Token = "0x200000D")]
public class reparentIt : MonoBehaviour
{
	[Token(Token = "0x6000032")]
	[Address(RVA = "0x15DB974", Offset = "0x15DB974", VA = "0x15DB974")]
	private void Start()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x15DBA20", Offset = "0x15DBA20", VA = "0x15DBA20")]
	private void Update()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x15DBA24", Offset = "0x15DBA24", VA = "0x15DBA24")]
	public reparentIt()
	{
	}
}
[Token(Token = "0x200000E")]
public class SkelSpouner : MonoBehaviour
{
	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool LoopPoint;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool AlreadySpuned;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float LoopSize;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float LoopSize2X;

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x1678E2C", Offset = "0x1678E2C", VA = "0x1678E2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x1678E60", Offset = "0x1678E60", VA = "0x1678E60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x167950C", Offset = "0x167950C", VA = "0x167950C")]
	public SkelSpouner()
	{
	}
}
[Token(Token = "0x200000F")]
public class TerrianIniter : MonoBehaviour
{
	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int MapIndex;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int CurrDlcMap;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string IslDetailsPrefab;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject InitedDetail;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Terrain terrain;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject meshTerrain;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject PlaneToHide;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Transform PrevNearestLanding;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LandingPoint NearestLanding;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Transform NearestExitLanding;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform ShoreComplex;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform PalmComplex;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform RockComplex;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public LandingPointsList LandingComplex;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public PointsList ExitLandingComplex;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform TowerComplex;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject TownFromShip;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float LOD_Dst_inSea;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float LOD_Dst_inLand;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float LOD_Dst_inSeaPalm;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float LOD_Dst_RockLoop;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private string[] resourcesList;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int previousClosestPoint;

	[Token(Token = "0x17000002")]
	public GameObject GetInitedDetail
	{
		[Token(Token = "0x6000038")]
		[Address(RVA = "0x1603EEC", Offset = "0x1603EEC", VA = "0x1603EEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x1603EF4", Offset = "0x1603EF4", VA = "0x1603EF4")]
	public void GoLandingAditionalSetup()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x1604A30", Offset = "0x1604A30", VA = "0x1604A30")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x1604B08", Offset = "0x1604B08", VA = "0x1604B08")]
	public void ExitLandingAditionalSetup()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x1605074", Offset = "0x1605074", VA = "0x1605074")]
	private void Start()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x1605228", Offset = "0x1605228", VA = "0x1605228")]
	private void Update()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x1605FA4", Offset = "0x1605FA4", VA = "0x1605FA4")]
	public void InitBillboardTrees()
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x1606094", Offset = "0x1606094", VA = "0x1606094")]
	public TerrianIniter()
	{
	}
}
[Token(Token = "0x2000010")]
public class TerrianIniterDet : MonoBehaviour
{
	[Token(Token = "0x2000011")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x577DB0", Offset = "0x577DB0")]
	private sealed class <Start>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400007F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000004")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000051")]
			[Address(RVA = "0x1582964", Offset = "0x1582964", VA = "0x1582964", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000005")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000053")]
			[Address(RVA = "0x15829AC", Offset = "0x15829AC", VA = "0x15829AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600004E")]
		[Address(RVA = "0x1582860", Offset = "0x1582860", VA = "0x1582860")]
		[DebuggerHidden]
		public <Start>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x600004F")]
		[Address(RVA = "0x158288C", Offset = "0x158288C", VA = "0x158288C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000050")]
		[Address(RVA = "0x1582890", Offset = "0x1582890", VA = "0x1582890", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000052")]
		[Address(RVA = "0x158296C", Offset = "0x158296C", VA = "0x158296C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform PalmLandComplex;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform PalmLandComplexFAR;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Tiler[] PalmLandList;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Tiler[] PalmLandListFAR1;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform RockLoopLandComplex;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform LandBgPalms;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IslLocation[] AllIslLocationComplex;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform BigEnviormentComplex;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject SkelSpounerComplex;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float updateTime;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float timer;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float LOD_Dst_inSea;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float LOD_Dst_inLand;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float LOD_Dst_inSeaPalm;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float LOD_Dst_RockLoop;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static IslLocation Nearest;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private ScenesFactory scenesFactory;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private ChunksController chunksController;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BillboardForestRenderer forestRenderer;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ForestIniter forestIniter;

	[Token(Token = "0x17000003")]
	public ChunksController GetChunksController
	{
		[Token(Token = "0x6000042")]
		[Address(RVA = "0x166048C", Offset = "0x166048C", VA = "0x166048C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x1660484", Offset = "0x1660484", VA = "0x1660484")]
	public ScenesFactory GetScenesFactory()
	{
		return null;
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x1660494", Offset = "0x1660494", VA = "0x1660494")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x1660C00", Offset = "0x1660C00", VA = "0x1660C00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58740C", Offset = "0x58740C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x1660C5C", Offset = "0x1660C5C", VA = "0x1660C5C")]
	public void Init()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x1660E2C", Offset = "0x1660E2C", VA = "0x1660E2C")]
	public void OnPlayerPositionChanged(Vector2 newPostion)
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x166106C", Offset = "0x166106C", VA = "0x166106C")]
	public void UnloadAllLocations()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x16604DC", Offset = "0x16604DC", VA = "0x16604DC")]
	public void RefreshMapView()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x166064C", Offset = "0x166064C", VA = "0x166064C")]
	public void RefreshMapLocations()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x1661120", Offset = "0x1661120", VA = "0x1661120")]
	private void Update()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x166117C", Offset = "0x166117C", VA = "0x166117C")]
	private void UpdateStuff()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x1661A38", Offset = "0x1661A38", VA = "0x1661A38")]
	public TerrianIniterDet()
	{
	}
}
[Token(Token = "0x2000012")]
public class TestData : MonoBehaviour
{
	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject copyFrom;

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x1661A50", Offset = "0x1661A50", VA = "0x1661A50")]
	private void Start()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x1661A54", Offset = "0x1661A54", VA = "0x1661A54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x1661A58", Offset = "0x1661A58", VA = "0x1661A58")]
	public TestData()
	{
	}
}
[Token(Token = "0x2000013")]
public class Tiler : MonoBehaviour
{
	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsLargeFoliage;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int MyID;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float LoopSize;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float LoopSize2X;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool OfsXpos;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool OfsXneg;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool OfsYpos;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool OfsYneg;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MyLOD lod;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float modifierX;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float modifierZ;

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x1666AA8", Offset = "0x1666AA8", VA = "0x1666AA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x1661528", Offset = "0x1661528", VA = "0x1661528")]
	public void CallUpdate()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x1666B64", Offset = "0x1666B64", VA = "0x1666B64")]
	public Tiler()
	{
	}
}
[Token(Token = "0x2000014")]
public class TilerPalms : MonoBehaviour
{
	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float LoopSize;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float LoopSize2X;

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x1666B6C", Offset = "0x1666B6C", VA = "0x1666B6C")]
	private void Update()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x1667064", Offset = "0x1667064", VA = "0x1667064")]
	public TilerPalms()
	{
	}
}
[Token(Token = "0x2000015")]
public class TilerStones : MonoBehaviour
{
	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float LoopSize;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float LoopSize2X;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool WasSet;

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x166706C", Offset = "0x166706C", VA = "0x166706C")]
	private void Update()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x1667518", Offset = "0x1667518", VA = "0x1667518")]
	public TilerStones()
	{
	}
}
[Token(Token = "0x2000016")]
public class AchievementDescriptor : MonoBehaviour
{
	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isDlc3Required;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool networkRequired;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string IosId;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[HideInInspector]
	private string AndroidId;

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x7DF340", Offset = "0x7DF340", VA = "0x7DF340")]
	public string GetAchievementId()
	{
		return null;
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x7DF420", Offset = "0x7DF420", VA = "0x7DF420")]
	public AchievementDescriptor()
	{
	}
}
[Token(Token = "0x2000017")]
public class FirebaseMessagingManager : Singleton<FirebaseMessagingManager>
{
	[Token(Token = "0x6000060")]
	[Address(RVA = "0x7B26BC", Offset = "0x7B26BC", VA = "0x7B26BC")]
	public FirebaseMessagingManager()
	{
	}
}
[Token(Token = "0x2000018")]
public class GooglePlayDownloader
{
	[Token(Token = "0x6000061")]
	[Address(RVA = "0x7F73CC", Offset = "0x7F73CC", VA = "0x7F73CC")]
	public GooglePlayDownloader()
	{
	}
}
[Token(Token = "0x2000019")]
public class LocalNotification
{
	[Token(Token = "0x4000096")]
	private const string fullClassName = "com.lexan.unitysplashscreen.UnityNotificationManager";

	[Token(Token = "0x4000097")]
	private const string bigIconName = "app_icon";

	[Token(Token = "0x4000098")]
	private const string smallIconName = "notify_icon_small";

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Color32 smallIconBgColor;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static bool isRequested;

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x151C644", Offset = "0x151C644", VA = "0x151C644")]
	public static void RequestPermission()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x151C6D0", Offset = "0x151C6D0", VA = "0x151C6D0")]
	public static void SendNotification(TimeSpan delay, string title, string message, bool sound = true, bool vibrate = true, bool lights = true)
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x151CD0C", Offset = "0x151CD0C", VA = "0x151CD0C")]
	public static void SendNotification(int id, TimeSpan delay, string title, string message, bool sound = true, bool vibrate = true, bool lights = true)
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x151C7FC", Offset = "0x151C7FC", VA = "0x151C7FC")]
	public static void SendNotification(int id, long delayMs, string title, string message, bool sound = true, bool vibrate = true, bool lights = true)
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x151CF34", Offset = "0x151CF34", VA = "0x151CF34")]
	public static void SendRepeatingNotification(TimeSpan delay, TimeSpan timeout, string title, string message, bool sound = true, bool vibrate = true, bool lights = true)
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x151D5BC", Offset = "0x151D5BC", VA = "0x151D5BC")]
	public static void SendRepeatingNotification(int id, TimeSpan delay, TimeSpan timeout, string title, string message, bool sound = true, bool vibrate = true, bool lights = true)
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x151D084", Offset = "0x151D084", VA = "0x151D084")]
	public static void SendRepeatingNotification(int id, long delayMs, long timeoutMs, string title, string message, bool sound = true, bool vibrate = true, bool lights = true)
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x151CDF0", Offset = "0x151CDF0", VA = "0x151CDF0")]
	public static void CancelNotification(int id)
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x151D6CC", Offset = "0x151D6CC", VA = "0x151D6CC")]
	public LocalNotification()
	{
	}
}
[Token(Token = "0x200001A")]
public class LocalNotificationsManager : Singleton<LocalNotificationsManager>
{
	[Token(Token = "0x400009B")]
	private const int minHour = 12;

	[Token(Token = "0x400009C")]
	private const int maxHour = 20;

	[Token(Token = "0x400009D")]
	private const float notificationDelaySec = 7200f;

	[Token(Token = "0x400009E")]
	private const float notificationEdgeSec = 1800f;

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x151D74C", Offset = "0x151D74C", VA = "0x151D74C")]
	private void Start()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x151D7F8", Offset = "0x151D7F8", VA = "0x151D7F8")]
	private static bool IsTimeForNotifications()
	{
		return default(bool);
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x151D750", Offset = "0x151D750", VA = "0x151D750")]
	public void ClearNotifications()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x151D868", Offset = "0x151D868", VA = "0x151D868")]
	public static void CheckForPermissions()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x151D8D4", Offset = "0x151D8D4", VA = "0x151D8D4")]
	public void TryToSetupNotifications()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x151DB88", Offset = "0x151DB88", VA = "0x151DB88")]
	public LocalNotificationsManager()
	{
	}
}
[Serializable]
[Token(Token = "0x200001B")]
public struct LocalizationString
{
	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string key;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string value;
}
[Serializable]
[Token(Token = "0x200001C")]
public struct LocalizationLanguage
{
	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public SystemLanguage lang;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public LocalizationString[] strings;
}
[Token(Token = "0x200001D")]
public class UniAndroidPermission : MonoBehaviour
{
	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LocalizationLanguage[] localizations;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string PERMISSIONS_WAS_ASKED_FIRST_TIME;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string PERMISSIONS_WAS_ASKED_SECOND_TIME;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static UniAndroidPermission Instance;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Action permitCallBack;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Action notPermitCallBack;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static Action onOkButtonPressed;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Action onReturnFromSettings;

	[Token(Token = "0x40000AB")]
	private const string PackageClassName = "com.lexan.unitysplashscreen.PermissionManager";

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LocalizationLanguage currentLocalization;

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x15B7130", Offset = "0x15B7130", VA = "0x15B7130")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x15B7300", Offset = "0x15B7300", VA = "0x15B7300")]
	public string GetString(string key)
	{
		return null;
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x15B73C0", Offset = "0x15B73C0", VA = "0x15B73C0")]
	public void SetNormalTheme()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x15B73C4", Offset = "0x15B73C4", VA = "0x15B73C4")]
	public bool IsPermitted(AndroidPermission permission)
	{
		return default(bool);
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x15B75A4", Offset = "0x15B75A4", VA = "0x15B75A4")]
	public bool shouldShowRequestPermissionRationale(AndroidPermission permission)
	{
		return default(bool);
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x15B76DC", Offset = "0x15B76DC", VA = "0x15B76DC")]
	public void RequestPremission(AndroidPermission permission, [Optional] Action onPermit, [Optional] Action notPermit)
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x15B7864", Offset = "0x15B7864", VA = "0x15B7864")]
	public void messageBox(string message, string okButtonLabel, [Optional] Action onOkPressed)
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x15B7A00", Offset = "0x15B7A00", VA = "0x15B7A00")]
	public void gotoSettings([Optional] Action onReturnFromSet)
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x15B74FC", Offset = "0x15B74FC", VA = "0x15B74FC")]
	private string GetPermittionStr(AndroidPermission permittion)
	{
		return null;
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x15B7B6C", Offset = "0x15B7B6C", VA = "0x15B7B6C")]
	private void OnPermit()
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x15B7C44", Offset = "0x15B7C44", VA = "0x15B7C44")]
	private void NotPermit()
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x15B7D1C", Offset = "0x15B7D1C", VA = "0x15B7D1C")]
	private void OnMessageBox()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x15B7DC0", Offset = "0x15B7DC0", VA = "0x15B7DC0")]
	private void OnReturnFromSettings()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x15B7E84", Offset = "0x15B7E84", VA = "0x15B7E84")]
	public UniAndroidPermission()
	{
	}
}
[Token(Token = "0x200001E")]
public enum AndroidPermission
{
	[Token(Token = "0x40000AE")]
	ACCESS_COARSE_LOCATION,
	[Token(Token = "0x40000AF")]
	ACCESS_FINE_LOCATION,
	[Token(Token = "0x40000B0")]
	ADD_VOICEMAIL,
	[Token(Token = "0x40000B1")]
	BODY_SENSORS,
	[Token(Token = "0x40000B2")]
	CALL_PHONE,
	[Token(Token = "0x40000B3")]
	CAMERA,
	[Token(Token = "0x40000B4")]
	GET_ACCOUNTS,
	[Token(Token = "0x40000B5")]
	PROCESS_OUTGOING_CALLS,
	[Token(Token = "0x40000B6")]
	READ_CALENDAR,
	[Token(Token = "0x40000B7")]
	READ_CALL_LOG,
	[Token(Token = "0x40000B8")]
	READ_CONTACTS,
	[Token(Token = "0x40000B9")]
	READ_EXTERNAL_STORAGE,
	[Token(Token = "0x40000BA")]
	READ_PHONE_STATE,
	[Token(Token = "0x40000BB")]
	READ_SMS,
	[Token(Token = "0x40000BC")]
	RECEIVE_MMS,
	[Token(Token = "0x40000BD")]
	RECEIVE_SMS,
	[Token(Token = "0x40000BE")]
	RECEIVE_WAP_PUSH,
	[Token(Token = "0x40000BF")]
	RECORD_AUDIO,
	[Token(Token = "0x40000C0")]
	SEND_SMS,
	[Token(Token = "0x40000C1")]
	USE_SIP,
	[Token(Token = "0x40000C2")]
	WRITE_CALENDAR,
	[Token(Token = "0x40000C3")]
	WRITE_CALL_LOG,
	[Token(Token = "0x40000C4")]
	WRITE_CONTACTS,
	[Token(Token = "0x40000C5")]
	WRITE_EXTERNAL_STORAGE
}
[Token(Token = "0x200001F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x577DC0", Offset = "0x577DC0")]
public class FogOfWarBlur : MonoBehaviour
{
	[Token(Token = "0x2000020")]
	public enum BlurType
	{
		[Token(Token = "0x40000CD")]
		StandardGauss,
		[Token(Token = "0x40000CE")]
		SgxGauss
	}

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x579F0C", Offset = "0x579F0C")]
	public int downsample;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x579F24", Offset = "0x579F24")]
	public float blurSize;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x579F3C", Offset = "0x579F3C")]
	public int blurIterations;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public BlurType blurType;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Shader blurShader;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material blurMaterial;

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x7B60C8", Offset = "0x7B60C8", VA = "0x7B60C8")]
	public void Init()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x7B613C", Offset = "0x7B613C", VA = "0x7B613C")]
	public void Blur(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x7B6484", Offset = "0x7B6484", VA = "0x7B6484")]
	public FogOfWarBlur()
	{
	}
}
[Token(Token = "0x2000021")]
public class FogOfWarHelper : MonoBehaviour
{
	[Token(Token = "0x6000084")]
	[Address(RVA = "0x7B64A0", Offset = "0x7B64A0", VA = "0x7B64A0")]
	public FogOfWarHelper()
	{
	}
}
[Token(Token = "0x2000022")]
public static class InGameEventManager
{
	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<InGameEvents, Action<object>> events;

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x1563230", Offset = "0x1563230", VA = "0x1563230")]
	public static void Subsribe(InGameEvents targetEvent, Action<object> handler)
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x15633D4", Offset = "0x15633D4", VA = "0x15633D4")]
	public static void Unsubsribe(InGameEvents targetEvent, Action<object> handler)
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x1563574", Offset = "0x1563574", VA = "0x1563574")]
	public static void SendEvent(InGameEvents targetEvent, object param)
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x156368C", Offset = "0x156368C", VA = "0x156368C")]
	public static void SendEvent(InGameEvents targetEvent)
	{
	}
}
[Token(Token = "0x2000023")]
public enum InGameEvents
{
	[Token(Token = "0x40000D1")]
	NoEvent,
	[Token(Token = "0x40000D2")]
	OnProfileLoaded,
	[Token(Token = "0x40000D3")]
	OnBeforeProfileSave,
	[Token(Token = "0x40000D4")]
	OnAfterProfileSave,
	[Token(Token = "0x40000D5")]
	OnSettingsLoaded,
	[Token(Token = "0x40000D6")]
	OnPurchaseResult,
	[Token(Token = "0x40000D7")]
	OnItemsCountChanged,
	[Token(Token = "0x40000D8")]
	OnOceanQualityChanged,
	[Token(Token = "0x40000D9")]
	OnSpeedUpToogle,
	[Token(Token = "0x40000DA")]
	OnPlayerShoot,
	[Token(Token = "0x40000DB")]
	OnFracPiratePerkClicked
}
[Token(Token = "0x2000024")]
public class HolidayDecorationsLoader : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000025")]
	private struct ObjectToReplace
	{
		[Token(Token = "0x40000DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string assetID;

		[Token(Token = "0x40000DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject obj;

		[Token(Token = "0x40000DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool keepScale;

		[Token(Token = "0x40000E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Holiday holiday;
	}

	[Token(Token = "0x2000026")]
	private enum Holiday
	{
		[Token(Token = "0x40000E2")]
		Halloween,
		[Token(Token = "0x40000E3")]
		ChineseNewYear
	}

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<ObjectToReplace> assets;

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x1562568", Offset = "0x1562568", VA = "0x1562568")]
	private void Start()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x1562C60", Offset = "0x1562C60", VA = "0x1562C60")]
	public HolidayDecorationsLoader()
	{
	}
}
[Token(Token = "0x2000027")]
public class QualityManager : MonoBehaviour
{
	[Token(Token = "0x2000028")]
	public enum QualityLevel
	{
		[Token(Token = "0x40000E5")]
		Low,
		[Token(Token = "0x40000E6")]
		Medium,
		[Token(Token = "0x40000E7")]
		High
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x1558D88", Offset = "0x1558D88", VA = "0x1558D88")]
	private void Start()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x1558D8C", Offset = "0x1558D8C", VA = "0x1558D8C")]
	public void SetQualityLevel(QualityLevel level)
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x1558ED4", Offset = "0x1558ED4", VA = "0x1558ED4")]
	public QualityManager()
	{
	}
}
[Token(Token = "0x2000029")]
public class CloudDataContainer : SaveDataBase
{
	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float difficulty;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SaveDataProfile profile;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SaveDataEvents events;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int[] mapsIDs;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string[] maps;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TimeSpan timeInGame;

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x853FC0", Offset = "0x853FC0", VA = "0x853FC0")]
	public CloudDataContainer()
	{
	}
}
[Serializable]
[Token(Token = "0x200002A")]
public class SaveDataCommand : SaveDataBase
{
	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "DefaultValueAttribute", RVA = "0x579F64", Offset = "0x579F64")]
	public int intP;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "DefaultValueAttribute", RVA = "0x579F78", Offset = "0x579F78")]
	public int journP;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<bool> boolP;

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x15388F8", Offset = "0x15388F8", VA = "0x15388F8")]
	public SaveDataCommand(int intParam, int journalParam, List<bool> boolParam)
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x15389D4", Offset = "0x15389D4", VA = "0x15389D4")]
	public SaveDataCommand()
	{
	}
}
[Serializable]
[Token(Token = "0x200002B")]
public class SaveDataEvent : SaveDataBase
{
	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string id;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool enabled;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int EXE;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int toBlock;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int toUnblock;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool newQwest;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[AttributeAttribute(Name = "DefaultValueAttribute", RVA = "0x579F8C", Offset = "0x579F8C")]
	public bool showOnMap;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SaveDataCommand[] commands;

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x1538A10", Offset = "0x1538A10", VA = "0x1538A10")]
	public SaveDataEvent(string id, bool enabled, int EXE, int daysToBlock, int daysToUnblock, bool newQwestInJournal, bool showOnMap)
	{
	}
}
[Serializable]
[Token(Token = "0x200002C")]
public class SaveDataEvents : SaveDataBase
{
	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<SaveDataEvent> events;

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x1538AAC", Offset = "0x1538AAC", VA = "0x1538AAC")]
	public SaveDataEvents()
	{
	}
}
[Serializable]
[Token(Token = "0x200002D")]
public class SaveDataAchievements : SaveDataBase
{
	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int_z[] achievementValues;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool[] landGameplayTasksTypesCompletedForAchieve;

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x1536650", Offset = "0x1536650", VA = "0x1536650", Slot = "4")]
	public override void CheckValues()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x1536C30", Offset = "0x1536C30", VA = "0x1536C30")]
	public void UpdateAchievement(Achievement ach, int amount)
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x1536E70", Offset = "0x1536E70", VA = "0x1536E70")]
	public int[] MakeBackup()
	{
		return null;
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x1536F40", Offset = "0x1536F40", VA = "0x1536F40")]
	public void RestoreBackup(int[] backup)
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x153716C", Offset = "0x153716C", VA = "0x153716C")]
	public void UpdateLandGameplayAchivement(int ind)
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x1537204", Offset = "0x1537204", VA = "0x1537204")]
	public SaveDataAchievements()
	{
	}
}
[Serializable]
[Token(Token = "0x200002E")]
public class SaveDataAdvertisements : SaveDataBase
{
	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool wasInShop;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int messagesSpeedUpLeft;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int messagesPercLeft;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int messagesHealLeft;

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x1537214", Offset = "0x1537214", VA = "0x1537214")]
	public SaveDataAdvertisements()
	{
	}
}
[Serializable]
[Token(Token = "0x200002F")]
public class SaveDataAnalitics : SaveDataBase
{
	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string[] OPTIONAL_PARAMS;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float purchaseSum;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string purchaseCurrency;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int artefactsCount;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int battlesStarted;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int battlesLost;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int resetsMade;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int timesPurchased;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int sessionNumber;

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x153722C", Offset = "0x153722C", VA = "0x153722C")]
	public void IncArtefacts(string artefact_id)
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x153723C", Offset = "0x153723C", VA = "0x153723C")]
	public Dictionary<string, object> StandartEvent([Optional] Dictionary<string, object> data, int parametersLimit = -1)
	{
		return null;
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x1537A18", Offset = "0x1537A18", VA = "0x1537A18")]
	public SaveDataAnalitics()
	{
	}
}
[Serializable]
[Token(Token = "0x2000030")]
public class SaveDataFractions : SaveDataBase
{
	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly int count;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int_z[] fractionToPlayer;

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x1538B38", Offset = "0x1538B38", VA = "0x1538B38", Slot = "4")]
	public override void CheckValues()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x1538F20", Offset = "0x1538F20", VA = "0x1538F20")]
	public void ChangeFrac2Player(int Fraction, int ChangeIt)
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x15393AC", Offset = "0x15393AC", VA = "0x15393AC")]
	public SaveDataFractions()
	{
	}
}
[Serializable]
[Token(Token = "0x2000031")]
public class SaveDataMap : SaveDataBase
{
	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x579FA0", Offset = "0x579FA0")]
	public int_z year;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x579FB8", Offset = "0x579FB8")]
	public int_z month;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x579FD0", Offset = "0x579FD0")]
	public int_z day;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x579FE8", Offset = "0x579FE8")]
	public float time;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57A000", Offset = "0x57A000")]
	public int currentMapNumber;

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x15393BC", Offset = "0x15393BC", VA = "0x15393BC")]
	public int IncreaseDate()
	{
		return default(int);
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x15394B8", Offset = "0x15394B8", VA = "0x15394B8")]
	public string GetDate()
	{
		return null;
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x153963C", Offset = "0x153963C", VA = "0x153963C")]
	public bool IsNightTime()
	{
		return default(bool);
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x1539660", Offset = "0x1539660", VA = "0x1539660")]
	public bool IsTimeInRange(float min, float max)
	{
		return default(bool);
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x153967C", Offset = "0x153967C", VA = "0x153967C")]
	public SaveDataMap()
	{
	}
}
[Serializable]
[Token(Token = "0x2000032")]
public class SaveDataOurTown : SaveDataBase
{
	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57A018", Offset = "0x57A018")]
	public int TownLevel;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool[] QuestsDone;

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x15396FC", Offset = "0x15396FC", VA = "0x15396FC", Slot = "4")]
	public override void CheckValues()
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x1539774", Offset = "0x1539774", VA = "0x1539774")]
	public int GetQuestsDone()
	{
		return default(int);
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x15397E0", Offset = "0x15397E0", VA = "0x15397E0")]
	public SaveDataOurTown()
	{
	}
}
[Token(Token = "0x2000033")]
public class SaveDataPartInShopManager : SaveDataBase
{
	[Serializable]
	[Token(Token = "0x2000034")]
	public class Shop
	{
		[Token(Token = "0x4000113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string city;

		[Token(Token = "0x4000114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int fraction;

		[Token(Token = "0x4000115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int levelOfCity;

		[Token(Token = "0x4000116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int hoursTillPayment;

		[Token(Token = "0x4000117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int ammountOfPayment;

		[Token(Token = "0x60000AF")]
		[Address(RVA = "0x157F398", Offset = "0x157F398", VA = "0x157F398")]
		public Shop()
		{
		}
	}

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<Shop> shopsList;

	[Token(Token = "0x17000006")]
	public List<Shop> ShopsList
	{
		[Token(Token = "0x60000AA")]
		[Address(RVA = "0x15397E8", Offset = "0x15397E8", VA = "0x15397E8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000AB")]
		[Address(RVA = "0x15397F0", Offset = "0x15397F0", VA = "0x15397F0")]
		set
		{
		}
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x15397F8", Offset = "0x15397F8", VA = "0x15397F8")]
	public void AddShop(string CurCityName, int CurCityFraction, int cityLevel, int payOffHours, int payment)
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x15398C4", Offset = "0x15398C4", VA = "0x15398C4", Slot = "4")]
	public override void CheckValues()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x1539958", Offset = "0x1539958", VA = "0x1539958")]
	public SaveDataPartInShopManager()
	{
	}
}
[Token(Token = "0x2000035")]
internal class SaveDateTimeConverter : IsoDateTimeConverter
{
	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x153D118", Offset = "0x153D118", VA = "0x153D118", Slot = "4")]
	public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x153D1C0", Offset = "0x153D1C0", VA = "0x153D1C0")]
	public SaveDateTimeConverter()
	{
	}
}
[Serializable]
[Token(Token = "0x2000036")]
public class SaveDataProfile : SaveDataBase
{
	[Token(Token = "0x2000037")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x577E28", Offset = "0x577E28")]
	private sealed class <>c__DisplayClass56_0
	{
		[Token(Token = "0x4000148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string id;

		[Token(Token = "0x60000C0")]
		[Address(RVA = "0x157F3A0", Offset = "0x157F3A0", VA = "0x157F3A0")]
		public <>c__DisplayClass56_0()
		{
		}

		[Token(Token = "0x60000C1")]
		[Address(RVA = "0x157F3A8", Offset = "0x157F3A8", VA = "0x157F3A8")]
		internal bool <GetTowarCountUNIVERSAL>b__0(Tovar t)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public double timeForDLC;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly int[] equipedIndexDefaults;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly int[] itemCountDefaults;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly int[] itemProductDefaults;

	[Token(Token = "0x400011C")]
	private const int shipsCount = 20;

	[Token(Token = "0x400011D")]
	private const int equippedIndexCount = 64;

	[Token(Token = "0x400011E")]
	private const int itemArrayCount = 1200;

	[Token(Token = "0x400011F")]
	private const int totemBuffsCount = 20;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int version;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "JsonConverterAttribute", RVA = "0x57A030", Offset = "0x57A030")]
	public DateTime saveDate;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string playerName;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool tutorialAsked;

	[Token(Token = "0x4000124")]
	private const int STARTING_PIASTRES = 700;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x57A098", Offset = "0x57A098")]
	public int_z piastresAmount;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x57A0AC", Offset = "0x57A0AC")]
	public int_z depositAmount;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x57A0C0", Offset = "0x57A0C0")]
	public int currentArtefactPower;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x57A0D4", Offset = "0x57A0D4")]
	public int teamPay;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57A0E8", Offset = "0x57A0E8")]
	public float morale;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float respawnPosX;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float respawnPosY;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57A104", Offset = "0x57A104")]
	public float respawnRotation;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57A120", Offset = "0x57A120")]
	public int respawnMap;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string lastVisitedTown;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int_z[] trophyCounter;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool[] buyedPerkSlots;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int_z[] shipCaseHP;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int_z[] shipSailsHP;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public int_z[] allSlotsEqIndx;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public int_z[] totemBuffs;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public int_z[] itemProduct;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int_z[] itemCount;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public int_z[] itemWhere;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public int selectedAmunition_index;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public bool tutorialFinished;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	public bool isLegendsFixed;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public SaveDataAchievements achievements;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public SaveDataSkills skills;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public SaveDataStatistics statistics;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public SaveDataFractions fractions;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public SaveDataMap map;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public SaveDataPartInShopManager partInShopManager;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public SaveDataOurTown town;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public SaveDataPurchases purchases;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public SaveDataAnalitics analitics;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public SaveDataAdvertisements advertisements;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public bool dlcLanding;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
	public bool dlcChine;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12A")]
	public bool dlcTown;

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x1539960", Offset = "0x1539960", VA = "0x1539960", Slot = "4")]
	public override void CheckValues()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x1539D64", Offset = "0x1539D64", VA = "0x1539D64")]
	public bool IsEnoughPiastres(int amount, bool showMessage = true)
	{
		return default(bool);
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x1539DF8", Offset = "0x1539DF8", VA = "0x1539DF8")]
	public void ChangePiastres(int amount, bool ShowNotify = false, bool UnderBuff = false)
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x153A100", Offset = "0x153A100", VA = "0x153A100")]
	public void RefreshPiastresView()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x153A1AC", Offset = "0x153A1AC", VA = "0x153A1AC")]
	public void CalculateDeposit()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x153A268", Offset = "0x153A268", VA = "0x153A268")]
	public bool AddTovarUNIVERSAL(int Type, int Count, int where, bool AUTOEQUIP = false, bool Upd_MainPanel = true)
	{
		return default(bool);
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x153AD20", Offset = "0x153AD20", VA = "0x153AD20")]
	public bool DecTowarUNIVERSAL(int Type, int Count, int where = 0)
	{
		return default(bool);
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x153AC0C", Offset = "0x153AC0C", VA = "0x153AC0C")]
	public int GetTowarCountUNIVERSAL(int Type, int where = 0)
	{
		return default(int);
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x153B05C", Offset = "0x153B05C", VA = "0x153B05C")]
	public int GetTowarCountUNIVERSAL(string id, int where = 0)
	{
		return default(int);
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x153B1D0", Offset = "0x153B1D0", VA = "0x153B1D0")]
	public int GetTowarCountTypeUNIVERSAL(AWE_global.SlotType what, int where = 0)
	{
		return default(int);
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x153B3AC", Offset = "0x153B3AC", VA = "0x153B3AC")]
	public int GetTowarCountTypeUNIVERSAL_notPerk(AWE_global.SlotType what, int where = 0)
	{
		return default(int);
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x153B590", Offset = "0x153B590", VA = "0x153B590")]
	public int GetTowarCountAsTeamXP(AWE_global.SlotType what, int where = 0)
	{
		return default(int);
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x153B75C", Offset = "0x153B75C", VA = "0x153B75C")]
	public void ChangeXpPoints(int addOrDecrease, bool showNotify = true)
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x153B9A0", Offset = "0x153B9A0", VA = "0x153B9A0")]
	public SaveDataProfile()
	{
	}
}
[Serializable]
[Token(Token = "0x2000038")]
public class SaveDataPurchases : SaveDataBase
{
	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float rateMeTimeToShow;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool wasGoldPurchased;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57A138", Offset = "0x57A138")]
	public int_z mapsPurchased;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57A150", Offset = "0x57A150")]
	public int_z shipsPurchased;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57A168", Offset = "0x57A168")]
	public int_z legendsPurchased;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57A180", Offset = "0x57A180")]
	public int_z fullVersionPurchased;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57A198", Offset = "0x57A198")]
	public int_z noAdsPurchased;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float doublePiastresTimeRemains;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57A1B0", Offset = "0x57A1B0")]
	public int_z dlc_unlock;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57A1C8", Offset = "0x57A1C8")]
	public int_z dlc3_unlock;

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x1539C7C", Offset = "0x1539C7C", VA = "0x1539C7C")]
	public SaveDataPurchases()
	{
	}
}
[Serializable]
[Token(Token = "0x2000039")]
public class SaveDataSkills : SaveDataBase
{
	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x57A1E0", Offset = "0x57A1E0")]
	public int_z repairValue;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x57A1F4", Offset = "0x57A1F4")]
	public int_z repairLimit;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x57A208", Offset = "0x57A208")]
	public int_z healChance;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x57A21C", Offset = "0x57A21C")]
	public int_z healAuto;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x57A230", Offset = "0x57A230")]
	public int_z shootDistance;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x57A244", Offset = "0x57A244")]
	public int_z shootPrecision;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x57A258", Offset = "0x57A258")]
	public int_z artefactEnergy;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x57A26C", Offset = "0x57A26C")]
	public int_z artefactPower;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x57A280", Offset = "0x57A280")]
	public int_z sailsManeurity;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x57A294", Offset = "0x57A294")]
	public int_z sailsSpeed;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x57A2A8", Offset = "0x57A2A8")]
	public int_z abordageDefence;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x57A2BC", Offset = "0x57A2BC")]
	public int_z abordageDamage;

	[Token(Token = "0x17000007")]
	public int Summ
	{
		[Token(Token = "0x60000C3")]
		[Address(RVA = "0x153CB78", Offset = "0x153CB78", VA = "0x153CB78")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x153CC20", Offset = "0x153CC20", VA = "0x153CC20")]
	public void ResetValues()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x153CD88", Offset = "0x153CD88", VA = "0x153CD88")]
	public int GetSkillLevel(SkillTypes skill)
	{
		return default(int);
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x153BDEC", Offset = "0x153BDEC", VA = "0x153BDEC")]
	public SaveDataSkills()
	{
	}
}
[Serializable]
[Token(Token = "0x200003A")]
public class SaveDataStatistics : SaveDataBase
{
	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x57A2D0", Offset = "0x57A2D0")]
	public int_z HAWK_far_shoot;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x57A2E4", Offset = "0x57A2E4")]
	public int_z RAM_hits;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x57A2F8", Offset = "0x57A2F8")]
	public int_z SPIDER_knipp_canonb;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x57A30C", Offset = "0x57A30C")]
	public int_z SNAKE_pois_canonb;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x57A320", Offset = "0x57A320")]
	public int_z distancePassed;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x57A334", Offset = "0x57A334")]
	public int_z questsDone;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x57A348", Offset = "0x57A348")]
	public int_z legendsDone;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x57A35C", Offset = "0x57A35C")]
	public int_z totalGold;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x57A370", Offset = "0x57A370")]
	public int_z totalTrade;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x57A384", Offset = "0x57A384")]
	public int_z canonballsShoot;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x57A398", Offset = "0x57A398")]
	public int_z canonballsMiss;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x57A3AC", Offset = "0x57A3AC")]
	public int_z kills;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x57A3C0", Offset = "0x57A3C0")]
	public int_z lose;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x57A3D4", Offset = "0x57A3D4")]
	public int_z abordagesTotal;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x57A3E8", Offset = "0x57A3E8")]
	public int_z abordagesFailed;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x57A3FC", Offset = "0x57A3FC")]
	public int_z timesEscaped;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x57A410", Offset = "0x57A410")]
	public int_z towersDestroyed;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x57A424", Offset = "0x57A424")]
	public int_z monstersKilled;

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x153CEC8", Offset = "0x153CEC8", VA = "0x153CEC8")]
	public int CalculateStatMiss()
	{
		return default(int);
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x153CF3C", Offset = "0x153CF3C", VA = "0x153CF3C")]
	public int GetStatisticValue(StatisticParameters parameter)
	{
		return default(int);
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x153BF60", Offset = "0x153BF60", VA = "0x153BF60")]
	public SaveDataStatistics()
	{
	}
}
[Token(Token = "0x200003B")]
public class MinValueAttribute : Attribute
{
	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float value;

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x15A7438", Offset = "0x15A7438", VA = "0x15A7438")]
	public MinValueAttribute(float v)
	{
	}
}
[Serializable]
[Token(Token = "0x200003C")]
public class SaveDataBase
{
	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x15366EC", Offset = "0x15366EC", VA = "0x15366EC", Slot = "4")]
	public virtual void CheckValues()
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x1537F58", Offset = "0x1537F58", VA = "0x1537F58")]
	private void CheckField(FieldInfo field, float min, float max)
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x15383FC", Offset = "0x15383FC", VA = "0x15383FC")]
	private void CheckField(FieldInfo field, float min)
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x1536A68", Offset = "0x1536A68", VA = "0x1536A68")]
	protected int_z[] CheckArray(int_z[] target, int currentCount, int fillValue)
	{
		return null;
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x15387CC", Offset = "0x15387CC", VA = "0x15387CC")]
	protected bool[] CheckArray(bool[] target, int currentCount, bool fillValue)
	{
		return null;
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x1536F88", Offset = "0x1536F88", VA = "0x1536F88")]
	protected int_z[] CheckArray(int_z[] target, int currentCount, int[] defaultArray, int fillValue)
	{
		return null;
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x153720C", Offset = "0x153720C", VA = "0x153720C")]
	public SaveDataBase()
	{
	}
}
[Token(Token = "0x200003D")]
public enum GameLanguage
{
	[Token(Token = "0x4000173")]
	English,
	[Token(Token = "0x4000174")]
	Russian,
	[Token(Token = "0x4000175")]
	German,
	[Token(Token = "0x4000176")]
	French,
	[Token(Token = "0x4000177")]
	Chinese,
	[Token(Token = "0x4000178")]
	Spanish,
	[Token(Token = "0x4000179")]
	Japanese
}
[Serializable]
[Token(Token = "0x200003E")]
public class SaveDataSettings : SaveDataBase
{
	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int[] defaultKeys;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly int[] defaultPSpreset;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly int[] defaultVRPreset;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly int[] emptyPreset;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int version;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameLanguage language;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57A438", Offset = "0x57A438")]
	public float difficulty;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57A458", Offset = "0x57A458")]
	public float mainCameraSensitivity;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57A470", Offset = "0x57A470")]
	public float cinematicCameraDuration;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57A48C", Offset = "0x57A48C")]
	public float mapTimeSpeed;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57A4A4", Offset = "0x57A4A4")]
	public float musicVolume;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57A4BC", Offset = "0x57A4BC")]
	public float soundVolume;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool lockCursorInWindow;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool autoshoot;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool cameraFollow;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool clickToSwim;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool invertedX;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool invertedY;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	public bool invertedZoom;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
	public bool touchControls;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool wheelEnabled;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool lightnings;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool shadowsOnLand;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	public bool TV3DRender;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57A4D4", Offset = "0x57A4D4")]
	public float eyeDistance;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57A4F4", Offset = "0x57A4F4")]
	public float addDepth;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57A510", Offset = "0x57A510")]
	public int waterQuality;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57A528", Offset = "0x57A528")]
	public int UISize;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int antiAliasing;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int[] keys;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int[] gamepadMap;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int[] gamepadMapCopy;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool networkAutofind;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public bool networkOpenGame;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	public bool networkAllAlly;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int networkRegion;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TimeSpan timeInGame;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool controlsPanel;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float canvasZoom;

	[Token(Token = "0x17000008")]
	public int WaterQuality
	{
		[Token(Token = "0x60000D2")]
		[Address(RVA = "0x153C17C", Offset = "0x153C17C", VA = "0x153C17C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000D3")]
		[Address(RVA = "0x153C184", Offset = "0x153C184", VA = "0x153C184")]
		set
		{
		}
	}

	[Token(Token = "0x17000009")]
	[JsonIgnore]
	public int lang
	{
		[Token(Token = "0x60000D6")]
		[Address(RVA = "0x153C598", Offset = "0x153C598", VA = "0x153C598")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x153C20C", Offset = "0x153C20C", VA = "0x153C20C")]
	public static GameLanguage SelectLanguage()
	{
		return default(GameLanguage);
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x153C2A0", Offset = "0x153C2A0", VA = "0x153C2A0", Slot = "4")]
	public override void CheckValues()
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x153C5A0", Offset = "0x153C5A0", VA = "0x153C5A0")]
	public void SetVRControllerPreset()
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x153C6C0", Offset = "0x153C6C0", VA = "0x153C6C0")]
	public void SetXboxGamepadPreset()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x153C6C4", Offset = "0x153C6C4", VA = "0x153C6C4")]
	public void SetPSGamepadPreset()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x153C790", Offset = "0x153C790", VA = "0x153C790")]
	public void EnableCustomButtons(int[] IDs, int[] codes)
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x153C928", Offset = "0x153C928", VA = "0x153C928")]
	public SaveDataSettings()
	{
	}
}
[Token(Token = "0x200003F")]
public static class ActionKey
{
	[Token(Token = "0x40001A1")]
	public const int OPEN_SAILS = 0;

	[Token(Token = "0x40001A2")]
	public const int OPEN_SAILS_ALT = 10;

	[Token(Token = "0x40001A3")]
	public const int CLOSE_SAILS = 1;

	[Token(Token = "0x40001A4")]
	public const int CLOSE_SAILS_ALT = 11;

	[Token(Token = "0x40001A5")]
	public const int TURN_LEFT = 2;

	[Token(Token = "0x40001A6")]
	public const int TURN_LEFT_ALT = 12;

	[Token(Token = "0x40001A7")]
	public const int TURN_RIGHT = 3;

	[Token(Token = "0x40001A8")]
	public const int TURN_RIGHT_ALT = 13;

	[Token(Token = "0x40001A9")]
	public const int SHOOT = 4;

	[Token(Token = "0x40001AA")]
	public const int SHOOT_ALT = 14;

	[Token(Token = "0x40001AB")]
	public const int CHANGE_AMMUNITION = 5;

	[Token(Token = "0x40001AC")]
	public const int CHANGE_AMMUNITION_ALT = 15;

	[Token(Token = "0x40001AD")]
	public const int ROTATE_CANON_LEFT = 6;

	[Token(Token = "0x40001AE")]
	public const int ROTATE_CANON_LEFT_ALT = 16;

	[Token(Token = "0x40001AF")]
	public const int ROTATE_CANON_RIGHT = 7;

	[Token(Token = "0x40001B0")]
	public const int ROTATE_CANON_RIGHT_ALT = 17;

	[Token(Token = "0x40001B1")]
	public const int JOURNAL = 8;

	[Token(Token = "0x40001B2")]
	public const int JOURNAL_ALT = 18;

	[Token(Token = "0x40001B3")]
	public const int SWITCH_MAP = 9;

	[Token(Token = "0x40001B4")]
	public const int SWITCH_MAP_ALT = 19;

	[Token(Token = "0x40001B5")]
	public const int ZOOM = 20;

	[Token(Token = "0x40001B6")]
	public const int ZOOM_ALT = 21;

	[Token(Token = "0x40001B7")]
	public const int LOOK_UP = 22;

	[Token(Token = "0x40001B8")]
	public const int LOOK_UP_ALT = 23;

	[Token(Token = "0x40001B9")]
	public const int LOOK_DOWN = 24;

	[Token(Token = "0x40001BA")]
	public const int LOOK_DOWN_ALT = 25;

	[Token(Token = "0x40001BB")]
	public const int LOOK_LEFT = 26;

	[Token(Token = "0x40001BC")]
	public const int LOOK_LEFT_ALT = 27;

	[Token(Token = "0x40001BD")]
	public const int LOOK_RIGHT = 28;

	[Token(Token = "0x40001BE")]
	public const int LOOK_RIGHT_ALT = 29;

	[Token(Token = "0x40001BF")]
	public const int ARTEFACT1 = 30;

	[Token(Token = "0x40001C0")]
	public const int ARTEFACT1_ALT = 31;

	[Token(Token = "0x40001C1")]
	public const int ARTEFACT2 = 32;

	[Token(Token = "0x40001C2")]
	public const int ARTEFACT2_ALT = 33;

	[Token(Token = "0x40001C3")]
	public const int ARTEFACT3 = 34;

	[Token(Token = "0x40001C4")]
	public const int ARTEFACT3_ALT = 35;

	[Token(Token = "0x40001C5")]
	public const int ARTEFACT4 = 36;

	[Token(Token = "0x40001C6")]
	public const int ARTEFACT4_ALT = 37;

	[Token(Token = "0x40001C7")]
	public const int TOGGLE_UI = 38;

	[Token(Token = "0x40001C8")]
	public const int TOGGLE_UI_ALT = 39;

	[Token(Token = "0x40001C9")]
	public const int SLOWMOTION = 40;

	[Token(Token = "0x40001CA")]
	public const int SLOWMOTION_ALT = 41;

	[Token(Token = "0x40001CB")]
	public const int FREE_CAMERA = 42;

	[Token(Token = "0x40001CC")]
	public const int FREE_CAMERA_ALT = 43;
}
[Token(Token = "0x2000040")]
public class SavesManager : SingletonMonoBehaviour<SavesManager>
{
	[Serializable]
	[Token(Token = "0x2000041")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x577E38", Offset = "0x577E38")]
	private sealed class <>c
	{
		[Token(Token = "0x40001D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40001D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static H_Core.H_delegate <>9__23_0;

		[Token(Token = "0x40001D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static H_Core.H_delegate <>9__23_1;

		[Token(Token = "0x40001DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static H_Core.H_delegate <>9__23_2;

		[Token(Token = "0x40001DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static H_Core.H_delegate <>9__23_3;

		[Token(Token = "0x40001DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static H_Core.H_delegate <>9__23_4;

		[Token(Token = "0x40001DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static H_Core.H_delegate <>9__23_5;

		[Token(Token = "0x40001DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Comparison<DateTime> <>9__45_0;

		[Token(Token = "0x6000101")]
		[Address(RVA = "0x158017C", Offset = "0x158017C", VA = "0x158017C")]
		public <>c()
		{
		}

		[Token(Token = "0x6000102")]
		[Address(RVA = "0x1580184", Offset = "0x1580184", VA = "0x1580184")]
		internal void <StartNewGame>b__23_0()
		{
		}

		[Token(Token = "0x6000103")]
		[Address(RVA = "0x1580188", Offset = "0x1580188", VA = "0x1580188")]
		internal void <StartNewGame>b__23_1()
		{
		}

		[Token(Token = "0x6000104")]
		[Address(RVA = "0x158018C", Offset = "0x158018C", VA = "0x158018C")]
		internal void <StartNewGame>b__23_2()
		{
		}

		[Token(Token = "0x6000105")]
		[Address(RVA = "0x1580190", Offset = "0x1580190", VA = "0x1580190")]
		internal void <StartNewGame>b__23_3()
		{
		}

		[Token(Token = "0x6000106")]
		[Address(RVA = "0x1580194", Offset = "0x1580194", VA = "0x1580194")]
		internal void <StartNewGame>b__23_4()
		{
		}

		[Token(Token = "0x6000107")]
		[Address(RVA = "0x1580198", Offset = "0x1580198", VA = "0x1580198")]
		internal void <StartNewGame>b__23_5()
		{
		}

		[Token(Token = "0x6000108")]
		[Address(RVA = "0x158019C", Offset = "0x158019C", VA = "0x158019C")]
		internal int <GetSaveFolder>b__45_0(DateTime a, DateTime b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x2000042")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x577E48", Offset = "0x577E48")]
	private sealed class <SaveEventsCoroutine>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SavesManager <>4__this;

		[Token(Token = "0x40001E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SaveDataEvents e;

		[Token(Token = "0x1700000F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600010C")]
			[Address(RVA = "0x1580234", Offset = "0x1580234", VA = "0x1580234", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000010")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600010E")]
			[Address(RVA = "0x158027C", Offset = "0x158027C", VA = "0x158027C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000109")]
		[Address(RVA = "0x15801C4", Offset = "0x15801C4", VA = "0x15801C4")]
		[DebuggerHidden]
		public <SaveEventsCoroutine>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x600010A")]
		[Address(RVA = "0x15801F0", Offset = "0x15801F0", VA = "0x15801F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600010B")]
		[Address(RVA = "0x15801F4", Offset = "0x15801F4", VA = "0x15801F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600010D")]
		[Address(RVA = "0x158023C", Offset = "0x158023C", VA = "0x158023C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000043")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x577E58", Offset = "0x577E58")]
	private sealed class <SaveProfileCoroutine>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SavesManager <>4__this;

		[Token(Token = "0x17000011")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000112")]
			[Address(RVA = "0x15802F0", Offset = "0x15802F0", VA = "0x15802F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000012")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000114")]
			[Address(RVA = "0x1580338", Offset = "0x1580338", VA = "0x1580338", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600010F")]
		[Address(RVA = "0x1580284", Offset = "0x1580284", VA = "0x1580284")]
		[DebuggerHidden]
		public <SaveProfileCoroutine>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6000110")]
		[Address(RVA = "0x15802B0", Offset = "0x15802B0", VA = "0x15802B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000111")]
		[Address(RVA = "0x15802B4", Offset = "0x15802B4", VA = "0x15802B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000113")]
		[Address(RVA = "0x15802F8", Offset = "0x15802F8", VA = "0x15802F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public readonly char[] TRIM_CHARS;

	[Token(Token = "0x40001CE")]
	public const string SAVE_ID = "TSF";

	[Token(Token = "0x40001CF")]
	private const int BACKUPS_COUNT = 3;

	[Token(Token = "0x40001D0")]
	private const string FOLDER_FORMAT = "yyyy-MM-dd-HH-mm-ss";

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private JsonSerializerSettings serializationSettings;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[ShowInInspector]
	private SaveDataSettings settings;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[ShowInInspector]
	private SaveDataProfile profile;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool isProfileLoaded;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool disableEventsCorutine;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool disableProfileCorutine;

	[Token(Token = "0x1700000A")]
	public SaveDataSettings Settings
	{
		[Token(Token = "0x60000DD")]
		[Address(RVA = "0x1544FD0", Offset = "0x1544FD0", VA = "0x1544FD0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000B")]
	public static SaveDataProfile Profile
	{
		[Token(Token = "0x60000DE")]
		[Address(RVA = "0x152F4D8", Offset = "0x152F4D8", VA = "0x152F4D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000C")]
	public static SaveDataSkills Skills
	{
		[Token(Token = "0x60000DF")]
		[Address(RVA = "0x1544FD8", Offset = "0x1544FD8", VA = "0x1544FD8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000D")]
	public static SaveDataStatistics Statictics
	{
		[Token(Token = "0x60000E0")]
		[Address(RVA = "0x1544D10", Offset = "0x1544D10", VA = "0x1544D10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000E")]
	public static SaveDataFractions Fractions
	{
		[Token(Token = "0x60000E1")]
		[Address(RVA = "0x154505C", Offset = "0x154505C", VA = "0x154505C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x15450E0", Offset = "0x15450E0", VA = "0x15450E0")]
	public SaveDataProfile CreateProfile()
	{
		return null;
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x154514C", Offset = "0x154514C", VA = "0x154514C")]
	public SaveDataSettings CreateSettings()
	{
		return null;
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x15451D4", Offset = "0x15451D4", VA = "0x15451D4")]
	public void SetSettings(SaveDataSettings settings)
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x15452A0", Offset = "0x15452A0", VA = "0x15452A0")]
	public void SetProfile(SaveDataProfile profile)
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x15453A8", Offset = "0x15453A8", VA = "0x15453A8")]
	public void LoadPP()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x15453AC", Offset = "0x15453AC", VA = "0x15453AC")]
	public void StartNewGame()
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x153EF08", Offset = "0x153EF08", VA = "0x153EF08")]
	public void LoadSettings(string loadData = "")
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x153F00C", Offset = "0x153F00C", VA = "0x153F00C")]
	public void LoadProfile(string loadData = "")
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x153F830", Offset = "0x153F830", VA = "0x153F830")]
	public void LoadEvents(string loadData = "")
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x1546910", Offset = "0x1546910", VA = "0x1546910")]
	private void ApplyLoadedEvents(SaveDataEvents events)
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x1546760", Offset = "0x1546760", VA = "0x1546760")]
	public void ResetEvents()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x1546E8C", Offset = "0x1546E8C", VA = "0x1546E8C")]
	public bool LoadCloudSave(string save)
	{
		return default(bool);
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x154779C", Offset = "0x154779C", VA = "0x154779C")]
	public string CreateCloudSave()
	{
		return null;
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x153E114", Offset = "0x153E114", VA = "0x153E114")]
	public void SaveSettings()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x153E798", Offset = "0x153E798", VA = "0x153E798")]
	public void SaveEvents(SaveDataEvents e)
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x1547A48", Offset = "0x1547A48", VA = "0x1547A48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5874C4", Offset = "0x5874C4")]
	private IEnumerator SaveEventsCoroutine(SaveDataEvents e)
	{
		return null;
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x1547ADC", Offset = "0x1547ADC", VA = "0x1547ADC")]
	private void SaveEventsProc(SaveDataEvents e)
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x153E204", Offset = "0x153E204", VA = "0x153E204")]
	public void SaveProfile()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x1547BE8", Offset = "0x1547BE8", VA = "0x1547BE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58752C", Offset = "0x58752C")]
	private IEnumerator SaveProfileCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x1547C68", Offset = "0x1547C68", VA = "0x1547C68")]
	private void SaveProfileProc()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x15478DC", Offset = "0x15478DC", VA = "0x15478DC")]
	private string GetHash(string data)
	{
		return null;
	}

	[Token(Token = "0x60000F7")]
	private T LoadFile<T>(string path, bool hashCheck = true, string loadData = "") where T : SaveDataBase
	{
		return null;
	}

	[Token(Token = "0x60000F8")]
	private T LoadFileFromResources<T>(string path, bool hashCheck = true) where T : SaveDataBase
	{
		return null;
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x15467E8", Offset = "0x15467E8", VA = "0x15467E8")]
	private void CheckSerializationSettings()
	{
	}

	[Token(Token = "0x60000FA")]
	private T Parse<T>(string header, string data, bool hashCheck = true) where T : SaveDataBase
	{
		return null;
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x1547F80", Offset = "0x1547F80", VA = "0x1547F80")]
	private string GetSaveFolder(bool alwaysLatest = false)
	{
		return null;
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x15484AC", Offset = "0x15484AC", VA = "0x15484AC")]
	public static void Subscribe(Action<object> onProfileLoaded)
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x1548594", Offset = "0x1548594", VA = "0x1548594")]
	public static void Unsubscribe(Action<object> onProfileLoaded)
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x1548604", Offset = "0x1548604", VA = "0x1548604")]
	public SavesManager()
	{
	}
}
[Token(Token = "0x2000044")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x577E68", Offset = "0x577E68")]
public class ShowInInspectorAttribute : Attribute
{
	[Token(Token = "0x6000115")]
	[Address(RVA = "0x1677544", Offset = "0x1677544", VA = "0x1677544")]
	public ShowInInspectorAttribute()
	{
	}
}
[Token(Token = "0x2000045")]
public class Hold_Item : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000046")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x577EA0", Offset = "0x577EA0")]
	private sealed class <>c
	{
		[Token(Token = "0x40001EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40001ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<Tovar> <>9__6_0;

		[Token(Token = "0x600011D")]
		[Address(RVA = "0x1514A40", Offset = "0x1514A40", VA = "0x1514A40")]
		public <>c()
		{
		}

		[Token(Token = "0x600011E")]
		[Address(RVA = "0x1514A48", Offset = "0x1514A48", VA = "0x1514A48")]
		internal bool <SelectItem>b__6_0(Tovar t)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject itemAmountBG;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text itemAmount;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Tovar t_curr;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool updateDescription;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Tovar prevTovar;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public Tovar nextTovar;

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x15603A8", Offset = "0x15603A8", VA = "0x15603A8")]
	public void SelectItem(bool buyEvent = false)
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x15617B4", Offset = "0x15617B4", VA = "0x15617B4")]
	public void CraftComponents()
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x1561C20", Offset = "0x1561C20", VA = "0x1561C20")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x1561F88", Offset = "0x1561F88", VA = "0x1561F88")]
	private void Update()
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x1561F8C", Offset = "0x1561F8C", VA = "0x1561F8C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x1562560", Offset = "0x1562560", VA = "0x1562560")]
	public Hold_Item()
	{
	}
}
[Token(Token = "0x2000047")]
public class UI_Hold : MonoBehaviour
{
	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UI_Hold singletne;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int WindowType;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image WindowUpPanel;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image ItemsPanel;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ScrollRect ItemsScrollRect;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Scrollbar ItemsScrollBar;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image WindowDownPanel;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text ItemName;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text ItemDescription;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text ItemParamsTitle;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text ItemParamsTitleOLD;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text ItemParams;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text ItemParamsOLD;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text ItemParamsTitle2;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text ItemParams2;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ScrollRect ItemParamsScrollRect;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Color colorCategotyText;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Color colorCategotyEnable;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Color colorCategotyDisable;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject[] Trum_Categories;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject All;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject Cannons;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject Rigging;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject Artefacts;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject Equipment;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject Goods;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject SellWindow;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject ItemList;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject CapacityTXT;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public RectTransform imageCross_PS4;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public RectTransform imageSquare_PS4;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public RectTransform SellOneBTN;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public RectTransform SellTenBTN;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject SellOnePanel;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject SellTenPanel;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Text SellOneTXT;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Text SellTenTXT;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Text SellOneTitle;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Text SellTenTitle;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject SellWeightTXT;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject SellWeightICN;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject SellCoinstICN;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Sprite WeightICN;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Sprite CoinsICN;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject ContentList;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Text ItemAmountParam;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Text ItemPriceParam;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Text ItemWeightParam;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Hold_Item seletdedItem;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Sprite HoldUpPanel;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Sprite HoldItemsPanel;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public Sprite HoldDownPanel;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public Sprite MarketUpPanel;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public Sprite MarketItemsPanel;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public Sprite MarketDownPanel;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public Sprite StorageUpPanel;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public Sprite StorageItemsPanel;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public Sprite StorageDownPanel;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public RectTransform AmountPanel;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public RectTransform AmountLeftBTN;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public RectTransform AmountCenterBTN;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public RectTransform AmountRightBTN;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public int currentAmountValue;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public CraftComponentMobile craftComponentPrefab;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public RectTransform craftComponentsPanel;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public HelpContentData ShopHelpData;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public Slider CapacitySlider;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int currentCapacity;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int maxCapacity;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private bool addInlist;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	public int selectedCategory;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private bool uniteCategorys;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x241")]
	private bool addFractions;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static bool[] categorysHoldEnabled;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static bool[] categorysMarketEnabled;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static bool[] categorysStorageEnabled;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public string SelectedTXT;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public Transform TUT_Coord_Item;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private float amountStartHeight;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
	private float timeOut;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private Tovar need_select_tovar;

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x161649C", Offset = "0x161649C", VA = "0x161649C")]
	public void SelectAmount(int button)
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x161714C", Offset = "0x161714C", VA = "0x161714C")]
	public void SellOne()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x1617D94", Offset = "0x1617D94", VA = "0x1617D94")]
	private void ProceedBuy()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x161760C", Offset = "0x161760C", VA = "0x161760C")]
	public void RefreshUIAfterTrade()
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x1618850", Offset = "0x1618850", VA = "0x1618850")]
	public void SellTen()
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x1618CB4", Offset = "0x1618CB4", VA = "0x1618CB4")]
	public void Unselect()
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x1619308", Offset = "0x1619308", VA = "0x1619308")]
	public void UnselectItems()
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x161805C", Offset = "0x161805C", VA = "0x161805C")]
	public void SelectCategory(int category)
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x16193B4", Offset = "0x16193B4", VA = "0x16193B4")]
	public void CloseHoldOutside()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x16193B8", Offset = "0x16193B8", VA = "0x16193B8")]
	private void CloseHold()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x1619404", Offset = "0x1619404", VA = "0x1619404")]
	public void AddItems()
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x16190E4", Offset = "0x16190E4", VA = "0x16190E4")]
	public void IndexingTovar()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x161A190", Offset = "0x161A190", VA = "0x161A190")]
	public void SetTovarForSelect(Tovar tovar)
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x161A1A0", Offset = "0x161A1A0", VA = "0x161A1A0")]
	private void SelectNextTovar()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x161A2D8", Offset = "0x161A2D8", VA = "0x161A2D8")]
	public void DisableCategory(int category)
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x161A43C", Offset = "0x161A43C", VA = "0x161A43C")]
	public void EnableCategorys()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x161A5A0", Offset = "0x161A5A0", VA = "0x161A5A0")]
	public void CheckCategorys()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x161AE78", Offset = "0x161AE78", VA = "0x161AE78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x161AF1C", Offset = "0x161AF1C", VA = "0x161AF1C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x161B028", Offset = "0x161B028", VA = "0x161B028")]
	private void onEndbleFunctions()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x161BAB4", Offset = "0x161BAB4", VA = "0x161BAB4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x161C080", Offset = "0x161C080", VA = "0x161C080")]
	private void OnLanguageChanged()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x161C1F4", Offset = "0x161C1F4", VA = "0x161C1F4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x1617034", Offset = "0x1617034", VA = "0x1617034")]
	private string GetBuyLocalization()
	{
		return null;
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x1616E90", Offset = "0x1616E90", VA = "0x1616E90")]
	private string GetSellLocalization()
	{
		return null;
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x1616F1C", Offset = "0x1616F1C", VA = "0x1616F1C")]
	private string GetThrowAwayLocalization()
	{
		return null;
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x1616FA8", Offset = "0x1616FA8", VA = "0x1616FA8")]
	private string GetToWarehouseLocalization()
	{
		return null;
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x16170C0", Offset = "0x16170C0", VA = "0x16170C0")]
	private string GetToShipLocalization()
	{
		return null;
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x1617C34", Offset = "0x1617C34", VA = "0x1617C34")]
	private bool CheckOverload(Tovar tovar, int amount)
	{
		return default(bool);
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x1617CD8", Offset = "0x1617CD8", VA = "0x1617CD8")]
	private void ShowOverloadConfirmation(Action onConfirmAction)
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x1616DE8", Offset = "0x1616DE8", VA = "0x1616DE8")]
	public int GetTotalPrice(Tovar tovar, int amount)
	{
		return default(int);
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x1617EBC", Offset = "0x1617EBC", VA = "0x1617EBC")]
	private void UpdateCapacity()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x161C384", Offset = "0x161C384", VA = "0x161C384")]
	public UI_Hold()
	{
	}
}
[Token(Token = "0x2000048")]
public class AdvertisingTimer : MonoBehaviour
{
	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Image timeBgImage;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text timeText;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Image watchAdImage;

	[Token(Token = "0x17000013")]
	public string TimeText
	{
		[Token(Token = "0x6000141")]
		[Address(RVA = "0x7E27B0", Offset = "0x7E27B0", VA = "0x7E27B0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000142")]
		[Address(RVA = "0x7E27D8", Offset = "0x7E27D8", VA = "0x7E27D8")]
		set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public bool WatchAdVisibility
	{
		[Token(Token = "0x6000143")]
		[Address(RVA = "0x7E285C", Offset = "0x7E285C", VA = "0x7E285C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000144")]
		[Address(RVA = "0x7E2888", Offset = "0x7E2888", VA = "0x7E2888")]
		set
		{
		}
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x7E28C4", Offset = "0x7E28C4", VA = "0x7E28C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x7E2920", Offset = "0x7E2920", VA = "0x7E2920")]
	public AdvertisingTimer()
	{
	}
}
[Token(Token = "0x2000049")]
public class Alert : RectTransformMonoBehaviour
{
	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Image alertImage;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text alertText;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Color greenImageColor;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Color greenTextColor;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Color redImageColor;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Color redTextColor;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Image imageInAlert;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Sprite green;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Sprite exclamatory;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Sprite red;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool greenState;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	private bool redState;

	[Token(Token = "0x17000015")]
	public string Text
	{
		[Token(Token = "0x6000147")]
		[Address(RVA = "0x7E2928", Offset = "0x7E2928", VA = "0x7E2928")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000148")]
		[Address(RVA = "0x7E2950", Offset = "0x7E2950", VA = "0x7E2950")]
		set
		{
		}
	}

	[Token(Token = "0x17000016")]
	public bool GreenState
	{
		[Token(Token = "0x6000149")]
		[Address(RVA = "0x7E2978", Offset = "0x7E2978", VA = "0x7E2978")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600014A")]
		[Address(RVA = "0x7E2980", Offset = "0x7E2980", VA = "0x7E2980")]
		set
		{
		}
	}

	[Token(Token = "0x17000017")]
	public bool RedState
	{
		[Token(Token = "0x600014B")]
		[Address(RVA = "0x7E2AD0", Offset = "0x7E2AD0", VA = "0x7E2AD0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600014C")]
		[Address(RVA = "0x7E2A28", Offset = "0x7E2A28", VA = "0x7E2A28")]
		set
		{
		}
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x7E2AD8", Offset = "0x7E2AD8", VA = "0x7E2AD8", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x7E2B1C", Offset = "0x7E2B1C", VA = "0x7E2B1C")]
	public void GreenMarkerMobile()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x7E2BA4", Offset = "0x7E2BA4", VA = "0x7E2BA4")]
	public void RedMarkerMobile()
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x7E2C2C", Offset = "0x7E2C2C", VA = "0x7E2C2C")]
	public Alert()
	{
	}
}
[Serializable]
[Token(Token = "0x200004A")]
public class AutoFocusIcons
{
	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private Sprite[] shipIcons;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Sprite monsterIcon;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite fortIcon;

	[Token(Token = "0x17000018")]
	public Sprite[] ShipIcons
	{
		[Token(Token = "0x6000151")]
		[Address(RVA = "0x7E5EE4", Offset = "0x7E5EE4", VA = "0x7E5EE4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000019")]
	public Sprite MonsterIcon
	{
		[Token(Token = "0x6000152")]
		[Address(RVA = "0x7E5EEC", Offset = "0x7E5EEC", VA = "0x7E5EEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001A")]
	public Sprite FortIcon
	{
		[Token(Token = "0x6000153")]
		[Address(RVA = "0x7E5EF4", Offset = "0x7E5EF4", VA = "0x7E5EF4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x7E5EFC", Offset = "0x7E5EFC", VA = "0x7E5EFC")]
	public AutoFocusIcons()
	{
	}
}
[Token(Token = "0x200004B")]
public class ButtonSpeedUpDown : MonoBehaviour
{
	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text textButton;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject title;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject percentText;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject icon;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject waitAdvIcon;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public static ButtonSpeedUpDown singletone;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Image iconImg;

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x7EEB84", Offset = "0x7EEB84", VA = "0x7EEB84")]
	public void SetSlowMo_nonstatc(float TargetTimeScale)
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x7EEC90", Offset = "0x7EEC90", VA = "0x7EEC90")]
	private void Start()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x7EEE94", Offset = "0x7EEE94", VA = "0x7EEE94")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x7EEFA8", Offset = "0x7EEFA8", VA = "0x7EEFA8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x7EED6C", Offset = "0x7EED6C", VA = "0x7EED6C")]
	private void UpdateText()
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x7EF0B4", Offset = "0x7EF0B4", VA = "0x7EF0B4")]
	public void DisableIcon(bool status)
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x7EF178", Offset = "0x7EF178", VA = "0x7EF178")]
	public void UpdateAdvIcon(bool val)
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x7EF318", Offset = "0x7EF318", VA = "0x7EF318")]
	public ButtonSpeedUpDown()
	{
	}
}
[Token(Token = "0x200004C")]
public class ConfigButtonParams : MonoBehaviour
{
	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject buttonBorder;

	[Token(Token = "0x1700001B")]
	public GameObject ButtonBorder
	{
		[Token(Token = "0x600015D")]
		[Address(RVA = "0x85C680", Offset = "0x85C680", VA = "0x85C680")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x85C688", Offset = "0x85C688", VA = "0x85C688")]
	public ConfigButtonParams()
	{
	}
}
[Token(Token = "0x200004D")]
public class ConfigCustomizeMobile : SingletonMonoBehaviour<ConfigCustomizeMobile>
{
	[Token(Token = "0x200004E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x577EB0", Offset = "0x577EB0")]
	private sealed class <LightCoroutine>d__62 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700001E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000186")]
			[Address(RVA = "0x1505F20", Offset = "0x1505F20", VA = "0x1505F20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000188")]
			[Address(RVA = "0x1505F68", Offset = "0x1505F68", VA = "0x1505F68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000183")]
		[Address(RVA = "0x1505E94", Offset = "0x1505E94", VA = "0x1505E94")]
		[DebuggerHidden]
		public <LightCoroutine>d__62(int <>1__state)
		{
		}

		[Token(Token = "0x6000184")]
		[Address(RVA = "0x1505EC0", Offset = "0x1505EC0", VA = "0x1505EC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000185")]
		[Address(RVA = "0x1505EC4", Offset = "0x1505EC4", VA = "0x1505EC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000187")]
		[Address(RVA = "0x1505F28", Offset = "0x1505F28", VA = "0x1505F28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200004F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x577EC0", Offset = "0x577EC0")]
	private sealed class <>c__DisplayClass64_0
	{
		[Token(Token = "0x4000292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AWE_global.SlotType[] itemsOrder;

		[Token(Token = "0x4000293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CustomizeItemMobile.States[] stateOrder;

		[Token(Token = "0x4000294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ConfigCustomizeMobile <>4__this;

		[Token(Token = "0x6000189")]
		[Address(RVA = "0x15056BC", Offset = "0x15056BC", VA = "0x15056BC")]
		public <>c__DisplayClass64_0()
		{
		}

		[Token(Token = "0x600018A")]
		[Address(RVA = "0x15056C4", Offset = "0x15056C4", VA = "0x15056C4")]
		internal int <SetCustomizeView>b__1(KeyValuePair<TovarData, CustomizeItemMobile.States> item1, KeyValuePair<TovarData, CustomizeItemMobile.States> item2)
		{
			return default(int);
		}

		[Token(Token = "0x600018B")]
		[Address(RVA = "0x15057E8", Offset = "0x15057E8", VA = "0x15057E8")]
		internal void <SetCustomizeView>b__2()
		{
		}
	}

	[Token(Token = "0x2000050")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x577ED0", Offset = "0x577ED0")]
	private sealed class <>c__DisplayClass64_1
	{
		[Token(Token = "0x4000295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CustomizeEquipSlotMobile equipSlot;

		[Token(Token = "0x600018C")]
		[Address(RVA = "0x1505808", Offset = "0x1505808", VA = "0x1505808")]
		public <>c__DisplayClass64_1()
		{
		}

		[Token(Token = "0x600018D")]
		[Address(RVA = "0x1505810", Offset = "0x1505810", VA = "0x1505810")]
		internal bool <SetCustomizeView>b__3(TovarData e)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x2000051")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x577EE0", Offset = "0x577EE0")]
	private sealed class <>c
	{
		[Token(Token = "0x4000296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<CustomizeEquipSlotMobile, AWE_global.SlotType> <>9__64_0;

		[Token(Token = "0x4000298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Predicate<KeyValuePair<TovarData, CustomizeItemMobile.States>> <>9__67_0;

		[Token(Token = "0x4000299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Predicate<CustomizeItemMobile> <>9__70_0;

		[Token(Token = "0x400029A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Func<CustomizeEquipSlotMobile, AWE_global.SlotType> <>9__71_0;

		[Token(Token = "0x600018F")]
		[Address(RVA = "0x1505604", Offset = "0x1505604", VA = "0x1505604")]
		public <>c()
		{
		}

		[Token(Token = "0x6000190")]
		[Address(RVA = "0x150560C", Offset = "0x150560C", VA = "0x150560C")]
		internal AWE_global.SlotType <SetCustomizeView>b__64_0(CustomizeEquipSlotMobile s)
		{
			return default(AWE_global.SlotType);
		}

		[Token(Token = "0x6000191")]
		[Address(RVA = "0x1505630", Offset = "0x1505630", VA = "0x1505630")]
		internal bool <SetScrollItems>b__67_0(KeyValuePair<TovarData, CustomizeItemMobile.States> i)
		{
			return default(bool);
		}

		[Token(Token = "0x6000192")]
		[Address(RVA = "0x1505674", Offset = "0x1505674", VA = "0x1505674")]
		internal bool <SetSelectionOnEquipped>b__70_0(CustomizeItemMobile i)
		{
			return default(bool);
		}

		[Token(Token = "0x6000193")]
		[Address(RVA = "0x1505698", Offset = "0x1505698", VA = "0x1505698")]
		internal AWE_global.SlotType <GetTovars>b__71_0(CustomizeEquipSlotMobile e)
		{
			return default(AWE_global.SlotType);
		}
	}

	[Token(Token = "0x2000052")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x577EF0", Offset = "0x577EF0")]
	private sealed class <>c__DisplayClass65_0
	{
		[Token(Token = "0x400029B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CustomizeItemMobile.States[] stateOrder;

		[Token(Token = "0x6000194")]
		[Address(RVA = "0x150585C", Offset = "0x150585C", VA = "0x150585C")]
		public <>c__DisplayClass65_0()
		{
		}

		[Token(Token = "0x6000195")]
		[Address(RVA = "0x1505864", Offset = "0x1505864", VA = "0x1505864")]
		internal int <SetShipsView>b__0(KeyValuePair<TovarData, CustomizeItemMobile.States> item1, KeyValuePair<TovarData, CustomizeItemMobile.States> item2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x2000053")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x577F00", Offset = "0x577F00")]
	private sealed class <>c__DisplayClass65_1
	{
		[Token(Token = "0x400029C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Tovar tovar;

		[Token(Token = "0x6000196")]
		[Address(RVA = "0x1505900", Offset = "0x1505900", VA = "0x1505900")]
		public <>c__DisplayClass65_1()
		{
		}

		[Token(Token = "0x6000197")]
		[Address(RVA = "0x1505908", Offset = "0x1505908", VA = "0x1505908")]
		internal bool <SetShipsView>b__1(KeyValuePair<TovarData, CustomizeItemMobile.States> t)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000054")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x577F10", Offset = "0x577F10")]
	private sealed class <>c__DisplayClass67_0
	{
		[Token(Token = "0x400029D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public KeyValuePair<TovarData, CustomizeItemMobile.States> item;

		[Token(Token = "0x6000198")]
		[Address(RVA = "0x150597C", Offset = "0x150597C", VA = "0x150597C")]
		public <>c__DisplayClass67_0()
		{
		}

		[Token(Token = "0x6000199")]
		[Address(RVA = "0x1505984", Offset = "0x1505984", VA = "0x1505984")]
		internal bool <SetScrollItems>b__1(TovarData e)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000055")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x577F20", Offset = "0x577F20")]
	private sealed class <SetSelectionOnEquipped>d__70 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400029E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400029F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ConfigCustomizeMobile <>4__this;

		[Token(Token = "0x40002A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CustomizeItemMobile <equipped>5__2;

		[Token(Token = "0x17000020")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600019D")]
			[Address(RVA = "0x1506228", Offset = "0x1506228", VA = "0x1506228", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000021")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600019F")]
			[Address(RVA = "0x1506270", Offset = "0x1506270", VA = "0x1506270", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600019A")]
		[Address(RVA = "0x1505F70", Offset = "0x1505F70", VA = "0x1505F70")]
		[DebuggerHidden]
		public <SetSelectionOnEquipped>d__70(int <>1__state)
		{
		}

		[Token(Token = "0x600019B")]
		[Address(RVA = "0x1505F9C", Offset = "0x1505F9C", VA = "0x1505F9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600019C")]
		[Address(RVA = "0x1505FA0", Offset = "0x1505FA0", VA = "0x1505FA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600019E")]
		[Address(RVA = "0x1506230", Offset = "0x1506230", VA = "0x1506230", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000056")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x577F30", Offset = "0x577F30")]
	private sealed class <>c__DisplayClass71_0
	{
		[Token(Token = "0x40002A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Tovar tovar;

		[Token(Token = "0x60001A0")]
		[Address(RVA = "0x1505A00", Offset = "0x1505A00", VA = "0x1505A00")]
		public <>c__DisplayClass71_0()
		{
		}

		[Token(Token = "0x60001A1")]
		[Address(RVA = "0x1505A08", Offset = "0x1505A08", VA = "0x1505A08")]
		internal bool <GetTovars>b__1(AWE_global.SlotType it)
		{
			return default(bool);
		}

		[Token(Token = "0x60001A2")]
		[Address(RVA = "0x1505A30", Offset = "0x1505A30", VA = "0x1505A30")]
		internal bool <GetTovars>b__2(string e)
		{
			return default(bool);
		}

		[Token(Token = "0x60001A3")]
		[Address(RVA = "0x1505A60", Offset = "0x1505A60", VA = "0x1505A60")]
		internal bool <GetTovars>b__3(CustomizeEquipSlotMobile es)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000057")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x577F40", Offset = "0x577F40")]
	private sealed class <>c__DisplayClass71_1
	{
		[Token(Token = "0x40002A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Tovar tovar;

		[Token(Token = "0x60001A4")]
		[Address(RVA = "0x1505A98", Offset = "0x1505A98", VA = "0x1505A98")]
		public <>c__DisplayClass71_1()
		{
		}

		[Token(Token = "0x60001A5")]
		[Address(RVA = "0x1505AA0", Offset = "0x1505AA0", VA = "0x1505AA0")]
		internal bool <GetTovars>b__5(string e)
		{
			return default(bool);
		}

		[Token(Token = "0x60001A6")]
		[Address(RVA = "0x1505AD0", Offset = "0x1505AD0", VA = "0x1505AD0")]
		internal bool <GetTovars>b__4(AWE_global.SlotType it)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000058")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x577F50", Offset = "0x577F50")]
	private sealed class <>c__DisplayClass72_0
	{
		[Token(Token = "0x40002A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CustomizeEquipSlotMobile customizeEquipSlot;

		[Token(Token = "0x60001A7")]
		[Address(RVA = "0x1505AF8", Offset = "0x1505AF8", VA = "0x1505AF8")]
		public <>c__DisplayClass72_0()
		{
		}

		[Token(Token = "0x60001A8")]
		[Address(RVA = "0x1505B00", Offset = "0x1505B00", VA = "0x1505B00")]
		internal bool <CustomizeEquipSlotOnClick>b__0(TovarData e)
		{
			return default(bool);
		}

		[Token(Token = "0x60001A9")]
		[Address(RVA = "0x1505B4C", Offset = "0x1505B4C", VA = "0x1505B4C")]
		internal bool <CustomizeEquipSlotOnClick>b__1(CustomizeItemMobile i)
		{
			return default(bool);
		}

		[Token(Token = "0x60001AA")]
		[Address(RVA = "0x1505BA0", Offset = "0x1505BA0", VA = "0x1505BA0")]
		internal bool <CustomizeEquipSlotOnClick>b__2(TovarData e)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000059")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x577F60", Offset = "0x577F60")]
	private sealed class <>c__DisplayClass73_0
	{
		[Token(Token = "0x40002A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CustomizeEquipSlotMobile customizeEquipSlot;

		[Token(Token = "0x40002A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CustomizeItemMobile customizeItem;

		[Token(Token = "0x60001AB")]
		[Address(RVA = "0x1505BE0", Offset = "0x1505BE0", VA = "0x1505BE0")]
		public <>c__DisplayClass73_0()
		{
		}

		[Token(Token = "0x60001AC")]
		[Address(RVA = "0x1505BE8", Offset = "0x1505BE8", VA = "0x1505BE8")]
		internal bool <CustomizeEquipSlotOnAcceptDrop>b__0(CustomizeItemMobile i)
		{
			return default(bool);
		}

		[Token(Token = "0x60001AD")]
		[Address(RVA = "0x1505C3C", Offset = "0x1505C3C", VA = "0x1505C3C")]
		internal bool <CustomizeEquipSlotOnAcceptDrop>b__1(CustomizeItemMobile i)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200005A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x577F70", Offset = "0x577F70")]
	private sealed class <>c__DisplayClass75_0
	{
		[Token(Token = "0x40002A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CustomizeItemMobile customizeItem;

		[Token(Token = "0x60001AE")]
		[Address(RVA = "0x1505C90", Offset = "0x1505C90", VA = "0x1505C90")]
		public <>c__DisplayClass75_0()
		{
		}

		[Token(Token = "0x60001AF")]
		[Address(RVA = "0x1505C98", Offset = "0x1505C98", VA = "0x1505C98")]
		internal bool <CustomizeItemOnToggleValueChanged>b__0(CustomizeEquipSlotMobile s)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200005B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x577F80", Offset = "0x577F80")]
	private sealed class <>c__DisplayClass76_0
	{
		[Token(Token = "0x40002A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Tovar tovar;

		[Token(Token = "0x40002A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CustomizeItemMobile customizeItem;

		[Token(Token = "0x40002AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ConfigCustomizeMobile <>4__this;

		[Token(Token = "0x60001B0")]
		[Address(RVA = "0x1505CE0", Offset = "0x1505CE0", VA = "0x1505CE0")]
		public <>c__DisplayClass76_0()
		{
		}

		[Token(Token = "0x60001B1")]
		[Address(RVA = "0x1505CE8", Offset = "0x1505CE8", VA = "0x1505CE8")]
		internal bool <SetSelectedScrollItem>b__0(CustomizeEquipSlotMobile s)
		{
			return default(bool);
		}

		[Token(Token = "0x60001B2")]
		[Address(RVA = "0x1505D20", Offset = "0x1505D20", VA = "0x1505D20")]
		internal void <SetSelectedScrollItem>b__1()
		{
		}
	}

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform equipSlotsPanel;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private CustomizeEquipSlotMobile[] customizeEquipSlots;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CustomizeEquipSlotMobile[] customizeEquipSlots_consoles;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private CustomizeEquipSlotMobile shipEquipSlot;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private ScrollRect scrollItemsRect;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform scrollItemsPanel;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private ToggleGroup scrollItemsToggleGroup;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform actionsPanel;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform buySellPanel;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Transform buySellPanel_consoles;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Text buySellTitleText;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Text buySellTitleText_consoles;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Text buySellPriceText;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Text buySellPriceText_consoles;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Transform repairPanel;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Transform repairPanel_consoles;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Text repairPriceText;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Text repairPriceText_consoles;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Transform choosePanel;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private Transform choosePanel_consoles;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private Text shipTitleText;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private CustomizeItemMobile customizeItemPrefab;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private RectTransform selectionPrefab;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private RectTransform equipSlotSelectionPrefab;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private Button customizeButton;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private Light lightPrefab;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private Alert repairAlert;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private Text actionText;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private CraftComponentMobile craftComponentPrefab;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private RectTransform craftComponentsPanel;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private HelpContentData helpData;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private Transform warnSmallerShipImagePrefab;

	[Token(Token = "0x4000279")]
	private const string CameraName = "H_Camera_Main";

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private List<CustomizeItemMobile> scrollItems;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private List<TovarData> emptyTovars;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[ShowInInspector]
	public RectTransform selection;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[ShowInInspector]
	public RectTransform equipSlotSelection;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private CustomizeItemMobile selectedScrollItem;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool isAnyItemDragging;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private float cameraStartRotLimitXDirection;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Ship previewShip;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool isShipsView;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private bool isBuyMode;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
	private bool show_unlock_dialog;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private float deltaTime;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int herbIndexOnship;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int flagIndexOnship;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int noseIndexOnship;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int caseIndexOnship;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static int auraIndexOnship;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int bortIndexOnship;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static int patchIndexOnship;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int waterIndexOnship;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Vector2 oldPosWindow;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private bool changeCursorPos;

	[Token(Token = "0x1700001C")]
	public static bool IsShipsView
	{
		[Token(Token = "0x600015F")]
		[Address(RVA = "0x85C690", Offset = "0x85C690", VA = "0x85C690")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000160")]
		[Address(RVA = "0x85C6F4", Offset = "0x85C6F4", VA = "0x85C6F4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public bool IsBuyMode
	{
		[Token(Token = "0x6000161")]
		[Address(RVA = "0x85C768", Offset = "0x85C768", VA = "0x85C768")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000162")]
		[Address(RVA = "0x85C770", Offset = "0x85C770", VA = "0x85C770")]
		set
		{
		}
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x85C864", Offset = "0x85C864", VA = "0x85C864")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x85DF90", Offset = "0x85DF90", VA = "0x85DF90")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x85E694", Offset = "0x85E694", VA = "0x85E694")]
	public void OnLanguageChanged()
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x85F57C", Offset = "0x85F57C", VA = "0x85F57C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x587634", Offset = "0x587634")]
	private IEnumerator LightCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x85F5D8", Offset = "0x85F5D8", VA = "0x85F5D8")]
	private void SetCustomizeView()
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x85CE28", Offset = "0x85CE28", VA = "0x85CE28")]
	private void SetShipsView()
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x85FE14", Offset = "0x85FE14", VA = "0x85FE14")]
	private CustomizeItemMobile.States[] GetStateOrder()
	{
		return null;
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x8611E4", Offset = "0x8611E4", VA = "0x8611E4")]
	private void SetScrollItems(List<KeyValuePair<TovarData, CustomizeItemMobile.States>> items)
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x861B18", Offset = "0x861B18", VA = "0x861B18")]
	private void SetScrollItemCanDragging(CustomizeItemMobile scrollItem)
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x8619F8", Offset = "0x8619F8", VA = "0x8619F8")]
	private void SetSelectionOnFirst()
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x861A98", Offset = "0x861A98", VA = "0x861A98")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58769C", Offset = "0x58769C")]
	private IEnumerator SetSelectionOnEquipped()
	{
		return null;
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x85FE90", Offset = "0x85FE90", VA = "0x85FE90")]
	private List<KeyValuePair<TovarData, CustomizeItemMobile.States>> GetTovars(params CustomizeEquipSlotMobile[] equipSlots)
	{
		return null;
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x861B74", Offset = "0x861B74", VA = "0x861B74")]
	private void CustomizeEquipSlotOnClick(CustomizeEquipSlotMobile customizeEquipSlot)
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x8621B4", Offset = "0x8621B4", VA = "0x8621B4")]
	public void CustomizeEquipSlotOnAcceptDrop(CustomizeEquipSlotMobile customizeEquipSlot, CustomizeItemMobile customizeItem)
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x860F9C", Offset = "0x860F9C", VA = "0x860F9C")]
	private void ClearScrollItems()
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x86252C", Offset = "0x86252C", VA = "0x86252C")]
	private void CustomizeItemOnToggleValueChanged(CustomizeItemMobile customizeItem, bool isOn)
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x85E69C", Offset = "0x85E69C", VA = "0x85E69C")]
	private void SetSelectedScrollItem(CustomizeItemMobile customizeItem)
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x8627B4", Offset = "0x8627B4", VA = "0x8627B4")]
	private void ChangeCamera(AWE_global.SlotType slotType)
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x8627B8", Offset = "0x8627B8", VA = "0x8627B8")]
	public void CustomizeButtonOnClick()
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x8626E8", Offset = "0x8626E8", VA = "0x8626E8")]
	private void CheckActionPanelVisibility()
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x8627BC", Offset = "0x8627BC", VA = "0x8627BC")]
	public void BuySellButtonOnClick()
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x862E14", Offset = "0x862E14", VA = "0x862E14")]
	public void RepairButtonOnClick()
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x862F24", Offset = "0x862F24", VA = "0x862F24")]
	public void ChooseButtonClick()
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x863250", Offset = "0x863250", VA = "0x863250")]
	private void ProceedChangeShip()
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x863588", Offset = "0x863588", VA = "0x863588")]
	private void Update()
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x8635E4", Offset = "0x8635E4", VA = "0x8635E4")]
	private void CustomizeItemMobileOnDragStateChanged(CustomizeItemMobile customizeItem, bool isDragging)
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x85E584", Offset = "0x85E584", VA = "0x85E584")]
	private void DestroyPreviewShip()
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x85DF8C", Offset = "0x85DF8C", VA = "0x85DF8C")]
	private void ItemsLinks()
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x8635F0", Offset = "0x8635F0", VA = "0x8635F0")]
	public ConfigCustomizeMobile()
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x863724", Offset = "0x863724", VA = "0x863724")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587704", Offset = "0x587704")]
	private bool <ProceedChangeShip>b__83_0(CustomizeItemMobile i)
	{
		return default(bool);
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x863778", Offset = "0x863778", VA = "0x863778")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587714", Offset = "0x587714")]
	private bool <ProceedChangeShip>b__83_1(CustomizeItemMobile i)
	{
		return default(bool);
	}
}
[Token(Token = "0x200005C")]
public class CustomizeEquipSlotMobile : RectTransformMonoBehaviour, IDropHandler, IEventSystemHandler
{
	[Serializable]
	[Token(Token = "0x200005D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x577F90", Offset = "0x577F90")]
	private sealed class <>c
	{
		[Token(Token = "0x40002B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x60001C2")]
		[Address(RVA = "0x15067EC", Offset = "0x15067EC", VA = "0x15067EC")]
		public <>c()
		{
		}

		[Token(Token = "0x60001C3")]
		[Address(RVA = "0x15067F4", Offset = "0x15067F4", VA = "0x15067F4")]
		internal void <.cctor>b__25_0(CustomizeEquipSlotMobile <p0>)
		{
		}

		[Token(Token = "0x60001C4")]
		[Address(RVA = "0x15067F8", Offset = "0x15067F8", VA = "0x15067F8")]
		internal void <.cctor>b__25_1(CustomizeEquipSlotMobile <p0>, CustomizeItemMobile <p1>)
		{
		}
	}

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private EquipSlot_new equipSlot;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Image iconImage;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Image highlightImage;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private PopupInfoMobile popupInfo;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57A948", Offset = "0x57A948")]
	private TovarData <EquippedTovarData>k__BackingField;

	[Token(Token = "0x17000022")]
	public EquipSlot_new EquipSlot
	{
		[Token(Token = "0x60001B3")]
		[Address(RVA = "0x7C301C", Offset = "0x7C301C", VA = "0x7C301C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000023")]
	public Image IconImage
	{
		[Token(Token = "0x60001B4")]
		[Address(RVA = "0x7C3024", Offset = "0x7C3024", VA = "0x7C3024")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000024")]
	public Image HighlightImage
	{
		[Token(Token = "0x60001B5")]
		[Address(RVA = "0x7C302C", Offset = "0x7C302C", VA = "0x7C302C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000025")]
	public PopupInfoMobile PopupInfo
	{
		[Token(Token = "0x60001B6")]
		[Address(RVA = "0x7C3034", Offset = "0x7C3034", VA = "0x7C3034")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000026")]
	public TovarData EquippedTovarData
	{
		[Token(Token = "0x60001B7")]
		[Address(RVA = "0x7C303C", Offset = "0x7C303C", VA = "0x7C303C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5877C4", Offset = "0x5877C4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001B8")]
		[Address(RVA = "0x7C3044", Offset = "0x7C3044", VA = "0x7C3044")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5877D4", Offset = "0x5877D4")]
		set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public static event Action<CustomizeEquipSlotMobile> OnClick
	{
		[Token(Token = "0x60001B9")]
		[Address(RVA = "0x7C304C", Offset = "0x7C304C", VA = "0x7C304C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5877E4", Offset = "0x5877E4")]
		add
		{
		}
		[Token(Token = "0x60001BA")]
		[Address(RVA = "0x7C3140", Offset = "0x7C3140", VA = "0x7C3140")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5877F4", Offset = "0x5877F4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public static event Action<CustomizeEquipSlotMobile, CustomizeItemMobile> OnAcceptDrop
	{
		[Token(Token = "0x60001BB")]
		[Address(RVA = "0x7C3234", Offset = "0x7C3234", VA = "0x7C3234")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587804", Offset = "0x587804")]
		add
		{
		}
		[Token(Token = "0x60001BC")]
		[Address(RVA = "0x7C332C", Offset = "0x7C332C", VA = "0x7C332C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587814", Offset = "0x587814")]
		remove
		{
		}
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x7C3424", Offset = "0x7C3424", VA = "0x7C3424")]
	public void CustomizeSlotOnClick()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x7C34B8", Offset = "0x7C34B8", VA = "0x7C34B8", Slot = "5")]
	public void OnDrop(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x7C3928", Offset = "0x7C3928", VA = "0x7C3928")]
	public CustomizeEquipSlotMobile()
	{
	}
}
[Token(Token = "0x200005E")]
public class ConfigTeamMobile : SingletonMonoBehaviour<ConfigTeamMobile>
{
	[Serializable]
	[Token(Token = "0x200005F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x577FA0", Offset = "0x577FA0")]
	private sealed class <>c
	{
		[Token(Token = "0x40002BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40002BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Tovar, int> <>9__45_0;

		[Token(Token = "0x40002C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<Tovar, int> <>9__47_0;

		[Token(Token = "0x40002C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<Tovar, int> <>9__49_0;

		[Token(Token = "0x40002C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Func<Tovar, int> <>9__51_0;

		[Token(Token = "0x60001E9")]
		[Address(RVA = "0x15062DC", Offset = "0x15062DC", VA = "0x15062DC")]
		public <>c()
		{
		}

		[Token(Token = "0x60001EA")]
		[Address(RVA = "0x15062E4", Offset = "0x15062E4", VA = "0x15062E4")]
		internal int <get_ParuIndexes>b__45_0(Tovar i)
		{
			return default(int);
		}

		[Token(Token = "0x60001EB")]
		[Address(RVA = "0x1506300", Offset = "0x1506300", VA = "0x1506300")]
		internal int <get_AboardIndexes>b__47_0(Tovar i)
		{
			return default(int);
		}

		[Token(Token = "0x60001EC")]
		[Address(RVA = "0x150631C", Offset = "0x150631C", VA = "0x150631C")]
		internal int <get_CanonIndexes>b__49_0(Tovar i)
		{
			return default(int);
		}

		[Token(Token = "0x60001ED")]
		[Address(RVA = "0x1506338", Offset = "0x1506338", VA = "0x1506338")]
		internal int <get_WoundedIndexes>b__51_0(Tovar i)
		{
			return default(int);
		}
	}

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ConfigPanel cfg_panel;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SaveDataProfile profile;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public TeamManageShipMobile teamManageShip;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public TeamManageTavernMobile teamManageTavern;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Sprite addSprite;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Sprite noOfficerSprite;

	[Token(Token = "0x40002B9")]
	public const int MaxRank = 5;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57A9B8", Offset = "0x57A9B8")]
	private int <ParuCount>k__BackingField;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57A9C8", Offset = "0x57A9C8")]
	private int <AboardCount>k__BackingField;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57A9D8", Offset = "0x57A9D8")]
	private int <CanonCount>k__BackingField;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57A9E8", Offset = "0x57A9E8")]
	private int <WoundedCount>k__BackingField;

	[Token(Token = "0x17000027")]
	public SaveDataProfile Profile
	{
		[Token(Token = "0x60001C5")]
		[Address(RVA = "0xA24314", Offset = "0xA24314", VA = "0xA24314")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000028")]
	public int ParuCount
	{
		[Token(Token = "0x60001C9")]
		[Address(RVA = "0xA244DC", Offset = "0xA244DC", VA = "0xA244DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587824", Offset = "0x587824")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60001CA")]
		[Address(RVA = "0xA244E4", Offset = "0xA244E4", VA = "0xA244E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587834", Offset = "0x587834")]
		private set
		{
		}
	}

	[Token(Token = "0x17000029")]
	public int AboardCount
	{
		[Token(Token = "0x60001CB")]
		[Address(RVA = "0xA244EC", Offset = "0xA244EC", VA = "0xA244EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587844", Offset = "0x587844")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60001CC")]
		[Address(RVA = "0xA244F4", Offset = "0xA244F4", VA = "0xA244F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587854", Offset = "0x587854")]
		private set
		{
		}
	}

	[Token(Token = "0x1700002A")]
	public int CanonCount
	{
		[Token(Token = "0x60001CD")]
		[Address(RVA = "0xA244FC", Offset = "0xA244FC", VA = "0xA244FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587864", Offset = "0x587864")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60001CE")]
		[Address(RVA = "0xA24504", Offset = "0xA24504", VA = "0xA24504")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587874", Offset = "0x587874")]
		private set
		{
		}
	}

	[Token(Token = "0x1700002B")]
	public int WoundedCount
	{
		[Token(Token = "0x60001CF")]
		[Address(RVA = "0xA2450C", Offset = "0xA2450C", VA = "0xA2450C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587884", Offset = "0x587884")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60001D0")]
		[Address(RVA = "0xA24514", Offset = "0xA24514", VA = "0xA24514")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587894", Offset = "0x587894")]
		private set
		{
		}
	}

	[Token(Token = "0x1700002C")]
	public int TotalCount
	{
		[Token(Token = "0x60001D1")]
		[Address(RVA = "0xA2451C", Offset = "0xA2451C", VA = "0xA2451C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700002D")]
	public int XpPoints
	{
		[Token(Token = "0x60001D2")]
		[Address(RVA = "0xA2452C", Offset = "0xA2452C", VA = "0xA2452C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700002E")]
	public Sprite AddSprite
	{
		[Token(Token = "0x60001D3")]
		[Address(RVA = "0xA245BC", Offset = "0xA245BC", VA = "0xA245BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002F")]
	public Sprite NoOfficerSprite
	{
		[Token(Token = "0x60001D4")]
		[Address(RVA = "0xA245C4", Offset = "0xA245C4", VA = "0xA245C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000030")]
	public Tovar[] ParuTovars
	{
		[Token(Token = "0x60001D5")]
		[Address(RVA = "0xA245CC", Offset = "0xA245CC", VA = "0xA245CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000031")]
	public Tovar[] AboardTovars
	{
		[Token(Token = "0x60001D6")]
		[Address(RVA = "0xA247B0", Offset = "0xA247B0", VA = "0xA247B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000032")]
	public Tovar[] CanonTovars
	{
		[Token(Token = "0x60001D7")]
		[Address(RVA = "0xA24994", Offset = "0xA24994", VA = "0xA24994")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000033")]
	public Tovar[] WoundedTovars
	{
		[Token(Token = "0x60001D8")]
		[Address(RVA = "0xA24B78", Offset = "0xA24B78", VA = "0xA24B78")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000034")]
	public int[] ParuIndexes
	{
		[Token(Token = "0x60001D9")]
		[Address(RVA = "0xA24D5C", Offset = "0xA24D5C", VA = "0xA24D5C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000035")]
	public int[] AboardIndexes
	{
		[Token(Token = "0x60001DA")]
		[Address(RVA = "0xA24EB4", Offset = "0xA24EB4", VA = "0xA24EB4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000036")]
	public int[] CanonIndexes
	{
		[Token(Token = "0x60001DB")]
		[Address(RVA = "0xA2500C", Offset = "0xA2500C", VA = "0xA2500C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000037")]
	public int[] WoundedIndexes
	{
		[Token(Token = "0x60001DC")]
		[Address(RVA = "0xA25164", Offset = "0xA25164", VA = "0xA25164")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000038")]
	public int_z[] HirePrices
	{
		[Token(Token = "0x60001DD")]
		[Address(RVA = "0xA252BC", Offset = "0xA252BC", VA = "0xA252BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xA2431C", Offset = "0xA2431C", VA = "0xA2431C")]
	private void OnProfileLoaded(object obj)
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xA24394", Offset = "0xA24394", VA = "0xA24394")]
	public void SetSpecialProfile(SaveDataProfile profile_)
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xA243A4", Offset = "0xA243A4", VA = "0xA243A4", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xA25498", Offset = "0xA25498", VA = "0xA25498")]
	public Tovar GetCrewmanTovar(CrewmanShipMobile crewman)
	{
		return null;
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xA254B8", Offset = "0xA254B8", VA = "0xA254B8")]
	public Tovar GetCrewmanTovar(int crewmanRank, CrewmanShipMobile.States crewmanState)
	{
		return null;
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xA25534", Offset = "0xA25534", VA = "0xA25534")]
	public int GetCrewmanTovarIndex(CrewmanShipMobile crewman)
	{
		return default(int);
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xA25558", Offset = "0xA25558", VA = "0xA25558")]
	public int GetCrewmanTovarIndex(int crewmanRank, CrewmanShipMobile.States crewmanState)
	{
		return default(int);
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xA2557C", Offset = "0xA2557C", VA = "0xA2557C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xA259B8", Offset = "0xA259B8", VA = "0xA259B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xA255F4", Offset = "0xA255F4", VA = "0xA255F4")]
	public void Refresh()
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xA25CB8", Offset = "0xA25CB8", VA = "0xA25CB8")]
	public List<OfficerData> GetOfficersData(AWE_global.SlotType officerType)
	{
		return null;
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xA25FB4", Offset = "0xA25FB4", VA = "0xA25FB4")]
	public void ClosePopupWindow()
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xA25FEC", Offset = "0xA25FEC", VA = "0xA25FEC")]
	public ConfigTeamMobile()
	{
	}
}
[Token(Token = "0x2000060")]
public class CrewmanInfoWindowMobile : BaseMonoBehaviour
{
	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text titleText;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text countText;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text descriptionText;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform statsPanel;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private StatPanelMobile statPanelPrefab;

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xA328F0", Offset = "0xA328F0", VA = "0xA328F0")]
	public void Show(CrewmanShipMobile crewman)
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xA33158", Offset = "0xA33158", VA = "0xA33158")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xA33224", Offset = "0xA33224", VA = "0xA33224")]
	public CrewmanInfoWindowMobile()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xA3322C", Offset = "0xA3322C", VA = "0xA3322C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5878A4", Offset = "0x5878A4")]
	private void <OnEnable>b__6_0()
	{
	}
}
[Token(Token = "0x2000061")]
public class CrewmanShipMobile : RectTransformMonoBehaviour
{
	[Token(Token = "0x2000062")]
	public enum States
	{
		[Token(Token = "0x40002D7")]
		Paru,
		[Token(Token = "0x40002D8")]
		Aboard,
		[Token(Token = "0x40002D9")]
		Canon,
		[Token(Token = "0x40002DA")]
		Wounded,
		[Token(Token = "0x40002DB")]
		InTavern,
		[Token(Token = "0x40002DC")]
		Hirable,
		[Token(Token = "0x40002DD")]
		Upgrading
	}

	[Serializable]
	[Token(Token = "0x2000063")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x577FB0", Offset = "0x577FB0")]
	private sealed class <>c
	{
		[Token(Token = "0x40002DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x600020E")]
		[Address(RVA = "0x1506778", Offset = "0x1506778", VA = "0x1506778")]
		public <>c()
		{
		}

		[Token(Token = "0x600020F")]
		[Address(RVA = "0x1506780", Offset = "0x1506780", VA = "0x1506780")]
		internal void <.cctor>b__52_0(CrewmanShipMobile <p0>)
		{
		}

		[Token(Token = "0x6000210")]
		[Address(RVA = "0x1506784", Offset = "0x1506784", VA = "0x1506784")]
		internal void <.cctor>b__52_1(CrewmanShipMobile <p0>)
		{
		}
	}

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private int rank;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private States state;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Image bodyImage;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Button actionButton;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text actionButtonText;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform rankPanel;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform textParent;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Text text;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private LayoutElement starPrefab;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int count;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool showRank;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	private bool canUpgrade;

	[Token(Token = "0x17000039")]
	public Image BodyImage
	{
		[Token(Token = "0x60001F2")]
		[Address(RVA = "0xA33254", Offset = "0xA33254", VA = "0xA33254")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003A")]
	public States State
	{
		[Token(Token = "0x60001F7")]
		[Address(RVA = "0xA33634", Offset = "0xA33634", VA = "0xA33634")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x60001F8")]
		[Address(RVA = "0xA3363C", Offset = "0xA3363C", VA = "0xA3363C")]
		set
		{
		}
	}

	[Token(Token = "0x1700003B")]
	public int Count
	{
		[Token(Token = "0x60001F9")]
		[Address(RVA = "0xA33644", Offset = "0xA33644", VA = "0xA33644")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60001FA")]
		[Address(RVA = "0xA3364C", Offset = "0xA3364C", VA = "0xA3364C")]
		set
		{
		}
	}

	[Token(Token = "0x1700003C")]
	public string Text
	{
		[Token(Token = "0x60001FB")]
		[Address(RVA = "0xA33710", Offset = "0xA33710", VA = "0xA33710")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001FC")]
		[Address(RVA = "0xA33738", Offset = "0xA33738", VA = "0xA33738")]
		set
		{
		}
	}

	[Token(Token = "0x1700003D")]
	public string ActionButtonText
	{
		[Token(Token = "0x60001FD")]
		[Address(RVA = "0xA3378C", Offset = "0xA3378C", VA = "0xA3378C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001FE")]
		[Address(RVA = "0xA337B4", Offset = "0xA337B4", VA = "0xA337B4")]
		set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	public Transform ActionButton
	{
		[Token(Token = "0x60001FF")]
		[Address(RVA = "0xA337DC", Offset = "0xA337DC", VA = "0xA337DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003F")]
	public int Rank
	{
		[Token(Token = "0x6000200")]
		[Address(RVA = "0xA337FC", Offset = "0xA337FC", VA = "0xA337FC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000040")]
	public bool ShowRank
	{
		[Token(Token = "0x6000201")]
		[Address(RVA = "0xA33804", Offset = "0xA33804", VA = "0xA33804")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000202")]
		[Address(RVA = "0xA3380C", Offset = "0xA3380C", VA = "0xA3380C")]
		set
		{
		}
	}

	[Token(Token = "0x17000041")]
	public bool CanUpgrade
	{
		[Token(Token = "0x6000203")]
		[Address(RVA = "0xA33A48", Offset = "0xA33A48", VA = "0xA33A48")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000204")]
		[Address(RVA = "0xA33A50", Offset = "0xA33A50", VA = "0xA33A50")]
		set
		{
		}
	}

	[Token(Token = "0x17000042")]
	public bool CanHeal
	{
		[Token(Token = "0x6000205")]
		[Address(RVA = "0xA33A94", Offset = "0xA33A94", VA = "0xA33A94")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000206")]
		[Address(RVA = "0xA33AD8", Offset = "0xA33AD8", VA = "0xA33AD8")]
		set
		{
		}
	}

	[Token(Token = "0x17000043")]
	public int XpPointsForUpgrade
	{
		[Token(Token = "0x6000207")]
		[Address(RVA = "0xA33B30", Offset = "0xA33B30", VA = "0xA33B30")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x14000003")]
	public static event Action<CrewmanShipMobile> ActionButtonClicked
	{
		[Token(Token = "0x60001F3")]
		[Address(RVA = "0xA3325C", Offset = "0xA3325C", VA = "0xA3325C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5878B4", Offset = "0x5878B4")]
		add
		{
		}
		[Token(Token = "0x60001F4")]
		[Address(RVA = "0xA33350", Offset = "0xA33350", VA = "0xA33350")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5878C4", Offset = "0x5878C4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public static event Action<CrewmanShipMobile> BodyButtonClicked
	{
		[Token(Token = "0x60001F5")]
		[Address(RVA = "0xA33444", Offset = "0xA33444", VA = "0xA33444")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5878D4", Offset = "0x5878D4")]
		add
		{
		}
		[Token(Token = "0x60001F6")]
		[Address(RVA = "0xA3353C", Offset = "0xA3353C", VA = "0xA3353C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5878E4", Offset = "0x5878E4")]
		remove
		{
		}
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xA33B3C", Offset = "0xA33B3C", VA = "0xA33B3C")]
	public void ActionButtonClick()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xA33BD0", Offset = "0xA33BD0", VA = "0xA33BD0")]
	public void HideControls()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xA33C4C", Offset = "0xA33C4C", VA = "0xA33C4C")]
	public void BodyButtonClick()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0xA33CE0", Offset = "0xA33CE0", VA = "0xA33CE0")]
	public CrewmanShipMobile()
	{
	}
}
[Token(Token = "0x2000064")]
public class CrewmanUpgradeStatsPanelMobile : BaseMonoBehaviour
{
	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text titleText;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text valueText;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text deltaText;

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xA33E30", Offset = "0xA33E30", VA = "0xA33E30")]
	public void Set(string title, int value, int delta, bool addPercent)
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xA33FEC", Offset = "0xA33FEC", VA = "0xA33FEC")]
	public CrewmanUpgradeStatsPanelMobile()
	{
	}
}
[Token(Token = "0x2000065")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x577FC0", Offset = "0x577FC0")]
public class DeckPanelMobile : BaseMonoBehaviour
{
	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TeamManageShipMobile teamManageShipMobile;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private CrewmanShipMobile.States teamState;

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x7CA8E0", Offset = "0x7CA8E0", VA = "0x7CA8E0")]
	public void OnDropped(Drag obj)
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x7CAAA0", Offset = "0x7CAAA0", VA = "0x7CAAA0")]
	public DeckPanelMobile()
	{
	}
}
[Token(Token = "0x2000066")]
public class DeckStatsMobile : BaseMonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000067")]
	public class OfficerSlot
	{
		[Token(Token = "0x40002E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private EquipSlot_new equipSlot;

		[Token(Token = "0x40002EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image icon;

		[Token(Token = "0x40002EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Button button;

		[Token(Token = "0x40002EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PopupInfoMobile popupInfo;

		[Token(Token = "0x40002ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OfficerData equippedOfficerData;

		[Token(Token = "0x17000044")]
		public EquipSlot_new EquipSlot
		{
			[Token(Token = "0x600021C")]
			[Address(RVA = "0x15075BC", Offset = "0x15075BC", VA = "0x15075BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000045")]
		public Image Icon
		{
			[Token(Token = "0x600021D")]
			[Address(RVA = "0x15075C4", Offset = "0x15075C4", VA = "0x15075C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000046")]
		public Button Button
		{
			[Token(Token = "0x600021E")]
			[Address(RVA = "0x15075CC", Offset = "0x15075CC", VA = "0x15075CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000047")]
		public OfficerData EquippedOfficerData
		{
			[Token(Token = "0x600021F")]
			[Address(RVA = "0x15075D4", Offset = "0x15075D4", VA = "0x15075D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000220")]
			[Address(RVA = "0x15075DC", Offset = "0x15075DC", VA = "0x15075DC")]
			set
			{
			}
		}

		[Token(Token = "0x6000221")]
		[Address(RVA = "0x1507620", Offset = "0x1507620", VA = "0x1507620")]
		public OfficerSlot()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000068")]
	private class TwoTextControls : KeyValuePairClass<GameObject, Text>
	{
		[Token(Token = "0x6000222")]
		[Address(RVA = "0x1507628", Offset = "0x1507628", VA = "0x1507628")]
		public TwoTextControls()
		{
		}
	}

	[Token(Token = "0x2000069")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578028", Offset = "0x578028")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x40002EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OfficerSlot officerSlot;

		[Token(Token = "0x6000223")]
		[Address(RVA = "0x150757C", Offset = "0x150757C", VA = "0x150757C")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x6000224")]
		[Address(RVA = "0x1507584", Offset = "0x1507584", VA = "0x1507584")]
		internal bool <SetOfficers>b__1(OfficerData o)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x200006A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578038", Offset = "0x578038")]
	private sealed class <>c
	{
		[Token(Token = "0x40002EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40002F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<OfficerData> <>9__11_0;

		[Token(Token = "0x40002F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<OfficerSlot, EquipSlot_new> <>9__12_0;

		[Token(Token = "0x6000226")]
		[Address(RVA = "0x1507534", Offset = "0x1507534", VA = "0x1507534")]
		public <>c()
		{
		}

		[Token(Token = "0x6000227")]
		[Address(RVA = "0x150753C", Offset = "0x150753C", VA = "0x150753C")]
		internal bool <SetOfficers>b__11_0(OfficerData o)
		{
			return default(bool);
		}

		[Token(Token = "0x6000228")]
		[Address(RVA = "0x1507560", Offset = "0x1507560", VA = "0x1507560")]
		internal EquipSlot_new <OfficerSlotOnClick>b__12_0(OfficerSlot s)
		{
			return null;
		}
	}

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private OfficersWindowMobile officersWindow;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TwoTextControls efficiencyControls;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TwoTextControls[] extraStatsControls;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public OfficerSlot[] officerSlots;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AWE_global.SlotType officersType;

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x7CAAA8", Offset = "0x7CAAA8", VA = "0x7CAAA8")]
	public void SetEfficiencyVisible(bool isVisible)
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x7CAB18", Offset = "0x7CAB18", VA = "0x7CAB18")]
	public void SetEfficiency(int efficiency)
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x7CABB8", Offset = "0x7CABB8", VA = "0x7CABB8")]
	public void SetExtraStat(int index, string value)
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x7CAC4C", Offset = "0x7CAC4C", VA = "0x7CAC4C")]
	public void SetExtraStatVisible(int index, bool isVisible)
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x7CACE4", Offset = "0x7CACE4", VA = "0x7CACE4")]
	public void SetOfficers(AWE_global.SlotType officersType)
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x7CB0CC", Offset = "0x7CB0CC", VA = "0x7CB0CC")]
	public void OfficerSlotOnClick(int index)
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x7CB290", Offset = "0x7CB290", VA = "0x7CB290")]
	public DeckStatsMobile()
	{
	}
}
[Token(Token = "0x200006B")]
public class OfficerData
{
	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57ABC8", Offset = "0x57ABC8")]
	private Tovar <Tovar>k__BackingField;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57ABD8", Offset = "0x57ABD8")]
	private int <TovIndex>k__BackingField;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57ABE8", Offset = "0x57ABE8")]
	private int <SlotIndex>k__BackingField;

	[Token(Token = "0x17000048")]
	public Tovar Tovar
	{
		[Token(Token = "0x6000229")]
		[Address(RVA = "0x15DDE18", Offset = "0x15DDE18", VA = "0x15DDE18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5878F4", Offset = "0x5878F4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600022A")]
		[Address(RVA = "0x15DDE20", Offset = "0x15DDE20", VA = "0x15DDE20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587904", Offset = "0x587904")]
		set
		{
		}
	}

	[Token(Token = "0x17000049")]
	public int TovIndex
	{
		[Token(Token = "0x600022B")]
		[Address(RVA = "0x15DDE28", Offset = "0x15DDE28", VA = "0x15DDE28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587914", Offset = "0x587914")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600022C")]
		[Address(RVA = "0x15DDE30", Offset = "0x15DDE30", VA = "0x15DDE30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587924", Offset = "0x587924")]
		set
		{
		}
	}

	[Token(Token = "0x1700004A")]
	public int SlotIndex
	{
		[Token(Token = "0x600022D")]
		[Address(RVA = "0x15DDE38", Offset = "0x15DDE38", VA = "0x15DDE38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587934", Offset = "0x587934")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600022E")]
		[Address(RVA = "0x15DDE40", Offset = "0x15DDE40", VA = "0x15DDE40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587944", Offset = "0x587944")]
		set
		{
		}
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x15DDE48", Offset = "0x15DDE48", VA = "0x15DDE48")]
	public OfficerData(Tovar tovar, int tovIndex, int slotIndex)
	{
	}
}
[Token(Token = "0x200006C")]
public class OfficersWindowMobile : SingletonMonoBehaviour<OfficersWindowMobile>
{
	[Serializable]
	[Token(Token = "0x200006D")]
	public class OfficerSlot
	{
		[Token(Token = "0x4000308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Toggle toggle;

		[Token(Token = "0x4000309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image icon;

		[Token(Token = "0x400030A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform checkmarkPlace;

		[Token(Token = "0x400030B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image equippedMark;

		[Token(Token = "0x400030C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57ACF8", Offset = "0x57ACF8")]
		private OfficerData <OfficerData>k__BackingField;

		[Token(Token = "0x1700004B")]
		public Toggle Toggle
		{
			[Token(Token = "0x600023E")]
			[Address(RVA = "0x157D964", Offset = "0x157D964", VA = "0x157D964")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004C")]
		public Image Icon
		{
			[Token(Token = "0x600023F")]
			[Address(RVA = "0x157D96C", Offset = "0x157D96C", VA = "0x157D96C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004D")]
		public Transform CheckmarkPlace
		{
			[Token(Token = "0x6000240")]
			[Address(RVA = "0x157D974", Offset = "0x157D974", VA = "0x157D974")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004E")]
		public bool Equipped
		{
			[Token(Token = "0x6000241")]
			[Address(RVA = "0x157D920", Offset = "0x157D920", VA = "0x157D920")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000242")]
			[Address(RVA = "0x157D97C", Offset = "0x157D97C", VA = "0x157D97C")]
			set
			{
			}
		}

		[Token(Token = "0x1700004F")]
		public OfficerData OfficerData
		{
			[Token(Token = "0x6000243")]
			[Address(RVA = "0x157D9B8", Offset = "0x157D9B8", VA = "0x157D9B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587974", Offset = "0x587974")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000244")]
			[Address(RVA = "0x157D9C0", Offset = "0x157D9C0", VA = "0x157D9C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587984", Offset = "0x587984")]
			set
			{
			}
		}

		[Token(Token = "0x6000245")]
		[Address(RVA = "0x157D9C8", Offset = "0x157D9C8", VA = "0x157D9C8")]
		public OfficerSlot()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200006E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578048", Offset = "0x578048")]
	private sealed class <>c
	{
		[Token(Token = "0x400030D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400030E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<OfficerData> <>9__21_0;

		[Token(Token = "0x400030F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Predicate<OfficerData> <>9__21_1;

		[Token(Token = "0x4000310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Predicate<OfficerSlot> <>9__21_3;

		[Token(Token = "0x4000311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Predicate<OfficerSlot> <>9__21_4;

		[Token(Token = "0x6000247")]
		[Address(RVA = "0x157D8A8", Offset = "0x157D8A8", VA = "0x157D8A8")]
		public <>c()
		{
		}

		[Token(Token = "0x6000248")]
		[Address(RVA = "0x157D8B0", Offset = "0x157D8B0", VA = "0x157D8B0")]
		internal bool <Show>b__21_0(OfficerData o)
		{
			return default(bool);
		}

		[Token(Token = "0x6000249")]
		[Address(RVA = "0x157D8D4", Offset = "0x157D8D4", VA = "0x157D8D4")]
		internal bool <Show>b__21_1(OfficerData o)
		{
			return default(bool);
		}

		[Token(Token = "0x600024A")]
		[Address(RVA = "0x157D8F8", Offset = "0x157D8F8", VA = "0x157D8F8")]
		internal bool <Show>b__21_3(OfficerSlot s)
		{
			return default(bool);
		}

		[Token(Token = "0x600024B")]
		[Address(RVA = "0x157D94C", Offset = "0x157D94C", VA = "0x157D94C")]
		internal bool <Show>b__21_4(OfficerSlot s)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TeamManageShipMobile teamManageShipMobile;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text windowTitleText;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public OfficerSlot[] officerSlots;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text officerTitleText;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text officerDescriptionText;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform statsPanel;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private StatPanelMobile statPanelPrefab;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	public Text actionButtonText;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Color selectionColor;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private RectTransform selectionPrefab;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private ToggleGroup toggleGroup;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	public Button ActionButton;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private EquipSlot_new selectedEquipSlot;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OfficerData equippedOfficerData;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private OfficerSlot selectedOfficerSlot;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private EquipSlot_new[] allEquipSlots;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool isAssignMode;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private RectTransform selection;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OfficerSlot officerSlotSel;

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x15DDE94", Offset = "0x15DDE94", VA = "0x15DDE94")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x15DE1C0", Offset = "0x15DE1C0", VA = "0x15DE1C0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x15DE1C4", Offset = "0x15DE1C4", VA = "0x15DE1C4")]
	public void Show(AWE_global.SlotType officersType, EquipSlot_new selectedEquipSlot, OfficerData equippedOfficerData, EquipSlot_new[] allEquipSlots, int index)
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x15DE104", Offset = "0x15DE104", VA = "0x15DE104")]
	public void OfficerSlotToggleOnChanged(int index)
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x15DEBB0", Offset = "0x15DEBB0", VA = "0x15DEBB0")]
	private void RefreshSelectedSlot(OfficerSlot officerSlot)
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x15E02EC", Offset = "0x15E02EC", VA = "0x15E02EC")]
	private void RefreshAssignMode(OfficerSlot officerSlot)
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x15DEFA0", Offset = "0x15DEFA0", VA = "0x15DEFA0")]
	public void ActionButtonOnClick()
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x15E042C", Offset = "0x15E042C", VA = "0x15E042C")]
	private void RefreshTeam()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x15DF3B0", Offset = "0x15DF3B0", VA = "0x15DF3B0")]
	private Dictionary<string, string> GetOfficerStats(Tovar tovar)
	{
		return null;
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x15E044C", Offset = "0x15E044C", VA = "0x15E044C")]
	private string GetStatValueWithPrefix(int value, float coef = 1f)
	{
		return null;
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x15E04FC", Offset = "0x15E04FC", VA = "0x15E04FC")]
	public static int GetEfficiency(int value, int MaxEfficiency)
	{
		return default(int);
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x15E051C", Offset = "0x15E051C", VA = "0x15E051C")]
	public OfficersWindowMobile()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x15E0570", Offset = "0x15E0570", VA = "0x15E0570")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587954", Offset = "0x587954")]
	private void <OnEnable>b__19_0()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x15E0598", Offset = "0x15E0598", VA = "0x15E0598")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587964", Offset = "0x587964")]
	private bool <Show>b__21_2(OfficerSlot s)
	{
		return default(bool);
	}
}
[Token(Token = "0x200006F")]
public class StatPanelMobile : BaseMonoBehaviour
{
	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text titleText;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text valueText;

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x168B1F8", Offset = "0x168B1F8", VA = "0x168B1F8")]
	public void Set(string title, string value)
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x168B24C", Offset = "0x168B24C", VA = "0x168B24C")]
	public StatPanelMobile()
	{
	}
}
[Token(Token = "0x2000070")]
public class TeamManageShipMobile : BaseMonoBehaviour
{
	[Token(Token = "0x2000071")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578058", Offset = "0x578058")]
	private sealed class <>c__DisplayClass43_0
	{
		[Token(Token = "0x4000337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TeamManageShipMobile <>4__this;

		[Token(Token = "0x4000338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isScrollDown;

		[Token(Token = "0x6000265")]
		[Address(RVA = "0x1581D7C", Offset = "0x1581D7C", VA = "0x1581D7C")]
		public <>c__DisplayClass43_0()
		{
		}

		[Token(Token = "0x6000266")]
		[Address(RVA = "0x1581D84", Offset = "0x1581D84", VA = "0x1581D84")]
		internal void <Scroll>b__0(float a)
		{
		}

		[Token(Token = "0x6000267")]
		[Address(RVA = "0x1581DD8", Offset = "0x1581DD8", VA = "0x1581DD8")]
		internal void <Scroll>b__1()
		{
		}

		[Token(Token = "0x6000268")]
		[Address(RVA = "0x1581E58", Offset = "0x1581E58", VA = "0x1581E58")]
		internal void <Scroll>b__2(float y)
		{
		}
	}

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform scrollingPanel;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Image topShadowImage;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Image bottomShadowImage;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public Button tavernButton;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	public Button medbayButton;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text woundedText;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	public CrewmanShipMobile[] teamParu;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	public CrewmanShipMobile[] teamAboard;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	public CrewmanShipMobile[] teamCanon;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	public CrewmanShipMobile[] teamWounded;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	public Button[] OfficerSlotsPanelParu;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	public Button[] OfficerSlotsPanelAboard;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	public Button[] OfficerSlotsPanelCanon;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	public GameObject OfficersWindow;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	public GameObject[] OfficersWindowSlotes;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	public DeckStatsMobile[] decksStats;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Text medicineCountText;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	public Button healAllButton;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Text healAllCountText;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private UpgradeCrewmanWindowMobile upgradeWindow;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public UpgradeCrewmanWindowMobile upgradeWindowPublic;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private TeamManageTavernMobile teamManageTavernMobile;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private CrewmanInfoWindowMobile cremanInfoWindow;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private RectTransform medbayPanel;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private HelpContentData helpData;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private List<CrewmanShipMobile> tempActiveHighlightTeam;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private int medicineCount;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public bool isScrolledDown;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
	public bool isRightPanel;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF6")]
	public bool isOfficersWindow;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject UnderCursor;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private ConfigPanel cfg_panel;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private ConfigTeamMobile cfg_tm;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private bool activeMedbayMove;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private GameObject enterOfficerSlot;

	[Token(Token = "0x17000050")]
	public bool IsMedbayVisibleByScreen
	{
		[Token(Token = "0x600024F")]
		[Address(RVA = "0x15F1AE0", Offset = "0x15F1AE0", VA = "0x15F1AE0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x15F19E4", Offset = "0x15F19E4", VA = "0x15F19E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x15F1BCC", Offset = "0x15F1BCC", VA = "0x15F1BCC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x15F353C", Offset = "0x15F353C", VA = "0x15F353C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x15F1EA8", Offset = "0x15F1EA8", VA = "0x15F1EA8")]
	public void RefreshTeam()
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x15F390C", Offset = "0x15F390C", VA = "0x15F390C")]
	private void SetCrewmanShip(CrewmanShipMobile crewman, int rank, int count, int xpPoints)
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x15F39F8", Offset = "0x15F39F8", VA = "0x15F39F8")]
	private void CrewmanOnActionButtonClicked(CrewmanShipMobile crewman)
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x15F42C8", Offset = "0x15F42C8", VA = "0x15F42C8")]
	public void MedbayButtonClick()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x15F48B4", Offset = "0x15F48B4", VA = "0x15F48B4")]
	public void TavernButtonClick()
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x15F436C", Offset = "0x15F436C", VA = "0x15F436C")]
	private void Scroll(bool isScrollDown)
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x15F3D6C", Offset = "0x15F3D6C", VA = "0x15F3D6C")]
	private void HealCrewman(CrewmanShipMobile crewman)
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x15F4950", Offset = "0x15F4950", VA = "0x15F4950")]
	public void HealAllButtonClick()
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x15F4C38", Offset = "0x15F4C38", VA = "0x15F4C38")]
	public void OnTavernDropped(Drag droppedObj)
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x15F419C", Offset = "0x15F419C", VA = "0x15F419C")]
	private void CheckAutoBackFromMedbay()
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x15F4DB8", Offset = "0x15F4DB8", VA = "0x15F4DB8")]
	public void CrewmanDragOnDragStart(Drag drag)
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x15F4F80", Offset = "0x15F4F80", VA = "0x15F4F80")]
	public void CrewmanDragOnDragEnd()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x15F50DC", Offset = "0x15F50DC", VA = "0x15F50DC")]
	public void CrewmanOnBodyButtonClicked(CrewmanShipMobile crewman)
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x15F5174", Offset = "0x15F5174", VA = "0x15F5174")]
	public void Update()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x15F51EC", Offset = "0x15F51EC", VA = "0x15F51EC")]
	private void ControllerInput()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x15F2AC0", Offset = "0x15F2AC0", VA = "0x15F2AC0")]
	private void ItemsLinks()
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x15F5F9C", Offset = "0x15F5F9C", VA = "0x15F5F9C")]
	public TeamManageShipMobile()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x15F5FA4", Offset = "0x15F5FA4", VA = "0x15F5FA4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587994", Offset = "0x587994")]
	private void <CrewmanOnActionButtonClicked>b__40_0(bool wasUpgrade)
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x15F5FB0", Offset = "0x15F5FB0", VA = "0x15F5FB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5879A4", Offset = "0x5879A4")]
	private void <MedbayButtonClick>b__41_0()
	{
	}
}
[Token(Token = "0x2000072")]
public class TeamManageTavernMobile : BaseMonoBehaviour
{
	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TeamManageShipMobile teamManageShipMobile;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public CrewmanShipMobile[] teamInTavern;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public CrewmanShipMobile[] teamHirable;

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x15F5FB8", Offset = "0x15F5FB8", VA = "0x15F5FB8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x15F6BE4", Offset = "0x15F6BE4", VA = "0x15F6BE4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x15F6CB0", Offset = "0x15F6CB0", VA = "0x15F6CB0")]
	private void CrewmanOnActionButtonClicked(CrewmanShipMobile crewman)
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x15F6134", Offset = "0x15F6134", VA = "0x15F6134")]
	private void RefreshHirable()
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x15F65D8", Offset = "0x15F65D8", VA = "0x15F65D8")]
	private void RefreshTeamInTavern()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x15F68F0", Offset = "0x15F68F0", VA = "0x15F68F0")]
	private void ItemsLinks()
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x15F78E0", Offset = "0x15F78E0", VA = "0x15F78E0")]
	public TeamManageTavernMobile()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x15F78E8", Offset = "0x15F78E8", VA = "0x15F78E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5879B4", Offset = "0x5879B4")]
	private void <OnEnable>b__3_0()
	{
	}
}
[Token(Token = "0x2000073")]
public class UpgradeCrewmanWindowMobile : BaseMonoBehaviour
{
	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform avatarPos1;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform avatarPos2;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text avatarText1;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text avatarText2;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text xpPointsCountText;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RectTransform statsPanel;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private CrewmanUpgradeStatsPanelMobile statPanelPrefab;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CrewmanShipMobile crewman1;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private CrewmanShipMobile crewman2;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private CrewmanShipMobile.States origState;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Action<bool> onCloseAction;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool wasUpgrade;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject UpgradeButton;

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x15B8918", Offset = "0x15B8918", VA = "0x15B8918")]
	public void Show(CrewmanShipMobile crewmanOrig1, CrewmanShipMobile crewmanOrig2, [Optional] Action<bool> onCloseAction)
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x15B9400", Offset = "0x15B9400", VA = "0x15B9400")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x15B94CC", Offset = "0x15B94CC", VA = "0x15B94CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x15B9618", Offset = "0x15B9618", VA = "0x15B9618")]
	public void UpgradeButtonClick()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x15B99EC", Offset = "0x15B99EC", VA = "0x15B99EC")]
	public UpgradeCrewmanWindowMobile()
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x15B99F4", Offset = "0x15B99F4", VA = "0x15B99F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5879C4", Offset = "0x5879C4")]
	private void <OnEnable>b__14_0()
	{
	}
}
[Token(Token = "0x2000074")]
public class CraftComponentMobile : RectTransformMonoBehaviour
{
	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text amountText;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Image iconImage;

	[Token(Token = "0x17000051")]
	public Text AmountText
	{
		[Token(Token = "0x6000277")]
		[Address(RVA = "0xA32374", Offset = "0xA32374", VA = "0xA32374")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000052")]
	public Image IconImage
	{
		[Token(Token = "0x6000278")]
		[Address(RVA = "0xA3237C", Offset = "0xA3237C", VA = "0xA3237C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xA32384", Offset = "0xA32384", VA = "0xA32384")]
	public CraftComponentMobile()
	{
	}
}
[Token(Token = "0x2000075")]
public class CreditsWindow : BaseWindow
{
	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool CreditsIsShowing;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject PC_Menu;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text _infoText;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 StartPos;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector2 EndPos;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float textSpeed;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float t;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool xPressed;

	[Token(Token = "0x600027A")]
	[Address(RVA = "0xA3238C", Offset = "0xA3238C", VA = "0xA3238C", Slot = "5")]
	public override void Close()
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xA32394", Offset = "0xA32394", VA = "0xA32394")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0xA32678", Offset = "0xA32678", VA = "0xA32678")]
	private void Update()
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0xA328D8", Offset = "0xA328D8", VA = "0xA328D8")]
	public CreditsWindow()
	{
	}
}
[Token(Token = "0x2000076")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x578068", Offset = "0x578068")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x578068", Offset = "0x578068")]
public class CustomizeItemMobile : RectTransformMonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler, IBeginDragHandler, IDragHandler, IEndDragHandler
{
	[Token(Token = "0x2000077")]
	public enum States
	{
		[Token(Token = "0x4000371")]
		CanEquip,
		[Token(Token = "0x4000372")]
		Equipped,
		[Token(Token = "0x4000373")]
		CanBuy,
		[Token(Token = "0x4000374")]
		CanSellOrEquip,
		[Token(Token = "0x4000375")]
		Locked
	}

	[Token(Token = "0x2000078")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578104", Offset = "0x578104")]
	private sealed class <>c__DisplayClass59_0
	{
		[Token(Token = "0x4000376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Tovar tovar;

		[Token(Token = "0x60002A0")]
		[Address(RVA = "0x1506870", Offset = "0x1506870", VA = "0x1506870")]
		public <>c__DisplayClass59_0()
		{
		}

		[Token(Token = "0x60002A1")]
		[Address(RVA = "0x1506878", Offset = "0x1506878", VA = "0x1506878")]
		internal bool <PointerDownCopy>b__0(CustomizeEquipSlotMobile s)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000079")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578114", Offset = "0x578114")]
	private sealed class <>c__DisplayClass61_0
	{
		[Token(Token = "0x4000377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float timeout;

		[Token(Token = "0x4000378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CustomizeItemMobile <>4__this;

		[Token(Token = "0x60002A2")]
		[Address(RVA = "0x15068B0", Offset = "0x15068B0", VA = "0x15068B0")]
		public <>c__DisplayClass61_0()
		{
		}

		[Token(Token = "0x60002A3")]
		[Address(RVA = "0x15068B8", Offset = "0x15068B8", VA = "0x15068B8")]
		internal bool <OnPointerDownCoroutine>b__0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200007A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578124", Offset = "0x578124")]
	private sealed class <OnPointerDownCoroutine>d__61 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400037A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400037B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CustomizeItemMobile <>4__this;

		[Token(Token = "0x1700005D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002A7")]
			[Address(RVA = "0x1506DFC", Offset = "0x1506DFC", VA = "0x1506DFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002A9")]
			[Address(RVA = "0x1506E44", Offset = "0x1506E44", VA = "0x1506E44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002A4")]
		[Address(RVA = "0x1506974", Offset = "0x1506974", VA = "0x1506974")]
		[DebuggerHidden]
		public <OnPointerDownCoroutine>d__61(int <>1__state)
		{
		}

		[Token(Token = "0x60002A5")]
		[Address(RVA = "0x15069A0", Offset = "0x15069A0", VA = "0x15069A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002A6")]
		[Address(RVA = "0x15069A4", Offset = "0x15069A4", VA = "0x15069A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002A8")]
		[Address(RVA = "0x1506E04", Offset = "0x1506E04", VA = "0x1506E04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200007B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578134", Offset = "0x578134")]
	private sealed class <>c
	{
		[Token(Token = "0x400037C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x60002AB")]
		[Address(RVA = "0x1506860", Offset = "0x1506860", VA = "0x1506860")]
		public <>c()
		{
		}

		[Token(Token = "0x60002AC")]
		[Address(RVA = "0x1506868", Offset = "0x1506868", VA = "0x1506868")]
		internal void <.cctor>b__71_0(CustomizeItemMobile <p0>, bool <p1>)
		{
		}

		[Token(Token = "0x60002AD")]
		[Address(RVA = "0x150686C", Offset = "0x150686C", VA = "0x150686C")]
		internal void <.cctor>b__71_1(CustomizeItemMobile <p0>, bool <p1>)
		{
		}
	}

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Image iconImage;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Image stateImage;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Image stateSubImage;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Image lockImage;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Sprite greenStateSprite;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Sprite redStateSprite;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Sprite equippedSprite;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Sprite canSellSprite;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Sprite canBuySprite;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Text count;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Transform selectionPlace;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Toggle toggle;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private CanvasGroup canvasGroup;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private States state;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57B078", Offset = "0x57B078")]
	private Transform <ParentOnDrag>k__BackingField;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57B088", Offset = "0x57B088")]
	private TovarData <TovarData>k__BackingField;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57B098", Offset = "0x57B098")]
	private ScrollRect <AssignScrollRect>k__BackingField;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57B0A8", Offset = "0x57B0A8")]
	private bool <CanDragging>k__BackingField;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	public bool currentSelected;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
	private bool isPointerHold;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB3")]
	private bool isDragging;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Transform startParent;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 startPosition;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private int startSiblingIndex;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private CustomizeItemMobile copyOnDrag;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float maxYToDrag;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Coroutine dragCoroutine;

	[Token(Token = "0x17000053")]
	public Image LockImage
	{
		[Token(Token = "0x600027F")]
		[Address(RVA = "0x7C3AA8", Offset = "0x7C3AA8", VA = "0x7C3AA8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000054")]
	public States State
	{
		[Token(Token = "0x6000284")]
		[Address(RVA = "0x7C3E88", Offset = "0x7C3E88", VA = "0x7C3E88")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x6000285")]
		[Address(RVA = "0x7C3E90", Offset = "0x7C3E90", VA = "0x7C3E90")]
		set
		{
		}
	}

	[Token(Token = "0x17000055")]
	public Toggle Toggle
	{
		[Token(Token = "0x6000286")]
		[Address(RVA = "0x7C4108", Offset = "0x7C4108", VA = "0x7C4108")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000056")]
	public Image IconImage
	{
		[Token(Token = "0x6000287")]
		[Address(RVA = "0x7C4110", Offset = "0x7C4110", VA = "0x7C4110")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000057")]
	public Transform SelectionPlace
	{
		[Token(Token = "0x6000288")]
		[Address(RVA = "0x7C4118", Offset = "0x7C4118", VA = "0x7C4118")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000058")]
	public Transform ParentOnDrag
	{
		[Token(Token = "0x6000289")]
		[Address(RVA = "0x7C4120", Offset = "0x7C4120", VA = "0x7C4120")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587A14", Offset = "0x587A14")]
		get
		{
			return null;
		}
		[Token(Token = "0x600028A")]
		[Address(RVA = "0x7C4128", Offset = "0x7C4128", VA = "0x7C4128")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587A24", Offset = "0x587A24")]
		set
		{
		}
	}

	[Token(Token = "0x17000059")]
	public TovarData TovarData
	{
		[Token(Token = "0x600028B")]
		[Address(RVA = "0x7C4130", Offset = "0x7C4130", VA = "0x7C4130")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587A34", Offset = "0x587A34")]
		get
		{
			return null;
		}
		[Token(Token = "0x600028C")]
		[Address(RVA = "0x7C4138", Offset = "0x7C4138", VA = "0x7C4138")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587A44", Offset = "0x587A44")]
		set
		{
		}
	}

	[Token(Token = "0x1700005A")]
	public ScrollRect AssignScrollRect
	{
		[Token(Token = "0x600028D")]
		[Address(RVA = "0x7C4140", Offset = "0x7C4140", VA = "0x7C4140")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587A54", Offset = "0x587A54")]
		get
		{
			return null;
		}
		[Token(Token = "0x600028E")]
		[Address(RVA = "0x7C4148", Offset = "0x7C4148", VA = "0x7C4148")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587A64", Offset = "0x587A64")]
		set
		{
		}
	}

	[Token(Token = "0x1700005B")]
	public bool CanDragging
	{
		[Token(Token = "0x600028F")]
		[Address(RVA = "0x7C4150", Offset = "0x7C4150", VA = "0x7C4150")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587A74", Offset = "0x587A74")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000290")]
		[Address(RVA = "0x7C4158", Offset = "0x7C4158", VA = "0x7C4158")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587A84", Offset = "0x587A84")]
		set
		{
		}
	}

	[Token(Token = "0x1700005C")]
	public int Count
	{
		[Token(Token = "0x600029C")]
		[Address(RVA = "0x7C5340", Offset = "0x7C5340", VA = "0x7C5340")]
		set
		{
		}
	}

	[Token(Token = "0x14000005")]
	public static event Action<CustomizeItemMobile, bool> OnToggleValueChanged
	{
		[Token(Token = "0x6000280")]
		[Address(RVA = "0x7C3AB0", Offset = "0x7C3AB0", VA = "0x7C3AB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5879D4", Offset = "0x5879D4")]
		add
		{
		}
		[Token(Token = "0x6000281")]
		[Address(RVA = "0x7C3BA4", Offset = "0x7C3BA4", VA = "0x7C3BA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5879E4", Offset = "0x5879E4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public static event Action<CustomizeItemMobile, bool> OnDragStateChanged
	{
		[Token(Token = "0x6000282")]
		[Address(RVA = "0x7C3C98", Offset = "0x7C3C98", VA = "0x7C3C98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5879F4", Offset = "0x5879F4")]
		add
		{
		}
		[Token(Token = "0x6000283")]
		[Address(RVA = "0x7C3D90", Offset = "0x7C3D90", VA = "0x7C3D90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587A04", Offset = "0x587A04")]
		remove
		{
		}
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x7C4164", Offset = "0x7C4164", VA = "0x7C4164")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x7C4228", Offset = "0x7C4228", VA = "0x7C4228")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x7C4250", Offset = "0x7C4250", VA = "0x7C4250")]
	public void PointerDownCopy()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x7C4AD8", Offset = "0x7C4AD8", VA = "0x7C4AD8", Slot = "5")]
	private void UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x7C4F00", Offset = "0x7C4F00", VA = "0x7C4F00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x587A94", Offset = "0x587A94")]
	private IEnumerator OnPointerDownCoroutine(PointerEventData eventData)
	{
		return null;
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x7C4F80", Offset = "0x7C4F80", VA = "0x7C4F80", Slot = "7")]
	private void UnityEngine.EventSystems.IBeginDragHandler.OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x7C5028", Offset = "0x7C5028", VA = "0x7C5028", Slot = "8")]
	private void UnityEngine.EventSystems.IDragHandler.OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x7C50D0", Offset = "0x7C50D0", VA = "0x7C50D0")]
	private void SetDragPosition()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x7C50D4", Offset = "0x7C50D4", VA = "0x7C50D4", Slot = "9")]
	private void UnityEngine.EventSystems.IEndDragHandler.OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x7C52F8", Offset = "0x7C52F8", VA = "0x7C52F8", Slot = "6")]
	private void UnityEngine.EventSystems.IPointerUpHandler.OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x7C5174", Offset = "0x7C5174", VA = "0x7C5174")]
	private void EndDragging()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x7C53EC", Offset = "0x7C53EC", VA = "0x7C53EC")]
	public CustomizeItemMobile()
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x7C553C", Offset = "0x7C553C", VA = "0x7C553C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587AFC", Offset = "0x587AFC")]
	private void <OnEnable>b__57_0(bool isOn)
	{
	}
}
[Token(Token = "0x200007C")]
public class Equip_Item : MonoBehaviour
{
	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Equip_Item singletne;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Tovar CurrentTovar;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ItemAmountBG;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text CurrentTowarAmount;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AWE_global.SlotType ItemType;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text DescName;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text Describe;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text DescribeParam_title;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text DescribeParam_1;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool firsttouch;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57B0B8", Offset = "0x57B0B8")]
	private static bool <AnyItemDragging>k__BackingField;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool frameProcess1;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool frameProcess2;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	public bool frameProcess3;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public EquipSlot_new SelectedSlot;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool apply;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform parent;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float clicktime;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Equip_Item SelectedEquipItem;

	[Token(Token = "0x1700005F")]
	public static bool AnyItemDragging
	{
		[Token(Token = "0x60002AE")]
		[Address(RVA = "0x7D7660", Offset = "0x7D7660", VA = "0x7D7660")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587B5C", Offset = "0x587B5C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002AF")]
		[Address(RVA = "0x7D76AC", Offset = "0x7D76AC", VA = "0x7D76AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587B6C", Offset = "0x587B6C")]
		private set
		{
		}
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x7D7708", Offset = "0x7D7708", VA = "0x7D7708")]
	public void ClickAction()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x7D8060", Offset = "0x7D8060", VA = "0x7D8060")]
	private bool CheckDescriptionOverlap()
	{
		return default(bool);
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x7D811C", Offset = "0x7D811C", VA = "0x7D811C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x7D8200", Offset = "0x7D8200", VA = "0x7D8200")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x7D8648", Offset = "0x7D8648", VA = "0x7D8648")]
	private void OnMouseDrag()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x7D8810", Offset = "0x7D8810", VA = "0x7D8810")]
	private void OnMouseUp()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x7D7AA0", Offset = "0x7D7AA0", VA = "0x7D7AA0")]
	public void Apply(bool a, [Optional] GameObject slot)
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x7D8CA4", Offset = "0x7D8CA4", VA = "0x7D8CA4")]
	private void OnCollisionStay2D(Collision2D collision)
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x7D8D88", Offset = "0x7D8D88", VA = "0x7D8D88")]
	private void OnCollisionExit2D(Collision2D collision)
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x7D8E20", Offset = "0x7D8E20", VA = "0x7D8E20")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x7D8EBC", Offset = "0x7D8EBC", VA = "0x7D8EBC")]
	public Equip_Item()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x7D8EC4", Offset = "0x7D8EC4", VA = "0x7D8EC4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587B7C", Offset = "0x587B7C")]
	private void <ClickAction>b__22_0()
	{
	}
}
[Token(Token = "0x200007D")]
public class UI_Equip : MonoBehaviour
{
	[Token(Token = "0x200007E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578144", Offset = "0x578144")]
	private sealed class <>c__DisplayClass98_0
	{
		[Token(Token = "0x40003E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ConfigPanel cfg_pan;

		[Token(Token = "0x40003EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UI_Equip <>4__this;

		[Token(Token = "0x40003EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityAction <>9__0;

		[Token(Token = "0x40003EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityAction <>9__1;

		[Token(Token = "0x60002CF")]
		[Address(RVA = "0x1702E44", Offset = "0x1702E44", VA = "0x1702E44")]
		public <>c__DisplayClass98_0()
		{
		}

		[Token(Token = "0x60002D0")]
		[Address(RVA = "0x1702E4C", Offset = "0x1702E4C", VA = "0x1702E4C")]
		internal void <OnEnable>b__0()
		{
		}

		[Token(Token = "0x60002D1")]
		[Address(RVA = "0x1702F74", Offset = "0x1702F74", VA = "0x1702F74")]
		internal void <OnEnable>b__1()
		{
		}
	}

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UI_Equip singleton;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isEnabled;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static GameObject SelectedItem;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool blockSlotListener;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public static bool isNewEquip;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform SlotsPanel;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject ItemsBG;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject ItemsDescribtion;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Scrollbar ItemsDescribtionScroll;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ScrollRect ItemsScrollRect;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text WindowNameEquip;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text WindowNameArtef;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Color colorCategorySelected;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Color colorCategoryNormal;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject SelectorTemplate;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public EquipSlot_new CurrentSlot;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private AWE_global.SlotType selectedType;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject[] Slots;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject[] SlotsExtentions;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject Abordage;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject AbordageA;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject Abordage_Sub1;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject Abordage_Sub2;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject Zoom;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject ZoomA;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject Zoom_Sub1;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject Zoom_Sub2;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject Parus1;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject Parus1A;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject Parus1_Sub1;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject Parus1_Sub2;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject Parus2;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject Parus2A;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject Parus2_Sub1;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject Parus2_Sub2;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject Parus3;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject Parus3A;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject Parus3_Sub1;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject Parus3_Sub2;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject Cannon1;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject Cannon1A;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject Cannon1_Sub1;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject Cannon1_Sub2;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject Cannon2;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject Cannon2A;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject Cannon2_Sub1;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject Cannon2_Sub2;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject Cannon3;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject Cannon3A;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject Cannon3_Sub1;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public GameObject Cannon3_Sub2;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject Case1;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObject Case1A;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject Case1_Sub1;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public GameObject Case1_Sub2;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public GameObject Case2;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public GameObject Case2A;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject Case2_Sub1;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public GameObject Case2_Sub2;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public GameObject Case3;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public GameObject Case3A;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public GameObject Case3_Sub1;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public GameObject Case3_Sub2;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public GameObject UI_Artef;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public GameObject Artef1;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public GameObject Artef1_Sub1;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public GameObject Artef1_Sub2;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public GameObject Artef2;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public GameObject Artef2_Sub1;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public GameObject Artef2_Sub2;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public GameObject Artef3;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public GameObject Artef3_Sub1;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public GameObject Artef3_Sub2;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public GameObject Artef4;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public GameObject Artef4_Sub1;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public GameObject Artef4_Sub2;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public GameObject SlotList;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public GameObject SlotListDescribe;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public GameObject SlotListDescribeFF;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public GameObject ContentList;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public GameObject ItemList;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public bool addInlist;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public GameObject CantReconfigTXT;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public HelpContentData HelpData;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private bool changeCursorPos;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private List<GameObject> selectors_list;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static List<GameObject> slotsSelected;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private bool needDataUpdate;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B9")]
	public bool needLinksUpdate;

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x1611D04", Offset = "0x1611D04", VA = "0x1611D04")]
	public void AddItems(Tovar tovar, int index_slot, int amount)
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x1612004", Offset = "0x1612004", VA = "0x1612004")]
	public void CheckItems()
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x1612334", Offset = "0x1612334", VA = "0x1612334")]
	public void DestroyItems()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x1612564", Offset = "0x1612564", VA = "0x1612564")]
	public void UnselectItems()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x16126EC", Offset = "0x16126EC", VA = "0x16126EC")]
	public void AddSelector(Transform parent)
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x1612AA4", Offset = "0x1612AA4", VA = "0x1612AA4")]
	public void DestroySelectors()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x1612C68", Offset = "0x1612C68", VA = "0x1612C68")]
	public void SelectCategory(AWE_global.SlotType category)
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x16124AC", Offset = "0x16124AC", VA = "0x16124AC")]
	public void UnselectSlots()
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x16133A0", Offset = "0x16133A0", VA = "0x16133A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x161348C", Offset = "0x161348C", VA = "0x161348C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x1613500", Offset = "0x1613500", VA = "0x1613500")]
	private void SetSlotsActive(bool is_active)
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x1613610", Offset = "0x1613610", VA = "0x1613610")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x161574C", Offset = "0x161574C", VA = "0x161574C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x1615870", Offset = "0x1615870", VA = "0x1615870")]
	private void OnLanguageChanged()
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x1615898", Offset = "0x1615898", VA = "0x1615898")]
	private void Update()
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x1615920", Offset = "0x1615920", VA = "0x1615920")]
	public void ItemsLinks(bool changeCursorPos = true, bool firstEnter = false)
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x1616234", Offset = "0x1616234", VA = "0x1616234")]
	public void DisableAllSelection()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x16162D8", Offset = "0x16162D8", VA = "0x16162D8")]
	public UI_Equip()
	{
	}
}
[Token(Token = "0x200007F")]
public class FactionChangeMobile : RectTransformMonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000080")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578154", Offset = "0x578154")]
	private sealed class <>c
	{
		[Token(Token = "0x40003F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40003F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<CustomizeItemMobile> <>9__12_0;

		[Token(Token = "0x60002DB")]
		[Address(RVA = "0x1510D20", Offset = "0x1510D20", VA = "0x1510D20")]
		public <>c()
		{
		}

		[Token(Token = "0x60002DC")]
		[Address(RVA = "0x1510D28", Offset = "0x1510D28", VA = "0x1510D28")]
		internal bool <FillFactions>b__12_0(CustomizeItemMobile i)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text factionTitleText;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ToggleGroup factionsPanel;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private CustomizeItemMobile factionItemPrefab;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Sprite emptyFactionSprite;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private EquipSlot_new factionEquipSlot;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private RectTransform selectionPrefab;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RectTransform selection;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private CustomizeItemMobile selectedItem;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<CustomizeItemMobile> factionItems;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool cursorMove;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform[] LinkBackup;

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x7AD260", Offset = "0x7AD260", VA = "0x7AD260")]
	public void Update()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x7AD37C", Offset = "0x7AD37C", VA = "0x7AD37C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x7ADCB0", Offset = "0x7ADCB0", VA = "0x7ADCB0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x7AD558", Offset = "0x7AD558", VA = "0x7AD558")]
	private void FillFactions()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x7ADF90", Offset = "0x7ADF90", VA = "0x7ADF90")]
	private void ClearFactions()
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x7AE560", Offset = "0x7AE560", VA = "0x7AE560")]
	private void FactionItemOnToggleValueChanged(CustomizeItemMobile factionItem, bool isOn)
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x7AE06C", Offset = "0x7AE06C", VA = "0x7AE06C")]
	private void ItemsLinks()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x7AE7F8", Offset = "0x7AE7F8", VA = "0x7AE7F8")]
	public FactionChangeMobile()
	{
	}
}
[Token(Token = "0x2000081")]
public class FlareEffect : MonoBehaviour
{
	[Token(Token = "0x2000082")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578164", Offset = "0x578164")]
	private sealed class <WaitStop>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlareEffect <>4__this;

		[Token(Token = "0x17000060")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002E4")]
			[Address(RVA = "0x15112B8", Offset = "0x15112B8", VA = "0x15112B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000061")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002E6")]
			[Address(RVA = "0x1511300", Offset = "0x1511300", VA = "0x1511300", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002E1")]
		[Address(RVA = "0x15111D0", Offset = "0x15111D0", VA = "0x15111D0")]
		[DebuggerHidden]
		public <WaitStop>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60002E2")]
		[Address(RVA = "0x15111FC", Offset = "0x15111FC", VA = "0x15111FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002E3")]
		[Address(RVA = "0x1511200", Offset = "0x1511200", VA = "0x1511200", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002E5")]
		[Address(RVA = "0x15112C0", Offset = "0x15112C0", VA = "0x15112C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animation Shine;

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x7B2710", Offset = "0x7B2710", VA = "0x7B2710")]
	private void Start()
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x7B2714", Offset = "0x7B2714", VA = "0x7B2714")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x587B8C", Offset = "0x587B8C")]
	public IEnumerator WaitStop()
	{
		return null;
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x7B2794", Offset = "0x7B2794", VA = "0x7B2794")]
	public void StopPlay()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x7B2798", Offset = "0x7B2798", VA = "0x7B2798")]
	public FlareEffect()
	{
	}
}
[Token(Token = "0x2000083")]
public class GoldButtonEffect : MonoBehaviour
{
	[Token(Token = "0x40003FE")]
	private const float ANIM_DURATION = 3.433f;

	[Token(Token = "0x40003FF")]
	private const float INTERVAL = 25f;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animation Shine;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float deltaTimePause;

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x7F72C0", Offset = "0x7F72C0", VA = "0x7F72C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x7F72E4", Offset = "0x7F72E4", VA = "0x7F72E4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x7F7328", Offset = "0x7F7328", VA = "0x7F7328")]
	private void Update()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x7F73C4", Offset = "0x7F73C4", VA = "0x7F73C4")]
	public GoldButtonEffect()
	{
	}
}
[Token(Token = "0x2000084")]
public class HelpContentData : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000085")]
	public class HelpContentDataRow
	{
		[Token(Token = "0x4000403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Sprite defaultImageSprite;

		[Token(Token = "0x4000404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Sprite ruImageSprite;

		[Token(Token = "0x4000405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string textLocId;

		[Token(Token = "0x4000406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Vector2 imageSize;

		[Token(Token = "0x4000407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool isHorizontal;

		[Token(Token = "0x4000408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		private bool showTopSeparator;

		[Token(Token = "0x4000409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[SerializeField]
		private bool showBottomSeparator;

		[Token(Token = "0x17000063")]
		public Sprite ImageSprite
		{
			[Token(Token = "0x60002ED")]
			[Address(RVA = "0x1514418", Offset = "0x1514418", VA = "0x1514418")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000064")]
		public string TextLocId
		{
			[Token(Token = "0x60002EE")]
			[Address(RVA = "0x15144FC", Offset = "0x15144FC", VA = "0x15144FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000065")]
		public Vector2 ImageSize
		{
			[Token(Token = "0x60002EF")]
			[Address(RVA = "0x1514504", Offset = "0x1514504", VA = "0x1514504")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000066")]
		public bool IsHorizontal
		{
			[Token(Token = "0x60002F0")]
			[Address(RVA = "0x151450C", Offset = "0x151450C", VA = "0x151450C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000067")]
		public bool ShowTopSeparator
		{
			[Token(Token = "0x60002F1")]
			[Address(RVA = "0x1514514", Offset = "0x1514514", VA = "0x1514514")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000068")]
		public bool ShowBottomSeparator
		{
			[Token(Token = "0x60002F2")]
			[Address(RVA = "0x151451C", Offset = "0x151451C", VA = "0x151451C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60002F3")]
		[Address(RVA = "0x1514524", Offset = "0x1514524", VA = "0x1514524")]
		public HelpContentDataRow()
		{
		}
	}

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HelpContentDataRow[] dataRows;

	[Token(Token = "0x17000062")]
	public HelpContentDataRow[] DataRows
	{
		[Token(Token = "0x60002EB")]
		[Address(RVA = "0x16A10FC", Offset = "0x16A10FC", VA = "0x16A10FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x16A1104", Offset = "0x16A1104", VA = "0x16A1104")]
	public HelpContentData()
	{
	}
}
[Token(Token = "0x2000086")]
public class HelpContentMobile : RectTransformMonoBehaviour
{
	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private HelpPanel helpPanelPrefab;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform helpPanelSeparatorPrefab;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private VerticalLayoutGroup verticalPanel;

	[Token(Token = "0x400040D")]
	private const float HelpPanelSpacing = 10f;

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x16A110C", Offset = "0x16A110C", VA = "0x16A110C")]
	public void SetData(HelpContentData data)
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x16A15F4", Offset = "0x16A15F4", VA = "0x16A15F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x16A1528", Offset = "0x16A1528", VA = "0x16A1528")]
	private void AddSeparator()
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x16A16D0", Offset = "0x16A16D0", VA = "0x16A16D0")]
	public HelpContentMobile()
	{
	}
}
[Token(Token = "0x2000087")]
public class HelpPanel : RectTransformMonoBehaviour
{
	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Image image;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private LayoutElement imageLE;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text text;

	[Token(Token = "0x17000069")]
	public Image Image
	{
		[Token(Token = "0x60002F8")]
		[Address(RVA = "0x16A16D8", Offset = "0x16A16D8", VA = "0x16A16D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006A")]
	public LayoutElement ImageLE
	{
		[Token(Token = "0x60002F9")]
		[Address(RVA = "0x16A16E0", Offset = "0x16A16E0", VA = "0x16A16E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006B")]
	public Text Text
	{
		[Token(Token = "0x60002FA")]
		[Address(RVA = "0x16A16E8", Offset = "0x16A16E8", VA = "0x16A16E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x16A16F0", Offset = "0x16A16F0", VA = "0x16A16F0")]
	public void Update()
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x16A182C", Offset = "0x16A182C", VA = "0x16A182C")]
	public HelpPanel()
	{
	}
}
[Token(Token = "0x2000088")]
public class HideObject : MonoBehaviour
{
	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool mobile;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool pc;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool ps4;

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x16A1834", Offset = "0x16A1834", VA = "0x16A1834")]
	private void Start()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x16A1884", Offset = "0x16A1884", VA = "0x16A1884")]
	public HideObject()
	{
	}
}
[Token(Token = "0x2000089")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x578174", Offset = "0x578174")]
public class H_UI_popup_text : RectTransformMonoBehaviour
{
	[Token(Token = "0x200008A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5781DC", Offset = "0x5781DC")]
	private sealed class <MovingCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public H_UI_popup_text <>4__this;

		[Token(Token = "0x400041A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform parent;

		[Token(Token = "0x400041B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 localPosition;

		[Token(Token = "0x400041C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string text;

		[Token(Token = "0x400041D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color textColor;

		[Token(Token = "0x400041E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float speed;

		[Token(Token = "0x400041F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float duration;

		[Token(Token = "0x4000420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float <time>5__2;

		[Token(Token = "0x1700006C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000306")]
			[Address(RVA = "0x1513934", Offset = "0x1513934", VA = "0x1513934", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000308")]
			[Address(RVA = "0x151397C", Offset = "0x151397C", VA = "0x151397C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000303")]
		[Address(RVA = "0x15136EC", Offset = "0x15136EC", VA = "0x15136EC")]
		[DebuggerHidden]
		public <MovingCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000304")]
		[Address(RVA = "0x1513718", Offset = "0x1513718", VA = "0x1513718", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000305")]
		[Address(RVA = "0x151371C", Offset = "0x151371C", VA = "0x151371C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000307")]
		[Address(RVA = "0x151393C", Offset = "0x151393C", VA = "0x151393C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Text textControl;

	[Token(Token = "0x4000415")]
	private const float DefaultDuration = 2f;

	[Token(Token = "0x4000416")]
	private const float DefaultSpeed = 100f;

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x162E3A4", Offset = "0x162E3A4", VA = "0x162E3A4", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x1621F88", Offset = "0x1621F88", VA = "0x1621F88")]
	public void Show(string text, Color textColor, Transform parent, Vector3 localPosition)
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x162E414", Offset = "0x162E414", VA = "0x162E414")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x587C44", Offset = "0x587C44")]
	private IEnumerator MovingCoroutine(string text, Color textColor, float duration, float speed, Transform parent, Vector3 localPosition)
	{
		return null;
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x162E51C", Offset = "0x162E51C", VA = "0x162E51C")]
	public H_UI_popup_text()
	{
	}
}
[Serializable]
[Token(Token = "0x200008B")]
public class BundleWindow : MonoBehaviour
{
	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject vignette;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Image background;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text bundleText;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text price;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private List<GameObject> bestValueTextLanguages;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57B278", Offset = "0x57B278")]
	private string <BundleName>k__BackingField;

	[Token(Token = "0x1700006E")]
	public string BundleName
	{
		[Token(Token = "0x6000309")]
		[Address(RVA = "0x7EB918", Offset = "0x7EB918", VA = "0x7EB918")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587CFC", Offset = "0x587CFC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600030A")]
		[Address(RVA = "0x7EB920", Offset = "0x7EB920", VA = "0x7EB920")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587D0C", Offset = "0x587D0C")]
		set
		{
		}
	}

	[Token(Token = "0x1700006F")]
	public Sprite Background
	{
		[Token(Token = "0x600030C")]
		[Address(RVA = "0x7EBA4C", Offset = "0x7EBA4C", VA = "0x7EBA4C")]
		set
		{
		}
	}

	[Token(Token = "0x17000070")]
	public string BundleText
	{
		[Token(Token = "0x600030D")]
		[Address(RVA = "0x7EBA6C", Offset = "0x7EBA6C", VA = "0x7EBA6C")]
		set
		{
		}
	}

	[Token(Token = "0x17000071")]
	public string Price
	{
		[Token(Token = "0x600030E")]
		[Address(RVA = "0x7EBA94", Offset = "0x7EBA94", VA = "0x7EBA94")]
		set
		{
		}
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x7EB928", Offset = "0x7EB928", VA = "0x7EB928")]
	public void ShowVignet(bool show)
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x7EBABC", Offset = "0x7EBABC", VA = "0x7EBABC")]
	public void OnButtonBuyClick()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x7EBAC4", Offset = "0x7EBAC4", VA = "0x7EBAC4")]
	public BundleWindow()
	{
	}
}
[Token(Token = "0x200008C")]
public class IAPMobileDlcOfferButton : RectTransformMonoBehaviour
{
	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text titleText;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string localization_key;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private string inappId;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isHidden;

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x1562C68", Offset = "0x1562C68", VA = "0x1562C68")]
	public IAPMobileDlcOfferButton()
	{
	}
}
[Token(Token = "0x200008D")]
public class ImagePlatform : MonoBehaviour
{
	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Image ImagePC;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Image ImageMob;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Sprite SpritePC;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Sprite SpriteMob;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Image disableImageObject;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Image imageObject;

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x15630B8", Offset = "0x15630B8", VA = "0x15630B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x1563228", Offset = "0x1563228", VA = "0x1563228")]
	public ImagePlatform()
	{
	}
}
[Token(Token = "0x200008E")]
public class InfoBarMobile : SingletonMonoBehaviour<InfoBarMobile>
{
	[Serializable]
	[Token(Token = "0x200008F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5781EC", Offset = "0x5781EC")]
	private sealed class <>c
	{
		[Token(Token = "0x4000442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Tovar, int> <>9__45_0;

		[Token(Token = "0x4000444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<Tovar, int> <>9__47_0;

		[Token(Token = "0x4000445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<Tovar, int> <>9__49_0;

		[Token(Token = "0x4000446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Func<Tovar, int> <>9__51_0;

		[Token(Token = "0x600032B")]
		[Address(RVA = "0x1514B04", Offset = "0x1514B04", VA = "0x1514B04")]
		public <>c()
		{
		}

		[Token(Token = "0x600032C")]
		[Address(RVA = "0x1514B0C", Offset = "0x1514B0C", VA = "0x1514B0C")]
		internal int <get_ParuIndexes>b__45_0(Tovar i)
		{
			return default(int);
		}

		[Token(Token = "0x600032D")]
		[Address(RVA = "0x1514B28", Offset = "0x1514B28", VA = "0x1514B28")]
		internal int <get_AboardIndexes>b__47_0(Tovar i)
		{
			return default(int);
		}

		[Token(Token = "0x600032E")]
		[Address(RVA = "0x1514B44", Offset = "0x1514B44", VA = "0x1514B44")]
		internal int <get_CanonIndexes>b__49_0(Tovar i)
		{
			return default(int);
		}

		[Token(Token = "0x600032F")]
		[Address(RVA = "0x1514B60", Offset = "0x1514B60", VA = "0x1514B60")]
		internal int <get_WoundedIndexes>b__51_0(Tovar i)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Image AlertAutoFight;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Slider HP_case;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Slider HP_paru;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Slider HP_team;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Slider crew_morale;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text out_HP_paru;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Text out_HP_abor;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Text out_HP_case;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Text out_crew_morale;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57B398", Offset = "0x57B398")]
	private float <AlertAF>k__BackingField;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string out_HP_abor_txt;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static InfoBarMobile singleton;

	[Token(Token = "0x400043D")]
	public const int MaxRank = 5;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57B3A8", Offset = "0x57B3A8")]
	private int <ParuCount>k__BackingField;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57B3B8", Offset = "0x57B3B8")]
	private int <AboardCount>k__BackingField;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57B3C8", Offset = "0x57B3C8")]
	private int <CanonCount>k__BackingField;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57B3D8", Offset = "0x57B3D8")]
	private int <WoundedCount>k__BackingField;

	[Token(Token = "0x17000072")]
	public float AlertAF
	{
		[Token(Token = "0x6000314")]
		[Address(RVA = "0x1563EF0", Offset = "0x1563EF0", VA = "0x1563EF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587D1C", Offset = "0x587D1C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000315")]
		[Address(RVA = "0x1563EF8", Offset = "0x1563EF8", VA = "0x1563EF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587D2C", Offset = "0x587D2C")]
		set
		{
		}
	}

	[Token(Token = "0x17000073")]
	public int ParuCount
	{
		[Token(Token = "0x6000318")]
		[Address(RVA = "0x15650A0", Offset = "0x15650A0", VA = "0x15650A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587D3C", Offset = "0x587D3C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000319")]
		[Address(RVA = "0x15650A8", Offset = "0x15650A8", VA = "0x15650A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587D4C", Offset = "0x587D4C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000074")]
	public int AboardCount
	{
		[Token(Token = "0x600031A")]
		[Address(RVA = "0x15650B0", Offset = "0x15650B0", VA = "0x15650B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587D5C", Offset = "0x587D5C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600031B")]
		[Address(RVA = "0x15650B8", Offset = "0x15650B8", VA = "0x15650B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587D6C", Offset = "0x587D6C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000075")]
	public int CanonCount
	{
		[Token(Token = "0x600031C")]
		[Address(RVA = "0x15650C0", Offset = "0x15650C0", VA = "0x15650C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587D7C", Offset = "0x587D7C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600031D")]
		[Address(RVA = "0x15650C8", Offset = "0x15650C8", VA = "0x15650C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587D8C", Offset = "0x587D8C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000076")]
	public int WoundedCount
	{
		[Token(Token = "0x600031E")]
		[Address(RVA = "0x15650D0", Offset = "0x15650D0", VA = "0x15650D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587D9C", Offset = "0x587D9C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600031F")]
		[Address(RVA = "0x15650D8", Offset = "0x15650D8", VA = "0x15650D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587DAC", Offset = "0x587DAC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000077")]
	public int TotalCount
	{
		[Token(Token = "0x6000320")]
		[Address(RVA = "0x15650E0", Offset = "0x15650E0", VA = "0x15650E0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000078")]
	public Tovar[] ParuTovars
	{
		[Token(Token = "0x6000321")]
		[Address(RVA = "0x15650F0", Offset = "0x15650F0", VA = "0x15650F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000079")]
	public Tovar[] AboardTovars
	{
		[Token(Token = "0x6000322")]
		[Address(RVA = "0x15652D4", Offset = "0x15652D4", VA = "0x15652D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700007A")]
	public Tovar[] CanonTovars
	{
		[Token(Token = "0x6000323")]
		[Address(RVA = "0x15654B8", Offset = "0x15654B8", VA = "0x15654B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700007B")]
	public Tovar[] WoundedTovars
	{
		[Token(Token = "0x6000324")]
		[Address(RVA = "0x156569C", Offset = "0x156569C", VA = "0x156569C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700007C")]
	public int[] ParuIndexes
	{
		[Token(Token = "0x6000325")]
		[Address(RVA = "0x1564B40", Offset = "0x1564B40", VA = "0x1564B40")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700007D")]
	public int[] AboardIndexes
	{
		[Token(Token = "0x6000326")]
		[Address(RVA = "0x1564C98", Offset = "0x1564C98", VA = "0x1564C98")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700007E")]
	public int[] CanonIndexes
	{
		[Token(Token = "0x6000327")]
		[Address(RVA = "0x1564DF0", Offset = "0x1564DF0", VA = "0x1564DF0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700007F")]
	public int[] WoundedIndexes
	{
		[Token(Token = "0x6000328")]
		[Address(RVA = "0x1564F48", Offset = "0x1564F48", VA = "0x1564F48")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x1563F00", Offset = "0x1563F00", VA = "0x1563F00")]
	public new void Awake()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x1563FDC", Offset = "0x1563FDC", VA = "0x1563FDC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x1565880", Offset = "0x1565880", VA = "0x1565880")]
	public InfoBarMobile()
	{
	}
}
[Token(Token = "0x2000090")]
public class InfoShipParameter : RectTransformMonoBehaviour
{
	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text titleText;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text valueText;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text deltaText;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57B418", Offset = "0x57B418")]
	private ShipParameters <ShipParameter>k__BackingField;

	[Token(Token = "0x17000080")]
	public Text TitleText
	{
		[Token(Token = "0x6000330")]
		[Address(RVA = "0x15658D4", Offset = "0x15658D4", VA = "0x15658D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000081")]
	public Text ValueText
	{
		[Token(Token = "0x6000331")]
		[Address(RVA = "0x15658DC", Offset = "0x15658DC", VA = "0x15658DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000082")]
	public Text DeltaText
	{
		[Token(Token = "0x6000332")]
		[Address(RVA = "0x15658E4", Offset = "0x15658E4", VA = "0x15658E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000083")]
	public ShipParameters ShipParameter
	{
		[Token(Token = "0x6000333")]
		[Address(RVA = "0x15658EC", Offset = "0x15658EC", VA = "0x15658EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587DBC", Offset = "0x587DBC")]
		get
		{
			return default(ShipParameters);
		}
		[Token(Token = "0x6000334")]
		[Address(RVA = "0x15658F4", Offset = "0x15658F4", VA = "0x15658F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587DCC", Offset = "0x587DCC")]
		set
		{
		}
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x15658FC", Offset = "0x15658FC", VA = "0x15658FC")]
	public InfoShipParameter()
	{
	}
}
[Token(Token = "0x2000091")]
public enum ShipParameters
{
	[Token(Token = "0x400044C")]
	Speed,
	[Token(Token = "0x400044D")]
	Maneur,
	[Token(Token = "0x400044E")]
	ParusOpening,
	[Token(Token = "0x400044F")]
	TrumExtension,
	[Token(Token = "0x4000450")]
	ReloadSpeed,
	[Token(Token = "0x4000451")]
	Distance,
	[Token(Token = "0x4000452")]
	CanonsShootCount,
	[Token(Token = "0x4000453")]
	ShootZoneWide,
	[Token(Token = "0x4000454")]
	Precision,
	[Token(Token = "0x4000455")]
	ShootZonePrecisTime,
	[Token(Token = "0x4000456")]
	AbordReload,
	[Token(Token = "0x4000457")]
	AbordDamage,
	[Token(Token = "0x4000458")]
	DefPars,
	[Token(Token = "0x4000459")]
	DefTeam,
	[Token(Token = "0x400045A")]
	DefCase,
	[Token(Token = "0x400045B")]
	ParuHP,
	[Token(Token = "0x400045C")]
	TeamHP,
	[Token(Token = "0x400045D")]
	CaseHP,
	[Token(Token = "0x400045E")]
	RepairPars,
	[Token(Token = "0x400045F")]
	RepairCase,
	[Token(Token = "0x4000460")]
	TeamMAX,
	[Token(Token = "0x4000461")]
	ArtefMagicMax
}
[Token(Token = "0x2000092")]
public class InfoShipParamsMobile : RectTransformMonoBehaviour
{
	[Token(Token = "0x2000093")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5781FC", Offset = "0x5781FC")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x4000469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ShipParameters parameter;

		[Token(Token = "0x6000342")]
		[Address(RVA = "0x1514B7C", Offset = "0x1514B7C", VA = "0x1514B7C")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x6000343")]
		[Address(RVA = "0x1514B84", Offset = "0x1514B84", VA = "0x1514B84")]
		internal bool <SetParameterValue>b__0(InfoShipParameter s)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000094")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57820C", Offset = "0x57820C")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x400046A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ShipParameters parameter;

		[Token(Token = "0x6000344")]
		[Address(RVA = "0x1514BAC", Offset = "0x1514BAC", VA = "0x1514BAC")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x6000345")]
		[Address(RVA = "0x1514BB4", Offset = "0x1514BB4", VA = "0x1514BB4")]
		internal bool <SetParameterValue>b__0(InfoShipParameter s)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000095")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57821C", Offset = "0x57821C")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x400046B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ShipParameters parameter;

		[Token(Token = "0x6000346")]
		[Address(RVA = "0x1514BDC", Offset = "0x1514BDC", VA = "0x1514BDC")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x6000347")]
		[Address(RVA = "0x1514BE4", Offset = "0x1514BE4", VA = "0x1514BE4")]
		internal bool <SetParameterDelta>b__0(InfoShipParameter s)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000096")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57822C", Offset = "0x57822C")]
	private sealed class <>c__DisplayClass13_0
	{
		[Token(Token = "0x400046C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ShipParameters parameter;

		[Token(Token = "0x6000348")]
		[Address(RVA = "0x1514C0C", Offset = "0x1514C0C", VA = "0x1514C0C")]
		public <>c__DisplayClass13_0()
		{
		}

		[Token(Token = "0x6000349")]
		[Address(RVA = "0x1514C14", Offset = "0x1514C14", VA = "0x1514C14")]
		internal bool <SetParameterDelta>b__0(InfoShipParameter s)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000097")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57823C", Offset = "0x57823C")]
	private sealed class <>c__DisplayClass14_0
	{
		[Token(Token = "0x400046D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ShipParameters parameter;

		[Token(Token = "0x600034A")]
		[Address(RVA = "0x1514C3C", Offset = "0x1514C3C", VA = "0x1514C3C")]
		public <>c__DisplayClass14_0()
		{
		}

		[Token(Token = "0x600034B")]
		[Address(RVA = "0x1514C44", Offset = "0x1514C44", VA = "0x1514C44")]
		internal bool <SetParameterChange>b__0(InfoShipParameter s)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform parametersPanel;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private InfoShipParameter parameterPrefab;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform expandView;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Button hideButton;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RectTransform hideArrowRt;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<InfoShipParameter> parameters;

	[Token(Token = "0x4000468")]
	private const string Format = "0.##";

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x1565904", Offset = "0x1565904", VA = "0x1565904")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x1565AA0", Offset = "0x1565AA0", VA = "0x1565AA0")]
	public void Init()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x1566020", Offset = "0x1566020", VA = "0x1566020")]
	public void FillShipParameters(Tovar shipTovar)
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x1566768", Offset = "0x1566768", VA = "0x1566768")]
	public void SetParameterValue(ShipParameters parameter, string title, int value, string extraText = "", float extraCoef = 1f)
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x15669BC", Offset = "0x15669BC", VA = "0x15669BC")]
	public void SetParameterValue(ShipParameters parameter, string title, string value)
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x1566B50", Offset = "0x1566B50", VA = "0x1566B50")]
	public void SetParameterDelta(ShipParameters parameter, int delta, bool positiveDeltaBetter = true, string extraText = "", float deltaCoef = 1f)
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x1567004", Offset = "0x1567004", VA = "0x1567004")]
	public void SetParameterDelta(ShipParameters parameter, string delta, bool? isPositive)
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x15672A0", Offset = "0x15672A0", VA = "0x15672A0")]
	public void SetParameterChange(ShipParameters parameter, float oldValue, float newValue, bool newValueBetter = true)
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x1567538", Offset = "0x1567538", VA = "0x1567538")]
	public void OnHideButtonClick()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x1567580", Offset = "0x1567580", VA = "0x1567580")]
	public void ChangeState(bool expand)
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x15676B8", Offset = "0x15676B8", VA = "0x15676B8")]
	public void HideButtonActive(bool active)
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x15676F4", Offset = "0x15676F4", VA = "0x15676F4")]
	public InfoShipParamsMobile()
	{
	}
}
[Token(Token = "0x2000098")]
public class NativeReviewRequest
{
	[Token(Token = "0x600034C")]
	[Address(RVA = "0x15B0E78", Offset = "0x15B0E78", VA = "0x15B0E78")]
	public static void RequestReview()
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x15B0E7C", Offset = "0x15B0E7C", VA = "0x15B0E7C")]
	public NativeReviewRequest()
	{
	}
}
[Token(Token = "0x2000099")]
public class PopupInfoMobile : RectTransformMonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
{
	[Token(Token = "0x200009A")]
	public enum PopupPositions
	{
		[Token(Token = "0x4000474")]
		Top,
		[Token(Token = "0x4000475")]
		Bottom,
		[Token(Token = "0x4000476")]
		Left,
		[Token(Token = "0x4000477")]
		Right
	}

	[Token(Token = "0x200009B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57824C", Offset = "0x57824C")]
	private sealed class <SetSelectableEnabled>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400047A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PopupInfoMobile <>4__this;

		[Token(Token = "0x400047B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool enabled;

		[Token(Token = "0x400047C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Selectable <selectable>5__2;

		[Token(Token = "0x17000085")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600035C")]
			[Address(RVA = "0x157E630", Offset = "0x157E630", VA = "0x157E630", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000086")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600035E")]
			[Address(RVA = "0x157E678", Offset = "0x157E678", VA = "0x157E678", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000359")]
		[Address(RVA = "0x157E4F0", Offset = "0x157E4F0", VA = "0x157E4F0")]
		[DebuggerHidden]
		public <SetSelectableEnabled>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x600035A")]
		[Address(RVA = "0x157E51C", Offset = "0x157E51C", VA = "0x157E51C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600035B")]
		[Address(RVA = "0x157E520", Offset = "0x157E520", VA = "0x157E520", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600035D")]
		[Address(RVA = "0x157E638", Offset = "0x157E638", VA = "0x157E638", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200009C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57825C", Offset = "0x57825C")]
	private sealed class <ShowPopup>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400047D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400047E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400047F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PopupInfoMobile <>4__this;

		[Token(Token = "0x4000480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <extraCheckX>5__2;

		[Token(Token = "0x4000481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <targetXPos>5__3;

		[Token(Token = "0x4000482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <targetYPos>5__4;

		[Token(Token = "0x17000087")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000362")]
			[Address(RVA = "0x157EE38", Offset = "0x157EE38", VA = "0x157EE38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000088")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000364")]
			[Address(RVA = "0x157EE80", Offset = "0x157EE80", VA = "0x157EE80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600035F")]
		[Address(RVA = "0x157E680", Offset = "0x157E680", VA = "0x157E680")]
		[DebuggerHidden]
		public <ShowPopup>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000360")]
		[Address(RVA = "0x157E6AC", Offset = "0x157E6AC", VA = "0x157E6AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000361")]
		[Address(RVA = "0x157E6B0", Offset = "0x157E6B0", VA = "0x157E6B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000363")]
		[Address(RVA = "0x157EE40", Offset = "0x157EE40", VA = "0x157EE40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PopupPositions position;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string[] textLocalizationKeys;

	[Token(Token = "0x4000470")]
	private const float AnimationTime = 0.25f;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isDown;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PopupInfoViewMobile view;

	[Token(Token = "0x17000084")]
	public string[] TextLocalizationKeys
	{
		[Token(Token = "0x600034E")]
		[Address(RVA = "0x154CE94", Offset = "0x154CE94", VA = "0x154CE94")]
		get
		{
			return null;
		}
		[Token(Token = "0x600034F")]
		[Address(RVA = "0x154CE9C", Offset = "0x154CE9C", VA = "0x154CE9C")]
		set
		{
		}
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x154CEA4", Offset = "0x154CEA4", VA = "0x154CEA4", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x154CEAC", Offset = "0x154CEAC", VA = "0x154CEAC", Slot = "5")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x154CF9C", Offset = "0x154CF9C", VA = "0x154CF9C", Slot = "6")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x154D050", Offset = "0x154D050", VA = "0x154D050")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x587DDC", Offset = "0x587DDC")]
	private IEnumerator SetSelectableEnabled(bool enabled)
	{
		return null;
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x154D2AC", Offset = "0x154D2AC", VA = "0x154D2AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x587E44", Offset = "0x587E44")]
	private IEnumerator ShowPopup()
	{
		return null;
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x154D0DC", Offset = "0x154D0DC", VA = "0x154D0DC")]
	private void HidePopup()
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x154D32C", Offset = "0x154D32C", VA = "0x154D32C")]
	public PopupInfoMobile()
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x154D334", Offset = "0x154D334", VA = "0x154D334")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587EAC", Offset = "0x587EAC")]
	private void <OnPointerDown>b__10_0()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x154D360", Offset = "0x154D360", VA = "0x154D360")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587EBC", Offset = "0x587EBC")]
	private void <HidePopup>b__14_0()
	{
	}
}
[Token(Token = "0x200009D")]
public class PopupInfoViewMobile : RectTransformMonoBehaviour
{
	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private CanvasGroup canvasGroup;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text text;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform visibleArea;

	[Token(Token = "0x17000089")]
	public string Text
	{
		[Token(Token = "0x6000365")]
		[Address(RVA = "0x154D3E0", Offset = "0x154D3E0", VA = "0x154D3E0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000366")]
		[Address(RVA = "0x154D408", Offset = "0x154D408", VA = "0x154D408")]
		set
		{
		}
	}

	[Token(Token = "0x1700008A")]
	public bool Visible
	{
		[Token(Token = "0x6000367")]
		[Address(RVA = "0x154D44C", Offset = "0x154D44C", VA = "0x154D44C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000368")]
		[Address(RVA = "0x154D47C", Offset = "0x154D47C", VA = "0x154D47C")]
		set
		{
		}
	}

	[Token(Token = "0x1700008B")]
	public RectTransform VisibleArea
	{
		[Token(Token = "0x6000369")]
		[Address(RVA = "0x154D4AC", Offset = "0x154D4AC", VA = "0x154D4AC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x154D4B4", Offset = "0x154D4B4", VA = "0x154D4B4")]
	public PopupInfoViewMobile()
	{
	}
}
[Token(Token = "0x200009E")]
public class RateMeDialog : MonoBehaviour
{
	[Token(Token = "0x4000486")]
	public const string LegacyTimeToShowKey = "RateMeDialog.TimeToShow";

	[Token(Token = "0x4000487")]
	public const float DefaultTime = 1800f;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text titleText;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private CanvasGroup starsGroup;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform buttonsPanel;

	[Token(Token = "0x1700008C")]
	public float TimeToShow
	{
		[Token(Token = "0x600036B")]
		[Address(RVA = "0x152F468", Offset = "0x152F468", VA = "0x152F468")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600036C")]
		[Address(RVA = "0x152F554", Offset = "0x152F554", VA = "0x152F554")]
		set
		{
		}
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x152F5D0", Offset = "0x152F5D0", VA = "0x152F5D0")]
	public RateMeDialog()
	{
	}
}
[Token(Token = "0x200009F")]
public class Settings_mobile : BaseWindow
{
	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Settings_mobile singletone;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Dropdown Language;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Dropdown Resolution;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject ResolutionTXT;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject agreementButton;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Dropdown WaterQ;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Dropdown Difficulty;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Toggle SndToggle;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Toggle MusToggle;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Toggle Wheel;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Toggle Autoshoot;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Toggle ClickToSwim;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Toggle CamFallow;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Slider CamSens;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Slider CamCinemat;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject ResetSaves_btn;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject Close_btn;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private GameObject googlePlayButton;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private GameObject iosRestorePurchasesButton;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private GameObject iosCloudSaveOnButton;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private GameObject iosCloudSaveOffButton;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private H_Achieves achievementsWindow;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private BaseWindow creditsWindow;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private GameObject[] socialButtons;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float[] difficultyParam;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool wasManualSetResolution;

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x14DCA00", Offset = "0x14DCA00", VA = "0x14DCA00")]
	private void Awake()
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x14DCB78", Offset = "0x14DCB78", VA = "0x14DCB78")]
	public void SetLanguage()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x14DD104", Offset = "0x14DD104", VA = "0x14DD104")]
	public void SetResolution()
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x14DD280", Offset = "0x14DD280", VA = "0x14DD280")]
	public void ResolutionItemOnPointerDown()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x14DD28C", Offset = "0x14DD28C", VA = "0x14DD28C")]
	public void SetDifficulty()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x14DD33C", Offset = "0x14DD33C", VA = "0x14DD33C")]
	public void OnMusicChanged(bool enabled)
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x14DD3E8", Offset = "0x14DD3E8", VA = "0x14DD3E8")]
	public void OnSoundChanged(bool enabled)
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x14DD494", Offset = "0x14DD494", VA = "0x14DD494", Slot = "5")]
	public override void Close()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x14DD49C", Offset = "0x14DD49C", VA = "0x14DD49C", Slot = "4")]
	public override void Open()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x14DD6B8", Offset = "0x14DD6B8", VA = "0x14DD6B8")]
	public void onGPGSButtonClicked()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x14DD6BC", Offset = "0x14DD6BC", VA = "0x14DD6BC")]
	public void onAchievementsButtonClicked()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x14DD750", Offset = "0x14DD750", VA = "0x14DD750")]
	public void OnLeaderboardsButtonClicked()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x14DD758", Offset = "0x14DD758", VA = "0x14DD758")]
	public void OnCredirtsButtonClicked()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x14DD7EC", Offset = "0x14DD7EC", VA = "0x14DD7EC")]
	public void OnCloudSaveButtonClicked()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x14DD7F0", Offset = "0x14DD7F0", VA = "0x14DD7F0")]
	public void onVKButtonClicked()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x14DD7F4", Offset = "0x14DD7F4", VA = "0x14DD7F4")]
	public void onFBButtonClicked()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x14DD7F8", Offset = "0x14DD7F8", VA = "0x14DD7F8")]
	public void OnStart()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x14DDC28", Offset = "0x14DDC28", VA = "0x14DDC28")]
	public void OnRestorePurchasersClicked()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x14DDC2C", Offset = "0x14DDC2C", VA = "0x14DDC2C")]
	public void ResolutionUpdate()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x14DD19C", Offset = "0x14DD19C", VA = "0x14DD19C")]
	private void ResolutionChanged()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x14DDEF0", Offset = "0x14DDEF0", VA = "0x14DDEF0")]
	public Settings_mobile()
	{
	}
}
[Token(Token = "0x20000A0")]
public class ShopDialogNew : MonoBehaviour
{
	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform container;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text title_text;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private BundleWindow bundleWindowPrefab;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<BundleInfo> androidFreeBundles;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private List<BundleInfo> premiumBundles;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private List<BundleInfo> dlcBundles;

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x1677200", Offset = "0x1677200", VA = "0x1677200")]
	public static void Activate([Optional] string bundleId)
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x1677204", Offset = "0x1677204", VA = "0x1677204")]
	public static bool IsShopActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x167720C", Offset = "0x167720C", VA = "0x167720C")]
	public static void TryToShowStartBundle()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x1677210", Offset = "0x1677210", VA = "0x1677210")]
	public static void OnBundleClick(BundleWindow bundleWindow)
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x1677214", Offset = "0x1677214", VA = "0x1677214")]
	public ShopDialogNew()
	{
	}
}
[Serializable]
[Token(Token = "0x20000A1")]
public struct BundleInfo
{
	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string bundleID;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Sprite bundleImage;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string bundleDescription;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool bundleBestOffer;
}
[Token(Token = "0x20000A2")]
public class AchievementsButton : MonoBehaviour
{
	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Sprite achievesEnabledSprite;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite achievesDisabledSprite;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Button button;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Image image;

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x7E0328", Offset = "0x7E0328", VA = "0x7E0328")]
	private void Start()
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x7E032C", Offset = "0x7E032C", VA = "0x7E032C")]
	public void UpdateButton()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x7E042C", Offset = "0x7E042C", VA = "0x7E042C")]
	public AchievementsButton()
	{
	}
}
[Token(Token = "0x20000A3")]
public class GPGSButton : MonoBehaviour
{
	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Image image;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Color userLoggedOut;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Color userLoggedIn;

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x7BCB50", Offset = "0x7BCB50", VA = "0x7BCB50")]
	public GPGSButton()
	{
	}
}
[Token(Token = "0x20000A4")]
public class H_Leaderboards : SingletonMonoBehaviour<H_Leaderboards>
{
	[Token(Token = "0x20000A5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57826C", Offset = "0x57826C")]
	private sealed class <WaitForEndOfBlackScreen>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700008D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000395")]
			[Address(RVA = "0x1512AD4", Offset = "0x1512AD4", VA = "0x1512AD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000397")]
			[Address(RVA = "0x1512B1C", Offset = "0x1512B1C", VA = "0x1512B1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000392")]
		[Address(RVA = "0x15129B8", Offset = "0x15129B8", VA = "0x15129B8")]
		[DebuggerHidden]
		public <WaitForEndOfBlackScreen>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000393")]
		[Address(RVA = "0x15129E4", Offset = "0x15129E4", VA = "0x15129E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000394")]
		[Address(RVA = "0x15129E8", Offset = "0x15129E8", VA = "0x15129E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000396")]
		[Address(RVA = "0x1512ADC", Offset = "0x1512ADC", VA = "0x1512ADC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x800768", Offset = "0x800768", VA = "0x800768")]
	public static void AddScoreToArenaLeaderboard(long score)
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x80076C", Offset = "0x80076C", VA = "0x80076C")]
	private static void HighScoreCheck(bool result)
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x800818", Offset = "0x800818", VA = "0x800818")]
	public static void ShowLeaderboard()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x80081C", Offset = "0x80081C", VA = "0x80081C")]
	public static void ShowLeaderboardAfterBlackscreen()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x8008A4", Offset = "0x8008A4", VA = "0x8008A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x587F6C", Offset = "0x587F6C")]
	private static IEnumerator WaitForEndOfBlackScreen()
	{
		return null;
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x800900", Offset = "0x800900", VA = "0x800900")]
	public H_Leaderboards()
	{
	}
}
[Token(Token = "0x20000A6")]
public class TovarData
{
	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57B638", Offset = "0x57B638")]
	private Tovar <Tovar>k__BackingField;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57B648", Offset = "0x57B648")]
	private int <TovarIndex>k__BackingField;

	[Token(Token = "0x1700008F")]
	public Tovar Tovar
	{
		[Token(Token = "0x6000398")]
		[Address(RVA = "0x16691BC", Offset = "0x16691BC", VA = "0x16691BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x588024", Offset = "0x588024")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000399")]
		[Address(RVA = "0x16691C4", Offset = "0x16691C4", VA = "0x16691C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x588034", Offset = "0x588034")]
		set
		{
		}
	}

	[Token(Token = "0x17000090")]
	public int TovarIndex
	{
		[Token(Token = "0x600039A")]
		[Address(RVA = "0x16691CC", Offset = "0x16691CC", VA = "0x16691CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x588044", Offset = "0x588044")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600039B")]
		[Address(RVA = "0x16691D4", Offset = "0x16691D4", VA = "0x16691D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x588054", Offset = "0x588054")]
		set
		{
		}
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x16691DC", Offset = "0x16691DC", VA = "0x16691DC")]
	public TovarData()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x1669208", Offset = "0x1669208", VA = "0x1669208")]
	public TovarData(Tovar tovar)
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x1669244", Offset = "0x1669244", VA = "0x1669244")]
	public TovarData(Tovar tovar, int tovarIndex)
	{
	}
}
[Token(Token = "0x20000A7")]
public class WindDirection : MonoBehaviour
{
	[Token(Token = "0x20000A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57827C", Offset = "0x57827C")]
	private sealed class <AnimCoroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WindDirection <>4__this;

		[Token(Token = "0x17000093")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003A9")]
			[Address(RVA = "0x17048C4", Offset = "0x17048C4", VA = "0x17048C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000094")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003AB")]
			[Address(RVA = "0x170490C", Offset = "0x170490C", VA = "0x170490C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003A6")]
		[Address(RVA = "0x1704568", Offset = "0x1704568", VA = "0x1704568")]
		[DebuggerHidden]
		public <AnimCoroutine>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60003A7")]
		[Address(RVA = "0x1704594", Offset = "0x1704594", VA = "0x1704594", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003A8")]
		[Address(RVA = "0x1704598", Offset = "0x1704598", VA = "0x1704598", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003AA")]
		[Address(RVA = "0x17048CC", Offset = "0x17048CC", VA = "0x17048CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SpriteRenderer windRenderer;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform windsParent;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private int spawnCount;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float spawnDelay;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float moveDistance;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float moveTime;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AnimationCurve alphaCurve;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool animCoroutine;

	[Token(Token = "0x17000091")]
	public float MoveDistance
	{
		[Token(Token = "0x600039F")]
		[Address(RVA = "0x15D2230", Offset = "0x15D2230", VA = "0x15D2230")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000092")]
	public float Offset
	{
		[Token(Token = "0x60003A0")]
		[Address(RVA = "0x15D2238", Offset = "0x15D2238", VA = "0x15D2238")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003A1")]
		[Address(RVA = "0x15D2260", Offset = "0x15D2260", VA = "0x15D2260")]
		set
		{
		}
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x15D226C", Offset = "0x15D226C", VA = "0x15D226C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x15D2348", Offset = "0x15D2348", VA = "0x15D2348")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x15D22C8", Offset = "0x15D22C8", VA = "0x15D22C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x588064", Offset = "0x588064")]
	private IEnumerator AnimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x15D2450", Offset = "0x15D2450", VA = "0x15D2450")]
	public WindDirection()
	{
	}
}
[Token(Token = "0x20000A9")]
public class BaseWindow : MonoBehaviour
{
	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected GameObject backScreenShield;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public GameObject windowBody;

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x7E6BFC", Offset = "0x7E6BFC", VA = "0x7E6BFC", Slot = "4")]
	public virtual void Open()
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x7E6C40", Offset = "0x7E6C40", VA = "0x7E6C40", Slot = "5")]
	public virtual void Close()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x7E6CD8", Offset = "0x7E6CD8", VA = "0x7E6CD8", Slot = "6")]
	public virtual void Hide()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x7E6D1C", Offset = "0x7E6D1C", VA = "0x7E6D1C", Slot = "7")]
	public virtual bool IsOpened()
	{
		return default(bool);
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x7E6D3C", Offset = "0x7E6D3C", VA = "0x7E6D3C")]
	public BaseWindow()
	{
	}
}
[Token(Token = "0x20000AA")]
public class GUIWindowsController : MonoBehaviour
{
	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GUIWindowsController instance;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UnityEvent onBackKeyPressed;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Stack<BaseWindow> windows;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isDisabledBackButton;

	[Token(Token = "0x17000095")]
	public static GUIWindowsController Instance
	{
		[Token(Token = "0x60003B1")]
		[Address(RVA = "0x7BCB58", Offset = "0x7BCB58", VA = "0x7BCB58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x7BCC94", Offset = "0x7BCC94", VA = "0x7BCC94")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x7BCD5C", Offset = "0x7BCD5C", VA = "0x7BCD5C")]
	public void Push(BaseWindow window, bool hidePrevious = true)
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x7BCE60", Offset = "0x7BCE60", VA = "0x7BCE60")]
	public void Pop()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x7BCF68", Offset = "0x7BCF68", VA = "0x7BCF68")]
	public void CloseAndPop()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x7BD058", Offset = "0x7BD058", VA = "0x7BD058")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x7BD0E4", Offset = "0x7BD0E4", VA = "0x7BD0E4")]
	public GUIWindowsController()
	{
	}
}
[Token(Token = "0x20000AB")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x57828C", Offset = "0x57828C")]
public class AutoDisableScrolling : MonoBehaviour
{
	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ScrollRect scrollRect;

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x7E5EDC", Offset = "0x7E5EDC", VA = "0x7E5EDC")]
	public AutoDisableScrolling()
	{
	}
}
[Token(Token = "0x20000AC")]
public class BaseMonoBehaviour : MonoBehaviour
{
	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform cachedTransform;

	[Token(Token = "0x17000096")]
	public new Transform transform
	{
		[Token(Token = "0x60003BA")]
		[Address(RVA = "0x7E6B50", Offset = "0x7E6B50", VA = "0x7E6B50")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x7DEBD8", Offset = "0x7DEBD8", VA = "0x7DEBD8")]
	public BaseMonoBehaviour()
	{
	}
}
[Token(Token = "0x20000AD")]
public class CanvasFitter : MonoBehaviour
{
	[Token(Token = "0x20000AE")]
	private enum FitPart
	{
		[Token(Token = "0x40004D2")]
		Top,
		[Token(Token = "0x40004D3")]
		Bottom,
		[Token(Token = "0x40004D4")]
		Left,
		[Token(Token = "0x40004D5")]
		Right
	}

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool fitBottom;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform bottomElement;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private FitPart bottomFit;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float bottomAdditionalOffset;

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x8503D4", Offset = "0x8503D4", VA = "0x8503D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x850510", Offset = "0x850510", VA = "0x850510")]
	private float GetElementPosition(RectTransform elem, FitPart part)
	{
		return default(float);
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x8506E4", Offset = "0x8506E4", VA = "0x8506E4")]
	private void Update()
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x8506E8", Offset = "0x8506E8", VA = "0x8506E8")]
	public CanvasFitter()
	{
	}
}
[Token(Token = "0x20000AF")]
public class AcceptDrop : BaseMonoBehaviour, IDropHandler, IEventSystemHandler
{
	[Serializable]
	[Token(Token = "0x20000B0")]
	public class OnDropEvent : UnityEvent<Drag>
	{
		[Token(Token = "0x60003C2")]
		[Address(RVA = "0x15DBAB0", Offset = "0x15DBAB0", VA = "0x15DBAB0")]
		public OnDropEvent()
		{
		}
	}

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private OnDropEvent onDropEvent;

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x7DEAF0", Offset = "0x7DEAF0", VA = "0x7DEAF0", Slot = "4")]
	public void OnDrop(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x7DEBD0", Offset = "0x7DEBD0", VA = "0x7DEBD0")]
	public AcceptDrop()
	{
	}
}
[Token(Token = "0x20000B1")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x5782F4", Offset = "0x5782F4")]
public class Drag : RectTransformMonoBehaviour, IPointerDownHandler, IEventSystemHandler, IDragHandler, IPointerUpHandler
{
	[Token(Token = "0x20000B2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57835C", Offset = "0x57835C")]
	private sealed class <OnPointerDownCoroutine>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Drag <>4__this;

		[Token(Token = "0x1700009A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003D2")]
			[Address(RVA = "0x150802C", Offset = "0x150802C", VA = "0x150802C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003D4")]
			[Address(RVA = "0x1508074", Offset = "0x1508074", VA = "0x1508074", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003CF")]
		[Address(RVA = "0x1507994", Offset = "0x1507994", VA = "0x1507994")]
		[DebuggerHidden]
		public <OnPointerDownCoroutine>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x60003D0")]
		[Address(RVA = "0x15079C0", Offset = "0x15079C0", VA = "0x15079C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003D1")]
		[Address(RVA = "0x15079C4", Offset = "0x15079C4", VA = "0x15079C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003D3")]
		[Address(RVA = "0x1508034", Offset = "0x1508034", VA = "0x1508034", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UnityEvent onDragStartEvent;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private UnityEvent onDragEndEvent;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool makeCopy;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform setParent;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Color dragColor;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Image dragColorImage;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Vector3 positionOffset;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject extraData;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Image[] highlightTargets;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private float dragDelay;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject copy;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject copyVR;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 startPosition;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int startSiblingIndex;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Transform startParent;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Color startColor;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Dictionary<Image, Color> highlightTargetsStartColors;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool isDragging;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	private bool isDown;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Vector2 startPivot;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector2 startAnchorMin;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Vector2 startAnchorMax;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private Vector2 startSizeDelta;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Image imageToColor;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Vector3 positionIMG;

	[Token(Token = "0x17000097")]
	public Image[] HighlightTargets
	{
		[Token(Token = "0x60003C3")]
		[Address(RVA = "0x7CEF60", Offset = "0x7CEF60", VA = "0x7CEF60")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000098")]
	public GameObject ExtraData
	{
		[Token(Token = "0x60003C4")]
		[Address(RVA = "0x7CEF68", Offset = "0x7CEF68", VA = "0x7CEF68")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000099")]
	public Transform SetParent
	{
		[Token(Token = "0x60003C5")]
		[Address(RVA = "0x7CEF70", Offset = "0x7CEF70", VA = "0x7CEF70")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003C6")]
		[Address(RVA = "0x7CEF78", Offset = "0x7CEF78", VA = "0x7CEF78")]
		set
		{
		}
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x7CEF80", Offset = "0x7CEF80", VA = "0x7CEF80", Slot = "5")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x7CF038", Offset = "0x7CF038", VA = "0x7CF038")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58811C", Offset = "0x58811C")]
	public IEnumerator OnPointerDownCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x7CF0B8", Offset = "0x7CF0B8", VA = "0x7CF0B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x7CF0BC", Offset = "0x7CF0BC", VA = "0x7CF0BC")]
	private void SetPosition()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x7CF224", Offset = "0x7CF224", VA = "0x7CF224", Slot = "6")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x7CF234", Offset = "0x7CF234", VA = "0x7CF234")]
	public void Update()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x7CF2C0", Offset = "0x7CF2C0", VA = "0x7CF2C0", Slot = "7")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x7CF5D8", Offset = "0x7CF5D8", VA = "0x7CF5D8")]
	public Drag()
	{
	}
}
[Token(Token = "0x20000B3")]
public static class EnumExtensions
{
	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x7D5F28", Offset = "0x7D5F28", VA = "0x7D5F28")]
	public static int ToInt32(this Enum enumObj)
	{
		return default(int);
	}

	[Token(Token = "0x60003D6")]
	public static T GetAttribute<T>(this Enum value) where T : Attribute
	{
		return null;
	}
}
[Token(Token = "0x20000B4")]
public static class EventSystemExtensions
{
	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x8BC9F4", Offset = "0x8BC9F4", VA = "0x8BC9F4")]
	public static bool IsPointerOverGameObjectCP(this EventSystem eventSystem)
	{
		return default(bool);
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x8BCA0C", Offset = "0x8BCA0C", VA = "0x8BCA0C")]
	public static bool IsPointerOverGameObjectCP(this EventSystem eventSystem, int pointerIndex)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000B5")]
public static class GameObjectExtensions
{
	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x7BD164", Offset = "0x7BD164", VA = "0x7BD164")]
	public static bool IsPrefabRuntime(this GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x7BD1A4", Offset = "0x7BD1A4", VA = "0x7BD1A4")]
	public static Vector3[] GetWorldCorners(this GameObject gameObject)
	{
		return null;
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x7BD4C4", Offset = "0x7BD4C4", VA = "0x7BD4C4")]
	public static Rect GetWorldRect(this GameObject gameObject)
	{
		return default(Rect);
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x7BD530", Offset = "0x7BD530", VA = "0x7BD530")]
	public static bool GetActive(this GameObject target)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000B6")]
public static class ImageExtensions
{
	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x1562FF8", Offset = "0x1562FF8", VA = "0x1562FF8")]
	public static void SetAlpha(this Image image, float alpha)
	{
	}
}
[Token(Token = "0x20000B7")]
public static class Int32Extensions
{
	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x1567814", Offset = "0x1567814", VA = "0x1567814")]
	public static string ToStringWithThousands(this int i)
	{
		return null;
	}

	[Token(Token = "0x60003DF")]
	public static T ToEnum<T>(this int i)
	{
		return (T)null;
	}
}
[Token(Token = "0x20000B8")]
public static class MonoBehaviourExtensions
{
	[Token(Token = "0x20000B9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5783CC", Offset = "0x5783CC")]
	private sealed class <ActionAfterFrameCoroutine>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action action;

		[Token(Token = "0x1700009C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003E5")]
			[Address(RVA = "0x1579C28", Offset = "0x1579C28", VA = "0x1579C28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003E7")]
			[Address(RVA = "0x1579C70", Offset = "0x1579C70", VA = "0x1579C70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003E2")]
		[Address(RVA = "0x1579B4C", Offset = "0x1579B4C", VA = "0x1579B4C")]
		[DebuggerHidden]
		public <ActionAfterFrameCoroutine>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x60003E3")]
		[Address(RVA = "0x1579B78", Offset = "0x1579B78", VA = "0x1579B78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003E4")]
		[Address(RVA = "0x1579B7C", Offset = "0x1579B7C", VA = "0x1579B7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003E6")]
		[Address(RVA = "0x1579C30", Offset = "0x1579C30", VA = "0x1579C30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x15A7C28", Offset = "0x15A7C28", VA = "0x15A7C28")]
	public static void ActionAfterFrame(this MonoBehaviour monoBehaviour, Action action)
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x15A8244", Offset = "0x15A8244", VA = "0x15A8244")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x588294", Offset = "0x588294")]
	private static IEnumerator ActionAfterFrameCoroutine(Action action)
	{
		return null;
	}
}
[Token(Token = "0x20000BA")]
public static class RectTransformExtensions
{
	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x1532800", Offset = "0x1532800", VA = "0x1532800")]
	public static void MakeNonInteractable(this RectTransform rectTransform, bool disableTransitions = false)
	{
	}
}
[Token(Token = "0x20000BB")]
public static class StringExtensions
{
	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x168FC30", Offset = "0x168FC30", VA = "0x168FC30")]
	public static bool Contains(this string source, string toCheck, StringComparison comp)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000BC")]
public static class TransformExtensions
{
	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x158D230", Offset = "0x158D230", VA = "0x158D230")]
	public static void SetPositionX(this Transform transform, float x)
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x158D288", Offset = "0x158D288", VA = "0x158D288")]
	public static void SetPositionY(this Transform transform, float y)
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x158D2E0", Offset = "0x158D2E0", VA = "0x158D2E0")]
	public static void SetPositionZ(this Transform transform, float z)
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x158D338", Offset = "0x158D338", VA = "0x158D338")]
	public static void SetLocalPositionX(this Transform transform, float x)
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x158D390", Offset = "0x158D390", VA = "0x158D390")]
	public static void SetLocalPositionY(this Transform transform, float y)
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x158D3E8", Offset = "0x158D3E8", VA = "0x158D3E8")]
	public static void SetLocalPositionZ(this Transform transform, float z)
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x158D440", Offset = "0x158D440", VA = "0x158D440")]
	public static void SetLocalScaleX(this Transform transform, float x)
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x158D498", Offset = "0x158D498", VA = "0x158D498")]
	public static void SetAnchoredPositionX(this RectTransform rectTransform, float x)
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x158D4DC", Offset = "0x158D4DC", VA = "0x158D4DC")]
	public static void SetAnchoredPositionY(this RectTransform rectTransform, float y)
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x158D520", Offset = "0x158D520", VA = "0x158D520")]
	public static void DestroyChildren(this Transform transform)
	{
	}
}
[Token(Token = "0x20000BD")]
public static class UIBehaviourExtensions
{
	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x16118E8", Offset = "0x16118E8", VA = "0x16118E8")]
	public static RectTransform GetRectTransform(this UIBehaviour uiBehaviour)
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x20000BE")]
public class KeyValuePairClass<TKey, TValue>
{
	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private TKey m_key;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private TValue m_value;

	[Token(Token = "0x1700009E")]
	public TKey Key
	{
		[Token(Token = "0x60003F5")]
		get
		{
			return (TKey)null;
		}
		[Token(Token = "0x60003F6")]
		set
		{
		}
	}

	[Token(Token = "0x1700009F")]
	public TValue Value
	{
		[Token(Token = "0x60003F7")]
		get
		{
			return (TValue)null;
		}
		[Token(Token = "0x60003F8")]
		set
		{
		}
	}

	[Token(Token = "0x60003F9")]
	public KeyValuePairClass()
	{
	}

	[Token(Token = "0x60003FA")]
	public KeyValuePairClass(TKey key)
	{
	}

	[Token(Token = "0x60003FB")]
	public KeyValuePairClass(TKey key, TValue value)
	{
	}
}
[Token(Token = "0x20000BF")]
public class MaterialSetter : MonoBehaviour
{
	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Material m;

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x15A1BDC", Offset = "0x15A1BDC", VA = "0x15A1BDC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x15A1C8C", Offset = "0x15A1C8C", VA = "0x15A1C8C")]
	public MaterialSetter()
	{
	}
}
[Token(Token = "0x20000C0")]
public class MobileAnchors : RectTransformMonoBehaviour
{
	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Vector2 anchorMin;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Vector2 anchorMax;

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x15A78C8", Offset = "0x15A78C8", VA = "0x15A78C8", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x15A7940", Offset = "0x15A7940", VA = "0x15A7940")]
	public MobileAnchors()
	{
	}
}
[Token(Token = "0x20000C1")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x57841C", Offset = "0x57841C")]
public class MobileGridLayoutGroupData : RectTransformMonoBehaviour
{
	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Vector2 cellSize;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Vector2 iPhoneXCellSize;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private int constraintCount;

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x15A7948", Offset = "0x15A7948", VA = "0x15A7948", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x15A7AB4", Offset = "0x15A7AB4", VA = "0x15A7AB4")]
	public MobileGridLayoutGroupData()
	{
	}
}
[Token(Token = "0x20000C2")]
public class MobileLayoutGroupSizeFitter : RectTransformMonoBehaviour
{
	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool verticalMode;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private Vector2 padding;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Vector2[] minSizes;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57B898", Offset = "0x57B898")]
	private int <CurrentMinSize>k__BackingField;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Vector2[] maxSizes;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57B8B8", Offset = "0x57B8B8")]
	private int <CurrentMaxSize>k__BackingField;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private LayoutGroup[] layoutGroups;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private ScrollRect scrollRect;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector2 startSize;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 startLocalScale;

	[Token(Token = "0x170000A0")]
	public Vector2[] MinSizes
	{
		[Token(Token = "0x6000402")]
		[Address(RVA = "0x15A7AD0", Offset = "0x15A7AD0", VA = "0x15A7AD0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A1")]
	public int CurrentMinSize
	{
		[Token(Token = "0x6000403")]
		[Address(RVA = "0x15A7AD8", Offset = "0x15A7AD8", VA = "0x15A7AD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58841C", Offset = "0x58841C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000404")]
		[Address(RVA = "0x15A7AE0", Offset = "0x15A7AE0", VA = "0x15A7AE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58842C", Offset = "0x58842C")]
		set
		{
		}
	}

	[Token(Token = "0x170000A2")]
	public Vector2[] MaxSizes
	{
		[Token(Token = "0x6000405")]
		[Address(RVA = "0x15A7AE8", Offset = "0x15A7AE8", VA = "0x15A7AE8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A3")]
	public int CurrentMaxSize
	{
		[Token(Token = "0x6000406")]
		[Address(RVA = "0x15A7AF0", Offset = "0x15A7AF0", VA = "0x15A7AF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58843C", Offset = "0x58843C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000407")]
		[Address(RVA = "0x15A7AF8", Offset = "0x15A7AF8", VA = "0x15A7AF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58844C", Offset = "0x58844C")]
		set
		{
		}
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x15A7B00", Offset = "0x15A7B00", VA = "0x15A7B00", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x15A7B78", Offset = "0x15A7B78", VA = "0x15A7B78")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x15A7C60", Offset = "0x15A7C60", VA = "0x15A7C60")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x15A7C9C", Offset = "0x15A7C9C", VA = "0x15A7C9C")]
	private void CalculateSize()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x15A7F1C", Offset = "0x15A7F1C", VA = "0x15A7F1C")]
	public MobileLayoutGroupSizeFitter()
	{
	}
}
[Token(Token = "0x20000C3")]
public class MobilePivot : RectTransformMonoBehaviour
{
	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Vector2 pivot;

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x15A7F28", Offset = "0x15A7F28", VA = "0x15A7F28", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x15A7FB0", Offset = "0x15A7FB0", VA = "0x15A7FB0")]
	public MobilePivot()
	{
	}
}
[Token(Token = "0x20000C4")]
public class MobileSizeDelta : RectTransformMonoBehaviour
{
	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Vector2 sizeDelta;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Vector2 iPhoneXSizeDelta;

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x15A7FB8", Offset = "0x15A7FB8", VA = "0x15A7FB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x15A8034", Offset = "0x15A8034", VA = "0x15A8034")]
	public MobileSizeDelta()
	{
	}
}
[Token(Token = "0x20000C5")]
public class Mobile_anchored_position : RectTransformMonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000C6")]
	public class AspectAnchoredPosition : KeyValuePairClass<Vector2, Vector2>
	{
		[Token(Token = "0x6000413")]
		[Address(RVA = "0x1579AF8", Offset = "0x1579AF8", VA = "0x1579AF8")]
		public AspectAnchoredPosition()
		{
		}
	}

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Vector2 anchoredPosition;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Vector2 iPhoneXAnchoredPosition;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AspectAnchoredPosition[] anchoredPositionByAspect;

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x15A8048", Offset = "0x15A8048", VA = "0x15A8048", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x15A80C0", Offset = "0x15A80C0", VA = "0x15A80C0")]
	public Mobile_anchored_position()
	{
	}
}
[Token(Token = "0x20000C7")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x578484", Offset = "0x578484")]
public class Mobile_color : BaseMonoBehaviour
{
	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Color color;

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x15A80D4", Offset = "0x15A80D4", VA = "0x15A80D4")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x15A8180", Offset = "0x15A8180", VA = "0x15A8180")]
	public Mobile_color()
	{
	}
}
[Token(Token = "0x20000C8")]
public class Mobile_scale : BaseMonoBehaviour
{
	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector3 scaleTo;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private Vector3 iPhoneXScaleTo;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool android;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[SerializeField]
	private bool iphone;

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x15A8188", Offset = "0x15A8188", VA = "0x15A8188")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x15A8224", Offset = "0x15A8224", VA = "0x15A8224")]
	public Mobile_scale()
	{
	}
}
[Token(Token = "0x20000C9")]
public class PanelTracker : MonoBehaviour
{
	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UnityEvent onEnableEvent;

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x15E8A60", Offset = "0x15E8A60", VA = "0x15E8A60")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x15E8A74", Offset = "0x15E8A74", VA = "0x15E8A74")]
	public PanelTracker()
	{
	}
}
[Token(Token = "0x20000CA")]
public class PlayerPrefsExtra
{
	[Token(Token = "0x600041A")]
	[Address(RVA = "0x154AF64", Offset = "0x154AF64", VA = "0x154AF64")]
	public static bool GetBool(string key, bool defaultValue = false)
	{
		return default(bool);
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x154AF88", Offset = "0x154AF88", VA = "0x154AF88")]
	public static void SetBool(string key, bool value)
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x154AF94", Offset = "0x154AF94", VA = "0x154AF94")]
	public PlayerPrefsExtra()
	{
	}
}
[Token(Token = "0x20000CB")]
public class RandomExtra
{
	[Token(Token = "0x600041D")]
	[Address(RVA = "0x155CC6C", Offset = "0x155CC6C", VA = "0x155CC6C")]
	public static int Range1To100Int()
	{
		return default(int);
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x155CC7C", Offset = "0x155CC7C", VA = "0x155CC7C")]
	public static float Range1To100Float()
	{
		return default(float);
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x155CC90", Offset = "0x155CC90", VA = "0x155CC90")]
	public RandomExtra()
	{
	}
}
[Token(Token = "0x20000CC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x5784EC", Offset = "0x5784EC")]
public class RectTransformMonoBehaviour : BaseMonoBehaviour
{
	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57B9A8", Offset = "0x57B9A8")]
	private RectTransform <RectTransform>k__BackingField;

	[Token(Token = "0x170000A4")]
	public RectTransform RectTransform
	{
		[Token(Token = "0x6000420")]
		[Address(RVA = "0x1532A38", Offset = "0x1532A38", VA = "0x1532A38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58845C", Offset = "0x58845C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000421")]
		[Address(RVA = "0x1532A40", Offset = "0x1532A40", VA = "0x1532A40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58846C", Offset = "0x58846C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x1532A48", Offset = "0x1532A48", VA = "0x1532A48", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x1532ABC", Offset = "0x1532ABC", VA = "0x1532ABC")]
	public RectTransformMonoBehaviour()
	{
	}
}
[Token(Token = "0x20000CD")]
public class Singleton<T> : BaseMonoBehaviour where T : MonoBehaviour
{
	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static T _instance;

	[Token(Token = "0x170000A5")]
	public static T Instance
	{
		[Token(Token = "0x6000424")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000425")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000426")]
	public Singleton()
	{
	}
}
[Token(Token = "0x20000CE")]
public class SingletonMonoBehaviour<T> : BaseMonoBehaviour where T : MonoBehaviour
{
	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57B9B8", Offset = "0x57B9B8")]
	private static T <Instance>k__BackingField;

	[Token(Token = "0x170000A6")]
	public static T Instance
	{
		[Token(Token = "0x6000427")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58847C", Offset = "0x58847C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000428")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58848C", Offset = "0x58848C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000429")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x600042A")]
	public SingletonMonoBehaviour()
	{
	}
}
[Token(Token = "0x20000CF")]
public class TextFormatting
{
	[Token(Token = "0x600042B")]
	[Address(RVA = "0x1666318", Offset = "0x1666318", VA = "0x1666318")]
	public static string FormatGameText(string localizationText)
	{
		return null;
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x166643C", Offset = "0x166643C", VA = "0x166643C")]
	public TextFormatting()
	{
	}
}
[Token(Token = "0x20000D0")]
public class ZoomScale : RectTransformMonoBehaviour
{
	[Token(Token = "0x600042D")]
	[Address(RVA = "0x15D4DA0", Offset = "0x15D4DA0", VA = "0x15D4DA0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x15D4E98", Offset = "0x15D4E98", VA = "0x15D4E98")]
	public ZoomScale()
	{
	}
}
[Token(Token = "0x20000D1")]
public class ConsolesCheck : MonoBehaviour
{
	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isConsoles;

	[Token(Token = "0x600042F")]
	[Address(RVA = "0xA26040", Offset = "0xA26040", VA = "0xA26040")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0xA26078", Offset = "0xA26078", VA = "0xA26078")]
	public ConsolesCheck()
	{
	}
}
[Token(Token = "0x20000D2")]
public class ControlsPanel : MonoBehaviour
{
	[Token(Token = "0x20000D3")]
	public enum States
	{
		[Token(Token = "0x4000530")]
		None,
		[Token(Token = "0x4000531")]
		MapScreen,
		[Token(Token = "0x4000532")]
		Journal,
		[Token(Token = "0x4000533")]
		MapEnemy,
		[Token(Token = "0x4000534")]
		Sea,
		[Token(Token = "0x4000535")]
		SeaBattle,
		[Token(Token = "0x4000536")]
		SkillsWindow,
		[Token(Token = "0x4000537")]
		HoldWindow,
		[Token(Token = "0x4000538")]
		Explorer,
		[Token(Token = "0x4000539")]
		ResultWin,
		[Token(Token = "0x400053A")]
		Message,
		[Token(Token = "0x400053B")]
		TeamManage,
		[Token(Token = "0x400053C")]
		SlotDescr,
		[Token(Token = "0x400053D")]
		FractionChangeWindow,
		[Token(Token = "0x400053E")]
		CanvasZoom,
		[Token(Token = "0x400053F")]
		SaveWin
	}

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool isOn;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private States state;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private char[] textSprites;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Sprite[] sprites;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject ControlTemplate;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject crossButton;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject circleButton;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject triangleButton;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject squareButton;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject l1Button;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject l2Button;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject r1Button;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject r2Button;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject leftstickButton;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject rightstickButton;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject leftrightButton;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject updownButton;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject touchpadButton;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject r3Button;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject l3Button;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject optionsButton;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static ControlsPanel instance;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool unitySwitch;

	[Token(Token = "0x6000431")]
	[Address(RVA = "0xA26610", Offset = "0xA26610", VA = "0xA26610")]
	private void ClearButtons()
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0xA2676C", Offset = "0xA2676C", VA = "0xA2676C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0xA2D240", Offset = "0xA2D240", VA = "0xA2D240")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0xA273B0", Offset = "0xA273B0", VA = "0xA273B0")]
	private void ControlsStates(States newState)
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0xA2D244", Offset = "0xA2D244", VA = "0xA2D244")]
	public ControlsPanel()
	{
	}
}
[Token(Token = "0x20000D4")]
public class ControlsPanelNS : MonoBehaviour
{
	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ControlsPanelNS instance;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Font nsFont;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public GameObject BottomPanel;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject BottomPanelTemplate;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float orig_NEW_UI_aditional;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float orig_UI_journBtn;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float orig_UI_InfoBar;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float UI_fracBtnChange;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float UI_HPbar;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float Totems;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject crossButton;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject circleButton;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject triangleButton;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject squareButton;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject l1Button;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject l2Button;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject r1Button;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject r2Button;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject leftstickButton;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject rightstickButton;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject leftrightButton;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject updownButton;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject touchpadButton;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject r3Button;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject l3Button;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject optionsButton;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<GameObject> jrn;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private List<float> jrnOrigPos;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private GameObject Avr_bg_1;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private GameObject Avr_bg_2;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private GameObject Avr_bg_3;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private GameObject Avr_bg_4;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private GameObject Avr_bg_5;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private GameObject Btn_Qwests;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private GameObject Btn_Legend;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private GameObject Btn_Immuschestwo;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private GameObject Btn_Status;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private GameObject Btn_Stats;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private GameObject AVR_PanelBG_TOWN;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private GameObject AVR_PanelBG_TOWN_paper;

	[Token(Token = "0x6000437")]
	[Address(RVA = "0xA2D2AC", Offset = "0xA2D2AC", VA = "0xA2D2AC")]
	public void MoveUIup()
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0xA2D6C8", Offset = "0xA2D6C8", VA = "0xA2D6C8")]
	public void MoveUIdown()
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0xA2DADC", Offset = "0xA2DADC", VA = "0xA2DADC")]
	private void Start()
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0xA2F7C8", Offset = "0xA2F7C8", VA = "0xA2F7C8")]
	private void Update()
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0xA2F7CC", Offset = "0xA2F7CC", VA = "0xA2F7CC")]
	public ControlsPanelNS()
	{
	}
}
[Token(Token = "0x20000D5")]
public class Achievements : MonoBehaviour, IMenu
{
	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ResourceRequest eventManifest;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool firstTime;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool haveRequestedSignIn;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string welcomeText;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Guid GameSessionId;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private User CurrentUser;

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x7DF428", Offset = "0x7DF428", VA = "0x7DF428")]
	public void DisplayText(string text)
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x7DF4A0", Offset = "0x7DF4A0", VA = "0x7DF4A0")]
	private void Start()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x7DF57C", Offset = "0x7DF57C", VA = "0x7DF57C")]
	private bool SanityCheckApplicationSetup()
	{
		return default(bool);
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x7DF930", Offset = "0x7DF930", VA = "0x7DF930")]
	private void Update()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x7DFBAC", Offset = "0x7DFBAC", VA = "0x7DFBAC")]
	private void AchievementsManager_OnUnlockNotifications(AchievementUnlockedEventArgs payload)
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x7DFC90", Offset = "0x7DFC90", VA = "0x7DFC90")]
	private void OnAchievementSnapshotReady(AchievementsResult achievements, GetObjectAsyncOp<AchievementsResult> op)
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x7DFF7C", Offset = "0x7DFF7C", VA = "0x7DFF7C", Slot = "4")]
	public void HandleMenu(MenuLayout layout, Menu self)
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x7E023C", Offset = "0x7E023C", VA = "0x7E023C")]
	public Achievements()
	{
	}
}
[Token(Token = "0x20000D6")]
public class SimplifiedAchievements : MonoBehaviour, IMenu
{
	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstTime;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool haveRequestedSignIn;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string welcomeText;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private User CurrentUser;

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x1677E70", Offset = "0x1677E70", VA = "0x1677E70")]
	public void DisplayText(string text)
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x1677EE8", Offset = "0x1677EE8", VA = "0x1677EE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x1677F88", Offset = "0x1677F88", VA = "0x1677F88")]
	private bool SanityCheckApplicationSetup()
	{
		return default(bool);
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x167835C", Offset = "0x167835C", VA = "0x167835C")]
	private void Update()
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x1678588", Offset = "0x1678588", VA = "0x1678588")]
	private void UpdateAchievementCallback(AsyncStatus status, ActionAsyncOp op)
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x1678730", Offset = "0x1678730", VA = "0x1678730")]
	private void AchievementsManager_OnUnlockNotifications(AchievementUnlockedEventArgs payload)
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x1678814", Offset = "0x1678814", VA = "0x1678814")]
	private void OnAchievementSnapshotReady(AchievementsResult achievements, GetObjectAsyncOp<AchievementsResult> op)
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x1678B00", Offset = "0x1678B00", VA = "0x1678B00", Slot = "4")]
	public void HandleMenu(MenuLayout layout, Menu self)
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x1678DC0", Offset = "0x1678DC0", VA = "0x1678DC0")]
	public SimplifiedAchievements()
	{
	}
}
[Token(Token = "0x20000D7")]
public class DataPlatformMainMenu : MonoBehaviour, IMenu
{
	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ResourceRequest eventManifest;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool firstTime;

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x7C6AF4", Offset = "0x7C6AF4", VA = "0x7C6AF4")]
	public void DisplayText(string text)
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x7C6BA4", Offset = "0x7C6BA4", VA = "0x7C6BA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x7C6C60", Offset = "0x7C6C60", VA = "0x7C6C60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x7C6D44", Offset = "0x7C6D44", VA = "0x7C6D44")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x7C6D48", Offset = "0x7C6D48", VA = "0x7C6D48", Slot = "4")]
	public void HandleMenu(MenuLayout layout, Menu self)
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x7C6E30", Offset = "0x7C6E30", VA = "0x7C6E30")]
	public DataPlatformMainMenu()
	{
	}
}
[Token(Token = "0x20000D8")]
public class Leaderboard : MonoBehaviour, IMenu
{
	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ResourceRequest eventManifest;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool firstTime;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool haveRequestedSignIn;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GetObjectAsyncOp<LeaderboardResults> leaderboardData;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GetObjectAsyncOp<LeaderboardResults> skipToLeaderboardData;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GetObjectAsyncOp<LeaderboardResults> topPlayersLeaderboardData;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string welcomeText;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Guid GameSessionId;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private User CurrentUser;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int score;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GUIStyle style;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GUIStyle leaderboardHeaderStyle;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GUIStyle leaderboardStyle;

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x1518A08", Offset = "0x1518A08", VA = "0x1518A08")]
	public void DisplayText(string text)
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x1518A80", Offset = "0x1518A80", VA = "0x1518A80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x1518BDC", Offset = "0x1518BDC", VA = "0x1518BDC")]
	private void PluginLogManager_OnLog(LogChannels channel, string message)
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x1518C68", Offset = "0x1518C68", VA = "0x1518C68")]
	private bool SanityCheckApplicationSetup()
	{
		return default(bool);
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x151901C", Offset = "0x151901C", VA = "0x151901C")]
	private void Update()
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x15193F4", Offset = "0x15193F4", VA = "0x15193F4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x151971C", Offset = "0x151971C", VA = "0x151971C")]
	public void DrawQueryingMessage(Rect menuRect)
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x1519880", Offset = "0x1519880", VA = "0x1519880")]
	public void DrawLeaderboardData(Rect menuRect, GetObjectAsyncOp<LeaderboardResults> ld)
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x1519F88", Offset = "0x1519F88", VA = "0x1519F88")]
	private void DrawLeaderboard(Rect menuRect, GetObjectAsyncOp<LeaderboardResults> ld)
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x1519418", Offset = "0x1519418", VA = "0x1519418")]
	public void DrawLeaderboards()
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x151958C", Offset = "0x151958C", VA = "0x151958C")]
	public void DrawCurrentScore()
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x1519200", Offset = "0x1519200", VA = "0x1519200")]
	public void RefreshLeaderboardData()
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x1519FA4", Offset = "0x1519FA4", VA = "0x1519FA4", Slot = "4")]
	public void HandleMenu(MenuLayout layout, Menu self)
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x151A284", Offset = "0x151A284", VA = "0x151A284")]
	public Leaderboard()
	{
	}
}
[Token(Token = "0x20000D9")]
public class RTAandStatistics : MonoBehaviour, IMenu
{
	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ResourceRequest eventManifest;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool firstTime;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool haveRequestedSignIn;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private DateTime lastFailedSubscribeTime;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<string> resubscribeRequests;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GetObjectAsyncOp<UserStatisticsResult> statisticsData;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string kDoorsOpened;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string kEnemyDefeats;

	[Token(Token = "0x4000589")]
	private const int kTotalSubscriptions = 2;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int DoorsOpened;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int EnemysDefeated;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int SubscribeCount;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private RTA m_RTA;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GUIStyle headerStyle;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GUIStyle valueStyle;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GUIStyle queryDataStyle;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string welcomeText;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Guid GameSessionId;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private User CurrentUser;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GUIStyle statHeaderStyle;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GUIStyle statStyle;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int unsubscribeCount;

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x1558EDC", Offset = "0x1558EDC", VA = "0x1558EDC")]
	public void DisplayText(string text)
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x1558F54", Offset = "0x1558F54", VA = "0x1558F54")]
	private void Start()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x15591F4", Offset = "0x15591F4", VA = "0x15591F4")]
	private void PluginLogManager_OnLog(LogChannels channel, string message)
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x1559280", Offset = "0x1559280", VA = "0x1559280")]
	private bool SanityCheckApplicationSetup()
	{
		return default(bool);
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x1559634", Offset = "0x1559634", VA = "0x1559634")]
	private void Update()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x1559BE8", Offset = "0x1559BE8", VA = "0x1559BE8")]
	private void OnRTACreated(RTA rta)
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x1559D70", Offset = "0x1559D70", VA = "0x1559D70")]
	private void OnStatisticChanged(uint hresult, RealTimeActivityStatisticChangeEventArgs args)
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x155A1D8", Offset = "0x155A1D8", VA = "0x155A1D8")]
	private void OnSubscribed(uint hresult, RealTimeActivityStatisticChangeSubscription sub, string statName)
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x155A74C", Offset = "0x155A74C", VA = "0x155A74C")]
	private void OpenADoor()
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x155A830", Offset = "0x155A830", VA = "0x155A830")]
	private void KillAnEnemy()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x155A958", Offset = "0x155A958", VA = "0x155A958")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x155A97C", Offset = "0x155A97C", VA = "0x155A97C")]
	private void DrawRTA()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x155B1BC", Offset = "0x155B1BC", VA = "0x155B1BC")]
	public void DrawQueryingMessage(Rect menuRect)
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x155B2DC", Offset = "0x155B2DC", VA = "0x155B2DC")]
	public void DrawStatisticData(Rect menuRect, GetObjectAsyncOp<UserStatisticsResult> sd)
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x155C650", Offset = "0x155C650", VA = "0x155C650")]
	private void DrawStatistic(Rect menuRect, GetObjectAsyncOp<UserStatisticsResult> sd)
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x155B0D8", Offset = "0x155B0D8", VA = "0x155B0D8")]
	public void DrawStatistics()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x1559A08", Offset = "0x1559A08", VA = "0x1559A08")]
	public void RefreshStatisticsData()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x155C66C", Offset = "0x155C66C", VA = "0x155C66C")]
	private void OnUnsubscribed(AsyncStatus status, UnsubscribeActionOp op)
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x155C784", Offset = "0x155C784", VA = "0x155C784", Slot = "4")]
	public void HandleMenu(MenuLayout layout, Menu self)
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x155C968", Offset = "0x155C968", VA = "0x155C968")]
	public RTAandStatistics()
	{
	}
}
[Token(Token = "0x20000DA")]
public class Stats2017 : MonoBehaviour, IMenu
{
	[Token(Token = "0x4000597")]
	public const string HighScoreStat = "highScore";

	[Token(Token = "0x4000598")]
	public const string GamesCompletedStat = "gamesCompleted";

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstTime;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool currentUserAdded;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool haveRequestedSignIn;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LeaderboardResults leaderboardResults;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LeaderboardResults skipToLeaderboardResults;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LeaderboardResults topPlayersleaderboardResults;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string welcomeText;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private User CurrentUser;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private long score;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GUIStyle style;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GUIStyle leaderboardHeaderStyle;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GUIStyle leaderboardStyle;

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x168DE60", Offset = "0x168DE60", VA = "0x168DE60")]
	public void DisplayText(string text)
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x168DED8", Offset = "0x168DED8", VA = "0x168DED8")]
	private void Start()
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x168DFC8", Offset = "0x168DFC8", VA = "0x168DFC8")]
	private void PluginLogManager_OnLog(LogChannels channel, string message)
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x168E054", Offset = "0x168E054", VA = "0x168E054")]
	private bool SanityCheckApplicationSetup()
	{
		return default(bool);
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x168E408", Offset = "0x168E408", VA = "0x168E408")]
	private void Update()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x168E71C", Offset = "0x168E71C", VA = "0x168E71C")]
	private void ProcessStatEvents(StatEventList eventList)
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x168EC3C", Offset = "0x168EC3C", VA = "0x168EC3C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x168EF64", Offset = "0x168EF64", VA = "0x168EF64")]
	public void DrawQueryingMessage(Rect menuRect)
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x168F0C8", Offset = "0x168F0C8", VA = "0x168F0C8")]
	public void DrawLeaderboardData(Rect menuRect, LeaderboardResults resultObject)
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x168F7BC", Offset = "0x168F7BC", VA = "0x168F7BC")]
	private void DrawLeaderboard(Rect menuRect, LeaderboardResults lr)
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x168EC60", Offset = "0x168EC60", VA = "0x168EC60")]
	public void DrawLeaderboards()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x168EDD4", Offset = "0x168EDD4", VA = "0x168EDD4")]
	public void DrawCurrentScore()
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x168E550", Offset = "0x168E550", VA = "0x168E550")]
	public void RefreshLeaderboardData()
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x168F7C8", Offset = "0x168F7C8", VA = "0x168F7C8", Slot = "4")]
	public void HandleMenu(MenuLayout layout, Menu self)
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x168FACC", Offset = "0x168FACC", VA = "0x168FACC")]
	public Stats2017()
	{
	}
}
[Token(Token = "0x20000DB")]
public interface IDrawMe
{
	[Token(Token = "0x6000488")]
	void Display(Rect boundingBox, int fontSize);
}
[Token(Token = "0x20000DC")]
public class TextWindow : IDrawMe
{
	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string text;

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x166696C", Offset = "0x166696C", VA = "0x166696C")]
	public TextWindow(string output)
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x16669A0", Offset = "0x16669A0", VA = "0x16669A0", Slot = "4")]
	public void Display(Rect boundingBox, int fontSize)
	{
	}
}
[Token(Token = "0x20000DD")]
public class DisplayWindow : MonoBehaviour
{
	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D backgroundImage;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int width;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int fontSize;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Rect windowRect;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float safeZonePercent;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int startAtPercentOfScreenWidth;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int startAtPercentOfScreenHeight;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int percentOfScreenWidth;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int percentOfScreenHeight;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string labelText;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private IDrawMe currentDisplay;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private TextWindow textWindow;

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x7CC600", Offset = "0x7CC600", VA = "0x7CC600")]
	public DisplayWindow()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x7CC6F8", Offset = "0x7CC6F8", VA = "0x7CC6F8")]
	public void SetCurrentDisplay(IDrawMe display)
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x7C6B68", Offset = "0x7C6B68", VA = "0x7C6B68")]
	public void SetFromText(string text)
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x7CC700", Offset = "0x7CC700", VA = "0x7CC700")]
	public string GetCurrentText()
	{
		return null;
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x7CC720", Offset = "0x7CC720", VA = "0x7CC720")]
	public void Start()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x7CC9F8", Offset = "0x7CC9F8", VA = "0x7CC9F8")]
	public void OnGUI()
	{
	}
}
[Token(Token = "0x20000DE")]
internal class FPSCounter : MonoBehaviour
{
	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float updateInterval;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int fontSize;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int safeZone;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float accum;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float timeleft;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float fps;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int frames;

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x7AC928", Offset = "0x7AC928", VA = "0x7AC928")]
	private void Start()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x7AC97C", Offset = "0x7AC97C", VA = "0x7AC97C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x7ACA08", Offset = "0x7ACA08", VA = "0x7ACA08")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x7ACC30", Offset = "0x7ACC30", VA = "0x7ACC30")]
	public FPSCounter()
	{
	}
}
[Token(Token = "0x20000DF")]
public class FrameCounter : MonoBehaviour
{
	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int fontSize;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int frameCount;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int safeZone;

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x7BBFF8", Offset = "0x7BBFF8", VA = "0x7BBFF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x7BC04C", Offset = "0x7BC04C", VA = "0x7BC04C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x7BC05C", Offset = "0x7BC05C", VA = "0x7BC05C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x7BC274", Offset = "0x7BC274", VA = "0x7BC274")]
	public FrameCounter()
	{
	}
}
[Token(Token = "0x20000E0")]
public interface IMenu
{
	[Token(Token = "0x600049A")]
	void HandleMenu(MenuLayout layout, Menu self);
}
[Token(Token = "0x20000E1")]
public class Menu : MonoBehaviour
{
	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<IMenu> menuStack;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MenuLayout layout;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int width;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int fontSize;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Rect menuRect;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float safeZonePercent;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int startAtPercentOfScreenHeight;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int startAtPercentOfScreenWidth;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int percentOfScreenWidth;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MonoBehaviour menuScript;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool useDPad;

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x15A31C8", Offset = "0x15A31C8", VA = "0x15A31C8")]
	public Menu()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x15A3298", Offset = "0x15A3298", VA = "0x15A3298")]
	public void Start()
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x15A363C", Offset = "0x15A363C", VA = "0x15A363C")]
	public void ClearMenu()
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x15A378C", Offset = "0x15A378C", VA = "0x15A378C")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x15A370C", Offset = "0x15A370C", VA = "0x15A370C")]
	public void PushMenu(IMenu menu)
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x15A38AC", Offset = "0x15A38AC", VA = "0x15A38AC")]
	public void PopMenu()
	{
	}
}
[Token(Token = "0x20000E2")]
public class MenuLayout
{
	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Rect bounds;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int ySpace;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int y;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GUIStyle style;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GUIStyle styleSelected;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GUIStyle toggleStyle;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GUIStyle toggleStyleSelected;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GUIStyle activeToggleStyle;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GUIStyle activeToggleStyleSelected;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int selectedItemIndex;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool buttonPressed;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool backButtonPressed;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int numItems;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int fontSize;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static DateTime lastOperationTime;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int currCount;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Menu mSelf;

	[Token(Token = "0x170000A7")]
	public int Selected
	{
		[Token(Token = "0x60004A4")]
		[Address(RVA = "0x15A3DA4", Offset = "0x15A3DA4", VA = "0x15A3DA4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004A5")]
		[Address(RVA = "0x15A3DAC", Offset = "0x15A3DAC", VA = "0x15A3DAC")]
		set
		{
		}
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x15A35C0", Offset = "0x15A35C0", VA = "0x15A35C0")]
	public MenuLayout(Rect menuBounds, int itemFontSize, Menu self)
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x15A3938", Offset = "0x15A3938", VA = "0x15A3938")]
	private void DoLayout(int itemCount)
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x15A3888", Offset = "0x15A3888", VA = "0x15A3888")]
	public void SetSelectedItem(int index)
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x15A3DD0", Offset = "0x15A3DD0", VA = "0x15A3DD0")]
	public void ItemNext()
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x15A3DF4", Offset = "0x15A3DF4", VA = "0x15A3DF4")]
	public void ItemPrev()
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x15A3E1C", Offset = "0x15A3E1C", VA = "0x15A3E1C")]
	public void Update(int itemCount)
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x15A3E50", Offset = "0x15A3E50", VA = "0x15A3E50")]
	private void HandleInput(bool useDPad)
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x15A41CC", Offset = "0x15A41CC", VA = "0x15A41CC")]
	private static bool ClickOncePerFrame()
	{
		return default(bool);
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x15A41FC", Offset = "0x15A41FC", VA = "0x15A41FC")]
	private bool AddButton(string text, bool enabled = true, bool selected = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x15A44B4", Offset = "0x15A44B4", VA = "0x15A44B4")]
	public bool AddButtonWithIndex(string name, bool enabled = true)
	{
		return default(bool);
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x15A4594", Offset = "0x15A4594", VA = "0x15A4594")]
	private bool AddToggleAt(string text, bool enabled, bool state, bool selected)
	{
		return default(bool);
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x15A482C", Offset = "0x15A482C", VA = "0x15A482C")]
	public bool AddToggle(string name, bool state, bool enabled = true)
	{
		return default(bool);
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x15A4944", Offset = "0x15A4944", VA = "0x15A4944")]
	public bool AddBackButtonWithIndex(string name, bool enabled = true)
	{
		return default(bool);
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x15A4A4C", Offset = "0x15A4A4C", VA = "0x15A4A4C")]
	public void AddLabel(string text, bool enabled = true)
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x15A4424", Offset = "0x15A4424", VA = "0x15A4424")]
	public Rect GetRect()
	{
		return default(Rect);
	}
}
[Token(Token = "0x20000E3")]
public class OnScreenLog : MonoBehaviour
{
	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int msgCount;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<string> log;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int maxLines;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int fontSize;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int startx;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int starty;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float safeZonePercent;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int width;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int startAtPercentOfScreenHeight;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int startAtPercentOfScreenWidth;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int percentOfScreenWidth;

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x15E3774", Offset = "0x15E3774", VA = "0x15E3774")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x15E3910", Offset = "0x15E3910", VA = "0x15E3910")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x15E3914", Offset = "0x15E3914", VA = "0x15E3914")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x15E3BCC", Offset = "0x15E3BCC", VA = "0x15E3BCC")]
	public static void Add(string msg)
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x15E3DB4", Offset = "0x15E3DB4", VA = "0x15E3DB4")]
	public static void Clear()
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x15E3E38", Offset = "0x15E3E38", VA = "0x15E3E38")]
	public OnScreenLog()
	{
	}
}
[Token(Token = "0x20000E4")]
public class JadeSeaUnlocker : MonoBehaviour
{
	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x156C8C4", Offset = "0x156C8C4", VA = "0x156C8C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x156C950", Offset = "0x156C950", VA = "0x156C950")]
	public JadeSeaUnlocker()
	{
	}
}
[Token(Token = "0x20000E5")]
public class PirateCityUnlocker : MonoBehaviour
{
	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x15F00B0", Offset = "0x15F00B0", VA = "0x15F00B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x15F013C", Offset = "0x15F013C", VA = "0x15F013C")]
	public PirateCityUnlocker()
	{
	}
}
[Token(Token = "0x20000E6")]
public class Escape_key_check : MonoBehaviour
{
	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x8B4B2C", Offset = "0x8B4B2C", VA = "0x8B4B2C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x8B4E64", Offset = "0x8B4E64", VA = "0x8B4E64")]
	public Escape_key_check()
	{
	}
}
[Token(Token = "0x20000E7")]
public class EventCapture : MonoBehaviour
{
	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x8B4E6C", Offset = "0x8B4E6C", VA = "0x8B4E6C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x8B4E70", Offset = "0x8B4E70", VA = "0x8B4E70")]
	private void Update()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x8B4E74", Offset = "0x8B4E74", VA = "0x8B4E74")]
	private void SendEvent()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x8B4EE8", Offset = "0x8B4EE8", VA = "0x8B4EE8")]
	public EventCapture()
	{
	}
}
[Token(Token = "0x20000E8")]
public class FireTrail : MonoBehaviour
{
	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool Burned;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool Trail;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool Final;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject MyFire;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject MyFireFinal;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float fireTimeToBurnNext;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public FireTrail Next;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public FireTrail Prev;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float FireDamage;

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x7B2100", Offset = "0x7B2100", VA = "0x7B2100")]
	public void BurnIt()
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x7B2348", Offset = "0x7B2348", VA = "0x7B2348")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x7B234C", Offset = "0x7B234C", VA = "0x7B234C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x7B26B4", Offset = "0x7B26B4", VA = "0x7B26B4")]
	public FireTrail()
	{
	}
}
[Token(Token = "0x20000E9")]
public class FoliageDestr : MonoBehaviour
{
	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float HP;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float DamageItFromPlayer;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public H_FX HitIt;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public H_FX HitIt2;

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x7B7DB8", Offset = "0x7B7DB8", VA = "0x7B7DB8")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x7B7E6C", Offset = "0x7B7E6C", VA = "0x7B7E6C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x7B7FD8", Offset = "0x7B7FD8", VA = "0x7B7FD8")]
	public FoliageDestr()
	{
	}
}
[Token(Token = "0x20000EA")]
public class ALML : MonoBehaviour
{
	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject exitMessage;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text messageElement;

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x7DA04C", Offset = "0x7DA04C", VA = "0x7DA04C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x7DA0B8", Offset = "0x7DA0B8", VA = "0x7DA0B8")]
	public ALML()
	{
	}
}
[Token(Token = "0x20000EB")]
[DisallowMultipleComponent]
public class SteamManager : MonoBehaviour
{
	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x168FBBC", Offset = "0x168FBBC", VA = "0x168FBBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x168FC28", Offset = "0x168FC28", VA = "0x168FC28")]
	public SteamManager()
	{
	}
}
[Token(Token = "0x20000EC")]
public class GamepadAddon : MonoBehaviour
{
	[Token(Token = "0x20000ED")]
	public enum ButtonType
	{
		[Token(Token = "0x40005F8")]
		OK,
		[Token(Token = "0x40005F9")]
		Cancel,
		[Token(Token = "0x40005FA")]
		Additional2,
		[Token(Token = "0x40005FB")]
		Additional1,
		[Token(Token = "0x40005FC")]
		TriggerUpLeft,
		[Token(Token = "0x40005FD")]
		TriggerBottomLeft,
		[Token(Token = "0x40005FE")]
		TriggerUpRight,
		[Token(Token = "0x40005FF")]
		TriggerBottomRight,
		[Token(Token = "0x4000600")]
		StickL,
		[Token(Token = "0x4000601")]
		StickR,
		[Token(Token = "0x4000602")]
		DpadFull,
		[Token(Token = "0x4000603")]
		DpadDown,
		[Token(Token = "0x4000604")]
		DpadUp,
		[Token(Token = "0x4000605")]
		DpadLeft,
		[Token(Token = "0x4000606")]
		DpadRight,
		[Token(Token = "0x4000607")]
		Button2,
		[Token(Token = "0x4000608")]
		System,
		[Token(Token = "0x4000609")]
		Button1,
		[Token(Token = "0x400060A")]
		DpadLeftRight,
		[Token(Token = "0x400060B")]
		DpadUpDown,
		[Token(Token = "0x400060C")]
		R3,
		[Token(Token = "0x400060D")]
		L3
	}

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int CurrLinkList;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int PrevLinkList;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button FracBtnSlot;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool LastCoordReturn;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 LastCoord;

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x7BD548", Offset = "0x7BD548", VA = "0x7BD548")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x7BD54C", Offset = "0x7BD54C", VA = "0x7BD54C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x7C1E90", Offset = "0x7C1E90", VA = "0x7C1E90")]
	public static Sprite GetButtonSprite(ButtonType buttonType)
	{
		return null;
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x7C1FB8", Offset = "0x7C1FB8", VA = "0x7C1FB8")]
	public GamepadAddon()
	{
	}
}
[Token(Token = "0x20000EE")]
public static class GPGSIds
{
	[Token(Token = "0x400060E")]
	public const string achievement_true_pirate = "CgkI34rVlqgFEAIQBg";

	[Token(Token = "0x400060F")]
	public const string achievement_righteous_one = "CgkI34rVlqgFEAIQGg";

	[Token(Token = "0x4000610")]
	public const string achievement_the_merchant = "CgkI34rVlqgFEAIQBQ";

	[Token(Token = "0x4000611")]
	public const string achievement_my_domains = "CgkI34rVlqgFEAIQBA";

	[Token(Token = "0x4000612")]
	public const string achievement_maestro = "CgkI34rVlqgFEAIQGw";

	[Token(Token = "0x4000613")]
	public const string achievement_sea_of_poison = "CgkI34rVlqgFEAIQCQ";

	[Token(Token = "0x4000614")]
	public const string achievement_the_one = "CgkI34rVlqgFEAIQDw";

	[Token(Token = "0x4000615")]
	public const string achievement_tempest = "CgkI34rVlqgFEAIQDg";

	[Token(Token = "0x4000616")]
	public const string achievement_fraud = "CgkI34rVlqgFEAIQGQ";

	[Token(Token = "0x4000617")]
	public const string achievement_sea_wolf = "CgkI34rVlqgFEAIQDA";

	[Token(Token = "0x4000618")]
	public const string achievement_the_hunter = "CgkI34rVlqgFEAIQCA";

	[Token(Token = "0x4000619")]
	public const string achievement_sharp_as_a_razor = "CgkI34rVlqgFEAIQBw";

	[Token(Token = "0x400061A")]
	public const string achievement_conqueror_of_the_lands = "CgkI34rVlqgFEAIQFQ";

	[Token(Token = "0x400061B")]
	public const string achievement_animal_advocate = "CgkI34rVlqgFEAIQGA";

	[Token(Token = "0x400061C")]
	public const string achievement_treasure_hunter = "CgkI34rVlqgFEAIQAg";

	[Token(Token = "0x400061D")]
	public const string achievement_fearless = "CgkI34rVlqgFEAIQCw";

	[Token(Token = "0x400061E")]
	public const string achievement_kind_doctor = "CgkI34rVlqgFEAIQFw";

	[Token(Token = "0x400061F")]
	public const string achievement_emperors_friend = "CgkI34rVlqgFEAIQFg";

	[Token(Token = "0x4000620")]
	public const string achievement_train_hard_fight_easy = "CgkI34rVlqgFEAIQDQ";

	[Token(Token = "0x4000621")]
	public const string achievement_maneuver_master = "CgkI34rVlqgFEAIQAQ";

	[Token(Token = "0x4000622")]
	public const string achievement_cunning_bastard = "CgkI34rVlqgFEAIQHA";

	[Token(Token = "0x4000623")]
	public const string achievement_best_actor = "CgkI34rVlqgFEAIQAw";

	[Token(Token = "0x4000624")]
	public const string achievement_all_on_board = "CgkI34rVlqgFEAIQCg";
}
[Token(Token = "0x20000EF")]
public abstract class AbstractExploreLogic : MonoBehaviour
{
	[Token(Token = "0x60004D4")]
	public abstract GameObject GetMainLand();

	[Token(Token = "0x60004D5")]
	public abstract IEnumerator Prepare(TerrianIniter currentIsland_);

	[Token(Token = "0x60004D6")]
	public abstract void Update();

	[Token(Token = "0x60004D7")]
	public abstract void UpdateBackgroundMechanics();

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x7DA174", Offset = "0x7DA174", VA = "0x7DA174")]
	protected AbstractExploreLogic()
	{
	}
}
[Token(Token = "0x20000F0")]
public class ChestOpening : MonoBehaviour
{
	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Cover;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Opened;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public H_camera ChestCam;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform OpenArea;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform PersAlign;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool Take1;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool Take2;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float ProcIt;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Action _callback;

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x852680", Offset = "0x852680", VA = "0x852680")]
	public void SetOnChestOpen(Action callback)
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x852688", Offset = "0x852688", VA = "0x852688")]
	private void Start()
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x85268C", Offset = "0x85268C", VA = "0x85268C")]
	public void SetActive(bool active)
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x8526DC", Offset = "0x8526DC", VA = "0x8526DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x853758", Offset = "0x853758", VA = "0x853758")]
	public ChestOpening()
	{
	}
}
[Token(Token = "0x20000F1")]
public class DamagePoint : MonoBehaviour
{
	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool MySword;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 WasPos;

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x7C6480", Offset = "0x7C6480", VA = "0x7C6480")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x7C64BC", Offset = "0x7C64BC", VA = "0x7C64BC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x7C6A30", Offset = "0x7C6A30", VA = "0x7C6A30")]
	public DamagePoint()
	{
	}
}
[Token(Token = "0x20000F2")]
public class Explore : MonoBehaviour
{
	[Token(Token = "0x20000F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578564", Offset = "0x578564")]
	private sealed class <WaitForUnloadDLC>d__270 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170000AD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000521")]
			[Address(RVA = "0x150AF14", Offset = "0x150AF14", VA = "0x150AF14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000523")]
			[Address(RVA = "0x150AF5C", Offset = "0x150AF5C", VA = "0x150AF5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600051E")]
		[Address(RVA = "0x150AE34", Offset = "0x150AE34", VA = "0x150AE34")]
		[DebuggerHidden]
		public <WaitForUnloadDLC>d__270(int <>1__state)
		{
		}

		[Token(Token = "0x600051F")]
		[Address(RVA = "0x150AE60", Offset = "0x150AE60", VA = "0x150AE60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000520")]
		[Address(RVA = "0x150AE64", Offset = "0x150AE64", VA = "0x150AE64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000522")]
		[Address(RVA = "0x150AF1C", Offset = "0x150AF1C", VA = "0x150AF1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578574", Offset = "0x578574")]
	private sealed class <GoLandingChina>d__280 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Explore <>4__this;

		[Token(Token = "0x170000AF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000527")]
			[Address(RVA = "0x1509AF4", Offset = "0x1509AF4", VA = "0x1509AF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000529")]
			[Address(RVA = "0x1509B3C", Offset = "0x1509B3C", VA = "0x1509B3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000524")]
		[Address(RVA = "0x1509854", Offset = "0x1509854", VA = "0x1509854")]
		[DebuggerHidden]
		public <GoLandingChina>d__280(int <>1__state)
		{
		}

		[Token(Token = "0x6000525")]
		[Address(RVA = "0x1509880", Offset = "0x1509880", VA = "0x1509880", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000526")]
		[Address(RVA = "0x1509884", Offset = "0x1509884", VA = "0x1509884", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000528")]
		[Address(RVA = "0x1509AFC", Offset = "0x1509AFC", VA = "0x1509AFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000F5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578584", Offset = "0x578584")]
	private sealed class <GoLandingTotems>d__288 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Explore <>4__this;

		[Token(Token = "0x170000B1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600052D")]
			[Address(RVA = "0x150A264", Offset = "0x150A264", VA = "0x150A264", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600052F")]
			[Address(RVA = "0x150A2AC", Offset = "0x150A2AC", VA = "0x150A2AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600052A")]
		[Address(RVA = "0x1509FB8", Offset = "0x1509FB8", VA = "0x1509FB8")]
		[DebuggerHidden]
		public <GoLandingTotems>d__288(int <>1__state)
		{
		}

		[Token(Token = "0x600052B")]
		[Address(RVA = "0x1509FE4", Offset = "0x1509FE4", VA = "0x1509FE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600052C")]
		[Address(RVA = "0x1509FE8", Offset = "0x1509FE8", VA = "0x1509FE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600052E")]
		[Address(RVA = "0x150A26C", Offset = "0x150A26C", VA = "0x150A26C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578594", Offset = "0x578594")]
	private sealed class <GoLandingQuest>d__289 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Explore <>4__this;

		[Token(Token = "0x170000B3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000533")]
			[Address(RVA = "0x1509F68", Offset = "0x1509F68", VA = "0x1509F68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000535")]
			[Address(RVA = "0x1509FB0", Offset = "0x1509FB0", VA = "0x1509FB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000530")]
		[Address(RVA = "0x1509B44", Offset = "0x1509B44", VA = "0x1509B44")]
		[DebuggerHidden]
		public <GoLandingQuest>d__289(int <>1__state)
		{
		}

		[Token(Token = "0x6000531")]
		[Address(RVA = "0x1509B70", Offset = "0x1509B70", VA = "0x1509B70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000532")]
		[Address(RVA = "0x1509B74", Offset = "0x1509B74", VA = "0x1509B74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000534")]
		[Address(RVA = "0x1509F70", Offset = "0x1509F70", VA = "0x1509F70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000F7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5785A4", Offset = "0x5785A4")]
	private sealed class <GoLandingArena>d__290 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Explore <>4__this;

		[Token(Token = "0x170000B5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000539")]
			[Address(RVA = "0x1509804", Offset = "0x1509804", VA = "0x1509804", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600053B")]
			[Address(RVA = "0x150984C", Offset = "0x150984C", VA = "0x150984C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000536")]
		[Address(RVA = "0x150944C", Offset = "0x150944C", VA = "0x150944C")]
		[DebuggerHidden]
		public <GoLandingArena>d__290(int <>1__state)
		{
		}

		[Token(Token = "0x6000537")]
		[Address(RVA = "0x1509478", Offset = "0x1509478", VA = "0x1509478", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000538")]
		[Address(RVA = "0x150947C", Offset = "0x150947C", VA = "0x150947C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600053A")]
		[Address(RVA = "0x150980C", Offset = "0x150980C", VA = "0x150980C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5785B4", Offset = "0x5785B4")]
	private sealed class <LoadLandingScene>d__291 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Explore <>4__this;

		[Token(Token = "0x170000B7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600053F")]
			[Address(RVA = "0x150ADE4", Offset = "0x150ADE4", VA = "0x150ADE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000541")]
			[Address(RVA = "0x150AE2C", Offset = "0x150AE2C", VA = "0x150AE2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600053C")]
		[Address(RVA = "0x150A2B4", Offset = "0x150A2B4", VA = "0x150A2B4")]
		[DebuggerHidden]
		public <LoadLandingScene>d__291(int <>1__state)
		{
		}

		[Token(Token = "0x600053D")]
		[Address(RVA = "0x150A2E0", Offset = "0x150A2E0", VA = "0x150A2E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600053E")]
		[Address(RVA = "0x150A2E4", Offset = "0x150A2E4", VA = "0x150A2E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000540")]
		[Address(RVA = "0x150ADEC", Offset = "0x150ADEC", VA = "0x150ADEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SaveDataSettings settings;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Vector3 DeltaCoordWrld;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float CameraOffset;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject SwitchPers;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject HIM_Button;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject SHE_Button;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RaycastHit? autoHit;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	public GameObject MiniMapDLC;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	public GameObject[] MiniMapView;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject dlcMapShadow;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 dlc_map_scale;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 dlc_map_pos;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool dlcMapZoomed;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject ExitToShipFromFreeLanding;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform MMap_ship;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform MMap_exit;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform MMap_player;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform MMap_quest;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Transform[] MMap_loca;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform[] MMap_vis;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public bool FREE_EXPLORE;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	public bool WOMAN_PERS;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57BA88", Offset = "0x57BA88")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57BA88", Offset = "0x57BA88")]
	private SkinnedMeshRenderer manCaptainMesh;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57BAF8", Offset = "0x57BAF8")]
	public Material[] manCaptainMat;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57BB44", Offset = "0x57BB44")]
	public Material[] zombieManCaptainMat;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57BB90", Offset = "0x57BB90")]
	private SkinnedMeshRenderer womanCaptainMesh;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57BBDC", Offset = "0x57BBDC")]
	private Material[] womanCaptainMat;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57BC28", Offset = "0x57BC28")]
	private Material[] zombieWomanCaptainMat;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57BC74", Offset = "0x57BC74")]
	public Terrain ConnectedToTerrian;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool EnemyNear;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	[SerializeField]
	private int ImStandWalkRun;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private int Z;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private bool PlayedDieANim;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private float minRot;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	[SerializeField]
	private float maxRot;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private TerrianIniter currentIsland;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static bool canUsePistol;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	public static bool canUseCannons;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private GameObject arenaUI;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private Text arenaPointsText;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private Text arenaTimeLeftText;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private List<EnemySettings> arenaEnemyList;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private float landingOceanScale;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float originalOceanScale;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private float RotDelta;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public int AwaitTotEnergy;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject TotLightL;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject TotLightR;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject TotLightBOTH;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Image TotPower;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Sprite[] TotPowIcons;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Sprite KeyIcon;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int LandQwestWaves;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static int LandQwestKeys;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int LandFortHP;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static GameObject FortShootFrom;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject FortShootTo;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57BD18", Offset = "0x57BD18")]
	public GameObject SupportPrefab;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject zombieSupportPrefab;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public GameObject SupportPrefabWillage;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public GameObject LandQwestWin;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public Text LandQwestTitle;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public Text LandQwestDescribe;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public GameObject LandQwestCounter;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public Slider CntBar;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public Text LandQwestCounterTitle;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static bool LockForChest;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public GameObject ExitAreaPref;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public GameObject ExitAreaPrefLand;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public GameObject ExitAreaInited;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static float ExitTimer;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public GameObject SkelSpounPref;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public AudioSource JungleSound;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public AudioSource BoardingSound;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public AudioSource SeaAmbient;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public GameObject ForcesBar;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public Slider ForcesSlider;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public GameObject Totems;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public Slider TotemL;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public Slider TotemR;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static bool SpounFX;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public static bool SpounSFX;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static float CameraSetTimer;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static float AgrRadius;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public static bool AbordageMode;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public GameObject[] CrewPrefab;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public GameObject[] ZombieCrewPrefabList;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public GameObject CrewPrefabSkel;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public GameObject CradPrefab;

	[Token(Token = "0x4000689")]
	public const float Scaler = 0.238f;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	[SerializeField]
	private List<EnemiesRankPrefabs> enemiesTypes;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public bool PlayerDied;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public static bool PlayerExitFromLocation;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public RectTransform Pimpa;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public Vector2 PimpaOffset;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public ReflectionProbe SeaReflector;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public bool UIBTN_SignalAttakc;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x299")]
	public bool UIBTN_SignalBlock;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29A")]
	public bool UIBTN_SignalShoot;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29B")]
	public bool UIBTN_SignalCanons;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
	public bool UIBTN_SignalW;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29D")]
	public bool UIBTN_SignalA;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29E")]
	public bool UIBTN_SignalS;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29F")]
	public bool UIBTN_SignalD;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public bool UIBTN_SignalSLOW_walk;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public RectTransform UI_CanonZalp;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public RectTransform UI_Shoot;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public GameObject UI_HPbar;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public GameObject UI_block;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public GameObject UI_hit;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public GameObject UI_hitL;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public GameObject UI_HPbarShadow;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public RectTransform UI_Target;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public AudioClip[] Footstep;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public AudioClip[] FootstepStone;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	public AudioClip[] FootstepSand;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	public AudioClip[] FootstepBridge;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	public AudioClip[] FootstepBoarding;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public AudioClip[] SwordHit;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public AudioClip[] SwordWhoos;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public AudioClip[] Leaves;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	public AudioClip[] BlockHit;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	public AudioClip[] Hurt;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	public AudioClip[] Might;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	public AudioClip[] Explosions;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	public AudioClip[] SkelIdle;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	public AudioClip[] SkelHrrr;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	public AudioClip[] SkelDestroy;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	public AudioClip[] SkelStep;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	public AudioClip[] HurtWoman;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	public AudioClip[] MightWoman;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	public AudioClip Equip;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	public AudioClip UnEquip;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	public AudioClip AIMing;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	public AudioClip VictoryCrowd;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	private float EquipUnequipDecide;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39C")]
	private float footstepFreq;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	public GameObject UI_Land;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	public Transform UI_PistolsPanel;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	public PistolSelect UI_PistolSelectPrefab;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	public PistolData[] PistolsData;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	public GameObject[] UI_HideShow;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	public Image CanonsReload;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
	public Image CanonsIcon;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
	public GameObject ExplosionPrefab;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
	public GameObject ExplosionPrefabHuge;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
	public GameObject HitFromShipTelegraph;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
	public GameObject HitFromShip;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
	public Vector3 trace;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x404")]
	private float setSeveral;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
	private int setSeveralCnt;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
	public Image UI_ShootIcon;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
	public Image UI_ShootReload;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
	public Slider UI_HP;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static PistolData PistolSelected;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
	private float Reload;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static float MicroReload;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42C")]
	private bool NeedReload;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
	public Animator Pers;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
	public Animator PersWoman;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
	public Animator PersMen;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
	public Gates MainGate;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
	public GameObject Fonar;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
	public GameObject Rapire;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
	public ParticleSystem BulletTrail;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x468")]
	public ParticleSystem BulletHit;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x470")]
	public GameObject Pistol;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x478")]
	public GameObject WOM_Fonar;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x480")]
	public GameObject WOM_Rapire;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
	public GameObject WOM_Pistol;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
	public ParticleSystem ShootPFX;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x498")]
	[SerializeField]
	private float showRapire;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public static float showRapireWeight;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static float showAimWeight;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public static float Attack;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49C")]
	public bool Block;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A0")]
	public ParticleSystem BlockSparks;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A8")]
	public ParticleSystem WOM_BlockSparks;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B0")]
	public bool AIM;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static float MinShootTimer;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B1")]
	public bool AIM_breaked;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B8")]
	public GameObject MySwordDamageGroup;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C0")]
	public GameObject MySwordDamageGroupLeg;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C8")]
	public GameObject WOM_MySwordDamageGroup;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D0")]
	public GameObject WOM_MySwordDamageGroupLeg;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D8")]
	public bool Weapon;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4DC")]
	private float DamageAction;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E0")]
	private float BlockAction;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E4")]
	[SerializeField]
	private LayerMask PirsTown;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public static bool isLockedMyCaptainHP;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static int Level_Type;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public static int LocationBG_Type;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E8")]
	[HideInInspector]
	public string mainlandScene;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F0")]
	private Scene mainScene;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F4")]
	[HideInInspector]
	public bool Winner;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static Explore Singletone;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static bool ExploreMode;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F8")]
	public H_camera ExplorCamera;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x500")]
	public Transform Personague;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x508")]
	public Rigidbody PersonagueRig;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x510")]
	public CapsuleCollider PersonagueCol;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x518")]
	public Transform PersonagueSubRot;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x520")]
	private float SubRot;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x524")]
	private float Rot;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public static float RotCZ;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x528")]
	private float SmoothRot;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x530")]
	public Transform[] FoliageReactOnIt;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x538")]
	public GameObject Barrel;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x540")]
	public GameObject BushCircle;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x548")]
	public GameObject BushLine;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x550")]
	public GameObject[] Fol_Low;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x558")]
	public GameObject[] Fol_Mid;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x560")]
	public GameObject[] Fol_Big;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x568")]
	public GameObject[] Fol_Larg;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x570")]
	public GameObject[] Fol_Huge;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x578")]
	[SerializeField]
	public GameObject mainHero;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x580")]
	[SerializeField]
	private GameObject fraction;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x588")]
	[HideInInspector]
	public float HP_allay;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58C")]
	[HideInInspector]
	public float HP_enem;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static bool BoardingFinished;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static Skeleton[] AllEnemOrAllay;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static FoliageDestr[] AllFoliageDestr;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static ChestOpening[] AllChests;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x590")]
	public bool NoDeaths;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x591")]
	private bool isExitInitiated;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static bool ExploreSignal;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static NewEvent ExploreAnsver;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static bool QuestExploreSignal;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public static NewEvent QuestExploreAnsver;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static bool ArenaSignal;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public static NewEvent ArenaAnsver;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x598")]
	private AbstractExploreLogic exploreLogic;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public static Vector3 WasPersCoord;

	[Token(Token = "0x170000A8")]
	public List<EnemiesRankPrefabs> EnemiesTypes
	{
		[Token(Token = "0x60004EA")]
		[Address(RVA = "0x9C33C4", Offset = "0x9C33C4", VA = "0x9C33C4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004EB")]
		[Address(RVA = "0x9C33CC", Offset = "0x9C33CC", VA = "0x9C33CC")]
		set
		{
		}
	}

	[Token(Token = "0x170000A9")]
	public Text ArenaPointsText
	{
		[Token(Token = "0x60004EC")]
		[Address(RVA = "0x9C33DC", Offset = "0x9C33DC", VA = "0x9C33DC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004ED")]
		[Address(RVA = "0x9C33E4", Offset = "0x9C33E4", VA = "0x9C33E4")]
		set
		{
		}
	}

	[Token(Token = "0x170000AA")]
	public GameObject ArenaUI
	{
		[Token(Token = "0x60004EE")]
		[Address(RVA = "0x9C33F4", Offset = "0x9C33F4", VA = "0x9C33F4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004EF")]
		[Address(RVA = "0x9C33FC", Offset = "0x9C33FC", VA = "0x9C33FC")]
		set
		{
		}
	}

	[Token(Token = "0x170000AB")]
	public Text ArenaTimeLeftText
	{
		[Token(Token = "0x60004F0")]
		[Address(RVA = "0x9C340C", Offset = "0x9C340C", VA = "0x9C340C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004F1")]
		[Address(RVA = "0x9C3414", Offset = "0x9C3414", VA = "0x9C3414")]
		set
		{
		}
	}

	[Token(Token = "0x170000AC")]
	public List<EnemySettings> ArenaEnemyList
	{
		[Token(Token = "0x60004F2")]
		[Address(RVA = "0x9C3424", Offset = "0x9C3424", VA = "0x9C3424")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004F3")]
		[Address(RVA = "0x9C342C", Offset = "0x9C342C", VA = "0x9C342C")]
		set
		{
		}
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x9BC6E0", Offset = "0x9BC6E0", VA = "0x9BC6E0")]
	private void ShowCaptainSelectScreen()
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x9BCBFC", Offset = "0x9BCBFC", VA = "0x9BCBFC")]
	public void SwithPlayerToWoman()
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x9BCD04", Offset = "0x9BCD04", VA = "0x9BCD04")]
	public void SwithPlayerToMan()
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x9BCE08", Offset = "0x9BCE08", VA = "0x9BCE08")]
	private void SwitchCaptainAppereance()
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x9BC9F8", Offset = "0x9BC9F8", VA = "0x9BC9F8")]
	private void ShowPistols()
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x9BD358", Offset = "0x9BD358", VA = "0x9BD358")]
	private void CharacterControlls()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x9C1894", Offset = "0x9C1894", VA = "0x9C1894")]
	private void BackgroundMechanics()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x9C0CA0", Offset = "0x9C0CA0", VA = "0x9C0CA0")]
	private Vector3 GetShootOrigin()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x9C3044", Offset = "0x9C3044", VA = "0x9C3044")]
	public void EnaTotPow(bool Get = true)
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x9C343C", Offset = "0x9C343C", VA = "0x9C343C")]
	public void SetUISignal(int a)
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x9C0E24", Offset = "0x9C0E24", VA = "0x9C0E24")]
	public void SplashDamage(Vector3 coord, float radius, float Damage, bool Burn = false)
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x9C38F8", Offset = "0x9C38F8", VA = "0x9C38F8")]
	public void EquipToggle()
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x9BCEF0", Offset = "0x9BCEF0", VA = "0x9BCEF0")]
	public void SelectPistol(PistolData choose)
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x9C2BE4", Offset = "0x9C2BE4", VA = "0x9C2BE4")]
	public Vector3 SetZcoordTerra(Vector3 what, Terrain terr, float offset = 0f, bool CheckPirs = false)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x9C3CC0", Offset = "0x9C3CC0", VA = "0x9C3CC0")]
	private Vector3 CharacterMovementOnShip(Transform character, float offset)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x9C4874", Offset = "0x9C4874", VA = "0x9C4874")]
	public void SetZcoord(Transform what, float offset = 0f, bool CheckPirs = false)
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x9C2E78", Offset = "0x9C2E78", VA = "0x9C2E78")]
	public float SetZcoord(Vector3 what)
	{
		return default(float);
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x9C4CE8", Offset = "0x9C4CE8", VA = "0x9C4CE8")]
	private void HideAllIn_UI_LAND()
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x9C34A0", Offset = "0x9C34A0", VA = "0x9C34A0")]
	public void DamagePlayer(float Value, bool IsShoot = false, bool Ouch = true)
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x9C4EF8", Offset = "0x9C4EF8", VA = "0x9C4EF8")]
	public void OpenGates()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x9C517C", Offset = "0x9C517C", VA = "0x9C517C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x9C54FC", Offset = "0x9C54FC", VA = "0x9C54FC")]
	private void OnProfileLoaded(object obj)
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x9C4D84", Offset = "0x9C4D84", VA = "0x9C4D84")]
	public void RefreshForcesBar()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x9C558C", Offset = "0x9C558C", VA = "0x9C558C")]
	public void CheckBoardingFinish()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x9C6CC4", Offset = "0x9C6CC4", VA = "0x9C6CC4")]
	private void ActivateAbordageFinalPanel()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x9C7248", Offset = "0x9C7248", VA = "0x9C7248")]
	public void OnLanguageChanged()
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x9C7438", Offset = "0x9C7438", VA = "0x9C7438")]
	public void InitBoarding()
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x9C5B24", Offset = "0x9C5B24", VA = "0x9C5B24")]
	public void ExitBoarding(bool ChangeCamera = true, bool Victory = true)
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x9C96A4", Offset = "0x9C96A4", VA = "0x9C96A4")]
	public void sysExitDlcChina()
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x9CA048", Offset = "0x9CA048", VA = "0x9CA048")]
	public void ExitLandDLC()
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x9CA154", Offset = "0x9CA154", VA = "0x9CA154")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58849C", Offset = "0x58849C")]
	private IEnumerator WaitForUnloadDLC()
	{
		return null;
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x9CA1B0", Offset = "0x9CA1B0", VA = "0x9CA1B0")]
	private void ExitLandDlcChina()
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x9CA450", Offset = "0x9CA450", VA = "0x9CA450")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x588504", Offset = "0x588504")]
	private IEnumerator GoLandingChina()
	{
		return null;
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x9C9494", Offset = "0x9C9494", VA = "0x9C9494")]
	private void OnExit3rdPerson()
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x9CA4D0", Offset = "0x9CA4D0", VA = "0x9CA4D0")]
	public static void DestroySeaContent()
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x9CA828", Offset = "0x9CA828", VA = "0x9CA828")]
	private void Update()
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x9C93B8", Offset = "0x9C93B8", VA = "0x9C93B8")]
	private float GetShipHeight(int caseIndex)
	{
		return default(float);
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x9CD734", Offset = "0x9CD734", VA = "0x9CD734")]
	private void LandingTotemsLoad()
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x9CD7E0", Offset = "0x9CD7E0", VA = "0x9CD7E0")]
	private void LandingQuestLoad()
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x9CD88C", Offset = "0x9CD88C", VA = "0x9CD88C")]
	private void LandingArenaLoad()
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x9CD760", Offset = "0x9CD760", VA = "0x9CD760")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58856C", Offset = "0x58856C")]
	private IEnumerator GoLandingTotems()
	{
		return null;
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x9CD80C", Offset = "0x9CD80C", VA = "0x9CD80C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5885D4", Offset = "0x5885D4")]
	private IEnumerator GoLandingQuest()
	{
		return null;
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x9CD8B8", Offset = "0x9CD8B8", VA = "0x9CD8B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58863C", Offset = "0x58863C")]
	private IEnumerator GoLandingArena()
	{
		return null;
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x9CD938", Offset = "0x9CD938", VA = "0x9CD938")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5886A4", Offset = "0x5886A4")]
	private IEnumerator LoadLandingScene()
	{
		return null;
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x9CD9B8", Offset = "0x9CD9B8", VA = "0x9CD9B8")]
	private void LoadIslandScene()
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x9BC988", Offset = "0x9BC988", VA = "0x9BC988")]
	public void ResetCharacter()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x9CD9E4", Offset = "0x9CD9E4", VA = "0x9CD9E4")]
	public void ZoomDlcMap()
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x9CD9E8", Offset = "0x9CD9E8", VA = "0x9CD9E8")]
	public Explore()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x9CDB98", Offset = "0x9CDB98", VA = "0x9CDB98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58870C", Offset = "0x58870C")]
	private void <Update>b__283_0()
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x9CDC8C", Offset = "0x9CDC8C", VA = "0x9CDC8C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58871C", Offset = "0x58871C")]
	private void <Update>b__283_1()
	{
	}
}
[Token(Token = "0x20000F9")]
public enum ExploreLevelName
{
	[Token(Token = "0x400072B")]
	None = -1,
	[Token(Token = "0x400072C")]
	TheSealOfDeath = 0,
	[Token(Token = "0x400072D")]
	ThePirateCamp = 1,
	[Token(Token = "0x400072E")]
	TheFieryPaths = 2,
	[Token(Token = "0x400072F")]
	TheValleyOfDeath = 3,
	[Token(Token = "0x4000730")]
	SwordsAndPincers = 5,
	[Token(Token = "0x4000731")]
	TheForsakenTown = 6,
	[Token(Token = "0x4000732")]
	TheBesiegedTown = 7,
	[Token(Token = "0x4000733")]
	TheSecretFort = 8
}
[Token(Token = "0x20000FA")]
public class ExploreConsts
{
	[Token(Token = "0x4000734")]
	public const int BEACH_FOIL_LOW_MIN = 8;

	[Token(Token = "0x4000735")]
	public const int BEACH_FOIL_LOW_MAX = 17;

	[Token(Token = "0x4000736")]
	public const int BEACH_FOIL_MID_MIN = 6;

	[Token(Token = "0x4000737")]
	public const int BEACH_FOIL_MID_MAX = 10;

	[Token(Token = "0x4000738")]
	public const int PLATO_1_RUINS_MAX = 2;

	[Token(Token = "0x4000739")]
	public const int PLATO_1_FOIL_LOW_MIN = 8;

	[Token(Token = "0x400073A")]
	public const int PLATO_1_FOIL_LOW_MAX = 14;

	[Token(Token = "0x400073B")]
	public const int PLATO_1_FOIL_MID_MIN = 2;

	[Token(Token = "0x400073C")]
	public const int PLATO_1_FOIL_MID_MAX = 6;

	[Token(Token = "0x400073D")]
	public const int PLATO_1_FOIL_BIG_MIN = 1;

	[Token(Token = "0x400073E")]
	public const int PLATO_1_FOIL_BIG_MAX = 3;

	[Token(Token = "0x400073F")]
	public const int PLATO_1_FOIL_LARG_MIN = 3;

	[Token(Token = "0x4000740")]
	public const int PLATO_1_FOIL_LARG_MAX = 6;

	[Token(Token = "0x4000741")]
	public const int PLATO_1_2_FOIL_LOW_MIN = 2;

	[Token(Token = "0x4000742")]
	public const int PLATO_1_2_FOIL_LOW_MAX = 5;

	[Token(Token = "0x4000743")]
	public const int PLATO_1_2_FOIL_LARG_MIN = 0;

	[Token(Token = "0x4000744")]
	public const int PLATO_1_2_FOIL_LARG_MAX = 3;

	[Token(Token = "0x4000745")]
	public const int PLATO_2_RUINS_MAX = 2;

	[Token(Token = "0x4000746")]
	public const int PLATO_2_FOIL_LOW_MIN = 30;

	[Token(Token = "0x4000747")]
	public const int PLATO_2_FOIL_LOW_MAX = 40;

	[Token(Token = "0x4000748")]
	public const int PLATO_2_FOIL_MID_MIN = 20;

	[Token(Token = "0x4000749")]
	public const int PLATO_2_FOIL_MID_MAX = 27;

	[Token(Token = "0x400074A")]
	public const int PLATO_2_FOIL_BIG_MIN = 4;

	[Token(Token = "0x400074B")]
	public const int PLATO_2_FOIL_BIG_MAX = 6;

	[Token(Token = "0x400074C")]
	public const int PLATO_2_FOIL_LARG_MIN = 12;

	[Token(Token = "0x400074D")]
	public const int PLATO_2_FOIL_LARG_MAX = 18;

	[Token(Token = "0x400074E")]
	public const int PLATO_2_FOIL_HUGE_MIN = 1;

	[Token(Token = "0x400074F")]
	public const int PLATO_2_FOIL_HUGE_MAX = 4;

	[Token(Token = "0x4000750")]
	public const int PLATO_2_2_FOIL_LOW_MIN = 10;

	[Token(Token = "0x4000751")]
	public const int PLATO_2_2_FOIL_LOW_MAX = 15;

	[Token(Token = "0x4000752")]
	public const int PLATO_2_2_FOIL_MID_MIN = 4;

	[Token(Token = "0x4000753")]
	public const int PLATO_2_2_FOIL_MID_MAX = 8;

	[Token(Token = "0x4000754")]
	public const int PLATO_3_RUINS_MAX = 1;

	[Token(Token = "0x4000755")]
	public const int PLATO_3_2_RUINS_MAX = 3;

	[Token(Token = "0x4000756")]
	public const int PLATO_3_3_RUINS_MAX = 3;

	[Token(Token = "0x4000757")]
	public const int PLATO_3_FOIL_LOW_MIN = 12;

	[Token(Token = "0x4000758")]
	public const int PLATO_3_FOIL_LOW_MAX = 20;

	[Token(Token = "0x4000759")]
	public const int PLATO_3_FOIL_MID_MIN = 11;

	[Token(Token = "0x400075A")]
	public const int PLATO_3_FOIL_MID_MAX = 15;

	[Token(Token = "0x400075B")]
	public const int PLATO_3_FOIL_BIG_MIN = 2;

	[Token(Token = "0x400075C")]
	public const int PLATO_3_FOIL_BIG_MAX = 5;

	[Token(Token = "0x400075D")]
	public const int PLATO_3_FOIL_LARG_MIN = 5;

	[Token(Token = "0x400075E")]
	public const int PLATO_3_FOIL_LARG_MAX = 7;

	[Token(Token = "0x400075F")]
	public const int PLATO_3_FOIL_HUGE_MIN = 0;

	[Token(Token = "0x4000760")]
	public const int PLATO_3_FOIL_HUGE_MAX = 2;

	[Token(Token = "0x4000761")]
	public const int PLATO_3_2_FOIL_LOW_MIN = 4;

	[Token(Token = "0x4000762")]
	public const int PLATO_3_2_FOIL_LOW_MAX = 8;

	[Token(Token = "0x4000763")]
	public const int PLATO_3_2_FOIL_MID_MIN = 5;

	[Token(Token = "0x4000764")]
	public const int PLATO_3_2_FOIL_MID_MAX = 8;

	[Token(Token = "0x4000765")]
	public const int PLATO_3_2_FOIL_BIG_MIN = 0;

	[Token(Token = "0x4000766")]
	public const int PLATO_3_2_FOIL_BIG_MAX = 2;

	[Token(Token = "0x4000767")]
	public const int PLATO_3_2_FOIL_LARG_MIN = 0;

	[Token(Token = "0x4000768")]
	public const int PLATO_3_2_FOIL_LARG_MAX = 3;

	[Token(Token = "0x4000769")]
	public const int PLATO_3_3_FOIL_LOW_MIN = 4;

	[Token(Token = "0x400076A")]
	public const int PLATO_3_3_FOIL_LOW_MAX = 8;

	[Token(Token = "0x400076B")]
	public const int PLATO_3_3_FOIL_MID_MIN = 5;

	[Token(Token = "0x400076C")]
	public const int PLATO_3_3_FOIL_MID_MAX = 8;

	[Token(Token = "0x400076D")]
	public const int PLATO_3_3_FOIL_BIG_MIN = 0;

	[Token(Token = "0x400076E")]
	public const int PLATO_3_3_FOIL_BIG_MAX = 2;

	[Token(Token = "0x400076F")]
	public const int PLATO_3_3_FOIL_LARG_MIN = 0;

	[Token(Token = "0x4000770")]
	public const int PLATO_3_3_FOIL_LARG_MAX = 3;

	[Token(Token = "0x4000771")]
	public const int Q_PLATO_1_FOIL_LOW_MIN = 8;

	[Token(Token = "0x4000772")]
	public const int Q_PLATO_1_FOIL_LOW_MAX = 17;

	[Token(Token = "0x4000773")]
	public const int Q_PLATO_1_FOIL_MID_MIN = 6;

	[Token(Token = "0x4000774")]
	public const int Q_PLATO_1_FOIL_MID_MAX = 10;

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x103ECB8", Offset = "0x103ECB8", VA = "0x103ECB8")]
	public ExploreConsts()
	{
	}
}
[Token(Token = "0x20000FB")]
public class ExploreLandingArena : ExploreLandingQuest
{
	[Token(Token = "0x20000FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5785C4", Offset = "0x5785C4")]
	private sealed class <Prepare>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExploreLandingArena <>4__this;

		[Token(Token = "0x170000BA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000563")]
			[Address(RVA = "0x150B904", Offset = "0x150B904", VA = "0x150B904", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000565")]
			[Address(RVA = "0x150B94C", Offset = "0x150B94C", VA = "0x150B94C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000560")]
		[Address(RVA = "0x150AF64", Offset = "0x150AF64", VA = "0x150AF64")]
		[DebuggerHidden]
		public <Prepare>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000561")]
		[Address(RVA = "0x150AF90", Offset = "0x150AF90", VA = "0x150AF90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000562")]
		[Address(RVA = "0x150AF94", Offset = "0x150AF94", VA = "0x150AF94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000564")]
		[Address(RVA = "0x150B90C", Offset = "0x150B90C", VA = "0x150B90C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5785D4", Offset = "0x5785D4")]
	private sealed class <ShowLoseMessage>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExploreLandingArena <>4__this;

		[Token(Token = "0x170000BC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000569")]
			[Address(RVA = "0x150BC60", Offset = "0x150BC60", VA = "0x150BC60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600056B")]
			[Address(RVA = "0x150BCA8", Offset = "0x150BCA8", VA = "0x150BCA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000566")]
		[Address(RVA = "0x150B954", Offset = "0x150B954", VA = "0x150B954")]
		[DebuggerHidden]
		public <ShowLoseMessage>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000567")]
		[Address(RVA = "0x150B980", Offset = "0x150B980", VA = "0x150B980", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000568")]
		[Address(RVA = "0x150B984", Offset = "0x150B984", VA = "0x150B984", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600056A")]
		[Address(RVA = "0x150BC68", Offset = "0x150BC68", VA = "0x150BC68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5785E4", Offset = "0x5785E4")]
	private sealed class <WaitAfterWave>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExploreLandingArena <>4__this;

		[Token(Token = "0x170000BE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600056F")]
			[Address(RVA = "0x150BDC0", Offset = "0x150BDC0", VA = "0x150BDC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000571")]
			[Address(RVA = "0x150BE08", Offset = "0x150BE08", VA = "0x150BE08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600056C")]
		[Address(RVA = "0x150BCB0", Offset = "0x150BCB0", VA = "0x150BCB0")]
		[DebuggerHidden]
		public <WaitAfterWave>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x600056D")]
		[Address(RVA = "0x150BCDC", Offset = "0x150BCDC", VA = "0x150BCDC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600056E")]
		[Address(RVA = "0x150BCE0", Offset = "0x150BCE0", VA = "0x150BCE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000570")]
		[Address(RVA = "0x150BDC8", Offset = "0x150BDC8", VA = "0x150BDC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int waveNumber;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int pointsTotal;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly int incPointsPerWave;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly int checkPointWaves;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool deathAnimationStarted;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool pauseBetweenWaves;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float pauseDuration;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ArenaVariableStore arenaVariableStore;

	[Token(Token = "0x170000B9")]
	public static int PointsTotal
	{
		[Token(Token = "0x6000543")]
		[Address(RVA = "0x103ECC0", Offset = "0x103ECC0", VA = "0x103ECC0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000544")]
		[Address(RVA = "0x103ED24", Offset = "0x103ED24", VA = "0x103ED24")]
		set
		{
		}
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x103ED94", Offset = "0x103ED94", VA = "0x103ED94", Slot = "5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58890C", Offset = "0x58890C")]
	public override IEnumerator Prepare(TerrianIniter currentIsland_)
	{
		return null;
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x103EE14", Offset = "0x103EE14", VA = "0x103EE14", Slot = "6")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x103EEC8", Offset = "0x103EEC8", VA = "0x103EEC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x588974", Offset = "0x588974")]
	private IEnumerator ShowLoseMessage()
	{
		return null;
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x103EF48", Offset = "0x103EF48", VA = "0x103EF48")]
	private void GiveReward()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x103F270", Offset = "0x103F270", VA = "0x103F270")]
	private void DisablePause()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x103F2D4", Offset = "0x103F2D4", VA = "0x103F2D4")]
	private void GetRewardChoosen()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x103F38C", Offset = "0x103F38C", VA = "0x103F38C")]
	private void ExitArena()
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x103F50C", Offset = "0x103F50C", VA = "0x103F50C", Slot = "8")]
	protected override void QuestsUpdate()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x103FF7C", Offset = "0x103FF7C", VA = "0x103FF7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5889DC", Offset = "0x5889DC")]
	private IEnumerator WaitAfterWave()
	{
		return null;
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x1040CAC", Offset = "0x1040CAC", VA = "0x1040CAC")]
	protected void LandQuestShowMultiChoiceWindow(LandTaskCondition task)
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x1041320", Offset = "0x1041320", VA = "0x1041320")]
	private string TextModify(string task, params string[] args)
	{
		return null;
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x1040CA8", Offset = "0x1040CA8", VA = "0x1040CA8")]
	protected void LandQuestArenaWave(LandTaskCondition task)
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x10415A0", Offset = "0x10415A0", VA = "0x10415A0", Slot = "11")]
	protected override void LandQuestNextStep(int step)
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x1041678", Offset = "0x1041678", VA = "0x1041678", Slot = "12")]
	protected override void LandQuestNextStep()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x10417E4", Offset = "0x10417E4", VA = "0x10417E4", Slot = "9")]
	protected override void LandQuestAgroEnemies()
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x1041868", Offset = "0x1041868", VA = "0x1041868", Slot = "10")]
	protected override void LandQuestSpounEnemy(LandTaskCondition task)
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x1041CC4", Offset = "0x1041CC4", VA = "0x1041CC4", Slot = "13")]
	protected override void OnMultiChoiceFirstChoiceBtn()
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x104207C", Offset = "0x104207C", VA = "0x104207C", Slot = "14")]
	protected override void OnMultiChoiceSecondChioceBtn()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x1041458", Offset = "0x1041458", VA = "0x1041458")]
	private void LandQuestSpounForArena(LandTaskCondition task)
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x1042428", Offset = "0x1042428", VA = "0x1042428")]
	private void LandQuestSpounWave(LandTaskCondition task)
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x1042828", Offset = "0x1042828", VA = "0x1042828")]
	private List<int> LandQuestGetMaxUnitRang(int pointsForWave)
	{
		return null;
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x10411E0", Offset = "0x10411E0", VA = "0x10411E0")]
	private void ArenaEndWave(LandTaskCondition task)
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x1042990", Offset = "0x1042990", VA = "0x1042990")]
	private void AddPoints()
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x1041298", Offset = "0x1041298", VA = "0x1041298")]
	public static int GetPointsForWave(int wave)
	{
		return default(int);
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x103F014", Offset = "0x103F014", VA = "0x103F014")]
	public static int GetPoints()
	{
		return default(int);
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x1042AC4", Offset = "0x1042AC4", VA = "0x1042AC4")]
	public ExploreLandingArena()
	{
	}
}
[Token(Token = "0x20000FF")]
public class ExploreLandingChina : AbstractExploreLogic
{
	[Token(Token = "0x2000100")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5785F4", Offset = "0x5785F4")]
	private sealed class <Prepare>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExploreLandingChina <>4__this;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TerrianIniter currentIsland_;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TerrianIniterDet <initerDetail>5__2;

		[Token(Token = "0x170000C0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600057A")]
			[Address(RVA = "0x150C924", Offset = "0x150C924", VA = "0x150C924", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600057C")]
			[Address(RVA = "0x150C96C", Offset = "0x150C96C", VA = "0x150C96C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000577")]
		[Address(RVA = "0x150BE10", Offset = "0x150BE10", VA = "0x150BE10")]
		[DebuggerHidden]
		public <Prepare>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000578")]
		[Address(RVA = "0x150BE3C", Offset = "0x150BE3C", VA = "0x150BE3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000579")]
		[Address(RVA = "0x150BE40", Offset = "0x150BE40", VA = "0x150BE40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600057B")]
		[Address(RVA = "0x150C92C", Offset = "0x150C92C", VA = "0x150C92C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Explore explore;

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x1042C94", Offset = "0x1042C94", VA = "0x1042C94", Slot = "4")]
	public override GameObject GetMainLand()
	{
		return null;
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x1042C9C", Offset = "0x1042C9C", VA = "0x1042C9C", Slot = "5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x588B34", Offset = "0x588B34")]
	public override IEnumerator Prepare(TerrianIniter currentIsland_)
	{
		return null;
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x1042D30", Offset = "0x1042D30", VA = "0x1042D30", Slot = "6")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x1042D34", Offset = "0x1042D34", VA = "0x1042D34", Slot = "7")]
	public override void UpdateBackgroundMechanics()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x1042D38", Offset = "0x1042D38", VA = "0x1042D38")]
	public ExploreLandingChina()
	{
	}
}
[Token(Token = "0x2000101")]
public class ExploreLandingQuest : AbstractExploreLogic
{
	[Token(Token = "0x2000102")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578604", Offset = "0x578604")]
	private sealed class <Prepare>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExploreLandingQuest <>4__this;

		[Token(Token = "0x170000C2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600059C")]
			[Address(RVA = "0x150D340", Offset = "0x150D340", VA = "0x150D340", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600059E")]
			[Address(RVA = "0x150D388", Offset = "0x150D388", VA = "0x150D388", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000599")]
		[Address(RVA = "0x150C974", Offset = "0x150C974", VA = "0x150C974")]
		[DebuggerHidden]
		public <Prepare>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600059A")]
		[Address(RVA = "0x150C9A0", Offset = "0x150C9A0", VA = "0x150C9A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600059B")]
		[Address(RVA = "0x150C9A4", Offset = "0x150C9A4", VA = "0x150C9A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600059D")]
		[Address(RVA = "0x150D348", Offset = "0x150D348", VA = "0x150D348", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Explore explore;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject mainland;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform fire_camp;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform escaper;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject[] new_azt;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int[] levelsForScaling;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] scaling;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] unitCost;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float timerWaitLandQuest;

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x1042D40", Offset = "0x1042D40", VA = "0x1042D40", Slot = "4")]
	public override GameObject GetMainLand()
	{
		return null;
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x1042D48", Offset = "0x1042D48", VA = "0x1042D48", Slot = "5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x588BEC", Offset = "0x588BEC")]
	public override IEnumerator Prepare(TerrianIniter currentIsland_)
	{
		return null;
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x1042DC8", Offset = "0x1042DC8", VA = "0x1042DC8", Slot = "6")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x1043088", Offset = "0x1043088", VA = "0x1043088", Slot = "7")]
	public override void UpdateBackgroundMechanics()
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x104308C", Offset = "0x104308C", VA = "0x104308C", Slot = "8")]
	protected virtual void QuestsUpdate()
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x1040BD8", Offset = "0x1040BD8", VA = "0x1040BD8")]
	protected void LandQuestWaitTime(LandTaskCondition task)
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x1040B34", Offset = "0x1040B34", VA = "0x1040B34")]
	protected void LandQuestHealPlayer(LandTaskCondition task)
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x1043D14", Offset = "0x1043D14", VA = "0x1043D14")]
	protected void LandQuestIncBattleLvl(LandTaskCondition task)
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x103FAE0", Offset = "0x103FAE0", VA = "0x103FAE0")]
	protected void LandQuestMessage(LandTaskCondition task)
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x1043938", Offset = "0x1043938", VA = "0x1043938")]
	protected void LandQuestShowMultiChoiceWindkw(LandTaskCondition task)
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x1043E28", Offset = "0x1043E28", VA = "0x1043E28", Slot = "9")]
	protected virtual void LandQuestAgroEnemies()
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x103FC54", Offset = "0x103FC54", VA = "0x103FC54")]
	protected void LandQuestVisitPoint(LandTaskCondition task)
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x10435AC", Offset = "0x10435AC", VA = "0x10435AC")]
	protected void LandQuestDefeatEnemies()
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x103FDB4", Offset = "0x103FDB4", VA = "0x103FDB4")]
	protected bool CheckForEnemies()
	{
		return default(bool);
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x103FFFC", Offset = "0x103FFFC", VA = "0x103FFFC")]
	protected void LandQuestBranchingToDifOptions(List<OptionsForTask> options)
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x1043EAC", Offset = "0x1043EAC", VA = "0x1043EAC", Slot = "10")]
	protected virtual void LandQuestSpounEnemy(LandTaskCondition task)
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x10435E8", Offset = "0x10435E8", VA = "0x10435E8")]
	protected void LandQuestSpecialSpount(LandTaskCondition task)
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x10406AC", Offset = "0x10406AC", VA = "0x10406AC")]
	protected void LandQuestAddItem(LandTaskCondition task)
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x104106C", Offset = "0x104106C", VA = "0x104106C")]
	protected void LandQuestKillEnemies()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x10441D4", Offset = "0x10441D4", VA = "0x10441D4")]
	protected void OnAcceptBtnMessageClick()
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x1044258", Offset = "0x1044258", VA = "0x1044258", Slot = "11")]
	protected virtual void LandQuestNextStep(int step)
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x1044330", Offset = "0x1044330", VA = "0x1044330", Slot = "12")]
	protected virtual void LandQuestNextStep()
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x104449C", Offset = "0x104449C", VA = "0x104449C")]
	private void InstantiateTree(GameObject tree, Vector3 position, Quaternion rotation, Transform root, float scale)
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x10445C4", Offset = "0x10445C4", VA = "0x10445C4")]
	private void GenerateFoliage(int minBarel = 1, int MaxBarel = 3)
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x1047550", Offset = "0x1047550", VA = "0x1047550", Slot = "13")]
	protected virtual void OnMultiChoiceFirstChoiceBtn()
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x10478F8", Offset = "0x10478F8", VA = "0x10478F8", Slot = "14")]
	protected virtual void OnMultiChoiceSecondChioceBtn()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x1047CA4", Offset = "0x1047CA4", VA = "0x1047CA4", Slot = "15")]
	protected virtual void OnMultiChoiceThirdChioceBtn()
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x1042AD0", Offset = "0x1042AD0", VA = "0x1042AD0")]
	public ExploreLandingQuest()
	{
	}
}
[Token(Token = "0x2000103")]
public class ExploreLandingTotems : AbstractExploreLogic
{
	[Token(Token = "0x2000104")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578614", Offset = "0x578614")]
	private sealed class <Prepare>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExploreLandingTotems <>4__this;

		[Token(Token = "0x170000C4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005AA")]
			[Address(RVA = "0x15108D8", Offset = "0x15108D8", VA = "0x15108D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005AC")]
			[Address(RVA = "0x1510920", Offset = "0x1510920", VA = "0x1510920", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005A7")]
		[Address(RVA = "0x150D390", Offset = "0x150D390", VA = "0x150D390")]
		[DebuggerHidden]
		public <Prepare>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60005A8")]
		[Address(RVA = "0x150D3BC", Offset = "0x150D3BC", VA = "0x150D3BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005A9")]
		[Address(RVA = "0x150D3C0", Offset = "0x150D3C0", VA = "0x150D3C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005AB")]
		[Address(RVA = "0x15108E0", Offset = "0x15108E0", VA = "0x15108E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Explore explore;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject mainland;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform fire_camp;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform tot_spoun1;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform tot_spoun2;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform escaper;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private FireTrail[] temp_array;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float fort_shoot_us_timer;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float fort_shoot_us_sub_timer;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int fort_shoot_us_count;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int tot_destr_step_l;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int tot_destr_step_r;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float timer_check_win;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject[] new_azt;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject DoorOpenAreaInited;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private TotemsMissionAdditionalData additionalData;

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x1048050", Offset = "0x1048050", VA = "0x1048050", Slot = "4")]
	public override GameObject GetMainLand()
	{
		return null;
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x1048058", Offset = "0x1048058", VA = "0x1048058", Slot = "5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x588CA4", Offset = "0x588CA4")]
	public override IEnumerator Prepare(TerrianIniter currentIsland_)
	{
		return null;
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x10480D8", Offset = "0x10480D8", VA = "0x10480D8", Slot = "6")]
	public override void Update()
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x104C2C8", Offset = "0x104C2C8", VA = "0x104C2C8", Slot = "7")]
	public override void UpdateBackgroundMechanics()
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x104C93C", Offset = "0x104C93C", VA = "0x104C93C")]
	private bool CheckInAztec(Vector3 coord)
	{
		return default(bool);
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x104CB54", Offset = "0x104CB54", VA = "0x104CB54")]
	private void InstantiateTree(GameObject tree, Vector3 position, Quaternion rotation, Transform root, float scale)
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x104CC7C", Offset = "0x104CC7C", VA = "0x104CC7C")]
	private void GenerateFoliage(int mintrp = 0, int maxtrp = 0, int minBarel = 1, int MaxBarel = 3)
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x10518C0", Offset = "0x10518C0", VA = "0x10518C0")]
	public ExploreLandingTotems()
	{
	}
}
[Token(Token = "0x2000105")]
public class LandShoot : MonoBehaviour
{
	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timer;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool FromFort;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool shoot;

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x1517228", Offset = "0x1517228", VA = "0x1517228")]
	private void Start()
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x151722C", Offset = "0x151722C", VA = "0x151722C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x1517C5C", Offset = "0x1517C5C", VA = "0x1517C5C")]
	public LandShoot()
	{
	}
}
[Token(Token = "0x2000106")]
public class Foliage : MonoBehaviour
{
	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float WindPower0to1;

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x7B7D38", Offset = "0x7B7D38", VA = "0x7B7D38")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x7B7DA4", Offset = "0x7B7DA4", VA = "0x7B7DA4")]
	public Foliage()
	{
	}
}
[Token(Token = "0x2000107")]
public class AditionalCanons : MonoBehaviour
{
	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool FrontCanons;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform MyShootPoints;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Telegraph MyTeleg;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Ship MyShip;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float Reload;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float PrecisProc;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int shoots;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float SeconsShoot;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Ship TargetLinkSeconShoot;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool isDisabledAdditionalCannons;

	[Token(Token = "0x170000C6")]
	public bool isFrontCannons
	{
		[Token(Token = "0x60005B2")]
		[Address(RVA = "0x7E1708", Offset = "0x7E1708", VA = "0x7E1708")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x7E1710", Offset = "0x7E1710", VA = "0x7E1710")]
	private void Start()
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x7E1778", Offset = "0x7E1778", VA = "0x7E1778")]
	private void Update()
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x7E17D8", Offset = "0x7E17D8", VA = "0x7E17D8")]
	private void UpdateTelegraph()
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x7E1DE8", Offset = "0x7E1DE8", VA = "0x7E1DE8")]
	private void UpdateShots()
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x7E2690", Offset = "0x7E2690", VA = "0x7E2690")]
	public AditionalCanons()
	{
	}
}
[Token(Token = "0x2000108")]
public class BoneFly : MonoBehaviour
{
	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Floor;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 Fly;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int Bounces;

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x7EA1BC", Offset = "0x7EA1BC", VA = "0x7EA1BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x7EA238", Offset = "0x7EA238", VA = "0x7EA238")]
	private void Update()
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x7EA3E4", Offset = "0x7EA3E4", VA = "0x7EA3E4")]
	public BoneFly()
	{
	}
}
[Token(Token = "0x2000109")]
public class IK_hand : MonoBehaviour
{
	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator mySelf;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float WeightIK;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform targ;

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x1562C70", Offset = "0x1562C70", VA = "0x1562C70")]
	private void Start()
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x1562CD4", Offset = "0x1562CD4", VA = "0x1562CD4")]
	private void OnAnimatorIK()
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x1562F64", Offset = "0x1562F64", VA = "0x1562F64")]
	public IK_hand()
	{
	}
}
[Token(Token = "0x200010A")]
public class MyLOD : MonoBehaviour
{
	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float LOD_jump;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject NotLOLDED;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer BBoard;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshRenderer GetFadeInMtrl;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float oldCutoffMesh;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float oldCutoffBillboard;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material FadeIn;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material FadeOut;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MaterialPropertyBlock fadeInProps;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private MaterialPropertyBlock fadeOutProps;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float cutoff;

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x15ABB6C", Offset = "0x15ABB6C", VA = "0x15ABB6C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x15ABC04", Offset = "0x15ABC04", VA = "0x15ABC04")]
	public void CallUpdate()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x15ABF84", Offset = "0x15ABF84", VA = "0x15ABF84")]
	public MyLOD()
	{
	}
}
[Serializable]
[Token(Token = "0x200010B")]
public class PistolData
{
	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private string id;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int damage;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private int reload;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int shoots;

	[Token(Token = "0x170000C7")]
	public string Id
	{
		[Token(Token = "0x60005C3")]
		[Address(RVA = "0x15F0498", Offset = "0x15F0498", VA = "0x15F0498")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C8")]
	public int Damage
	{
		[Token(Token = "0x60005C4")]
		[Address(RVA = "0x15F04A0", Offset = "0x15F04A0", VA = "0x15F04A0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000C9")]
	public int Reload
	{
		[Token(Token = "0x60005C5")]
		[Address(RVA = "0x15F04A8", Offset = "0x15F04A8", VA = "0x15F04A8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000CA")]
	public int Shoots
	{
		[Token(Token = "0x60005C6")]
		[Address(RVA = "0x15F04B0", Offset = "0x15F04B0", VA = "0x15F04B0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000CB")]
	public Sprite Icon
	{
		[Token(Token = "0x60005C7")]
		[Address(RVA = "0x15F04B8", Offset = "0x15F04B8", VA = "0x15F04B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x15F05C4", Offset = "0x15F05C4", VA = "0x15F05C4")]
	public PistolData()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x15F05CC", Offset = "0x15F05CC", VA = "0x15F05CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x588D5C", Offset = "0x588D5C")]
	private bool <get_Icon>b__13_0(Tovar t)
	{
		return default(bool);
	}
}
[Token(Token = "0x200010C")]
public class Skeleton : MonoBehaviour
{
	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool AutoSpouned;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool IsCrabe;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource CrabeDeathSound;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool DontMove;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int Rank;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ImOnlyWalk;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float StuckTimer;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float UnStuckTimer;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool UnStuckDirection;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 prevCrd;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Rigidbody MyRigid;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool CanUseBlock;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int BlockChance;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool FastReload;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int Shoots;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float DamageAction;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float BlockAction;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public SpriteRenderer UnityHighlight;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool Allay;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform NearestTargArg;

	[Token(Token = "0x40007E2")]
	private const float Scaler = 0.238f;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool HumanMode;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ParticleSystem BlockSparks;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float Shoot;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float ShootAIM;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ParticleSystem ShootPFX;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject[] OldCloth;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject[] Bones;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Animator MyAnim;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float footstepFreq;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float IdleSnd;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int ImStandWalkRun;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float HP;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float Agranimation;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float AttackPrepear;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float Victory;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float Attack;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float dmgBuff;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float DamageItFromPlayer;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool HatPiuPiu;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float ArgTimer;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private int Z;

	[Token(Token = "0x170000CC")]
	public float DmgBuff
	{
		[Token(Token = "0x60005CE")]
		[Address(RVA = "0x167BC48", Offset = "0x167BC48", VA = "0x167BC48")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005CF")]
		[Address(RVA = "0x167BC50", Offset = "0x167BC50", VA = "0x167BC50")]
		set
		{
		}
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x1679514", Offset = "0x1679514", VA = "0x1679514")]
	public void AgrNearest()
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x1679860", Offset = "0x1679860", VA = "0x1679860")]
	private void Start()
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x16799F0", Offset = "0x16799F0", VA = "0x16799F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x1679EE0", Offset = "0x1679EE0", VA = "0x1679EE0")]
	public void DamageIt(float Value, bool IsShoot, bool SwordSound, Transform FromWho, bool Ouch = true)
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x167BC58", Offset = "0x167BC58", VA = "0x167BC58")]
	private void Update()
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x167FA4C", Offset = "0x167FA4C", VA = "0x167FA4C")]
	public Skeleton()
	{
	}
}
[Token(Token = "0x200010D")]
public class Totem : MonoBehaviour
{
	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] Childs;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3[] LocaPosStart;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3[] LocaPosDistr;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool ProcIT;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool ProcITasMainMenu;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnabledByQwest;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float DistortionWave1;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource MyGul;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float Vol;

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x1668100", Offset = "0x1668100", VA = "0x1668100")]
	private void Start()
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x16681A8", Offset = "0x16681A8", VA = "0x16681A8")]
	private void Update()
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x166863C", Offset = "0x166863C", VA = "0x166863C")]
	public Totem()
	{
	}
}
[Token(Token = "0x200010E")]
public class TotemsMissionAdditionalData : MonoBehaviour
{
	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] CentralBG;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] LevelTYPE;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] HousesCheckAsAztectNoFoliage;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] Bridges;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] BridgesBroken;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] BridgesColiders;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] TotFxL;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject[] TotFxR;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Totem TotLinkL;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Totem TotLinkR;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject[] FortDestr;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject[] FortUnDestr;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject[] Azt_complx;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject Trap;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject TrapMud;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject TrapCirc;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject TrapCircMud;

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x166864C", Offset = "0x166864C", VA = "0x166864C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x1668ACC", Offset = "0x1668ACC", VA = "0x1668ACC")]
	private void SetBridgeEnabled(int index, bool isEnabled)
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x1668C1C", Offset = "0x1668C1C", VA = "0x1668C1C")]
	public TotemsMissionAdditionalData()
	{
	}
}
[Token(Token = "0x200010F")]
public class Trap : MonoBehaviour
{
	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool Pila;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool Actvated;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float UnerGround;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float UnerGroundPila;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float UnerGroundPilaX;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float PilaDisabler;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float TickTock;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Pfx1;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject Pfx2;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject Pfx3;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject Pfx4;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject Pfx5;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform Knifes;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform _Pila;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float PilaDmgFreq;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool PilaDmgPlayerOnce;

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x158D5EC", Offset = "0x158D5EC", VA = "0x158D5EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x158D6B4", Offset = "0x158D6B4", VA = "0x158D6B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x158E0F4", Offset = "0x158E0F4", VA = "0x158E0F4")]
	public Trap()
	{
	}
}
[Token(Token = "0x2000110")]
public class GeneralAdvancedTechniques : MonoBehaviour
{
	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject avatarRecursive;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject avatar2dRecursive;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RectTransform wingPersonPanel;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RectTransform textField;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject avatarMove;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform[] movePts;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] avatarSpeed;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject[] avatarSpeed2;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3[] circleSm;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] circleLrg;

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x7F09E8", Offset = "0x7F09E8", VA = "0x7F09E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x7F0DDC", Offset = "0x7F0DDC", VA = "0x7F0DDC")]
	public GeneralAdvancedTechniques()
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x7F1458", Offset = "0x7F1458", VA = "0x7F1458")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x588D6C", Offset = "0x588D6C")]
	private void <Start>b__10_0(float val)
	{
	}
}
[Token(Token = "0x2000111")]
public class GeneralBasicCS : MonoBehaviour
{
	[Token(Token = "0x2000112")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578624", Offset = "0x578624")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject rotator;

		[Token(Token = "0x60005E2")]
		[Address(RVA = "0x15117B8", Offset = "0x15117B8", VA = "0x15117B8")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x60005E3")]
		[Address(RVA = "0x15117C0", Offset = "0x15117C0", VA = "0x15117C0")]
		internal void <advancedExamples>b__1()
		{
		}

		[Token(Token = "0x60005E4")]
		[Address(RVA = "0x151186C", Offset = "0x151186C", VA = "0x151186C")]
		internal void <advancedExamples>b__2()
		{
		}
	}

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefabAvatar;

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x7F15BC", Offset = "0x7F15BC", VA = "0x7F15BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x7F18B8", Offset = "0x7F18B8", VA = "0x7F18B8")]
	private void advancedExamples()
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x7F19B0", Offset = "0x7F19B0", VA = "0x7F19B0")]
	public GeneralBasicCS()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x7F19B8", Offset = "0x7F19B8", VA = "0x7F19B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x588D7C", Offset = "0x588D7C")]
	private void <advancedExamples>b__2_0()
	{
	}
}
[Token(Token = "0x2000113")]
public class GeneralBasics2dCS : MonoBehaviour
{
	[Token(Token = "0x2000114")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578634", Offset = "0x578634")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject rotator;

		[Token(Token = "0x60005EA")]
		[Address(RVA = "0x15118DC", Offset = "0x15118DC", VA = "0x15118DC")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x60005EB")]
		[Address(RVA = "0x15118E4", Offset = "0x15118E4", VA = "0x15118E4")]
		internal void <advancedExamples>b__1()
		{
		}

		[Token(Token = "0x60005EC")]
		[Address(RVA = "0x1511990", Offset = "0x1511990", VA = "0x1511990")]
		internal void <advancedExamples>b__2()
		{
		}
	}

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D dudeTexture;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject prefabParticles;

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x7F1F78", Offset = "0x7F1F78", VA = "0x7F1F78")]
	private void Start()
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x7F22C0", Offset = "0x7F22C0", VA = "0x7F22C0")]
	private GameObject createSpriteDude(string name, Vector3 pos, bool hasParticles = true)
	{
		return null;
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x7F259C", Offset = "0x7F259C", VA = "0x7F259C")]
	private void advancedExamples()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x7F2694", Offset = "0x7F2694", VA = "0x7F2694")]
	public GeneralBasics2dCS()
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x7F269C", Offset = "0x7F269C", VA = "0x7F269C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x588D8C", Offset = "0x588D8C")]
	private void <advancedExamples>b__4_0()
	{
	}
}
[Token(Token = "0x2000115")]
public class GeneralCameraShake : MonoBehaviour
{
	[Token(Token = "0x2000116")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578644", Offset = "0x578644")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GeneralCameraShake <>4__this;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float height;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action <>9__1;

		[Token(Token = "0x60005F0")]
		[Address(RVA = "0x1511A00", Offset = "0x1511A00", VA = "0x1511A00")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x60005F1")]
		[Address(RVA = "0x1511A08", Offset = "0x1511A08", VA = "0x1511A08")]
		internal void <bigGuyJump>b__0()
		{
		}

		[Token(Token = "0x60005F2")]
		[Address(RVA = "0x1511B18", Offset = "0x1511B18", VA = "0x1511B18")]
		internal void <bigGuyJump>b__1()
		{
		}
	}

	[Token(Token = "0x2000117")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578654", Offset = "0x578654")]
	private sealed class <>c__DisplayClass4_1
	{
		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LTDescr shakeTween;

		[Token(Token = "0x60005F3")]
		[Address(RVA = "0x1511F8C", Offset = "0x1511F8C", VA = "0x1511F8C")]
		public <>c__DisplayClass4_1()
		{
		}

		[Token(Token = "0x60005F4")]
		[Address(RVA = "0x1511F94", Offset = "0x1511F94", VA = "0x1511F94")]
		internal void <bigGuyJump>b__2(float val)
		{
		}
	}

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject avatarBig;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float jumpIter;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioClip boomAudioClip;

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x7F2C20", Offset = "0x7F2C20", VA = "0x7F2C20")]
	private void Start()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x7F3014", Offset = "0x7F3014", VA = "0x7F3014")]
	private void bigGuyJump()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x7F318C", Offset = "0x7F318C", VA = "0x7F318C")]
	public GeneralCameraShake()
	{
	}
}
[Token(Token = "0x2000118")]
public class GeneralEasingTypes : MonoBehaviour
{
	[Token(Token = "0x2000119")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578664", Offset = "0x578664")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform obj1;

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float obj1val;

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GeneralEasingTypes <>4__this;

		[Token(Token = "0x60005F9")]
		[Address(RVA = "0x1511FE0", Offset = "0x1511FE0", VA = "0x1511FE0")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x60005FA")]
		[Address(RVA = "0x1511FE8", Offset = "0x1511FE8", VA = "0x1511FE8")]
		internal void <demoEaseTypes>b__0(float val)
		{
		}
	}

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lineDrawScale;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve animationCurve;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string[] easeTypes;

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x7F319C", Offset = "0x7F319C", VA = "0x7F319C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x7F31A0", Offset = "0x7F31A0", VA = "0x7F31A0")]
	private void demoEaseTypes()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x7F35C0", Offset = "0x7F35C0", VA = "0x7F35C0")]
	private void resetLines()
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x7F368C", Offset = "0x7F368C", VA = "0x7F368C")]
	public GeneralEasingTypes()
	{
	}
}
[Token(Token = "0x200011A")]
public class GeneralEventsListenersCS : MonoBehaviour
{
	[Token(Token = "0x200011B")]
	public enum MyEvents
	{
		[Token(Token = "0x4000843")]
		CHANGE_COLOR,
		[Token(Token = "0x4000844")]
		JUMP,
		[Token(Token = "0x4000845")]
		LENGTH
	}

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 towardsRotation;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float turnForLength;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float turnForIter;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Color fromColor;

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x7F43B8", Offset = "0x7F43B8", VA = "0x7F43B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x7F447C", Offset = "0x7F447C", VA = "0x7F447C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x7F45C4", Offset = "0x7F45C4", VA = "0x7F45C4")]
	private void jumpUp(LTEvent e)
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x7F464C", Offset = "0x7F464C", VA = "0x7F464C")]
	private void changeColor(LTEvent e)
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x7F48C0", Offset = "0x7F48C0", VA = "0x7F48C0")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x7F4924", Offset = "0x7F4924", VA = "0x7F4924")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x7F4980", Offset = "0x7F4980", VA = "0x7F4980")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x7F4ADC", Offset = "0x7F4ADC", VA = "0x7F4ADC")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x7F4B94", Offset = "0x7F4B94", VA = "0x7F4B94")]
	public GeneralEventsListenersCS()
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x7F4BA4", Offset = "0x7F4BA4", VA = "0x7F4BA4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x588D9C", Offset = "0x588D9C")]
	private void <changeColor>b__8_0(Color col)
	{
	}
}
[Token(Token = "0x200011C")]
public class GeneralSequencer : MonoBehaviour
{
	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject avatar1;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject star;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject dustCloudPrefab;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speedScale;

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x7F4C44", Offset = "0x7F4C44", VA = "0x7F4C44")]
	public void Start()
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x7F4E74", Offset = "0x7F4E74", VA = "0x7F4E74")]
	public GeneralSequencer()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x7F4E84", Offset = "0x7F4E84", VA = "0x7F4E84")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x588DAC", Offset = "0x588DAC")]
	private void <Start>b__4_0()
	{
	}
}
[Token(Token = "0x200011D")]
public class GeneralSimpleUiCS : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200011E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578674", Offset = "0x578674")]
	private sealed class <>c
	{
		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<float> <>9__1_1;

		[Token(Token = "0x600060E")]
		[Address(RVA = "0x15120DC", Offset = "0x15120DC", VA = "0x15120DC")]
		public <>c()
		{
		}

		[Token(Token = "0x600060F")]
		[Address(RVA = "0x15120E4", Offset = "0x15120E4", VA = "0x15120E4")]
		internal void <Start>b__1_1(float volume)
		{
		}
	}

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform button;

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x7F5118", Offset = "0x7F5118", VA = "0x7F5118")]
	private void Start()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x7F5768", Offset = "0x7F5768", VA = "0x7F5768")]
	public GeneralSimpleUiCS()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x7F5770", Offset = "0x7F5770", VA = "0x7F5770")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x588DBC", Offset = "0x588DBC")]
	private void <Start>b__1_0(Vector2 val)
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x7F5790", Offset = "0x7F5790", VA = "0x7F5790")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x588DCC", Offset = "0x588DCC")]
	private void <Start>b__1_2(Vector3 val)
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x7F57E8", Offset = "0x7F57E8", VA = "0x7F57E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x588DDC", Offset = "0x588DDC")]
	private void <Start>b__1_3(Color val)
	{
	}
}
[Token(Token = "0x200011F")]
public class GeneralUISpaceCS : MonoBehaviour
{
	[Token(Token = "0x2000120")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578684", Offset = "0x578684")]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GeneralUISpaceCS <>4__this;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string origText;

		[Token(Token = "0x6000612")]
		[Address(RVA = "0x1512190", Offset = "0x1512190", VA = "0x1512190")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x6000613")]
		[Address(RVA = "0x1512198", Offset = "0x1512198", VA = "0x1512198")]
		internal void <Start>b__0(float val)
		{
		}
	}

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform mainWindow;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform mainParagraphText;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RectTransform mainTitleText;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RectTransform mainButton1;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RectTransform mainButton2;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform pauseRing1;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RectTransform pauseRing2;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public RectTransform pauseWindow;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RectTransform chatWindow;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RectTransform chatRect;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Sprite[] chatSprites;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RectTransform chatBar1;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public RectTransform chatBar2;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text chatText;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public RectTransform rawImageRect;

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x7F5940", Offset = "0x7F5940", VA = "0x7F5940")]
	private void Start()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x7F6154", Offset = "0x7F6154", VA = "0x7F6154")]
	public GeneralUISpaceCS()
	{
	}
}
[Token(Token = "0x2000121")]
public class PathBezier2d : MonoBehaviour
{
	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] cubes;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject dude1;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject dude2;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LTBezierPath visualizePath;

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x15EC054", Offset = "0x15EC054", VA = "0x15EC054")]
	private void Start()
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x15EC258", Offset = "0x15EC258", VA = "0x15EC258")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x15EC2A0", Offset = "0x15EC2A0", VA = "0x15EC2A0")]
	public PathBezier2d()
	{
	}
}
[Token(Token = "0x2000122")]
public class ExampleSpline : MonoBehaviour
{
	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] trans;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LTSpline spline;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject ltLogo;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject ltLogo2;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float iter;

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x9BBE70", Offset = "0x9BBE70", VA = "0x9BBE70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x9BC1C4", Offset = "0x9BC1C4", VA = "0x9BC1C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x9BC258", Offset = "0x9BC258", VA = "0x9BC258")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x9BC270", Offset = "0x9BC270", VA = "0x9BC270")]
	public ExampleSpline()
	{
	}
}
[Token(Token = "0x2000123")]
public class PathSpline2d : MonoBehaviour
{
	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] cubes;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject dude1;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject dude2;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LTSpline visualizePath;

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x15EC2A8", Offset = "0x15EC2A8", VA = "0x15EC2A8")]
	private void Start()
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x15EC504", Offset = "0x15EC504", VA = "0x15EC504")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x15EC54C", Offset = "0x15EC54C", VA = "0x15EC54C")]
	public PathSpline2d()
	{
	}
}
[Token(Token = "0x2000124")]
public class PathSplineEndlessCS : MonoBehaviour
{
	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject trackTrailRenderers;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject car;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject carInternal;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] cubes;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int cubesIter;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] trees;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int treesIter;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float randomIterWidth;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LTSpline track;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Vector3> trackPts;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int zIter;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float carIter;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float carAdd;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int trackMaxItems;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int trackIter;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float pushTrackAhead;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float randomIter;

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x15EC554", Offset = "0x15EC554", VA = "0x15EC554")]
	private void Start()
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x15EC9B4", Offset = "0x15EC9B4", VA = "0x15EC9B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x15ECFE8", Offset = "0x15ECFE8", VA = "0x15ECFE8")]
	private GameObject objectQueue(GameObject[] arr, int lastIter)
	{
		return null;
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x15EC680", Offset = "0x15EC680", VA = "0x15EC680")]
	private void addRandomTrackPoint()
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x15EC8BC", Offset = "0x15EC8BC", VA = "0x15EC8BC")]
	private void refreshSpline()
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x15ECBCC", Offset = "0x15ECBCC", VA = "0x15ECBCC")]
	private void playSwish()
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x15ED0D0", Offset = "0x15ED0D0", VA = "0x15ED0D0")]
	public PathSplineEndlessCS()
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x15ED174", Offset = "0x15ED174", VA = "0x15ED174")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x588DEC", Offset = "0x588DEC")]
	private void <Start>b__17_0(float val)
	{
	}
}
[Token(Token = "0x2000125")]
public class PathSplinePerformanceCS : MonoBehaviour
{
	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject trackTrailRenderers;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject car;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject carInternal;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float circleLength;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float randomRange;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int trackNodes;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float carSpeed;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float tracerSpeed;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LTSpline track;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int trackIter;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float carAdd;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float trackPosition;

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x15ED17C", Offset = "0x15ED17C", VA = "0x15ED17C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x15ED4A0", Offset = "0x15ED4A0", VA = "0x15ED4A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x15EDA24", Offset = "0x15EDA24", VA = "0x15EDA24")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x15ED608", Offset = "0x15ED608", VA = "0x15ED608")]
	private void playSwish()
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x15EDA60", Offset = "0x15EDA60", VA = "0x15EDA60")]
	public PathSplinePerformanceCS()
	{
	}
}
[Token(Token = "0x2000126")]
public class PathSplines : MonoBehaviour
{
	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] trans;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LTSpline cr;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject avatar1;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float iter;

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x15EE374", Offset = "0x15EE374", VA = "0x15EE374")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x15EE52C", Offset = "0x15EE52C", VA = "0x15EE52C")]
	private void Start()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x15EE66C", Offset = "0x15EE66C", VA = "0x15EE66C")]
	private void Update()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x15EE6C0", Offset = "0x15EE6C0", VA = "0x15EE6C0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x15EE718", Offset = "0x15EE718", VA = "0x15EE718")]
	public PathSplines()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x15EE720", Offset = "0x15EE720", VA = "0x15EE720")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x588DFC", Offset = "0x588DFC")]
	private void <Start>b__4_0()
	{
	}
}
[Token(Token = "0x2000127")]
public class PathSplineTrackCS : MonoBehaviour
{
	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject car;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject carInternal;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject trackTrailRenderers;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] trackOnePoints;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LTSpline track;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int trackIter;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float trackPosition;

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x15EDA90", Offset = "0x15EDA90", VA = "0x15EDA90")]
	private void Start()
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x15EDD20", Offset = "0x15EDD20", VA = "0x15EDD20")]
	private void Update()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x15EE2BC", Offset = "0x15EE2BC", VA = "0x15EE2BC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x15EDEA0", Offset = "0x15EDEA0", VA = "0x15EDEA0")]
	private void playSwish()
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x15EE364", Offset = "0x15EE364", VA = "0x15EE364")]
	public PathSplineTrackCS()
	{
	}
}
[Token(Token = "0x2000128")]
public class TestingAllCS : MonoBehaviour
{
	[Token(Token = "0x2000129")]
	public delegate void NextFunc();

	[Token(Token = "0x200012A")]
	public enum TimingType
	{
		[Token(Token = "0x40008A1")]
		SteadyNormalTime,
		[Token(Token = "0x40008A2")]
		IgnoreTimeScale,
		[Token(Token = "0x40008A3")]
		HalfTimeScale,
		[Token(Token = "0x40008A4")]
		VariableTimeScale,
		[Token(Token = "0x40008A5")]
		Length
	}

	[Serializable]
	[Token(Token = "0x200012B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578694", Offset = "0x578694")]
	private sealed class <>c
	{
		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<float> <>9__20_0;

		[Token(Token = "0x6000659")]
		[Address(RVA = "0x1582A18", Offset = "0x1582A18", VA = "0x1582A18")]
		public <>c()
		{
		}

		[Token(Token = "0x600065A")]
		[Address(RVA = "0x1582A20", Offset = "0x1582A20", VA = "0x1582A20")]
		internal void <cycleThroughExamples>b__20_0(float val)
		{
		}
	}

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve customAnimationCurve;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform pt1;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform pt2;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform pt3;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform pt4;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform pt5;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int exampleIter;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string[] exampleFunctions;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool useEstimatedTime;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject ltLogo;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private TimingType timingType;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int descrTimeScaleChangeId;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 origin;

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x1661A60", Offset = "0x1661A60", VA = "0x1661A60")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x1661A64", Offset = "0x1661A64", VA = "0x1661A64")]
	private void Start()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x1661B80", Offset = "0x1661B80", VA = "0x1661B80")]
	private void pauseNow()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x1661C00", Offset = "0x1661C00", VA = "0x1661C00")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x1661D64", Offset = "0x1661D64", VA = "0x1661D64")]
	private void endlessCallback()
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x1661DD8", Offset = "0x1661DD8", VA = "0x1661DD8")]
	private void cycleThroughExamples()
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x166217C", Offset = "0x166217C", VA = "0x166217C")]
	public void updateValue3Example()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x166239C", Offset = "0x166239C", VA = "0x166239C")]
	public void updateValue3ExampleUpdate(Vector3 val)
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x16623A0", Offset = "0x16623A0", VA = "0x16623A0")]
	public void updateValue3ExampleCallback(Vector3 val)
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x16623F4", Offset = "0x16623F4", VA = "0x16623F4")]
	public void loopTestClamp()
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x166257C", Offset = "0x166257C", VA = "0x166257C")]
	public void loopTestPingPong()
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x16626F8", Offset = "0x16626F8", VA = "0x16626F8")]
	public void colorExample()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x1662800", Offset = "0x1662800", VA = "0x1662800")]
	public void moveOnACurveExample()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x1662A74", Offset = "0x1662A74", VA = "0x1662A74")]
	public void customTweenExample()
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x1662C44", Offset = "0x1662C44", VA = "0x1662C44")]
	public void moveExample()
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x1662D5C", Offset = "0x1662D5C", VA = "0x1662D5C")]
	public void rotateExample()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x1662FD8", Offset = "0x1662FD8", VA = "0x1662FD8")]
	public void rotateOnUpdate(float val)
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x1662FDC", Offset = "0x1662FDC", VA = "0x1662FDC")]
	public void rotateFinished(object hash)
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x1663104", Offset = "0x1663104", VA = "0x1663104")]
	public void scaleExample()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x1663234", Offset = "0x1663234", VA = "0x1663234")]
	public void updateValueExample()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x1663440", Offset = "0x1663440", VA = "0x1663440")]
	public void updateValueExampleCallback(float val, object hash)
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x16634BC", Offset = "0x16634BC", VA = "0x16634BC")]
	public void delayedCallExample()
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x16635D8", Offset = "0x16635D8", VA = "0x16635D8")]
	public void delayedCallExampleCallback()
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x1663708", Offset = "0x1663708", VA = "0x1663708")]
	public void alphaExample()
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x1663838", Offset = "0x1663838", VA = "0x1663838")]
	public void moveLocalExample()
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x16639A8", Offset = "0x16639A8", VA = "0x16639A8")]
	public void rotateAroundExample()
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x1663AD4", Offset = "0x1663AD4", VA = "0x1663AD4")]
	public void loopPause()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x1663B64", Offset = "0x1663B64", VA = "0x1663B64")]
	public void loopResume()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x1663BF4", Offset = "0x1663BF4", VA = "0x1663BF4")]
	public void punchTest()
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x1663C90", Offset = "0x1663C90", VA = "0x1663C90")]
	public TestingAllCS()
	{
	}
}
[Token(Token = "0x200012C")]
public struct tmpPPoint
{
	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int bezier;
}
[Token(Token = "0x200012D")]
public class LctNavMesh
{
	[Token(Token = "0x600065B")]
	[Address(RVA = "0x1518714", Offset = "0x1518714", VA = "0x1518714")]
	public LctNavMesh()
	{
	}
}
[Token(Token = "0x200012E")]
public struct PPoint
{
	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 p;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int isBezier;

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x15E868C", Offset = "0x15E868C", VA = "0x15E868C")]
	public PPoint(Vector3 p, int b)
	{
	}
}
[Token(Token = "0x200012F")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x5786A4", Offset = "0x5786A4")]
public class LctPath
{
	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private PPoint[] path;

	[Token(Token = "0x170000CD")]
	public Vector3 Item
	{
		[Token(Token = "0x600065E")]
		[Address(RVA = "0x1518790", Offset = "0x1518790", VA = "0x1518790")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600065F")]
		[Address(RVA = "0x15187D0", Offset = "0x15187D0", VA = "0x15187D0")]
		set
		{
		}
	}

	[Token(Token = "0x170000CE")]
	public int Length
	{
		[Token(Token = "0x6000661")]
		[Address(RVA = "0x15188C8", Offset = "0x15188C8", VA = "0x15188C8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x151871C", Offset = "0x151871C", VA = "0x151871C")]
	public LctPath(int size)
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x1518810", Offset = "0x1518810", VA = "0x1518810")]
	public PPoint? get(int i)
	{
		return null;
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x15188E0", Offset = "0x15188E0", VA = "0x15188E0")]
	public int isBezier(int i)
	{
		return default(int);
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x151891C", Offset = "0x151891C", VA = "0x151891C")]
	public void Bezier(int i, int b)
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x1518958", Offset = "0x1518958", VA = "0x1518958")]
	public void CopyTo(LctPath dest)
	{
	}
}
[Token(Token = "0x2000130")]
public class NeedChangeImage : MonoBehaviour
{
	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool needChanging;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite imagePS4;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite imageSWITCH;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite imageXBOX;

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x15B19D8", Offset = "0x15B19D8", VA = "0x15B19D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x15B1AD0", Offset = "0x15B1AD0", VA = "0x15B1AD0")]
	public NeedChangeImage()
	{
	}
}
[Token(Token = "0x2000131")]
public enum SailStatus
{
	[Token(Token = "0x40008B3")]
	Furled,
	[Token(Token = "0x40008B4")]
	Set,
	[Token(Token = "0x40008B5")]
	Furling,
	[Token(Token = "0x40008B6")]
	Setting
}
[Token(Token = "0x2000132")]
public enum SailSetting
{
	[Token(Token = "0x40008B8")]
	Furled,
	[Token(Token = "0x40008B9")]
	Battle,
	[Token(Token = "0x40008BA")]
	Full
}
[Token(Token = "0x2000133")]
public enum SailType
{
	[Token(Token = "0x40008BC")]
	Staysail,
	[Token(Token = "0x40008BD")]
	Squaresail,
	[Token(Token = "0x40008BE")]
	Gaff
}
[Token(Token = "0x2000134")]
public class Rank13Ship : MonoBehaviour
{
	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sail[] allSails;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SailSetting currentSailSetting;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57BE60", Offset = "0x57BE60")]
	public List<Sail> BattleSails;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57BE98", Offset = "0x57BE98")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57BE98", Offset = "0x57BE98")]
	private bool showRunningLines;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57BF08", Offset = "0x57BF08")]
	private GameObject lineRendererPrefab;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject lineParent;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<lineRenderer> linePoints;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool updateRopes;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float lineDetail;

	[Token(Token = "0x170000CF")]
	public SailSetting CurrentSailSetting
	{
		[Token(Token = "0x6000667")]
		[Address(RVA = "0x155CC98", Offset = "0x155CC98", VA = "0x155CC98")]
		get
		{
			return default(SailSetting);
		}
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x155CCA0", Offset = "0x155CCA0", VA = "0x155CCA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x155D894", Offset = "0x155D894", VA = "0x155D894")]
	public void SetAllSails(bool reaper = false)
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x155D9B0", Offset = "0x155D9B0", VA = "0x155D9B0")]
	public void FurlAllSails(bool reaper = false)
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x155DAB8", Offset = "0x155DAB8", VA = "0x155DAB8")]
	public void SetBattleSails(bool reaper = false)
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x155DB7C", Offset = "0x155DB7C", VA = "0x155DB7C")]
	public void ImmediatelyFurlAllSails(bool reaper = false)
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x155DBFC", Offset = "0x155DBFC", VA = "0x155DBFC")]
	public void ImmediatelySetAllSails(bool reaper = false)
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x155DC80", Offset = "0x155DC80", VA = "0x155DC80")]
	public void UpdateCloth(Vector3 acceleration)
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x155DD14", Offset = "0x155DD14", VA = "0x155DD14")]
	private void Update()
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x155DE80", Offset = "0x155DE80", VA = "0x155DE80")]
	public Rank13Ship()
	{
	}
}
[Token(Token = "0x2000135")]
internal struct lineObject
{
	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject lineItem;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string name;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<string> targets;

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x15D993C", Offset = "0x15D993C", VA = "0x15D993C")]
	public lineObject(GameObject _lineItem, string _name)
	{
	}
}
[Token(Token = "0x2000136")]
internal class lineRenderer
{
	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LineRenderer line;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform root;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform startTransform;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform endTransform;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int vertices;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float slack;

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x15D99EC", Offset = "0x15D99EC", VA = "0x15D99EC")]
	public lineRenderer(LineRenderer _line, Transform _root, Transform _start, Transform _end, float _slack, float _lineDetail)
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x15D9CA8", Offset = "0x15D9CA8", VA = "0x15D9CA8")]
	public void Update()
	{
	}
}
[Token(Token = "0x2000137")]
public class Sail : MonoBehaviour
{
	[Token(Token = "0x2000138")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5786DC", Offset = "0x5786DC")]
	private sealed class <changeStatus>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SailStatus _status;

		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Sail <>4__this;

		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool reaper;

		[Token(Token = "0x170000D0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000681")]
			[Address(RVA = "0x157F348", Offset = "0x157F348", VA = "0x157F348", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000683")]
			[Address(RVA = "0x157F390", Offset = "0x157F390", VA = "0x157F390", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600067E")]
		[Address(RVA = "0x157F0F4", Offset = "0x157F0F4", VA = "0x157F0F4")]
		[DebuggerHidden]
		public <changeStatus>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x600067F")]
		[Address(RVA = "0x157F120", Offset = "0x157F120", VA = "0x157F120", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000680")]
		[Address(RVA = "0x157F124", Offset = "0x157F124", VA = "0x157F124", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000682")]
		[Address(RVA = "0x157F350", Offset = "0x157F350", VA = "0x157F350", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57BF64", Offset = "0x57BF64")]
	public SailType SailType;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57BF9C", Offset = "0x57BF9C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57BF9C", Offset = "0x57BF9C")]
	public GameObject SailFull;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Cloth cloth;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57BFFC", Offset = "0x57BFFC")]
	public SailStatus Status;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool changing;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57C034", Offset = "0x57C034")]
	[SerializeField]
	private Vector3 TopPosition;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private Vector3 BottomPosition;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 FullScale;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 FurledScale;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57C090", Offset = "0x57C090")]
	public Vector3 FullScale_PC;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Vector3 FurledScale_PC;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57C0C8", Offset = "0x57C0C8")]
	public Vector3 FullMobileScale;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Vector3 FurledMobileScale;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float TransitionTime;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float transitionTime;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 previousVector;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 currentScale;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 randomAcceleration;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 scaleWithOutAcceleration;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57C100", Offset = "0x57C100")]
	public float currentStatus;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C118", Offset = "0x57C118")]
	public bool BattleSail;

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x153517C", Offset = "0x153517C", VA = "0x153517C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x15352E4", Offset = "0x15352E4", VA = "0x15352E4")]
	private void GetSail()
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x1535388", Offset = "0x1535388", VA = "0x1535388")]
	public void ChangeStatus(SailStatus _status, bool reaper = false)
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x1535474", Offset = "0x1535474", VA = "0x1535474")]
	public void ImmediatelyFurlSail(bool reaper = false)
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x15355C4", Offset = "0x15355C4", VA = "0x15355C4")]
	public void ImmediatelySetAllSails(bool reaper = false)
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x153563C", Offset = "0x153563C", VA = "0x153563C")]
	public void SetAcceleration(Vector3 externalAcceleration)
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x1535778", Offset = "0x1535778", VA = "0x1535778")]
	private void Update()
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x15354E8", Offset = "0x15354E8", VA = "0x15354E8")]
	private void ResetCloth()
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x15353D8", Offset = "0x15353D8", VA = "0x15353D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x588E0C", Offset = "0x588E0C")]
	private IEnumerator changeStatus(SailStatus _status, bool reaper)
	{
		return null;
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x153598C", Offset = "0x153598C", VA = "0x153598C")]
	public Sail()
	{
	}
}
[Token(Token = "0x2000139")]
public class DLCbanner : MonoBehaviour
{
	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Help;

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x7C6244", Offset = "0x7C6244", VA = "0x7C6244")]
	private void Start()
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x7C6248", Offset = "0x7C6248", VA = "0x7C6248")]
	private void Update()
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x7C62C8", Offset = "0x7C62C8", VA = "0x7C62C8")]
	public DLCbanner()
	{
	}
}
[Token(Token = "0x200013A")]
public struct ComplexF
{
	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float Re;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float Im;

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x85B150", Offset = "0x85B150", VA = "0x85B150")]
	public ComplexF(float real, float imaginary)
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x85B158", Offset = "0x85B158", VA = "0x85B158")]
	public static ComplexF FromRealImaginary(float real, float imaginary)
	{
		return default(ComplexF);
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x85B15C", Offset = "0x85B15C", VA = "0x85B15C")]
	public ComplexF GetConjugate()
	{
		return default(ComplexF);
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x85B168", Offset = "0x85B168", VA = "0x85B168")]
	public static bool operator ==(ComplexF a, ComplexF b)
	{
		return default(bool);
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x85B180", Offset = "0x85B180", VA = "0x85B180")]
	public static bool operator !=(ComplexF a, ComplexF b)
	{
		return default(bool);
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x85B198", Offset = "0x85B198", VA = "0x85B198", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x85B1D0", Offset = "0x85B1D0", VA = "0x85B1D0", Slot = "0")]
	public override bool Equals(object o)
	{
		return default(bool);
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x85B260", Offset = "0x85B260", VA = "0x85B260")]
	public static ComplexF operator +(ComplexF a, ComplexF b)
	{
		return default(ComplexF);
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x85B26C", Offset = "0x85B26C", VA = "0x85B26C")]
	public static ComplexF operator -(ComplexF a, ComplexF b)
	{
		return default(ComplexF);
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x85B278", Offset = "0x85B278", VA = "0x85B278")]
	public static ComplexF operator *(ComplexF a, float f)
	{
		return default(ComplexF);
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x85B284", Offset = "0x85B284", VA = "0x85B284")]
	public static ComplexF operator *(ComplexF a, ComplexF b)
	{
		return default(ComplexF);
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x85B2A0", Offset = "0x85B2A0", VA = "0x85B2A0")]
	public static ComplexF operator /(ComplexF a, float f)
	{
		return default(ComplexF);
	}
}
[Token(Token = "0x200013B")]
public class Fourier
{
	[Token(Token = "0x40008EE")]
	private const int cMaxLength = 4096;

	[Token(Token = "0x40008EF")]
	private const int cMinLength = 1;

	[Token(Token = "0x40008F0")]
	private const int cMaxBits = 12;

	[Token(Token = "0x40008F1")]
	private const int cMinBits = 0;

	[Token(Token = "0x40008F2")]
	private const float _PI = (float)Math.PI;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int[][] _reversedBits;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int[][] _reverseBits;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static int _lookupTabletLength;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static float[,][] _uRLookup;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static float[,][] _uILookup;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static float[,][] _uRLookupF;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static float[,][] _uILookupF;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static ComplexF[] _bufferCF;

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x7B8E18", Offset = "0x7B8E18", VA = "0x7B8E18")]
	private Fourier()
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x7B8E20", Offset = "0x7B8E20", VA = "0x7B8E20")]
	private static bool IsPowerOf2(int x)
	{
		return default(bool);
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x7B8E30", Offset = "0x7B8E30", VA = "0x7B8E30")]
	private static int Pow2(int exponent)
	{
		return default(int);
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x7B8E44", Offset = "0x7B8E44", VA = "0x7B8E44")]
	private static int Log2(int x)
	{
		return default(int);
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x7B8FD4", Offset = "0x7B8FD4", VA = "0x7B8FD4")]
	private static int[] GetReversedBits(int numberOfBits)
	{
		return null;
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x7B91D4", Offset = "0x7B91D4", VA = "0x7B91D4")]
	private static void ReorderArray(ComplexF[] data)
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x7B92BC", Offset = "0x7B92BC", VA = "0x7B92BC")]
	private static int _ReverseBits(int bits, int n)
	{
		return default(int);
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x7B92F0", Offset = "0x7B92F0", VA = "0x7B92F0")]
	private static void InitializeReverseBits(int levels)
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x7B9558", Offset = "0x7B9558", VA = "0x7B9558")]
	private static int MyCeilIntF(float g)
	{
		return default(int);
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x7B9584", Offset = "0x7B9584", VA = "0x7B9584")]
	private static void SyncLookupTableLength(int length)
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x7B9E5C", Offset = "0x7B9E5C", VA = "0x7B9E5C")]
	private static int GetLookupTableLength()
	{
		return default(int);
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x7B9EC0", Offset = "0x7B9EC0", VA = "0x7B9EC0")]
	public static void ClearLookupTables()
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x7B96A4", Offset = "0x7B96A4", VA = "0x7B96A4")]
	private static void InitializeComplexRotations(int levels)
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x7B9F78", Offset = "0x7B9F78", VA = "0x7B9F78")]
	private static void LockBufferCF(int length, ComplexF[] buffer)
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x7BA080", Offset = "0x7BA080", VA = "0x7BA080")]
	private static void UnlockBufferCF(ComplexF[] buffer)
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x7BA08C", Offset = "0x7BA08C", VA = "0x7BA08C")]
	private static void LinearFFT_Quick(ComplexF[] data, int start, int inc, int length, FourierDirection direction)
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x7BA230", Offset = "0x7BA230", VA = "0x7BA230")]
	public static void FFT(ComplexF[] data, int length, FourierDirection direction)
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x7BA494", Offset = "0x7BA494", VA = "0x7BA494")]
	public static void FFT2(ComplexF[] data, int xLength, int yLength, FourierDirection direction)
	{
	}
}
[Token(Token = "0x200013C")]
public class Fourier2
{
	[Token(Token = "0x40008FB")]
	private const int cMaxLength = 4096;

	[Token(Token = "0x40008FC")]
	private const int cMinLength = 1;

	[Token(Token = "0x40008FD")]
	private const int cMaxBits = 12;

	[Token(Token = "0x40008FE")]
	private const int cMinBits = 0;

	[Token(Token = "0x40008FF")]
	private const float _PI = (float)Math.PI;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int[][] _reversedBits;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int[][] _reverseBits;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static int _lookupTabletLength;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static float[,][] _uRLookup;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static float[,][] _uILookup;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static float[,][] _uRLookupF;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static float[,][] _uILookupF;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static ComplexF[] _bufferCF;

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x7BA704", Offset = "0x7BA704", VA = "0x7BA704")]
	private Fourier2()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x7BA70C", Offset = "0x7BA70C", VA = "0x7BA70C")]
	private static bool IsPowerOf2(int x)
	{
		return default(bool);
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x7BA71C", Offset = "0x7BA71C", VA = "0x7BA71C")]
	private static int Pow2(int exponent)
	{
		return default(int);
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x7BA730", Offset = "0x7BA730", VA = "0x7BA730")]
	private static int Log2(int x)
	{
		return default(int);
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x7BA8C0", Offset = "0x7BA8C0", VA = "0x7BA8C0")]
	private static int[] GetReversedBits(int numberOfBits)
	{
		return null;
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x7BAAC0", Offset = "0x7BAAC0", VA = "0x7BAAC0")]
	private static void ReorderArray(ComplexF[] data)
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x7BABA8", Offset = "0x7BABA8", VA = "0x7BABA8")]
	private static int _ReverseBits(int bits, int n)
	{
		return default(int);
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x7BABDC", Offset = "0x7BABDC", VA = "0x7BABDC")]
	private static void InitializeReverseBits(int levels)
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x7BAE44", Offset = "0x7BAE44", VA = "0x7BAE44")]
	private static int MyCeilIntF(float g)
	{
		return default(int);
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x7BAE70", Offset = "0x7BAE70", VA = "0x7BAE70")]
	private static void SyncLookupTableLength(int length)
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x7BB748", Offset = "0x7BB748", VA = "0x7BB748")]
	private static int GetLookupTableLength()
	{
		return default(int);
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x7BB7AC", Offset = "0x7BB7AC", VA = "0x7BB7AC")]
	public static void ClearLookupTables()
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x7BAF90", Offset = "0x7BAF90", VA = "0x7BAF90")]
	private static void InitializeComplexRotations(int levels)
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x7BB864", Offset = "0x7BB864", VA = "0x7BB864")]
	private static void LockBufferCF(int length, ComplexF[] buffer)
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x7BB96C", Offset = "0x7BB96C", VA = "0x7BB96C")]
	private static void UnlockBufferCF(ComplexF[] buffer)
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x7BB978", Offset = "0x7BB978", VA = "0x7BB978")]
	private static void LinearFFT_Quick(ComplexF[] data, int start, int inc, int length, FourierDirection direction)
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x7BBB1C", Offset = "0x7BBB1C", VA = "0x7BBB1C")]
	public static void FFT(ComplexF[] data, int length, FourierDirection direction)
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x7BBD80", Offset = "0x7BBD80", VA = "0x7BBD80")]
	public static void FFT2(ComplexF[] data, int xLength, int yLength, FourierDirection direction)
	{
	}
}
[Token(Token = "0x200013D")]
public enum FourierDirection
{
	[Token(Token = "0x4000909")]
	Forward = 1,
	[Token(Token = "0x400090A")]
	Backward = -1
}
[Token(Token = "0x200013E")]
public class BoatController : MonoBehaviour
{
	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<GameObject> m_motors;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool m_enableAudio;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource m_boatAudioSource;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float m_boatAudioMinPitch;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float m_boatAudioMaxPitch;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public float m_FinalSpeed;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	public float m_InertiaFactor;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	public float m_turningFactor;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	public float m_accelerationTorqueFactor;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	public float m_turningTorqueFactor;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57C1F0", Offset = "0x57C1F0")]
	private float m_verticalInput;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float m_horizontalInput;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Rigidbody m_rigidbody;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector2 m_androidInputInit;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float accel;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float accelBreak;

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x7E94B0", Offset = "0x7E94B0", VA = "0x7E94B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x7E952C", Offset = "0x7E952C", VA = "0x7E952C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x7E9928", Offset = "0x7E9928", VA = "0x7E9928")]
	private static float Lerp(float from, float to, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x7E9954", Offset = "0x7E9954", VA = "0x7E9954")]
	public BoatController()
	{
	}
}
[Token(Token = "0x200013F")]
public class Boyant : MonoBehaviour
{
	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Ocean ocean;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float buoyancy;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool hasChoppy;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 oldPos;

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x7EA3F4", Offset = "0x7EA3F4", VA = "0x7EA3F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x7EA494", Offset = "0x7EA494", VA = "0x7EA494")]
	private void Update()
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x7EA654", Offset = "0x7EA654", VA = "0x7EA654")]
	public Boyant()
	{
	}
}
[Token(Token = "0x2000140")]
public class Buoyancy : MonoBehaviour
{
	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool correction_enabled;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Ocean ocean;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int renderQueue;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Rect size;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool useFixedUpdate;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool moreAccurate;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float magnitude;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float ypos;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Vector3> blobs;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<float[]> prevBoya;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<float> sinkForces;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float CenterOfMassOffset;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float dampCoeff;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int SlicesX;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int SlicesZ;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int interpolation;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int intplt;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool ChoppynessAffectsPosition;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float ChoppynessFactor;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool WindAffectsPosition;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float WindFactor;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool xAngleAddsSliding;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float slideFactor;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool cvisible;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	public bool wvisible;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	public bool svisible;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Renderer _renderer;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool sink;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float sinkForce;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float iF;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool interpolate;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Rigidbody rrigidbody;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int tick;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private int tack;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 wpos;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Vector3 cpos;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool useGravity;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float accel;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int prevAngleX;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private int currAngleX;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float bbboyancy;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float prevBuoyancy;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool visible;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	private bool lastvisible;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private int lastFrame;

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x7EBACC", Offset = "0x7EBACC", VA = "0x7EBACC")]
	public void LoadFromDescriptor(BuoyancyDescriptor desc)
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x7EBB04", Offset = "0x7EBB04", VA = "0x7EBB04")]
	private void OnOceanQualityChanged(object obj)
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x7EBB08", Offset = "0x7EBB08", VA = "0x7EBB08")]
	private void InitializeHeight()
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x7EBC38", Offset = "0x7EBC38", VA = "0x7EBC38")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x7EC364", Offset = "0x7EC364", VA = "0x7EC364")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x7EC434", Offset = "0x7EC434", VA = "0x7EC434")]
	private void Update()
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x7ECCC8", Offset = "0x7ECCC8", VA = "0x7ECCC8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x7ECCD8", Offset = "0x7ECCD8", VA = "0x7ECCD8")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x7EC444", Offset = "0x7EC444", VA = "0x7EC444")]
	private void update()
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x7ECF34", Offset = "0x7ECF34", VA = "0x7ECF34")]
	private void CorretionShipAngle()
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x7ED0E4", Offset = "0x7ED0E4", VA = "0x7ED0E4")]
	private float AngleNormalize(float angle)
	{
		return default(float);
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x7ED140", Offset = "0x7ED140", VA = "0x7ED140")]
	public void Sink(bool isActive)
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x7ECF08", Offset = "0x7ECF08", VA = "0x7ECF08")]
	private static float Lerp(float from, float to, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x7ED14C", Offset = "0x7ED14C", VA = "0x7ED14C")]
	public Buoyancy()
	{
	}
}
[Token(Token = "0x2000141")]
public class DestroyTimed : MonoBehaviour
{
	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float time;

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x7CC50C", Offset = "0x7CC50C", VA = "0x7CC50C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x7CC59C", Offset = "0x7CC59C", VA = "0x7CC59C")]
	public DestroyTimed()
	{
	}
}
[Serializable]
[Token(Token = "0x2000142")]
[DisallowMultipleComponent]
public class Ocean : MonoBehaviour
{
	[Token(Token = "0x2000143")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5786FC", Offset = "0x5786FC")]
	private sealed class <AddMist>d__214 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Ocean <>4__this;

		[Token(Token = "0x170000D6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000717")]
			[Address(RVA = "0x157D7F4", Offset = "0x157D7F4", VA = "0x157D7F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000719")]
			[Address(RVA = "0x157D83C", Offset = "0x157D83C", VA = "0x157D83C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000714")]
		[Address(RVA = "0x157D24C", Offset = "0x157D24C", VA = "0x157D24C")]
		[DebuggerHidden]
		public <AddMist>d__214(int <>1__state)
		{
		}

		[Token(Token = "0x6000715")]
		[Address(RVA = "0x157D278", Offset = "0x157D278", VA = "0x157D278", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000716")]
		[Address(RVA = "0x157D27C", Offset = "0x157D27C", VA = "0x157D27C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000718")]
		[Address(RVA = "0x157D7FC", Offset = "0x157D7FC", VA = "0x157D7FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int _gaussianMode;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int _gridMode;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int _gridRes;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string _name;

	[Token(Token = "0x4000951")]
	private const float TWO_PI = (float)Math.PI * 2f;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool spreadAlongFrames;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int everyXframe;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int reflrefrXframe;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int fr1;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int fr2;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int fr2B;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int fr3;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int fr4;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool ticked;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool ticked2;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float farLodOffset;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float flodFact;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] flodoffset;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int ffact;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int oldffact;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float ifoamStrength;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float ifoamWidth;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float foamDuration;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool shaderLod;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool useShaderLods;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int numberLods;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int lowShaderLod;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float foamUV;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float bumpUV;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool loadSun;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	public bool fixedUpdate;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	public bool forceDepth;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public int lodSkipFrames;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int lodSkip;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool skipLods;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int hIndex;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	private bool isBoat;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public byte[] canCheckBuoyancyNow;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public int renderQueue;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 centerOffset;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool start2;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public int defaultLOD;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool fixedTiles;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public int discSize;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public int sTilesLod;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public int width;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public int height;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public int wh;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float wh1;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float sizeQX;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float sizeQZ;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float hhalf;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float whalf;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private int offset;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float sizeXg_width;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private int gwgh;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float scaleA;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float oldScaleA;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public int renderTexWidth;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public int renderTexHeight;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public float scale;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public float waveScale;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float speed;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public float wakeDistance;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public float waveDistanceFactor;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private float oldWaveDistanceFactor;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Vector3 size;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private Bounds bounds;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public int tiles;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool previousFogState;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private Color previousFogColor;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private float previousFogDensity;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float previousFogNear;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float previousFogFar;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private FogMode previousFogMode;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public float[] gaussRandom1;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public float[] gaussRandom2;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C240", Offset = "0x57C240")]
	private static Ocean <Singleton>k__BackingField;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public float pWindx;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float oldWindx;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public float pWindy;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private float oldWindy;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public float choppy_scale;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Material material;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Material material1;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Material material2;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Material[] mat;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private bool mat1HasRefl;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B9")]
	private bool mat1HasRefr;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BA")]
	private bool mat2HasRefl;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BB")]
	private bool mat2HasRefr;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	public bool hasShore;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BD")]
	public bool hasShore1;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BE")]
	public bool hasFog;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BF")]
	public bool hasFog1;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public bool hasFog2;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C1")]
	public bool distCan1;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C2")]
	public bool distCan2;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	public float cancellationDistance;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public bool followMainCamera;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private int max_LOD;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public ComplexF[] h0;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public ComplexF[] h02;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private ComplexF[] t_x;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private ComplexF[] data;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private int data_size;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	private int mul_width;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private Vector3[] baseHeight;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private Mesh baseMesh;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private GameObject child;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private List<Mesh> btiles_LOD;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private List<List<Mesh>> tiles_LOD;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private int g_height;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	private int g_width;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private Vector2 sizeInv;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private bool reflectionRefractionEnabled;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	public float m_ClipPlaneOffset;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private RenderTexture m_ReflectionTexture;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private RenderTexture m_RefractionTexture;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private Dictionary<Camera, Camera> m_ReflectionCameras;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private Dictionary<Camera, Camera> m_RefractionCameras;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private int m_OldReflectionTextureSize;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
	private int m_OldRefractionTextureSize;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public LayerMask renderLayers;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private Vector3[] vertices;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private Vector3[] normals;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private Vector4[] tangents;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public Transform player;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public Transform sun;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public Vector4 SunDir;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private Vector4 oldSunDir;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private Light sunLight;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private Color oldSunColor;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public float specularity;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
	public float specPower;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public float reflectivity;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
	public float translucency;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public float shoreDistance;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
	public float shoreStrength;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public float foamFactor;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
	public Color surfaceColor;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
	public Color waterColor;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
	public Color fakeWaterColor;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public Shader oceanShader;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public bool renderReflection;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x321")]
	public bool renderRefraction;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
	public float shaderAlpha;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	public bool dynamicWaves;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static float wind;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
	public float humidity;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	private float prevValue;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x334")]
	private float nextValue;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	private float prevTime;

	[Token(Token = "0x40009E6")]
	private const float timeFreq = 0.0035714286f;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	public GameObject mist;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	public GameObject mistLow;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	public GameObject mistClouds;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	public bool mistEnabled;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	private Vector3[][] verticesLOD;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	private Vector3[][] normalsLOD;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	private Vector4[][] tangentsLOD;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	private Vector3 mv2;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x384")]
	private bool isInitialized;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static int fy;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static float h1;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static float h2;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static float yy;

	[Token(Token = "0x170000D2")]
	public static Ocean Singleton
	{
		[Token(Token = "0x60006D0")]
		[Address(RVA = "0x16D4398", Offset = "0x16D4398", VA = "0x16D4398")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x588EC4", Offset = "0x588EC4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006D1")]
		[Address(RVA = "0x16D43E4", Offset = "0x16D43E4", VA = "0x16D43E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x588ED4", Offset = "0x588ED4")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D3")]
	public float windx
	{
		[Token(Token = "0x60006D2")]
		[Address(RVA = "0x16D4440", Offset = "0x16D4440", VA = "0x16D4440")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006D3")]
		[Address(RVA = "0x16D4448", Offset = "0x16D4448", VA = "0x16D4448")]
		set
		{
		}
	}

	[Token(Token = "0x170000D4")]
	public float windy
	{
		[Token(Token = "0x60006D4")]
		[Address(RVA = "0x16D445C", Offset = "0x16D445C", VA = "0x16D445C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006D5")]
		[Address(RVA = "0x16D4464", Offset = "0x16D4464", VA = "0x16D4464")]
		set
		{
		}
	}

	[Token(Token = "0x170000D5")]
	public bool IsOceanInitialized
	{
		[Token(Token = "0x60006D6")]
		[Address(RVA = "0x16D4478", Offset = "0x16D4478", VA = "0x16D4478")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x16D4488", Offset = "0x16D4488", VA = "0x16D4488")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x16D46A0", Offset = "0x16D46A0", VA = "0x16D46A0")]
	private void OnSettingsLoaded(object obj)
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x16D47C4", Offset = "0x16D47C4", VA = "0x16D47C4")]
	public void Initialize(bool runtimeLoad = false)
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x16D72D8", Offset = "0x16D72D8", VA = "0x16D72D8")]
	private void preallocateBuffers()
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x16D4DE0", Offset = "0x16D4DE0", VA = "0x16D4DE0")]
	public void setSpread()
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x16D8490", Offset = "0x16D8490", VA = "0x16D8490")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x16D86F8", Offset = "0x16D86F8", VA = "0x16D86F8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x16D84A0", Offset = "0x16D84A0", VA = "0x16D84A0")]
	private void updNoThreads()
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x16D877C", Offset = "0x16D877C", VA = "0x16D877C")]
	private void calculateCenterOffset()
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x16D7610", Offset = "0x16D7610", VA = "0x16D7610")]
	private void calcComplex(float time, int ha, int hb)
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x16D79C8", Offset = "0x16D79C8", VA = "0x16D79C8")]
	private void calcPhase3()
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x16D9474", Offset = "0x16D9474", VA = "0x16D9474")]
	private void calcPhase4a(int a, int b, float deltaTime, Vector3 playerPosition, Vector3 currentPosition)
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x16D89F4", Offset = "0x16D89F4", VA = "0x16D89F4")]
	private void calcPhase4N()
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x16D90A0", Offset = "0x16D90A0", VA = "0x16D90A0")]
	private void updateTiles(int a, int b)
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x16D53B0", Offset = "0x16D53B0", VA = "0x16D53B0")]
	private void GenerateTiles()
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x16D9820", Offset = "0x16D9820", VA = "0x16D9820")]
	public void initDisc()
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x16D6948", Offset = "0x16D6948", VA = "0x16D6948")]
	private void GenerateHeightmap()
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x16D9C88", Offset = "0x16D9C88", VA = "0x16D9C88")]
	public void AssignFolowTarget(Transform tr)
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x16D8B40", Offset = "0x16D8B40", VA = "0x16D8B40")]
	private void updateOceanMaterial()
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x16D62B4", Offset = "0x16D62B4", VA = "0x16D62B4")]
	public void matSetVars()
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x16D4E38", Offset = "0x16D4E38", VA = "0x16D4E38")]
	private void SetupOffscreenRendering(bool runtimeLoad = false)
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x16DA078", Offset = "0x16DA078", VA = "0x16DA078")]
	private void OnWillRenderObject()
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x16DA0CC", Offset = "0x16DA0CC", VA = "0x16DA0CC")]
	public void RenderReflectionAndRefraction()
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x16DB9F8", Offset = "0x16DB9F8", VA = "0x16DB9F8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x16DBAD4", Offset = "0x16DBAD4", VA = "0x16DBAD4")]
	public void zeroObjects(bool destroy = false)
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x16DC6F0", Offset = "0x16DC6F0", VA = "0x16DC6F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x16DC2F8", Offset = "0x16DC2F8", VA = "0x16DC2F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x16DB32C", Offset = "0x16DB32C", VA = "0x16DB32C")]
	private void UpdateCameraModes(Camera src, Camera dest)
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x16DA948", Offset = "0x16DA948", VA = "0x16DA948")]
	private void CreateWaterObjects(Camera currentCamera, [Out] Camera reflectionCamera, [Out] Camera refractionCamera)
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x16DB8C4", Offset = "0x16DB8C4", VA = "0x16DB8C4")]
	private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
	{
		return default(Vector4);
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x16DB620", Offset = "0x16DB620", VA = "0x16DB620")]
	private static void CalculateReflectionMatrix(Matrix4x4 reflectionMat, Vector4 plane)
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x16D9D48", Offset = "0x16D9D48", VA = "0x16D9D48")]
	public void shader_LOD(bool isActive, Material mat, int lod = 1)
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x16DCA0C", Offset = "0x16DCA0C", VA = "0x16DCA0C")]
	public void killReflRefr(int lod = 0)
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x16DCB7C", Offset = "0x16DCB7C", VA = "0x16DCB7C")]
	public void matSetLod(Material mat, int lod)
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x16DCC28", Offset = "0x16DCC28", VA = "0x16DCC28")]
	public void EnableReflection(bool isActive)
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x16DCCFC", Offset = "0x16DCCFC", VA = "0x16DCCFC")]
	public void EnableRefraction(bool isActive)
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x16DCDD0", Offset = "0x16DCDD0", VA = "0x16DCDD0")]
	private void Mist(bool isActive)
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x16D9FB0", Offset = "0x16D9FB0", VA = "0x16D9FB0")]
	private void switchKeyword(Material _mat, string keyword1, string keyword2, bool on)
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x16DCDDC", Offset = "0x16DCDDC", VA = "0x16DCDDC")]
	public void updMaterials()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x16D8F9C", Offset = "0x16D8F9C", VA = "0x16D8F9C")]
	private float GetHumidity(float time)
	{
		return default(float);
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x16D7258", Offset = "0x16D7258", VA = "0x16D7258")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x588EE4", Offset = "0x588EE4")]
	private IEnumerator AddMist()
	{
		return null;
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x16D9070", Offset = "0x16D9070", VA = "0x16D9070")]
	public void SetWaves(float wind)
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x16DD3D4", Offset = "0x16DD3D4", VA = "0x16DD3D4")]
	private static float MySmoothstep(float a, float b, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x16D5384", Offset = "0x16D5384", VA = "0x16D5384")]
	private static int MyFloorInt(float g)
	{
		return default(int);
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x16DD44C", Offset = "0x16DD44C", VA = "0x16DD44C")]
	private static int MyCeilInt(float g)
	{
		return default(int);
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x16DD420", Offset = "0x16DD420", VA = "0x16DD420")]
	private static float Lerp(float from, float to, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x16D97F0", Offset = "0x16D97F0", VA = "0x16D97F0")]
	private static int MyIntPow(int a, int b)
	{
		return default(int);
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x16DD478", Offset = "0x16DD478", VA = "0x16DD478")]
	public int GetIndexAtLocation(float x, float y)
	{
		return default(int);
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x16DD504", Offset = "0x16DD504", VA = "0x16DD504")]
	public int GetIndexChoppyAtLocation(float x, float y)
	{
		return default(int);
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x16D834C", Offset = "0x16D834C", VA = "0x16D834C")]
	public float GetWaterHeightAtLocation(float x, float y)
	{
		return default(float);
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x16DD67C", Offset = "0x16DD67C", VA = "0x16DD67C")]
	public float GetChoppyAtLocation(float x, float y)
	{
		return default(float);
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x16DD768", Offset = "0x16DD768", VA = "0x16DD768")]
	public float GetHeightChoppyAtLocation(float x, float y)
	{
		return default(float);
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x16DD970", Offset = "0x16DD970", VA = "0x16DD970")]
	public float GetChoppyAtLocationFast()
	{
		return default(float);
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x16DD9F4", Offset = "0x16DD9F4", VA = "0x16DD9F4")]
	public float GetWaterHeightAtLocation2(float x, float y)
	{
		return default(float);
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x16DDCEC", Offset = "0x16DDCEC", VA = "0x16DDCEC")]
	public float GetChoppyAtLocation2(float x, float y)
	{
		return default(float);
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x16DDF4C", Offset = "0x16DDF4C", VA = "0x16DDF4C")]
	public float GetHeightChoppyAtLocation2(float x, float y)
	{
		return default(float);
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x16DE2F4", Offset = "0x16DE2F4", VA = "0x16DE2F4")]
	public float GetChoppyAtLocation2Fast()
	{
		return default(float);
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x16D5E48", Offset = "0x16D5E48", VA = "0x16D5E48")]
	public void InitWaveGenerator(bool skip = false, bool useMyRandom = false)
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x16DE378", Offset = "0x16DE378", VA = "0x16DE378")]
	private float GaussianRnd()
	{
		return default(float);
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x16DE430", Offset = "0x16DE430", VA = "0x16DE430")]
	private float P_spectrum(Vector2 vec_k, Vector2 wind)
	{
		return default(float);
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x16DE5D4", Offset = "0x16DE5D4", VA = "0x16DE5D4")]
	public Ocean()
	{
	}
}
[Token(Token = "0x2000144")]
public class presetLoader : MonoBehaviour
{
	[Token(Token = "0x600071A")]
	[Address(RVA = "0x15D9E60", Offset = "0x15D9E60", VA = "0x15D9E60")]
	public static bool loadPreset(Ocean o, string preset, bool runtime = false, bool useFixedGaussianRandTable = false)
	{
		return default(bool);
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x15D9E6C", Offset = "0x15D9E6C", VA = "0x15D9E6C")]
	public static bool readPreset(Ocean o, string preset, bool runtime = false, bool useFixedGaussianRandTable = false)
	{
		return default(bool);
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x15DB900", Offset = "0x15DB900", VA = "0x15DB900")]
	public static bool evalStream(BinaryReader br)
	{
		return default(bool);
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x15DB96C", Offset = "0x15DB96C", VA = "0x15DB96C")]
	public presetLoader()
	{
	}
}
[Token(Token = "0x2000145")]
public class SmoothFollow : MonoBehaviour
{
	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distance;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float height;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float damping;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool smoothRotation;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float rotationDamping;

	[Token(Token = "0x600071E")]
	[Address(RVA = "0x1682508", Offset = "0x1682508", VA = "0x1682508")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x1682754", Offset = "0x1682754", VA = "0x1682754")]
	private void Update()
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x1682780", Offset = "0x1682780", VA = "0x1682780")]
	public SmoothFollow()
	{
	}
}
[Token(Token = "0x2000146")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x2000147")]
	public delegate void OnClick();

	[Token(Token = "0x2000148")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x2000149")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x200014A")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x200014B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57870C", Offset = "0x57870C")]
	private sealed class <>c__DisplayClass36_0
	{
		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x6000740")]
		[Address(RVA = "0x1506E4C", Offset = "0x1506E4C", VA = "0x1506E4C")]
		public <>c__DisplayClass36_0()
		{
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0x1506E54", Offset = "0x1506E54", VA = "0x1506E54")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x200014C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57871C", Offset = "0x57871C")]
	private sealed class <>c__DisplayClass38_0
	{
		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x6000742")]
		[Address(RVA = "0x1506F14", Offset = "0x1506F14", VA = "0x1506F14")]
		public <>c__DisplayClass38_0()
		{
		}

		[Token(Token = "0x6000743")]
		[Address(RVA = "0x1506F1C", Offset = "0x1506F1C", VA = "0x1506F1C")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x200014D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57872C", Offset = "0x57872C")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000744")]
		[Address(RVA = "0x1506FF8", Offset = "0x1506FF8", VA = "0x1506FF8")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6000745")]
		[Address(RVA = "0x1507000", Offset = "0x1507000", VA = "0x1507000")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x200014E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57873C", Offset = "0x57873C")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000746")]
		[Address(RVA = "0x150721C", Offset = "0x150721C", VA = "0x150721C")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6000747")]
		[Address(RVA = "0x1507224", Offset = "0x1507224", VA = "0x1507224")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x200014F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57874C", Offset = "0x57874C")]
	private sealed class <>c__DisplayClass42_0
	{
		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x6000748")]
		[Address(RVA = "0x1507248", Offset = "0x1507248", VA = "0x1507248")]
		public <>c__DisplayClass42_0()
		{
		}

		[Token(Token = "0x6000749")]
		[Address(RVA = "0x1507250", Offset = "0x1507250", VA = "0x1507250")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x40009FD")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x40009FE")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x40009FF")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool[] reEnable;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4000A0D")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x4000A0E")]
	private const float marginH = 16f;

	[Token(Token = "0x4000A0F")]
	private const float marginV = 16f;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector2[] insertPositions;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 menuOffset;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private OVRCameraRig rig;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LaserPointer lp;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private LineRenderer lr;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x7C7CFC", Offset = "0x7C7CFC", VA = "0x7C7CFC")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x7C8228", Offset = "0x7C8228", VA = "0x7C8228")]
	public void Show()
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x7C87F4", Offset = "0x7C87F4", VA = "0x7C87F4")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x7C85E4", Offset = "0x7C85E4", VA = "0x7C85E4")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x7C89B0", Offset = "0x7C89B0", VA = "0x7C89B0")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x7C8CF0", Offset = "0x7C8CF0", VA = "0x7C8CF0")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x7C8F8C", Offset = "0x7C8F8C", VA = "0x7C8F8C")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x7C9098", Offset = "0x7C9098", VA = "0x7C9098")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x7C9284", Offset = "0x7C9284", VA = "0x7C9284")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0x7C9328", Offset = "0x7C9328", VA = "0x7C9328")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0x7C9520", Offset = "0x7C9520", VA = "0x7C9520")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0x7C9730", Offset = "0x7C9730", VA = "0x7C9730")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0x7C9A3C", Offset = "0x7C9A3C", VA = "0x7C9A3C")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0x7C9B40", Offset = "0x7C9B40", VA = "0x7C9B40")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0x7C9BE0", Offset = "0x7C9BE0", VA = "0x7C9BE0")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x2000150")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x169F3FC", Offset = "0x169F3FC", VA = "0x169F3FC")]
	private void Start()
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x169F4B4", Offset = "0x169F4B4", VA = "0x169F4B4")]
	private void Update()
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x169F56C", Offset = "0x169F56C", VA = "0x169F56C")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0x169F5A8", Offset = "0x169F5A8", VA = "0x169F5A8")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x2000151")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x2000152")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4000A2C")]
		On,
		[Token(Token = "0x4000A2D")]
		Off,
		[Token(Token = "0x4000A2E")]
		OnWhenHitTarget
	}

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x170000D8")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x600074F")]
		[Address(RVA = "0x1517EF8", Offset = "0x1517EF8", VA = "0x1517EF8")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x600074E")]
		[Address(RVA = "0x1517EB4", Offset = "0x1517EB4", VA = "0x1517EB4")]
		set
		{
		}
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0x1517F00", Offset = "0x1517F00", VA = "0x1517F00")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0x1517F64", Offset = "0x1517F64", VA = "0x1517F64")]
	private void Start()
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x15180B0", Offset = "0x15180B0", VA = "0x15180B0", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0x15180CC", Offset = "0x15180CC", VA = "0x15180CC", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0x1518120", Offset = "0x1518120", VA = "0x1518120")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0x15182D4", Offset = "0x15182D4", VA = "0x15182D4")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x15183E8", Offset = "0x15183E8", VA = "0x15183E8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0x1518484", Offset = "0x1518484", VA = "0x1518484")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0x151855C", Offset = "0x151855C", VA = "0x151855C")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x1518610", Offset = "0x1518610", VA = "0x1518610")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x1518704", Offset = "0x1518704", VA = "0x1518704")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x2000153")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x4000A2F")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x4000A30")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x4000A31")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C300", Offset = "0x57C300")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C338", Offset = "0x57C338")]
	public LayerMask CollideLayers;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C370", Offset = "0x57C370")]
	public float HeightOffset;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C3A8", Offset = "0x57C3A8")]
	public float MinimumHeight;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C3E0", Offset = "0x57C3E0")]
	public float MaximumHeight;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x851054", Offset = "0x851054", VA = "0x851054")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x85105C", Offset = "0x85105C", VA = "0x85105C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x8510F0", Offset = "0x8510F0", VA = "0x8510F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x851184", Offset = "0x851184", VA = "0x851184")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x851218", Offset = "0x851218", VA = "0x851218")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x851540", Offset = "0x851540", VA = "0x851540")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x85176C", Offset = "0x85176C", VA = "0x85176C")]
	private bool CheckCameraNearClipping([Out] float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000154")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x151FED8", Offset = "0x151FED8", VA = "0x151FED8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x151FFA4", Offset = "0x151FFA4", VA = "0x151FFA4")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x2000155")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x2000156")]
	public enum States
	{
		[Token(Token = "0x4000A5F")]
		Ready,
		[Token(Token = "0x4000A60")]
		Aim,
		[Token(Token = "0x4000A61")]
		CancelAim,
		[Token(Token = "0x4000A62")]
		PreTeleport,
		[Token(Token = "0x4000A63")]
		CancelTeleport,
		[Token(Token = "0x4000A64")]
		Teleporting,
		[Token(Token = "0x4000A65")]
		PostTeleport
	}

	[Token(Token = "0x2000157")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4000A67")]
		None,
		[Token(Token = "0x4000A68")]
		Aim,
		[Token(Token = "0x4000A69")]
		PreTeleport,
		[Token(Token = "0x4000A6A")]
		Teleport
	}

	[Token(Token = "0x2000158")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4000A6C")]
		Point,
		[Token(Token = "0x4000A6D")]
		Sphere,
		[Token(Token = "0x4000A6E")]
		Capsule
	}

	[Token(Token = "0x2000159")]
	public class AimData
	{
		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C7F8", Offset = "0x57C7F8")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x170000DC")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6000799")]
			[Address(RVA = "0x1515EB4", Offset = "0x1515EB4", VA = "0x1515EB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58944C", Offset = "0x58944C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600079A")]
			[Address(RVA = "0x1515EBC", Offset = "0x1515EBC", VA = "0x1515EBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58945C", Offset = "0x58945C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000798")]
		[Address(RVA = "0x1515E28", Offset = "0x1515E28", VA = "0x1515E28")]
		public AimData()
		{
		}

		[Token(Token = "0x600079B")]
		[Address(RVA = "0x1515EC4", Offset = "0x1515EC4", VA = "0x1515EC4")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200015A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57875C", Offset = "0x57875C")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000DD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600079F")]
			[Address(RVA = "0x1515C74", Offset = "0x1515C74", VA = "0x1515C74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007A1")]
			[Address(RVA = "0x1515CBC", Offset = "0x1515CBC", VA = "0x1515CBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600079C")]
		[Address(RVA = "0x1515B34", Offset = "0x1515B34", VA = "0x1515B34")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x600079D")]
		[Address(RVA = "0x1515B60", Offset = "0x1515B60", VA = "0x1515B60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600079E")]
		[Address(RVA = "0x1515B64", Offset = "0x1515B64", VA = "0x1515B64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0x1515C7C", Offset = "0x1515C7C", VA = "0x1515C7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200015B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57876C", Offset = "0x57876C")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000DF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007A5")]
			[Address(RVA = "0x15155A0", Offset = "0x15155A0", VA = "0x15155A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007A7")]
			[Address(RVA = "0x15155E8", Offset = "0x15155E8", VA = "0x15155E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007A2")]
		[Address(RVA = "0x1515418", Offset = "0x1515418", VA = "0x1515418")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0x1515444", Offset = "0x1515444", VA = "0x1515444", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0x1515448", Offset = "0x1515448", VA = "0x1515448", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0x15155A8", Offset = "0x15155A8", VA = "0x15155A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200015C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57877C", Offset = "0x57877C")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000E1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007AB")]
			[Address(RVA = "0x15156CC", Offset = "0x15156CC", VA = "0x15156CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007AD")]
			[Address(RVA = "0x1515714", Offset = "0x1515714", VA = "0x1515714", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0x15155F0", Offset = "0x15155F0", VA = "0x15155F0")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0x151561C", Offset = "0x151561C", VA = "0x151561C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0x1515620", Offset = "0x1515620", VA = "0x1515620", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0x15156D4", Offset = "0x15156D4", VA = "0x15156D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200015D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57878C", Offset = "0x57878C")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000E3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007B1")]
			[Address(RVA = "0x1515AE4", Offset = "0x1515AE4", VA = "0x1515AE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007B3")]
			[Address(RVA = "0x1515B2C", Offset = "0x1515B2C", VA = "0x1515B2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0x15159C8", Offset = "0x15159C8", VA = "0x15159C8")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x60007AF")]
		[Address(RVA = "0x15159F4", Offset = "0x15159F4", VA = "0x15159F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007B0")]
		[Address(RVA = "0x15159F8", Offset = "0x15159F8", VA = "0x15159F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0x1515AEC", Offset = "0x1515AEC", VA = "0x1515AEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200015E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57879C", Offset = "0x57879C")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000E5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007B7")]
			[Address(RVA = "0x15157F8", Offset = "0x15157F8", VA = "0x15157F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007B9")]
			[Address(RVA = "0x1515840", Offset = "0x1515840", VA = "0x1515840", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0x151571C", Offset = "0x151571C", VA = "0x151571C")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0x1515748", Offset = "0x1515748", VA = "0x1515748", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0x151574C", Offset = "0x151574C", VA = "0x151574C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0x1515800", Offset = "0x1515800", VA = "0x1515800", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200015F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5787AC", Offset = "0x5787AC")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000E7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007BD")]
			[Address(RVA = "0x1515DD8", Offset = "0x1515DD8", VA = "0x1515DD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007BF")]
			[Address(RVA = "0x1515E20", Offset = "0x1515E20", VA = "0x1515E20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0x1515CC4", Offset = "0x1515CC4", VA = "0x1515CC4")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0x1515CF0", Offset = "0x1515CF0", VA = "0x1515CF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0x1515CF4", Offset = "0x1515CF4", VA = "0x1515CF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0x1515DE0", Offset = "0x1515DE0", VA = "0x1515DE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000160")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5787BC", Offset = "0x5787BC")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000E9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007C3")]
			[Address(RVA = "0x1515978", Offset = "0x1515978", VA = "0x1515978", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007C5")]
			[Address(RVA = "0x15159C0", Offset = "0x15159C0", VA = "0x15159C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0x1515848", Offset = "0x1515848", VA = "0x1515848")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0x1515874", Offset = "0x1515874", VA = "0x1515874", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0x1515878", Offset = "0x1515878", VA = "0x1515878", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0x1515980", Offset = "0x1515980", VA = "0x1515980", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C418", Offset = "0x57C418")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C450", Offset = "0x57C450")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C488", Offset = "0x57C488")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C4C0", Offset = "0x57C4C0")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C4F8", Offset = "0x57C4F8")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C530", Offset = "0x57C530")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C568", Offset = "0x57C568")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C5A0", Offset = "0x57C5A0")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C5D8", Offset = "0x57C5D8")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C5E8", Offset = "0x57C5E8")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C620", Offset = "0x57C620")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C668", Offset = "0x57C668")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C678", Offset = "0x57C678")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C6B0", Offset = "0x57C6B0")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C6E8", Offset = "0x57C6E8")]
	public float AimCollisionRadius;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C720", Offset = "0x57C720")]
	public float AimCollisionHeight;

	[Token(Token = "0x170000D9")]
	public States CurrentState
	{
		[Token(Token = "0x6000766")]
		[Address(RVA = "0x1520AA0", Offset = "0x1520AA0", VA = "0x1520AA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x588F9C", Offset = "0x588F9C")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x6000767")]
		[Address(RVA = "0x1520AA8", Offset = "0x1520AA8", VA = "0x1520AA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x588FAC", Offset = "0x588FAC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000DA")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x600076B")]
		[Address(RVA = "0x1520CBC", Offset = "0x1520CBC", VA = "0x1520CBC")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x170000DB")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x600076C")]
		[Address(RVA = "0x1520CE4", Offset = "0x1520CE4", VA = "0x1520CE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x588FDC", Offset = "0x588FDC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600076D")]
		[Address(RVA = "0x1520CEC", Offset = "0x1520CEC", VA = "0x1520CEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x588FEC", Offset = "0x588FEC")]
		private set
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x6000768")]
		[Address(RVA = "0x1520AB0", Offset = "0x1520AB0", VA = "0x1520AB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x588FBC", Offset = "0x588FBC")]
		add
		{
		}
		[Token(Token = "0x6000769")]
		[Address(RVA = "0x1520B50", Offset = "0x1520B50", VA = "0x1520B50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x588FCC", Offset = "0x588FCC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x6000777")]
		[Address(RVA = "0x1521348", Offset = "0x1521348", VA = "0x1521348")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x589034", Offset = "0x589034")]
		add
		{
		}
		[Token(Token = "0x6000778")]
		[Address(RVA = "0x15213E8", Offset = "0x15213E8", VA = "0x15213E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x589044", Offset = "0x589044")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x600077A")]
		[Address(RVA = "0x1521488", Offset = "0x1521488", VA = "0x1521488")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5890BC", Offset = "0x5890BC")]
		add
		{
		}
		[Token(Token = "0x600077B")]
		[Address(RVA = "0x1521528", Offset = "0x1521528", VA = "0x1521528")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5890CC", Offset = "0x5890CC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x600077C")]
		[Address(RVA = "0x15215C8", Offset = "0x15215C8", VA = "0x15215C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5890DC", Offset = "0x5890DC")]
		add
		{
		}
		[Token(Token = "0x600077D")]
		[Address(RVA = "0x1521668", Offset = "0x1521668", VA = "0x1521668")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5890EC", Offset = "0x5890EC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x600077F")]
		[Address(RVA = "0x1521778", Offset = "0x1521778", VA = "0x1521778")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5890FC", Offset = "0x5890FC")]
		add
		{
		}
		[Token(Token = "0x6000780")]
		[Address(RVA = "0x1521818", Offset = "0x1521818", VA = "0x1521818")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58910C", Offset = "0x58910C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x6000782")]
		[Address(RVA = "0x1521938", Offset = "0x1521938", VA = "0x1521938")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x589184", Offset = "0x589184")]
		add
		{
		}
		[Token(Token = "0x6000783")]
		[Address(RVA = "0x15219D8", Offset = "0x15219D8", VA = "0x15219D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x589194", Offset = "0x589194")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x6000785")]
		[Address(RVA = "0x1521AF8", Offset = "0x1521AF8", VA = "0x1521AF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58920C", Offset = "0x58920C")]
		add
		{
		}
		[Token(Token = "0x6000786")]
		[Address(RVA = "0x1521B98", Offset = "0x1521B98", VA = "0x1521B98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58921C", Offset = "0x58921C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x6000788")]
		[Address(RVA = "0x1521CB8", Offset = "0x1521CB8", VA = "0x1521CB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x589294", Offset = "0x589294")]
		add
		{
		}
		[Token(Token = "0x6000789")]
		[Address(RVA = "0x1521D58", Offset = "0x1521D58", VA = "0x1521D58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5892A4", Offset = "0x5892A4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x600078B")]
		[Address(RVA = "0x1521E78", Offset = "0x1521E78", VA = "0x1521E78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58931C", Offset = "0x58931C")]
		add
		{
		}
		[Token(Token = "0x600078C")]
		[Address(RVA = "0x1521F18", Offset = "0x1521F18", VA = "0x1521F18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58932C", Offset = "0x58932C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000010")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x600078E")]
		[Address(RVA = "0x1522038", Offset = "0x1522038", VA = "0x1522038")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5893A4", Offset = "0x5893A4")]
		add
		{
		}
		[Token(Token = "0x600078F")]
		[Address(RVA = "0x15220D8", Offset = "0x15220D8", VA = "0x15220D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5893B4", Offset = "0x5893B4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000011")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x6000791")]
		[Address(RVA = "0x15221F8", Offset = "0x15221F8", VA = "0x15221F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58942C", Offset = "0x58942C")]
		add
		{
		}
		[Token(Token = "0x6000792")]
		[Address(RVA = "0x1522298", Offset = "0x1522298", VA = "0x1522298")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58943C", Offset = "0x58943C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x1520744", Offset = "0x1520744", VA = "0x1520744")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x1520768", Offset = "0x1520768", VA = "0x1520768")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x1520BF0", Offset = "0x1520BF0", VA = "0x1520BF0")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0x1520CF4", Offset = "0x1520CF4", VA = "0x1520CF4")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, [Out] RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0x1520F40", Offset = "0x1520F40", VA = "0x1520F40")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x588FFC", Offset = "0x588FFC")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x1520FFC", Offset = "0x1520FFC", VA = "0x1520FFC")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x15210FC", Offset = "0x15210FC", VA = "0x15210FC")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x152111C", Offset = "0x152111C", VA = "0x152111C")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x15211E0", Offset = "0x15211E0", VA = "0x15211E0")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x1521224", Offset = "0x1521224", VA = "0x1521224")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x1521290", Offset = "0x1521290", VA = "0x1521290", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x1521340", Offset = "0x1521340", VA = "0x1521340", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0x15212C0", Offset = "0x15212C0", VA = "0x15212C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x589054", Offset = "0x589054")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x1521708", Offset = "0x1521708", VA = "0x1521708")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x15218B8", Offset = "0x15218B8", VA = "0x15218B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58911C", Offset = "0x58911C")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x1521A78", Offset = "0x1521A78", VA = "0x1521A78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5891A4", Offset = "0x5891A4")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x1521C38", Offset = "0x1521C38", VA = "0x1521C38")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58922C", Offset = "0x58922C")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x1521DF8", Offset = "0x1521DF8", VA = "0x1521DF8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5892B4", Offset = "0x5892B4")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x1521FB8", Offset = "0x1521FB8", VA = "0x1521FB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58933C", Offset = "0x58933C")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x1522178", Offset = "0x1522178", VA = "0x1522178")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5893C4", Offset = "0x5893C4")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x1522338", Offset = "0x1522338", VA = "0x1522338")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x1522478", Offset = "0x1522478", VA = "0x1522478")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x15224AC", Offset = "0x15224AC", VA = "0x15224AC")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x1522574", Offset = "0x1522574", VA = "0x1522574")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x152266C", Offset = "0x152266C", VA = "0x152266C")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x2000161")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x14000012")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x60007C6")]
		[Address(RVA = "0x167754C", Offset = "0x167754C", VA = "0x167754C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58969C", Offset = "0x58969C")]
		add
		{
		}
		[Token(Token = "0x60007C7")]
		[Address(RVA = "0x16775EC", Offset = "0x16775EC", VA = "0x16775EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5896AC", Offset = "0x5896AC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000013")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x60007C8")]
		[Address(RVA = "0x167768C", Offset = "0x167768C", VA = "0x167768C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5896BC", Offset = "0x5896BC")]
		add
		{
		}
		[Token(Token = "0x60007C9")]
		[Address(RVA = "0x167772C", Offset = "0x167772C", VA = "0x167772C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5896CC", Offset = "0x5896CC")]
		remove
		{
		}
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x16777CC", Offset = "0x16777CC", VA = "0x16777CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x16778B8", Offset = "0x16778B8", VA = "0x16778B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x16778BC", Offset = "0x16778BC", VA = "0x16778BC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x1677930", Offset = "0x1677930", VA = "0x1677930")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x1677A54", Offset = "0x1677A54", VA = "0x1677A54")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x1677C3C", Offset = "0x1677C3C", VA = "0x1677C3C")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x1677E50", Offset = "0x1677E50", VA = "0x1677E50")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x2000162")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x16009A4", Offset = "0x16009A4", VA = "0x16009A4", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x1600A4C", Offset = "0x1600A4C", VA = "0x1600A4C", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60007D3")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x1600B3C", Offset = "0x1600B3C", VA = "0x1600B3C")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x2000163")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C828", Offset = "0x57C828")]
	public float Range;

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x1600B4C", Offset = "0x1600B4C", VA = "0x1600B4C", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0x1600C48", Offset = "0x1600C48", VA = "0x1600C48")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x2000164")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C860", Offset = "0x57C860")]
	public float Range;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C898", Offset = "0x57C898")]
	public float MinimumElevation;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C8D0", Offset = "0x57C8D0")]
	public float Gravity;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C908", Offset = "0x57C908")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57C908", Offset = "0x57C908")]
	public float AimVelocity;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C964", Offset = "0x57C964")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57C964", Offset = "0x57C964")]
	public float AimStep;

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x1600C58", Offset = "0x1600C58", VA = "0x1600C58", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x1600DE8", Offset = "0x1600DE8", VA = "0x1600DE8")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x2000165")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C9BC", Offset = "0x57C9BC")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x1600DFC", Offset = "0x1600DFC", VA = "0x1600DFC")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x1600F48", Offset = "0x1600F48", VA = "0x1600F48")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x1600F78", Offset = "0x1600F78", VA = "0x1600F78")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x1600FA8", Offset = "0x1600FA8", VA = "0x1600FA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x1601060", Offset = "0x1601060", VA = "0x1601060", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0x16010CC", Offset = "0x16010CC", VA = "0x16010CC", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0x1601134", Offset = "0x1601134", VA = "0x1601134")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x2000166")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C9F4", Offset = "0x57C9F4")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57CA04", Offset = "0x57CA04")]
	public Transform PositionIndicator;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57CA3C", Offset = "0x57CA3C")]
	public Transform OrientationIndicator;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57CA74", Offset = "0x57CA74")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x170000EB")]
	public bool IsValidDestination
	{
		[Token(Token = "0x60007E0")]
		[Address(RVA = "0x1601258", Offset = "0x1601258", VA = "0x1601258")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5896DC", Offset = "0x5896DC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007E1")]
		[Address(RVA = "0x1601260", Offset = "0x1601260", VA = "0x1601260")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5896EC", Offset = "0x5896EC")]
		private set
		{
		}
	}

	[Token(Token = "0x14000014")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x60007E6")]
		[Address(RVA = "0x1601424", Offset = "0x1601424", VA = "0x1601424")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5896FC", Offset = "0x5896FC")]
		add
		{
		}
		[Token(Token = "0x60007E7")]
		[Address(RVA = "0x16014C4", Offset = "0x16014C4", VA = "0x16014C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58970C", Offset = "0x58970C")]
		remove
		{
		}
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x160126C", Offset = "0x160126C", VA = "0x160126C")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x160130C", Offset = "0x160130C", VA = "0x160130C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0x16013E0", Offset = "0x16013E0", VA = "0x16013E0")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0x1601420", Offset = "0x1601420", VA = "0x1601420")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0x1601564", Offset = "0x1601564", VA = "0x1601564")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0x16015C8", Offset = "0x16015C8", VA = "0x16015C8")]
	public void Recycle()
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0x16015EC", Offset = "0x16015EC", VA = "0x16015EC", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x2000167")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x2000168")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5787CC", Offset = "0x5787CC")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x170000EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007F7")]
			[Address(RVA = "0x158208C", Offset = "0x158208C", VA = "0x158208C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007F9")]
			[Address(RVA = "0x15820D4", Offset = "0x15820D4", VA = "0x15820D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007F4")]
		[Address(RVA = "0x1581FC4", Offset = "0x1581FC4", VA = "0x1581FC4")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60007F5")]
		[Address(RVA = "0x1581FF0", Offset = "0x1581FF0", VA = "0x1581FF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007F6")]
		[Address(RVA = "0x1581FF4", Offset = "0x1581FF4", VA = "0x1581FF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007F8")]
		[Address(RVA = "0x1582094", Offset = "0x1582094", VA = "0x1582094", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000169")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5787DC", Offset = "0x5787DC")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x170000EE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007FD")]
			[Address(RVA = "0x1581F74", Offset = "0x1581F74", VA = "0x1581F74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007FF")]
			[Address(RVA = "0x1581FBC", Offset = "0x1581FBC", VA = "0x1581FBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0x1581EA8", Offset = "0x1581EA8", VA = "0x1581EA8")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0x1581ED4", Offset = "0x1581ED4", VA = "0x1581ED4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0x1581ED8", Offset = "0x1581ED8", VA = "0x1581ED8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x1581F7C", Offset = "0x1581F7C", VA = "0x1581F7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x16017F8", Offset = "0x16017F8", VA = "0x16017F8")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x16018D4", Offset = "0x16018D4", VA = "0x16018D4", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x1601934", Offset = "0x1601934", VA = "0x1601934", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x16019F4", Offset = "0x16019F4", VA = "0x16019F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58971C", Offset = "0x58971C")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x1601A74", Offset = "0x1601A74", VA = "0x1601A74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x589784", Offset = "0x589784")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60007F0")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x60007F1")]
	public abstract void GetAimData([Out] Ray aimRay);

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x1601AF4", Offset = "0x1601AF4", VA = "0x1601AF4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5897EC", Offset = "0x5897EC")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x1601B20", Offset = "0x1601B20", VA = "0x1601B20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5897FC", Offset = "0x5897FC")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x200016A")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CABC", Offset = "0x57CABC")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57CACC", Offset = "0x57CACC")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57CB04", Offset = "0x57CB04")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57CB3C", Offset = "0x57CB3C")]
	public bool FastTeleport;

	[Token(Token = "0x170000F0")]
	public Transform Pointer
	{
		[Token(Token = "0x6000800")]
		[Address(RVA = "0x1601B4C", Offset = "0x1601B4C", VA = "0x1601B4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5898AC", Offset = "0x5898AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000801")]
		[Address(RVA = "0x1601B54", Offset = "0x1601B54", VA = "0x1601B54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5898BC", Offset = "0x5898BC")]
		private set
		{
		}
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0x1601B5C", Offset = "0x1601B5C", VA = "0x1601B5C", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0x1601CAC", Offset = "0x1601CAC", VA = "0x1601CAC", Slot = "9")]
	public override void GetAimData([Out] Ray aimRay)
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0x1601D64", Offset = "0x1601D64", VA = "0x1601D64")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x200016B")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x200016C")]
	public enum InputModes
	{
		[Token(Token = "0x4000ABF")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4000AC0")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4000AC1")]
		ThumbstickTeleport,
		[Token(Token = "0x4000AC2")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x200016D")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4000AC4")]
		A,
		[Token(Token = "0x4000AC5")]
		B,
		[Token(Token = "0x4000AC6")]
		LeftTrigger,
		[Token(Token = "0x4000AC7")]
		LeftThumbstick,
		[Token(Token = "0x4000AC8")]
		RightTrigger,
		[Token(Token = "0x4000AC9")]
		RightThumbstick,
		[Token(Token = "0x4000ACA")]
		X,
		[Token(Token = "0x4000ACB")]
		Y
	}

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57CB74", Offset = "0x57CB74")]
	public InputModes InputMode;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57CBAC", Offset = "0x57CBAC")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57CBE4", Offset = "0x57CBE4")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57CC1C", Offset = "0x57CC1C")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000805")]
	[Address(RVA = "0x1601D68", Offset = "0x1601D68", VA = "0x1601D68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0x1601D6C", Offset = "0x1601D6C", VA = "0x1601D6C", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0x160213C", Offset = "0x160213C", VA = "0x160213C", Slot = "9")]
	public override void GetAimData([Out] Ray aimRay)
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0x16021FC", Offset = "0x16021FC", VA = "0x16021FC")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x200016E")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x200016F")]
	public enum OrientationModes
	{
		[Token(Token = "0x4000AD0")]
		HeadRelative,
		[Token(Token = "0x4000AD1")]
		ForwardFacing
	}

	[Token(Token = "0x2000170")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5787EC", Offset = "0x5787EC")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x170000F1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000815")]
			[Address(RVA = "0x15821BC", Offset = "0x15821BC", VA = "0x15821BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000817")]
			[Address(RVA = "0x1582204", Offset = "0x1582204", VA = "0x1582204", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0x15820DC", Offset = "0x15820DC", VA = "0x15820DC")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0x1582108", Offset = "0x1582108", VA = "0x1582108", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000814")]
		[Address(RVA = "0x158210C", Offset = "0x158210C", VA = "0x158210C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000816")]
		[Address(RVA = "0x15821C4", Offset = "0x15821C4", VA = "0x15821C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x6000809")]
	[Address(RVA = "0x16022F0", Offset = "0x16022F0", VA = "0x16022F0")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0x16023FC", Offset = "0x16023FC", VA = "0x16023FC")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0x1602404", Offset = "0x1602404", VA = "0x1602404", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0x1602450", Offset = "0x1602450", VA = "0x1602450", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0x1602498", Offset = "0x1602498", VA = "0x1602498")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5898CC", Offset = "0x5898CC")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600080E")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x600080F")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x1602518", Offset = "0x1602518", VA = "0x1602518")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0x16025D4", Offset = "0x16025D4", VA = "0x16025D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x589934", Offset = "0x589934")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000171")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x6000818")]
	[Address(RVA = "0x1602600", Offset = "0x1602600", VA = "0x1602600", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x1602604", Offset = "0x1602604", VA = "0x1602604", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x1602680", Offset = "0x1602680", VA = "0x1602680")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x2000172")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57CC54", Offset = "0x57CC54")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57CC8C", Offset = "0x57CC8C")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57CCC4", Offset = "0x57CCC4")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57CCFC", Offset = "0x57CCFC")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x1602684", Offset = "0x1602684", VA = "0x1602684", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x16026B0", Offset = "0x16026B0", VA = "0x16026B0", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x1602A58", Offset = "0x1602A58", VA = "0x1602A58")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x2000173")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57CD34", Offset = "0x57CD34")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57CD6C", Offset = "0x57CD6C")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57CDA4", Offset = "0x57CDA4")]
	public float RotateStickThreshold;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x600081E")]
	[Address(RVA = "0x1602A5C", Offset = "0x1602A5C", VA = "0x1602A5C", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x1602AA0", Offset = "0x1602AA0", VA = "0x1602AA0", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x1602E40", Offset = "0x1602E40", VA = "0x1602E40")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x2000174")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x1602E50", Offset = "0x1602E50", VA = "0x1602E50")]
	private void Start()
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x1602E54", Offset = "0x1602E54", VA = "0x1602E54")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x1602E5C", Offset = "0x1602E5C", VA = "0x1602E5C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0x1602F20", Offset = "0x1602F20", VA = "0x1602F20")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x1602F48", Offset = "0x1602F48", VA = "0x1602F48")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x2000175")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CDDC", Offset = "0x57CDDC")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x170000F3")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x6000826")]
		[Address(RVA = "0x1602F60", Offset = "0x1602F60", VA = "0x1602F60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x589994", Offset = "0x589994")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000827")]
		[Address(RVA = "0x1602F68", Offset = "0x1602F68", VA = "0x1602F68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5899A4", Offset = "0x5899A4")]
		private set
		{
		}
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x16009D8", Offset = "0x16009D8", VA = "0x16009D8", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x1600B08", Offset = "0x1600B08", VA = "0x1600B08", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x1602F70", Offset = "0x1602F70", VA = "0x1602F70")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5899B4", Offset = "0x5899B4")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x16010C0", Offset = "0x16010C0", VA = "0x16010C0", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x160112C", Offset = "0x160112C", VA = "0x160112C", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x1600B44", Offset = "0x1600B44", VA = "0x1600B44")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x2000176")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x2000177")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5787FC", Offset = "0x5787FC")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x170000F4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000839")]
			[Address(RVA = "0x15824DC", Offset = "0x15824DC", VA = "0x15824DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600083B")]
			[Address(RVA = "0x1582524", Offset = "0x1582524", VA = "0x1582524", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000836")]
		[Address(RVA = "0x158220C", Offset = "0x158220C", VA = "0x158220C")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0x1582238", Offset = "0x1582238", VA = "0x1582238", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000838")]
		[Address(RVA = "0x158223C", Offset = "0x158223C", VA = "0x158223C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600083A")]
		[Address(RVA = "0x15824E4", Offset = "0x15824E4", VA = "0x15824E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57CDEC", Offset = "0x57CDEC")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x4000AEB")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x160304C", Offset = "0x160304C", VA = "0x160304C")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x1603174", Offset = "0x1603174", VA = "0x1603174", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x16031A4", Offset = "0x16031A4", VA = "0x16031A4", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x16031D0", Offset = "0x16031D0", VA = "0x16031D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5899EC", Offset = "0x5899EC")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x1603250", Offset = "0x1603250", VA = "0x1603250", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x6000833")]
	protected abstract bool ConsiderTeleport(Vector3 start, Vector3 end);

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x1603270", Offset = "0x1603270", VA = "0x1603270", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x1603390", Offset = "0x1603390", VA = "0x1603390")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x589A54", Offset = "0x589A54")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000178")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x16033BC", Offset = "0x16033BC", VA = "0x16033BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x1603428", Offset = "0x1603428", VA = "0x1603428", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x1603520", Offset = "0x1603520", VA = "0x1603520", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x1603618", Offset = "0x1603618", VA = "0x1603618")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x589AB4", Offset = "0x589AB4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x160361C", Offset = "0x160361C", VA = "0x160361C")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x2000179")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57CE24", Offset = "0x57CE24")]
	public float LOSOffset;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57CE5C", Offset = "0x57CE5C")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x1603628", Offset = "0x1603628", VA = "0x1603628", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x1603834", Offset = "0x1603834", VA = "0x1603834")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x200017A")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x6000843")]
	[Address(RVA = "0x1603840", Offset = "0x1603840", VA = "0x1603840", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x1603938", Offset = "0x1603938", VA = "0x1603938")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x200017B")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x6000845")]
	[Address(RVA = "0x160393C", Offset = "0x160393C", VA = "0x160393C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x16039D0", Offset = "0x16039D0", VA = "0x16039D0", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000847")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x1603A60", Offset = "0x1603A60", VA = "0x1603A60")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x200017C")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x200017D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57880C", Offset = "0x57880C")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x170000F6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600084F")]
			[Address(RVA = "0x1582664", Offset = "0x1582664", VA = "0x1582664", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000851")]
			[Address(RVA = "0x15826AC", Offset = "0x15826AC", VA = "0x15826AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600084C")]
		[Address(RVA = "0x158252C", Offset = "0x158252C", VA = "0x158252C")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0x1582558", Offset = "0x1582558", VA = "0x1582558", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600084E")]
		[Address(RVA = "0x158255C", Offset = "0x158255C", VA = "0x158255C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000850")]
		[Address(RVA = "0x158266C", Offset = "0x158266C", VA = "0x158266C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57CE94", Offset = "0x57CE94")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57CE94", Offset = "0x57CE94")]
	public float TransitionDuration;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57CEEC", Offset = "0x57CEEC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57CEEC", Offset = "0x57CEEC")]
	public float TeleportDelay;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57CF40", Offset = "0x57CF40")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x1603A68", Offset = "0x1603A68", VA = "0x1603A68", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x1603A94", Offset = "0x1603A94", VA = "0x1603A94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x589AEC", Offset = "0x589AEC")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x1603B14", Offset = "0x1603B14", VA = "0x1603B14")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x200017E")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x6000852")]
	[Address(RVA = "0x1603CC0", Offset = "0x1603CC0", VA = "0x1603CC0", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0x1603CE0", Offset = "0x1603CE0", VA = "0x1603CE0")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x200017F")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x2000180")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57881C", Offset = "0x57881C")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x170000F8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600085A")]
			[Address(RVA = "0x1582810", Offset = "0x1582810", VA = "0x1582810", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600085C")]
			[Address(RVA = "0x1582858", Offset = "0x1582858", VA = "0x1582858", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000857")]
		[Address(RVA = "0x15826B4", Offset = "0x15826B4", VA = "0x15826B4")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0x15826E0", Offset = "0x15826E0", VA = "0x15826E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0x15826E4", Offset = "0x15826E4", VA = "0x15826E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0x1582818", Offset = "0x1582818", VA = "0x1582818", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57CF78", Offset = "0x57CF78")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57CF78", Offset = "0x57CF78")]
	public float TransitionDuration;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x1603CE8", Offset = "0x1603CE8", VA = "0x1603CE8", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x1603D14", Offset = "0x1603D14", VA = "0x1603D14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x589BA4", Offset = "0x589BA4")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x1603D94", Offset = "0x1603D94", VA = "0x1603D94")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x2000181")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x2000182")]
	public enum PlabackState
	{
		[Token(Token = "0x4000B1B")]
		Idle = 1,
		[Token(Token = "0x4000B1C")]
		Preparing,
		[Token(Token = "0x4000B1D")]
		Buffering,
		[Token(Token = "0x4000B1E")]
		Ready,
		[Token(Token = "0x4000B1F")]
		Ended
	}

	[Token(Token = "0x2000183")]
	public enum StereoMode
	{
		[Token(Token = "0x4000B21")]
		Unknown = -1,
		[Token(Token = "0x4000B22")]
		Mono,
		[Token(Token = "0x4000B23")]
		TopBottom,
		[Token(Token = "0x4000B24")]
		LeftRight,
		[Token(Token = "0x4000B25")]
		Mesh
	}

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getStereoModeMethodId;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr getWidthMethodId;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr getHeightMethodId;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x170000FA")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x600085D")]
		[Address(RVA = "0x15B0E84", Offset = "0x15B0E84", VA = "0x15B0E84")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x170000FB")]
	private static IntPtr Activity
	{
		[Token(Token = "0x600085E")]
		[Address(RVA = "0x15B11B4", Offset = "0x15B11B4", VA = "0x15B11B4")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x170000FC")]
	public static bool IsAvailable
	{
		[Token(Token = "0x600085F")]
		[Address(RVA = "0x15A8F9C", Offset = "0x15A8F9C", VA = "0x15A8F9C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000FD")]
	public static bool IsPlaying
	{
		[Token(Token = "0x6000860")]
		[Address(RVA = "0x15AA7D8", Offset = "0x15AA7D8", VA = "0x15AA7D8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000FE")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x6000861")]
		[Address(RVA = "0x15B1484", Offset = "0x15B1484", VA = "0x15B1484")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x170000FF")]
	public static long Duration
	{
		[Token(Token = "0x6000862")]
		[Address(RVA = "0x15AAA0C", Offset = "0x15AAA0C", VA = "0x15AAA0C")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000100")]
	public static StereoMode VideoStereoMode
	{
		[Token(Token = "0x6000863")]
		[Address(RVA = "0x15A95D4", Offset = "0x15A95D4", VA = "0x15A95D4")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x17000101")]
	public static int VideoWidth
	{
		[Token(Token = "0x6000864")]
		[Address(RVA = "0x15A939C", Offset = "0x15A939C", VA = "0x15A939C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000102")]
	public static int VideoHeight
	{
		[Token(Token = "0x6000865")]
		[Address(RVA = "0x15A94B8", Offset = "0x15A94B8", VA = "0x15A94B8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000103")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x6000866")]
		[Address(RVA = "0x15AA8F0", Offset = "0x15AA8F0", VA = "0x15AA8F0")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000867")]
		[Address(RVA = "0x15A9EB0", Offset = "0x15A9EB0", VA = "0x15A9EB0")]
		set
		{
		}
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0x15B15A0", Offset = "0x15B15A0", VA = "0x15B15A0")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0x15AADEC", Offset = "0x15AADEC", VA = "0x15AADEC")]
	public static void Stop()
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0x15A9AEC", Offset = "0x15A9AEC", VA = "0x15A9AEC")]
	public static void Play()
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x15A9C94", Offset = "0x15A9C94", VA = "0x15A9C94")]
	public static void Pause()
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x15AABDC", Offset = "0x15AABDC", VA = "0x15AABDC")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x15B17D4", Offset = "0x15B17D4", VA = "0x15B17D4")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0x15AA5E0", Offset = "0x15AA5E0", VA = "0x15AA5E0")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x2000184")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x14000015")]
	public event Action onButtonDown
	{
		[Token(Token = "0x6000870")]
		[Address(RVA = "0x7EEA28", Offset = "0x7EEA28", VA = "0x7EEA28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x589C5C", Offset = "0x589C5C")]
		add
		{
		}
		[Token(Token = "0x6000871")]
		[Address(RVA = "0x7EEAC8", Offset = "0x7EEAC8", VA = "0x7EEAC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x589C6C", Offset = "0x589C6C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x7EEB68", Offset = "0x7EEB68", VA = "0x7EEB68", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x7EEB7C", Offset = "0x7EEB7C", VA = "0x7EEB7C")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x2000185")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x2000186")]
	public enum ButtonType
	{
		[Token(Token = "0x4000B29")]
		Play,
		[Token(Token = "0x4000B2A")]
		Pause,
		[Token(Token = "0x4000B2B")]
		FastForward,
		[Token(Token = "0x4000B2C")]
		Rewind,
		[Token(Token = "0x4000B2D")]
		SkipForward,
		[Token(Token = "0x4000B2E")]
		SkipBack,
		[Token(Token = "0x4000B2F")]
		Stop
	}

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x17000104")]
	public ButtonType buttonType
	{
		[Token(Token = "0x6000874")]
		[Address(RVA = "0x15A1C94", Offset = "0x15A1C94", VA = "0x15A1C94")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x6000875")]
		[Address(RVA = "0x15A1C9C", Offset = "0x15A1C9C", VA = "0x15A1C9C")]
		set
		{
		}
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x15A1CC0", Offset = "0x15A1CC0", VA = "0x15A1CC0", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0x15A315C", Offset = "0x15A315C", VA = "0x15A315C")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x2000187")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x2000188")]
	public enum VideoShape
	{
		[Token(Token = "0x4000B44")]
		_360,
		[Token(Token = "0x4000B45")]
		_180,
		[Token(Token = "0x4000B46")]
		Quad
	}

	[Token(Token = "0x2000189")]
	public enum VideoStereo
	{
		[Token(Token = "0x4000B48")]
		Mono,
		[Token(Token = "0x4000B49")]
		TopBottom,
		[Token(Token = "0x4000B4A")]
		LeftRight,
		[Token(Token = "0x4000B4B")]
		BottomTop
	}

	[Token(Token = "0x200018A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57882C", Offset = "0x57882C")]
	private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x17000108")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600088E")]
			[Address(RVA = "0x157B680", Offset = "0x157B680", VA = "0x157B680", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000109")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000890")]
			[Address(RVA = "0x157B6C8", Offset = "0x157B6C8", VA = "0x157B6C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0x157B48C", Offset = "0x157B48C", VA = "0x157B48C")]
		[DebuggerHidden]
		public <Start>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x600088C")]
		[Address(RVA = "0x157B4B8", Offset = "0x157B4B8", VA = "0x157B4B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600088D")]
		[Address(RVA = "0x157B4BC", Offset = "0x157B4BC", VA = "0x157B4BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600088F")]
		[Address(RVA = "0x157B688", Offset = "0x157B688", VA = "0x157B688", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200018B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57883C", Offset = "0x57883C")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x6000891")]
		[Address(RVA = "0x157B394", Offset = "0x157B394", VA = "0x157B394")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x6000892")]
		[Address(RVA = "0x157B39C", Offset = "0x157B39C", VA = "0x157B39C")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D000", Offset = "0x57D000")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D010", Offset = "0x57D010")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D020", Offset = "0x57D020")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool AutoDetectStereoLayout;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool DisplayMono;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x17000105")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000878")]
		[Address(RVA = "0x15A8CB8", Offset = "0x15A8CB8", VA = "0x15A8CB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x589C7C", Offset = "0x589C7C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000879")]
		[Address(RVA = "0x15A8CC0", Offset = "0x15A8CC0", VA = "0x15A8CC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x589C8C", Offset = "0x589C8C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000106")]
	public long Duration
	{
		[Token(Token = "0x600087A")]
		[Address(RVA = "0x15A8CCC", Offset = "0x15A8CCC", VA = "0x15A8CCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x589C9C", Offset = "0x589C9C")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600087B")]
		[Address(RVA = "0x15A8CD4", Offset = "0x15A8CD4", VA = "0x15A8CD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x589CAC", Offset = "0x589CAC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000107")]
	public long PlaybackPosition
	{
		[Token(Token = "0x600087C")]
		[Address(RVA = "0x15A8CDC", Offset = "0x15A8CDC", VA = "0x15A8CDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x589CBC", Offset = "0x589CBC")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600087D")]
		[Address(RVA = "0x15A8CE4", Offset = "0x15A8CE4", VA = "0x15A8CE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x589CCC", Offset = "0x589CCC")]
		private set
		{
		}
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0x15A8CEC", Offset = "0x15A8CEC", VA = "0x15A8CEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0x15A900C", Offset = "0x15A900C", VA = "0x15A900C")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0x15A9070", Offset = "0x15A9070", VA = "0x15A9070")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0x15A96F0", Offset = "0x15A96F0", VA = "0x15A96F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x589CDC", Offset = "0x589CDC")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0x15A9770", Offset = "0x15A9770", VA = "0x15A9770")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x15A9A5C", Offset = "0x15A9A5C", VA = "0x15A9A5C")]
	public void Play()
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x15A9C08", Offset = "0x15A9C08", VA = "0x15A9C08")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0x15A9DB0", Offset = "0x15A9DB0", VA = "0x15A9DB0")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x15AA034", Offset = "0x15AA034", VA = "0x15AA034")]
	private void Update()
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x15AAB28", Offset = "0x15AAB28", VA = "0x15AAB28")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x15AAD60", Offset = "0x15AAD60", VA = "0x15AAD60")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x15AAF08", Offset = "0x15AAF08", VA = "0x15AAF08")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x15AAFFC", Offset = "0x15AAFFC", VA = "0x15AAFFC")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x200018C")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x200018D")]
	private enum PlaybackState
	{
		[Token(Token = "0x4000B68")]
		Playing,
		[Token(Token = "0x4000B69")]
		Paused,
		[Token(Token = "0x4000B6A")]
		Rewinding,
		[Token(Token = "0x4000B6B")]
		FastForwarding
	}

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x15AB00C", Offset = "0x15AB00C", VA = "0x15AB00C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x15AB368", Offset = "0x15AB368", VA = "0x15AB368")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0x15AB548", Offset = "0x15AB548", VA = "0x15AB548")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0x15AB684", Offset = "0x15AB684", VA = "0x15AB684")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0x15AB790", Offset = "0x15AB790", VA = "0x15AB790")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x15AB654", Offset = "0x15AB654", VA = "0x15AB654")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0x15AB7F8", Offset = "0x15AB7F8", VA = "0x15AB7F8")]
	private void Update()
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0x15AB254", Offset = "0x15AB254", VA = "0x15AB254")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0x15ABB5C", Offset = "0x15ABB5C", VA = "0x15ABB5C")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x200018E")]
public static class VectorUtil
{
	[Token(Token = "0x600089C")]
	[Address(RVA = "0x15BFF8C", Offset = "0x15BFF8C", VA = "0x15BFF8C")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x200018F")]
public class AppDeeplinkUI : MonoBehaviour
{
	[Token(Token = "0x4000B6C")]
	private const ulong UNITY_COMPANION_APP_ID = 3535750239844224uL;

	[Token(Token = "0x4000B6D")]
	private const ulong UNREAL_COMPANION_APP_ID = 4055411724486843uL;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform deeplinkAppId;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform deeplinkMessage;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform uiLaunchType;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform uiLaunchSource;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform uiDeepLinkMessage;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool inMenu;

	[Token(Token = "0x600089D")]
	[Address(RVA = "0x7E4EBC", Offset = "0x7E4EBC", VA = "0x7E4EBC")]
	private void Start()
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x7E52C0", Offset = "0x7E52C0", VA = "0x7E52C0")]
	private void Update()
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x7E554C", Offset = "0x7E554C", VA = "0x7E554C")]
	private void LaunchUnrealDeeplinkSample()
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x7E56BC", Offset = "0x7E56BC", VA = "0x7E56BC")]
	private void LaunchSelf()
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x7E5830", Offset = "0x7E5830", VA = "0x7E5830")]
	private void LaunchOtherApp()
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x7E59C8", Offset = "0x7E59C8", VA = "0x7E59C8")]
	public AppDeeplinkUI()
	{
	}
}
[Token(Token = "0x2000190")]
public class CustomDebugUI : MonoBehaviour
{
	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CustomDebugUI instance;

	[Token(Token = "0x4000B76")]
	private const BindingFlags privateFlags = BindingFlags.Instance | BindingFlags.NonPublic;

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0xA33FF4", Offset = "0xA33FF4", VA = "0xA33FF4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0xA34050", Offset = "0xA34050", VA = "0xA34050")]
	private void Start()
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0xA34054", Offset = "0xA34054", VA = "0xA34054")]
	private void Update()
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0xA34058", Offset = "0xA34058", VA = "0xA34058")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0xA342D0", Offset = "0xA342D0", VA = "0xA342D0")]
	public void RemoveFromCanvas(RectTransform element, int targetCanvas = 0)
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0xA34500", Offset = "0xA34500", VA = "0xA34500")]
	public CustomDebugUI()
	{
	}
}
[Token(Token = "0x2000191")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x7C9C6C", Offset = "0x7C9C6C", VA = "0x7C9C6C")]
	private void Start()
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x7CA180", Offset = "0x7CA180", VA = "0x7CA180")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x7CA240", Offset = "0x7CA240", VA = "0x7CA240")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x7CA4E0", Offset = "0x7CA4E0", VA = "0x7CA4E0")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x7CA5C8", Offset = "0x7CA5C8", VA = "0x7CA5C8")]
	private void Update()
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x7CA6B4", Offset = "0x7CA6B4", VA = "0x7CA6B4")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x7CA728", Offset = "0x7CA728", VA = "0x7CA728")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x7CA730", Offset = "0x7CA730", VA = "0x7CA730")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x589DA4", Offset = "0x589DA4")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x7CA79C", Offset = "0x7CA79C", VA = "0x7CA79C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x589DB4", Offset = "0x589DB4")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x7CA808", Offset = "0x7CA808", VA = "0x7CA808")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x589DC4", Offset = "0x589DC4")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x7CA874", Offset = "0x7CA874", VA = "0x7CA874")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x589DD4", Offset = "0x589DD4")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x2000192")]
public class AnalyticsUI : MonoBehaviour
{
	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x7E4CF4", Offset = "0x7E4CF4", VA = "0x7E4CF4")]
	public AnalyticsUI()
	{
	}
}
[Token(Token = "0x2000193")]
public class SampleUI : MonoBehaviour
{
	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform collectionButton;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform inputText;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform valueText;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool inMenu;

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x1536450", Offset = "0x1536450", VA = "0x1536450")]
	private void Start()
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x15364F4", Offset = "0x15364F4", VA = "0x15364F4")]
	private void Update()
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x15365E8", Offset = "0x15365E8", VA = "0x15365E8")]
	private string GetText()
	{
		return null;
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x1536648", Offset = "0x1536648", VA = "0x1536648")]
	public SampleUI()
	{
	}
}
[Token(Token = "0x2000194")]
public class StartCrashlytics : MonoBehaviour
{
	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x168AEBC", Offset = "0x168AEBC", VA = "0x168AEBC")]
	public StartCrashlytics()
	{
	}
}
[Token(Token = "0x2000195")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x2000196")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57885C", Offset = "0x57885C")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x1700010A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008C1")]
			[Address(RVA = "0x15140EC", Offset = "0x15140EC", VA = "0x15140EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008C3")]
			[Address(RVA = "0x1514134", Offset = "0x1514134", VA = "0x1514134", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0x1513F70", Offset = "0x1513F70", VA = "0x1513F70")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0x1513F9C", Offset = "0x1513F9C", VA = "0x1513F9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0x1513FA0", Offset = "0x1513FA0", VA = "0x1513FA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0x15140F4", Offset = "0x15140F4", VA = "0x15140F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x169F5B0", Offset = "0x169F5B0", VA = "0x169F5B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x169F6DC", Offset = "0x169F6DC", VA = "0x169F6DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x169F65C", Offset = "0x169F65C", VA = "0x169F65C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x589DE4", Offset = "0x589DE4")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x169F898", Offset = "0x169F898", VA = "0x169F898")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x2000197")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57D050", Offset = "0x57D050")]
	public int SubdivisionsU;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57D06C", Offset = "0x57D06C")]
	public int SubdivisionsV;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x851C2C", Offset = "0x851C2C", VA = "0x851C2C")]
	private void Update()
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x852678", Offset = "0x852678", VA = "0x852678")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x2000198")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x1700010C")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x60008C6")]
		[Address(RVA = "0x151FFAC", Offset = "0x151FFAC", VA = "0x151FFAC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x1520000", Offset = "0x1520000", VA = "0x1520000")]
	public void Start()
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x1520408", Offset = "0x1520408", VA = "0x1520408")]
	public void Update()
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x15204FC", Offset = "0x15204FC", VA = "0x15204FC")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x589E9C", Offset = "0x589E9C")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x60008CA")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60008CB")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x60008CC")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x60008CD")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x60008CE")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x60008CF")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x60008D0")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x60008D1")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x1520568", Offset = "0x1520568", VA = "0x1520568")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x15205AC", Offset = "0x15205AC", VA = "0x15205AC")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x152061C", Offset = "0x152061C", VA = "0x152061C")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x152078C", Offset = "0x152078C", VA = "0x152078C")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x1520870", Offset = "0x1520870", VA = "0x1520870")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x1520300", Offset = "0x1520300", VA = "0x1520300")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x1520938", Offset = "0x1520938", VA = "0x1520938")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x15209A0", Offset = "0x15209A0", VA = "0x15209A0")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x1520A98", Offset = "0x1520A98", VA = "0x1520A98")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x2000199")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x57887C", Offset = "0x57887C")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x200019A")]
	public enum DrawMode
	{
		[Token(Token = "0x4000BA5")]
		Opaque,
		[Token(Token = "0x4000BA6")]
		OpaqueWithClip,
		[Token(Token = "0x4000BA7")]
		TransparentDefaultAlpha,
		[Token(Token = "0x4000BA8")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x1700010D")]
	public bool overlayEnabled
	{
		[Token(Token = "0x60008E1")]
		[Address(RVA = "0x16CC7E0", Offset = "0x16CC7E0", VA = "0x16CC7E0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60008E2")]
		[Address(RVA = "0x16CC87C", Offset = "0x16CC87C", VA = "0x16CC87C")]
		set
		{
		}
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x16CB24C", Offset = "0x16CB24C", VA = "0x16CB24C")]
	private void Start()
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x16CBE30", Offset = "0x16CBE30", VA = "0x16CBE30")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x16CBEB8", Offset = "0x16CBEB8", VA = "0x16CBEB8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x16CBFA8", Offset = "0x16CBFA8", VA = "0x16CBFA8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x16CC098", Offset = "0x16CC098", VA = "0x16CC098", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0x16CC2B8", Offset = "0x16CC2B8", VA = "0x16CC2B8")]
	private void Update()
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x16CC948", Offset = "0x16CC948", VA = "0x16CC948")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x200019B")]
public class AugmentedObject : MonoBehaviour
{
	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform shadow;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool groundShadow;

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x7E59E0", Offset = "0x7E59E0", VA = "0x7E59E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x7E5BC8", Offset = "0x7E5BC8", VA = "0x7E5BC8")]
	private void Update()
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x7E5D50", Offset = "0x7E5D50", VA = "0x7E5D50")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x7E5D58", Offset = "0x7E5D58", VA = "0x7E5D58")]
	public void Release()
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x7E5D40", Offset = "0x7E5D40", VA = "0x7E5D40")]
	private void ToggleShadowType()
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x7E5D60", Offset = "0x7E5D60", VA = "0x7E5D60")]
	public AugmentedObject()
	{
	}
}
[Token(Token = "0x200019C")]
public class BrushController : MonoBehaviour
{
	[Token(Token = "0x200019D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5788E4", Offset = "0x5788E4")]
	private sealed class <FadeCameraClearColor>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeTime;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color newColor;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__2;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <currentColor>5__3;

		[Token(Token = "0x1700010E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008F5")]
			[Address(RVA = "0x1503E18", Offset = "0x1503E18", VA = "0x1503E18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008F7")]
			[Address(RVA = "0x1503E60", Offset = "0x1503E60", VA = "0x1503E60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0x1503CE8", Offset = "0x1503CE8", VA = "0x1503CE8")]
		[DebuggerHidden]
		public <FadeCameraClearColor>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0x1503D14", Offset = "0x1503D14", VA = "0x1503D14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0x1503D18", Offset = "0x1503D18", VA = "0x1503D18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0x1503E20", Offset = "0x1503E20", VA = "0x1503E20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200019E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5788F4", Offset = "0x5788F4")]
	private sealed class <FadeSphere>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BrushController <>4__this;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool disableOnFinish;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x17000110")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008FB")]
			[Address(RVA = "0x1504018", Offset = "0x1504018", VA = "0x1504018", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000111")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008FD")]
			[Address(RVA = "0x1504060", Offset = "0x1504060", VA = "0x1504060", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0x1503E68", Offset = "0x1503E68", VA = "0x1503E68")]
		[DebuggerHidden]
		public <FadeSphere>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0x1503E94", Offset = "0x1503E94", VA = "0x1503E94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0x1503E98", Offset = "0x1503E98", VA = "0x1503E98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0x1504020", Offset = "0x1504020", VA = "0x1504020", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PassthroughBrush brush;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer backgroundSphere;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator grabRoutine;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator releaseRoutine;

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x7EA65C", Offset = "0x7EA65C", VA = "0x7EA65C")]
	private void Start()
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x7EA930", Offset = "0x7EA930", VA = "0x7EA930")]
	private void Update()
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0x7EA98C", Offset = "0x7EA98C", VA = "0x7EA98C")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x7EAB0C", Offset = "0x7EAB0C", VA = "0x7EAB0C")]
	public void Release()
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0x7EABE0", Offset = "0x7EABE0", VA = "0x7EABE0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x589ED4", Offset = "0x589ED4")]
	private IEnumerator FadeCameraClearColor(Color newColor, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0x7EAA48", Offset = "0x7EAA48", VA = "0x7EAA48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x589F3C", Offset = "0x589F3C")]
	private IEnumerator FadeSphere(Color newColor, float fadeTime, bool disableOnFinish = false)
	{
		return null;
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0x7EAC7C", Offset = "0x7EAC7C", VA = "0x7EAC7C")]
	public BrushController()
	{
	}
}
[Token(Token = "0x200019F")]
public class EnableUnpremultipliedAlpha : MonoBehaviour
{
	[Token(Token = "0x60008FE")]
	[Address(RVA = "0x7D5A6C", Offset = "0x7D5A6C", VA = "0x7D5A6C")]
	private void Start()
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x7D5ACC", Offset = "0x7D5ACC", VA = "0x7D5ACC")]
	public EnableUnpremultipliedAlpha()
	{
	}
}
[Token(Token = "0x20001A0")]
public class Flashlight : MonoBehaviour
{
	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject lightVolume;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light spotlight;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject bulbGlow;

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x7B27A0", Offset = "0x7B27A0", VA = "0x7B27A0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x7B28D4", Offset = "0x7B28D4", VA = "0x7B28D4")]
	public void ToggleFlashlight()
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x7B2968", Offset = "0x7B2968", VA = "0x7B2968")]
	public void EnableFlashlight(bool doEnable)
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x7B29D0", Offset = "0x7B29D0", VA = "0x7B29D0")]
	public Flashlight()
	{
	}
}
[Token(Token = "0x20001A1")]
public class FlashlightController : MonoBehaviour
{
	[Token(Token = "0x20001A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578904", Offset = "0x578904")]
	private sealed class <FadeLighting>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlashlightController <>4__this;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float sceneLightIntensity;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <currentLight>5__4;

		[Token(Token = "0x17000112")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000910")]
			[Address(RVA = "0x151150C", Offset = "0x151150C", VA = "0x151150C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000113")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000912")]
			[Address(RVA = "0x1511554", Offset = "0x1511554", VA = "0x1511554", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600090D")]
		[Address(RVA = "0x1511308", Offset = "0x1511308", VA = "0x1511308")]
		[DebuggerHidden]
		public <FadeLighting>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600090E")]
		[Address(RVA = "0x1511334", Offset = "0x1511334", VA = "0x1511334", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600090F")]
		[Address(RVA = "0x1511338", Offset = "0x1511338", VA = "0x1511338", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000911")]
		[Address(RVA = "0x1511514", Offset = "0x1511514", VA = "0x1511514", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light sceneLight;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform flashlightRoot;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 localPosition;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion localRotation;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh infoText;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GrabObject externalController;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OVRSkeleton[] skeletons;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVRHand[] hands;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int handIndex;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool pinching;

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x7B29D8", Offset = "0x7B29D8", VA = "0x7B29D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x7B2CFC", Offset = "0x7B2CFC", VA = "0x7B2CFC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x7B304C", Offset = "0x7B304C", VA = "0x7B304C")]
	private void FindHands()
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0x7B339C", Offset = "0x7B339C", VA = "0x7B339C")]
	private void AlignWithHand(OVRHand hand, OVRSkeleton skeleton)
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0x7B3688", Offset = "0x7B3688", VA = "0x7B3688")]
	private void AlignWithController(OVRInput.Controller controller)
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0x7B377C", Offset = "0x7B377C", VA = "0x7B377C")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0x7B3950", Offset = "0x7B3950", VA = "0x7B3950")]
	public void Release()
	{
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0x7B3894", Offset = "0x7B3894", VA = "0x7B3894")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58A044", Offset = "0x58A044")]
	private IEnumerator FadeLighting(Color newColor, float sceneLightIntensity, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0x7B3A38", Offset = "0x7B3A38", VA = "0x7B3A38")]
	public FlashlightController()
	{
	}
}
[Token(Token = "0x20001A3")]
public class GrabObject : MonoBehaviour
{
	[Token(Token = "0x20001A4")]
	public enum ManipulationType
	{
		[Token(Token = "0x4000BDD")]
		Default,
		[Token(Token = "0x4000BDE")]
		ForcedHand,
		[Token(Token = "0x4000BDF")]
		DollyHand,
		[Token(Token = "0x4000BE0")]
		DollyAttached,
		[Token(Token = "0x4000BE1")]
		HorizontalScaled,
		[Token(Token = "0x4000BE2")]
		VerticalScaled,
		[Token(Token = "0x4000BE3")]
		Menu
	}

	[Token(Token = "0x20001A5")]
	public delegate void GrabbedObject(OVRInput.Controller grabHand);

	[Token(Token = "0x20001A6")]
	public delegate void ReleasedObject();

	[Token(Token = "0x20001A7")]
	public delegate void SetCursorPosition(Vector3 cursorPosition);

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x57D0F8", Offset = "0x57D0F8")]
	public string ObjectName;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x57D108", Offset = "0x57D108")]
	public string ObjectInstructions;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ManipulationType objectManipulationType;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool showLaserWhileGrabbed;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Quaternion grabbedRotation;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GrabbedObject GrabbedObjectDelegate;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ReleasedObject ReleasedObjectDelegate;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SetCursorPosition CursorPositionDelegate;

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x7F7A7C", Offset = "0x7F7A7C", VA = "0x7F7A7C")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0x7F7AD8", Offset = "0x7F7AD8", VA = "0x7F7AD8")]
	public void Release()
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0x7F7AEC", Offset = "0x7F7AEC", VA = "0x7F7AEC")]
	public void CursorPos(Vector3 cursorPos)
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x7F7B00", Offset = "0x7F7B00", VA = "0x7F7B00")]
	public GrabObject()
	{
	}
}
[Token(Token = "0x20001A8")]
public class HandMeshMask : MonoBehaviour
{
	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSkeleton referenceHand;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material maskMaterial;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57D128", Offset = "0x57D128")]
	public int radialDivisions;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57D160", Offset = "0x57D160")]
	public float borderSize;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57D198", Offset = "0x57D198")]
	public float fingerTaper;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57D1D0", Offset = "0x57D1D0")]
	public float fingerTipLength;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57D208", Offset = "0x57D208")]
	public float webOffset;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float handScale;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject maskMeshObject;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Mesh maskMesh;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] handVertices;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2[] handUVs;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color32[] handColors;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int[] handTriangles;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int vertCounter;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int triCounter;

	[Token(Token = "0x6000923")]
	[Address(RVA = "0x169B11C", Offset = "0x169B11C", VA = "0x169B11C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0x169B324", Offset = "0x169B324", VA = "0x169B324")]
	private void Update()
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0x169B530", Offset = "0x169B530", VA = "0x169B530")]
	private void CreateHandMesh()
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0x169BB88", Offset = "0x169BB88", VA = "0x169BB88")]
	private void AddKnuckleMesh(int knuckleVerts, float point1scale, float point2scale, Vector3 point1, Vector3 point2)
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0x169C1C0", Offset = "0x169C1C0", VA = "0x169C1C0")]
	private void AddPalmMesh(int knuckleVerts)
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0x169E708", Offset = "0x169E708", VA = "0x169E708")]
	private void AddVertex(Vector3 position, Vector2 uv, Color color)
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0x169E7C4", Offset = "0x169E7C4", VA = "0x169E7C4")]
	public HandMeshMask()
	{
	}
}
[Token(Token = "0x20001A9")]
public class HandMeshUI : MonoBehaviour
{
	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SphereCollider[] knobs;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh[] readouts;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int rightHeldKnob;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int leftHeldKnob;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OVRSkeleton leftHand;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OVRSkeleton rightHand;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HandMeshMask leftMask;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HandMeshMask rightMask;

	[Token(Token = "0x600092A")]
	[Address(RVA = "0x169E7E8", Offset = "0x169E7E8", VA = "0x169E7E8")]
	private void Start()
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0x169EB20", Offset = "0x169EB20", VA = "0x169EB20")]
	private void Update()
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0x169E890", Offset = "0x169E890", VA = "0x169E890")]
	private void SetSliderValue(int sliderID, float value, bool isNormalized)
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0x169EEEC", Offset = "0x169EEEC", VA = "0x169EEEC")]
	private void CheckForHands()
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0x169F3CC", Offset = "0x169F3CC", VA = "0x169F3CC")]
	public HandMeshUI()
	{
	}
}
[Token(Token = "0x20001AA")]
public class ObjectManipulator : MonoBehaviour
{
	[Token(Token = "0x20001AB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578914", Offset = "0x578914")]
	private sealed class <StartDemo>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectManipulator <>4__this;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <fadeTime>5__3;

		[Token(Token = "0x17000114")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600093E")]
			[Address(RVA = "0x157D1FC", Offset = "0x157D1FC", VA = "0x157D1FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000115")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000940")]
			[Address(RVA = "0x157D244", Offset = "0x157D244", VA = "0x157D244", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0x157CF40", Offset = "0x157CF40", VA = "0x157CF40")]
		[DebuggerHidden]
		public <StartDemo>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0x157CF6C", Offset = "0x157CF6C", VA = "0x157CF6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0x157CF70", Offset = "0x157CF70", VA = "0x157CF70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600093F")]
		[Address(RVA = "0x157D204", Offset = "0x157D204", VA = "0x157D204", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRInput.Controller controller;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject hoverObject;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject grabObject;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float grabTime;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 localGrabOffset;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion localGrabRotation;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 camGrabPosition;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion camGrabRotation;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 handGrabPosition;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion handGrabRotation;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 cursorPosition;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float rotationOffset;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LineRenderer laser;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform objectInfo;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMesh objectNameLabel;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMesh objectInstructionsLabel;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image objectInfoBG;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject demoObjects;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public OVRPassthroughLayer passthrough;

	[Token(Token = "0x600092F")]
	[Address(RVA = "0x16D23D8", Offset = "0x16D23D8", VA = "0x16D23D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0x16D2618", Offset = "0x16D2618", VA = "0x16D2618")]
	private void Update()
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0x16D324C", Offset = "0x16D324C", VA = "0x16D324C")]
	private void GrabHoverObject(GameObject grbObj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0x16D3E58", Offset = "0x16D3E58", VA = "0x16D3E58")]
	private void ReleaseObject()
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0x16D2598", Offset = "0x16D2598", VA = "0x16D2598")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58A0FC", Offset = "0x58A0FC")]
	private IEnumerator StartDemo()
	{
		return null;
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0x16D2884", Offset = "0x16D2884", VA = "0x16D2884")]
	private void FindHoverObject(Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0x16D3510", Offset = "0x16D3510", VA = "0x16D3510")]
	private void ManipulateObject(GameObject obj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0x16D411C", Offset = "0x16D411C", VA = "0x16D411C")]
	private void ClampGrabOffset(Vector3 localOffset, float thumbY)
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0x16D41A8", Offset = "0x16D41A8", VA = "0x16D41A8")]
	private Vector3 ClampScale(Vector3 localScale, Vector2 thumb)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0x16D41D8", Offset = "0x16D41D8", VA = "0x16D41D8")]
	private void CheckForDominantHand()
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0x16D3FE4", Offset = "0x16D3FE4", VA = "0x16D3FE4")]
	private void AssignInstructions(GrabObject targetObject)
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0x16D42FC", Offset = "0x16D42FC", VA = "0x16D42FC")]
	public ObjectManipulator()
	{
	}
}
[Token(Token = "0x20001AC")]
public class OverlayPassthrough : MonoBehaviour
{
	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x6000941")]
	[Address(RVA = "0x15E7DB8", Offset = "0x15E7DB8", VA = "0x15E7DB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0x15E7F48", Offset = "0x15E7F48", VA = "0x15E7F48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0x15E8018", Offset = "0x15E8018", VA = "0x15E8018")]
	public OverlayPassthrough()
	{
	}
}
[Token(Token = "0x20001AD")]
public class PassthroughBrush : MonoBehaviour
{
	[Token(Token = "0x20001AE")]
	public enum BrushState
	{
		[Token(Token = "0x4000C20")]
		Idle,
		[Token(Token = "0x4000C21")]
		Inking
	}

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lineSegmentPrefab;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject lineContainer;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool forceActive;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LineRenderer currentLineSegment;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Vector3> inkPositions;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float minInkDist;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float strokeWidth;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float strokeLength;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private BrushState brushStatus;

	[Token(Token = "0x6000944")]
	[Address(RVA = "0x15EA20C", Offset = "0x15EA20C", VA = "0x15EA20C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0x15EA214", Offset = "0x15EA214", VA = "0x15EA214")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0x15EA4F4", Offset = "0x15EA4F4", VA = "0x15EA4F4")]
	private void StartLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0x15EA6EC", Offset = "0x15EA6EC", VA = "0x15EA6EC")]
	private void UpdateLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0x15EA894", Offset = "0x15EA894", VA = "0x15EA894")]
	public void ClearLines()
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0x15EA400", Offset = "0x15EA400", VA = "0x15EA400")]
	public void UndoInkLine()
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0x15EA970", Offset = "0x15EA970", VA = "0x15EA970")]
	public PassthroughBrush()
	{
	}
}
[Token(Token = "0x20001AF")]
public class PassthroughController : MonoBehaviour
{
	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x15EAA10", Offset = "0x15EAA10", VA = "0x15EAA10")]
	private void Start()
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x15EABA0", Offset = "0x15EABA0", VA = "0x15EABA0")]
	private void Update()
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x15EAD08", Offset = "0x15EAD08", VA = "0x15EAD08")]
	public PassthroughController()
	{
	}
}
[Token(Token = "0x20001B0")]
public class PassthroughProjectionSurface : MonoBehaviour
{
	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer quadOutline;

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x15EAD10", Offset = "0x15EAD10", VA = "0x15EAD10")]
	private void Start()
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x15EAF1C", Offset = "0x15EAF1C", VA = "0x15EAF1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x15EB0EC", Offset = "0x15EB0EC", VA = "0x15EB0EC")]
	public PassthroughProjectionSurface()
	{
	}
}
[Token(Token = "0x20001B1")]
public class PassthroughStyler : MonoBehaviour
{
	[Token(Token = "0x20001B2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578924", Offset = "0x578924")]
	private sealed class <FadeToCurrentStyle>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <posterize>5__5;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <edgeCol>5__6;

		[Token(Token = "0x17000116")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000963")]
			[Address(RVA = "0x157DF68", Offset = "0x157DF68", VA = "0x157DF68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000117")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000965")]
			[Address(RVA = "0x157DFB0", Offset = "0x157DFB0", VA = "0x157DFB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0x157DD84", Offset = "0x157DD84", VA = "0x157DD84")]
		[DebuggerHidden]
		public <FadeToCurrentStyle>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0x157DDB0", Offset = "0x157DDB0", VA = "0x157DDB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000962")]
		[Address(RVA = "0x157DDB4", Offset = "0x157DDB4", VA = "0x157DDB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0x157DF70", Offset = "0x157DF70", VA = "0x157DF70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001B3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578934", Offset = "0x578934")]
	private sealed class <FadeToDefaultPassthrough>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <posterize>5__5;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <edgeCol>5__6;

		[Token(Token = "0x17000118")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000969")]
			[Address(RVA = "0x157E1DC", Offset = "0x157E1DC", VA = "0x157E1DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000119")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600096B")]
			[Address(RVA = "0x157E224", Offset = "0x157E224", VA = "0x157E224", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0x157DFB8", Offset = "0x157DFB8", VA = "0x157DFB8")]
		[DebuggerHidden]
		public <FadeToDefaultPassthrough>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0x157DFE4", Offset = "0x157DFE4", VA = "0x157DFE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000968")]
		[Address(RVA = "0x157DFE8", Offset = "0x157DFE8", VA = "0x157DFE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600096A")]
		[Address(RVA = "0x157E1E4", Offset = "0x157E1E4", VA = "0x157E1E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator fadeIn;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator fadeOut;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RectTransform[] menuOptions;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform colorWheel;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D colorTexture;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 cursorPosition;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool settingColor;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color savedColor;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float savedBrightness;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float savedContrast;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float savedPosterize;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public CanvasGroup mainCanvas;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject[] compactObjects;

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x15EB0F4", Offset = "0x15EB0F4", VA = "0x15EB0F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x15EB42C", Offset = "0x15EB42C", VA = "0x15EB42C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x15EB68C", Offset = "0x15EB68C", VA = "0x15EB68C")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x15EB818", Offset = "0x15EB818", VA = "0x15EB818")]
	public void Release()
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0x15EB788", Offset = "0x15EB788", VA = "0x15EB788")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58A1B4", Offset = "0x58A1B4")]
	private IEnumerator FadeToCurrentStyle(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0x15EB910", Offset = "0x15EB910", VA = "0x15EB910")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58A21C", Offset = "0x58A21C")]
	private IEnumerator FadeToDefaultPassthrough(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0x15EB9A0", Offset = "0x15EB9A0", VA = "0x15EB9A0")]
	public void OnBrightnessChanged(float newValue)
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0x15EB9C4", Offset = "0x15EB9C4", VA = "0x15EB9C4")]
	public void OnContrastChanged(float newValue)
	{
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0x15EB9E8", Offset = "0x15EB9E8", VA = "0x15EB9E8")]
	public void OnPosterizeChanged(float newValue)
	{
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0x15EBA0C", Offset = "0x15EBA0C", VA = "0x15EBA0C")]
	public void OnAlphaChanged(float newValue)
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0x15EB3B0", Offset = "0x15EB3B0", VA = "0x15EB3B0")]
	private void ShowFullMenu(bool doShow)
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0x15EBA70", Offset = "0x15EBA70", VA = "0x15EBA70")]
	public void Cursor(Vector3 cP)
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0x15EBA7C", Offset = "0x15EBA7C", VA = "0x15EBA7C")]
	public void DoColorDrag(bool doDrag)
	{
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0x15EB444", Offset = "0x15EB444", VA = "0x15EB444")]
	public void GetColorFromWheel()
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0x15EBA88", Offset = "0x15EBA88", VA = "0x15EBA88")]
	public PassthroughStyler()
	{
	}
}
[Token(Token = "0x20001B4")]
public class PassthroughSurface : MonoBehaviour
{
	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x600096C")]
	[Address(RVA = "0x15EBACC", Offset = "0x15EBACC", VA = "0x15EBACC")]
	private void Start()
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0x15EBB8C", Offset = "0x15EBB8C", VA = "0x15EBB8C")]
	public PassthroughSurface()
	{
	}
}
[Token(Token = "0x20001B5")]
public class SceneSampler : MonoBehaviour
{
	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int currentSceneIndex;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject displayText;

	[Token(Token = "0x600096E")]
	[Address(RVA = "0x14D8A08", Offset = "0x14D8A08", VA = "0x14D8A08")]
	private void Awake()
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0x14D8A88", Offset = "0x14D8A88", VA = "0x14D8A88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0x14D8DAC", Offset = "0x14D8DAC", VA = "0x14D8DAC")]
	public SceneSampler()
	{
	}
}
[Token(Token = "0x20001B6")]
public class SelectivePassthroughExperience : MonoBehaviour
{
	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject leftMaskObject;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rightMaskObject;

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x14DB3A4", Offset = "0x14DB3A4", VA = "0x14DB3A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0x14DB82C", Offset = "0x14DB82C", VA = "0x14DB82C")]
	public SelectivePassthroughExperience()
	{
	}
}
[Token(Token = "0x20001B7")]
public class SPPquad : MonoBehaviour
{
	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRInput.Controller controllerHand;

	[Token(Token = "0x6000973")]
	[Address(RVA = "0x1534E88", Offset = "0x1534E88", VA = "0x1534E88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0x15350D0", Offset = "0x15350D0", VA = "0x15350D0")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0x1535128", Offset = "0x1535128", VA = "0x1535128")]
	public void Release()
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0x1535174", Offset = "0x1535174", VA = "0x1535174")]
	public SPPquad()
	{
	}
}
[Token(Token = "0x20001B8")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x20001B9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578944", Offset = "0x578944")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x600097A")]
		[Address(RVA = "0x1581770", Offset = "0x1581770", VA = "0x1581770")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0x1581778", Offset = "0x1581778", VA = "0x1581778")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x6000977")]
	[Address(RVA = "0x168AEC4", Offset = "0x168AEC4", VA = "0x168AEC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0x168B0D8", Offset = "0x168B0D8", VA = "0x168B0D8")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x168B1F0", Offset = "0x168B1F0", VA = "0x168B1F0")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x20001BA")]
public class BackButtonLogic : MonoBehaviour
{
	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool buttonPressed;

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x7E6958", Offset = "0x7E6958", VA = "0x7E6958")]
	private void Update()
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x7E6B48", Offset = "0x7E6B48", VA = "0x7E6B48")]
	public BackButtonLogic()
	{
	}
}
[Token(Token = "0x20001BB")]
public class MainMenuInteraction : MonoBehaviour
{
	[Token(Token = "0x600097E")]
	[Address(RVA = "0x1528398", Offset = "0x1528398", VA = "0x1528398")]
	public void OnLoadUI()
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x1528410", Offset = "0x1528410", VA = "0x1528410")]
	public void OnLoadRaw()
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x1528488", Offset = "0x1528488", VA = "0x1528488")]
	public void OnLoadEvent()
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x1528500", Offset = "0x1528500", VA = "0x1528500")]
	public void OnLoadAllInOne()
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x1528578", Offset = "0x1528578", VA = "0x1528578")]
	public MainMenuInteraction()
	{
	}
}
[Token(Token = "0x20001BC")]
public class RawInteraction : MonoBehaviour
{
	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Stack<Action> BackAction;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Action tempOnBack;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Action tutorial3trumOpen;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static bool enableClickDeck;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public static bool enableClickParuses;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static RawInteraction instance;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject BackSphere;

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x152F5D8", Offset = "0x152F5D8", VA = "0x152F5D8")]
	public void OnHoverEnter(Transform t)
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x152F998", Offset = "0x152F998", VA = "0x152F998")]
	public void OnHoverExit(Transform t)
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x152FA84", Offset = "0x152FA84", VA = "0x152FA84")]
	public void OnSelected(Transform t)
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x1530048", Offset = "0x1530048", VA = "0x1530048")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0x152F780", Offset = "0x152F780", VA = "0x152F780")]
	private bool InFight()
	{
		return default(bool);
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x15300E4", Offset = "0x15300E4", VA = "0x15300E4")]
	private void SwitchAmmunition()
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0x152FF54", Offset = "0x152FF54", VA = "0x152FF54")]
	private void BeforeOpenTrum()
	{
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x1530608", Offset = "0x1530608", VA = "0x1530608")]
	public RawInteraction()
	{
	}
}
[Token(Token = "0x20001BD")]
public class UIInteraction : MonoBehaviour
{
	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text outText;

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x1611958", Offset = "0x1611958", VA = "0x1611958")]
	public void OnButtonClicked()
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0x1611A14", Offset = "0x1611A14", VA = "0x1611A14")]
	public void OnSliderChanged(float value)
	{
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0x1611AEC", Offset = "0x1611AEC", VA = "0x1611AEC")]
	public void OnToggleChanged(bool value)
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0x1611BC8", Offset = "0x1611BC8", VA = "0x1611BC8")]
	public void OnClearText()
	{
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0x1611C84", Offset = "0x1611C84", VA = "0x1611C84")]
	public void OnBackToMenu()
	{
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0x1611CFC", Offset = "0x1611CFC", VA = "0x1611CFC")]
	public UIInteraction()
	{
	}
}
[Token(Token = "0x20001BE")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x578954", Offset = "0x578954")]
public class WaterSurfaceOverlayRenderer : MonoBehaviour, ILocalDisplacementRenderer, ILocalDisplacementMaskRenderer, ILocalFoamRenderer
{
	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x57D240", Offset = "0x57D240")]
	[SerializeField]
	private Material displacementAndNormalMaterial;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material displacementMaskMaterial;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Material foamMaterial;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer rendererComponent;

	[Token(Token = "0x1700011A")]
	public Material DisplacementAndNormalMaterial
	{
		[Token(Token = "0x6000995")]
		[Address(RVA = "0x16F1B74", Offset = "0x16F1B74", VA = "0x16F1B74")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011B")]
	public Material DisplacementMaskMaterial
	{
		[Token(Token = "0x6000996")]
		[Address(RVA = "0x16F1B7C", Offset = "0x16F1B7C", VA = "0x16F1B7C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011C")]
	public Material FoamMaterial
	{
		[Token(Token = "0x6000997")]
		[Address(RVA = "0x16F1B84", Offset = "0x16F1B84", VA = "0x16F1B84")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011D")]
	public Renderer Renderer
	{
		[Token(Token = "0x6000998")]
		[Address(RVA = "0x16F1B8C", Offset = "0x16F1B8C", VA = "0x16F1B8C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0x16F1924", Offset = "0x16F1924", VA = "0x16F1924")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0x16F1988", Offset = "0x16F1988", VA = "0x16F1988")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0x16F1AF0", Offset = "0x16F1AF0", VA = "0x16F1AF0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x16F1B94", Offset = "0x16F1B94", VA = "0x16F1B94", Slot = "4")]
	public void RenderLocalDisplacement(CommandBuffer commandBuffer, DynamicWaterCameraData overlays)
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0x16F1BC0", Offset = "0x16F1BC0", VA = "0x16F1BC0", Slot = "5")]
	public void RenderLocalMask(CommandBuffer commandBuffer, DynamicWaterCameraData overlays)
	{
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x16F1BEC", Offset = "0x16F1BEC", VA = "0x16F1BEC", Slot = "6")]
	public void RenderLocalFoam(CommandBuffer commandBuffer, DynamicWaterCameraData overlays)
	{
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x16F1C14", Offset = "0x16F1C14", VA = "0x16F1C14")]
	public WaterSurfaceOverlayRenderer()
	{
	}
}
[Token(Token = "0x20001BF")]
public class ExampleWheelController : MonoBehaviour
{
	[Token(Token = "0x20001C0")]
	private static class Uniforms
	{
		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly int _MotionAmount;
	}

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float acceleration;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer motionVectorRenderer;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody m_Rigidbody;

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x9BC278", Offset = "0x9BC278", VA = "0x9BC278")]
	private void Start()
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x9BC2F8", Offset = "0x9BC2F8", VA = "0x9BC2F8")]
	private void Update()
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0x9BC46C", Offset = "0x9BC46C", VA = "0x9BC46C")]
	public ExampleWheelController()
	{
	}
}
[Token(Token = "0x20001C1")]
[DisallowMultipleComponent]
public class Outline3d : MonoBehaviour
{
	[Token(Token = "0x20001C2")]
	public enum Mode
	{
		[Token(Token = "0x4000C72")]
		OutlineAll,
		[Token(Token = "0x4000C73")]
		OutlineVisible,
		[Token(Token = "0x4000C74")]
		OutlineHidden,
		[Token(Token = "0x4000C75")]
		OutlineAndSilhouette,
		[Token(Token = "0x4000C76")]
		SilhouetteOnly
	}

	[Serializable]
	[Token(Token = "0x20001C3")]
	private class ListVector3
	{
		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Vector3> data;

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0x157DB3C", Offset = "0x157DB3C", VA = "0x157DB3C")]
		public ListVector3()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5789CC", Offset = "0x5789CC")]
	private sealed class <>c
	{
		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Vector3, int, KeyValuePair<Vector3, int>> <>9__30_0;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<KeyValuePair<Vector3, int>, Vector3> <>9__30_1;

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x157DA3C", Offset = "0x157DA3C", VA = "0x157DA3C")]
		public <>c()
		{
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0x157DA44", Offset = "0x157DA44", VA = "0x157DA44")]
		internal KeyValuePair<Vector3, int> <SmoothNormals>b__30_0(Vector3 vertex, int index)
		{
			return default(KeyValuePair<Vector3, int>);
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x157DAD8", Offset = "0x157DAD8", VA = "0x157DAD8")]
		internal Vector3 <SmoothNormals>b__30_1(KeyValuePair<Vector3, int> pair)
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static HashSet<Mesh> registeredMeshes;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Mode outlineMode;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Color outlineColor;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57D2CC", Offset = "0x57D2CC")]
	private float outlineWidth;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57D30C", Offset = "0x57D30C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57D30C", Offset = "0x57D30C")]
	private bool precomputeOutline;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[HideInInspector]
	private List<Mesh> bakeKeys;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[HideInInspector]
	private List<ListVector3> bakeValues;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] renderers;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material outlineMaskMaterial;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material outlineFillMaterial;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool needsUpdate;

	[Token(Token = "0x1700011E")]
	public Mode OutlineMode
	{
		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x15E6548", Offset = "0x15E6548", VA = "0x15E6548")]
		get
		{
			return default(Mode);
		}
		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x15E6550", Offset = "0x15E6550", VA = "0x15E6550")]
		set
		{
		}
	}

	[Token(Token = "0x1700011F")]
	public Color OutlineColor
	{
		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x15E6560", Offset = "0x15E6560", VA = "0x15E6560")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x15E656C", Offset = "0x15E656C", VA = "0x15E656C")]
		set
		{
		}
	}

	[Token(Token = "0x17000120")]
	public float OutlineWidth
	{
		[Token(Token = "0x60009A5")]
		[Address(RVA = "0x15E6580", Offset = "0x15E6580", VA = "0x15E6580")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60009A6")]
		[Address(RVA = "0x15E6588", Offset = "0x15E6588", VA = "0x15E6588")]
		set
		{
		}
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0x15E6598", Offset = "0x15E6598", VA = "0x15E6598")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0x15E6A2C", Offset = "0x15E6A2C", VA = "0x15E6A2C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0x15E6B50", Offset = "0x15E6B50", VA = "0x15E6B50")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0x15E6E30", Offset = "0x15E6E30", VA = "0x15E6E30")]
	private void Update()
	{
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0x15E7000", Offset = "0x15E7000", VA = "0x15E7000")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0x15E7124", Offset = "0x15E7124", VA = "0x15E7124")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0x15E6C48", Offset = "0x15E6C48", VA = "0x15E6C48")]
	private void Bake()
	{
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x15E6744", Offset = "0x15E6744", VA = "0x15E6744")]
	private void LoadSmoothNormals()
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x15E71A0", Offset = "0x15E71A0", VA = "0x15E71A0")]
	private List<Vector3> SmoothNormals(Mesh mesh)
	{
		return null;
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x15E6E44", Offset = "0x15E6E44", VA = "0x15E6E44")]
	private void UpdateMaterialProperties()
	{
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0x15E7C2C", Offset = "0x15E7C2C", VA = "0x15E7C2C")]
	public Outline3d()
	{
	}
}
[Token(Token = "0x20001C5")]
public class SampleSettings
{
	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<string, Dictionary<string, object>> Data;

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x1535F84", Offset = "0x1535F84", VA = "0x1535F84")]
	public SampleSettings()
	{
	}
}
[Token(Token = "0x20001C6")]
public class AccumDmgRefresh : MonoBehaviour
{
	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x7DEBE0", Offset = "0x7DEBE0", VA = "0x7DEBE0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x7DEEEC", Offset = "0x7DEEEC", VA = "0x7DEEEC")]
	public static void Play_Discover_Music()
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x7DF044", Offset = "0x7DF044", VA = "0x7DF044")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x7DF338", Offset = "0x7DF338", VA = "0x7DF338")]
	public AccumDmgRefresh()
	{
	}
}
[Token(Token = "0x20001C7")]
public static class AdvCnfg
{
	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int LosePiaPerc;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int OpenSlotPrc1;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OpenSlotPrc2;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int OpenSlotPrc3;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static float MulPriceRepair;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static float MulPriceRepairPremium;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static float EnemyEscapeRadius;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static int PercentKill;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static float DistanceEtalon;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static float Time_Speed;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static int frac_points;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static int frac_points_allay;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static float MapSpeed_K;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static int Frac_town_access;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static int PortEnterPrice;
}
[Token(Token = "0x20001C8")]
public class Advertising : MonoBehaviour
{
	[Token(Token = "0x60009BF")]
	[Address(RVA = "0x7E27A8", Offset = "0x7E27A8", VA = "0x7E27A8")]
	public Advertising()
	{
	}
}
[Token(Token = "0x20001C9")]
public class Analytics : MonoBehaviour
{
	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool battleGoing;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool moralAlreadyDown;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool dataLoaded;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Analytics singletone;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isDisabledAnalytics;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SaveDataAnalitics data;

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x7E3A60", Offset = "0x7E3A60", VA = "0x7E3A60")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x7E3B70", Offset = "0x7E3B70", VA = "0x7E3B70")]
	private void OnProfileLoaded(object obj)
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x7E3BF0", Offset = "0x7E3BF0", VA = "0x7E3BF0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x7E3CBC", Offset = "0x7E3CBC", VA = "0x7E3CBC")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x7E3CC0", Offset = "0x7E3CC0", VA = "0x7E3CC0")]
	private bool IsDataLoaded()
	{
		return default(bool);
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x7E3D50", Offset = "0x7E3D50", VA = "0x7E3D50")]
	private void SendEvent(string eventName, [Optional] Dictionary<string, object> parameters, bool sendCommonStats = true)
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x7E3DA0", Offset = "0x7E3DA0", VA = "0x7E3DA0")]
	private void SendUnityEvent(string eventName, Dictionary<string, object> parameters, bool sendCommonStats)
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x7E3F48", Offset = "0x7E3F48", VA = "0x7E3F48")]
	public void EventTutorial(string step_name)
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x7E4048", Offset = "0x7E4048", VA = "0x7E4048")]
	public void EventQuestStarted(NewEvent quest)
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x7E41A0", Offset = "0x7E41A0", VA = "0x7E41A0")]
	public void EventQuestEnded(string quest_id)
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x7E429C", Offset = "0x7E429C", VA = "0x7E429C")]
	public void EventShopVisited()
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x7E42FC", Offset = "0x7E42FC", VA = "0x7E42FC")]
	public void EventShipAchived(string ship_id)
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x7E4428", Offset = "0x7E4428", VA = "0x7E4428")]
	public void EventOpenedMap(string map_id)
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x7E4524", Offset = "0x7E4524", VA = "0x7E4524")]
	public void EventMoraleDown(bool moralDown)
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x7E45AC", Offset = "0x7E45AC", VA = "0x7E45AC")]
	public void EventArtefactGet(string artefact_id)
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x7E46D8", Offset = "0x7E46D8", VA = "0x7E46D8")]
	public void EventProgressReset()
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x7E4770", Offset = "0x7E4770", VA = "0x7E4770")]
	public void EventSkipTutor()
	{
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x7E47D0", Offset = "0x7E47D0", VA = "0x7E47D0")]
	public void EventShopGoTO()
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x7E4830", Offset = "0x7E4830", VA = "0x7E4830")]
	public void EventShopYes()
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x7E4890", Offset = "0x7E4890", VA = "0x7E4890")]
	public void EventBannerStart()
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x7E48F0", Offset = "0x7E48F0", VA = "0x7E48F0")]
	public void EventShopFromButton()
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x7E4950", Offset = "0x7E4950", VA = "0x7E4950")]
	private void AmplitudeStartDay()
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x7E4B2C", Offset = "0x7E4B2C", VA = "0x7E4B2C")]
	public void IncArtefacts(string artefact_id)
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x7E4BD4", Offset = "0x7E4BD4", VA = "0x7E4BD4")]
	public void DataLoad()
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x7E4BE0", Offset = "0x7E4BE0", VA = "0x7E4BE0")]
	public void CheckForGoingBattle(bool battleNow)
	{
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x7E4CE8", Offset = "0x7E4CE8", VA = "0x7E4CE8")]
	public Analytics()
	{
	}
}
[Token(Token = "0x20001CA")]
public class Android_only : MonoBehaviour
{
	[Token(Token = "0x60009DB")]
	[Address(RVA = "0x7E4CFC", Offset = "0x7E4CFC", VA = "0x7E4CFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x7E4D7C", Offset = "0x7E4D7C", VA = "0x7E4D7C")]
	public Android_only()
	{
	}
}
[Token(Token = "0x20001CB")]
public class DisplayNameUniversalAttribute : Attribute
{
	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D3EC", Offset = "0x57D3EC")]
	private string <DisplayName>k__BackingField;

	[Token(Token = "0x17000121")]
	public string DisplayName
	{
		[Token(Token = "0x60009DD")]
		[Address(RVA = "0x7CC5BC", Offset = "0x7CC5BC", VA = "0x7CC5BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58A324", Offset = "0x58A324")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x7CC5C4", Offset = "0x7CC5C4", VA = "0x7CC5C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58A334", Offset = "0x58A334")]
		private set
		{
		}
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0x7CC5CC", Offset = "0x7CC5CC", VA = "0x7CC5CC")]
	public DisplayNameUniversalAttribute(string displayName)
	{
	}
}
[Token(Token = "0x20001CC")]
public class AutoDestroyPFX : MonoBehaviour
{
	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float waitSecond;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem ps;

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0x7E5D68", Offset = "0x7E5D68", VA = "0x7E5D68")]
	private void Start()
	{
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0x7E5DCC", Offset = "0x7E5DCC", VA = "0x7E5DCC")]
	private void Update()
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0x7E5ECC", Offset = "0x7E5ECC", VA = "0x7E5ECC")]
	public AutoDestroyPFX()
	{
	}
}
[Token(Token = "0x20001CD")]
public class AutoHideQwestList : MonoBehaviour
{
	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image[] hide;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool NoStartColor;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color[] StartColor;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text Texter;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color TexterStartColor;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SpriteRenderer Shadowr;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float AlphaSetter;

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0x7E5F04", Offset = "0x7E5F04", VA = "0x7E5F04")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0x7E60CC", Offset = "0x7E60CC", VA = "0x7E60CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0x7E6270", Offset = "0x7E6270", VA = "0x7E6270")]
	public AutoHideQwestList()
	{
	}
}
[Token(Token = "0x20001CE")]
public class Auto_camera : MonoBehaviour
{
	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Auto_camera singletone;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool FirstPerson;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float wasWaterX;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public H_camera MainCamera;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	public static bool Rakurs;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Rot_was;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float Rot_wasZ;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool instantFirstMove;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float TargRot;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static float CurRot;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static Vector3 MidPointSmooth;

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x7E628C", Offset = "0x7E628C", VA = "0x7E628C")]
	public static void SetRakurs(Camera setIt, float OnTime, Transform TargOn)
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x7E649C", Offset = "0x7E649C", VA = "0x7E649C")]
	public static void OffRakurs()
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x7E672C", Offset = "0x7E672C", VA = "0x7E672C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x7E67A0", Offset = "0x7E67A0", VA = "0x7E67A0")]
	private void Start()
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x7E6938", Offset = "0x7E6938", VA = "0x7E6938")]
	public Auto_camera()
	{
	}
}
[Token(Token = "0x20001CF")]
public class AWE_global : MonoBehaviour
{
	[Token(Token = "0x20001D0")]
	public enum SlotType
	{
		[Token(Token = "0x4000CA7")]
		NONE,
		[Token(Token = "0x4000CA8")]
		Parus,
		[Token(Token = "0x4000CA9")]
		Guns,
		[Token(Token = "0x4000CAA")]
		Case,
		[Token(Token = "0x4000CAB")]
		Zoom,
		[Token(Token = "0x4000CAC")]
		Artefact,
		[Token(Token = "0x4000CAD")]
		Canon,
		[Token(Token = "0x4000CAE")]
		Canonballs,
		[Token(Token = "0x4000CAF")]
		Flag,
		[Token(Token = "0x4000CB0")]
		Herb,
		[Token(Token = "0x4000CB1")]
		Team_Canon,
		[Token(Token = "0x4000CB2")]
		Team_Parus,
		[Token(Token = "0x4000CB3")]
		Team_Abordage,
		[Token(Token = "0x4000CB4")]
		Team_wunded,
		[Token(Token = "0x4000CB5")]
		Case_color,
		[Token(Token = "0x4000CB6")]
		decor_aura,
		[Token(Token = "0x4000CB7")]
		decor_water,
		[Token(Token = "0x4000CB8")]
		decor_patch,
		[Token(Token = "0x4000CB9")]
		decor_nose,
		[Token(Token = "0x4000CBA")]
		decor_bort,
		[Token(Token = "0x4000CBB")]
		SHIP,
		[Token(Token = "0x4000CBC")]
		Officer_Canon,
		[Token(Token = "0x4000CBD")]
		Officer_Parus,
		[Token(Token = "0x4000CBE")]
		Officer_Abordage,
		[Token(Token = "0x4000CBF")]
		XP_poin,
		[Token(Token = "0x4000CC0")]
		ALL,
		[Token(Token = "0x4000CC1")]
		ALL_decor,
		[Token(Token = "0x4000CC2")]
		Fraction
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0x7DA16C", Offset = "0x7DA16C", VA = "0x7DA16C")]
	public AWE_global()
	{
	}
}
[Token(Token = "0x20001D1")]
public class AWE_PlatformDependedMaterial : MonoBehaviour
{
	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material HQ_material;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material LQ_material;

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0x7DA0C0", Offset = "0x7DA0C0", VA = "0x7DA0C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0x7DA164", Offset = "0x7DA164", VA = "0x7DA164")]
	public AWE_PlatformDependedMaterial()
	{
	}
}
[Token(Token = "0x20001D2")]
public class BokehDirt : MonoBehaviour
{
	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image MyRenderer;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float Light_RotZ_For_Bokeh;

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0x7E9978", Offset = "0x7E9978", VA = "0x7E9978")]
	private void Update()
	{
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0x7E9B1C", Offset = "0x7E9B1C", VA = "0x7E9B1C")]
	public BokehDirt()
	{
	}
}
[Token(Token = "0x20001D3")]
public class BurnReturners : MonoBehaviour
{
	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float fracDmg;

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0x7ED288", Offset = "0x7ED288", VA = "0x7ED288")]
	private void Start()
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0x7ED28C", Offset = "0x7ED28C", VA = "0x7ED28C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0x7ED4E0", Offset = "0x7ED4E0", VA = "0x7ED4E0")]
	public BurnReturners()
	{
	}
}
[Token(Token = "0x20001D4")]
public class CanonBall : MonoBehaviour
{
	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Tovar CanonTovar;

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 FlyFrom;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform FlyTo;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 FlyToMiss;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool ToWater;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool ToWaterNoSoundOrFx;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject target;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Ship targetAsShip;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject HitFX_layer1;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject HitFX_layer2;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject HitFX_layer3;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float dst;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float FlyProc;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Ship Owner;

	[Token(Token = "0x17000122")]
	public int DamageCase
	{
		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x84F3B0", Offset = "0x84F3B0", VA = "0x84F3B0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0x84F4DC", Offset = "0x84F4DC", VA = "0x84F4DC")]
	private void Start()
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0x84F51C", Offset = "0x84F51C", VA = "0x84F51C")]
	private void Update()
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x8503CC", Offset = "0x8503CC", VA = "0x8503CC")]
	public CanonBall()
	{
	}
}
[Token(Token = "0x20001D5")]
public class CategoryHlight : MonoBehaviour
{
	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool showColour;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool gamepadHiLight;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject aligntdTo;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Image myself;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float timer;

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0x850C20", Offset = "0x850C20", VA = "0x850C20")]
	private void Start()
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0x850C84", Offset = "0x850C84", VA = "0x850C84")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0x850CB8", Offset = "0x850CB8", VA = "0x850CB8")]
	private void Update()
	{
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0x850F20", Offset = "0x850F20", VA = "0x850F20")]
	public CategoryHlight()
	{
	}
}
[Token(Token = "0x20001D6")]
public static class IOSCloudSaves
{
}
[Token(Token = "0x20001D7")]
public static class OldCloudSaves
{
	[Token(Token = "0x4000CDB")]
	private const char charForSplit = ';';

	[Token(Token = "0x4000CDC")]
	private const char charForSplitInside = '/';

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int index;

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0x15E05D0", Offset = "0x15E05D0", VA = "0x15E05D0")]
	public static bool LoadCloudData(string[] cloudDataSplit)
	{
		return default(bool);
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0x15E1054", Offset = "0x15E1054", VA = "0x15E1054")]
	public static void LoadBaseCloud(string cloudDataSplit, SaveDataProfile profile)
	{
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0x15E2E8C", Offset = "0x15E2E8C", VA = "0x15E2E8C")]
	private static void SetTutorCloud()
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0x15E20C4", Offset = "0x15E20C4", VA = "0x15E20C4")]
	public static void LoadQuestsCloud(string cloudDataSplit)
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0x15E2920", Offset = "0x15E2920", VA = "0x15E2920")]
	public static void LoadMaps(string[] cloudDataSplit)
	{
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0x15E2FC4", Offset = "0x15E2FC4", VA = "0x15E2FC4")]
	private static string GetDataFromStringArr(string[] stringArr)
	{
		return null;
	}
}
[Token(Token = "0x20001D8")]
public class ColossusAttack : SingletonMonoBehaviour<ColossusAttack>
{
	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int AttackCount;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float collosus_attack_timer;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float Collosus_Seconds_min;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float Collosus_Seconds_max;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string prefabID;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Colossus colosus;

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0x858C18", Offset = "0x858C18", VA = "0x858C18", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0x858D08", Offset = "0x858D08", VA = "0x858D08")]
	public void Preload()
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0x858E24", Offset = "0x858E24", VA = "0x858E24")]
	public void Unload()
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0x858EB4", Offset = "0x858EB4", VA = "0x858EB4")]
	public void PutCollosus(Vector3 coord)
	{
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0x858B6C", Offset = "0x858B6C", VA = "0x858B6C")]
	public void OnAttackFinish()
	{
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0x858FD8", Offset = "0x858FD8", VA = "0x858FD8")]
	public void StartAtack()
	{
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0x8594B8", Offset = "0x8594B8", VA = "0x8594B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0x859BD8", Offset = "0x859BD8", VA = "0x859BD8")]
	public ColossusAttack()
	{
	}
}
[Token(Token = "0x20001D9")]
public enum CommandTypes
{
	[Token(Token = "0x4000CE5")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57D43C", Offset = "0x57D43C")]
	None = 0,
	[Token(Token = "0x4000CE6")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57D474", Offset = "0x57D474")]
	WaitHours = 1,
	[Token(Token = "0x4000CE7")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57D4AC", Offset = "0x57D4AC")]
	IfHourInInterval = 3,
	[Token(Token = "0x4000CE8")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57D4E4", Offset = "0x57D4E4")]
	IfEnemyDestroyedInPreviousFight = 7,
	[Token(Token = "0x4000CE9")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57D51C", Offset = "0x57D51C")]
	ShowWindow = 9,
	[Token(Token = "0x4000CEA")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57D554", Offset = "0x57D554")]
	ChangeItemAmount = 11,
	[Token(Token = "0x4000CEB")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57D58C", Offset = "0x57D58C")]
	ChangeFactionReputation = 12,
	[Token(Token = "0x4000CEC")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57D5C4", Offset = "0x57D5C4")]
	TreasureLandGameplay = 13,
	[Token(Token = "0x4000CED")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57D5FC", Offset = "0x57D5FC")]
	IfBoardedInPreviousFight = 14,
	[Token(Token = "0x4000CEE")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57D634", Offset = "0x57D634")]
	ChangeItemAmountForWarehouse = 17,
	[Token(Token = "0x4000CEF")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57D66C", Offset = "0x57D66C")]
	IfHasItem = 19,
	[Token(Token = "0x4000CF0")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57D6A4", Offset = "0x57D6A4")]
	IfEventDisabled = 20,
	[Token(Token = "0x4000CF1")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57D6DC", Offset = "0x57D6DC")]
	IfDayInInterval = 21,
	[Token(Token = "0x4000CF2")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57D714", Offset = "0x57D714")]
	IfMonthInInterval = 22,
	[Token(Token = "0x4000CF3")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57D74C", Offset = "0x57D74C")]
	IfFactionReputationInInterval = 23,
	[Token(Token = "0x4000CF4")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57D784", Offset = "0x57D784")]
	IfItemEquipped = 24,
	[Token(Token = "0x4000CF5")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57D7BC", Offset = "0x57D7BC")]
	IfStatisticsReached = 25,
	[Token(Token = "0x4000CF6")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57D7F4", Offset = "0x57D7F4")]
	IfSkillLevelReached = 26,
	[Token(Token = "0x4000CF7")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57D82C", Offset = "0x57D82C")]
	IfDoneBoardings = 27,
	[Token(Token = "0x4000CF8")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57D864", Offset = "0x57D864")]
	IfDoneEnemyDestructions = 29,
	[Token(Token = "0x4000CF9")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57D89C", Offset = "0x57D89C")]
	IfDestroyedForts = 30,
	[Token(Token = "0x4000CFA")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57D8D4", Offset = "0x57D8D4")]
	EnableEvent = 31,
	[Token(Token = "0x4000CFB")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57D90C", Offset = "0x57D90C")]
	DisableEvent = 32,
	[Token(Token = "0x4000CFC")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57D944", Offset = "0x57D944")]
	LoadMap = 33,
	[Token(Token = "0x4000CFD")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57D97C", Offset = "0x57D97C")]
	Town = 34,
	[Token(Token = "0x4000CFE")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57D9B4", Offset = "0x57D9B4")]
	IfTownWarehouseHasItems = 35,
	[Token(Token = "0x4000CFF")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57D9EC", Offset = "0x57D9EC")]
	IfVisitOneTown = 36,
	[Token(Token = "0x4000D00")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57DA24", Offset = "0x57DA24")]
	IfVisitSomeTowns = 37,
	[Token(Token = "0x4000D01")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57DA5C", Offset = "0x57DA5C")]
	MakeNoteInJournal = 38,
	[Token(Token = "0x4000D02")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57DA94", Offset = "0x57DA94")]
	SetPriceInTown = 40,
	[Token(Token = "0x4000D03")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57DACC", Offset = "0x57DACC")]
	IfVisitArea = 41,
	[Token(Token = "0x4000D04")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57DB04", Offset = "0x57DB04")]
	IfLeaveArea = 42,
	[Token(Token = "0x4000D05")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57DB3C", Offset = "0x57DB3C")]
	IfVisitLandLocation = 44,
	[Token(Token = "0x4000D06")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57DB74", Offset = "0x57DB74")]
	CreateQuestPrefab = 45,
	[Token(Token = "0x4000D07")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57DBAC", Offset = "0x57DBAC")]
	WaitForNextScriptStep = 46,
	[Token(Token = "0x4000D08")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57DBE4", Offset = "0x57DBE4")]
	IfVisitAnyFractionTown = 47,
	[Token(Token = "0x4000D09")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57DC1C", Offset = "0x57DC1C")]
	IfShipCaseHPisLower = 48,
	[Token(Token = "0x4000D0A")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57DC54", Offset = "0x57DC54")]
	IfVisitTownWithOffer = 49,
	[Token(Token = "0x4000D0B")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57DC8C", Offset = "0x57DC8C")]
	Fight = 77,
	[Token(Token = "0x4000D0C")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57DCC4", Offset = "0x57DCC4")]
	IfVisitLocationInOpenWorld = 78,
	[Token(Token = "0x4000D0D")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57DCFC", Offset = "0x57DCFC")]
	RemoveAnyNoteFromJournal = 301,
	[Token(Token = "0x4000D0E")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57DD34", Offset = "0x57DD34")]
	GoToBeginning = 303,
	[Token(Token = "0x4000D0F")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57DD6C", Offset = "0x57DD6C")]
	Fort = 321,
	[Token(Token = "0x4000D10")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57DDA4", Offset = "0x57DDA4")]
	MultiChice = 350,
	[Token(Token = "0x4000D11")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57DDDC", Offset = "0x57DDDC")]
	EndQuest = 351,
	[Token(Token = "0x4000D12")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57DE14", Offset = "0x57DE14")]
	ShowChoiceWindow = 352,
	[Token(Token = "0x4000D13")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57DE4C", Offset = "0x57DE4C")]
	ShowWindowWithMultipleStrings = 353,
	[Token(Token = "0x4000D14")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57DE84", Offset = "0x57DE84")]
	ShowMultiOptionalWindow = 354,
	[Token(Token = "0x4000D15")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57DEBC", Offset = "0x57DEBC")]
	IfVisitAnyTown = 355,
	[Token(Token = "0x4000D16")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57DEF4", Offset = "0x57DEF4")]
	IfSpecialShipBoarded = 356,
	[Token(Token = "0x4000D17")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57DF2C", Offset = "0x57DF2C")]
	IfSpecialShipDestroyed = 357,
	[Token(Token = "0x4000D18")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57DF64", Offset = "0x57DF64")]
	RemoveSailsmans = 358,
	[Token(Token = "0x4000D19")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57DF9C", Offset = "0x57DF9C")]
	GoQuestLanding = 359,
	[Token(Token = "0x4000D1A")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57DFD4", Offset = "0x57DFD4")]
	MultiPhaseSeaBattle = 360,
	[Token(Token = "0x4000D1B")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57E00C", Offset = "0x57E00C")]
	GetAchievement = 361,
	[Token(Token = "0x4000D1C")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57E044", Offset = "0x57E044")]
	ChangeMoral = 362,
	[Token(Token = "0x4000D1D")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57E07C", Offset = "0x57E07C")]
	CheckAllInAllAmmount = 363,
	[Token(Token = "0x4000D1E")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57E0B4", Offset = "0x57E0B4")]
	ShowChoiceWinMessage = 364,
	[Token(Token = "0x4000D1F")]
	[AttributeAttribute(Name = "DisplayNameUniversalAttribute", RVA = "0x57E0EC", Offset = "0x57E0EC")]
	GoLandingArena = 365
}
[Token(Token = "0x20001DA")]
public class Compass : SingletonMonoBehaviour<Compass>
{
	[Token(Token = "0x20001DB")]
	private class CompassPoint : IComparable<CompassPoint>
	{
		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float distance;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject point;

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x1505488", Offset = "0x1505488", VA = "0x1505488")]
		public CompassPoint(float d, GameObject p)
		{
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x15054CC", Offset = "0x15054CC", VA = "0x15054CC", Slot = "4")]
		public int CompareTo(CompassPoint other)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject[] TownsPoints;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject[] Enemy;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject[] Allay;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject N;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject S;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject W;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject E;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<CompassPoint> NearestmapPoints;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int currentEnemies;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int currentAllies;

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0x859C30", Offset = "0x859C30", VA = "0x859C30")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0x85A508", Offset = "0x85A508", VA = "0x85A508")]
	private float ang_to_coord(float ang)
	{
		return default(float);
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0x859C34", Offset = "0x859C34", VA = "0x859C34")]
	public void CheckNearestPoints()
	{
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0x85A54C", Offset = "0x85A54C", VA = "0x85A54C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0x85B0A8", Offset = "0x85B0A8", VA = "0x85B0A8")]
	public Compass()
	{
	}
}
[Token(Token = "0x20001DC")]
public class ConfigAlert : MonoBehaviour
{
	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EquipSlot_new slotCheck;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EquipSlot_new slotCheck_OR;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EquipSlot_new slotCheck_OR2;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Image MyImage;

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0x85C314", Offset = "0x85C314", VA = "0x85C314")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0x85C378", Offset = "0x85C378", VA = "0x85C378")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0x85C678", Offset = "0x85C678", VA = "0x85C678")]
	public ConfigAlert()
	{
	}
}
[Token(Token = "0x20001DD")]
public class ConfigPanel : MonoBehaviour
{
	[Token(Token = "0x20001DE")]
	private enum DeckType
	{
		[Token(Token = "0x4000E21")]
		SAIL,
		[Token(Token = "0x4000E22")]
		BOARDING_DECK,
		[Token(Token = "0x4000E23")]
		GUN_DECK
	}

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image[] TotBufsBtns;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image[] TotBufsTimers;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject SlotDescribe;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private HorizontalLayoutGroup ResourcePanelMobileHLG;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float updateBuffsInterval;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject buyShopPartButton;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject townUpgradeBtn;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject townUpgradeBtnBack;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private SaveDataProfile profile;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject SelectorCONFIG;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject[] buttonsCONFIG;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int DamageAccumC;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int DamageAccumP;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioClip BuySound;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int WasShip;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public RectTransform Money_panel;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject Repair_PIASTRES;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject MoneyPlusIcon;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Alert AvailableQwestsCounter;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Alert AvailableTeamProblems;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Alert AvailableSkillPoint;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Alert AvailableShipAsSlot;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject Barelief1;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject Barelief2;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject bgArtefBt;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject shineArtefBt1;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject shineArtefBt2;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject shineArtefBt3;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject ArtefBt;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject MoneyOut;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject MoneyOutMobile;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject XpPointsParent;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Text XpPointsCount;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public HelpContentData TownButtonsHelpData;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public HelpContentData ShipControllingHelpData;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public HelpContentData ShipControllingHelpData_consoles;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public HelpContentData LandHelpData;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Button helpButtonMobile;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Button helpButtonConsoles;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private HelpContentData currentHelpDataMobile;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject Info_ship;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public InfoShipParamsMobile Info_ship_mobile;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject Close_In_describe;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Sprite OpenedPerk;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Sprite ClosedPerk;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Sprite NullSprite;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Sprite NullSprite_abord;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Sprite NullSprite_zoom;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Sprite NullSprite_parus;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Sprite NullSprite_cannon;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Sprite NullSprite_case;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Sprite NullSprite_artef;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Sprite NullSprite_parus_A;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Sprite NullSprite_cannon_A;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Sprite NullSprite_case_A;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public Sprite NullSprite_artef_A;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int __TrumExtension;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int __Mass;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static int __LootSearching;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int FlagIndex;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static int FracIndex;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int HerbIndex;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static int CaseColorIndex;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static int Decor_Index_Nose;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static int Decor_Index_Bort;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static int Decor_Index_Aura;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static int Decor_Index_Watr;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static int Decor_Index_Patch;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string __ShipName;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static int __SHIP_FROM_LIST;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public static int __TeamMAX;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static int __PrecissionOnUs;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public static int __Speed;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static int __Maneur;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public static int __ParusOpening;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static int __ArtefMagicMax;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static Tovar[] __ArtefTovarLink;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static float[] ArtefactACTIVATION;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static int[] Artef_perk_EnCost;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static int[] Artef_perk_Power;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static int[] Artef_perk_Culldown;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static int __TeamXP_pars;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public static int __TeamXP_case;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static int __ReqEffect_pars;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public static int __ReqEffect_case;

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static int __Def_pars;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public static int __Def_team;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static int __Def_case;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public static int __RepairCase;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public static int __RepairPars;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public static int __AbordReload;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static int __AbordDamage_min;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public static int __AbordDamage_max;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public static int __distance_addon;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public static int __CanonsShootCount;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public static int __ShootZone_Precis;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public static int __ShootZone_PrecisTime;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public static int __ShootZone_Wide;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public static int __ReloadSpeed;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public static int __Rotate_speed;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public static int __Rotate_limit;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public static int __ScanSpeed;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public static string __ScanPARAMS;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public static int ScanParamCnt;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public Text ___info_Tov_Gruzopod;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public Text ___info_Tov_Gruzopod_percent;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public Text ___info_SHIP_speed;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public Text ___info_SHIP_maneur;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public Text ___info_SHIP_parusOpen;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public Text ___info_SHIP_shootCount;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public Text ___info_SHIP_reloSpeed;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public Text ___info_SHIP_distance;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public Text ___info_SHIP_def_par;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public Text ___info_SHIP_def_abo;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public Text ___info_SHIP_def_case;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public Text ___info_SHIP_abordageDmg;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public Text ___info_SHIP_abordageRelo;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public Text ___info_SHIP_Precis;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public Text ___info_SHIP_PrecisTime;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public Text ___info_SHIP_Energy;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	[SerializeField]
	private Color Normal_text_PC;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	[SerializeField]
	private Color Normal_text_mobile;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public Color Greeny_text;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public Color Reddy_text;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public static int was___info_SHIP_speed;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public static int was___info_SHIP_maneur;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public static int was___info_SHIP_parusOpen;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public static int was___info_SHIP_shootCount;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public static int was___info_SHIP_reloSpeed;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public static int was___info_SHIP_distance;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public static int was___info_SHIP_def_par;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public static int was___info_SHIP_def_abo;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public static int was___info_SHIP_def_case;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public static float was___info_SHIP_abordageDmg;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public static int was___info_SHIP_abordageRelo;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public static int was___info_SHIP_precis;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public static int was___info_SHIP_precisTime;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public static int was___info_SHIP_energy;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public static int was___info_SHIP_trumExtension;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public static int was___info_SHIP_rotateLimit;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public static int was___info_SHIP_rotateSpeed;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public static int was___info_SHIP_shootZoneWide;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public static int was___info_SHIP_paruHP;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public static int was___info_SHIP_teamHP;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public static int was___info_SHIP_caseHP;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public static int was___info_SHIP_repairPars;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public static int was___info_SHIP_repairCase;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public static int was___info_SHIP_teamMAX;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public Text ___info_SHIP_HP;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public static float Efective_Parus;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public static float Efective_Case;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public static bool PremiumBuy;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15D")]
	public static bool AnyBuy;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15E")]
	public static bool TowEnought;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public static ConfigPanel Singleton;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public Button Prev;

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public Button Next;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private static float PushSide;

	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public TowarListLoad TowarListLoad;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public Sprite[] TowarsListSprite;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public Texture2D[] HerbListIconsAsTextures;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public Text GoldOutput;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public Text PiastrOutputPC;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public Text PiastrOutputMobile;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public GameObject Unequip;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public GameObject Change_or_Equip;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public Text DescName;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public Text Describe;

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public Text DescribeParam_title;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public Text DescribeParam_1;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	public Text Tov_Count;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	public GameObject Selector;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	public GameObject Selector_M;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public GameObject Selector_P1;

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public GameObject Selector_P2;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public GameObject Selector_P3;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	public RectTransform ItemsPredlog_LIST;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	public GameObject ItemPredlogPrefab;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	public GameObject[] PerkSlotsAllToHideOrShow;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	public GameObject MainSlotAll;

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	public EquipSlot_new[] AllSlots_New;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	public Text OffersOutput;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	public MailScreenLock screenLockMAIL;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	public GameObject Twn_Btn_MAIL;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public static H_Core.H_delegate Twn_Btn_MAIL_delegate;

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	public GameObject Twn_Btn_MAIL_TownVisit;

	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public static H_Core.H_delegate Twn_Btn_MAIL_TownVisit_delegate;

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	public GameObject BackBtn;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	public Button BackBtnMobile;

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	private Stack<Action> backBtnMobileActions;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	private bool backBtnInteractablePrev;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public static int TowIndex;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	public static int TownIndex;

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public static Tovar desc_CURRENT;

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public static float GRUZOPODJOMmul;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	public static int ActiveArtefacts;

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	public Image ConfigShipBtn_icon;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public static int parsslt;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public static int caseslt;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public static int canonslt;

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public static int LAST_Con_MP123;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public static int LAST_Con_M;

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	public static int LAST_Con_P1;

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public static int LAST_Con_P2;

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	public static int LAST_Con_P3;

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public static Tovar LAST_T_MP123;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public static Tovar LAST_T_M;

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public static Tovar LAST_T_P1;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public static Tovar LAST_T_P2;

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public static Tovar LAST_T_P3;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public static Tovar LAST_InList;

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public static int LAST_Tindx_MP123;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	public static int LAST_Tindx_M;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public static int LAST_Tindx_P1;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	public static int LAST_Tindx_P2;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public static int LAST_Tindx_P3;

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	public static int LAST_Tindx_InList;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public static bool LAST_ListClicked;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x201")]
	public static bool LAST_selectable_M;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x202")]
	public static bool LAST_selectable_P1;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x203")]
	public static bool LAST_selectable_P2;

	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	public static bool LAST_selectable_P3;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x205")]
	public static bool LAST_vis_M;

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x206")]
	public static bool LAST_vis_P1;

	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x207")]
	public static bool LAST_vis_P2;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public static bool LAST_vis_P3;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x209")]
	public static bool LAST_ShowDescribe;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20A")]
	public static bool LAST_ShowList;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20B")]
	public static bool LAST_RebuildList;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	public static AWE_global.SlotType LAST_ListFilter;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public static bool LAST_ListStore;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x211")]
	public static bool LAST_ListTrum;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x212")]
	public static bool LAST_ListStorage;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	public static int LAST_CountOutput;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	public Transform SlotPositionCalibration;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public static int awayValue;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	public Text[] Hire_Price_output;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	private Text CurrentPricer;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	public bool needHireToAbordDeck;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B4")]
	public float InTownRefreshQwests;

	[Token(Token = "0x17000123")]
	public SaveDataProfile Profile
	{
		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x8F2C68", Offset = "0x8F2C68", VA = "0x8F2C68")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000124")]
	public bool NeedRepair
	{
		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x8F303C", Offset = "0x8F303C", VA = "0x8F303C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000125")]
	public HelpContentData CurrentHelpDataMobile
	{
		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x8F3150", Offset = "0x8F3150", VA = "0x8F3150")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x8F3158", Offset = "0x8F3158", VA = "0x8F3158")]
		set
		{
		}
	}

	[Token(Token = "0x17000126")]
	public Color Normal_text
	{
		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x900AC4", Offset = "0x900AC4", VA = "0x900AC4")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000127")]
	public Text PiastrOutput
	{
		[Token(Token = "0x6000A37")]
		[Address(RVA = "0x900BC8", Offset = "0x900BC8", VA = "0x900BC8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000128")]
	public Button BackBtnSelf
	{
		[Token(Token = "0x6000A45")]
		[Address(RVA = "0x904764", Offset = "0x904764", VA = "0x904764")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000129")]
	public bool BackBtnInteractable
	{
		[Token(Token = "0x6000A46")]
		[Address(RVA = "0x9047D4", Offset = "0x9047D4", VA = "0x9047D4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x9047F4", Offset = "0x9047F4", VA = "0x9047F4")]
		set
		{
		}
	}

	[Token(Token = "0x1700012A")]
	public bool AnyBackButtonsActive
	{
		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0x904CE8", Offset = "0x904CE8", VA = "0x904CE8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700012B")]
	public GameObject BuyShopPartButton
	{
		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x904D44", Offset = "0x904D44", VA = "0x904D44")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700012C")]
	public GameObject TownUpgradeBtn
	{
		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0x904D4C", Offset = "0x904D4C", VA = "0x904D4C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700012D")]
	public GameObject TownUpgradeBtnBack
	{
		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0x904D54", Offset = "0x904D54", VA = "0x904D54")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0x8F2C70", Offset = "0x8F2C70", VA = "0x8F2C70")]
	public void ClickBuf(int id)
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0x8F2DC8", Offset = "0x8F2DC8", VA = "0x8F2DC8")]
	private void ShowBufsFrom(int bufNumber)
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0x8F3010", Offset = "0x8F3010", VA = "0x8F3010")]
	public void RefreshBufs()
	{
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0x8F3018", Offset = "0x8F3018", VA = "0x8F3018")]
	public void SetActiveMoneyPanel(bool status)
	{
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0x8F31CC", Offset = "0x8F31CC", VA = "0x8F31CC")]
	public void HelpButtonMobileOnClick()
	{
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0x8F328C", Offset = "0x8F328C", VA = "0x8F328C")]
	public void DropAllToStorage()
	{
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0x8F3CD0", Offset = "0x8F3CD0", VA = "0x8F3CD0")]
	public void DropAllToTrum()
	{
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0x8F3FE4", Offset = "0x8F3FE4", VA = "0x8F3FE4")]
	public int CountAvailableQwests()
	{
		return default(int);
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0x8F4E04", Offset = "0x8F4E04", VA = "0x8F4E04")]
	public void ShowInfo()
	{
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0x8F52DC", Offset = "0x8F52DC", VA = "0x8F52DC")]
	public void Call_Universal_Counter(int Max)
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0x8F60D4", Offset = "0x8F60D4", VA = "0x8F60D4")]
	public void Dec_valuer()
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0x8F61C8", Offset = "0x8F61C8", VA = "0x8F61C8")]
	public void Inc_valuer()
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0x8F5410", Offset = "0x8F5410", VA = "0x8F5410")]
	public void Counter_On_Change()
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0x8F6558", Offset = "0x8F6558", VA = "0x8F6558")]
	public void Show_TRUMED_TOWAR(int type)
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x8F83EC", Offset = "0x8F83EC", VA = "0x8F83EC")]
	public void Show_STORED_TOWAR(int type)
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x8F8498", Offset = "0x8F8498", VA = "0x8F8498")]
	public void Show_MARKET_TOWAR(int type)
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x8F8544", Offset = "0x8F8544", VA = "0x8F8544")]
	public void Click_Throw_Away()
	{
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0x8FA200", Offset = "0x8FA200", VA = "0x8FA200")]
	public void Click_To_STORAGE()
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0x8FA408", Offset = "0x8FA408", VA = "0x8FA408")]
	public void Click_To_STORAGE(int value)
	{
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0x8FA594", Offset = "0x8FA594", VA = "0x8FA594")]
	public void Click_To_TRUM()
	{
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0x8FA7A8", Offset = "0x8FA7A8", VA = "0x8FA7A8")]
	public void Click_To_TRUM(int value)
	{
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0x8FA930", Offset = "0x8FA930", VA = "0x8FA930")]
	public void Click_Unequip()
	{
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0x8FFE68", Offset = "0x8FFE68", VA = "0x8FFE68")]
	public void Click_Change_or_Equip()
	{
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0x9002D0", Offset = "0x9002D0", VA = "0x9002D0")]
	public void ClickMainSlot()
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0x9004D0", Offset = "0x9004D0", VA = "0x9004D0")]
	public void ClickPerkSlot_1()
	{
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0x9006CC", Offset = "0x9006CC", VA = "0x9006CC")]
	public void ClickPerkSlot_2()
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0x9008C8", Offset = "0x9008C8", VA = "0x9008C8")]
	public void ClickPerkSlot_3()
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0x900AD8", Offset = "0x900AD8", VA = "0x900AD8")]
	public void Click_Prev(float step = 200f)
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x900B50", Offset = "0x900B50", VA = "0x900B50")]
	public void Click_Next(float step = 200f)
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0x900BD0", Offset = "0x900BD0", VA = "0x900BD0")]
	public void Slot_Click(int localF)
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0x900D20", Offset = "0x900D20", VA = "0x900D20")]
	public void Call_MAIL_townVisit()
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0x901250", Offset = "0x901250", VA = "0x901250")]
	public void Call_MAIL()
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0x90006C", Offset = "0x90006C", VA = "0x90006C")]
	public void ShowRepairOrNot()
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0x901368", Offset = "0x901368", VA = "0x901368")]
	public void ShowRepairOrNot(Alert theyAlert)
	{
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0x9015CC", Offset = "0x9015CC", VA = "0x9015CC")]
	public void CallEquipment()
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0x901C04", Offset = "0x901C04", VA = "0x901C04")]
	public void CallArtefact()
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0x901D60", Offset = "0x901D60", VA = "0x901D60")]
	public void CallDecor()
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0x901FD0", Offset = "0x901FD0", VA = "0x901FD0")]
	public void CallHeroXP()
	{
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0x9022EC", Offset = "0x9022EC", VA = "0x9022EC")]
	public void Call_TeamWindow()
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0x903C0C", Offset = "0x903C0C", VA = "0x903C0C")]
	public void Call_Trum_Store_Storage()
	{
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0x904240", Offset = "0x904240", VA = "0x904240")]
	public void Call_Exit()
	{
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0x904594", Offset = "0x904594", VA = "0x904594")]
	public void CallFactionChange()
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x901818", Offset = "0x901818", VA = "0x901818")]
	public void PushBackActionMobile(Action backAction, bool fromTutor = false)
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x904818", Offset = "0x904818", VA = "0x904818")]
	public Action PopBackActionMobile(bool fromTutor = false)
	{
		return null;
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x904B44", Offset = "0x904B44", VA = "0x904B44")]
	public Action PopBackActionMobileWithoutAction()
	{
		return null;
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x9019B0", Offset = "0x9019B0", VA = "0x9019B0")]
	public void SetBackBtnInteractableMobile(bool interactable)
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x904D5C", Offset = "0x904D5C", VA = "0x904D5C")]
	public void RestoreBackBtnInteractableMobile()
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x900F24", Offset = "0x900F24", VA = "0x900F24")]
	public void EnterSubWindow()
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x904DC8", Offset = "0x904DC8", VA = "0x904DC8")]
	public void CallSettings()
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x904DCC", Offset = "0x904DCC", VA = "0x904DCC")]
	public void Call_BACK(bool result)
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x9019F8", Offset = "0x9019F8", VA = "0x9019F8")]
	public void Call_BACK()
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x904D8C", Offset = "0x904D8C", VA = "0x904D8C")]
	public void Call_BACK_All()
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0x904E18", Offset = "0x904E18", VA = "0x904E18")]
	public void CloseScreens()
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0x905A20", Offset = "0x905A20", VA = "0x905A20")]
	public void Button_GoTo()
	{
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x9061BC", Offset = "0x9061BC", VA = "0x9061BC")]
	public static void SetIconTovar(Tovar t, SpriteRenderer where, bool SetRot = true)
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0x906438", Offset = "0x906438", VA = "0x906438")]
	public static Sprite GetIconTovar(Tovar t)
	{
		return null;
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x8F62BC", Offset = "0x8F62BC", VA = "0x8F62BC")]
	public static void SetIconTovar(Tovar t, Image where, bool SetRot = true)
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0x906594", Offset = "0x906594", VA = "0x906594")]
	public static void param(string intout, int param, string lang, string Ending = "", bool HavePlus = true, bool SmallNumber = false, bool VerySmallNumber = false)
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0x907388", Offset = "0x907388", VA = "0x907388")]
	public static void paramDual(string intout_Name, string intout1, int param1, string lang, string Ending = "", bool HavePlus = true, bool SmallNumber = false, bool VerySmallNumber = false)
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x907D44", Offset = "0x907D44", VA = "0x907D44")]
	public void GenerateDescription_NEW(Text TovName, Text Out_Title, Text Out_1, bool Movement = true, bool ShootParam = true, bool TelegraphParam = true, bool TeamAbordageInfo = true, bool DefenceInfo = true, bool TeamCountParams = true, bool ArtefactInfo = true, bool ShipParams = true, bool Effectivity = true, bool Zoom = true, bool mass = true)
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x908EA4", Offset = "0x908EA4", VA = "0x908EA4")]
	public string GenerateDescription(Tovar T, bool name = true, bool desc = true, bool Movement = true, bool ShootParam = true, bool TelegraphParam = true, bool TeamAbordageInfo = true, bool DefenceInfo = true, bool TeamCountParams = true, bool ArtefactInfo = true, bool ShipParams = true, bool Effectivity = true, bool Zoom = true, bool mass = true)
	{
		return null;
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x8F35D0", Offset = "0x8F35D0", VA = "0x8F35D0")]
	public static void RecalcMass()
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x8FAC74", Offset = "0x8FAC74", VA = "0x8FAC74")]
	public static void CalculateShipParametrs(bool DeepRefresh = false, bool RedGreenMechanic = true)
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x90A0F0", Offset = "0x90A0F0", VA = "0x90A0F0")]
	private static void ChangeRelationships()
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x90A378", Offset = "0x90A378", VA = "0x90A378")]
	public static void NotEnoughtPiastrsMessage()
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x90A40C", Offset = "0x90A40C", VA = "0x90A40C")]
	private static void ShowShopForMoney()
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0x90A410", Offset = "0x90A410", VA = "0x90A410")]
	public void RefreshXpPointsView()
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0x90A504", Offset = "0x90A504", VA = "0x90A504")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0x90A6AC", Offset = "0x90A6AC", VA = "0x90A6AC")]
	private void SetupBackButtons()
	{
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0x9026E4", Offset = "0x9026E4", VA = "0x9026E4")]
	public void HideEquipmentDialog()
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0x909BC4", Offset = "0x909BC4", VA = "0x909BC4")]
	public void RefreshArtefSlotsIcons()
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0x902A68", Offset = "0x902A68", VA = "0x902A68")]
	public void RefreshAllSlotsIcons()
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0x8F86AC", Offset = "0x8F86AC", VA = "0x8F86AC")]
	public void Refresh_Predlog_List([Optional] Tovar reselect_tovar)
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0x8F6604", Offset = "0x8F6604", VA = "0x8F6604")]
	public void Show_Refresh_Equipment_Universal(int Con_MP123, int Con_M, int Con_P1, int Con_P2, int Con_P3, Tovar T_MP123, Tovar T_M, Tovar T_P1, Tovar T_P2, Tovar T_P3, Tovar InList, int Tindx_MP123, int Tindx_M, int Tindx_P1, int Tindx_P2, int Tindx_P3, int Tindx_InList, bool ListClicked, bool selectable_M, bool selectable_P1, bool selectable_P2, bool selectable_P3, bool vis_M, bool vis_P1, bool vis_P2, bool vis_P3, bool ShowDescribe, bool ShowList, bool RebuildList, AWE_global.SlotType ListFilter, bool ListStore, bool ListTrum, bool ListStorage, int CountOutput, [Optional] Sprite custom_sprite, bool showFindOnMap = true)
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0x90A6B0", Offset = "0x90A6B0", VA = "0x90A6B0")]
	private bool ItemIsNotCrewMember(AWE_global.SlotType itemType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0x90A6E0", Offset = "0x90A6E0", VA = "0x90A6E0")]
	private bool ItemIsNotShipDecorOrOfficer(AWE_global.SlotType itemType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0x90A718", Offset = "0x90A718", VA = "0x90A718")]
	public void SELL_Selected(int amount)
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0x90ABE0", Offset = "0x90ABE0", VA = "0x90ABE0")]
	public void Click_Throw_Away(int button)
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0x90AD98", Offset = "0x90AD98", VA = "0x90AD98")]
	public void BUY_DEFAULT(int value, [Optional] Tovar t)
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0x90B644", Offset = "0x90B644", VA = "0x90B644")]
	public void SELL_Selected()
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0x90BAD0", Offset = "0x90BAD0", VA = "0x90BAD0")]
	public void BUY_DEFAULT()
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0x90C4A8", Offset = "0x90C4A8", VA = "0x90C4A8")]
	public bool BUY_TOVAR_MOBILE(Tovar tovar, int value = 1)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0x90CA14", Offset = "0x90CA14", VA = "0x90CA14")]
	public void SELL_Selected_Mobile(Tovar tovar, int amount = 1, int where = 0)
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0x90CCE0", Offset = "0x90CCE0", VA = "0x90CCE0")]
	public void Click_HIRE_BTN(int Hire_chelowek)
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0x90D6C4", Offset = "0x90D6C4", VA = "0x90D6C4")]
	private void SetLocalScale(GameObject go, float scale, float borderScale)
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0x90D7E4", Offset = "0x90D7E4", VA = "0x90D7E4")]
	private void SetAnchoredPosition(GameObject go, float ox, float oy)
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0x90D8F4", Offset = "0x90D8F4", VA = "0x90D8F4")]
	private void EditConfigPanel()
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0x90DBE0", Offset = "0x90DBE0", VA = "0x90DBE0")]
	public void SetActiveButtons(bool buttons, bool selector)
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0x90DB38", Offset = "0x90DB38", VA = "0x90DB38")]
	public void HideArtefConfig()
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x90DC7C", Offset = "0x90DC7C", VA = "0x90DC7C")]
	public void OnOpenAgreementClick()
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x90DC84", Offset = "0x90DC84", VA = "0x90DC84")]
	private void OnProfileLoaded(object obj)
	{
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0x90DD74", Offset = "0x90DD74", VA = "0x90DD74")]
	public void SetSpecialProfile(SaveDataProfile profile_)
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0x90DE24", Offset = "0x90DE24", VA = "0x90DE24")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0x90DF20", Offset = "0x90DF20", VA = "0x90DF20")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0x90DFEC", Offset = "0x90DFEC", VA = "0x90DFEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0x909FB0", Offset = "0x909FB0", VA = "0x909FB0")]
	public Tovar GetMyShipTovar()
	{
		return null;
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0x90E39C", Offset = "0x90E39C", VA = "0x90E39C")]
	public void RefreshAvailableSkillPoint()
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0x90E4B8", Offset = "0x90E4B8", VA = "0x90E4B8")]
	public void BuyShopPart()
	{
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0x90E4BC", Offset = "0x90E4BC", VA = "0x90E4BC")]
	public ConfigPanel()
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0x90E914", Offset = "0x90E914", VA = "0x90E914")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58A344", Offset = "0x58A344")]
	private void <CallHeroXP>b__235_0()
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0x90E918", Offset = "0x90E918", VA = "0x90E918")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58A354", Offset = "0x58A354")]
	private void <Start>b__356_0()
	{
	}
}
[Token(Token = "0x20001DF")]
public class ContentResizer : MonoBehaviour
{
	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform TextArea_getfrom;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform ContentArea_set;

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0xA26080", Offset = "0xA26080", VA = "0xA26080")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0xA26160", Offset = "0xA26160", VA = "0xA26160")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0xA26194", Offset = "0xA26194", VA = "0xA26194")]
	public ContentResizer()
	{
	}
}
[Token(Token = "0x20001E0")]
public class ContentResizer_2 : MonoBehaviour
{
	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform TextArea_getfrom;

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform ContentArea_set;

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0xA2619C", Offset = "0xA2619C", VA = "0xA2619C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0xA26258", Offset = "0xA26258", VA = "0xA26258")]
	public ContentResizer_2()
	{
	}
}
[Token(Token = "0x20001E1")]
public class Crab_AI : MonoBehaviour
{
	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource DeathSound;

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool DIED;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int cmd;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform SplashHit;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float TimeToHit;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Telegraph Attack;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Ship MyShip;

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool Backward;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float BackBlock;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Ship NearestEnemyShip;

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float NearestEnemyShip_dst;

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0xA315D4", Offset = "0xA315D4", VA = "0xA315D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0xA316E4", Offset = "0xA316E4", VA = "0xA316E4")]
	public void FindNearesShip(float minDst = 110f)
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0xA3199C", Offset = "0xA3199C", VA = "0xA3199C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0xA32364", Offset = "0xA32364", VA = "0xA32364")]
	public Crab_AI()
	{
	}
}
[Token(Token = "0x20001E2")]
public class Colossus : MonoBehaviour
{
	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioClip LeviAttack;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform MyCollosus;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Telegraph MyTelegraph;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Camera[] MyCinematic;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform[] Mouth;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private ParticleSystem[] splashes;

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float Opening1;

	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float Opening2;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool attacking;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float Rot;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool AttackMe;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float TelegraphShowingBefore;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ColossusAttack controller;

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0x857A34", Offset = "0x857A34", VA = "0x857A34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0x857AB0", Offset = "0x857AB0", VA = "0x857AB0")]
	public void Atack(bool attackMe, Vector3 pos)
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0x857B5C", Offset = "0x857B5C", VA = "0x857B5C")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0x857BB4", Offset = "0x857BB4", VA = "0x857BB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0x858C08", Offset = "0x858C08", VA = "0x858C08")]
	public Colossus()
	{
	}
}
[Token(Token = "0x20001E3")]
public class DamageFadeText : MonoBehaviour
{
	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh MyText;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float SpeedMoveUp;

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float FadeSpeed;

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0x7C62D0", Offset = "0x7C62D0", VA = "0x7C62D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0x7C6334", Offset = "0x7C6334", VA = "0x7C6334")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0x7C6478", Offset = "0x7C6478", VA = "0x7C6478")]
	public DamageFadeText()
	{
	}
}
[Token(Token = "0x20001E4")]
public enum DebugWindowIds
{
	[Token(Token = "0x4000E44")]
	Fps,
	[Token(Token = "0x4000E45")]
	ShipCoordinates
}
[Token(Token = "0x20001E5")]
public class FPSDisplay : MonoBehaviour
{
	[Token(Token = "0x20001E6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5789DC", Offset = "0x5789DC")]
	private sealed class <FPS>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FPSDisplay <>4__this;

		[Token(Token = "0x1700012E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AA2")]
			[Address(RVA = "0x1510C6C", Offset = "0x1510C6C", VA = "0x1510C6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AA4")]
			[Address(RVA = "0x1510CB4", Offset = "0x1510CB4", VA = "0x1510CB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x1510ACC", Offset = "0x1510ACC", VA = "0x1510ACC")]
		[DebuggerHidden]
		public <FPS>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x1510AF8", Offset = "0x1510AF8", VA = "0x1510AF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x1510AFC", Offset = "0x1510AFC", VA = "0x1510AFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x1510C74", Offset = "0x1510C74", VA = "0x1510C74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool updateColor;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool allowDrag;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float frequency;

	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int nbDecimal;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float accum;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int frames;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Color color;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string sFPS;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GUIStyle style;

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Rect startRect;

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0x7ACC44", Offset = "0x7ACC44", VA = "0x7ACC44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0x7ACDB0", Offset = "0x7ACDB0", VA = "0x7ACDB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0x7ACD30", Offset = "0x7ACD30", VA = "0x7ACD30")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58A364", Offset = "0x58A364")]
	private IEnumerator FPS()
	{
		return null;
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0x7ACE04", Offset = "0x7ACE04", VA = "0x7ACE04")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0x7AD078", Offset = "0x7AD078", VA = "0x7AD078")]
	private void DoMyWindow(int windowID)
	{
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0x7AD1D8", Offset = "0x7AD1D8", VA = "0x7AD1D8")]
	public FPSDisplay()
	{
	}
}
[Token(Token = "0x20001E7")]
public class ShipCoordinatesDisplay : MonoBehaviour
{
	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rect startRect;

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GUIStyle labelStyle;

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0x1674DBC", Offset = "0x1674DBC", VA = "0x1674DBC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0x1674E48", Offset = "0x1674E48", VA = "0x1674E48")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0x16750E8", Offset = "0x16750E8", VA = "0x16750E8")]
	private void DoMyWindow(int windowID)
	{
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0x1675674", Offset = "0x1675674", VA = "0x1675674")]
	public ShipCoordinatesDisplay()
	{
	}
}
[Token(Token = "0x20001E8")]
public class DelayDamageProc : MonoBehaviour
{
	[Token(Token = "0x4000E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Ship OwnerShip;

	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Ship TargetShip;

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int DAMAGE_case;

	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int DAMAGE_parus;

	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int DAMAGE_team;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float Timer;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool MiddleHit;

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0x7CB66C", Offset = "0x7CB66C", VA = "0x7CB66C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0x7CB8D0", Offset = "0x7CB8D0", VA = "0x7CB8D0")]
	public DelayDamageProc()
	{
	}
}
[Token(Token = "0x20001E9")]
public class DisableTouch : MonoBehaviour
{
	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject TouchLocker;

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0x7CC5AC", Offset = "0x7CC5AC", VA = "0x7CC5AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0x7CC5B0", Offset = "0x7CC5B0", VA = "0x7CC5B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0x7CC5B4", Offset = "0x7CC5B4", VA = "0x7CC5B4")]
	public DisableTouch()
	{
	}
}
[Token(Token = "0x20001EA")]
public class ArenaVariableStore : MonoBehaviour
{
	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Transform> enemySpawnPoints;

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform playerSpawnPoint;

	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform fireCamp;

	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform escapeLand;

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0x7E59D8", Offset = "0x7E59D8", VA = "0x7E59D8")]
	public ArenaVariableStore()
	{
	}
}
[Serializable]
[Token(Token = "0x20001EB")]
public class EnemySettings
{
	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private List<GameObject> models;

	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int shots;

	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private int blockChance;

	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int hp;

	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool fastReload;

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private int lvlOfAppearance;

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private int costPoints;

	[Token(Token = "0x17000130")]
	public bool FastReload
	{
		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x7D5B38", Offset = "0x7D5B38", VA = "0x7D5B38")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x7D5B40", Offset = "0x7D5B40", VA = "0x7D5B40")]
		set
		{
		}
	}

	[Token(Token = "0x17000131")]
	public int BlockChance
	{
		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x7D5B4C", Offset = "0x7D5B4C", VA = "0x7D5B4C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x7D5B54", Offset = "0x7D5B54", VA = "0x7D5B54")]
		set
		{
		}
	}

	[Token(Token = "0x17000132")]
	public int Shots
	{
		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x7D5B5C", Offset = "0x7D5B5C", VA = "0x7D5B5C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x7D5B64", Offset = "0x7D5B64", VA = "0x7D5B64")]
		set
		{
		}
	}

	[Token(Token = "0x17000133")]
	public List<GameObject> Models
	{
		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x7D5B6C", Offset = "0x7D5B6C", VA = "0x7D5B6C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x7D5B74", Offset = "0x7D5B74", VA = "0x7D5B74")]
		set
		{
		}
	}

	[Token(Token = "0x17000134")]
	public int CostPoints
	{
		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x7D5B7C", Offset = "0x7D5B7C", VA = "0x7D5B7C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x7D5B84", Offset = "0x7D5B84", VA = "0x7D5B84")]
		set
		{
		}
	}

	[Token(Token = "0x17000135")]
	public int LvlOfAppearance
	{
		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x7D5B8C", Offset = "0x7D5B8C", VA = "0x7D5B8C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x7D5B94", Offset = "0x7D5B94", VA = "0x7D5B94")]
		set
		{
		}
	}

	[Token(Token = "0x17000136")]
	public int HP
	{
		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x7D5B9C", Offset = "0x7D5B9C", VA = "0x7D5B9C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x7D5BA4", Offset = "0x7D5BA4", VA = "0x7D5BA4")]
		set
		{
		}
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0x7D5BAC", Offset = "0x7D5BAC", VA = "0x7D5BAC")]
	public bool CanGetThisUnit(int currentLvl, int currentAvailablePoints)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0x7D5BD0", Offset = "0x7D5BD0", VA = "0x7D5BD0")]
	public GameObject GetRandomModel()
	{
		return null;
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0x7D5C58", Offset = "0x7D5C58", VA = "0x7D5C58")]
	public EnemySettings()
	{
	}
}
[Token(Token = "0x20001EC")]
public class Highlighter : MonoBehaviour
{
	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Image myself;

	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float maxHighlight;

	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float speed;

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float timer;

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0x15601AC", Offset = "0x15601AC", VA = "0x15601AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0x1560210", Offset = "0x1560210", VA = "0x1560210")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0x1560244", Offset = "0x1560244", VA = "0x1560244")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0x15603A0", Offset = "0x15603A0", VA = "0x15603A0")]
	public Highlighter()
	{
	}
}
[Token(Token = "0x20001ED")]
public class PartInShopManager : MonoBehaviour
{
	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int payOffHours;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<int> shopStarPayment;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<int> shopStarValue;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<int> minFractionLevel;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ShopRequirements moneyAndFractionLevelPrefab;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E334", Offset = "0x57E334")]
	private static PartInShopManager <Singleton>k__BackingField;

	[Token(Token = "0x17000137")]
	private int CurCityFraction
	{
		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x15E8AD0", Offset = "0x15E8AD0", VA = "0x15E8AD0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000138")]
	private int CurCityStars
	{
		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x15E8B34", Offset = "0x15E8B34", VA = "0x15E8B34")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000139")]
	private string CurCityName
	{
		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x15E8C6C", Offset = "0x15E8C6C", VA = "0x15E8C6C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700013A")]
	private bool IsFractionLevelHighEnough
	{
		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x15E8CDC", Offset = "0x15E8CDC", VA = "0x15E8CDC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700013B")]
	private bool IsEnoughMoney
	{
		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x15E8E14", Offset = "0x15E8E14", VA = "0x15E8E14")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700013C")]
	public bool CanBuyShop
	{
		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x15E8EE0", Offset = "0x15E8EE0", VA = "0x15E8EE0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700013D")]
	public static PartInShopManager Singleton
	{
		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0x15E8F18", Offset = "0x15E8F18", VA = "0x15E8F18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58A41C", Offset = "0x58A41C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x15E8F64", Offset = "0x15E8F64", VA = "0x15E8F64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58A42C", Offset = "0x58A42C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700013E")]
	public int PayOffHours
	{
		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x15E8FC0", Offset = "0x15E8FC0", VA = "0x15E8FC0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x15E8FC8", Offset = "0x15E8FC8", VA = "0x15E8FC8")]
		set
		{
		}
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0x15E8A7C", Offset = "0x15E8A7C", VA = "0x15E8A7C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0x15E8FD0", Offset = "0x15E8FD0", VA = "0x15E8FD0")]
	public void OnPurchaseClick()
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0x15E92D4", Offset = "0x15E92D4", VA = "0x15E92D4")]
	private void CheckPreviousAndBuy()
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0x15E95CC", Offset = "0x15E95CC", VA = "0x15E95CC")]
	private void ShopPurchased()
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0x15E97EC", Offset = "0x15E97EC", VA = "0x15E97EC")]
	public void HourPass()
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0x15E99B8", Offset = "0x15E99B8", VA = "0x15E99B8")]
	public bool ShouldShowBuyButton()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0x15E9BBC", Offset = "0x15E9BBC", VA = "0x15E9BBC")]
	public void CheckForPaymentDecrease()
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0x15EA03C", Offset = "0x15EA03C", VA = "0x15EA03C")]
	public PartInShopManager()
	{
	}
}
[Token(Token = "0x20001EE")]
public class ShopRequirements : MonoBehaviour
{
	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Image secondItemImage;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text secondItemText;

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text moneyText;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text SecondItemTextOnly;

	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject secondItemFrame;

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0x167721C", Offset = "0x167721C", VA = "0x167721C")]
	public void PersonalizeWindowForShop(int money, int fractionLevel, int fraction, bool moneyEnough, bool fractionLevelEnough)
	{
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0x1677430", Offset = "0x1677430", VA = "0x1677430")]
	public void PersonalizeWindowForUpgradeTown(int money, bool moneyEnough, string quests)
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0x167753C", Offset = "0x167753C", VA = "0x167753C")]
	public ShopRequirements()
	{
	}
}
[Token(Token = "0x20001EF")]
public class OurTownScript : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001F0")]
	public class ListOfGoods
	{
		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<string> goodsList;

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x157D9D0", Offset = "0x157D9D0", VA = "0x157D9D0")]
		public ListOfGoods()
		{
		}
	}

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<string> townLocations;

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<ListOfGoods> townGoodsNamesLists;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<int> questsRequirdForNextLevel;

	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<int> piastrsForUpgrade;

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ShopRequirements RequirmentsForUpgradeWindow;

	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static OurTownScript Singleton;

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<List<Tovar>> townGoodsLists;

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NewEvent eventTown;

	[Token(Token = "0x1700013F")]
	private int curTownLevel
	{
		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x15E43F0", Offset = "0x15E43F0", VA = "0x15E43F0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x15E4464", Offset = "0x15E4464", VA = "0x15E4464")]
		set
		{
		}
	}

	[Token(Token = "0x17000140")]
	private bool moneyEnough
	{
		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x15E44E4", Offset = "0x15E44E4", VA = "0x15E44E4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0x15E45B0", Offset = "0x15E45B0", VA = "0x15E45B0")]
	private void UpdateTownEve()
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0x15E4740", Offset = "0x15E4740", VA = "0x15E4740")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0x15E5150", Offset = "0x15E5150", VA = "0x15E5150")]
	public void UpgradeBtnAct()
	{
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0x15E56F8", Offset = "0x15E56F8", VA = "0x15E56F8")]
	private void AcceptBtnAct()
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0x15E5854", Offset = "0x15E5854", VA = "0x15E5854")]
	public void UpgradeTown()
	{
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0x15E4D28", Offset = "0x15E4D28", VA = "0x15E4D28")]
	public void ValidateTown()
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0x15E5918", Offset = "0x15E5918", VA = "0x15E5918")]
	private void AddGoods(List<Tovar> goods)
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0x15E53B0", Offset = "0x15E53B0", VA = "0x15E53B0")]
	private string GetComplitedQuests()
	{
		return null;
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0x15E4808", Offset = "0x15E4808", VA = "0x15E4808")]
	private void GetTovarsFromNames()
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0x15E5B44", Offset = "0x15E5B44", VA = "0x15E5B44")]
	public void EnableTown(bool enable)
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0x15E5B80", Offset = "0x15E5B80", VA = "0x15E5B80")]
	public bool InOurTown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0x15E5CAC", Offset = "0x15E5CAC", VA = "0x15E5CAC")]
	public void CheckQuest(string questID)
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0x15E561C", Offset = "0x15E561C", VA = "0x15E561C")]
	private bool CanUpgradeTown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0x15E5DDC", Offset = "0x15E5DDC", VA = "0x15E5DDC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0x15E6070", Offset = "0x15E6070", VA = "0x15E6070")]
	public void DisableRequirementsForUpgrade()
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0x15E6118", Offset = "0x15E6118", VA = "0x15E6118")]
	public OurTownScript()
	{
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0x15E6120", Offset = "0x15E6120", VA = "0x15E6120")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58A43C", Offset = "0x58A43C")]
	private void <AcceptBtnAct>b__16_0()
	{
	}
}
[Token(Token = "0x20001F1")]
public class Dragable : MonoBehaviour
{
	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Tovar sys_MyTovar;

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0x7CF628", Offset = "0x7CF628", VA = "0x7CF628")]
	public void ShowInfo()
	{
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0x7CF798", Offset = "0x7CF798", VA = "0x7CF798")]
	public Dragable()
	{
	}
}
[Token(Token = "0x20001F2")]
public class drop_area : MonoBehaviour
{
	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool ConvertTo_parus;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool ConvertTo_abord;

	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool ConvertTo_canon;

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0x15D7C7C", Offset = "0x15D7C7C", VA = "0x15D7C7C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0x15D7C80", Offset = "0x15D7C80", VA = "0x15D7C80")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0x15D7C84", Offset = "0x15D7C84", VA = "0x15D7C84")]
	public drop_area()
	{
	}
}
[Serializable]
[Token(Token = "0x20001F3")]
public class EnemiesRankPrefabs
{
	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private EnemiesRanks rank;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<GameObject> prefabs;

	[Token(Token = "0x17000141")]
	public EnemiesRanks Rank
	{
		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x7D5AD4", Offset = "0x7D5AD4", VA = "0x7D5AD4")]
		get
		{
			return default(EnemiesRanks);
		}
		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x7D5ADC", Offset = "0x7D5ADC", VA = "0x7D5ADC")]
		set
		{
		}
	}

	[Token(Token = "0x17000142")]
	public List<GameObject> Prefabs
	{
		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x7D5AE4", Offset = "0x7D5AE4", VA = "0x7D5AE4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x7D5AEC", Offset = "0x7D5AEC", VA = "0x7D5AEC")]
		set
		{
		}
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0x7D5AF4", Offset = "0x7D5AF4", VA = "0x7D5AF4")]
	public EnemiesRankPrefabs()
	{
	}
}
[Token(Token = "0x20001F4")]
public enum EnemiesRanks
{
	[Token(Token = "0x4000E87")]
	Skelet,
	[Token(Token = "0x4000E88")]
	FistRank,
	[Token(Token = "0x4000E89")]
	SecondRank,
	[Token(Token = "0x4000E8A")]
	ThirdRank,
	[Token(Token = "0x4000E8B")]
	FourthRank,
	[Token(Token = "0x4000E8C")]
	FifhRank,
	[Token(Token = "0x4000E8D")]
	SixthRank,
	[Token(Token = "0x4000E8E")]
	Crab
}
[Token(Token = "0x20001F5")]
public class Enter_key : MonoBehaviour
{
	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] CheckItOver;

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Button it;

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0x7D5C60", Offset = "0x7D5C60", VA = "0x7D5C60")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0x7D5CC4", Offset = "0x7D5CC4", VA = "0x7D5CC4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0x7D5F20", Offset = "0x7D5F20", VA = "0x7D5F20")]
	public Enter_key()
	{
	}
}
[Token(Token = "0x20001F6")]
public class EquipSlot_new : MonoBehaviour
{
	[Token(Token = "0x20001F7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5789EC", Offset = "0x5789EC")]
	private sealed class <>c__DisplayClass25_0
	{
		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SaveDataProfile profile;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EquipSlot_new <>4__this;

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x15080B8", Offset = "0x15080B8", VA = "0x15080B8")]
		public <>c__DisplayClass25_0()
		{
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x15080C0", Offset = "0x15080C0", VA = "0x15080C0")]
		internal void <ClickME>b__0()
		{
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x1508230", Offset = "0x1508230", VA = "0x1508230")]
		internal void <ClickME>b__1()
		{
		}
	}

	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AWE_global.SlotType EquipType;

	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool ListOnly;

	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool Visible;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int Auto_InedxNumber;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int MyMainLink;

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int MyPerkLink_1;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int MyPerkLink_2;

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int MyPerkLink_3;

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool Enabled;

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool BuyedPerkSlot;

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	private bool equipUpgradeToFirstSubSlot;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
	private bool equiped;

	[Token(Token = "0x17000143")]
	public EquipSlot_new FirstUpgradeSubSlot
	{
		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x7D5F9C", Offset = "0x7D5F9C", VA = "0x7D5F9C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000144")]
	public EquipSlot_new SecondUpgradeSubSlot
	{
		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x7D6008", Offset = "0x7D6008", VA = "0x7D6008")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000145")]
	public bool SubSlotForOverequipIsFirst
	{
		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x7D6074", Offset = "0x7D6074", VA = "0x7D6074")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x7D607C", Offset = "0x7D607C", VA = "0x7D607C")]
		set
		{
		}
	}

	[Token(Token = "0x17000146")]
	public bool Equiped
	{
		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x7D6088", Offset = "0x7D6088", VA = "0x7D6088")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x7D6090", Offset = "0x7D6090", VA = "0x7D6090")]
		set
		{
		}
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0x7D609C", Offset = "0x7D609C", VA = "0x7D609C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0x7D61A8", Offset = "0x7D61A8", VA = "0x7D61A8")]
	public void UnEquip()
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0x7D61B0", Offset = "0x7D61B0", VA = "0x7D61B0")]
	public void SetVisible(bool Vis)
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0x7D61E8", Offset = "0x7D61E8", VA = "0x7D61E8")]
	public void ClickME()
	{
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0x7D7604", Offset = "0x7D7604", VA = "0x7D7604")]
	public static bool IsSlotVisualEquipment(AWE_global.SlotType slotType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0x7D763C", Offset = "0x7D763C", VA = "0x7D763C")]
	public EquipSlot_new()
	{
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0x7D7658", Offset = "0x7D7658", VA = "0x7D7658")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58A44C", Offset = "0x58A44C")]
	private void <Start>b__22_0()
	{
	}
}
[Token(Token = "0x20001F8")]
public class Escape_key : MonoBehaviour
{
	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool LockEsacape;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] CheckItOver;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Button it;

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0x8B3C40", Offset = "0x8B3C40", VA = "0x8B3C40")]
	public static void Pause(bool fromHome = false)
	{
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0x8B3FDC", Offset = "0x8B3FDC", VA = "0x8B3FDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0x8B4040", Offset = "0x8B4040", VA = "0x8B4040")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0x8B4B20", Offset = "0x8B4B20", VA = "0x8B4B20")]
	public Escape_key()
	{
	}
}
[Token(Token = "0x20001F9")]
public class Events : MonoBehaviour
{
	[Token(Token = "0x20001FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5789FC", Offset = "0x5789FC")]
	private sealed class <>c__DisplayClass91_0
	{
		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NewEvent localEVE;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int localEx;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool MapOpenedPass;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public H_Core.H_delegate Fight;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public H_Core.H_delegate AutoFight;

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0x1508FB0", Offset = "0x1508FB0", VA = "0x1508FB0")]
		public <>c__DisplayClass91_0()
		{
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x1508FB8", Offset = "0x1508FB8", VA = "0x1508FB8")]
		internal void <CheckWait>b__0()
		{
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x1508FCC", Offset = "0x1508FCC", VA = "0x1508FCC")]
		internal void <CheckWait>b__1()
		{
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x1508FE4", Offset = "0x1508FE4", VA = "0x1508FE4")]
		internal void <CheckWait>b__2()
		{
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x150904C", Offset = "0x150904C", VA = "0x150904C")]
		internal void <CheckWait>b__3()
		{
		}
	}

	[Token(Token = "0x20001FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578A0C", Offset = "0x578A0C")]
	private sealed class <>c__DisplayClass106_0
	{
		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NewEvent passitEx;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int passitExe;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Events <>4__this;

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x1508750", Offset = "0x1508750", VA = "0x1508750")]
		public <>c__DisplayClass106_0()
		{
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x1508758", Offset = "0x1508758", VA = "0x1508758")]
		internal void <PassIF>b__0()
		{
		}
	}

	[Token(Token = "0x20001FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578A1C", Offset = "0x578A1C")]
	private sealed class <>c__DisplayClass106_1
	{
		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NewEvent passitEx;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int passitExe;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int passitTindex;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Pass_title;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Pass_text;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Events <>4__this;

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x1508820", Offset = "0x1508820", VA = "0x1508820")]
		public <>c__DisplayClass106_1()
		{
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x1508828", Offset = "0x1508828", VA = "0x1508828")]
		internal void <PassIF>b__1()
		{
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x1508960", Offset = "0x1508960", VA = "0x1508960")]
		internal void <PassIF>b__2()
		{
		}
	}

	[Token(Token = "0x20001FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578A2C", Offset = "0x578A2C")]
	private sealed class <>c__DisplayClass106_2
	{
		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NewEvent passitEx;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int passitExe;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Events <>4__this;

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x1508AAC", Offset = "0x1508AAC", VA = "0x1508AAC")]
		public <>c__DisplayClass106_2()
		{
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x1508AB4", Offset = "0x1508AB4", VA = "0x1508AB4")]
		internal void <PassIF>b__3()
		{
		}
	}

	[Token(Token = "0x20001FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578A3C", Offset = "0x578A3C")]
	private sealed class <>c__DisplayClass108_0
	{
		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Events <>4__this;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int passLmapIndex;

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x1508B7C", Offset = "0x1508B7C", VA = "0x1508B7C")]
		public <>c__DisplayClass108_0()
		{
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x1508B84", Offset = "0x1508B84", VA = "0x1508B84")]
		internal void <Do_it>b__0()
		{
		}
	}

	[Token(Token = "0x20001FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578A4C", Offset = "0x578A4C")]
	private sealed class <>c__DisplayClass109_0
	{
		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x1508F50", Offset = "0x1508F50", VA = "0x1508F50")]
		public <>c__DisplayClass109_0()
		{
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x1508F58", Offset = "0x1508F58", VA = "0x1508F58")]
		internal bool <RemoveSomeSailsmans>b__0(Tovar t)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000200")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578A5C", Offset = "0x578A5C")]
	private sealed class <>c__DisplayClass110_0
	{
		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x1508F80", Offset = "0x1508F80", VA = "0x1508F80")]
		public <>c__DisplayClass110_0()
		{
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x1508F88", Offset = "0x1508F88", VA = "0x1508F88")]
		internal bool <RemoveAllSailsmans>b__0(Tovar t)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x2000201")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578A6C", Offset = "0x578A6C")]
	private sealed class <>c
	{
		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Tovar, int> <>9__120_0;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<Tovar, int> <>9__122_0;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<Tovar, int> <>9__124_0;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Func<Tovar, int> <>9__126_0;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Predicate<NewEvent> <>9__130_0;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Predicate<NewEvent> <>9__130_1;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Predicate<NewEvent> <>9__130_2;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Predicate<NewEvent> <>9__130_3;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static Predicate<NewEvent> <>9__130_4;

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x1508520", Offset = "0x1508520", VA = "0x1508520")]
		public <>c()
		{
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x1508528", Offset = "0x1508528", VA = "0x1508528")]
		internal int <get_ParuIndexes>b__120_0(Tovar i)
		{
			return default(int);
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x1508544", Offset = "0x1508544", VA = "0x1508544")]
		internal int <get_AboardIndexes>b__122_0(Tovar i)
		{
			return default(int);
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0x1508560", Offset = "0x1508560", VA = "0x1508560")]
		internal int <get_CanonIndexes>b__124_0(Tovar i)
		{
			return default(int);
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x150857C", Offset = "0x150857C", VA = "0x150857C")]
		internal int <get_WoundedIndexes>b__126_0(Tovar i)
		{
			return default(int);
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x1508598", Offset = "0x1508598", VA = "0x1508598")]
		internal bool <CheckLegPrincQuestMarkers>b__130_0(NewEvent e)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x15085F0", Offset = "0x15085F0", VA = "0x15085F0")]
		internal bool <CheckLegPrincQuestMarkers>b__130_1(NewEvent e)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0x1508648", Offset = "0x1508648", VA = "0x1508648")]
		internal bool <CheckLegPrincQuestMarkers>b__130_2(NewEvent e)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x15086A0", Offset = "0x15086A0", VA = "0x15086A0")]
		internal bool <CheckLegPrincQuestMarkers>b__130_3(NewEvent e)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0x15086F8", Offset = "0x15086F8", VA = "0x15086F8")]
		internal bool <CheckLegPrincQuestMarkers>b__130_4(NewEvent e)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000202")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578A7C", Offset = "0x578A7C")]
	private sealed class <TeamInTaver>d__127 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Events <>4__this;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NewEvent ico;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CMD scr;

		[Token(Token = "0x17000155")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B6F")]
			[Address(RVA = "0x1509388", Offset = "0x1509388", VA = "0x1509388", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000156")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B71")]
			[Address(RVA = "0x15093D0", Offset = "0x15093D0", VA = "0x15093D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x150910C", Offset = "0x150910C", VA = "0x150910C")]
		[DebuggerHidden]
		public <TeamInTaver>d__127(int <>1__state)
		{
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0x1509138", Offset = "0x1509138", VA = "0x1509138", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0x150913C", Offset = "0x150913C", VA = "0x150913C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x1509390", Offset = "0x1509390", VA = "0x1509390", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EA2")]
	public const float mobileDecreaseParamsTime = 1800f;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private EventsScriptableObject eventsScrObj;

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color skipEnem1;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color skipEnem2;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color skipEnem3;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color skipAllay1;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color skipAllay2;

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color skipAllay3;

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int RequestEscape;

	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int FightBAR_cnt;

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Image FightBAR_shadow;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float FightBAR_shadowAlpha;

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject[] FightBAR;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public RectTransform[] FightBAR_rect;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Image[] FightBAR_skip1;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float[] FightBAR_skipSpeed;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float[] FightBAR_skipValue;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Image[] FightBAR_skip2;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image[] FightBAR_skip3;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public H_Core.H_delegate[] FightBAR_Delegate;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public H_Core.H_delegate[] FightBAR_DelegateAuto;

	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject[] FightBAR_auto;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Image[] FightBAR_f1;

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Text[] FightBAR_title;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Image[] FightBAR_f2;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Image[] FightBAR_icon;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E414", Offset = "0x57E414")]
	private NewEvent[] <FightBar_event>k__BackingField;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public int[] FightBarEXE;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static NewEvent FightBarEventCurrent;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public float[] FightBAR_appearCURR;

	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float[] FightBAR_appearTARG;

	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public float[] FightBAR_slide_CURR;

	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public float[] FightBAR_slide_TARG;

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E424", Offset = "0x57E424")]
	private NewEvent <initEventThis>k__BackingField;

	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int init_count;

	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public bool[] init_as_quest;

	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public bool[] init_as_questChangeTeam;

	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public int[] init_frac;

	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public float[] init_angle;

	[Token(Token = "0x4000EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Vector2[] init_coord;

	[Token(Token = "0x4000ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public ShipParams[] init_param;

	[Token(Token = "0x4000ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public int[] init_initial_frac;

	[Token(Token = "0x4000ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Loot[] init_loot;

	[Token(Token = "0x4000ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public bool[] init_boarding_reward_repair;

	[Token(Token = "0x4000ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public bool[] init_boarding_reward_recruitment;

	[Token(Token = "0x4000ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static float LockFightInOpenWorld;

	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool mtsfStarted;

	[Token(Token = "0x4000ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static bool State_Have_EnterEvent_Highlight;

	[Token(Token = "0x4000ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static Events Singletone;

	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Sprite[] EventsIcons;

	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static float EnemyAgressiveArea_SQR;

	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static int FortRespounMinDays;

	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static int FortRespounMaxDays;

	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static bool _InTown;

	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static UnityAction InTownAction;

	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static UnityAction OutTownAction;

	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static bool InTown_serv_repair;

	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public static bool InTown_serv_reconfig;

	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	public static bool InTown_serv_storage;

	[Token(Token = "0x4000EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
	public static bool InTown_serv_market;

	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public static float InTown_serv_OFFER;

	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static int InTown_SAVEINDEX;

	[Token(Token = "0x4000EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public static bool InTown_serv_tabern;

	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public static bool InFortBatllt;

	[Token(Token = "0x4000EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static int InTownFortFraction;

	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static Tovar[] InTown_sale_list;

	[Token(Token = "0x4000EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static NewEvent tempShowText_Event;

	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static int ShowText_EXE;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static NewEvent Town_Event;

	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static int Town_EXE;

	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private static float Freq_halfsec;

	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private bool DoneOneFightPerCheck;

	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public GameObject NewTask_main_btn;

	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject NewTask_journ_btn;

	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static bool isDisabledEvents;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private Dictionary<string, int> eventIndexes;

	[Token(Token = "0x17000147")]
	public NewEvent[] FightBar_event
	{
		[Token(Token = "0x6000B10")]
		[Address(RVA = "0x8BCA24", Offset = "0x8BCA24", VA = "0x8BCA24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58A45C", Offset = "0x58A45C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B11")]
		[Address(RVA = "0x8BCA2C", Offset = "0x8BCA2C", VA = "0x8BCA2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58A46C", Offset = "0x58A46C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000148")]
	public NewEvent initEventThis
	{
		[Token(Token = "0x6000B12")]
		[Address(RVA = "0x8BCA34", Offset = "0x8BCA34", VA = "0x8BCA34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58A47C", Offset = "0x58A47C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B13")]
		[Address(RVA = "0x8BCA3C", Offset = "0x8BCA3C", VA = "0x8BCA3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58A48C", Offset = "0x58A48C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000149")]
	public NewEvent InitEventThis
	{
		[Token(Token = "0x6000B14")]
		[Address(RVA = "0x8B7774", Offset = "0x8B7774", VA = "0x8B7774")]
		set
		{
		}
	}

	[Token(Token = "0x1700014A")]
	public List<NewEvent> NewEventsList
	{
		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x8BC9CC", Offset = "0x8BC9CC", VA = "0x8BC9CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700014B")]
	public static bool InTown
	{
		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x8BCCD4", Offset = "0x8BCCD4", VA = "0x8BCCD4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x8BCD38", Offset = "0x8BCD38", VA = "0x8BCD38")]
		set
		{
		}
	}

	[Token(Token = "0x1700014C")]
	public static NewEvent ShowText_Event
	{
		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x8BCE34", Offset = "0x8BCE34", VA = "0x8BCE34")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x8BCE98", Offset = "0x8BCE98", VA = "0x8BCE98")]
		set
		{
		}
	}

	[Token(Token = "0x1700014D")]
	public Tovar[] ParuTovars
	{
		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x8CE630", Offset = "0x8CE630", VA = "0x8CE630")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700014E")]
	public Tovar[] AboardTovars
	{
		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x8CE814", Offset = "0x8CE814", VA = "0x8CE814")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700014F")]
	public Tovar[] CanonTovars
	{
		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x8CE9F8", Offset = "0x8CE9F8", VA = "0x8CE9F8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000150")]
	public Tovar[] WoundedTovars
	{
		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x8CEBDC", Offset = "0x8CEBDC", VA = "0x8CEBDC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000151")]
	public int[] ParuIndexes
	{
		[Token(Token = "0x6000B35")]
		[Address(RVA = "0x8CEDC0", Offset = "0x8CEDC0", VA = "0x8CEDC0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000152")]
	public int[] AboardIndexes
	{
		[Token(Token = "0x6000B36")]
		[Address(RVA = "0x8CEF18", Offset = "0x8CEF18", VA = "0x8CEF18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000153")]
	public int[] CanonIndexes
	{
		[Token(Token = "0x6000B37")]
		[Address(RVA = "0x8CF070", Offset = "0x8CF070", VA = "0x8CF070")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000154")]
	public int[] WoundedIndexes
	{
		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x8CF1C8", Offset = "0x8CF1C8", VA = "0x8CF1C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0x8BCA4C", Offset = "0x8BCA4C", VA = "0x8BCA4C")]
	public void FightBarAct(int index)
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0x8BCBD8", Offset = "0x8BCBD8", VA = "0x8BCBD8")]
	public void FightBarActAuto(int index)
	{
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0x8BCAB0", Offset = "0x8BCAB0", VA = "0x8BCAB0")]
	public void DisableAllFightBars()
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0x8BCF0C", Offset = "0x8BCF0C", VA = "0x8BCF0C")]
	public void CheckWait(NewEvent eve, int ex, CommandTypes itType, bool CanExecuteFight, bool Allowdecline, string OverrideTextAccept = "", string OverrideTextTitle = "")
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0x8C6654", Offset = "0x8C6654", VA = "0x8C6654")]
	private void mtsbSpounEnemy(WaterFightTasks task)
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0x8C66EC", Offset = "0x8C66EC", VA = "0x8C66EC")]
	private void SpawnShipForTask(WaterFightTasks task)
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0x8C71CC", Offset = "0x8C71CC", VA = "0x8C71CC")]
	private void mtsbWaitForDestroingEnemies(WaterFightTasks task)
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0x8C72C8", Offset = "0x8C72C8", VA = "0x8C72C8")]
	private void mtsbWaitTime(WaterFightTasks task)
	{
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0x8C7444", Offset = "0x8C7444", VA = "0x8C7444")]
	private void mtsbShowMessage(WaterFightTasks task)
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0x8C75CC", Offset = "0x8C75CC", VA = "0x8C75CC")]
	private void mtsbBranshing(WaterFightTasks task)
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0x8C7C0C", Offset = "0x8C7C0C", VA = "0x8C7C0C")]
	private void mtsfCheckForComlite()
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0x8C7F34", Offset = "0x8C7F34", VA = "0x8C7F34")]
	private void clearMTSF()
	{
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0x8C7D48", Offset = "0x8C7D48", VA = "0x8C7D48")]
	private void mtsfCompleteMTSF()
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0x8C80C4", Offset = "0x8C80C4", VA = "0x8C80C4")]
	private void mtsbClearField()
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0x8C8874", Offset = "0x8C8874", VA = "0x8C8874")]
	private void mtsfChecker()
	{
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0x8C7B70", Offset = "0x8C7B70", VA = "0x8C7B70")]
	private void mtsbNextStep(int step)
	{
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0x8C70F4", Offset = "0x8C70F4", VA = "0x8C70F4")]
	private void mtsbNextStep()
	{
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0x8C89F8", Offset = "0x8C89F8", VA = "0x8C89F8")]
	private void OnAcceptBtnMessageClick()
	{
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0x8C8A6C", Offset = "0x8C8A6C", VA = "0x8C8A6C")]
	public bool PassIF(NewEvent eve, int ex, CommandTypes itType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0x8C321C", Offset = "0x8C321C", VA = "0x8C321C")]
	private int CheckMultChoice(NewEvent eve, int index)
	{
		return default(int);
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0x8CB538", Offset = "0x8CB538", VA = "0x8CB538")]
	public bool Do_it(NewEvent eve, int ex, CommandTypes itType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0x8CE328", Offset = "0x8CE328", VA = "0x8CE328")]
	private void RemoveSomeSailsmans(string name, int count)
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0x8CE04C", Offset = "0x8CE04C", VA = "0x8CE04C")]
	private void RemoveAllSailsmans(string name)
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0x8CF320", Offset = "0x8CF320", VA = "0x8CF320")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58A49C", Offset = "0x58A49C")]
	public IEnumerator TeamInTaver(CMD scr, NewEvent ico)
	{
		return null;
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0x8C1B28", Offset = "0x8C1B28", VA = "0x8C1B28")]
	public void Refresh_small_icons([Optional] NewEvent concret_check)
	{
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0x8CFD94", Offset = "0x8CFD94", VA = "0x8CFD94")]
	private bool CheckConditionVisitLandLocationWait(NewEvent ico, NewEvent quest, string id, int step, int locationId, bool activateComponent = true, bool isLegend = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0x8CF3D0", Offset = "0x8CF3D0", VA = "0x8CF3D0")]
	private void CheckLegPrincQuestMarkers(NewEvent ico)
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0x8D00B0", Offset = "0x8D00B0", VA = "0x8D00B0")]
	public bool Back_TO_First_IF(NewEvent eve, int EXE)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0x8C3D84", Offset = "0x8C3D84", VA = "0x8C3D84")]
	public void NEW_DisablingEnablingEventsPoint([Optional] NewEvent Focus, bool CanExecuteFight = true, bool AllowDecline = false, string OverrideTextAccept = "", string OverrideTextTitle = "")
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0x8D0308", Offset = "0x8D0308", VA = "0x8D0308")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0x8D0408", Offset = "0x8D0408", VA = "0x8D0408")]
	public int GetEventIndex(string id)
	{
		return default(int);
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0x8CDDF4", Offset = "0x8CDDF4", VA = "0x8CDDF4")]
	public void CheckNewJournalMessage()
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0x8D04AC", Offset = "0x8D04AC", VA = "0x8D04AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0x8D076C", Offset = "0x8D076C", VA = "0x8D076C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0x8D1BC8", Offset = "0x8D1BC8", VA = "0x8D1BC8")]
	public void HideCurrentExeVisual()
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0x8D1E38", Offset = "0x8D1E38", VA = "0x8D1E38")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0x8D1E44", Offset = "0x8D1E44", VA = "0x8D1E44")]
	private void OnMultiChoiceFirstChoiceBtn()
	{
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0x8D23A0", Offset = "0x8D23A0", VA = "0x8D23A0")]
	private void OnMultiChoiceSecondChioceBtn()
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0x8D28FC", Offset = "0x8D28FC", VA = "0x8D28FC")]
	private void OnMultiChoiceThirdChioceBtn()
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0x8C81D0", Offset = "0x8C81D0", VA = "0x8C81D0")]
	public void EnableQuest(string nextQuest)
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0x8D0528", Offset = "0x8D0528", VA = "0x8D0528")]
	public void ResetEvents()
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0x8C2F60", Offset = "0x8C2F60", VA = "0x8C2F60")]
	private void SetFightBarColor(int _frac1, int _frac2, int index)
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0x8D2E58", Offset = "0x8D2E58", VA = "0x8D2E58")]
	public void UpdateAllFightBarsColor()
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0x8D3184", Offset = "0x8D3184", VA = "0x8D3184")]
	public Events()
	{
	}
}
[Token(Token = "0x2000203")]
public class EventShipSpawner : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000204")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578A8C", Offset = "0x578A8C")]
	private sealed class <>c
	{
		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<ShipParams> <>9__0_0;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Predicate<ShipParams> <>9__0_1;

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x1508404", Offset = "0x1508404", VA = "0x1508404")]
		public <>c()
		{
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0x150840C", Offset = "0x150840C", VA = "0x150840C")]
		internal bool <SpawnEnemyShip>b__0_0(ShipParams x)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x1508464", Offset = "0x1508464", VA = "0x1508464")]
		internal bool <SpawnEnemyShip>b__0_1(ShipParams x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0x8B4EF0", Offset = "0x8B4EF0", VA = "0x8B4EF0")]
	public static void SpawnEnemyShip(NewEvent localEVE, int localEx, bool MapOpenedPass)
	{
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0x8B7858", Offset = "0x8B7858", VA = "0x8B7858")]
	public static void AutoFight(NewEvent localEVE, int localEx)
	{
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0x8B7784", Offset = "0x8B7784", VA = "0x8B7784")]
	private static ShipParams DecreaseShipParams(ShipParams original)
	{
		return null;
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0x8BC9EC", Offset = "0x8BC9EC", VA = "0x8BC9EC")]
	public EventShipSpawner()
	{
	}
}
[Token(Token = "0x2000205")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x578A9C", Offset = "0x578A9C")]
public class EventsScriptableObject : ScriptableObject
{
	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<NewEvent> events;

	[Token(Token = "0x17000157")]
	public List<NewEvent> Events
	{
		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x9BBCE4", Offset = "0x9BBCE4", VA = "0x9BBCE4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0x9BBCEC", Offset = "0x9BBCEC", VA = "0x9BBCEC")]
		set
		{
		}
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0x9BBCF4", Offset = "0x9BBCF4", VA = "0x9BBCF4")]
	public EventsScriptableObject()
	{
	}
}
[Token(Token = "0x2000206")]
public class ExitScript : MonoBehaviour
{
	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject railHolder;

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0x9BC6C4", Offset = "0x9BC6C4", VA = "0x9BC6C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0x9BC6C8", Offset = "0x9BC6C8", VA = "0x9BC6C8")]
	public void OnButtonExitClick()
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0x9BC6D0", Offset = "0x9BC6D0", VA = "0x9BC6D0")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0x9BC6D8", Offset = "0x9BC6D8", VA = "0x9BC6D8")]
	public ExitScript()
	{
	}
}
[Token(Token = "0x2000207")]
public class Eye : MonoBehaviour
{
	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float randomizerLook;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 randomFactorTarg;

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 randomFactor;

	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 Eye_Forward;

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0x7AB2A0", Offset = "0x7AB2A0", VA = "0x7AB2A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0x7AB300", Offset = "0x7AB300", VA = "0x7AB300")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0x7AB528", Offset = "0x7AB528", VA = "0x7AB528")]
	public Eye()
	{
	}
}
[Token(Token = "0x2000208")]
public enum Factions
{
	[Token(Token = "0x4000F1C")]
	Tutorial = -2,
	[Token(Token = "0x4000F1D")]
	None,
	[Token(Token = "0x4000F1E")]
	Pirates,
	[Token(Token = "0x4000F1F")]
	Returners,
	[Token(Token = "0x4000F20")]
	Seekers,
	[Token(Token = "0x4000F21")]
	BlackFlame,
	[Token(Token = "0x4000F22")]
	TradeCoalition,
	[Token(Token = "0x4000F23")]
	Kingdom,
	[Token(Token = "0x4000F24")]
	Dominion,
	[Token(Token = "0x4000F25")]
	Order,
	[Token(Token = "0x4000F26")]
	Protectorate
}
[Token(Token = "0x2000209")]
public class FHYXHolder : MonoBehaviour
{
	[Token(Token = "0x4000F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject exitMessage;

	[Token(Token = "0x4000F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text messageElement;

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0x7AC524", Offset = "0x7AC524", VA = "0x7AC524")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0x7AC590", Offset = "0x7AC590", VA = "0x7AC590")]
	public FHYXHolder()
	{
	}
}
[Token(Token = "0x200020A")]
public class flyAnim : MonoBehaviour
{
	[Token(Token = "0x4000F29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 From;

	[Token(Token = "0x4000F2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 To;

	[Token(Token = "0x4000F2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float Proc;

	[Token(Token = "0x4000F2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool InvertAlpha;

	[Token(Token = "0x4000F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image Myself;

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0x15D7C8C", Offset = "0x15D7C8C", VA = "0x15D7C8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0x15D7CC8", Offset = "0x15D7CC8", VA = "0x15D7CC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0x15D7E2C", Offset = "0x15D7E2C", VA = "0x15D7E2C")]
	public flyAnim()
	{
	}
}
[Token(Token = "0x200020B")]
public class FoamAligning : MonoBehaviour
{
	[Token(Token = "0x4000F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform TargPos;

	[Token(Token = "0x4000F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform CamPos;

	[Token(Token = "0x4000F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform MyPos;

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0x7B5998", Offset = "0x7B5998", VA = "0x7B5998")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0x7B59C8", Offset = "0x7B59C8", VA = "0x7B59C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0x7B5A9C", Offset = "0x7B5A9C", VA = "0x7B5A9C")]
	public FoamAligning()
	{
	}
}
[Token(Token = "0x200020C")]
public class FortDetector : MonoBehaviour
{
	[Token(Token = "0x4000F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timer;

	[Token(Token = "0x4000F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int Fraction;

	[Token(Token = "0x4000F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool Destroyed;

	[Token(Token = "0x4000F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Ship[] ReqToKill;

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0x7B85E4", Offset = "0x7B85E4", VA = "0x7B85E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0x7B87A8", Offset = "0x7B87A8", VA = "0x7B87A8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0x7B8DA0", Offset = "0x7B8DA0", VA = "0x7B8DA0")]
	public FortDetector()
	{
	}
}
[Token(Token = "0x200020D")]
public class Fractions : MonoBehaviour
{
	[Token(Token = "0x4000F35")]
	public const int _enem = -1000;

	[Token(Token = "0x4000F36")]
	public const int _izgo = -750;

	[Token(Token = "0x4000F37")]
	public const int _otst = -500;

	[Token(Token = "0x4000F38")]
	public const int _naru = -250;

	[Token(Token = "0x4000F39")]
	public const int _neut = 0;

	[Token(Token = "0x4000F3A")]
	public const int _blag = 250;

	[Token(Token = "0x4000F3B")]
	public const int _dowe = 500;

	[Token(Token = "0x4000F3C")]
	public const int _drug = 750;

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0x7BBFF0", Offset = "0x7BBFF0", VA = "0x7BBFF0")]
	public Fractions()
	{
	}
}
[Token(Token = "0x200020E")]
public class FxTexTrans : MonoBehaviour
{
	[Token(Token = "0x4000F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector2 Offsetter;

	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject attachto;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Ship attachtoShip;

	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float Alpha;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float GBcolors;

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0x7BC2CC", Offset = "0x7BC2CC", VA = "0x7BC2CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0x7BC35C", Offset = "0x7BC35C", VA = "0x7BC35C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0x7BC3C0", Offset = "0x7BC3C0", VA = "0x7BC3C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0x7BC6B4", Offset = "0x7BC6B4", VA = "0x7BC6B4")]
	public FxTexTrans()
	{
	}
}
[Token(Token = "0x200020F")]
public class FxTexTranslating : MonoBehaviour
{
	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speedTexTrans;

	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector2 Offsetter;

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0x7BC6BC", Offset = "0x7BC6BC", VA = "0x7BC6BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0x7BC74C", Offset = "0x7BC74C", VA = "0x7BC74C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0x7BC810", Offset = "0x7BC810", VA = "0x7BC810")]
	public FxTexTranslating()
	{
	}
}
[Token(Token = "0x2000210")]
public class Gates : MonoBehaviour
{
	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool Opened;

	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource OpeningSound;

	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float OpenProc;

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0x7F0518", Offset = "0x7F0518", VA = "0x7F0518")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0x7F051C", Offset = "0x7F051C", VA = "0x7F051C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0x7F09E0", Offset = "0x7F09E0", VA = "0x7F09E0")]
	public Gates()
	{
	}
}
[Token(Token = "0x2000211")]
public class GreyNotInTown : MonoBehaviour
{
	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image myIcon;

	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Color startColor;

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0x7F8CF8", Offset = "0x7F8CF8", VA = "0x7F8CF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0x7F8D38", Offset = "0x7F8D38", VA = "0x7F8D38")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0x7F8E84", Offset = "0x7F8E84", VA = "0x7F8E84")]
	public GreyNotInTown()
	{
	}
}
[Token(Token = "0x2000212")]
public class HP_billboard : MonoBehaviour
{
	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool Vert;

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0x7F8E8C", Offset = "0x7F8E8C", VA = "0x7F8E8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0x7F8FEC", Offset = "0x7F8FEC", VA = "0x7F8FEC")]
	public HP_billboard()
	{
	}
}
[Token(Token = "0x2000213")]
public class Gamepad_focus_ret : MonoBehaviour
{
	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject returnedFocusGO;

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject returnedFocusOnEnable;

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0x7F0320", Offset = "0x7F0320", VA = "0x7F0320")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0x7F0324", Offset = "0x7F0324", VA = "0x7F0324")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0x7F0328", Offset = "0x7F0328", VA = "0x7F0328")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0x7F0424", Offset = "0x7F0424", VA = "0x7F0424")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0x7F0510", Offset = "0x7F0510", VA = "0x7F0510")]
	public Gamepad_focus_ret()
	{
	}
}
[Token(Token = "0x2000214")]
public enum Achievement
{
	[Token(Token = "0x4000F4D")]
	Manuevers,
	[Token(Token = "0x4000F4E")]
	Legends,
	[Token(Token = "0x4000F4F")]
	Oscars,
	[Token(Token = "0x4000F50")]
	Forts,
	[Token(Token = "0x4000F51")]
	Piastres,
	[Token(Token = "0x4000F52")]
	FractionRating,
	[Token(Token = "0x4000F53")]
	RamKills,
	[Token(Token = "0x4000F54")]
	Boarding,
	[Token(Token = "0x4000F55")]
	PoisonedAspid,
	[Token(Token = "0x4000F56")]
	TeamRecover,
	[Token(Token = "0x4000F57")]
	LeviathanDeaths,
	[Token(Token = "0x4000F58")]
	Multiplayer,
	[Token(Token = "0x4000F59")]
	Tutor,
	[Token(Token = "0x4000F5A")]
	Tornados,
	[Token(Token = "0x4000F5B")]
	MeetDev,
	[Token(Token = "0x4000F5C")]
	DlcLanging,
	[Token(Token = "0x4000F5D")]
	DlcChina,
	[Token(Token = "0x4000F5E")]
	Doctor,
	[Token(Token = "0x4000F5F")]
	CreatureProtector,
	[Token(Token = "0x4000F60")]
	Deceiver,
	[Token(Token = "0x4000F61")]
	Saint,
	[Token(Token = "0x4000F62")]
	Maestro,
	[Token(Token = "0x4000F63")]
	Tricky,
	[Token(Token = "0x4000F64")]
	Wukong
}
[Token(Token = "0x2000215")]
public class H_Achieves : BaseWindow
{
	[Token(Token = "0x2000216")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578AFC", Offset = "0x578AFC")]
	private sealed class <DelayedAchievementsSync>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public H_Achieves <>4__this;

		[Token(Token = "0x17000158")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BC1")]
			[Address(RVA = "0x15127FC", Offset = "0x15127FC", VA = "0x15127FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000159")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BC3")]
			[Address(RVA = "0x1512844", Offset = "0x1512844", VA = "0x1512844", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0x151271C", Offset = "0x151271C", VA = "0x151271C")]
		[DebuggerHidden]
		public <DelayedAchievementsSync>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0x1512748", Offset = "0x1512748", VA = "0x1512748", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0x151274C", Offset = "0x151274C", VA = "0x151274C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0x1512804", Offset = "0x1512804", VA = "0x1512804", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static H_Achieves singletone;

	[Token(Token = "0x4000F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Dictionary<Achievement, int> requirements;

	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AchievementDescriptor[] AchievesAsBtn;

	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AchievementDescriptor[] AchievesAsBtn_consoles;

	[Token(Token = "0x4000F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Image Selector;

	[Token(Token = "0x4000F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text Describe;

	[Token(Token = "0x4000F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject descriptionPanel;

	[Token(Token = "0x4000F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Image LoginGCBtnImage;

	[Token(Token = "0x4000F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Color LoginGCSuccessColor;

	[Token(Token = "0x4000F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GPGSButton gpgsButton;

	[Token(Token = "0x4000F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject closeButton;

	[Token(Token = "0x4000F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool achievementsLoaded;

	[Token(Token = "0x4000F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool gameCenterChecked;

	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float checkTimer;

	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private SaveDataAchievements achievements;

	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool needNetworkAchievs;

	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject AchWindow;

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0x7F8FF4", Offset = "0x7F8FF4", VA = "0x7F8FF4")]
	public void ProcessLoadedAchievements(IAchievement[] achievements)
	{
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0x7F9E14", Offset = "0x7F9E14", VA = "0x7F9E14")]
	public void SelectAchieve(int index)
	{
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0x7FA104", Offset = "0x7FA104", VA = "0x7FA104")]
	public void OpenGameCentr()
	{
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0x7FA108", Offset = "0x7FA108", VA = "0x7FA108")]
	public void OpenGPGsAchievements()
	{
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0x7FA10C", Offset = "0x7FA10C", VA = "0x7FA10C")]
	private void UpdateGPGsButton()
	{
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0x7FA110", Offset = "0x7FA110", VA = "0x7FA110")]
	private void UpdateLoginGCButton()
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0x7FA1C0", Offset = "0x7FA1C0", VA = "0x7FA1C0")]
	public void UpdateSocialButtons()
	{
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0x7F97E4", Offset = "0x7F97E4", VA = "0x7F97E4")]
	public bool UnlockAchieve(Achievement ach, bool unlockInClient = true, bool syncAch = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0x7FA260", Offset = "0x7FA260", VA = "0x7FA260")]
	public static void OnReportFinished(bool result)
	{
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0x7FA30C", Offset = "0x7FA30C", VA = "0x7FA30C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0x7FAA1C", Offset = "0x7FAA1C", VA = "0x7FAA1C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0x7FAAE8", Offset = "0x7FAAE8", VA = "0x7FAAE8")]
	private void OnProfileLoaded(object obj)
	{
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0x7FAB70", Offset = "0x7FAB70", VA = "0x7FAB70")]
	private void Init()
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0x7F972C", Offset = "0x7F972C", VA = "0x7F972C")]
	public bool IsAchUnlocked(Achievement a)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0x7FAC2C", Offset = "0x7FAC2C", VA = "0x7FAC2C")]
	public int GetAchValue(Achievement a)
	{
		return default(int);
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0x7F95FC", Offset = "0x7F95FC", VA = "0x7F95FC")]
	private AchievementDescriptor GetAchButton(Achievement a)
	{
		return null;
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0x7FADB4", Offset = "0x7FADB4", VA = "0x7FADB4")]
	private void RefreshAchievementsImages()
	{
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0x7FAC28", Offset = "0x7FAC28", VA = "0x7FAC28")]
	public void RefreshAchWindow()
	{
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0x7FB17C", Offset = "0x7FB17C", VA = "0x7FB17C")]
	public void onButtonClick()
	{
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0x7FB2DC", Offset = "0x7FB2DC", VA = "0x7FB2DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0x7FB4FC", Offset = "0x7FB4FC", VA = "0x7FB4FC")]
	private void MyUpdate()
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0x7FABA8", Offset = "0x7FABA8", VA = "0x7FABA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58A554", Offset = "0x58A554")]
	private IEnumerator DelayedAchievementsSync()
	{
		return null;
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0x7FBAEC", Offset = "0x7FBAEC", VA = "0x7FBAEC")]
	private void CheckAchievementsDownloaded()
	{
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0x7FBD28", Offset = "0x7FBD28", VA = "0x7FBD28", Slot = "5")]
	public override void Close()
	{
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0x7FBD30", Offset = "0x7FBD30", VA = "0x7FBD30")]
	public H_Achieves()
	{
	}
}
[Token(Token = "0x2000217")]
public class H_AnimRotation : MonoBehaviour
{
	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool useUnscaledTime;

	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float SpeedX;

	[Token(Token = "0x4000F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float SpeedY;

	[Token(Token = "0x4000F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float SpeedZ;

	[Token(Token = "0x4000F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float RotX;

	[Token(Token = "0x4000F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float RotY;

	[Token(Token = "0x4000F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float RotZ;

	[Token(Token = "0x4000F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float Decr_Speed_RotX;

	[Token(Token = "0x4000F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float Decr_Speed_RotY;

	[Token(Token = "0x4000F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float Decr_Speed_RotZ;

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0x7FBFC8", Offset = "0x7FBFC8", VA = "0x7FBFC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0x7FC1F4", Offset = "0x7FC1F4", VA = "0x7FC1F4")]
	public H_AnimRotation()
	{
	}
}
[Token(Token = "0x2000218")]
public class H_blackScreen : MonoBehaviour
{
	[Token(Token = "0x4000F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float FadingSpeed_In;

	[Token(Token = "0x4000F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float FadingSpeed_Out;

	[Token(Token = "0x4000F85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static H_blackScreen singletone;

	[Token(Token = "0x4000F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static H_Core.H_delegate LoadingMomentDLGT;

	[Token(Token = "0x4000F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image MyRender;

	[Token(Token = "0x4000F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject LoadingText;

	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool ShowingPeek;

	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private static bool WasShown;

	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	private static bool isManualMode;

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0x162E524", Offset = "0x162E524", VA = "0x162E524")]
	public static void ShowBlackScreen(H_Core.H_delegate onFinished)
	{
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0x162E9F8", Offset = "0x162E9F8", VA = "0x162E9F8")]
	public static void HideBlackScreen()
	{
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0x1629014", Offset = "0x1629014", VA = "0x1629014")]
	public static void CallBlackScreen(H_Core.H_delegate LoadingMoment)
	{
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0x162E59C", Offset = "0x162E59C", VA = "0x162E59C")]
	private static void StartBlackScreenFade(H_Core.H_delegate LoadingMoment)
	{
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0x162EA5C", Offset = "0x162EA5C", VA = "0x162EA5C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0x162F02C", Offset = "0x162F02C", VA = "0x162F02C")]
	public H_blackScreen()
	{
	}
}
[Token(Token = "0x2000219")]
public class H_camera : MonoBehaviour
{
	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SaveDataSettings settings;

	[Token(Token = "0x4000F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool FreeCameraMode;

	[Token(Token = "0x4000F8E")]
	public const float DEFAULT_ROTATION_SPEED = 10f;

	[Token(Token = "0x4000F8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float cameraRotationSpeed;

	[Token(Token = "0x4000F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool Stereo3D;

	[Token(Token = "0x4000F91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	public static bool Stereo3D_splitVertical;

	[Token(Token = "0x4000F92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
	public static bool Stereo3D_optimized;

	[Token(Token = "0x4000F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float Stereo3D_eyeDst;

	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static float Stereo3D_depth;

	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool Rotation_as_VR;

	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject FirstEyeCamera;

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject SecondEyeCamera;

	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static bool isDisabledZoom;

	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public static bool isDisabledFreeCamera;

	[Token(Token = "0x4000F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E504", Offset = "0x57E504")]
	private Camera <CameraComponent>k__BackingField;

	[Token(Token = "0x4000F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool InitialCamera;

	[Token(Token = "0x4000F9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool LockCameraControl;

	[Token(Token = "0x4000F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static H_camera CurCamera;

	[Token(Token = "0x4000F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject CamHolder;

	[Token(Token = "0x4000F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool Skip_Smooth_Camera_Paning_Once;

	[Token(Token = "0x4000FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool Smooth_Camera_Paning;

	[Token(Token = "0x4000FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int SmoothPowerPanMin0;

	[Token(Token = "0x4000FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool Smooth_Camera_Rotation;

	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int SmoothPowerRotMin0;

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool InHand_Mode;

	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float InHand_Amplituda;

	[Token(Token = "0x4000FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool Pan_2D;

	[Token(Token = "0x4000FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float Pan_Speed;

	[Token(Token = "0x4000FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float Pan_Speed_switch;

	[Token(Token = "0x4000FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool Pan_As_Align_Active;

	[Token(Token = "0x4000FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform Pan_As_Align_To_Object;

	[Token(Token = "0x4000FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector3 Pan_align_offset;

	[Token(Token = "0x4000FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool Pan_By_LMB_or_Finger;

	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	public bool Pan_By_RMB_or_TwoFingers;

	[Token(Token = "0x4000FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8E")]
	public bool Pan_By_Moving;

	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8F")]
	public bool Pan_By_Gamepad_Arrows;

	[Token(Token = "0x4000FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool Pan_By_Gamepad_LStick;

	[Token(Token = "0x4000FB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	public bool Pan_By_Gamepad_RStick;

	[Token(Token = "0x4000FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	public bool Pan_By_Keyboard;

	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
	public bool Pan_Limit;

	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Vector2 Pan_Limit_X_min_max;

	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public Vector2 Pan_Limit_Y_min_max;

	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public Vector2 Pan_Limit_Z_min_max;

	[Token(Token = "0x4000FB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public Vector2 Pan_Limit_X_SWITCH;

	[Token(Token = "0x4000FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public Vector2 Pan_Limit_Z_SWITCHsta;

	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float Rot_Speed;

	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool Rot_As_Fallow_Active;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform Rot_As_Fallow_object;

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool Rot_Limited_X;

	[Token(Token = "0x4000FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float Rot_Limit_X_direction;

	[Token(Token = "0x4000FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float Rot_Limit_X_value;

	[Token(Token = "0x4000FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float Rot_Limit_X_direction_default;

	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float Rot_Limit_X_value_default;

	[Token(Token = "0x4000FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public bool Rot_Limited_Z;

	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float Rot_Limit_Z_direction;

	[Token(Token = "0x4000FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float Rot_Limit_Z_value;

	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool Rot_By_MouseMove;

	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	public bool Rot_By_MouseMove_lock_cursor;

	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
	public bool Rot_By_LMB_or_Finger;

	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF3")]
	public bool Rot_By_RMB_or_TwoFingers;

	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public bool Rot_By_Gamepad_Arrows;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
	public bool Rot_By_Gamepad_LStick;

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF6")]
	public bool Rot_By_Gamepad_RStick;

	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF7")]
	public bool Rot_By_Keyboard;

	[Token(Token = "0x4000FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public bool Zoom_By_Keyboard;

	[Token(Token = "0x4000FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
	public bool Zoom_By_Doubletap_or_Click;

	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public KeyCode ZoomIn_key;

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public KeyCode ZoomOut_key;

	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public bool Zoom_Gamepad_Arrows;

	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x105")]
	public bool Zoom_Gamepad_Left_Stick;

	[Token(Token = "0x4000FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x106")]
	public bool Zoom_Gamepad_Right_Stick;

	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float Zoom_beforeFirstPerson;

	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public float Zoom;

	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float Zoom_speed;

	[Token(Token = "0x4000FD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public float Zoom_min;

	[Token(Token = "0x4000FD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public float Zoom_max;

	[Token(Token = "0x4000FD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public float RegularCameraShakingPower;

	[Token(Token = "0x4000FD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public float MaximalShakingAccumulation;

	[Token(Token = "0x4000FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public float ShakingFalloffSpeed;

	[Token(Token = "0x4000FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public float ShakingAmplitude;

	[Token(Token = "0x4000FDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public float ShakingFrequencyMin;

	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public float ShakingFrequencyMax;

	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public float PaningX;

	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public float PaningY;

	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public float PaningZ;

	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float Rot_X;

	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public float Rot_Z;

	[Token(Token = "0x4000FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public float Rot_Y;

	[Token(Token = "0x4000FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Ship previewShip;

	[Token(Token = "0x4000FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public bool CapturetAngle;

	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public Quaternion wasRot;

	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public float RotX_was;

	[Token(Token = "0x4000FE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public float RotZ_was;

	[Token(Token = "0x4000FE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public float Zoom_targ;

	[Token(Token = "0x4000FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public float PaningX_targ;

	[Token(Token = "0x4000FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	public float PaningY_targ;

	[Token(Token = "0x4000FEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public float PaningZ_targ;

	[Token(Token = "0x4000FED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float CalcValue;

	[Token(Token = "0x4000FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public float TARGposOfsX;

	[Token(Token = "0x4000FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public float TARGposOfsY;

	[Token(Token = "0x4000FF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public float TARGposOfsZ;

	[Token(Token = "0x4000FF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	public float posOfsX;

	[Token(Token = "0x4000FF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public float posOfsY;

	[Token(Token = "0x4000FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public float posOfsZ;

	[Token(Token = "0x4000FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private float CamShk;

	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private float CamShkCnt;

	[Token(Token = "0x4000FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public float randYkeep;

	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	public float randXkeep;

	[Token(Token = "0x4000FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public float randZkeep;

	[Token(Token = "0x4000FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	public float YrotOfs;

	[Token(Token = "0x4000FFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public float XrotOfs;

	[Token(Token = "0x4000FFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	public float ZrotOfs;

	[Token(Token = "0x4000FFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public float Targ_Rot_X;

	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	public float Targ_Rot_Z;

	[Token(Token = "0x4000FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public float Targ_Rot_Y;

	[Token(Token = "0x4000FFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	[SerializeField]
	private bool enableRotXImpact;

	[Token(Token = "0x4001000")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[SerializeField]
	private float impactValue;

	[Token(Token = "0x1700015A")]
	public Camera CameraComponent
	{
		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0x162F0A0", Offset = "0x162F0A0", VA = "0x162F0A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58A60C", Offset = "0x58A60C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x162F0A8", Offset = "0x162F0A8", VA = "0x162F0A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58A61C", Offset = "0x58A61C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0x162717C", Offset = "0x162717C", VA = "0x162717C")]
	public void Set3Dsettings()
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0x1625E80", Offset = "0x1625E80", VA = "0x1625E80")]
	public void ResetStereo3D()
	{
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0x162F0B0", Offset = "0x162F0B0", VA = "0x162F0B0")]
	public void ResetCameraForPreviewShip()
	{
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0x162F1C0", Offset = "0x162F1C0", VA = "0x162F1C0")]
	public void SaveZoomBeforeFirstPerson(float val)
	{
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0x162F1C8", Offset = "0x162F1C8", VA = "0x162F1C8")]
	public void Enter_FirstPersonOut()
	{
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0x162F250", Offset = "0x162F250", VA = "0x162F250")]
	private void Enter_firstPerson()
	{
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0x162F54C", Offset = "0x162F54C", VA = "0x162F54C")]
	public void Exit_firstPerson()
	{
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0x162F8EC", Offset = "0x162F8EC", VA = "0x162F8EC")]
	public static void ChangeCamera(string CameraName)
	{
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0x163075C", Offset = "0x163075C", VA = "0x163075C")]
	public static void ChangeCamera(Camera CameraLink)
	{
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0x16314BC", Offset = "0x16314BC", VA = "0x16314BC")]
	public static void ShakeOnce(float powerDefault30)
	{
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0x1631540", Offset = "0x1631540", VA = "0x1631540")]
	public static void ShakeRegular(float powerDefault20)
	{
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0x16315EC", Offset = "0x16315EC", VA = "0x16315EC")]
	public static void ToggleFreeCamera()
	{
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0x1631BF8", Offset = "0x1631BF8", VA = "0x1631BF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0x16323D8", Offset = "0x16323D8", VA = "0x16323D8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0x1632468", Offset = "0x1632468", VA = "0x1632468")]
	public static void LookAtTarget(Vector3 target)
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0x16326AC", Offset = "0x16326AC", VA = "0x16326AC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0x16346E0", Offset = "0x16346E0", VA = "0x16346E0")]
	public H_camera()
	{
	}
}
[Token(Token = "0x200021A")]
public class H_Core : MonoBehaviour
{
	[Token(Token = "0x200021B")]
	public delegate void H_delegate();

	[Serializable]
	[Token(Token = "0x200021C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578B0C", Offset = "0x578B0C")]
	private sealed class <>c
	{
		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static H_delegate <>9__50_0;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static H_delegate <>9__50_1;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static H_delegate <>9__50_2;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static H_delegate <>9__50_3;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static H_delegate <>9__50_4;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static H_delegate <>9__50_5;

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x15128B0", Offset = "0x15128B0", VA = "0x15128B0")]
		public <>c()
		{
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x15128B8", Offset = "0x15128B8", VA = "0x15128B8")]
		internal void <.cctor>b__28_0()
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x15128BC", Offset = "0x15128BC", VA = "0x15128BC")]
		internal void <STRICT_LOAD_INSTANT>b__50_0()
		{
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x15128C0", Offset = "0x15128C0", VA = "0x15128C0")]
		internal void <STRICT_LOAD_INSTANT>b__50_1()
		{
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x15128C4", Offset = "0x15128C4", VA = "0x15128C4")]
		internal void <STRICT_LOAD_INSTANT>b__50_2()
		{
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x15128C8", Offset = "0x15128C8", VA = "0x15128C8")]
		internal void <STRICT_LOAD_INSTANT>b__50_3()
		{
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x15128CC", Offset = "0x15128CC", VA = "0x15128CC")]
		internal void <STRICT_LOAD_INSTANT>b__50_4()
		{
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x15128D0", Offset = "0x15128D0", VA = "0x15128D0")]
		internal void <STRICT_LOAD_INSTANT>b__50_5()
		{
		}
	}

	[Token(Token = "0x200021D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578B1C", Offset = "0x578B1C")]
	private sealed class <>c__DisplayClass49_0
	{
		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool LoadTutor;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool LoadReset;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool resetAllTutor;

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x15128D4", Offset = "0x15128D4", VA = "0x15128D4")]
		public <>c__DisplayClass49_0()
		{
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x15128DC", Offset = "0x15128DC", VA = "0x15128DC")]
		internal void <STRICT_LOAD>b__0()
		{
		}
	}

	[Token(Token = "0x4001001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DateTime StartTime;

	[Token(Token = "0x4001002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OpenDLCtime;

	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static bool isApplicationQuitting;

	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	public static bool PS4Platform;

	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
	public static bool decreaseXPonStart;

	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static float mainGameplayTimeInSave;

	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject cheatsPanel;

	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject cheatsPanelDlc;

	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject cheatsBtnDlc;

	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject cheatsBtnArena;

	[Token(Token = "0x400100B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture TelegraphNormal;

	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture TelegraphHide;

	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static char rep_it;

	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public static char rep_on;

	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static bool DEV_MODE;

	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public static bool DLC_LANDING;

	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public static bool DLC_CHINE;

	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
	public static bool DLC_TOWN;

	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static bool IsLogoSceneFinished;

	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public static bool Main_Gameplay;

	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static H_Core Singletoon;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static bool Pause;

	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public static float TF;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static float PrevTime;

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private static float SystemSlowMo;

	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static float UserSlowMo;

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool wasPausedOnFocusLost;

	[Token(Token = "0x400101D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public static bool WasHack;

	[Token(Token = "0x400101E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static float save_culldown_1sec;

	[Token(Token = "0x400101F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public static float cloudSaveCooldown;

	[Token(Token = "0x4001020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static DateTime saveTimeLimit;

	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject TutorialGAMEOBJECT;

	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject WheelGAMEOBJECT;

	[Token(Token = "0x1700015B")]
	public static float MainGameplayTime
	{
		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0x7FC1FC", Offset = "0x7FC1FC", VA = "0x7FC1FC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700015C")]
	public static float ScreenAspectRatio
	{
		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0x7FC204", Offset = "0x7FC204", VA = "0x7FC204")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700015D")]
	public static bool IsIphoneX
	{
		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0x7FC238", Offset = "0x7FC238", VA = "0x7FC238")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000016")]
	public static event Action UserSlowMoChanged
	{
		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0x7FC240", Offset = "0x7FC240", VA = "0x7FC240")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58A62C", Offset = "0x58A62C")]
		add
		{
		}
		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0x7FC338", Offset = "0x7FC338", VA = "0x7FC338")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58A63C", Offset = "0x58A63C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0x7FC430", Offset = "0x7FC430", VA = "0x7FC430")]
	public static void GetReplaceChar()
	{
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0x7FC564", Offset = "0x7FC564", VA = "0x7FC564")]
	static H_Core()
	{
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0x7FC754", Offset = "0x7FC754", VA = "0x7FC754")]
	public static void SetSlowMo(float TargetTimeScale)
	{
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0x7FC810", Offset = "0x7FC810", VA = "0x7FC810")]
	public static void DisableTimeScale()
	{
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0x7FC87C", Offset = "0x7FC87C", VA = "0x7FC87C")]
	public void SetSlowMo_nonstatc(float TargetTimeScale)
	{
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0x7FC8E4", Offset = "0x7FC8E4", VA = "0x7FC8E4")]
	public static void ToggleSlowMo()
	{
	}

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0x7FC950", Offset = "0x7FC950", VA = "0x7FC950")]
	public static void ResetTutor(bool resetAllTutor)
	{
	}

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0x7FA1C4", Offset = "0x7FA1C4", VA = "0x7FA1C4")]
	public static void GLOBAL_SAVE(bool save_settings = true, bool save_base = true, bool save_map = true, bool save_quests = true, bool forceSave = false, bool homeButtSave = false)
	{
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0x7FCAF0", Offset = "0x7FCAF0", VA = "0x7FCAF0")]
	public static void STRICT_LOAD(bool LoadTutor, bool LoadReset, bool resetAllTutor = true)
	{
	}

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0x7FCBF8", Offset = "0x7FCBF8", VA = "0x7FCBF8")]
	public static void STRICT_LOAD_INSTANT(bool LoadTutor, bool LoadReset, bool resetAllTutor = true, bool callFromCloudLoad = false)
	{
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0x7FE3B0", Offset = "0x7FE3B0", VA = "0x7FE3B0")]
	public static void GLOBAL_LOAD(bool load_settings, bool load_base, bool load_map, bool load_quests)
	{
	}

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0x7FE43C", Offset = "0x7FE43C", VA = "0x7FE43C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0x7FE78C", Offset = "0x7FE78C", VA = "0x7FE78C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0x7FE948", Offset = "0x7FE948", VA = "0x7FE948")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0x7FEF4C", Offset = "0x7FEF4C", VA = "0x7FEF4C")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0x7FEFC0", Offset = "0x7FEFC0", VA = "0x7FEFC0")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0x7FEFC4", Offset = "0x7FEFC4", VA = "0x7FEFC4")]
	private void PauseOnFocusLost(bool focus)
	{
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0x7FF0B4", Offset = "0x7FF0B4", VA = "0x7FF0B4")]
	public static Vector2 GetDefaultShipPosition(int mapNumber)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0x7FF0F4", Offset = "0x7FF0F4", VA = "0x7FF0F4")]
	public static void CheckQuestsActivation()
	{
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0x7FFA24", Offset = "0x7FFA24", VA = "0x7FFA24")]
	public static void RunTutorial()
	{
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0x7FFB18", Offset = "0x7FFB18", VA = "0x7FFB18")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0x7FFB80", Offset = "0x7FFB80", VA = "0x7FFB80")]
	public H_Core()
	{
	}
}
[Token(Token = "0x200021E")]
public class H_Flag : MonoBehaviour
{
	[Token(Token = "0x400102D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int frm;

	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float frmcnt;

	[Token(Token = "0x400102F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool AutoSet;

	[Token(Token = "0x4001030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshFilter MyMesh;

	[Token(Token = "0x4001031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int FlagIndex;

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0x7FFF84", Offset = "0x7FFF84", VA = "0x7FFF84")]
	public void SetFlag(int index)
	{
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0x80005C", Offset = "0x80005C", VA = "0x80005C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0x800230", Offset = "0x800230", VA = "0x800230")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0x80035C", Offset = "0x80035C", VA = "0x80035C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0x800574", Offset = "0x800574", VA = "0x800574")]
	public H_Flag()
	{
	}
}
[Token(Token = "0x200021F")]
public class H_FX : MonoBehaviour
{
	[Token(Token = "0x4001032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool PlayOnAwake;

	[Token(Token = "0x4001033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float PlayOnAwake_Sec;

	[Token(Token = "0x4001034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int FxPercentWithSound;

	[Token(Token = "0x4001035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool DeleteWhenNoParticles;

	[Token(Token = "0x4001036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float seconds;

	[Token(Token = "0x4001037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource mySFX;

	[Token(Token = "0x4001038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool SndLoop;

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0x7FFB88", Offset = "0x7FFB88", VA = "0x7FFB88")]
	public void PlayFX(float Sec = 0f)
	{
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0x7FFCAC", Offset = "0x7FFCAC", VA = "0x7FFCAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0x7FFDE8", Offset = "0x7FFDE8", VA = "0x7FFDE8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0x7FFF7C", Offset = "0x7FFF7C", VA = "0x7FFF7C")]
	public H_FX()
	{
	}
}
[Token(Token = "0x2000220")]
public class H_input : MonoBehaviour
{
	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform returnFocusTo;

	[Token(Token = "0x400103A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int nextGood;

	[Token(Token = "0x400103B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform prevBtn;

	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] Link;

	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform[] LinkMenu;

	[Token(Token = "0x400103E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform[] LinkNetwork;

	[Token(Token = "0x400103F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform[] LinkJournal;

	[Token(Token = "0x4001040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform[] LinkTowDescribe;

	[Token(Token = "0x4001041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform[] LinkSysMegssage;

	[Token(Token = "0x4001042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform[] LinkQwestMessage;

	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform[] LinkMapBattles;

	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform[] LinkMapBuffs;

	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform[] LinkCentralPanel;

	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform[] LinkBoarding;

	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform[] LinkBoarding_consoles;

	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform[] LinkHoldUI;

	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform[] LinkHoldBuyUI;

	[Token(Token = "0x400104A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform[] LinkItemsStorage;

	[Token(Token = "0x400104B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform[] LinkEquipItemsUI;

	[Token(Token = "0x400104C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform[] LinkCrewmanDeckUI;

	[Token(Token = "0x400104D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform[] LinkConfigCustomizeUI;

	[Token(Token = "0x400104E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform[] LinkPrev;

	[Token(Token = "0x400104F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Toggle UseGamepad;

	[Token(Token = "0x4001050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject Gamepad_Cursor;

	[Token(Token = "0x4001051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject Gamepad_Cursor_Clone;

	[Token(Token = "0x4001052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Button UnderCursorBtn;

	[Token(Token = "0x4001053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public ScrollRect UnderCursorRect;

	[Token(Token = "0x4001054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Slider UnderCursorSli;

	[Token(Token = "0x4001055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Toggle UnderCursorTog;

	[Token(Token = "0x4001056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public InputField UnderCursorInput;

	[Token(Token = "0x4001057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Sprite Gamepad_Cursor_Base;

	[Token(Token = "0x4001058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Transform Gamepad_Cursor_Parent;

	[Token(Token = "0x4001059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool cursorImageEnabled;

	[Token(Token = "0x400105A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static GameObject toggleHilight;

	[Token(Token = "0x400105B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static GameObject toolTipMessage;

	[Token(Token = "0x400105C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static bool[] Gamepad_Down;

	[Token(Token = "0x400105D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static bool[] Gamepad_Downed;

	[Token(Token = "0x400105E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static bool[] Gamepad_Up;

	[Token(Token = "0x400105F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static float[] Gamepad_Axis;

	[Token(Token = "0x4001060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Text[] Gamepad_Title;

	[Token(Token = "0x4001061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private int Gamepad_Listen;

	[Token(Token = "0x4001062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float Gamepad_CheckConnect;

	[Token(Token = "0x4001063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private bool BlockAfterListen;

	[Token(Token = "0x4001064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Button Gamepad_Close;

	[Token(Token = "0x4001065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Vector2 Gamepad_Cursor_baseSize;

	[Token(Token = "0x4001066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Vector2 Gamepad_Cursor_Decor_baseSize;

	[Token(Token = "0x4001067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static H_input singletone;

	[Token(Token = "0x4001068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public AudioClip UI_ClickSound;

	[Token(Token = "0x4001069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public bool TouchDown_IN_controll_Object;

	[Token(Token = "0x400106A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Texture2D CursorTex;

	[Token(Token = "0x400106B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Texture2D CursorTexScaled;

	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static bool MouseMoveCam_ON;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public static bool OnGui;

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public static bool OverGui;

	[Token(Token = "0x400106F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	public static bool DoubleClickTap;

	[Token(Token = "0x4001070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public static bool DoubleClick_catch;

	[Token(Token = "0x4001071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static Vector2 DblTapFirst;

	[Token(Token = "0x4001072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static float dbltaptimer;

	[Token(Token = "0x4001073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public static float dbltaptimer_checkOff;

	[Token(Token = "0x4001074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static Vector2[] prevframe;

	[Token(Token = "0x4001075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static bool[] Down;

	[Token(Token = "0x4001076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static bool[] Up;

	[Token(Token = "0x4001077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static bool[] Downed;

	[Token(Token = "0x4001078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static bool[] Click;

	[Token(Token = "0x4001079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static bool[] Moving;

	[Token(Token = "0x400107A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static Vector2[] coord;

	[Token(Token = "0x400107B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static Vector2[] start;

	[Token(Token = "0x400107C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static Vector2[] final;

	[Token(Token = "0x400107D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static Vector2[] delta;

	[Token(Token = "0x400107E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static Vector2[] Frame_delta;

	[Token(Token = "0x400107F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public static Vector2 MMcoord;

	[Token(Token = "0x4001080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static Vector2 MMcoordRAW;

	[Token(Token = "0x4001081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public static Vector2 Mouse_Move_delta;

	[Token(Token = "0x4001082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public static bool HideCursor;

	[Token(Token = "0x4001083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private static float RememberTouchesDst;

	[Token(Token = "0x4001084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public float PlaneIntersectHeight;

	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public bool VerticalPlane;

	[Token(Token = "0x4001086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public static Vector3[] PlaneIntersect;

	[Token(Token = "0x4001087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private static Plane intersPlane;

	[Token(Token = "0x4001088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public static float DivMultiplayer;

	[Token(Token = "0x4001089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public static bool IsDex;

	[Token(Token = "0x400108A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public static float extraClickTimeout;

	[Token(Token = "0x400108B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16D")]
	private bool skipListSerch;

	[Token(Token = "0x400108C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private float tPressedStartButton;

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0x16B0128", Offset = "0x16B0128", VA = "0x16B0128")]
	public void UpdateGamepadTitles(int[] map)
	{
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0x16B012C", Offset = "0x16B012C", VA = "0x16B012C")]
	public void Gamepad_PresetXbox()
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0x16B01B0", Offset = "0x16B01B0", VA = "0x16B01B0")]
	public void Gamepad_PresetPS()
	{
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0x16B0234", Offset = "0x16B0234", VA = "0x16B0234")]
	private KeyCode FetchKey()
	{
		return default(KeyCode);
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0x16B0328", Offset = "0x16B0328", VA = "0x16B0328")]
	public void Gamepad_ListenSet(int ID)
	{
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0x16B0460", Offset = "0x16B0460", VA = "0x16B0460")]
	public void SetTouchDownHere()
	{
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0x16B046C", Offset = "0x16B046C", VA = "0x16B046C")]
	public static void Hide_Cursor()
	{
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0x16B04E0", Offset = "0x16B04E0", VA = "0x16B04E0")]
	public static void Show_Cursor()
	{
	}

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0x16B0654", Offset = "0x16B0654", VA = "0x16B0654")]
	public static void SetCursorLockState()
	{
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0x16B06FC", Offset = "0x16B06FC", VA = "0x16B06FC")]
	public void GamepadEnaTogg()
	{
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0x16B0758", Offset = "0x16B0758", VA = "0x16B0758")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0x16B0D8C", Offset = "0x16B0D8C", VA = "0x16B0D8C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0x16B0F48", Offset = "0x16B0F48", VA = "0x16B0F48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0x16B13DC", Offset = "0x16B13DC", VA = "0x16B13DC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0x16C65E4", Offset = "0x16C65E4", VA = "0x16C65E4")]
	public static bool OverGuiByIndex(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0x16C6658", Offset = "0x16C6658", VA = "0x16C6658")]
	public H_input()
	{
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0x16C69E8", Offset = "0x16C69E8", VA = "0x16C69E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58A64C", Offset = "0x58A64C")]
	private void <Start>b__91_0()
	{
	}
}
[Token(Token = "0x2000221")]
public class H_light : MonoBehaviour
{
	[Token(Token = "0x400108D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Color colorCanonFire;

	[Token(Token = "0x400108E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Color colorMeteorFire;

	[Token(Token = "0x400108F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Color colorMinesExplosion;

	[Token(Token = "0x4001090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static Color colorGunFire;

	[Token(Token = "0x4001091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static Color colorSparks;

	[Token(Token = "0x4001092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static Color colorTornado;

	[Token(Token = "0x4001093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static Color colorBarrelExplosion;

	[Token(Token = "0x4001094")]
	private const int LIGHT_COUNT = 1;

	[Token(Token = "0x4001095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static Light[] PointLight;

	[Token(Token = "0x4001096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static float[] LightAge;

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0x1697054", Offset = "0x1697054", VA = "0x1697054")]
	public static void PutLight(Vector3 _position, float _Radius, float _Intens, Color _color)
	{
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0x16972E8", Offset = "0x16972E8", VA = "0x16972E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0x1697560", Offset = "0x1697560", VA = "0x1697560")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0x169788C", Offset = "0x169788C", VA = "0x169788C")]
	public H_light()
	{
	}
}
[Token(Token = "0x2000222")]
public class H_LoadText : MonoBehaviour
{
	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0x800954", Offset = "0x800954", VA = "0x800954")]
	public static string[] LoadTextToArray(string Filename, bool replaceNewLines = false)
	{
		return null;
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0x800DD0", Offset = "0x800DD0", VA = "0x800DD0")]
	public H_LoadText()
	{
	}
}
[Token(Token = "0x2000223")]
public class H_locaHolder : MonoBehaviour
{
	[Token(Token = "0x4001097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string LocaLink;

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0x1697AC0", Offset = "0x1697AC0", VA = "0x1697AC0")]
	public H_locaHolder()
	{
	}
}
[Token(Token = "0x2000224")]
public class H_Localization
{
	[Serializable]
	[Token(Token = "0x2000225")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578B2C", Offset = "0x578B2C")]
	private sealed class <>c
	{
		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x1512B88", Offset = "0x1512B88", VA = "0x1512B88")]
		public <>c()
		{
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x1512B90", Offset = "0x1512B90", VA = "0x1512B90")]
		internal void <.cctor>b__8_0()
		{
		}
	}

	[Token(Token = "0x4001099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<string, string[]> Lang;

	[Token(Token = "0x400109A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string lastSceneName;

	[Token(Token = "0x400109B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string[] LocalizationFilenames;

	[Token(Token = "0x400109C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static SaveDataSettings settings;

	[Token(Token = "0x14000017")]
	public static event Action LanguageChanged
	{
		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x800DD8", Offset = "0x800DD8", VA = "0x800DD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58A65C", Offset = "0x58A65C")]
		add
		{
		}
		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x800ECC", Offset = "0x800ECC", VA = "0x800ECC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58A66C", Offset = "0x58A66C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0x800FC0", Offset = "0x800FC0", VA = "0x800FC0")]
	public static string AntiBlackword(string check)
	{
		return null;
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0x80B7A0", Offset = "0x80B7A0", VA = "0x80B7A0")]
	static H_Localization()
	{
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0x80BC74", Offset = "0x80BC74", VA = "0x80BC74")]
	private static void OnProfileLoaded(object obj)
	{
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0x80BD2C", Offset = "0x80BD2C", VA = "0x80BD2C")]
	public static void SetLang(GameLanguage language)
	{
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0x7F9F94", Offset = "0x7F9F94", VA = "0x7F9F94")]
	public static string GetTextLang(string code, string m = "")
	{
		return null;
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0x80C47C", Offset = "0x80C47C", VA = "0x80C47C")]
	public static string GetTextId(string text)
	{
		return null;
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0x80C674", Offset = "0x80C674", VA = "0x80C674")]
	public static void LoadLanguages(bool forceLoading = false)
	{
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0x80D188", Offset = "0x80D188", VA = "0x80D188")]
	public static void ChangeLocaHolder(Text textObject, string code)
	{
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0x80D2B8", Offset = "0x80D2B8", VA = "0x80D2B8")]
	public H_Localization()
	{
	}
}
[Token(Token = "0x2000226")]
public class H_logos : MonoBehaviour
{
	[Token(Token = "0x2000227")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578B3C", Offset = "0x578B3C")]
	private sealed class <BeginSplashScreens_XBox>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700015E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C54")]
			[Address(RVA = "0x1513A10", Offset = "0x1513A10", VA = "0x1513A10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C56")]
			[Address(RVA = "0x1513A58", Offset = "0x1513A58", VA = "0x1513A58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x1513984", Offset = "0x1513984", VA = "0x1513984")]
		[DebuggerHidden]
		public <BeginSplashScreens_XBox>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x15139B0", Offset = "0x15139B0", VA = "0x15139B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x15139B4", Offset = "0x15139B4", VA = "0x15139B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x1513A18", Offset = "0x1513A18", VA = "0x1513A18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000228")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578B4C", Offset = "0x578B4C")]
	private sealed class <LoadGameAsync>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public H_logos <>4__this;

		[Token(Token = "0x17000160")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C5A")]
			[Address(RVA = "0x1513CA4", Offset = "0x1513CA4", VA = "0x1513CA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000161")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C5C")]
			[Address(RVA = "0x1513CEC", Offset = "0x1513CEC", VA = "0x1513CEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x1513A60", Offset = "0x1513A60", VA = "0x1513A60")]
		[DebuggerHidden]
		public <LoadGameAsync>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x1513A8C", Offset = "0x1513A8C", VA = "0x1513A8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x1513A90", Offset = "0x1513A90", VA = "0x1513A90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x1513CAC", Offset = "0x1513CAC", VA = "0x1513CAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000229")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578B5C", Offset = "0x578B5C")]
	private sealed class <ToMainMenuCoroutine>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public H_logos <>4__this;

		[Token(Token = "0x17000162")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C60")]
			[Address(RVA = "0x1513E88", Offset = "0x1513E88", VA = "0x1513E88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000163")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C62")]
			[Address(RVA = "0x1513ED0", Offset = "0x1513ED0", VA = "0x1513ED0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x1513CF4", Offset = "0x1513CF4", VA = "0x1513CF4")]
		[DebuggerHidden]
		public <ToMainMenuCoroutine>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x1513D20", Offset = "0x1513D20", VA = "0x1513D20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x1513D24", Offset = "0x1513D24", VA = "0x1513D24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x1513E90", Offset = "0x1513E90", VA = "0x1513E90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400109E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float show_Logos;

	[Token(Token = "0x400109F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Show_Logo_Time;

	[Token(Token = "0x40010A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] loadingScreenObjects;

	[Token(Token = "0x40010A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slider LoadtingPbar;

	[Token(Token = "0x40010A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] logos;

	[Token(Token = "0x40010A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject[] android_logos;

	[Token(Token = "0x40010A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public H_blackScreen antibag;

	[Token(Token = "0x40010A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RectTransform antibagAfterLoad;

	[Token(Token = "0x40010A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AsyncOperation loadOp;

	[Token(Token = "0x40010A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int currentLogo;

	[Token(Token = "0x40010A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private float FadingSpeed_In;

	[Token(Token = "0x40010A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float FadingSpeed_Out;

	[Token(Token = "0x40010AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool allowSkip;

	[Token(Token = "0x40010AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform[] emoji;

	[Token(Token = "0x40010AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject[] emoji_anims;

	[Token(Token = "0x40010AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject termsOfUseWindow;

	[Token(Token = "0x40010AE")]
	private const string IsTermsOfUseAcceptedKey = "IsTermsOfUseAccepted";

	[Token(Token = "0x40010AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject useControllersWindow;

	[Token(Token = "0x40010B0")]
	private const string IsUseControllersOkKey = "IsUseControllersOk";

	[Token(Token = "0x40010B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool m_CanUsePlayerPrefs;

	[Token(Token = "0x40010B2")]
	private const string agreement_url = "https://www.herocraft.com/terms";

	[Token(Token = "0x40010B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	private bool OneTimeBlackScreenRun;

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0x1697AC8", Offset = "0x1697AC8", VA = "0x1697AC8")]
	private void OnPlayerPrefsInitialized()
	{
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0x1697AD4", Offset = "0x1697AD4", VA = "0x1697AD4")]
	public static void ExitGame()
	{
	}

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0x1697AF0", Offset = "0x1697AF0", VA = "0x1697AF0")]
	public static void OpenAgreementUrl()
	{
	}

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0x1697B38", Offset = "0x1697B38", VA = "0x1697B38")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0x1697BB4", Offset = "0x1697BB4", VA = "0x1697BB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0x1698010", Offset = "0x1698010", VA = "0x1698010")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58A67C", Offset = "0x58A67C")]
	private IEnumerator BeginSplashScreens_XBox()
	{
		return null;
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0x1697EE0", Offset = "0x1697EE0", VA = "0x1697EE0")]
	private void BeginSplashScreens()
	{
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0x169806C", Offset = "0x169806C", VA = "0x169806C")]
	private void OnFadeOutComplete()
	{
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0x1698230", Offset = "0x1698230", VA = "0x1698230")]
	private void OnSplashScreensEnded()
	{
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0x1698238", Offset = "0x1698238", VA = "0x1698238")]
	private void OnFadeInComplete()
	{
	}

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0x1698374", Offset = "0x1698374", VA = "0x1698374")]
	private void ToMainMenu()
	{
	}

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0x16984B8", Offset = "0x16984B8", VA = "0x16984B8")]
	private void LoadGame()
	{
	}

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0x1698568", Offset = "0x1698568", VA = "0x1698568")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58A6E4", Offset = "0x58A6E4")]
	private IEnumerator LoadGameAsync()
	{
		return null;
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0x16985E8", Offset = "0x16985E8", VA = "0x16985E8")]
	private void OnLoadedSceneAndBlackScreen()
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0x1698680", Offset = "0x1698680", VA = "0x1698680")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0x1698234", Offset = "0x1698234", VA = "0x1698234")]
	private void CheckTermsOfUseAccepted()
	{
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0x16987C0", Offset = "0x16987C0", VA = "0x16987C0")]
	public void OnTermsOfUseReadClick()
	{
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0x16987C4", Offset = "0x16987C4", VA = "0x16987C4")]
	public void OnTermsOfUseAcceptClick()
	{
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0x1698834", Offset = "0x1698834", VA = "0x1698834")]
	public void OnUseControllersButtonClick()
	{
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0x169887C", Offset = "0x169887C", VA = "0x169887C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58A74C", Offset = "0x58A74C")]
	private IEnumerator ToMainMenuCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0x16988FC", Offset = "0x16988FC", VA = "0x16988FC")]
	public H_logos()
	{
	}
}
[Token(Token = "0x200022A")]
public class H_math : MonoBehaviour
{
	[Token(Token = "0x40010BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float[] sincostable;

	[Token(Token = "0x40010BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float PI2;

	[Token(Token = "0x40010BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float PI;

	[Token(Token = "0x40010BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static float PI05;

	[Token(Token = "0x40010C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static Quaternion ZeroAngle;

	[Token(Token = "0x17000164")]
	private static float UnscaledDeltaTime
	{
		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x1698904", Offset = "0x1698904", VA = "0x1698904")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0x1698934", Offset = "0x1698934", VA = "0x1698934")]
	public static Vector3 WorldToScreenPos(Vector3 coord)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0x1698A2C", Offset = "0x1698A2C", VA = "0x1698A2C")]
	public static bool In(int item, params int[] items)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0x1698A7C", Offset = "0x1698A7C", VA = "0x1698A7C")]
	public static float GetAngle2D(float fromx, float fromy, float tox, float toy)
	{
		return default(float);
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0x1698A88", Offset = "0x1698A88", VA = "0x1698A88")]
	public static void Limit(float Value, float min, float max)
	{
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0x1698AA8", Offset = "0x1698AA8", VA = "0x1698AA8")]
	public static float RADsin(float corner)
	{
		return default(float);
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0x1698BA4", Offset = "0x1698BA4", VA = "0x1698BA4")]
	public static float RADcos(float corner)
	{
		return default(float);
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0x1698CAC", Offset = "0x1698CAC", VA = "0x1698CAC")]
	public static float GRADsin(float corner)
	{
		return default(float);
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0x1698D90", Offset = "0x1698D90", VA = "0x1698D90")]
	public static float GRADcos(float corner)
	{
		return default(float);
	}

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0x1698E80", Offset = "0x1698E80", VA = "0x1698E80")]
	public static float FindDistance3D(Vector3 p1, Vector3 p2)
	{
		return default(float);
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0x1698E88", Offset = "0x1698E88", VA = "0x1698E88")]
	public static float FindDistance2D(Vector2 p1, Vector2 p2)
	{
		return default(float);
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0x1698E90", Offset = "0x1698E90", VA = "0x1698E90")]
	public static float FindDistance3D_opt(Vector3 p1, Vector3 p2)
	{
		return default(float);
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0x1698EB4", Offset = "0x1698EB4", VA = "0x1698EB4")]
	public static float FindDistance2D_opt(Vector2 p1, Vector2 p2)
	{
		return default(float);
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0x1698ECC", Offset = "0x1698ECC", VA = "0x1698ECC")]
	public static void RotPointInLocalSpace_optSinCos(float localX, float localY, float rot)
	{
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0x1698F7C", Offset = "0x1698F7C", VA = "0x1698F7C")]
	public static void RotPointInLocalSpace(float localX, float localY, float rot)
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0x1698FDC", Offset = "0x1698FDC", VA = "0x1698FDC")]
	public static void AngularFlow_RAD(float who, float to, int mul, int div)
	{
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0x169924C", Offset = "0x169924C", VA = "0x169924C")]
	public static void AngularFlow_GRAD(float who, float to, int mul, int div, bool isUnscaledTime = false)
	{
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0x1699374", Offset = "0x1699374", VA = "0x1699374")]
	public static void AngularFlow_GRAD(float who, float to, float speed, bool isUnscaledTime = false)
	{
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0x169953C", Offset = "0x169953C", VA = "0x169953C")]
	public static void AngularFlow_GRAD_TF(float who, float to, int mul, int div)
	{
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0x1699710", Offset = "0x1699710", VA = "0x1699710")]
	public static float AngularInterpol_RAD_noTimeFactor(float who, float to, float noTimeFactor)
	{
		return default(float);
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0x1699974", Offset = "0x1699974", VA = "0x1699974")]
	public static void AngularInterpol_RAD(float who, float to, float stepAutoTF, bool isUnscaledTime = false)
	{
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0x1699184", Offset = "0x1699184", VA = "0x1699184")]
	public static void Flow(float who, float to, int mul, int div, bool isUnscaledTime = false)
	{
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0x169948C", Offset = "0x169948C", VA = "0x169948C")]
	public static void Flow(float who, float to, float speed = 10f, bool isUnscaledTime = false)
	{
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0x1699654", Offset = "0x1699654", VA = "0x1699654")]
	public static void FlowTF(float who, float to, int mul, int div)
	{
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0x1699C40", Offset = "0x1699C40", VA = "0x1699C40")]
	public static void Flow(Vector3 who, Vector3 to, int mul, int div, bool isUnscaledTime = false)
	{
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0x1699D44", Offset = "0x1699D44", VA = "0x1699D44")]
	public static void Flow(Vector2 who, Vector2 to, int mul, int div, bool isUnscaledTime = false)
	{
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0x1699E1C", Offset = "0x1699E1C", VA = "0x1699E1C")]
	public static void FlowNoTimeFactor(float who, float to, int mul, int div)
	{
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0x16977C8", Offset = "0x16977C8", VA = "0x16977C8")]
	public static void Fade(float who, float to, float StepAutoTF, bool isUnscaledTime = false)
	{
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0x1699E3C", Offset = "0x1699E3C", VA = "0x1699E3C")]
	public static void FadeTF(float who, float to, float StepIndependTF)
	{
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0x1699F18", Offset = "0x1699F18", VA = "0x1699F18")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0x1699FD8", Offset = "0x1699FD8", VA = "0x1699FD8")]
	public H_math()
	{
	}
}
[Token(Token = "0x200022B")]
public class H_Menu : MonoBehaviour
{
	[Token(Token = "0x200022C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578B6C", Offset = "0x578B6C")]
	private sealed class <>c__DisplayClass29_0
	{
		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public H_Core.H_delegate func;

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x1512DDC", Offset = "0x1512DDC", VA = "0x1512DDC")]
		public <>c__DisplayClass29_0()
		{
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x1512DE4", Offset = "0x1512DE4", VA = "0x1512DE4")]
		internal void <preBeginGame>b__1()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200022D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578B7C", Offset = "0x578B7C")]
	private sealed class <>c
	{
		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static H_Core.H_delegate <>9__29_0;

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x1512BF8", Offset = "0x1512BF8", VA = "0x1512BF8")]
		public <>c()
		{
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x1512C00", Offset = "0x1512C00", VA = "0x1512C00")]
		internal void <preBeginGame>b__29_0()
		{
		}
	}

	[Token(Token = "0x200022E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578B8C", Offset = "0x578B8C")]
	private sealed class <>c__DisplayClass31_0
	{
		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public H_Menu <>4__this;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public H_Core.H_delegate func;

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x1512E70", Offset = "0x1512E70", VA = "0x1512E70")]
		public <>c__DisplayClass31_0()
		{
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x1512E78", Offset = "0x1512E78", VA = "0x1512E78")]
		internal void <MM_Play>b__0()
		{
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x15130F0", Offset = "0x15130F0", VA = "0x15130F0")]
		internal void <MM_Play>b__1()
		{
		}
	}

	[Token(Token = "0x200022F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578B9C", Offset = "0x578B9C")]
	private sealed class <InitSocial>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public H_Menu <>4__this;

		[Token(Token = "0x17000166")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CA1")]
			[Address(RVA = "0x1513350", Offset = "0x1513350", VA = "0x1513350", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000167")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CA3")]
			[Address(RVA = "0x1513398", Offset = "0x1513398", VA = "0x1513398", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x151317C", Offset = "0x151317C", VA = "0x151317C")]
		[DebuggerHidden]
		public <InitSocial>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x15131A8", Offset = "0x15131A8", VA = "0x15131A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x15131AC", Offset = "0x15131AC", VA = "0x15131AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x1513358", Offset = "0x1513358", VA = "0x1513358", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool UnderMainMenu;

	[Token(Token = "0x40010C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool autoCameraFix;

	[Token(Token = "0x40010C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public GameObject PRESS_ANY_KEY;

	[Token(Token = "0x40010C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public GameObject TEMPEST_LOGO;

	[Token(Token = "0x40010C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject DLC_LANDING_BG;

	[Token(Token = "0x40010C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject DLC_CHINA_BG;

	[Token(Token = "0x40010C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject DEFAULT_TOWN_BG;

	[Token(Token = "0x40010C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static H_Menu singletone;

	[Token(Token = "0x40010C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject Menu;

	[Token(Token = "0x40010CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject Profile;

	[Token(Token = "0x40010CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject Play_btn;

	[Token(Token = "0x40010CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject Resume_btn;

	[Token(Token = "0x40010CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject exitButton;

	[Token(Token = "0x40010CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject exitButtonDecor;

	[Token(Token = "0x40010CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject bottomDecor;

	[Token(Token = "0x40010D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject bottomDecor2;

	[Token(Token = "0x40010D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject UserMainUI;

	[Token(Token = "0x40010D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BaseWindow SettingsMobile;

	[Token(Token = "0x40010D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text versionText;

	[Token(Token = "0x40010D4")]
	private const string standartName = "NoNameCaptain";

	[Token(Token = "0x40010D5")]
	private const string wasGCLoginOfferKey = "WasGCLoginOffer";

	[Token(Token = "0x40010D6")]
	private const string LastGCLoginSuccessKey = "LastGCLoginSuccess";

	[Token(Token = "0x40010D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool WasAskTutor;

	[Token(Token = "0x40010D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public static bool WasAskDifficulty;

	[Token(Token = "0x40010D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public static bool beginGame;

	[Token(Token = "0x17000165")]
	public bool LastGCLoginSuccess
	{
		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x161D57C", Offset = "0x161D57C", VA = "0x161D57C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x161D5C8", Offset = "0x161D5C8", VA = "0x161D5C8")]
		set
		{
		}
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0x161D620", Offset = "0x161D620", VA = "0x161D620")]
	public void MM_CallMenu()
	{
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0x161DC24", Offset = "0x161DC24", VA = "0x161DC24")]
	public void preBeginGame()
	{
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0x161DDE0", Offset = "0x161DDE0", VA = "0x161DDE0")]
	public void BeginGame()
	{
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0x161DF08", Offset = "0x161DF08", VA = "0x161DF08")]
	public void MM_Play()
	{
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0x161E0F4", Offset = "0x161E0F4", VA = "0x161E0F4")]
	public void MM_PlayTutorial()
	{
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0x161D7F8", Offset = "0x161D7F8", VA = "0x161D7F8")]
	public void MM_ResumeOrPause(bool isPause)
	{
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0x161E2A0", Offset = "0x161E2A0", VA = "0x161E2A0")]
	public void MM_Exit()
	{
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0x161E2A8", Offset = "0x161E2A8", VA = "0x161E2A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58A8A4", Offset = "0x58A8A4")]
	private IEnumerator InitSocial()
	{
		return null;
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0x161E328", Offset = "0x161E328", VA = "0x161E328")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0x161E668", Offset = "0x161E668", VA = "0x161E668")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0x161E66C", Offset = "0x161E66C", VA = "0x161E66C")]
	public void CloseCredits()
	{
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0x161E724", Offset = "0x161E724", VA = "0x161E724")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0x161E798", Offset = "0x161E798", VA = "0x161E798")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0x161E938", Offset = "0x161E938", VA = "0x161E938")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0x161F664", Offset = "0x161F664", VA = "0x161F664")]
	public H_Menu()
	{
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0x161F6E4", Offset = "0x161F6E4", VA = "0x161F6E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58A90C", Offset = "0x58A90C")]
	private void <MM_PlayTutorial>b__32_0()
	{
	}
}
[Token(Token = "0x2000230")]
public class H_Message : BaseWindow
{
	[Token(Token = "0x2000231")]
	public enum ButtonType
	{
		[Token(Token = "0x40010F9")]
		BackButton = -1,
		[Token(Token = "0x40010FA")]
		FirstButton,
		[Token(Token = "0x40010FB")]
		SecondButton,
		[Token(Token = "0x40010FC")]
		ThirdButton
	}

	[Serializable]
	[Token(Token = "0x2000232")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578BAC", Offset = "0x578BAC")]
	private sealed class <>c
	{
		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<Button> <>9__36_0;

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action <>9__36_1;

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x1513404", Offset = "0x1513404", VA = "0x1513404")]
		public <>c()
		{
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x151340C", Offset = "0x151340C", VA = "0x151340C")]
		internal bool <CheckActButtonsMobile>b__36_0(Button b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x1513438", Offset = "0x1513438", VA = "0x1513438")]
		internal void <CheckActButtonsMobile>b__36_1()
		{
		}
	}

	[Token(Token = "0x40010E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ScrollRect scrollRect;

	[Token(Token = "0x40010E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform content;

	[Token(Token = "0x40010E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private HelpContentMobile helpContentPrefab;

	[Token(Token = "0x40010E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform view;

	[Token(Token = "0x40010E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private MobileLayoutGroupSizeFitter mobSizeFitter;

	[Token(Token = "0x40010E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private HorizontalLayoutGroup btnsLayoutGroup;

	[Token(Token = "0x40010E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool Inited;

	[Token(Token = "0x40010E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static H_Message singletone;

	[Token(Token = "0x40010EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text MessageText;

	[Token(Token = "0x40010EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Button[] Btns;

	[Token(Token = "0x40010EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Button[] Btns_consoles;

	[Token(Token = "0x40010ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject MsgWin;

	[Token(Token = "0x40010EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public H_UI_popup_text MsgPopupPrefab;

	[Token(Token = "0x40010EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Action _BtnFunc1;

	[Token(Token = "0x40010F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Action _BtnFunc2;

	[Token(Token = "0x40010F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Action _BtnFunc3;

	[Token(Token = "0x40010F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Action<int> _callback;

	[Token(Token = "0x40010F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public HelpContentMobile helpContent;

	[Token(Token = "0x40010F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform extraContent;

	[Token(Token = "0x40010F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private readonly Color btnColorTextEnabled;

	[Token(Token = "0x40010F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private readonly Color btnColorTextDisabled;

	[Token(Token = "0x40010F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool enableClick;

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0x161F92C", Offset = "0x161F92C", VA = "0x161F92C", Slot = "4")]
	public override void Open()
	{
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0x161F950", Offset = "0x161F950", VA = "0x161F950", Slot = "6")]
	public override void Hide()
	{
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0x161F954", Offset = "0x161F954", VA = "0x161F954", Slot = "5")]
	public override void Close()
	{
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0x161FC10", Offset = "0x161FC10", VA = "0x161FC10")]
	public void Act_Btn_1()
	{
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0x161FDA4", Offset = "0x161FDA4", VA = "0x161FDA4")]
	public void Act_Btn_2()
	{
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0x161FEF8", Offset = "0x161FEF8", VA = "0x161FEF8")]
	public void Act_Btn_3()
	{
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0x162004C", Offset = "0x162004C", VA = "0x162004C")]
	public static void ShowMessage(string MsgText, string Btn_1, string Btn_2, string Btn_3, [Optional] Action BtnFunc1, [Optional] Action BtnFunc2, [Optional] Action BtnFunc3)
	{
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0x1620B30", Offset = "0x1620B30", VA = "0x1620B30")]
	public static void ShowMessage(string MsgText, string Btn_1, string Btn_2, [Optional] Action BtnFunc1, [Optional] Action BtnFunc2, [Optional] Transform extraContent)
	{
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0x16210FC", Offset = "0x16210FC", VA = "0x16210FC")]
	public static void ShowMessage(string MsgText, Transform extraContent)
	{
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0x16214B8", Offset = "0x16214B8", VA = "0x16214B8")]
	public static void ShowMessage(string MsgText, string Btn_1, string Btn_2, Action<int> callback)
	{
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0x1621930", Offset = "0x1621930", VA = "0x1621930")]
	public static void ShowMessage(string MsgText, string Btn_1, [Optional] Action BtnFunc1, [Optional] Transform extraContent)
	{
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0x1621E34", Offset = "0x1621E34", VA = "0x1621E34")]
	public static void ShowPopupMessage(string text, Color textColor, Transform parent, Vector3 localPosition)
	{
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0x1621FD4", Offset = "0x1621FD4", VA = "0x1621FD4")]
	public static void ShowHelpMessage(HelpContentData helpContentData)
	{
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0x1622348", Offset = "0x1622348", VA = "0x1622348")]
	public static void ShowMessage(IEnumerable<string> MsgTexts, string Btn_1, [Optional] Action BtnFunc1)
	{
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0x1620608", Offset = "0x1620608", VA = "0x1620608")]
	private static void CheckActButtonsMobile()
	{
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0x1622A1C", Offset = "0x1622A1C", VA = "0x1622A1C")]
	public void LockerMobileOnClick()
	{
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0x1622B14", Offset = "0x1622B14", VA = "0x1622B14")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0x1622BDC", Offset = "0x1622BDC", VA = "0x1622BDC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0x1620974", Offset = "0x1620974", VA = "0x1620974")]
	private void ScrollUp()
	{
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0x1622E28", Offset = "0x1622E28", VA = "0x1622E28")]
	public static void ShowMessageChoice(string MsgText, string Btn_1, string Btn_2, [Optional] Action BtnFunc1, [Optional] Action BtnFunc2, [Optional] Transform extraContent)
	{
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0x1622FA0", Offset = "0x1622FA0", VA = "0x1622FA0")]
	public static void ShowMessageChoice(string MsgText, string Btn_1, string Btn_2, string Btn_3, [Optional] Action BtnFunc1, [Optional] Action BtnFunc2, [Optional] Action BtnFunc3)
	{
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0x16209FC", Offset = "0x16209FC", VA = "0x16209FC")]
	private void CheckBtnsInteractable()
	{
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0x1623140", Offset = "0x1623140", VA = "0x1623140")]
	public H_Message()
	{
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0x16231DC", Offset = "0x16231DC", VA = "0x16231DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58A96C", Offset = "0x58A96C")]
	private void <ScrollUp>b__41_0()
	{
	}
}
[Token(Token = "0x2000233")]
public class H_Network : MonoBehaviour
{
	[Token(Token = "0x2000234")]
	private enum UserCommands
	{
		[Token(Token = "0x4001135")]
		None,
		[Token(Token = "0x4001136")]
		JoinRandomGame,
		[Token(Token = "0x4001137")]
		CreateGame
	}

	[Token(Token = "0x4001100")]
	private const string RoomNameReplaceKey = "<room_name>";

	[Token(Token = "0x4001101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool TournamentMode;

	[Token(Token = "0x4001102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool TournamentSpectator;

	[Token(Token = "0x4001103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool InRoom;

	[Token(Token = "0x4001104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Tournament_V;

	[Token(Token = "0x4001105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float fixedUpdateTime;

	[Token(Token = "0x4001106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float fixedTimer;

	[Token(Token = "0x4001107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UserCommands userCommand;

	[Token(Token = "0x4001108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool isConnectionRequired;

	[Token(Token = "0x4001109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool isConnectedPhoton;

	[Token(Token = "0x400110A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Tornado torn1;

	[Token(Token = "0x400110B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Tornado torn2;

	[Token(Token = "0x400110C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject StatusText;

	[Token(Token = "0x400110D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject MAIN_button;

	[Token(Token = "0x400110E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject MAIN_button_region;

	[Token(Token = "0x400110F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject MAIN_List;

	[Token(Token = "0x4001110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject FIRST_PANEL;

	[Token(Token = "0x4001111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject ANYGAME;

	[Token(Token = "0x4001112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject PRIVATE;

	[Token(Token = "0x4001113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject LOADING;

	[Token(Token = "0x4001114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject AutoFindON;

	[Token(Token = "0x4001115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text JoinedTo;

	[Token(Token = "0x4001116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject ON_openpublic;

	[Token(Token = "0x4001117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject ON_allies;

	[Token(Token = "0x4001118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject ON_alliesBTN;

	[Token(Token = "0x4001119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject ON_Spactator;

	[Token(Token = "0x400111A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject ON_SpactatorBTN;

	[Token(Token = "0x400111B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject OpenPublicBtn;

	[Token(Token = "0x400111C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Text players_name;

	[Token(Token = "0x400111D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string[] PlayersNameList;

	[Token(Token = "0x400111E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Button joinOrCreate;

	[Token(Token = "0x400111F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public InputField RoomName;

	[Token(Token = "0x4001120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float TimeToConnect;

	[Token(Token = "0x4001121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject Offline;

	[Token(Token = "0x4001122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject NewChatBG;

	[Token(Token = "0x4001123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Text NewChatText;

	[Token(Token = "0x4001124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public InputField NewChatInput;

	[Token(Token = "0x4001125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject OtherShipOnMap_Prefab;

	[Token(Token = "0x4001126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static H_Network singletone;

	[Token(Token = "0x4001127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static ColossusAttack SynchromizeIT_collosus;

	[Token(Token = "0x4001128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public string GameVersion;

	[Token(Token = "0x4001129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public int Room_Players_Max;

	[Token(Token = "0x400112A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public int Room_Players_MaxTournament;

	[Token(Token = "0x400112B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public float ReconectrFrequencySec;

	[Token(Token = "0x400112C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private int Reconnect_Probes;

	[Token(Token = "0x400112D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public float SendDataFrequency1;

	[Token(Token = "0x400112E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float SendFrec1;

	[Token(Token = "0x400112F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public float SendDataFrequency2;

	[Token(Token = "0x4001130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float SendFrec2;

	[Token(Token = "0x4001131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject RegionList;

	[Token(Token = "0x4001132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Text RegionText;

	[Token(Token = "0x4001133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int RegionSaved;

	[Token(Token = "0x17000168")]
	public string FormatedRoomName
	{
		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x1623200", Offset = "0x1623200", VA = "0x1623200")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000169")]
	public string GameVersionByPlatform
	{
		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x1623260", Offset = "0x1623260", VA = "0x1623260")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700016A")]
	public int Room_Players_Max_By_Mode
	{
		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0x16232B8", Offset = "0x16232B8", VA = "0x16232B8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0x162333C", Offset = "0x162333C", VA = "0x162333C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0x1623450", Offset = "0x1623450", VA = "0x1623450")]
	public static void SetOpenDoor(int crdx, int crdz)
	{
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0x1623454", Offset = "0x1623454", VA = "0x1623454")]
	public static void CallCollosus(Vector3 coord, int cntAttak)
	{
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0x1623458", Offset = "0x1623458", VA = "0x1623458")]
	public static void SendRain()
	{
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0x162345C", Offset = "0x162345C", VA = "0x162345C")]
	public static void ShpFrmClnt(int unqid, int hp_c, int hp_t, bool def)
	{
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0x1623460", Offset = "0x1623460", VA = "0x1623460")]
	public static void ArtefCaller(int WhoUseID, int slotUse, float power, int OctTargID, int LotTargID, int flameTargID)
	{
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0x1623464", Offset = "0x1623464", VA = "0x1623464")]
	public static void ShootRPC_call_Left(int UniqueID_from, int UniqueID_to, int CanonTovarIndx, int ZoneTeleg, float Precission, int countZalp)
	{
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0x1623468", Offset = "0x1623468", VA = "0x1623468")]
	public static void ShootRPC_call_Right(int UniqueID_from, int UniqueID_to, int CanonTovarIndx, int ZoneTeleg, float Precission, int countZalp)
	{
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0x162346C", Offset = "0x162346C", VA = "0x162346C")]
	public static bool IsMasterClient()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0x1623474", Offset = "0x1623474", VA = "0x1623474")]
	public void CheckConnection()
	{
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0x1623478", Offset = "0x1623478", VA = "0x1623478")]
	public static void GainXP_call(int cnt)
	{
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0x162347C", Offset = "0x162347C", VA = "0x162347C")]
	public H_Network()
	{
	}
}
[Token(Token = "0x2000235")]
public class H_Notify : MonoBehaviour
{
	[Token(Token = "0x4001138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static H_Notify singletone;

	[Token(Token = "0x4001139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image[] Notify;

	[Token(Token = "0x400113A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image[] NotifyIcon;

	[Token(Token = "0x400113B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip NotifySound;

	[Token(Token = "0x400113C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float[] HideNotify;

	[Token(Token = "0x400113D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isAch;

	[Token(Token = "0x400113E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite Piastr_Icon;

	[Token(Token = "0x400113F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Sprite xp_icon_pc;

	[Token(Token = "0x4001140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Sprite xp_icon_mobile;

	[Token(Token = "0x4001141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Sprite No_targ;

	[Token(Token = "0x4001142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Sprite No_rain;

	[Token(Token = "0x4001143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Sprite Debuf_reload;

	[Token(Token = "0x4001144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Sprite Overload;

	[Token(Token = "0x4001145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Sprite Escape;

	[Token(Token = "0x4001146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Sprite Fire;

	[Token(Token = "0x4001147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Sprite Slower;

	[Token(Token = "0x4001148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Sprite Freez;

	[Token(Token = "0x4001149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Sprite Poisoned;

	[Token(Token = "0x400114A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Sprite Blinded;

	[Token(Token = "0x400114B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Vector3 wasPosition;

	[Token(Token = "0x1700016B")]
	public Sprite XP_Icon
	{
		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0x162353C", Offset = "0x162353C", VA = "0x162353C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0x1623544", Offset = "0x1623544", VA = "0x1623544")]
	public static void AddNotify(Sprite view, float HideTime, bool ReplaceSame, string text = "", bool RotIcon = false, bool ColorRed = false, bool ColorGreen = false, int overrideSlot = -1, bool isAch = false)
	{
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0x1624100", Offset = "0x1624100", VA = "0x1624100")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0x16242AC", Offset = "0x16242AC", VA = "0x16242AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0x16249B0", Offset = "0x16249B0", VA = "0x16249B0")]
	public H_Notify()
	{
	}
}
[Token(Token = "0x2000236")]
public class H_profile : MonoBehaviour
{
	[Token(Token = "0x400114C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static H_profile singletone;

	[Token(Token = "0x400114D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string SENDPlayerName;

	[Token(Token = "0x400114E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InputField PlayerName;

	[Token(Token = "0x400114F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button Close;

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0x169A0B8", Offset = "0x169A0B8", VA = "0x169A0B8")]
	public void OnPlayerNameChanged()
	{
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0x169A0F4", Offset = "0x169A0F4", VA = "0x169A0F4")]
	public void OnConfirmClick()
	{
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0x169A178", Offset = "0x169A178", VA = "0x169A178")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0x169A1EC", Offset = "0x169A1EC", VA = "0x169A1EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0x169A284", Offset = "0x169A284", VA = "0x169A284")]
	public H_profile()
	{
	}
}
[Token(Token = "0x2000237")]
public class H_Seagulls : MonoBehaviour
{
	[Token(Token = "0x4001150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem MyPFX;

	[Token(Token = "0x4001151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float[] Rot;

	[Token(Token = "0x4001152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool SetupadRotStart;

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0x1624A34", Offset = "0x1624A34", VA = "0x1624A34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0x1624A98", Offset = "0x1624A98", VA = "0x1624A98")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0x1624F0C", Offset = "0x1624F0C", VA = "0x1624F0C")]
	public H_Seagulls()
	{
	}
}
[Token(Token = "0x2000238")]
public class H_Seagulls2 : MonoBehaviour
{
	[Token(Token = "0x4001153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem MyPFX;

	[Token(Token = "0x4001154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float[] Rot;

	[Token(Token = "0x4001155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool SetupadRotStart;

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0x1624F7C", Offset = "0x1624F7C", VA = "0x1624F7C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0x1624FE0", Offset = "0x1624FE0", VA = "0x1624FE0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0x1625494", Offset = "0x1625494", VA = "0x1625494")]
	public H_Seagulls2()
	{
	}
}
[Token(Token = "0x2000239")]
public class H_Settings : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200023A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578BBC", Offset = "0x578BBC")]
	private sealed class <>c
	{
		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<PointOnMap> <>9__79_0;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action <>9__89_1;

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x151350C", Offset = "0x151350C", VA = "0x151350C")]
		public <>c()
		{
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0x1513514", Offset = "0x1513514", VA = "0x1513514")]
		internal bool <ResetProgress>b__79_0(PointOnMap p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x1513564", Offset = "0x1513564", VA = "0x1513564")]
		internal void <SetResolution>b__89_1()
		{
		}
	}

	[Token(Token = "0x200023B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578BCC", Offset = "0x578BCC")]
	private sealed class <>c__DisplayClass89_0
	{
		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int number;

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0x15135F0", Offset = "0x15135F0", VA = "0x15135F0")]
		public <>c__DisplayClass89_0()
		{
		}

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0x15135F8", Offset = "0x15135F8", VA = "0x15135F8")]
		internal void <SetResolution>b__0()
		{
		}
	}

	[Token(Token = "0x4001156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject HelpToggle;

	[Token(Token = "0x4001157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject SettingsWindow;

	[Token(Token = "0x4001158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject agreementButton;

	[Token(Token = "0x4001159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int currentResolutionNumber;

	[Token(Token = "0x400115A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Toggle TV3D_render;

	[Token(Token = "0x400115B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Slider Snd;

	[Token(Token = "0x400115C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Slider Mus;

	[Token(Token = "0x400115D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Slider Cam;

	[Token(Token = "0x400115E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Slider CamCinemat;

	[Token(Token = "0x400115F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Slider MapSpd;

	[Token(Token = "0x4001160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Slider EyeDst;

	[Token(Token = "0x4001161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Slider AddDepth;

	[Token(Token = "0x4001162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Slider UIsize;

	[Token(Token = "0x4001163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Toggle Wheel;

	[Token(Token = "0x4001164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Toggle InvX;

	[Token(Token = "0x4001165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Toggle InvY;

	[Token(Token = "0x4001166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Toggle InvZoom;

	[Token(Token = "0x4001167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Toggle Autoshoot;

	[Token(Token = "0x4001168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Toggle ClickToSwim;

	[Token(Token = "0x4001169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Toggle CamFallow;

	[Token(Token = "0x400116A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private Toggle TouchCntrl;

	[Token(Token = "0x400116B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private Toggle LockCursorInWindow;

	[Token(Token = "0x400116C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private Toggle Lighting;

	[Token(Token = "0x400116D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private Toggle ShadowsLanding;

	[Token(Token = "0x400116E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private GameObject WheelInGame;

	[Token(Token = "0x400116F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private GameObject waterTitle;

	[Token(Token = "0x4001170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private Toggle[] WaterQ;

	[Token(Token = "0x4001171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private Toggle[] Difficult;

	[Token(Token = "0x4001172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public string[] oceanPresetNames;

	[Token(Token = "0x4001173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private GameObject ControllsBt;

	[Token(Token = "0x4001174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private GameObject ControllsGamepadBt;

	[Token(Token = "0x4001175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private GameObject XBoxBt;

	[Token(Token = "0x4001176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private GameObject PS3Bt;

	[Token(Token = "0x4001177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private GameObject PS4Bt;

	[Token(Token = "0x4001178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private GameObject SaveBt;

	[Token(Token = "0x4001179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject ResetSaves_btn;

	[Token(Token = "0x400117A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static H_Settings singletone;

	[Token(Token = "0x400117B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Toggle[] AA;

	[Token(Token = "0x400117C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Toggle[] Lang;

	[Token(Token = "0x400117D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Toggle[] Resol;

	[Token(Token = "0x400117E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public AudioClip SoundTest;

	[Token(Token = "0x400117F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int Resolution_Count;

	[Token(Token = "0x4001180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int[] Resolution_List_W;

	[Token(Token = "0x4001181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int[] Resolution_List_H;

	[Token(Token = "0x4001182")]
	public const string SelectedResolutionKey = "resolSelected";

	[Token(Token = "0x4001183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private int listenKey;

	[Token(Token = "0x4001184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Text[] KeyTitle;

	[Token(Token = "0x4001185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public H_camera zoomCam;

	[Token(Token = "0x4001186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public H_camera mainCam;

	[Token(Token = "0x4001187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public H_camera cam_main;

	[Token(Token = "0x4001188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public H_camera cam_zoom;

	[Token(Token = "0x4001189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public H_camera cam_map;

	[Token(Token = "0x1700016C")]
	public static int ResoultionCount
	{
		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x16292B8", Offset = "0x16292B8", VA = "0x16292B8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0x1625504", Offset = "0x1625504", VA = "0x1625504")]
	public static int WaterQualityVariantsCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0x162564C", Offset = "0x162564C", VA = "0x162564C")]
	public int GetCurrentResolution()
	{
		return default(int);
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0x1625654", Offset = "0x1625654", VA = "0x1625654")]
	public void OnSettingsOpenned()
	{
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0x1625C14", Offset = "0x1625C14", VA = "0x1625C14")]
	public void SetHelp(bool value)
	{
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0x1625CE0", Offset = "0x1625CE0", VA = "0x1625CE0")]
	public void SetTV3D_render()
	{
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0x1626E1C", Offset = "0x1626E1C", VA = "0x1626E1C")]
	public void OnUIsizeChanged()
	{
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0x1627030", Offset = "0x1627030", VA = "0x1627030")]
	public void OnEyeDistanceChanged(float value)
	{
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0x1627784", Offset = "0x1627784", VA = "0x1627784")]
	public void SetLightnings(bool value)
	{
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0x1627818", Offset = "0x1627818", VA = "0x1627818")]
	public void SetShadowsOnLand(bool value)
	{
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0x16278AC", Offset = "0x16278AC", VA = "0x16278AC")]
	public void OnAddDepthChanged(float value)
	{
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0x16279F8", Offset = "0x16279F8", VA = "0x16279F8")]
	public void SetCamFallow(bool value)
	{
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0x1627A8C", Offset = "0x1627A8C", VA = "0x1627A8C")]
	public void SetAutoshoot(bool value)
	{
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0x1627B20", Offset = "0x1627B20", VA = "0x1627B20")]
	public void SetMouseSwim(bool value)
	{
	}

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0x1627BB4", Offset = "0x1627BB4", VA = "0x1627BB4")]
	public void SetTouchControl(bool value)
	{
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0x1627C48", Offset = "0x1627C48", VA = "0x1627C48")]
	public void SetAA(int aa)
	{
	}

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0x1627CE0", Offset = "0x1627CE0", VA = "0x1627CE0")]
	public void SetInvX(bool value)
	{
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0x1627D74", Offset = "0x1627D74", VA = "0x1627D74")]
	public void SetInvY(bool value)
	{
	}

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0x1627E08", Offset = "0x1627E08", VA = "0x1627E08")]
	public void SetDifficulty(float diff)
	{
	}

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0x1627E98", Offset = "0x1627E98", VA = "0x1627E98")]
	public void SetWheel(bool value)
	{
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0x1627F3C", Offset = "0x1627F3C", VA = "0x1627F3C")]
	public void SetInvZoom(bool value)
	{
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0x1627FD0", Offset = "0x1627FD0", VA = "0x1627FD0")]
	public void SetCamSens(float value)
	{
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0x1628060", Offset = "0x1628060", VA = "0x1628060")]
	public void SetCamCinemat(float value)
	{
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0x16280F0", Offset = "0x16280F0", VA = "0x16280F0")]
	public void SetMapSpeed(float value)
	{
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0x1628180", Offset = "0x1628180", VA = "0x1628180")]
	public void SetGlobalVolumeGame(float value)
	{
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0x1628218", Offset = "0x1628218", VA = "0x1628218")]
	public void SetLockCursor(bool value)
	{
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0x16282EC", Offset = "0x16282EC", VA = "0x16282EC")]
	public void SetGlobalVolumeMusic(float value)
	{
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0x1628484", Offset = "0x1628484", VA = "0x1628484")]
	public void CloseSettings()
	{
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0x16284F8", Offset = "0x16284F8", VA = "0x16284F8")]
	public void ListenKey(int index)
	{
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0x162859C", Offset = "0x162859C", VA = "0x162859C")]
	public void PlaySoundTest()
	{
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0x1628774", Offset = "0x1628774", VA = "0x1628774")]
	public void ResetSaves()
	{
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0x162888C", Offset = "0x162888C", VA = "0x162888C")]
	public void ResetSaves_consoles()
	{
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0x1628F50", Offset = "0x1628F50", VA = "0x1628F50")]
	private void ConfirmReset(int button)
	{
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0x1628890", Offset = "0x1628890", VA = "0x1628890")]
	private void ResetProgress()
	{
	}

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0x1629088", Offset = "0x1629088", VA = "0x1629088")]
	public void SetMouseMoveCam()
	{
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0x1629138", Offset = "0x1629138", VA = "0x1629138")]
	public void SetWaterQ(int q)
	{
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0x162931C", Offset = "0x162931C", VA = "0x162931C")]
	public static Vector2 GetResolution(int i)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0x16293DC", Offset = "0x16293DC", VA = "0x16293DC")]
	public void SetLanguage(int langIndex)
	{
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0x16294B8", Offset = "0x16294B8", VA = "0x16294B8")]
	public void SetResolution(int number)
	{
	}

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0x16295D8", Offset = "0x16295D8", VA = "0x16295D8")]
	public void SetResolution(int number, bool showConfirmation = false)
	{
	}

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0x16297DC", Offset = "0x16297DC", VA = "0x16297DC")]
	public void ResetSettingsState()
	{
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0x16299B4", Offset = "0x16299B4", VA = "0x16299B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0x162A804", Offset = "0x162A804", VA = "0x162A804")]
	public void SortChildGO(List<Transform> sortTransforms, Vector3 startPosition, float interval)
	{
	}

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0x162A520", Offset = "0x162A520", VA = "0x162A520")]
	public void SortChildGO(Transform go, Vector3 startPosition, float interval)
	{
	}

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0x162A97C", Offset = "0x162A97C", VA = "0x162A97C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0x162AAA4", Offset = "0x162AAA4", VA = "0x162AAA4")]
	private KeyCode FetchKey()
	{
		return default(KeyCode);
	}

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0x162ABC8", Offset = "0x162ABC8", VA = "0x162ABC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0x162AFF4", Offset = "0x162AFF4", VA = "0x162AFF4")]
	public void ShowControlls()
	{
	}

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0x162B1F8", Offset = "0x162B1F8", VA = "0x162B1F8")]
	public void SaveControls(bool save)
	{
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0x162B20C", Offset = "0x162B20C", VA = "0x162B20C")]
	public void SetVisResetSaves()
	{
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0x162B210", Offset = "0x162B210", VA = "0x162B210")]
	public H_Settings()
	{
	}
}
[Token(Token = "0x200023C")]
public class H_Sound_Music : MonoBehaviour
{
	[Token(Token = "0x400118E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static H_Sound_Music singletone;

	[Token(Token = "0x400118F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float StartMusicAfterSeconds;

	[Token(Token = "0x4001190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int PlayIt;

	[Token(Token = "0x4001191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource[] AllTracks;

	[Token(Token = "0x4001192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool AllowSlowMotionOnMusic;

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0x16285D0", Offset = "0x16285D0", VA = "0x16285D0")]
	public static void PlayClipAt(AudioClip clip, Vector3 pos, float _Volume = 1f, float minDst = 3f, float maxDst = 25f)
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0x162B2CC", Offset = "0x162B2CC", VA = "0x162B2CC")]
	public static void playTrack(int Index)
	{
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0x162B330", Offset = "0x162B330", VA = "0x162B330")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0x162B400", Offset = "0x162B400", VA = "0x162B400")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0x162B78C", Offset = "0x162B78C", VA = "0x162B78C")]
	public H_Sound_Music()
	{
	}
}
[Token(Token = "0x200023D")]
public class H_TexTranslating : MonoBehaviour
{
	[Token(Token = "0x4001193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 Speed;

	[Token(Token = "0x4001194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector2 Offsetter;

	[Token(Token = "0x4001195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material MyMtrl;

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0x162B7A0", Offset = "0x162B7A0", VA = "0x162B7A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0x162B848", Offset = "0x162B848", VA = "0x162B848")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0x162B918", Offset = "0x162B918", VA = "0x162B918")]
	public H_TexTranslating()
	{
	}
}
[Token(Token = "0x200023E")]
public class IntZConverter : JsonConverter
{
	[Token(Token = "0x6000D25")]
	[Address(RVA = "0x15678C0", Offset = "0x15678C0", VA = "0x15678C0", Slot = "4")]
	public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
	{
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0x1567964", Offset = "0x1567964", VA = "0x1567964", Slot = "5")]
	public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
	{
		return null;
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0x1567A70", Offset = "0x1567A70", VA = "0x1567A70", Slot = "6")]
	public override bool CanConvert(Type objectType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0x1567B04", Offset = "0x1567B04", VA = "0x1567B04")]
	public IntZConverter()
	{
	}
}
[Serializable]
[Token(Token = "0x200023F")]
public class int_z : ISerializationCallbackReceiver
{
	[Token(Token = "0x4001196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int[] Zerg;

	[Token(Token = "0x4001197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int d;

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0x15D7E34", Offset = "0x15D7E34", VA = "0x15D7E34")]
	public int_z()
	{
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0x15D7EA4", Offset = "0x15D7EA4", VA = "0x15D7EA4")]
	public int_z(int StartValue)
	{
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0x15D8258", Offset = "0x15D8258", VA = "0x15D8258", Slot = "4")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0x15D827C", Offset = "0x15D827C", VA = "0x15D827C", Slot = "5")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0x15CFFF8", Offset = "0x15CFFF8", VA = "0x15CFFF8")]
	public static implicit operator int_z(int value)
	{
		return null;
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0x15CEB64", Offset = "0x15CEB64", VA = "0x15CEB64")]
	public static implicit operator int(int_z value)
	{
		return default(int);
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0x15D8284", Offset = "0x15D8284", VA = "0x15D8284")]
	public void Save(StreamWriter sav)
	{
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0x15D8410", Offset = "0x15D8410", VA = "0x15D8410")]
	public void Load(StreamReader sav)
	{
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0x15D8C24", Offset = "0x15D8C24", VA = "0x15D8C24")]
	public int LoadOldSave(StreamReader sav)
	{
		return default(int);
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0x15D8E70", Offset = "0x15D8E70", VA = "0x15D8E70")]
	public int LoadOldSave(List<string> arr, int start)
	{
		return default(int);
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0x15D91AC", Offset = "0x15D91AC", VA = "0x15D91AC")]
	public bool QwestLoad(StreamReader sav)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0x15D7F24", Offset = "0x15D7F24", VA = "0x15D7F24")]
	public void Set(int value)
	{
	}

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0x15D8674", Offset = "0x15D8674", VA = "0x15D8674")]
	public bool Validate()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0x15D77EC", Offset = "0x15D77EC", VA = "0x15D77EC")]
	public int Get()
	{
		return default(int);
	}

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0x15D8A80", Offset = "0x15D8A80", VA = "0x15D8A80")]
	public void recreateArr()
	{
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0x15D9414", Offset = "0x15D9414", VA = "0x15D9414")]
	public static int_z operator +(int_z a, int_z b)
	{
		return null;
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0x15D94A4", Offset = "0x15D94A4", VA = "0x15D94A4")]
	public static int_z operator -(int_z a, int_z b)
	{
		return null;
	}

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0x15D9534", Offset = "0x15D9534", VA = "0x15D9534")]
	public static int_z operator +(int_z a, int b)
	{
		return null;
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0x15D95B4", Offset = "0x15D95B4", VA = "0x15D95B4")]
	public static int_z operator -(int_z a, int b)
	{
		return null;
	}

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0x15D9634", Offset = "0x15D9634", VA = "0x15D9634", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0x15D9660", Offset = "0x15D9660", VA = "0x15D9660")]
	public void Add(int value)
	{
	}
}
[Token(Token = "0x2000240")]
public class SaveLoadUtils
{
	[Token(Token = "0x2000241")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578BDC", Offset = "0x578BDC")]
	private sealed class <SaveCourotine>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool forceSave;

		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool save_settings;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool save_base;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		public bool save_map;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool save_quests;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SaveDataEvents <eventsData>5__2;

		[Token(Token = "0x1700016E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D56")]
			[Address(RVA = "0x15800C8", Offset = "0x15800C8", VA = "0x15800C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D58")]
			[Address(RVA = "0x1580110", Offset = "0x1580110", VA = "0x1580110", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x157F3D0", Offset = "0x157F3D0", VA = "0x157F3D0")]
		[DebuggerHidden]
		public <SaveCourotine>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x157F3FC", Offset = "0x157F3FC", VA = "0x157F3FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x157F400", Offset = "0x157F400", VA = "0x157F400", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x15800D0", Offset = "0x15800D0", VA = "0x15800D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string[] MAP_FILES;

	[Token(Token = "0x4001199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isDisabledSave;

	[Token(Token = "0x400119A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	public static bool HaveSaves;

	[Token(Token = "0x400119B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
	public static bool HaveGogSaves;

	[Token(Token = "0x400119C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string saveDirectory;

	[Token(Token = "0x400119D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int saveIndex;

	[Token(Token = "0x1700016D")]
	private static string SaveDirectory
	{
		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x153D1C8", Offset = "0x153D1C8", VA = "0x153D1C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0x153D314", Offset = "0x153D314", VA = "0x153D314")]
	public static string GetPersistentFilePath(string fileName, [Optional] string folder)
	{
		return null;
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0x153D48C", Offset = "0x153D48C", VA = "0x153D48C")]
	public static void SavePerFourFrame(bool save_settings, bool save_base, bool save_map, bool save_quests, bool forceSave)
	{
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0x153D630", Offset = "0x153D630", VA = "0x153D630")]
	public static void Save(bool save_settings, bool save_base, bool save_map, bool save_quests, bool forceSave)
	{
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0x153D578", Offset = "0x153D578", VA = "0x153D578")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58A97C", Offset = "0x58A97C")]
	public static IEnumerator SaveCourotine(bool save_settings, bool save_base, bool save_map, bool save_quests, bool forceSave)
	{
		return null;
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0x153E2C0", Offset = "0x153E2C0", VA = "0x153E2C0")]
	public static SaveDataEvents GetEventsSaveData()
	{
		return null;
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0x153E860", Offset = "0x153E860", VA = "0x153E860")]
	public static void Load(bool load_settings, bool load_base, bool load_map, bool load_quests)
	{
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0x153FBFC", Offset = "0x153FBFC", VA = "0x153FBFC")]
	internal static void DeleteMapFiles()
	{
	}

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0x153F1BC", Offset = "0x153F1BC", VA = "0x153F1BC")]
	public static void LoadMap(float LoadCrdX, float LoadCrdZ)
	{
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0x153FCE4", Offset = "0x153FCE4", VA = "0x153FCE4")]
	public static void SaveMaps(CloudDataContainer data)
	{
	}

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0x153F994", Offset = "0x153F994", VA = "0x153F994")]
	public static void AfterLoadSetup(bool load_base, bool load_settings, bool load_quests, bool load_map, float LoadCrdX, float LoadCrdZ)
	{
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0x15401CC", Offset = "0x15401CC", VA = "0x15401CC")]
	private static void OnAfterLoad(bool load_base, bool load_settings, bool load_quests)
	{
	}

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0x1540E94", Offset = "0x1540E94", VA = "0x1540E94")]
	public static void LoadOldSaves(SaveDataProfile profile, SaveDataSettings settings, SaveDataEvents events)
	{
	}

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0x1543DC8", Offset = "0x1543DC8", VA = "0x1543DC8")]
	private static void ConvertOldEvents(SaveDataEvents events)
	{
	}

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0x15411BC", Offset = "0x15411BC", VA = "0x15411BC")]
	private static void ConvertOldSettings(SaveDataProfile profile, SaveDataSettings settings)
	{
	}

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0x1544C00", Offset = "0x1544C00", VA = "0x1544C00")]
	private static string GetDataFromStringArr(List<string> stringArr)
	{
		return null;
	}

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0x15425AC", Offset = "0x15425AC", VA = "0x15425AC")]
	private static void ConvertOldProfile(SaveDataProfile profile)
	{
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0x1540C04", Offset = "0x1540C04", VA = "0x1540C04")]
	private static void RecountAllCompletedLegends()
	{
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0x1544D94", Offset = "0x1544D94", VA = "0x1544D94")]
	public static void PROCREATE_FILES(bool ResetSaves = false)
	{
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0x1544D98", Offset = "0x1544D98", VA = "0x1544D98")]
	public SaveLoadUtils()
	{
	}
}
[Token(Token = "0x2000242")]
public class SystemReturn : MonoBehaviour
{
	[Token(Token = "0x40011A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform ReturnTo;

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0x1690F68", Offset = "0x1690F68", VA = "0x1690F68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0x1690F6C", Offset = "0x1690F6C", VA = "0x1690F6C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0x1690F70", Offset = "0x1690F70", VA = "0x1690F70")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0x1691044", Offset = "0x1691044", VA = "0x1691044")]
	public SystemReturn()
	{
	}
}
[Token(Token = "0x2000243")]
public class H_disable_Back_windows : MonoBehaviour
{
	[Token(Token = "0x40011A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Focused_Primary;

	[Token(Token = "0x40011A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Focused_Secondary;

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0x16B0120", Offset = "0x16B0120", VA = "0x16B0120")]
	public H_disable_Back_windows()
	{
	}
}
[Token(Token = "0x2000244")]
public class H_InterfacePresetup : MonoBehaviour
{
	[Token(Token = "0x40011A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static H_InterfacePresetup singletone;

	[Token(Token = "0x40011AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public H_blackScreen Blackscreen;

	[Token(Token = "0x40011AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject MainMenu;

	[Token(Token = "0x40011AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Bokeh;

	[Token(Token = "0x40011AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] notyfy;

	[Token(Token = "0x40011AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject StarterUserUI;

	[Token(Token = "0x40011AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject Loader;

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0x800584", Offset = "0x800584", VA = "0x800584")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0x80075C", Offset = "0x80075C", VA = "0x80075C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0x800760", Offset = "0x800760", VA = "0x800760")]
	public H_InterfacePresetup()
	{
	}
}
[Token(Token = "0x2000245")]
public class H_UI_button : MonoBehaviour
{
	[Token(Token = "0x40011B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private H_Core.H_delegate StandartDelegateAction;

	[Token(Token = "0x40011B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private H_Core.H_delegate StandartDownedDelegateAction;

	[Token(Token = "0x40011B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public H_Core.H_delegate DelegateAction;

	[Token(Token = "0x40011B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public H_Core.H_delegate DownedDelegateAction;

	[Token(Token = "0x40011B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public H_Core.H_delegate DisabledDelegateAction;

	[Token(Token = "0x40011B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool StartEnabled;

	[Token(Token = "0x40011B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool IsEnable;

	[Token(Token = "0x40011B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public KeyCode ShortCut;

	[Token(Token = "0x40011B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip ClickSound;

	[Token(Token = "0x40011B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool ManualCheckBoxControlling;

	[Token(Token = "0x40011BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Sprite StateOFF;

	[Token(Token = "0x40011BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int Activate_UI_Layer;

	[Token(Token = "0x40011BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool Activate_UI_Layer_Previous;

	[Token(Token = "0x40011BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float FocusedButtonScale;

	[Token(Token = "0x40011BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool State;

	[Token(Token = "0x40011BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Sprite AUTO_StateNormal;

	[Token(Token = "0x40011C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public SpriteRenderer AUTO_MyRender;

	[Token(Token = "0x40011C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public H_UI_image AUTO_MyCase;

	[Token(Token = "0x40011C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public H_UI_label AUTO_Label;

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0x162C86C", Offset = "0x162C86C", VA = "0x162C86C")]
	public bool GetCheckedState()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0x162C874", Offset = "0x162C874", VA = "0x162C874")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0x162CDD0", Offset = "0x162CDD0", VA = "0x162CDD0")]
	public void SetVisible(bool vis)
	{
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0x162CED0", Offset = "0x162CED0", VA = "0x162CED0")]
	public void ActDowned()
	{
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0x162CF20", Offset = "0x162CF20", VA = "0x162CF20")]
	public void ActClick()
	{
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0x162CF70", Offset = "0x162CF70", VA = "0x162CF70")]
	public bool GetEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0x162CDB0", Offset = "0x162CDB0", VA = "0x162CDB0")]
	public void SetEnabled(bool Ena)
	{
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0x162CD6C", Offset = "0x162CD6C", VA = "0x162CD6C")]
	public void SetChecedState(bool Check)
	{
	}

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0x162CF78", Offset = "0x162CF78", VA = "0x162CF78")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0x162D004", Offset = "0x162D004", VA = "0x162D004")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0x162D080", Offset = "0x162D080", VA = "0x162D080")]
	private void OnMouseExit()
	{
	}

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0x162D0EC", Offset = "0x162D0EC", VA = "0x162D0EC")]
	private void OnMouseOver()
	{
	}

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0x162D1F0", Offset = "0x162D1F0", VA = "0x162D1F0")]
	private void OnMouseUpAsButton()
	{
	}

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0x162D284", Offset = "0x162D284", VA = "0x162D284")]
	public H_UI_button()
	{
	}

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0x162D2AC", Offset = "0x162D2AC", VA = "0x162D2AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58AA34", Offset = "0x58AA34")]
	private void <Awake>b__20_0()
	{
	}

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0x162D3C0", Offset = "0x162D3C0", VA = "0x162D3C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58AA44", Offset = "0x58AA44")]
	private void <Awake>b__20_1()
	{
	}
}
[Token(Token = "0x2000246")]
public class H_UI_image : MonoBehaviour
{
	[Token(Token = "0x40011C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpriteRenderer AUTO_myRender;

	[Token(Token = "0x40011C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BoxCollider2D AUTO_BoxColider;

	[Token(Token = "0x40011C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CircleCollider2D AUTO_CircleColider;

	[Token(Token = "0x40011C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SphereCollider AUTO_sphereColider;

	[Token(Token = "0x40011C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color AUTO_StartColor;

	[Token(Token = "0x40011C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Color CurrentColor;

	[Token(Token = "0x40011C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool Visible;

	[Token(Token = "0x40011CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool StartVisiblity;

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0x162CCB8", Offset = "0x162CCB8", VA = "0x162CCB8")]
	public void SetBoxCollision(BoxCollider2D set)
	{
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0x162CCF4", Offset = "0x162CCF4", VA = "0x162CCF4")]
	public void SetCircleCollision(CircleCollider2D set)
	{
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0x162CD30", Offset = "0x162CD30", VA = "0x162CD30")]
	public void SetSphereCollision(SphereCollider set)
	{
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0x162D3DC", Offset = "0x162D3DC", VA = "0x162D3DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0x162D49C", Offset = "0x162D49C", VA = "0x162D49C")]
	public void SetColor(Color newColor)
	{
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0x162D550", Offset = "0x162D550", VA = "0x162D550")]
	public void SetStartColor(Color newColor)
	{
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0x162D560", Offset = "0x162D560", VA = "0x162D560")]
	public void SetStartColorAndAlpha(Color newColor)
	{
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0x162D56C", Offset = "0x162D56C", VA = "0x162D56C")]
	public void SetColorAndAlpha(Color newColor)
	{
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0x162D624", Offset = "0x162D624", VA = "0x162D624")]
	public Color GetColor()
	{
		return default(Color);
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0x162D630", Offset = "0x162D630", VA = "0x162D630")]
	public Color GetStartColor()
	{
		return default(Color);
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0x162CEA8", Offset = "0x162CEA8", VA = "0x162CEA8")]
	public void SetVisible(bool Set)
	{
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0x162D63C", Offset = "0x162D63C", VA = "0x162D63C")]
	public void Sys_Show()
	{
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0x162D7B4", Offset = "0x162D7B4", VA = "0x162D7B4")]
	public void Sys_Hide()
	{
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0x162D904", Offset = "0x162D904", VA = "0x162D904")]
	public bool GetVisible()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0x162D90C", Offset = "0x162D90C", VA = "0x162D90C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0x162DA84", Offset = "0x162DA84", VA = "0x162DA84")]
	public H_UI_image()
	{
	}
}
[Token(Token = "0x2000247")]
public class H_UI_label : MonoBehaviour
{
	[Token(Token = "0x40011CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string TextKeyID;

	[Token(Token = "0x40011CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int LimitSymbolsWidth;

	[Token(Token = "0x40011CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMesh AUTO_myRender;

	[Token(Token = "0x40011CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color AUTO_StartColor;

	[Token(Token = "0x40011CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color CurrentColor;

	[Token(Token = "0x40011D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool Visible;

	[Token(Token = "0x40011D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool StartVisiblity;

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0x162DA94", Offset = "0x162DA94", VA = "0x162DA94")]
	public void SetText(string Text)
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0x162DBD4", Offset = "0x162DBD4", VA = "0x162DBD4")]
	public void SetTextLocalized(string locID)
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0x162DD78", Offset = "0x162DD78", VA = "0x162DD78")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0x162DF6C", Offset = "0x162DF6C", VA = "0x162DF6C")]
	public void SetColor(Color newColor)
	{
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0x162E020", Offset = "0x162E020", VA = "0x162E020")]
	public void SetColorAndAlpha(Color newColor)
	{
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0x162E0D8", Offset = "0x162E0D8", VA = "0x162E0D8")]
	public Color GetColor()
	{
		return default(Color);
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0x162E0E4", Offset = "0x162E0E4", VA = "0x162E0E4")]
	public Color GetStartColor()
	{
		return default(Color);
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0x162CEBC", Offset = "0x162CEBC", VA = "0x162CEBC")]
	public void SetVisible(bool Set)
	{
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0x162E0F0", Offset = "0x162E0F0", VA = "0x162E0F0")]
	public void Sys_Show()
	{
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0x162E17C", Offset = "0x162E17C", VA = "0x162E17C")]
	public void Sys_Hide()
	{
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0x162E208", Offset = "0x162E208", VA = "0x162E208")]
	public bool GetVisible()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0x162E210", Offset = "0x162E210", VA = "0x162E210")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0x162E394", Offset = "0x162E394", VA = "0x162E394")]
	public H_UI_label()
	{
	}
}
[Token(Token = "0x2000248")]
public class H_UI_Resizer : MonoBehaviour
{
	[Token(Token = "0x40011D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Canvas Canvas;

	[Token(Token = "0x40011D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera CameraUI;

	[Token(Token = "0x40011D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera CameraUI_3D;

	[Token(Token = "0x40011D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static H_UI_Resizer singletone;

	[Token(Token = "0x40011D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int wasSizeX;

	[Token(Token = "0x40011D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int wasSizeY;

	[Token(Token = "0x40011D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Vector3 SizeCanvasInVR;

	[Token(Token = "0x40011D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float updateTime;

	[Token(Token = "0x40011DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float updateTimer;

	[Token(Token = "0x40011DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool DefaultCamAction;

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0x162B920", Offset = "0x162B920", VA = "0x162B920")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0x1626F1C", Offset = "0x1626F1C", VA = "0x1626F1C")]
	public void CallFixedUpdate()
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0x162C280", Offset = "0x162C280", VA = "0x162C280")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0x162B994", Offset = "0x162B994", VA = "0x162B994")]
	private void MyFixedUpdate()
	{
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0x162C760", Offset = "0x162C760", VA = "0x162C760")]
	private void CalculateDragTreshold()
	{
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0x162C7F0", Offset = "0x162C7F0", VA = "0x162C7F0")]
	public H_UI_Resizer()
	{
	}
}
[Token(Token = "0x2000249")]
public class InfoBar : MonoBehaviour
{
	[Token(Token = "0x40011DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image AlertAutoFight;

	[Token(Token = "0x40011DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float AlertAF;

	[Token(Token = "0x40011DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static InfoBar Singleton;

	[Token(Token = "0x40011DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject MyInfoBar;

	[Token(Token = "0x40011E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Slider HP_case;

	[Token(Token = "0x40011E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Slider HP_paru;

	[Token(Token = "0x40011E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Slider HP_team;

	[Token(Token = "0x40011E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text out_HP_paru;

	[Token(Token = "0x40011E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text out_HP_abor;

	[Token(Token = "0x40011E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text out_HP_case;

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0x1563834", Offset = "0x1563834", VA = "0x1563834")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0x1563890", Offset = "0x1563890", VA = "0x1563890")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0x1563EE8", Offset = "0x1563EE8", VA = "0x1563EE8")]
	public InfoBar()
	{
	}
}
[Token(Token = "0x200024A")]
public class IOS_only : MonoBehaviour
{
	[Token(Token = "0x6000D98")]
	[Address(RVA = "0x1562F70", Offset = "0x1562F70", VA = "0x1562F70")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0x1562FF0", Offset = "0x1562FF0", VA = "0x1562FF0")]
	public IOS_only()
	{
	}
}
[Token(Token = "0x200024B")]
public class IslandNature : MonoBehaviour
{
	[Token(Token = "0x40011E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource Day;

	[Token(Token = "0x40011E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource Night;

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0x156C7B8", Offset = "0x156C7B8", VA = "0x156C7B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0x156C8BC", Offset = "0x156C8BC", VA = "0x156C8BC")]
	public IslandNature()
	{
	}
}
[Token(Token = "0x200024C")]
public class Journal : MonoBehaviour
{
	[Token(Token = "0x40011E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Journal singletone;

	[Token(Token = "0x40011E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform SelectorDownMenu;

	[Token(Token = "0x40011EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform Btn_Task;

	[Token(Token = "0x40011EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform Btn_Lege;

	[Token(Token = "0x40011EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform Btn_Immu;

	[Token(Token = "0x40011ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform Btn_Frac;

	[Token(Token = "0x40011EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform Btn_Stat;

	[Token(Token = "0x40011EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform Btn2_Task;

	[Token(Token = "0x40011F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform Btn2_Lege;

	[Token(Token = "0x40011F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform Btn2_Immu;

	[Token(Token = "0x40011F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform Btn2_Frac;

	[Token(Token = "0x40011F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform Btn2_Stat;

	[Token(Token = "0x40011F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform[] Pjournal_pages;

	[Token(Token = "0x40011F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int current_page;

	[Token(Token = "0x40011F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public RectTransform SelectorLINE_task;

	[Token(Token = "0x40011F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public RectTransform SelectorLINE_legend;

	[Token(Token = "0x40011F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public RectTransform SelectorLINE_goods;

	[Token(Token = "0x40011F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject Task;

	[Token(Token = "0x40011FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject Task_describe;

	[Token(Token = "0x40011FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject[] Task_List;

	[Token(Token = "0x40011FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Button Task_next;

	[Token(Token = "0x40011FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Button Task_prev;

	[Token(Token = "0x40011FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Text Task_pages_out;

	[Token(Token = "0x40011FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int Task_Page;

	[Token(Token = "0x4001200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Text Task_ev_desc;

	[Token(Token = "0x4001201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Text Task_ev_choose;

	[Token(Token = "0x4001202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Button[] Task_ev_ChoseBG;

	[Token(Token = "0x4001203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Toggle Task_show_on_map;

	[Token(Token = "0x4001204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private NewEvent Legend_Event;

	[Token(Token = "0x4001205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject Legend;

	[Token(Token = "0x4001206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject[] Legend_List;

	[Token(Token = "0x4001207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Button Legend_next;

	[Token(Token = "0x4001208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Button Legend_prev;

	[Token(Token = "0x4001209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Text Legend_pages_out;

	[Token(Token = "0x400120A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int Legend_Page;

	[Token(Token = "0x400120B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Image Legend_Image;

	[Token(Token = "0x400120C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Sprite Legend_Image_sprite;

	[Token(Token = "0x400120D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Texture2D texArt;

	[Token(Token = "0x400120E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Text Legend_Describe;

	[Token(Token = "0x400120F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string Legend_Text;

	[Token(Token = "0x4001210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject Goods;

	[Token(Token = "0x4001211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject[] Goods_List;

	[Token(Token = "0x4001212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Button Goods_next;

	[Token(Token = "0x4001213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Button Goods_prev;

	[Token(Token = "0x4001214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Text Goods_pages_out;

	[Token(Token = "0x4001215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int Goods_Page;

	[Token(Token = "0x4001216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject[] Goods_Tovars;

	[Token(Token = "0x4001217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public int Goods_ShowType;

	[Token(Token = "0x4001218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject Status;

	[Token(Token = "0x4001219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Text[] Status_StatePoints;

	[Token(Token = "0x400121A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Text[] Status_StateName;

	[Token(Token = "0x400121B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Image[] Status_Flags;

	[Token(Token = "0x400121C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Slider[] Status_Progress;

	[Token(Token = "0x400121D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Color Col_ALAY;

	[Token(Token = "0x400121E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Color Col_FRND;

	[Token(Token = "0x400121F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public Color Col_NEUT;

	[Token(Token = "0x4001220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public Color Col_ENEM;

	[Token(Token = "0x4001221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public Color Col_WARS;

	[Token(Token = "0x4001222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public GameObject Statistic;

	[Token(Token = "0x4001223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public Text[] Statistic_Text;

	[Token(Token = "0x4001224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private SaveDataStatistics stats;

	[Token(Token = "0x4001225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private SaveDataProfile profile;

	[Token(Token = "0x4001226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public Button[] ReputationICONS;

	[Token(Token = "0x4001227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public Text[] Reputation_Percent;

	[Token(Token = "0x4001228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public Text Reputation_Desc;

	[Token(Token = "0x4001229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static int hawk;

	[Token(Token = "0x400122A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int ram;

	[Token(Token = "0x400122B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static int spider;

	[Token(Token = "0x400122C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static int rabbit;

	[Token(Token = "0x400122D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static int snake;

	[Token(Token = "0x400122E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static NewEvent EveCurr;

	[Token(Token = "0x400122F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public HelpContentData HelpData;

	[Token(Token = "0x4001230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private int currentTaskIndex;

	[Token(Token = "0x4001231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static NewEvent[] OnThisPage;

	[Token(Token = "0x4001232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	private bool block_legends;

	[Token(Token = "0x4001233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static Tovar[] FullList;

	[Token(Token = "0x4001234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string[] FullListTownList;

	[Token(Token = "0x4001235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static int[] town_indexes;

	[Token(Token = "0x4001236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static int[] TovarList;

	[Token(Token = "0x4001237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static int[] TownList;

	[Token(Token = "0x4001238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public int curDec;

	[Token(Token = "0x4001239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	private bool swiped;

	[Token(Token = "0x17000170")]
	public Transform[] journal_pages
	{
		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x156C958", Offset = "0x156C958", VA = "0x156C958")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x156CB24", Offset = "0x156CB24", VA = "0x156CB24")]
		private set
		{
		}
	}

	[Token(Token = "0x17000171")]
	public float AreaDiscovered
	{
		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0x156CB2C", Offset = "0x156CB2C", VA = "0x156CB2C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0x156CBA8", Offset = "0x156CBA8", VA = "0x156CBA8")]
	public void Choose_Btn_Act(int loca)
	{
	}

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0x156D414", Offset = "0x156D414", VA = "0x156D414")]
	public void Task_List_Click(int local)
	{
	}

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0x156E0A0", Offset = "0x156E0A0", VA = "0x156E0A0")]
	public void Close_Journal()
	{
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0x156E394", Offset = "0x156E394", VA = "0x156E394")]
	public void Task_refresh()
	{
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0x1570070", Offset = "0x1570070", VA = "0x1570070")]
	public void Task_next_ACT()
	{
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0x15700EC", Offset = "0x15700EC", VA = "0x15700EC")]
	public void Task_prev_ACT()
	{
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0x1570168", Offset = "0x1570168", VA = "0x1570168")]
	public void LegendClick(int local)
	{
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0x1570CE4", Offset = "0x1570CE4", VA = "0x1570CE4")]
	public void Legend_refresh()
	{
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0x1571714", Offset = "0x1571714", VA = "0x1571714")]
	public void Legend_next_act()
	{
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0x1571790", Offset = "0x1571790", VA = "0x1571790")]
	public void Legend_prev_act()
	{
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0x157180C", Offset = "0x157180C", VA = "0x157180C")]
	public void Goods_refresh()
	{
	}

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0x1571810", Offset = "0x1571810", VA = "0x1571810")]
	public void Goods_refresh_mob()
	{
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0x1573880", Offset = "0x1573880", VA = "0x1573880")]
	public void Goods_refresh_pc()
	{
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0x1575410", Offset = "0x1575410", VA = "0x1575410")]
	private void Push_Goods_Show_Descr()
	{
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0x1575498", Offset = "0x1575498", VA = "0x1575498")]
	public void Pop_Goods_Show_Descr()
	{
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0x1575550", Offset = "0x1575550", VA = "0x1575550")]
	public void Goods_Show_Descr(int localTT)
	{
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0x1575ADC", Offset = "0x1575ADC", VA = "0x1575ADC")]
	public void Goods_next_act()
	{
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0x1575B58", Offset = "0x1575B58", VA = "0x1575B58")]
	public void Goods_prev_act()
	{
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0x1575BD4", Offset = "0x1575BD4", VA = "0x1575BD4")]
	public void Goods_category(int choose)
	{
	}

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0x1575C50", Offset = "0x1575C50", VA = "0x1575C50")]
	public void Status_Refresh()
	{
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0x15769E0", Offset = "0x15769E0", VA = "0x15769E0")]
	public void Statistic_Refresh()
	{
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0x157704C", Offset = "0x157704C", VA = "0x157704C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0x157717C", Offset = "0x157717C", VA = "0x157717C")]
	public void ShowDescribe(int num)
	{
	}

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0x15773A8", Offset = "0x15773A8", VA = "0x15773A8")]
	public void Recalc_Reputation()
	{
	}

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0x1577AA4", Offset = "0x1577AA4", VA = "0x1577AA4")]
	private void OnProfileLoaded(object obj)
	{
	}

	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0x1577B34", Offset = "0x1577B34", VA = "0x1577B34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0x1577BB4", Offset = "0x1577BB4", VA = "0x1577BB4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0x1577C80", Offset = "0x1577C80", VA = "0x1577C80")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0x15782B4", Offset = "0x15782B4", VA = "0x15782B4")]
	public void OnTaskShowOnMapValueChanged(bool isOn)
	{
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0x157836C", Offset = "0x157836C", VA = "0x157836C")]
	public Journal()
	{
	}
}
[Token(Token = "0x200024D")]
public class JournalScale : MonoBehaviour
{
	[Token(Token = "0x400123A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject leftPage;

	[Token(Token = "0x400123B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rightPage;

	[Token(Token = "0x400123C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject tasks;

	[Token(Token = "0x400123D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject legends;

	[Token(Token = "0x400123E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject cargo;

	[Token(Token = "0x400123F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject status;

	[Token(Token = "0x4001240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject statistic;

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0x1516F8C", Offset = "0x1516F8C", VA = "0x1516F8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0x1516F90", Offset = "0x1516F90", VA = "0x1516F90")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0x1516F94", Offset = "0x1516F94", VA = "0x1516F94")]
	public JournalScale()
	{
	}
}
[Token(Token = "0x200024E")]
public class lampada : MonoBehaviour
{
	[Token(Token = "0x4001241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float rot1;

	[Token(Token = "0x4001242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float rot2;

	[Token(Token = "0x4001243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool LocalRot;

	[Token(Token = "0x4001244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Light Lamp;

	[Token(Token = "0x4001245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color BaseColor;

	[Token(Token = "0x4001246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float TargLight;

	[Token(Token = "0x4001247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float CurrLight;

	[Token(Token = "0x4001248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float LightChangeSpeed;

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0x15D968C", Offset = "0x15D968C", VA = "0x15D968C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0x15D96B0", Offset = "0x15D96B0", VA = "0x15D96B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0x15D992C", Offset = "0x15D992C", VA = "0x15D992C")]
	public lampada()
	{
	}
}
[Token(Token = "0x200024F")]
public class LightHouse : MonoBehaviour
{
	[Token(Token = "0x4001249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool IAmVisible;

	[Token(Token = "0x400124A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 LightCoord;

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0x151A3F4", Offset = "0x151A3F4", VA = "0x151A3F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0x151A430", Offset = "0x151A430", VA = "0x151A430")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0x151A5DC", Offset = "0x151A5DC", VA = "0x151A5DC")]
	public LightHouse()
	{
	}
}
[Token(Token = "0x2000250")]
public class LightOnlyNight : MonoBehaviour
{
	[Token(Token = "0x400124B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float Timer;

	[Token(Token = "0x400124C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Light My;

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0x151A5EC", Offset = "0x151A5EC", VA = "0x151A5EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0x151A6DC", Offset = "0x151A6DC", VA = "0x151A6DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0x151A7C4", Offset = "0x151A7C4", VA = "0x151A7C4")]
	public LightOnlyNight()
	{
	}
}
[Token(Token = "0x2000251")]
public class Location_Load : SingletonMonoBehaviour<Location_Load>
{
	[Token(Token = "0x400124D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform PlayerSpawn;

	[Token(Token = "0x400124E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject NPC_night;

	[Token(Token = "0x400124F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Loca_Holder;

	[Token(Token = "0x4001250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PrefabList list;

	[Token(Token = "0x4001251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public List<GameObject> VR_IconHolder;

	[Token(Token = "0x4001252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] listUIIcons;

	[Token(Token = "0x4001253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 LocaPos;

	[Token(Token = "0x4001254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string ReconfigCreatures;

	[Token(Token = "0x4001255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject tempGO;

	[Token(Token = "0x4001256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject[] goIcons;

	[Token(Token = "0x4001257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3[] PositionsIcons;

	[Token(Token = "0x17000172")]
	public PrefabList List
	{
		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x151DE4C", Offset = "0x151DE4C", VA = "0x151DE4C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x151DE54", Offset = "0x151DE54", VA = "0x151DE54")]
		set
		{
		}
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0x151DBDC", Offset = "0x151DBDC", VA = "0x151DBDC", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0x151DC38", Offset = "0x151DC38", VA = "0x151DC38")]
	public void LoadResources()
	{
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0x151DDB4", Offset = "0x151DDB4", VA = "0x151DDB4")]
	public void UnloadResources()
	{
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0x151DE5C", Offset = "0x151DE5C", VA = "0x151DE5C")]
	public GameObject LOAD(string filename, Vector3 CoordOnMap, float LocRotation, bool SETPLAYERSPOUN, bool INIT_AS_QUEST = false)
	{
		return null;
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0x151F590", Offset = "0x151F590", VA = "0x151F590")]
	private void CreateVRIcons()
	{
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0x151FB5C", Offset = "0x151FB5C", VA = "0x151FB5C")]
	public void InTownAction()
	{
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0x151FBCC", Offset = "0x151FBCC", VA = "0x151FBCC")]
	public void OutTownAction()
	{
	}

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0x151FC3C", Offset = "0x151FC3C", VA = "0x151FC3C")]
	public void RefreshIcons(int startIndex = 0)
	{
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0x151FCFC", Offset = "0x151FCFC", VA = "0x151FCFC")]
	public Location_Load()
	{
	}
}
[Token(Token = "0x2000252")]
public class Loot
{
	[Token(Token = "0x4001258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string ID;

	[Token(Token = "0x4001259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int[] TowarIndex;

	[Token(Token = "0x400125A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int[] TowarMin;

	[Token(Token = "0x400125B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int[] TowarMax;

	[Token(Token = "0x400125C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int[] TowarChance;

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0x15227D8", Offset = "0x15227D8", VA = "0x15227D8")]
	public Loot()
	{
	}
}
[Token(Token = "0x2000253")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x578BEC", Offset = "0x578BEC")]
public class MapHider : MonoBehaviour
{
	[Token(Token = "0x2000254")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578C54", Offset = "0x578C54")]
	private sealed class <AutoSetAlpha>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MapHider <>4__this;

		[Token(Token = "0x17000175")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DE4")]
			[Address(RVA = "0x1579AA8", Offset = "0x1579AA8", VA = "0x1579AA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000176")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DE6")]
			[Address(RVA = "0x1579AF0", Offset = "0x1579AF0", VA = "0x1579AF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x15799DC", Offset = "0x15799DC", VA = "0x15799DC")]
		[DebuggerHidden]
		public <AutoSetAlpha>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x1579A08", Offset = "0x1579A08", VA = "0x1579A08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x1579A0C", Offset = "0x1579A0C", VA = "0x1579A0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x1579AB0", Offset = "0x1579AB0", VA = "0x1579AB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400125D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E8D4", Offset = "0x57E8D4")]
	private SpriteRenderer <SpriteRenderer>k__BackingField;

	[Token(Token = "0x400125E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E8E4", Offset = "0x57E8E4")]
	private bool <ManualSetAlpha>k__BackingField;

	[Token(Token = "0x17000173")]
	public SpriteRenderer SpriteRenderer
	{
		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x1528BC4", Offset = "0x1528BC4", VA = "0x1528BC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58AA54", Offset = "0x58AA54")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x1528BCC", Offset = "0x1528BCC", VA = "0x1528BCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58AA64", Offset = "0x58AA64")]
		private set
		{
		}
	}

	[Token(Token = "0x17000174")]
	public bool ManualSetAlpha
	{
		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x1528BD4", Offset = "0x1528BD4", VA = "0x1528BD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58AA74", Offset = "0x58AA74")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x1528BDC", Offset = "0x1528BDC", VA = "0x1528BDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58AA84", Offset = "0x58AA84")]
		set
		{
		}
	}

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0x1528BE8", Offset = "0x1528BE8", VA = "0x1528BE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0x1528CA0", Offset = "0x1528CA0", VA = "0x1528CA0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0x1528D60", Offset = "0x1528D60", VA = "0x1528D60")]
	public void ManualUpdate(Vector3 coordCheck)
	{
	}

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0x1528CE0", Offset = "0x1528CE0", VA = "0x1528CE0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58AA94", Offset = "0x58AA94")]
	private IEnumerator AutoSetAlpha()
	{
		return null;
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0x1528EE8", Offset = "0x1528EE8", VA = "0x1528EE8")]
	public void SetAlphaByShip(Vector3 originPosition)
	{
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0x15290FC", Offset = "0x15290FC", VA = "0x15290FC")]
	public MapHider()
	{
	}
}
[Token(Token = "0x2000255")]
public class MapLoader : MonoBehaviour
{
	[Token(Token = "0x4001262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform TovarList;

	[Token(Token = "0x4001263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MapLoader singletone;

	[Token(Token = "0x4001264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject DLCMapController;

	[Token(Token = "0x4001265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SpriteRenderer MapBG;

	[Token(Token = "0x4001266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float Ship_StartX;

	[Token(Token = "0x4001267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float Ship_StartY;

	[Token(Token = "0x4001268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] SideMaps;

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0x1529104", Offset = "0x1529104", VA = "0x1529104")]
	public void UnloadMapTexture()
	{
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0x1529198", Offset = "0x1529198", VA = "0x1529198")]
	public void LoadMapTexture()
	{
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0x15292D4", Offset = "0x15292D4", VA = "0x15292D4")]
	public void LOAD_MAP(int MapNumber, bool globalLoad = true)
	{
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0x152E3E8", Offset = "0x152E3E8", VA = "0x152E3E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0x152E45C", Offset = "0x152E45C", VA = "0x152E45C")]
	public MapLoader()
	{
	}
}
[Token(Token = "0x2000256")]
public class MapShip : MonoBehaviour
{
	[Token(Token = "0x4001269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int UniquieID;

	[Token(Token = "0x400126A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int WasFraction;

	[Token(Token = "0x400126B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int Fraction;

	[Token(Token = "0x400126C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool OwnerOnMap;

	[Token(Token = "0x400126D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMesh PlayerName;

	[Token(Token = "0x400126E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 OSM_PrevMustBeHere;

	[Token(Token = "0x400126F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float OSM_PrevMustBeRotation;

	[Token(Token = "0x4001270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 OSM_MustBeHere;

	[Token(Token = "0x4001271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float OSM_MustBeRotation;

	[Token(Token = "0x4001272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float OSM_SyncTime;

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0x15A0710", Offset = "0x15A0710", VA = "0x15A0710")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0x15A0714", Offset = "0x15A0714", VA = "0x15A0714")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0x15A0770", Offset = "0x15A0770", VA = "0x15A0770")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0x15A0A4C", Offset = "0x15A0A4C", VA = "0x15A0A4C")]
	public MapShip()
	{
	}
}
[Token(Token = "0x2000257")]
[ExecuteInEditMode]
public class MapText : MonoBehaviour
{
	[Token(Token = "0x4001273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string LocaCode;

	[Token(Token = "0x4001274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] Letters;

	[Token(Token = "0x4001275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float CentreOffset;

	[Token(Token = "0x4001276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float LettersAngleMul;

	[Token(Token = "0x4001277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float wholeWordRot;

	[Token(Token = "0x4001278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float CharSize;

	[Token(Token = "0x4001279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float BoldOffset;

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0x15A0A54", Offset = "0x15A0A54", VA = "0x15A0A54")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0x15A0C98", Offset = "0x15A0C98", VA = "0x15A0C98")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0x15A0EC0", Offset = "0x15A0EC0", VA = "0x15A0EC0")]
	public MapText()
	{
	}
}
[Token(Token = "0x2000258")]
public enum MapTypes
{
	[Token(Token = "0x400127B")]
	CalmWaters,
	[Token(Token = "0x400127C")]
	EasternWaters,
	[Token(Token = "0x400127D")]
	GhostlySeas,
	[Token(Token = "0x400127E")]
	NewWorld
}
[Token(Token = "0x2000259")]
public class Map_HL_autohide : MonoBehaviour
{
	[Token(Token = "0x400127F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpriteRenderer my;

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0x15A0ED4", Offset = "0x15A0ED4", VA = "0x15A0ED4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0x15A0ED8", Offset = "0x15A0ED8", VA = "0x15A0ED8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0x15A0F18", Offset = "0x15A0F18", VA = "0x15A0F18")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0x15A0FCC", Offset = "0x15A0FCC", VA = "0x15A0FCC")]
	public Map_HL_autohide()
	{
	}
}
[Token(Token = "0x200025A")]
public class Map_title_hider : MonoBehaviour
{
	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0x15A0FD4", Offset = "0x15A0FD4", VA = "0x15A0FD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0x15A1160", Offset = "0x15A1160", VA = "0x15A1160")]
	public Map_title_hider()
	{
	}
}
[Token(Token = "0x200025B")]
public class MaterialQueueSetter : MonoBehaviour
{
	[Token(Token = "0x4001280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int renderQueue;

	[Token(Token = "0x4001281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer _renderer;

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0x15A1A64", Offset = "0x15A1A64", VA = "0x15A1A64")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0x15A1BD4", Offset = "0x15A1BD4", VA = "0x15A1BD4")]
	public MaterialQueueSetter()
	{
	}
}
[Token(Token = "0x200025C")]
public class MeteorProc : MonoBehaviour
{
	[Token(Token = "0x4001282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool Fallen;

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0x15A4B88", Offset = "0x15A4B88", VA = "0x15A4B88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0x15A4D64", Offset = "0x15A4D64", VA = "0x15A4D64")]
	public MeteorProc()
	{
	}
}
[Token(Token = "0x200025D")]
public class MicroEvent : MonoBehaviour
{
	[Token(Token = "0x4001283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool ANY_MICRO_EVENT;

	[Token(Token = "0x4001284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool CHECK_VISIT;

	[Token(Token = "0x4001285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool CHECK_KILL;

	[Token(Token = "0x4001286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject MyCircle;

	[Token(Token = "0x4001287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E904", Offset = "0x57E904")]
	private NewEvent <MyEvent>k__BackingField;

	[Token(Token = "0x4001288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int MyCMDindex;

	[Token(Token = "0x4001289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float UpdateStars;

	[Token(Token = "0x400128A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float[] StarsAlpha;

	[Token(Token = "0x400128B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float[] StarsTargetAlpha;

	[Token(Token = "0x400128C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Ship[] ReqToKill;

	[Token(Token = "0x400128D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool wasPassedQwest;

	[Token(Token = "0x400128E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool passedQwest;

	[Token(Token = "0x400128F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	private bool EnabledQuest;

	[Token(Token = "0x17000177")]
	public NewEvent MyEvent
	{
		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x15A4D6C", Offset = "0x15A4D6C", VA = "0x15A4D6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58AB4C", Offset = "0x58AB4C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x15A4D74", Offset = "0x15A4D74", VA = "0x15A4D74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58AB5C", Offset = "0x58AB5C")]
		set
		{
		}
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0x15A4D7C", Offset = "0x15A4D7C", VA = "0x15A4D7C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0x15A4DE0", Offset = "0x15A4DE0", VA = "0x15A4DE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0x15A5780", Offset = "0x15A5780", VA = "0x15A5780")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0x15A7108", Offset = "0x15A7108", VA = "0x15A7108")]
	public void EnableStartGates()
	{
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0x15A7338", Offset = "0x15A7338", VA = "0x15A7338")]
	public MicroEvent()
	{
	}
}
[Token(Token = "0x200025E")]
public class MineOnWaves : MonoBehaviour
{
	[Token(Token = "0x4001290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float ExploionCheck;

	[Token(Token = "0x4001291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float HitMyselfAfter10seconds;

	[Token(Token = "0x4001292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float Lifetime;

	[Token(Token = "0x4001293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float ItPower;

	[Token(Token = "0x4001294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool Immortal;

	[Token(Token = "0x4001295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject MyMine;

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0x15A746C", Offset = "0x15A746C", VA = "0x15A746C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0x15A747C", Offset = "0x15A747C", VA = "0x15A747C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0x15A78B4", Offset = "0x15A78B4", VA = "0x15A78B4")]
	public MineOnWaves()
	{
	}
}
[Token(Token = "0x200025F")]
public class MOBILE_Only : MonoBehaviour
{
	[Token(Token = "0x6000E09")]
	[Address(RVA = "0x152289C", Offset = "0x152289C", VA = "0x152289C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0x15229D0", Offset = "0x15229D0", VA = "0x15229D0")]
	public MOBILE_Only()
	{
	}
}
[Token(Token = "0x2000260")]
public class M_Event_ResultWin : MonoBehaviour
{
	[Token(Token = "0x2000261")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578C74", Offset = "0x578C74")]
	private sealed class <>c__DisplayClass58_0
	{
		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public H_Core.H_delegate firstBtnAct;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public H_Core.H_delegate secondBtnAct;

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0x1515F24", Offset = "0x1515F24", VA = "0x1515F24")]
		public <>c__DisplayClass58_0()
		{
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x1515F2C", Offset = "0x1515F2C", VA = "0x1515F2C")]
		internal void <SHOW_TEXT_WIN_CHOICE>b__0()
		{
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x1515F48", Offset = "0x1515F48", VA = "0x1515F48")]
		internal void <SHOW_TEXT_WIN_CHOICE>b__1()
		{
		}
	}

	[Token(Token = "0x2000262")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578C84", Offset = "0x578C84")]
	private sealed class <SHOW_TEXT_WIN>d__61 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string eventId;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public M_Event_ResultWin <>4__this;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool AllowDecline;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool validateBtns;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool moveForward;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float offsetX;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string OverrideTextTitle;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string OverrideTextAccept;

		[Token(Token = "0x1700017A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E38")]
			[Address(RVA = "0x15797C4", Offset = "0x15797C4", VA = "0x15797C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E3A")]
			[Address(RVA = "0x157980C", Offset = "0x157980C", VA = "0x157980C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0x157856C", Offset = "0x157856C", VA = "0x157856C")]
		[DebuggerHidden]
		public <SHOW_TEXT_WIN>d__61(int <>1__state)
		{
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0x1578598", Offset = "0x1578598", VA = "0x1578598", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0x157859C", Offset = "0x157859C", VA = "0x157859C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0x15797CC", Offset = "0x15797CC", VA = "0x15797CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000263")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578C94", Offset = "0x578C94")]
	private sealed class <>c__DisplayClass87_0
	{
		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action callback;

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0x1515F64", Offset = "0x1515F64", VA = "0x1515F64")]
		public <>c__DisplayClass87_0()
		{
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0x1515F6C", Offset = "0x1515F6C", VA = "0x1515F6C")]
		internal void <ValidateAcceptBtnListeners>b__0()
		{
		}
	}

	[Token(Token = "0x4001296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static M_Event_ResultWin singletone;

	[Token(Token = "0x4001297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject MySelf;

	[Token(Token = "0x4001298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Tovar[] ChooseTov;

	[Token(Token = "0x4001299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button[] Choose;

	[Token(Token = "0x400129A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int[] ChooseCOUNT;

	[Token(Token = "0x400129B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57E914", Offset = "0x57E914")]
	[SerializeField]
	private RewardInMessageBox[] rewards;

	[Token(Token = "0x400129C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57E960", Offset = "0x57E960")]
	private List<int> tovarIndexes;

	[Token(Token = "0x400129D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<int> tovarCounts;

	[Token(Token = "0x400129E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int sumTovarCount;

	[Token(Token = "0x400129F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Color Disab;

	[Token(Token = "0x40012A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int SelectedTrophy;

	[Token(Token = "0x40012A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static bool RequireChoose;

	[Token(Token = "0x40012A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public static bool WillReciveGlobal;

	[Token(Token = "0x40012A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Button Accept;

	[Token(Token = "0x40012A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Button Decline;

	[Token(Token = "0x40012A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Text acceptText;

	[Token(Token = "0x40012A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Text declineText;

	[Token(Token = "0x40012A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text EventTitle;

	[Token(Token = "0x40012A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject imageAndTextPrefab;

	[Token(Token = "0x40012A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject imageAndTextPrefab_consoles;

	[Token(Token = "0x40012AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text mainText;

	[Token(Token = "0x40012AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TextMeshProUGUI mainText_consoles;

	[Token(Token = "0x40012AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ScrollRect scroll;

	[Token(Token = "0x40012AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Image closeWinText;

	[Token(Token = "0x40012AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Text TrophyToChoose;

	[Token(Token = "0x40012AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E9B4", Offset = "0x57E9B4")]
	private Action <OnAcceptAction>k__BackingField;

	[Token(Token = "0x40012B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool backActionInStack;

	[Token(Token = "0x40012B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private RectTransform visibleAreaTransform;

	[Token(Token = "0x40012B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private RectTransform contentTransform;

	[Token(Token = "0x40012B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private GridLayoutGroup contentRewardLayoutGroup;

	[Token(Token = "0x40012B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private Color mobileBgColor;

	[Token(Token = "0x40012B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private Image bgImage;

	[Token(Token = "0x40012B6")]
	private const float VisibleAreaMaxHeight = 547f;

	[Token(Token = "0x40012B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private readonly Color declineColorBack;

	[Token(Token = "0x40012B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private readonly Color declineColorText;

	[Token(Token = "0x40012B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private readonly Color acceptColorBack;

	[Token(Token = "0x40012BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private readonly Color acceptColorTextEnabled;

	[Token(Token = "0x40012BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private readonly Color acceptColorTextDisabled;

	[Token(Token = "0x40012BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private GameObject[] tutorialTextFields;

	[Token(Token = "0x40012BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private GameObject imageCross_PS4;

	[Token(Token = "0x40012BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private GameObject imageCircle_PS4;

	[Token(Token = "0x40012BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private GameObject imageL1_PS4;

	[Token(Token = "0x40012C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public static bool closeScreens;

	[Token(Token = "0x40012C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public TMP_FontAsset EBGaramond;

	[Token(Token = "0x40012C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public TMP_FontAsset CJK;

	[Token(Token = "0x40012C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public TMP_FontAsset VerdanaAll;

	[Token(Token = "0x40012C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool BackWasVisible;

	[Token(Token = "0x40012C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
	private bool tutorEvent;

	[Token(Token = "0x40012C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public static bool startAcadem;

	[Token(Token = "0x40012C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public QWEST_window callit;

	[Token(Token = "0x40012C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public float deltaTime;

	[Token(Token = "0x40012C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private bool closeWin;

	[Token(Token = "0x17000178")]
	public string MainTextValue
	{
		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x15229D8", Offset = "0x15229D8", VA = "0x15229D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x1522A00", Offset = "0x1522A00", VA = "0x1522A00")]
		set
		{
		}
	}

	[Token(Token = "0x17000179")]
	public Action OnAcceptAction
	{
		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x1522B38", Offset = "0x1522B38", VA = "0x1522B38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58AB6C", Offset = "0x58AB6C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x1522B40", Offset = "0x1522B40", VA = "0x1522B40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58AB7C", Offset = "0x58AB7C")]
		set
		{
		}
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0x1522B48", Offset = "0x1522B48", VA = "0x1522B48")]
	public void Play_speech(string LocaName)
	{
	}

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0x1522C4C", Offset = "0x1522C4C", VA = "0x1522C4C")]
	public void SYS_RUN_WIN_as_townVisit(string title, string _mainText, float offsetX = 0f)
	{
	}

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0x15234D0", Offset = "0x15234D0", VA = "0x15234D0")]
	public void ShowTutorialTextWindowMobile(string text, [Optional] string[] extraTexts, [Optional] Sprite[] extraImages, string tutorType = "", string title = "t_title", [Optional] Action callback, [Optional] int[] tovarTypes, [Optional] int[] tovarCount, bool hideAccept = false)
	{
	}

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0x1524F4C", Offset = "0x1524F4C", VA = "0x1524F4C")]
	private void AddCanvasAndRaycastToWindow()
	{
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0x1525114", Offset = "0x1525114", VA = "0x1525114")]
	public void ShowTutorialTextWindow(string text)
	{
	}

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0x1525744", Offset = "0x1525744", VA = "0x1525744")]
	public void SHOW_TEXT_WIN_CHOICE(string OverrideTextBtnAccept, string OverrideTextBtnDecline, float offsetX = 0f, bool AllowDecline = false, string OverrideTextAccept = "", string OverrideTextTitle = "", bool moveForward = true, [Optional] H_Core.H_delegate firstBtnAct, [Optional] H_Core.H_delegate secondBtnAct)
	{
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0x1525BBC", Offset = "0x1525BBC", VA = "0x1525BBC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58AB8C", Offset = "0x58AB8C")]
	public IEnumerator SHOW_TEXT_WIN(string eventId = "", float offsetX = 0f, bool AllowDecline = false, string OverrideTextAccept = "", string OverrideTextTitle = "", bool moveForward = true, bool validateBtns = true, bool isMultiChoiseWindow = false)
	{
		return null;
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0x1525CC4", Offset = "0x1525CC4", VA = "0x1525CC4")]
	private void SetRandomPiastresForLandingQuest(CMD[] eventSCR)
	{
	}

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0x1524848", Offset = "0x1524848", VA = "0x1524848")]
	private void SetupRewardsButtons()
	{
	}

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0x152478C", Offset = "0x152478C", VA = "0x152478C")]
	private void ClearAllRewards()
	{
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0x1525F90", Offset = "0x1525F90", VA = "0x1525F90")]
	private void GetAllRewardIndexesFromEvents(CMD[] eventSCR)
	{
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0x1526108", Offset = "0x1526108", VA = "0x1526108")]
	public Tovar GetTovarByIndex(int index)
	{
		return null;
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0x15261F0", Offset = "0x15261F0", VA = "0x15261F0")]
	public int GetTovarCountByIndex(int index)
	{
		return default(int);
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0x1526234", Offset = "0x1526234", VA = "0x1526234")]
	private void OnAcceptButtonClick()
	{
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0x1526620", Offset = "0x1526620", VA = "0x1526620")]
	public void ClearAdditionalTextFields()
	{
	}

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0x1526700", Offset = "0x1526700", VA = "0x1526700")]
	private void OnAcceptButtonSame()
	{
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0x1526C1C", Offset = "0x1526C1C", VA = "0x1526C1C")]
	private void OpenMap()
	{
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0x1526D14", Offset = "0x1526D14", VA = "0x1526D14")]
	public void AcceptBtnAct()
	{
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0x1526E24", Offset = "0x1526E24", VA = "0x1526E24")]
	public void AcceptBtnActOptionBack()
	{
	}

	[Token(Token = "0x6000E22")]
	[Address(RVA = "0x15270A8", Offset = "0x15270A8", VA = "0x15270A8")]
	public void СloseWindow()
	{
	}

	[Token(Token = "0x6000E23")]
	[Address(RVA = "0x1527254", Offset = "0x1527254", VA = "0x1527254")]
	public void DeclineBtnAct()
	{
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0x15276BC", Offset = "0x15276BC", VA = "0x15276BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0x1527850", Offset = "0x1527850", VA = "0x1527850")]
	private void SetupUIMobile()
	{
	}

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0x1527854", Offset = "0x1527854", VA = "0x1527854")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0x15234A4", Offset = "0x15234A4", VA = "0x15234A4")]
	private void CheckButtonsMobile()
	{
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0x1527874", Offset = "0x1527874", VA = "0x1527874")]
	public void BgOnPointerClick()
	{
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0x15234A8", Offset = "0x15234A8", VA = "0x15234A8")]
	private void SetupContentMobile(bool isTutorial)
	{
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0x15234AC", Offset = "0x15234AC", VA = "0x15234AC")]
	private void ScrollUp()
	{
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0x1523060", Offset = "0x1523060", VA = "0x1523060")]
	private void SetWindowOffset(float offsetX = 0f)
	{
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0x1523158", Offset = "0x1523158", VA = "0x1523158")]
	private void ValidateAcceptBtnListeners(bool moveForward = true, [Optional] Action callback)
	{
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0x1527A08", Offset = "0x1527A08", VA = "0x1527A08")]
	public static string GetAmmountChangeString(int ammount)
	{
		return null;
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0x1524488", Offset = "0x1524488", VA = "0x1524488")]
	private string ReplaceSpriteToText(string txt)
	{
		return null;
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0x1527AA8", Offset = "0x1527AA8", VA = "0x1527AA8")]
	public M_Event_ResultWin()
	{
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0x1527D5C", Offset = "0x1527D5C", VA = "0x1527D5C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58ABF4", Offset = "0x58ABF4")]
	private void <AcceptBtnAct>b__72_0()
	{
	}
}
[Token(Token = "0x2000264")]
public class NewControlling : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000265")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578CA4", Offset = "0x578CA4")]
	private sealed class <>c
	{
		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<GameObject> <>9__30_0;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Comparison<Ship> <>9__30_1;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Comparison<Ship> <>9__30_2;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action <>9__199_0;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Action <>9__199_1;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static H_Core.H_delegate <>9__201_0;

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x157BB90", Offset = "0x157BB90", VA = "0x157BB90")]
		public <>c()
		{
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x157BB98", Offset = "0x157BB98", VA = "0x157BB98")]
		internal bool <SetCamAligns>b__30_0(GameObject c)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x157BBB4", Offset = "0x157BBB4", VA = "0x157BBB4")]
		internal int <SetCamAligns>b__30_1(Ship e1, Ship e2)
		{
			return default(int);
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0x157BC10", Offset = "0x157BC10", VA = "0x157BC10")]
		internal int <SetCamAligns>b__30_2(Ship e1, Ship e2)
		{
			return default(int);
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x157BD88", Offset = "0x157BD88", VA = "0x157BD88")]
		internal void <FixedUpdate>b__199_0()
		{
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x157BD8C", Offset = "0x157BD8C", VA = "0x157BD8C")]
		internal void <FixedUpdate>b__199_1()
		{
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x157BE10", Offset = "0x157BE10", VA = "0x157BE10")]
		internal void <UpdateMyShip>b__201_0()
		{
		}
	}

	[Token(Token = "0x2000266")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578CB4", Offset = "0x578CB4")]
	private sealed class <>c__DisplayClass61_0
	{
		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int RomReq;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NewControlling <>4__this;

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0x157BE80", Offset = "0x157BE80", VA = "0x157BE80")]
		public <>c__DisplayClass61_0()
		{
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x157BE88", Offset = "0x157BE88", VA = "0x157BE88")]
		internal void <DringRum>b__0()
		{
		}
	}

	[Token(Token = "0x40012D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SaveDataSettings settings;

	[Token(Token = "0x40012D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject PCBoardingWaiter;

	[Token(Token = "0x40012D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Image PCBoardingTimer;

	[Token(Token = "0x40012DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] CamAlign;

	[Token(Token = "0x40012DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image[] CamAlignHP;

	[Token(Token = "0x40012DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] CamAlignEye;

	[Token(Token = "0x40012DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Ship[] CamShipLink;

	[Token(Token = "0x40012DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image[] CamAlignIcon;

	[Token(Token = "0x40012DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AutoFocusIcons AutoFocusIcons;

	[Token(Token = "0x40012E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float lastSetSpeedTime;

	[Token(Token = "0x40012E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public WindDirection WindDirectionPrefab;

	[Token(Token = "0x40012E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int LinkIt;

	[Token(Token = "0x40012E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RectTransform MORALE_BAR_speed;

	[Token(Token = "0x40012E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool isDisabledShipRotation;

	[Token(Token = "0x40012E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
	public static bool isDisabledShipSails;

	[Token(Token = "0x40012E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
	public static bool isDisabledSpyGlass;

	[Token(Token = "0x40012E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
	public static bool isDisabledJournalCall;

	[Token(Token = "0x40012E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isDisabledPointToSwim;

	[Token(Token = "0x40012E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	public static bool isDisabledArtefact;

	[Token(Token = "0x40012EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
	public static bool isDisabledCannonRotation;

	[Token(Token = "0x40012EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
	public static bool isDisabledShooting;

	[Token(Token = "0x40012EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static bool isDisabledAmmmunitionSwitch;

	[Token(Token = "0x40012ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	public static bool isDisabledHintHP;

	[Token(Token = "0x40012EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
	public static bool isDisabledHintMorale;

	[Token(Token = "0x40012EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
	public static bool isDisabledEnemyShipSpawning;

	[Token(Token = "0x40012F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool isDisabledLiteVersionVerification;

	[Token(Token = "0x40012F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int enemiesCount;

	[Token(Token = "0x40012F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57EA44", Offset = "0x57EA44")]
	public Slider Morale;

	[Token(Token = "0x40012F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Text moraleTitlePC;

	[Token(Token = "0x40012F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Text moraleTitleMobile;

	[Token(Token = "0x40012F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Color MoraleMax;

	[Token(Token = "0x40012F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Color MoraleMid;

	[Token(Token = "0x40012F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Color MoraleMin;

	[Token(Token = "0x40012F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private GameObject moraleDrinkPC;

	[Token(Token = "0x40012F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private GameObject moraleDrinkMobile;

	[Token(Token = "0x40012FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private GameObject moraleViolinPC;

	[Token(Token = "0x40012FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private GameObject moraleViolinMobile;

	[Token(Token = "0x40012FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private Image moraleViolinPCFiller;

	[Token(Token = "0x40012FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private Image moraleViolinMobileFiller;

	[Token(Token = "0x40012FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float violinCooldown;

	[Token(Token = "0x40012FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	[SerializeField]
	private float violinCooldownPerUse;

	[Token(Token = "0x4001300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57EB0C", Offset = "0x57EB0C")]
	public Text TeamPayment;

	[Token(Token = "0x4001301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Text TeamPaymentDaily;

	[Token(Token = "0x4001302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public static bool AllowDrinkRum;

	[Token(Token = "0x4001303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public static bool AllowPlayViolin;

	[Token(Token = "0x4001304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject ArefactBlock;

	[Token(Token = "0x4001305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject BoardingResult;

	[Token(Token = "0x4001306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject BoardingResult_consoles;

	[Token(Token = "0x4001307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject BoardingResultLoose;

	[Token(Token = "0x4001308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject BRcannotRepair;

	[Token(Token = "0x4001309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject BRcannotRepair_consoles;

	[Token(Token = "0x400130A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject BRcannotDobor;

	[Token(Token = "0x400130B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject BRcannotDobor_consoles;

	[Token(Token = "0x400130C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Image TrophyShipIcon;

	[Token(Token = "0x400130D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Ship WasUnderBoarding;

	[Token(Token = "0x400130E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public float timer3D;

	[Token(Token = "0x400130F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Ship EnemyInAGR;

	[Token(Token = "0x4001310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Ship EnemyInVISION;

	[Token(Token = "0x4001311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject settingsWindows;

	[Token(Token = "0x4001312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private int PrevOWcrdX;

	[Token(Token = "0x4001313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private int PrevOWcrdY;

	[Token(Token = "0x4001314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static bool LockPointSea;

	[Token(Token = "0x4001315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public ParticleSystem TrackHlight;

	[Token(Token = "0x4001316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static Vector2 Patch;

	[Token(Token = "0x4001317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static bool PointTarget;

	[Token(Token = "0x4001318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static float Player_Wind_Affect_keeper;

	[Token(Token = "0x4001319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static float SoundScreamBlock;

	[Token(Token = "0x400131A")]
	public const float CinematicSeconds = 3f;

	[Token(Token = "0x400131B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static float cinematic_culldown;

	[Token(Token = "0x400131C")]
	public const float cinematic_culldown_set = 0f;

	[Token(Token = "0x400131D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public static float cinematic;

	[Token(Token = "0x400131E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static bool ShowSecondaryRakurs;

	[Token(Token = "0x400131F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static NewControlling singletone;

	[Token(Token = "0x4001320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static float WIDE;

	[Token(Token = "0x4001321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public static float PrecissionShootTime;

	[Token(Token = "0x4001322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private float CheckPickUp;

	[Token(Token = "0x4001323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static bool AnyLootAround;

	[Token(Token = "0x4001324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private bool PickUpAllWithPercent;

	[Token(Token = "0x4001325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float timer05;

	[Token(Token = "0x4001326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static float timer01;

	[Token(Token = "0x4001327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public static bool zoom;

	[Token(Token = "0x4001328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x185")]
	private bool RightSound;

	[Token(Token = "0x4001329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x186")]
	private bool LeftSound;

	[Token(Token = "0x400132A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public AudioClip ManeurLeft;

	[Token(Token = "0x400132B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public AudioClip ManeurRight;

	[Token(Token = "0x400132C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static int BlockUnzoomOneFrame;

	[Token(Token = "0x400132D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Image ICON_ZOOM;

	[Token(Token = "0x400132E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject BTTN_ZOOM;

	[Token(Token = "0x400132F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static Tovar SelectedAmunition;

	[Token(Token = "0x4001330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static int SelectedAmunition_indexDEC;

	[Token(Token = "0x4001331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Image SelectedAmunIcon;

	[Token(Token = "0x4001332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Text SelectedAmunText;

	[Token(Token = "0x4001333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public GameObject AmunList_group;

	[Token(Token = "0x4001334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public GameObject[] AmunList;

	[Token(Token = "0x4001335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public Image[] AmunList_icon;

	[Token(Token = "0x4001336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public Text[] AmunList_text;

	[Token(Token = "0x4001337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public Image CANON_SHOOT_BUTTON_ICON;

	[Token(Token = "0x4001338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public Sprite DefaultCanon;

	[Token(Token = "0x4001339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public int[] Potencial_Amun_Index;

	[Token(Token = "0x400133A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public Text Speed_Percent_text;

	[Token(Token = "0x400133B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public Text CanonRotation_text;

	[Token(Token = "0x400133C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public Image SpeedToggle_Icon;

	[Token(Token = "0x400133D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public Sprite ParusIcon_0;

	[Token(Token = "0x400133E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public Sprite ParusIcon_50;

	[Token(Token = "0x400133F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public Sprite ParusIcon_100;

	[Token(Token = "0x4001340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public Transform shturwal;

	[Token(Token = "0x4001341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public Image shturwal_img;

	[Token(Token = "0x4001342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private bool SpriteBlured;

	[Token(Token = "0x4001343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public Sprite whell_normal;

	[Token(Token = "0x4001344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public Sprite whell_blured;

	[Token(Token = "0x4001345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public float Roter;

	[Token(Token = "0x4001346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public static bool Pressed_Left;

	[Token(Token = "0x4001347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	public static bool Pressed_Right;

	[Token(Token = "0x4001348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public GameObject Arrow1_area;

	[Token(Token = "0x4001349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public GameObject Arrow2_area;

	[Token(Token = "0x400134A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public Image RightBg;

	[Token(Token = "0x400134B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public Image LeftBg;

	[Token(Token = "0x400134C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private float WasShip_Rot;

	[Token(Token = "0x400134D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
	public static bool NoShootsYet;

	[Token(Token = "0x400134E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private GameObject imageR1_PS4;

	[Token(Token = "0x400134F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private GameObject imageL1_PS4;

	[Token(Token = "0x4001350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private GameObject imageR2_PS4;

	[Token(Token = "0x4001351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private GameObject imageL2_PS4;

	[Token(Token = "0x4001352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private GameObject imageSquare_PS4;

	[Token(Token = "0x4001353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private GameObject imageTriangle_PS4;

	[Token(Token = "0x4001354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static float ShootRotationL;

	[Token(Token = "0x4001355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public static float ShootRotationR;

	[Token(Token = "0x4001356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static bool PressedINC;

	[Token(Token = "0x4001357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	public static bool PressedDEC;

	[Token(Token = "0x4001358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	public static bool PressedINC_keyb;

	[Token(Token = "0x4001359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
	public static bool PressedDEC_keyb;

	[Token(Token = "0x400135A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public Slider ArtefactPower;

	[Token(Token = "0x400135B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public Text[] Artefact_reload_culldown;

	[Token(Token = "0x400135C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public Text[] Artefact_txt_power;

	[Token(Token = "0x400135D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public Text[] Artefact_txt_energycost;

	[Token(Token = "0x400135E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public Button[] Artefact_BUTTON;

	[Token(Token = "0x400135F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public Image[] Artefact_ICON;

	[Token(Token = "0x4001360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public Image[] Atefact_BG;

	[Token(Token = "0x4001361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public GameObject[] Artefact_Border;

	[Token(Token = "0x4001362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public int SelectedArtifact;

	[Token(Token = "0x4001363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
	private bool wasCameraZoom;

	[Token(Token = "0x4001364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	private float ZoomAwait;

	[Token(Token = "0x4001365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
	private float wasZoom_targ;

	[Token(Token = "0x1700017C")]
	public float CurrentMorale
	{
		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x163A43C", Offset = "0x163A43C", VA = "0x163A43C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x163A4F8", Offset = "0x163A4F8", VA = "0x163A4F8")]
		set
		{
		}
	}

	[Token(Token = "0x1700017D")]
	public GameObject MoraleDrink
	{
		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x163AC58", Offset = "0x163AC58", VA = "0x163AC58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700017E")]
	public GameObject MoraleViolin
	{
		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x163AC60", Offset = "0x163AC60", VA = "0x163AC60")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0x1639BF0", Offset = "0x1639BF0", VA = "0x1639BF0")]
	public void LinkToIt(int id)
	{
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0x1639BF4", Offset = "0x1639BF4", VA = "0x1639BF4")]
	public void HideCamPanel()
	{
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0x1639BF8", Offset = "0x1639BF8", VA = "0x1639BF8")]
	public void RefreshCamPanel()
	{
	}

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0x1639BFC", Offset = "0x1639BFC", VA = "0x1639BFC")]
	private void SetCamAligns()
	{
	}

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0x163A5FC", Offset = "0x163A5FC", VA = "0x163A5FC")]
	public void UpdateMoraleUI()
	{
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0x163A620", Offset = "0x163A620", VA = "0x163A620")]
	private void UpdateMoraleTitle()
	{
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0x163A5C4", Offset = "0x163A5C4", VA = "0x163A5C4")]
	private void UpdateMoraleBar()
	{
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0x163AC68", Offset = "0x163AC68", VA = "0x163AC68")]
	public void HintMorale()
	{
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0x163AD44", Offset = "0x163AD44", VA = "0x163AD44")]
	public void HintHP()
	{
	}

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0x163AEB0", Offset = "0x163AEB0", VA = "0x163AEB0")]
	public void DringRum()
	{
	}

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0x163B224", Offset = "0x163B224", VA = "0x163B224")]
	public void PlayViolin()
	{
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0x163B2A8", Offset = "0x163B2A8", VA = "0x163B2A8")]
	public void UpdateViolinUseFiller()
	{
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0x163A720", Offset = "0x163A720", VA = "0x163A720")]
	public void ChangeMorale(int valEasy, int valNorm, int valHard)
	{
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0x163B45C", Offset = "0x163B45C", VA = "0x163B45C")]
	private void OnRumCountChanged(object Type)
	{
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0x163B2C4", Offset = "0x163B2C4", VA = "0x163B2C4")]
	private void CheckRumAvailable()
	{
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0x163B53C", Offset = "0x163B53C", VA = "0x163B53C")]
	public void AditionalReward()
	{
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0x163B868", Offset = "0x163B868", VA = "0x163B868")]
	public void AfterBoardRepair()
	{
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0x163BCD0", Offset = "0x163BCD0", VA = "0x163BCD0")]
	public void AfterBoardTeam()
	{
	}

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0x163BC0C", Offset = "0x163BC0C", VA = "0x163BC0C")]
	public void EndBoardingWithDestroy()
	{
	}

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0x163C4B8", Offset = "0x163C4B8", VA = "0x163C4B8")]
	public void EndBoardingWithTrophy()
	{
	}

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0x163C1CC", Offset = "0x163C1CC", VA = "0x163C1CC")]
	private void CloseBoardingDialog()
	{
	}

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0x163C558", Offset = "0x163C558", VA = "0x163C558")]
	public void AfterBoarTrophyShip()
	{
	}

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0x163C838", Offset = "0x163C838", VA = "0x163C838")]
	public static void SetZoom(bool IsZoom)
	{
	}

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0x163C9FC", Offset = "0x163C9FC", VA = "0x163C9FC")]
	public void UpdatemainPanel()
	{
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0x163D028", Offset = "0x163D028", VA = "0x163D028")]
	public void SelectAmunitionSlot(int slot)
	{
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0x163D958", Offset = "0x163D958", VA = "0x163D958")]
	public void Manual_Shoot()
	{
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0x163E898", Offset = "0x163E898", VA = "0x163E898")]
	public void Toggle_Speed()
	{
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0x163ED20", Offset = "0x163ED20", VA = "0x163ED20")]
	public void setLeft_touch(bool set)
	{
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0x163ED94", Offset = "0x163ED94", VA = "0x163ED94")]
	public void setRight_touch(bool set)
	{
	}

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0x163EE08", Offset = "0x163EE08", VA = "0x163EE08")]
	public void ExitMouseLook()
	{
	}

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0x163EF3C", Offset = "0x163EF3C", VA = "0x163EF3C")]
	public void Rot_LEFT()
	{
	}

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0x163EFEC", Offset = "0x163EFEC", VA = "0x163EFEC")]
	public void Rot_RIGHT()
	{
	}

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0x163F09C", Offset = "0x163F09C", VA = "0x163F09C")]
	public void Rot_STOP()
	{
	}

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0x163ECCC", Offset = "0x163ECCC", VA = "0x163ECCC")]
	public void Set_spd_Icon(int parus)
	{
	}

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0x163F14C", Offset = "0x163F14C", VA = "0x163F14C")]
	public void OpenList()
	{
	}

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0x163F5D0", Offset = "0x163F5D0", VA = "0x163F5D0")]
	public void SetAmunitionIfEmpty()
	{
	}

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0x163D088", Offset = "0x163D088", VA = "0x163D088")]
	public void SetAmunition(int Int_Slot_link, bool Auto)
	{
	}

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0x163F890", Offset = "0x163F890", VA = "0x163F890")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0x163FBB4", Offset = "0x163FBB4", VA = "0x163FBB4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0x163EA40", Offset = "0x163EA40", VA = "0x163EA40")]
	public void SetParusSpeed(float speedSet01)
	{
	}

	[Token(Token = "0x6000E69")]
	[Address(RVA = "0x163FCC4", Offset = "0x163FCC4", VA = "0x163FCC4")]
	public void RotateTelegraph_INCREASE(bool increase)
	{
	}

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0x163FD5C", Offset = "0x163FD5C", VA = "0x163FD5C")]
	public void RotateTelegraph_DECREASE(bool increase)
	{
	}

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0x163F660", Offset = "0x163F660", VA = "0x163F660")]
	public void SetPrecission()
	{
	}

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0x163FDF4", Offset = "0x163FDF4", VA = "0x163FDF4")]
	public void DownArtefacet(int loc)
	{
	}

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0x1640094", Offset = "0x1640094", VA = "0x1640094")]
	public void PickUP()
	{
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0x1640114", Offset = "0x1640114", VA = "0x1640114")]
	public void Zoom_Btn_Act()
	{
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0x1640270", Offset = "0x1640270", VA = "0x1640270")]
	public void CheckArtefactEnabing()
	{
	}

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0x16404FC", Offset = "0x16404FC", VA = "0x16404FC")]
	public void OnSettingsLoaded(object obj)
	{
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0x164058C", Offset = "0x164058C", VA = "0x164058C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0x1640714", Offset = "0x1640714", VA = "0x1640714")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0x1640A40", Offset = "0x1640A40", VA = "0x1640A40")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0x16444B4", Offset = "0x16444B4", VA = "0x16444B4")]
	private void UpdateMyShip()
	{
	}

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0x16462C8", Offset = "0x16462C8", VA = "0x16462C8")]
	private void ProcessSeaMovement()
	{
	}

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0x1647564", Offset = "0x1647564", VA = "0x1647564")]
	private void Update2PerSec()
	{
	}

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0x1640C24", Offset = "0x1640C24", VA = "0x1640C24")]
	private void ProcessControlls()
	{
	}

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0x1647EC4", Offset = "0x1647EC4", VA = "0x1647EC4")]
	private void ProcessPointToSwim()
	{
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0x1646A48", Offset = "0x1646A48", VA = "0x1646A48")]
	private void ProcessPickup()
	{
	}

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0x1648F4C", Offset = "0x1648F4C", VA = "0x1648F4C")]
	public NewControlling()
	{
	}
}
[Token(Token = "0x2000267")]
public enum EventIcons
{
	[Token(Token = "0x4001370")]
	None,
	[Token(Token = "0x4001371")]
	Ship,
	[Token(Token = "0x4001372")]
	Monster,
	[Token(Token = "0x4001373")]
	Skull,
	[Token(Token = "0x4001374")]
	Chest,
	[Token(Token = "0x4001375")]
	Fort,
	[Token(Token = "0x4001376")]
	Map,
	[Token(Token = "0x4001377")]
	Land,
	[Token(Token = "0x4001378")]
	Town,
	[Token(Token = "0x4001379")]
	Town1,
	[Token(Token = "0x400137A")]
	Town2,
	[Token(Token = "0x400137B")]
	Town3,
	[Token(Token = "0x400137C")]
	DlcTown1,
	[Token(Token = "0x400137D")]
	DlcTown2,
	[Token(Token = "0x400137E")]
	DlcTown3
}
[Serializable]
[Token(Token = "0x2000268")]
public class CMD
{
	[Token(Token = "0x400137F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public CommandTypes type;

	[Token(Token = "0x4001380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool IF;

	[Token(Token = "0x4001381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool WAIT;

	[Token(Token = "0x4001382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	public bool DO;

	[Token(Token = "0x4001383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string param_strLOC;

	[Token(Token = "0x4001384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> param_str;

	[Token(Token = "0x4001385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<float> param_flo;

	[Token(Token = "0x4001386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Vector3> param_vec3;

	[Token(Token = "0x4001387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<bool> param_bool;

	[Token(Token = "0x4001388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<int> param_int;

	[Token(Token = "0x4001389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<int> param_int_extra1;

	[Token(Token = "0x400138A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string lastTownShown;

	[Token(Token = "0x400138B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int_z param_int_save;

	[Token(Token = "0x400138C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int_z param_journ_save;

	[Token(Token = "0x400138D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<bool> param_reward_repair;

	[Token(Token = "0x400138E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<bool> param_reward_recruitment;

	[Token(Token = "0x400138F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<string> param_ship_ids;

	[NonSerialized]
	[Token(Token = "0x4001390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<ShipParams> _param_ship;

	[Token(Token = "0x4001391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<string> param_loot_ids;

	[NonSerialized]
	[Token(Token = "0x4001392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<Loot> _param_loot;

	[Token(Token = "0x4001393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public List<string> param_tovar_ids;

	[NonSerialized]
	[Token(Token = "0x4001394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<Tovar> _param_tovar;

	[Token(Token = "0x4001395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public List<string> param_event_ids;

	[NonSerialized]
	[Token(Token = "0x4001396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private List<NewEvent> _param_event;

	[Token(Token = "0x4001397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EB20", Offset = "0x57EB20")]
	private bool <PassThisIF>k__BackingField;

	[Token(Token = "0x4001398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EB30", Offset = "0x57EB30")]
	private GameObject <visualComponent>k__BackingField;

	[Token(Token = "0x4001399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EB40", Offset = "0x57EB40")]
	private GameObject <microLocation>k__BackingField;

	[Token(Token = "0x400139A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public List<OptionsForTask> multiChoice;

	[Token(Token = "0x400139B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public TasksForLandQuests landTasks;

	[Token(Token = "0x400139C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public WaterMultiPhase waterMultiPhase;

	[Token(Token = "0x1700017F")]
	public int cmd
	{
		[Token(Token = "0x6000E86")]
		[Address(RVA = "0x84E7FC", Offset = "0x84E7FC", VA = "0x84E7FC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000180")]
	public List<ShipParams> param_ship
	{
		[Token(Token = "0x6000E87")]
		[Address(RVA = "0x84E804", Offset = "0x84E804", VA = "0x84E804")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E88")]
		[Address(RVA = "0x84E80C", Offset = "0x84E80C", VA = "0x84E80C")]
		set
		{
		}
	}

	[Token(Token = "0x17000181")]
	public List<Loot> param_loot
	{
		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x84E814", Offset = "0x84E814", VA = "0x84E814")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0x84E81C", Offset = "0x84E81C", VA = "0x84E81C")]
		set
		{
		}
	}

	[Token(Token = "0x17000182")]
	public List<Tovar> param_tovar
	{
		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x84E824", Offset = "0x84E824", VA = "0x84E824")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0x84E82C", Offset = "0x84E82C", VA = "0x84E82C")]
		set
		{
		}
	}

	[Token(Token = "0x17000183")]
	public List<NewEvent> param_event
	{
		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x84E834", Offset = "0x84E834", VA = "0x84E834")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0x84E83C", Offset = "0x84E83C", VA = "0x84E83C")]
		set
		{
		}
	}

	[Token(Token = "0x17000184")]
	public bool PassThisIF
	{
		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x84E844", Offset = "0x84E844", VA = "0x84E844")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58AC54", Offset = "0x58AC54")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E90")]
		[Address(RVA = "0x84E84C", Offset = "0x84E84C", VA = "0x84E84C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58AC64", Offset = "0x58AC64")]
		set
		{
		}
	}

	[Token(Token = "0x17000185")]
	public GameObject visualComponent
	{
		[Token(Token = "0x6000E91")]
		[Address(RVA = "0x84E858", Offset = "0x84E858", VA = "0x84E858")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58AC74", Offset = "0x58AC74")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E92")]
		[Address(RVA = "0x84E860", Offset = "0x84E860", VA = "0x84E860")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58AC84", Offset = "0x58AC84")]
		set
		{
		}
	}

	[Token(Token = "0x17000186")]
	public GameObject microLocation
	{
		[Token(Token = "0x6000E93")]
		[Address(RVA = "0x84E868", Offset = "0x84E868", VA = "0x84E868")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58AC94", Offset = "0x58AC94")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E94")]
		[Address(RVA = "0x84E870", Offset = "0x84E870", VA = "0x84E870")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58ACA4", Offset = "0x58ACA4")]
		set
		{
		}
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0x84E878", Offset = "0x84E878", VA = "0x84E878")]
	public CMD()
	{
	}
}
[Serializable]
[Token(Token = "0x2000269")]
public class NewEvent
{
	[Token(Token = "0x400139D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string ID;

	[Token(Token = "0x400139E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string NAME;

	[Token(Token = "0x400139F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int_z ENABLE;

	[Token(Token = "0x40013A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IS_LEGEND;

	[Token(Token = "0x40013A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool HAVE_QWEST;

	[Token(Token = "0x40013A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int SaveIndex;

	[Token(Token = "0x40013A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<CMD> SCR;

	[Token(Token = "0x40013A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EB50", Offset = "0x57EB50")]
	private bool <Answer_FORVARD>k__BackingField;

	[Token(Token = "0x40013A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EB60", Offset = "0x57EB60")]
	private bool <Answer_BACK>k__BackingField;

	[Token(Token = "0x40013A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EB70", Offset = "0x57EB70")]
	private int_z <DaysTo_Block>k__BackingField;

	[Token(Token = "0x40013A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EB80", Offset = "0x57EB80")]
	private int_z <DaysTo_Unblock>k__BackingField;

	[Token(Token = "0x40013A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EB90", Offset = "0x57EB90")]
	private bool <NewQwestInJournal>k__BackingField;

	[Token(Token = "0x40013A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EBA0", Offset = "0x57EBA0")]
	private int_z <EXE>k__BackingField;

	[Token(Token = "0x40013AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EBB0", Offset = "0x57EBB0")]
	private int <debug_EXE>k__BackingField;

	[Token(Token = "0x40013AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EBC0", Offset = "0x57EBC0")]
	private int <SET_EXE>k__BackingField;

	[Token(Token = "0x40013AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EBD0", Offset = "0x57EBD0")]
	private GameObject <loadedLocation>k__BackingField;

	[Token(Token = "0x40013AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EBE0", Offset = "0x57EBE0")]
	private bool <ShowOnMap>k__BackingField;

	[Token(Token = "0x17000187")]
	public bool Answer_FORVARD
	{
		[Token(Token = "0x6000E97")]
		[Address(RVA = "0x164A28C", Offset = "0x164A28C", VA = "0x164A28C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58ACB4", Offset = "0x58ACB4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E98")]
		[Address(RVA = "0x164A294", Offset = "0x164A294", VA = "0x164A294")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58ACC4", Offset = "0x58ACC4")]
		set
		{
		}
	}

	[Token(Token = "0x17000188")]
	public bool Answer_BACK
	{
		[Token(Token = "0x6000E99")]
		[Address(RVA = "0x164A2A0", Offset = "0x164A2A0", VA = "0x164A2A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58ACD4", Offset = "0x58ACD4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0x164A2A8", Offset = "0x164A2A8", VA = "0x164A2A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58ACE4", Offset = "0x58ACE4")]
		set
		{
		}
	}

	[Token(Token = "0x17000189")]
	public int_z DaysTo_Block
	{
		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0x164A2B4", Offset = "0x164A2B4", VA = "0x164A2B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58ACF4", Offset = "0x58ACF4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0x164A2BC", Offset = "0x164A2BC", VA = "0x164A2BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58AD04", Offset = "0x58AD04")]
		set
		{
		}
	}

	[Token(Token = "0x1700018A")]
	public int_z DaysTo_Unblock
	{
		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0x164A2C4", Offset = "0x164A2C4", VA = "0x164A2C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58AD14", Offset = "0x58AD14")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x164A2CC", Offset = "0x164A2CC", VA = "0x164A2CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58AD24", Offset = "0x58AD24")]
		set
		{
		}
	}

	[Token(Token = "0x1700018B")]
	public bool NewQwestInJournal
	{
		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0x164A2D4", Offset = "0x164A2D4", VA = "0x164A2D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58AD34", Offset = "0x58AD34")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0x164A2DC", Offset = "0x164A2DC", VA = "0x164A2DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58AD44", Offset = "0x58AD44")]
		set
		{
		}
	}

	[Token(Token = "0x1700018C")]
	public int_z EXE
	{
		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0x164A2E8", Offset = "0x164A2E8", VA = "0x164A2E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58AD54", Offset = "0x58AD54")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0x164A2F0", Offset = "0x164A2F0", VA = "0x164A2F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58AD64", Offset = "0x58AD64")]
		set
		{
		}
	}

	[Token(Token = "0x1700018D")]
	public int debug_EXE
	{
		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0x164A2F8", Offset = "0x164A2F8", VA = "0x164A2F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58AD74", Offset = "0x58AD74")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0x164A300", Offset = "0x164A300", VA = "0x164A300")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58AD84", Offset = "0x58AD84")]
		set
		{
		}
	}

	[Token(Token = "0x1700018E")]
	public int SET_EXE
	{
		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0x164A308", Offset = "0x164A308", VA = "0x164A308")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58AD94", Offset = "0x58AD94")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0x164A310", Offset = "0x164A310", VA = "0x164A310")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58ADA4", Offset = "0x58ADA4")]
		set
		{
		}
	}

	[Token(Token = "0x1700018F")]
	public GameObject loadedLocation
	{
		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0x164A318", Offset = "0x164A318", VA = "0x164A318")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58ADB4", Offset = "0x58ADB4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0x164A320", Offset = "0x164A320", VA = "0x164A320")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58ADC4", Offset = "0x58ADC4")]
		set
		{
		}
	}

	[Token(Token = "0x17000190")]
	public bool ShowOnMap
	{
		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x164A328", Offset = "0x164A328", VA = "0x164A328")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58ADD4", Offset = "0x58ADD4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0x164A330", Offset = "0x164A330", VA = "0x164A330")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58ADE4", Offset = "0x58ADE4")]
		set
		{
		}
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0x164A1A8", Offset = "0x164A1A8", VA = "0x164A1A8")]
	public NewEvent()
	{
	}
}
[Serializable]
[Token(Token = "0x200026A")]
public class OptionsForTask
{
	[Token(Token = "0x40013AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<TaskCondition> conditions;

	[Token(Token = "0x40013AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string nextQuest;

	[Token(Token = "0x40013B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int nextStepInLandQuest;

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0x15E4330", Offset = "0x15E4330", VA = "0x15E4330")]
	public OptionsForTask()
	{
	}
}
[Serializable]
[Token(Token = "0x200026B")]
public class TasksForLandQuests
{
	[Token(Token = "0x40013B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<LandTaskCondition> conditions;

	[Token(Token = "0x40013B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string nextQuest;

	[Token(Token = "0x40013B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int lvlOfLandGameplay;

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0x15F1924", Offset = "0x15F1924", VA = "0x15F1924")]
	public TasksForLandQuests()
	{
	}
}
[Serializable]
[Token(Token = "0x200026C")]
public class TaskCondition
{
	[Token(Token = "0x40013B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TaskTypes type;

	[Token(Token = "0x40013B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string valueName;

	[Token(Token = "0x40013B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int valueCount;

	[Token(Token = "0x40013B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<int> paramsInt;

	[Token(Token = "0x40013B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<string> paramsString;

	[Token(Token = "0x40013B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int counterForTask;

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0x1695DD8", Offset = "0x1695DD8", VA = "0x1695DD8")]
	public TaskCondition()
	{
	}
}
[Serializable]
[Token(Token = "0x200026D")]
public class LandTaskCondition
{
	[Token(Token = "0x40013BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LandTaskTypes type;

	[Token(Token = "0x40013BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string valueName;

	[Token(Token = "0x40013BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int valueCount;

	[Token(Token = "0x40013BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<int> intParams;

	[Token(Token = "0x40013BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<float> floatParams;

	[Token(Token = "0x40013BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<string> stringParams;

	[Token(Token = "0x40013C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<bool> boolParams;

	[Token(Token = "0x40013C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<OptionsForTask> options;

	[Token(Token = "0x40013C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int counterForTask;

	[Token(Token = "0x40013C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int nextTask;

	[Token(Token = "0x40013C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public EnemiesRanks enemyRank;

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0x1517C64", Offset = "0x1517C64", VA = "0x1517C64")]
	public LandTaskCondition()
	{
	}
}
[Serializable]
[Token(Token = "0x200026E")]
public class WaterMultiPhase
{
	[Token(Token = "0x40013C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int stepNumber;

	[Token(Token = "0x40013C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<WaterFightTasks> tasks;

	[Token(Token = "0x40013C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Dictionary<WaterFightCondiotonType, int> statistics;

	[Token(Token = "0x40013C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string nextQuest;

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0x16E7690", Offset = "0x16E7690", VA = "0x16E7690")]
	public void ClearTasks()
	{
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0x16E7714", Offset = "0x16E7714", VA = "0x16E7714")]
	public void FillEmptyStatistics()
	{
	}

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0x16E77C4", Offset = "0x16E77C4", VA = "0x16E77C4")]
	public WaterMultiPhase()
	{
	}
}
[Serializable]
[Token(Token = "0x200026F")]
public class WaterFightTasks
{
	[Token(Token = "0x40013C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public WaterFightTasksType type;

	[Token(Token = "0x40013CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ShipParams shipParams;

	[Token(Token = "0x40013CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<int> paramInt;

	[Token(Token = "0x40013CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<string> paramString;

	[Token(Token = "0x40013CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<float> paramFloat;

	[Token(Token = "0x40013CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<bool> paramBool;

	[Token(Token = "0x40013CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<WaterFightOption> options;

	[Token(Token = "0x40013D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int nextStep;

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0x16E111C", Offset = "0x16E111C", VA = "0x16E111C")]
	public WaterFightTasks()
	{
	}
}
[Serializable]
[Token(Token = "0x2000270")]
public class WaterFightOption
{
	[Token(Token = "0x40013D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<WaterFightCondition> conditions;

	[Token(Token = "0x40013D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int nextStep;

	[Token(Token = "0x40013D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string nextQuest;

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0x16E1090", Offset = "0x16E1090", VA = "0x16E1090")]
	public WaterFightOption()
	{
	}
}
[Serializable]
[Token(Token = "0x2000271")]
public class WaterFightCondition
{
	[Token(Token = "0x40013D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public WaterFightCondiotonType conditionType;

	[Token(Token = "0x40013D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int value;

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0x16E1088", Offset = "0x16E1088", VA = "0x16E1088")]
	public WaterFightCondition()
	{
	}
}
[Token(Token = "0x2000272")]
public enum TaskTypes
{
	[Token(Token = "0x40013D7")]
	Null,
	[Token(Token = "0x40013D8")]
	IfHasItem,
	[Token(Token = "0x40013D9")]
	IfHasPiastrs,
	[Token(Token = "0x40013DA")]
	IfFactionReputationMoreThan,
	[Token(Token = "0x40013DB")]
	IfFactionReputationLessThan,
	[Token(Token = "0x40013DC")]
	IfItemEquipped,
	[Token(Token = "0x40013DD")]
	IfStatisticsReached,
	[Token(Token = "0x40013DE")]
	IfSkillLevelReached,
	[Token(Token = "0x40013DF")]
	IfTimeIsMoreThan,
	[Token(Token = "0x40013E0")]
	IfTimeIsLessThan,
	[Token(Token = "0x40013E1")]
	IfDestroyedInPreviousFight,
	[Token(Token = "0x40013E2")]
	IfBoardedInPreviousFight,
	[Token(Token = "0x40013E3")]
	IfBoardedSpecialShipInPreviousFight,
	[Token(Token = "0x40013E4")]
	IfDestroyedSpecialShipInPreviousFight,
	[Token(Token = "0x40013E5")]
	IfHaveInjuredSailsmens,
	[Token(Token = "0x40013E6")]
	IfAspidum,
	[Token(Token = "0x40013E7")]
	IfGoat,
	[Token(Token = "0x40013E8")]
	IfHaveAmmountOfDifferntItems
}
[Token(Token = "0x2000273")]
public enum LandTaskTypes
{
	[Token(Token = "0x40013EA")]
	End = 0,
	[Token(Token = "0x40013EB")]
	SpounEnemy = 1,
	[Token(Token = "0x40013EC")]
	SpecialSpoun = 2,
	[Token(Token = "0x40013ED")]
	ShowMessage = 3,
	[Token(Token = "0x40013EE")]
	AgroEnemies = 4,
	[Token(Token = "0x40013EF")]
	VisitPoint = 5,
	[Token(Token = "0x40013F0")]
	BranchingToDifOptions = 6,
	[Token(Token = "0x40013F1")]
	DefeatEnemies = 7,
	[Token(Token = "0x40013F2")]
	AddItem = 8,
	[Token(Token = "0x40013F3")]
	ShowMultiChoiceWindow = 9,
	[Token(Token = "0x40013F4")]
	HealPlayer = 10,
	[Token(Token = "0x40013F5")]
	WaitTime = 13,
	[Token(Token = "0x40013F6")]
	KillEnemies = 14,
	[Token(Token = "0x40013F7")]
	ArenaWave = 15,
	[Token(Token = "0x40013F8")]
	EndWave = 16
}
[Token(Token = "0x2000274")]
public enum WaterFightCondiotonType
{
	[Token(Token = "0x40013FA")]
	None,
	[Token(Token = "0x40013FB")]
	ShipsDestroid,
	[Token(Token = "0x40013FC")]
	ShotsMade,
	[Token(Token = "0x40013FD")]
	WaitForSec
}
[Token(Token = "0x2000275")]
public enum WaterFightTasksType
{
	[Token(Token = "0x40013FF")]
	End,
	[Token(Token = "0x4001400")]
	SpounEnemy,
	[Token(Token = "0x4001401")]
	ShowMessage,
	[Token(Token = "0x4001402")]
	Branching,
	[Token(Token = "0x4001403")]
	WaitTime,
	[Token(Token = "0x4001404")]
	WaitForDestroingEnemies,
	[Token(Token = "0x4001405")]
	ClearField
}
[Token(Token = "0x2000276")]
public enum TownOfferType
{
	[Token(Token = "0x4001407")]
	Lower,
	[Token(Token = "0x4001408")]
	Higher
}
[Token(Token = "0x2000277")]
public class NewGlobalMap : MonoBehaviour
{
	[Token(Token = "0x2000278")]
	private struct PFCell
	{
		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int x;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int y;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int d;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int n;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string s;
	}

	[Serializable]
	[Token(Token = "0x2000279")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578CC4", Offset = "0x578CC4")]
	private sealed class <>c
	{
		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static H_Core.H_delegate <>9__106_0;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Predicate<NewEvent> <>9__118_0;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Predicate<PointOnMap> <>9__144_0;

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x157C0E4", Offset = "0x157C0E4", VA = "0x157C0E4")]
		public <>c()
		{
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x157C0EC", Offset = "0x157C0EC", VA = "0x157C0EC")]
		internal void <EnterInTown>b__106_0()
		{
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x157C4F8", Offset = "0x157C4F8", VA = "0x157C4F8")]
		internal bool <ShowUnderCursorInfo>b__118_0(NewEvent e)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x157C550", Offset = "0x157C550", VA = "0x157C550")]
		internal bool <GlobalMapSwimming>b__144_0(PointOnMap p)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4001409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool isZeroQuestComplite;

	[Token(Token = "0x400140A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isShipSelected;

	[Token(Token = "0x400140B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool isManualPoint;

	[Token(Token = "0x400140C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool wasBreakWhileDrag;

	[Token(Token = "0x400140D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform QwestList;

	[Token(Token = "0x400140E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform QwestListShadow;

	[Token(Token = "0x400140F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 offset1;

	[Token(Token = "0x4001410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 offset2;

	[Token(Token = "0x4001411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text QwestListText;

	[Token(Token = "0x4001412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float SCALE_COORD;

	[Token(Token = "0x4001413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Vector3 OFFSET;

	[Token(Token = "0x4001414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static int WriteFromOpenWorld;

	[Token(Token = "0x4001415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Vector3 OpenWrldLastCrd;

	[Token(Token = "0x4001416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static bool AnyMapMovement;

	[Token(Token = "0x4001417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public static bool AllowSpounLoot;

	[Token(Token = "0x4001418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public CanvasGroup MainUIenablCheck;

	[Token(Token = "0x4001419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject[] MapSignatures;

	[Token(Token = "0x400141A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int LastFraction;

	[Token(Token = "0x400141B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float wasAlpha;

	[Token(Token = "0x400141C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	private static bool _mapShowed;

	[Token(Token = "0x400141D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static float moraleBarOffset;

	[Token(Token = "0x400141E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static bool MapTargetShowed;

	[Token(Token = "0x400141F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static NewGlobalMap singletone;

	[Token(Token = "0x4001420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static bool FallowShip;

	[Token(Token = "0x4001421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public static bool ShowPoint;

	[Token(Token = "0x4001422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public static Vector2 PointToShow;

	[Token(Token = "0x4001423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClip MapSound;

	[Token(Token = "0x4001424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Sprite[] FractionFlags;

	[Token(Token = "0x4001425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform MySelection;

	[Token(Token = "0x4001426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public static bool DraggingFlag;

	[Token(Token = "0x4001427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector2 Drag_curr;

	[Token(Token = "0x4001428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector2 Drag_targ;

	[Token(Token = "0x4001429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Vector2[] Drag_free;

	[Token(Token = "0x400142A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static float timeOut;

	[Token(Token = "0x400142B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform ShipPoint;

	[Token(Token = "0x400142C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Vector3 ShipPointVirtual;

	[Token(Token = "0x400142D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static Vector3[] MyWay;

	[Token(Token = "0x400142E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public SpriteRenderer[] WayPoints;

	[Token(Token = "0x400142F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static int lastPointWrite;

	[Token(Token = "0x4001430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public static bool GainEnding;

	[Token(Token = "0x4001431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Sprite NewPointWay;

	[Token(Token = "0x4001432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Sprite PassedPointWay;

	[Token(Token = "0x4001433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static int SwimTo;

	[Token(Token = "0x4001434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Text DateOutput;

	[Token(Token = "0x4001435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Text Timer;

	[Token(Token = "0x4001436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject CONT_33;

	[Token(Token = "0x4001437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject CONT_44;

	[Token(Token = "0x4001438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject CONT_52;

	[Token(Token = "0x4001439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject CONT_63;

	[Token(Token = "0x400143A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject CONT_73;

	[Token(Token = "0x400143B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject CONT_95;

	[Token(Token = "0x400143C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public HelpContentData HelpData;

	[Token(Token = "0x400143D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject ToggleSailsUI;

	[Token(Token = "0x400143E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private GameObject[] seaIslands;

	[Token(Token = "0x400143F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool pathBuilding;

	[Token(Token = "0x4001440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public static bool isDisabledOpenWorldResourcesLoading;

	[Token(Token = "0x4001441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public static bool healToday;

	[Token(Token = "0x4001442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static int[,] grid;

	[Token(Token = "0x4001443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static LctNavMesh mesh;

	[Token(Token = "0x4001444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static int countObject;

	[Token(Token = "0x4001445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Transform InstantiateInThis;

	[Token(Token = "0x4001446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string[,] prefLocation;

	[Token(Token = "0x4001447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static GameObject[,] prefGO;

	[Token(Token = "0x4001448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static int[,] prefIndex;

	[Token(Token = "0x4001449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static int[,] prefRotate;

	[Token(Token = "0x400144A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static bool[,] waterIndex;

	[Token(Token = "0x400144B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[,] prefScale;

	[Token(Token = "0x400144C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public static float[,] prefOffsetX;

	[Token(Token = "0x400144D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static float[,] prefOffsetY;

	[Token(Token = "0x400144E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public static bool[,] prefCollider;

	[Token(Token = "0x400144F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public static bool[,] prefQ_DOWN;

	[Token(Token = "0x4001450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public static bool[,] prefQ_UP;

	[Token(Token = "0x4001451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public static bool[,] prefQ_LEFT;

	[Token(Token = "0x4001452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public static bool[,] prefQ_RGHT;

	[Token(Token = "0x4001453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public static Vector3 GLOBAL_OFFSET;

	[Token(Token = "0x4001454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public static Vector3 GLOBAL_SCALE_DOWN;

	[Token(Token = "0x4001455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public static Vector3 GLOBAL_SCALE_UP;

	[Token(Token = "0x4001456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool firstMove;

	[Token(Token = "0x4001457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private H_Core.H_delegate MapAditionalFunc;

	[Token(Token = "0x4001458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private bool ItsMapChanging;

	[Token(Token = "0x4001459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
	private bool wasCameraZoom;

	[Token(Token = "0x400145A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float ZoomAwait;

	[Token(Token = "0x400145B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float wasZoom_targ;

	[Token(Token = "0x400145C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private float MoveCameraTime;

	[Token(Token = "0x400145D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Vector3 LastCursorVec3;

	[Token(Token = "0x400145E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private float WasLStickSumm;

	[Token(Token = "0x400145F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool ShowedQwestListNow;

	[Token(Token = "0x4001460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public static bool isDisabledMapMovement;

	[Token(Token = "0x4001461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10D")]
	private static bool clickOnVR;

	[Token(Token = "0x4001462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private Vector3 Drag_curr_previous;

	[Token(Token = "0x4001463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private PFCell[,] cMap;

	[Token(Token = "0x17000191")]
	public static bool MapShowed
	{
		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x164A33C", Offset = "0x164A33C", VA = "0x164A33C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0x164A3A0", Offset = "0x164A3A0", VA = "0x164A3A0")]
		set
		{
		}
	}

	[Token(Token = "0x17000192")]
	public List<PointOnMap> PointsOnMap
	{
		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x164A508", Offset = "0x164A508", VA = "0x164A508")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0x164A674", Offset = "0x164A674", VA = "0x164A674")]
	public void ClearOpenWorld()
	{
	}

	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0x164AAF4", Offset = "0x164AAF4", VA = "0x164AAF4")]
	public void OpenWorld(bool RepositionOfPlayer = false, bool allowSpoun = true)
	{
	}

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0x164E080", Offset = "0x164E080", VA = "0x164E080")]
	public static void DayProcAdd(float time, bool CheckEvents)
	{
	}

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0x164E288", Offset = "0x164E288", VA = "0x164E288")]
	private static void OnNextHour(int Hours, bool CheckEvents)
	{
	}

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0x164F95C", Offset = "0x164F95C", VA = "0x164F95C")]
	private static void ProcessFights()
	{
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0x164FDD4", Offset = "0x164FDD4", VA = "0x164FDD4")]
	private static void ProcessQuests(bool CheckEvents)
	{
	}

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0x164F150", Offset = "0x164F150", VA = "0x164F150")]
	private static void PerformAutoHeal()
	{
	}

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0x164DFB0", Offset = "0x164DFB0", VA = "0x164DFB0")]
	public static int WrldToGridX(float wrldX)
	{
		return default(int);
	}

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0x164DFFC", Offset = "0x164DFFC", VA = "0x164DFFC")]
	public static int WrldToGridY(float wrldY)
	{
		return default(int);
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0x165070C", Offset = "0x165070C", VA = "0x165070C")]
	public static int RealWrldToGridX(float wrldX)
	{
		return default(int);
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0x165075C", Offset = "0x165075C", VA = "0x165075C")]
	public static int RealWrldToGridY(float wrldY)
	{
		return default(int);
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0x164E048", Offset = "0x164E048", VA = "0x164E048")]
	public static float GridToWrldX(float grid)
	{
		return default(float);
	}

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0x164E064", Offset = "0x164E064", VA = "0x164E064")]
	public static float GridToWrldY(float grid)
	{
		return default(float);
	}

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0x16507AC", Offset = "0x16507AC", VA = "0x16507AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0x1650900", Offset = "0x1650900", VA = "0x1650900")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0x1650A84", Offset = "0x1650A84", VA = "0x1650A84")]
	private void OnLanguageChanged()
	{
	}

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0x1650B28", Offset = "0x1650B28", VA = "0x1650B28")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0x1650BE0", Offset = "0x1650BE0", VA = "0x1650BE0")]
	private void OnMapShow()
	{
	}

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0x1651A8C", Offset = "0x1651A8C", VA = "0x1651A8C")]
	private void PrepareShowMap()
	{
	}

	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0x16529F0", Offset = "0x16529F0", VA = "0x16529F0")]
	private void OnMapClose()
	{
	}

	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0x1653404", Offset = "0x1653404", VA = "0x1653404")]
	public void PrepareOFFSET()
	{
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0x16534B8", Offset = "0x16534B8", VA = "0x16534B8")]
	public void EnterInTown(bool Show)
	{
	}

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0x16535DC", Offset = "0x16535DC", VA = "0x16535DC")]
	public void ShowMap(bool Show, [Optional] H_Core.H_delegate MapAditionalFunc, bool ItsMapChanging = false, bool GameStart = false)
	{
	}

	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0x164EA70", Offset = "0x164EA70", VA = "0x164EA70")]
	public void NextDay()
	{
	}

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0x1650A88", Offset = "0x1650A88", VA = "0x1650A88")]
	public void RefreshDate()
	{
	}

	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0x1653CD8", Offset = "0x1653CD8", VA = "0x1653CD8")]
	public static void ClearMapTrack()
	{
	}

	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0x1653E40", Offset = "0x1653E40", VA = "0x1653E40")]
	public void HintOnMap()
	{
	}

	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0x1656A8C", Offset = "0x1656A8C", VA = "0x1656A8C")]
	public void HintOnMapGamepad()
	{
	}

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0x1653F24", Offset = "0x1653F24", VA = "0x1653F24")]
	private void ShowUnderCursorInfo(Vector2 cursorPos)
	{
	}

	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0x1656B18", Offset = "0x1656B18", VA = "0x1656B18")]
	public List<Vector3> FindPath(float startX, float startY, int targetX, int targetY)
	{
		return null;
	}

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0x1656B8C", Offset = "0x1656B8C", VA = "0x1656B8C")]
	private void InterpolatePath(List<Vector3> res, Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0x1656D00", Offset = "0x1656D00", VA = "0x1656D00")]
	private Vector3 GridToWorld(Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0x1656DA0", Offset = "0x1656DA0", VA = "0x1656DA0")]
	private Vector2 FindOutBorderPoint(float x, float y)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0x165707C", Offset = "0x165707C", VA = "0x165707C")]
	private void FindClosetGroundPoint(int x, int y)
	{
	}

	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0x16578D4", Offset = "0x16578D4", VA = "0x16578D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0x1657BC8", Offset = "0x1657BC8", VA = "0x1657BC8")]
	public void SaveRespawnParameters()
	{
	}

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0x1657A44", Offset = "0x1657A44", VA = "0x1657A44")]
	private void BlockTutorMovement()
	{
	}

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0x1657A48", Offset = "0x1657A48", VA = "0x1657A48")]
	private void ShipMapMovement()
	{
	}

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0x1657CB0", Offset = "0x1657CB0", VA = "0x1657CB0")]
	private void GlobalMapCameraSet()
	{
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0x1658140", Offset = "0x1658140", VA = "0x1658140")]
	private void GetCurrentPos()
	{
	}

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0x165B024", Offset = "0x165B024", VA = "0x165B024")]
	public void GetCurrentPosInVR(BaseEventData data)
	{
	}

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0x16582B8", Offset = "0x16582B8", VA = "0x16582B8")]
	private void GetPointInSea()
	{
	}

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0x16585AC", Offset = "0x16585AC", VA = "0x16585AC")]
	private void GamePadMapControl()
	{
	}

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0x1657F08", Offset = "0x1657F08", VA = "0x1657F08")]
	private bool CanGetTouchOnMap()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0x165901C", Offset = "0x165901C", VA = "0x165901C")]
	private void MapFindWay()
	{
	}

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0x165B164", Offset = "0x165B164", VA = "0x165B164")]
	public Vector2[] FindWave(int startX, int startY, int targetX, int targetY)
	{
		return null;
	}

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0x165988C", Offset = "0x165988C", VA = "0x165988C")]
	private void MapCreatePath()
	{
	}

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0x1659E1C", Offset = "0x1659E1C", VA = "0x1659E1C")]
	private void GlobalMapSwimming()
	{
	}

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0x165AD18", Offset = "0x165AD18", VA = "0x165AD18")]
	private void CameraFollowShip()
	{
	}

	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0x165B01C", Offset = "0x165B01C", VA = "0x165B01C")]
	private void CheatMovement()
	{
	}

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0x165B020", Offset = "0x165B020", VA = "0x165B020")]
	private void DrawMapEdges()
	{
	}

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0x165098C", Offset = "0x165098C", VA = "0x165098C")]
	public void GotoAmelia()
	{
	}

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0x165B7B0", Offset = "0x165B7B0", VA = "0x165B7B0")]
	public NewGlobalMap()
	{
	}
}
[Token(Token = "0x200027A")]
public class New_Event_Loader : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200027B")]
	public class EventIconsSprites : KeyValuePairClass<EventIcons, Sprite>
	{
		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x157C81C", Offset = "0x157C81C", VA = "0x157C81C")]
		public EventIconsSprites()
		{
		}
	}

	[Token(Token = "0x200027C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578CD4", Offset = "0x578CD4")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CMD cmd;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int i;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Predicate<ShipParams> <>9__0;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Predicate<Loot> <>9__1;

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x157C600", Offset = "0x157C600", VA = "0x157C600")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x157C608", Offset = "0x157C608", VA = "0x157C608")]
		internal bool <ProcessEvents>b__0(ShipParams s)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x157C698", Offset = "0x157C698", VA = "0x157C698")]
		internal bool <ProcessEvents>b__1(Loot l)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200027D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578CE4", Offset = "0x578CE4")]
	private sealed class <>c__DisplayClass7_1
	{
		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WaterFightTasks task;

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x157C728", Offset = "0x157C728", VA = "0x157C728")]
		public <>c__DisplayClass7_1()
		{
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x157C730", Offset = "0x157C730", VA = "0x157C730")]
		internal bool <ProcessEvents>b__2(ShipParams s)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200027E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578CF4", Offset = "0x578CF4")]
	private sealed class <>c__DisplayClass9_0
	{
		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EventIcons eventIcon;

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x157C7B4", Offset = "0x157C7B4", VA = "0x157C7B4")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x157C7BC", Offset = "0x157C7BC", VA = "0x157C7BC")]
		internal bool <GetEventIcon>b__0(EventIconsSprites e)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200027F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578D04", Offset = "0x578D04")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string paramTovarId;

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x157C5A0", Offset = "0x157C5A0", VA = "0x157C5A0")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x157C5A8", Offset = "0x157C5A8", VA = "0x157C5A8")]
		internal bool <FillParamTovar>b__0(Tovar t)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000280")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578D14", Offset = "0x578D14")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string paramEventId;

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x157C5D0", Offset = "0x157C5D0", VA = "0x157C5D0")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x157C5D8", Offset = "0x157C5D8", VA = "0x157C5D8")]
		internal bool <FillParamEvent>b__0(NewEvent e)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400146D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TowarListLoad TowarListLoad;

	[Token(Token = "0x400146E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PointOnMap Event_Point_Prefab;

	[Token(Token = "0x400146F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject Event_Radial_Prefab;

	[Token(Token = "0x4001470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<EventIconsSprites> EventIconsParameters;

	[Token(Token = "0x4001471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TowarLootLoad TowarLootLoad;

	[Token(Token = "0x4001472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static New_Event_Loader Singleton;

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0x165BCDC", Offset = "0x165BCDC", VA = "0x165BCDC")]
	public void ProcessEvents()
	{
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0x165EEB8", Offset = "0x165EEB8", VA = "0x165EEB8")]
	private void SetAreaRadial(CMD cmd, [Optional] Color? color)
	{
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0x165ECF0", Offset = "0x165ECF0", VA = "0x165ECF0")]
	public Sprite GetEventIcon(EventIcons eventIcon)
	{
		return null;
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0x165EA98", Offset = "0x165EA98", VA = "0x165EA98")]
	private void FillParamTovar(CMD cmd)
	{
	}

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0x165E800", Offset = "0x165E800", VA = "0x165E800")]
	private void FillParamEvent(CMD cmd)
	{
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0x165F400", Offset = "0x165F400", VA = "0x165F400")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0x165F47C", Offset = "0x165F47C", VA = "0x165F47C")]
	public New_Event_Loader()
	{
	}
}
[Token(Token = "0x2000281")]
public class NEW_UI_aditional : RectTransformMonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000282")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578D24", Offset = "0x578D24")]
	private sealed class <>c
	{
		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static H_Core.H_delegate <>9__114_0;

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0x157B734", Offset = "0x157B734", VA = "0x157B734")]
		public <>c()
		{
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0x157B73C", Offset = "0x157B73C", VA = "0x157B73C")]
		internal void <Ship_Map_TimeGoStop>b__114_0()
		{
		}
	}

	[Token(Token = "0x400147B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static NEW_UI_aditional singletne;

	[Token(Token = "0x400147C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject DLCbutton;

	[Token(Token = "0x400147D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject UI_saves_win;

	[Token(Token = "0x400147E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform UI_main_menu_grey;

	[Token(Token = "0x400147F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Button UI_user_main_ui_back_locker;

	[Token(Token = "0x4001480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Button UI_user_main_ui_locker;

	[Token(Token = "0x4001481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject UI_morale;

	[Token(Token = "0x4001482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject Map_title;

	[Token(Token = "0x4001483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text Map_title_text;

	[Token(Token = "0x4001484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Image Map_title_bg;

	[Token(Token = "0x4001485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject UI_journBtn;

	[Token(Token = "0x4001486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public EquipSlot_new UI_fracBtnChange;

	[Token(Token = "0x4001487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Transform pc_fracButtonParrent;

	[Token(Token = "0x4001488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject UI_base_down;

	[Token(Token = "0x4001489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject UI_base_MENU_HELP;

	[Token(Token = "0x400148A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject UI_fight;

	[Token(Token = "0x400148B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject UI_fight_controll;

	[Token(Token = "0x400148C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject UI_Compass;

	[Token(Token = "0x400148D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject UI_artefact_btns;

	[Token(Token = "0x400148E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject UI_fight_CanonsRotation;

	[Token(Token = "0x400148F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public RateMeDialog UI_RateMeDialog;

	[Token(Token = "0x4001490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Button UI_PiastrMobileButton;

	[Token(Token = "0x4001491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GoldButtonEffect UI_PiastrMobileEffect;

	[Token(Token = "0x4001492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject UI_fight_victory_speedUP;

	[Token(Token = "0x4001493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject UI_fight_pickup;

	[Token(Token = "0x4001494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject PauseBt;

	[Token(Token = "0x4001495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject UI_map;

	[Token(Token = "0x4001496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject UI_town;

	[Token(Token = "0x4001497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject UI_conf;

	[Token(Token = "0x4001498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject UI_conf_equip;

	[Token(Token = "0x4001499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject UI_conf_qwest;

	[Token(Token = "0x400149A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject UI_conf_artef;

	[Token(Token = "0x400149B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject UI_conf_decor;

	[Token(Token = "0x400149C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject UI_conf_decor_mobile;

	[Token(Token = "0x400149D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject UI_conf_team;

	[Token(Token = "0x400149E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject UI_conf_team_mobile;

	[Token(Token = "0x400149F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject UI_conf_skill;

	[Token(Token = "0x40014A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject UI_trum_storage_market;

	[Token(Token = "0x40014A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject UI_evnt_revard;

	[Token(Token = "0x40014A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject UI_slot_predlog;

	[Token(Token = "0x40014A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject UI_slot_details;

	[Token(Token = "0x40014A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject UI_slot_details_BG;

	[Token(Token = "0x40014A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject UI_slot_Functions_FF_show_on_map;

	[Token(Token = "0x40014A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject UI_slot_Functions_FF_show_on_map_mobile;

	[Token(Token = "0x40014A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject FF_PANEL;

	[Token(Token = "0x40014A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject FF_BuySimple;

	[Token(Token = "0x40014A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject FF_Unequip;

	[Token(Token = "0x40014AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public GameObject FF_Equip;

	[Token(Token = "0x40014AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject FF_ToShip;

	[Token(Token = "0x40014AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObject FF_ToStorage;

	[Token(Token = "0x40014AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject FF_ThrowAway;

	[Token(Token = "0x40014AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public GameObject FF_Sell;

	[Token(Token = "0x40014AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public GameObject FF_Progressbar;

	[Token(Token = "0x40014B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public Slider FF_ProgressbarSlider;

	[Token(Token = "0x40014B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public Text FF_ProgressbarText;

	[Token(Token = "0x40014B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public GameObject FF_NoReconfig;

	[Token(Token = "0x40014B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public GameObject UI_RepairServ;

	[Token(Token = "0x40014B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public GameObject UI_RepairServPiastr;

	[Token(Token = "0x40014B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public RectTransform UI_RepairSlider;

	[Token(Token = "0x40014B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public RectTransform Repair_LONG;

	[Token(Token = "0x40014B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public RectTransform Repair_SHORT;

	[Token(Token = "0x40014B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public RectTransform Repair_NOGOLD;

	[Token(Token = "0x40014B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public GameObject UI_Journal;

	[Token(Token = "0x40014BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public GameObject UI_SwitchToMap;

	[Token(Token = "0x40014BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public GameObject UI_SwitchToWorld;

	[Token(Token = "0x40014BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57EC50", Offset = "0x57EC50")]
	public RectTransform UI_chat_btn;

	[Token(Token = "0x40014BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public RectTransform UI_chat_list;

	[Token(Token = "0x40014BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57EC88", Offset = "0x57EC88")]
	public RectTransform UI_top_title_parent;

	[Token(Token = "0x40014BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public Text UI_top_title;

	[Token(Token = "0x40014C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public RectTransform UI_fraction_parent;

	[Token(Token = "0x40014C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public Text UI_fraction;

	[Token(Token = "0x40014C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public GameObject UI_faction_change_mobile;

	[Token(Token = "0x40014C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	[SerializeField]
	private GameObject ui_InfoBar_PC;

	[Token(Token = "0x40014C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	[SerializeField]
	private GameObject ui_InfoBar_Mobile;

	[Token(Token = "0x40014C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public GameObject UI_Zoom;

	[Token(Token = "0x40014C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public bool hideFight;

	[Token(Token = "0x40014C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x279")]
	public bool hideFight_Controll;

	[Token(Token = "0x40014C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27A")]
	public bool hideInfoBar;

	[Token(Token = "0x40014C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27B")]
	public bool hideConf;

	[Token(Token = "0x40014CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	public bool hideFracChange;

	[Token(Token = "0x40014CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27D")]
	public bool hideMoral;

	[Token(Token = "0x40014CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27E")]
	public bool hideShipInfo;

	[Token(Token = "0x40014CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27F")]
	public bool hideJournal;

	[Token(Token = "0x40014CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public bool hideSwitchToMap;

	[Token(Token = "0x40014CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x281")]
	public bool hidePickUp;

	[Token(Token = "0x40014D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x282")]
	public bool isDisabledRightClickRotation;

	[Token(Token = "0x40014D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public Text ReloadTimeL;

	[Token(Token = "0x40014D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public Text ReloadTimeR;

	[Token(Token = "0x40014D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public Image ReloadTimeL_img;

	[Token(Token = "0x40014D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public Image ReloadTimeR_img;

	[Token(Token = "0x40014D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public PopupInfoViewMobile PopupInfoViewMobilePrefab;

	[Token(Token = "0x40014D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private float ScrollTime;

	[Token(Token = "0x40014D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public GameObject UI_Hold_Window;

	[Token(Token = "0x40014D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private GameObject ControlsPanelSwtch;

	[Token(Token = "0x40014D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private GameObject ControlsPanelObj;

	[Token(Token = "0x40014DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57ECBC", Offset = "0x57ECBC")]
	private bool <UIConfVisibleExtra>k__BackingField;

	[Token(Token = "0x40014DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public Alert UI_top_alert;

	[Token(Token = "0x40014DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57ECCC", Offset = "0x57ECCC")]
	public TaskWindow taskWindow;

	[Token(Token = "0x40014DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public HighlightInterface highlightInterface;

	[Token(Token = "0x40014DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public TaskExplanationWindow taskExplanationWindow;

	[Token(Token = "0x40014DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57ED04", Offset = "0x57ED04")]
	[SerializeField]
	private AdvertisingTimer adTimerPrefab;

	[Token(Token = "0x40014E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	private HighlightInterface highlight;

	[Token(Token = "0x40014E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	public GameObject skipTutBtn;

	[Token(Token = "0x17000193")]
	public GameObject UI_conf_decor_by_platform
	{
		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x15ABFE8", Offset = "0x15ABFE8", VA = "0x15ABFE8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000194")]
	public GameObject UI_conf_team_by_platform
	{
		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x15ABFF0", Offset = "0x15ABFF0", VA = "0x15ABFF0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000195")]
	public GameObject UI_InfoBar
	{
		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x15ABFF8", Offset = "0x15ABFF8", VA = "0x15ABFF8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000196")]
	public bool UIConfVisibleExtra
	{
		[Token(Token = "0x6000F09")]
		[Address(RVA = "0x15AC000", Offset = "0x15AC000", VA = "0x15AC000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58ADF4", Offset = "0x58ADF4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x15AC008", Offset = "0x15AC008", VA = "0x15AC008")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58AE04", Offset = "0x58AE04")]
		set
		{
		}
	}

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0x15AC014", Offset = "0x15AC014", VA = "0x15AC014")]
	public void onHoldPointDOWN()
	{
	}

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0x15AC04C", Offset = "0x15AC04C", VA = "0x15AC04C")]
	public void onHoldPointUP(int window)
	{
	}

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0x15AC13C", Offset = "0x15AC13C", VA = "0x15AC13C")]
	public void Ship_Map_TimeGoStop_nodelegat()
	{
	}

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0x15AC530", Offset = "0x15AC530", VA = "0x15AC530")]
	public void Ship_Map_TimeGoStop([Optional] H_Core.H_delegate addIt)
	{
	}

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0x15AC904", Offset = "0x15AC904", VA = "0x15AC904")]
	public void Call_Journal()
	{
	}

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0x15AD2F8", Offset = "0x15AD2F8", VA = "0x15AD2F8")]
	public void RotaionCamera()
	{
	}

	[Token(Token = "0x6000F11")]
	[Address(RVA = "0x15AD36C", Offset = "0x15AD36C", VA = "0x15AD36C", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000F12")]
	[Address(RVA = "0x15AD4B4", Offset = "0x15AD4B4", VA = "0x15AD4B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0x15ADC04", Offset = "0x15ADC04", VA = "0x15ADC04")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F14")]
	[Address(RVA = "0x15ADD7C", Offset = "0x15ADD7C", VA = "0x15ADD7C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F15")]
	[Address(RVA = "0x15ADF40", Offset = "0x15ADF40", VA = "0x15ADF40")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000F16")]
	[Address(RVA = "0x15AD2D0", Offset = "0x15AD2D0", VA = "0x15AD2D0")]
	public void SetTopTitleOnMobile(string text)
	{
	}

	[Token(Token = "0x6000F17")]
	[Address(RVA = "0x15B0904", Offset = "0x15B0904", VA = "0x15B0904")]
	private void SetGameObjectActive(GameObject o, bool active)
	{
	}

	[Token(Token = "0x6000F18")]
	[Address(RVA = "0x15B0974", Offset = "0x15B0974", VA = "0x15B0974")]
	public void OnSkipTutorBtnClick()
	{
	}

	[Token(Token = "0x6000F19")]
	[Address(RVA = "0x15B0A90", Offset = "0x15B0A90", VA = "0x15B0A90")]
	private void ConfirmSkipTutor(int button)
	{
	}

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0x15B0BE0", Offset = "0x15B0BE0", VA = "0x15B0BE0")]
	public static void ToggleUiDisplay()
	{
	}

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0x15B0E64", Offset = "0x15B0E64", VA = "0x15B0E64")]
	public void OnGoldClicked()
	{
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0x15B0E70", Offset = "0x15B0E70", VA = "0x15B0E70")]
	public NEW_UI_aditional()
	{
	}
}
[Token(Token = "0x2000283")]
public class Octopus : MonoBehaviour
{
	[Token(Token = "0x40014E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float[] upDownSpeed;

	[Token(Token = "0x40014E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float[] upLimit;

	[Token(Token = "0x40014E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float SinkinFX;

	[Token(Token = "0x40014E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject AttachTo;

	[Token(Token = "0x40014E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float GoAway;

	[Token(Token = "0x40014E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool FirstFrameGoAway;

	[Token(Token = "0x6000F20")]
	[Address(RVA = "0x15DC558", Offset = "0x15DC558", VA = "0x15DC558")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0x15DC87C", Offset = "0x15DC87C", VA = "0x15DC87C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0x15DC924", Offset = "0x15DC924", VA = "0x15DC924")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0x15DCF18", Offset = "0x15DCF18", VA = "0x15DCF18")]
	public Octopus()
	{
	}
}
[Token(Token = "0x2000284")]
public class Octopus_kraken : MonoBehaviour
{
	[Token(Token = "0x40014EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource DeathSound;

	[Token(Token = "0x40014EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource CrabSound;

	[Token(Token = "0x40014EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool DIED;

	[Token(Token = "0x40014ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Telegraph Attack;

	[Token(Token = "0x40014EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float TimeToHit;

	[Token(Token = "0x40014EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform Head;

	[Token(Token = "0x40014F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float TargetY;

	[Token(Token = "0x40014F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Ship Me;

	[Token(Token = "0x40014F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject[] Laps;

	[Token(Token = "0x40014F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] LapsOnWater;

	[Token(Token = "0x40014F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] LapsTarg;

	[Token(Token = "0x40014F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float[] LapsSped;

	[Token(Token = "0x40014F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3[] LapsCurr;

	[Token(Token = "0x40014F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int AttackWithLap;

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0x15DCFB4", Offset = "0x15DCFB4", VA = "0x15DCFB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0x15DD35C", Offset = "0x15DD35C", VA = "0x15DD35C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0x15DD44C", Offset = "0x15DD44C", VA = "0x15DD44C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0x15DDC54", Offset = "0x15DDC54", VA = "0x15DDC54")]
	public Octopus_kraken()
	{
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0x15DDD34", Offset = "0x15DDD34", VA = "0x15DDD34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58AE14", Offset = "0x58AE14")]
	private void <Start>b__15_0()
	{
	}
}
[Token(Token = "0x2000285")]
public class OnStartDeletForMac : MonoBehaviour
{
	[Token(Token = "0x6000F29")]
	[Address(RVA = "0x15E3F08", Offset = "0x15E3F08", VA = "0x15E3F08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0x15E3F0C", Offset = "0x15E3F0C", VA = "0x15E3F0C")]
	public OnStartDeletForMac()
	{
	}
}
[Token(Token = "0x2000286")]
public class CampData : MonoBehaviour
{
	[Token(Token = "0x40014F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CageOpening[] AllCages;

	[Token(Token = "0x40014F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ChestOpening[] AllChests;

	[Token(Token = "0x40014FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PointsList AllEnemies;

	[Token(Token = "0x40014FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform bigPart;

	[Token(Token = "0x40014FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform smallPart;

	[Token(Token = "0x40014FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Totem totem;

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0x84F3A8", Offset = "0x84F3A8", VA = "0x84F3A8")]
	public CampData()
	{
	}
}
[Token(Token = "0x2000287")]
[ExecuteInEditMode]
public class Chunk : MonoBehaviour
{
	[Token(Token = "0x40014FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector2 position;

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0x853BFC", Offset = "0x853BFC", VA = "0x853BFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0x853C00", Offset = "0x853C00", VA = "0x853C00")]
	public Chunk()
	{
	}
}
[Serializable]
[Token(Token = "0x2000288")]
public class MyVector2Event : UnityEvent<Vector2>
{
	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0x15ABF94", Offset = "0x15ABF94", VA = "0x15ABF94")]
	public MyVector2Event()
	{
	}
}
[Token(Token = "0x2000289")]
public class ChunksController : MonoBehaviour
{
	[Token(Token = "0x40014FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool followShip;

	[Token(Token = "0x4001500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int chunkSize;

	[Token(Token = "0x4001501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 playerChunkPosition;

	[Token(Token = "0x4001502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform player;

	[Token(Token = "0x4001503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 position;

	[Token(Token = "0x4001504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector2 flooredPosition;

	[Token(Token = "0x4001505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool active;

	[Token(Token = "0x4001506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public MyVector2Event onPlayerPositionChanged;

	[Token(Token = "0x4001507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool inited;

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0x853C08", Offset = "0x853C08", VA = "0x853C08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0x853C0C", Offset = "0x853C0C", VA = "0x853C0C")]
	public void Init()
	{
	}

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0x853D70", Offset = "0x853D70", VA = "0x853D70")]
	public Vector2 GetPlayerChunkedPosition()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0x853E0C", Offset = "0x853E0C", VA = "0x853E0C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0x853F58", Offset = "0x853F58", VA = "0x853F58")]
	public ChunksController()
	{
	}
}
[Token(Token = "0x200028A")]
[ExecuteInEditMode]
public class ChunksManager : SingletonMonoBehaviour<ChunksManager>
{
	[Token(Token = "0x4001508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float chunkSize;

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0x853F68", Offset = "0x853F68", VA = "0x853F68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0x853F6C", Offset = "0x853F6C", VA = "0x853F6C")]
	public ChunksManager()
	{
	}
}
[Serializable]
[Token(Token = "0x200028B")]
public struct BillboradTree
{
	[Token(Token = "0x4001509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x400150A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector2 offset;

	[Token(Token = "0x400150B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float loopSize;

	[Token(Token = "0x400150C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public byte ID;

	[Token(Token = "0x400150D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public byte meshID;

	[Token(Token = "0x400150E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool enabled;
}
[Token(Token = "0x200028C")]
public class BillboardForestRenderer : MonoBehaviour
{
	[Token(Token = "0x400150F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BillboradTree[] trees;

	[Token(Token = "0x4001510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material material;

	[Token(Token = "0x4001511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Mesh[] meshes;

	[Token(Token = "0x4001512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 tempPosition;

	[Token(Token = "0x4001513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector2 tempOffset;

	[Token(Token = "0x4001514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float updateTime;

	[Token(Token = "0x4001515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float timer;

	[Token(Token = "0x4001516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int sortingLayer;

	[Token(Token = "0x4001517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool inited;

	[Token(Token = "0x4001518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Quaternion targetRotation;

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0x7E6E88", Offset = "0x7E6E88", VA = "0x7E6E88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F37")]
	[Address(RVA = "0x7E6EE4", Offset = "0x7E6EE4", VA = "0x7E6EE4")]
	public void Init(Transform zero)
	{
	}

	[Token(Token = "0x6000F38")]
	[Address(RVA = "0x7E7224", Offset = "0x7E7224", VA = "0x7E7224")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F39")]
	[Address(RVA = "0x7E73FC", Offset = "0x7E73FC", VA = "0x7E73FC")]
	private void UpdateTrees()
	{
	}

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0x7E7080", Offset = "0x7E7080", VA = "0x7E7080")]
	private bool IsTreeEnabled(Vector3 pos, byte ID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0x7E76C0", Offset = "0x7E76C0", VA = "0x7E76C0")]
	public BillboardForestRenderer()
	{
	}
}
[Serializable]
[Token(Token = "0x200028D")]
public struct TreeData
{
	[Token(Token = "0x4001519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x400151A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion rotation;

	[Token(Token = "0x400151B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public byte prefabID;

	[Token(Token = "0x400151C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float loopSize;

	[Token(Token = "0x400151D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public byte ID;

	[Token(Token = "0x400151E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool isLarge;
}
[Token(Token = "0x200028E")]
public class ForestIniter : MonoBehaviour
{
	[Token(Token = "0x400151F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TreeData[] spawnData;

	[Token(Token = "0x4001520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] trees;

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0x7B8240", Offset = "0x7B8240", VA = "0x7B8240")]
	public void Init(TerrianIniterDet initer, Vector3 zero)
	{
	}

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0x7B85DC", Offset = "0x7B85DC", VA = "0x7B85DC")]
	public ForestIniter()
	{
	}
}
[Token(Token = "0x200028F")]
public enum IslandState
{
	[Token(Token = "0x4001522")]
	Unloaded,
	[Token(Token = "0x4001523")]
	Loaded,
	[Token(Token = "0x4001524")]
	Shown
}
[Token(Token = "0x2000290")]
public class Island : MonoBehaviour
{
	[Token(Token = "0x4001525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string islandResourceID;

	[Token(Token = "0x4001526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float highLoadingRadius;

	[Token(Token = "0x4001527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float lowLoadingRadius;

	[Token(Token = "0x4001528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float showingRadius;

	[Token(Token = "0x4001529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public IslandState state;

	[Token(Token = "0x400152A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int chunkedHighLoadingRadius;

	[Token(Token = "0x400152B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int chunkedLowLoadingRadius;

	[Token(Token = "0x400152C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int chunkedshowingRadius;

	[Token(Token = "0x400152D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector2 chunkedPosition;

	[Token(Token = "0x400152E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool showOnLoad;

	[Token(Token = "0x400152F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject island;

	[Token(Token = "0x4001530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TerrianIniter terrainIniter;

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0x156C3A4", Offset = "0x156C3A4", VA = "0x156C3A4")]
	public void Init(int chunkSize)
	{
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0x156C40C", Offset = "0x156C40C", VA = "0x156C40C")]
	public void UpdateChunkedPosition(int chunkSize)
	{
	}

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0x156C4B0", Offset = "0x156C4B0", VA = "0x156C4B0")]
	public Vector2 GetChunkedPosition()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0x156C4B8", Offset = "0x156C4B8", VA = "0x156C4B8")]
	public void InstantiateIsland(string ID, GameObject g)
	{
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0x156C634", Offset = "0x156C634", VA = "0x156C634")]
	public int GetChunckedLoadingRadius()
	{
		return default(int);
	}

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0x156C63C", Offset = "0x156C63C", VA = "0x156C63C")]
	public int GetChunckedShowingRadius()
	{
		return default(int);
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0x156C644", Offset = "0x156C644", VA = "0x156C644")]
	public string GetResourceID()
	{
		return null;
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0x156C64C", Offset = "0x156C64C", VA = "0x156C64C")]
	public void SetIslandActive(bool active)
	{
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0x156C774", Offset = "0x156C774", VA = "0x156C774")]
	public void DestroyIsland()
	{
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0x156C7B0", Offset = "0x156C7B0", VA = "0x156C7B0")]
	public Island()
	{
	}
}
[Token(Token = "0x2000291")]
public class LandingPoint : MonoBehaviour
{
	[Token(Token = "0x4001531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform ShipPoint;

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0x1517E5C", Offset = "0x1517E5C", VA = "0x1517E5C")]
	public LandingPoint()
	{
	}
}
[Token(Token = "0x2000292")]
public class LandingPointsList : PointsList
{
	[Token(Token = "0x4001532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Vector3[] additionalData;

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0x1517E64", Offset = "0x1517E64", VA = "0x1517E64")]
	public Vector3 GetClosestPointAdditionalData(int i)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0x1517EAC", Offset = "0x1517EAC", VA = "0x1517EAC")]
	public LandingPointsList()
	{
	}
}
[Token(Token = "0x2000293")]
public class PointsList : MonoBehaviour
{
	[Token(Token = "0x4001533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector3[] points;

	[Token(Token = "0x4001534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Quaternion[] rotations;

	[Token(Token = "0x4001535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string[] assetIDs;

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0x154BCA8", Offset = "0x154BCA8", VA = "0x154BCA8")]
	public int GetClosestPoint(Vector3 position)
	{
		return default(int);
	}

	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0x154BE0C", Offset = "0x154BE0C", VA = "0x154BE0C")]
	public Vector3 GetPointPosition(int i)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0x154BE74", Offset = "0x154BE74", VA = "0x154BE74")]
	public Quaternion GetPointRotation(int i)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0x154BEB8", Offset = "0x154BEB8", VA = "0x154BEB8")]
	public string GetPointAssetID(int i)
	{
		return null;
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0x154BEF4", Offset = "0x154BEF4", VA = "0x154BEF4")]
	public int Count()
	{
		return default(int);
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0x154BF14", Offset = "0x154BF14", VA = "0x154BF14")]
	public PointsList()
	{
	}
}
[Token(Token = "0x2000294")]
public class MapController : SingletonMonoBehaviour<MapController>
{
	[Token(Token = "0x2000295")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578D54", Offset = "0x578D54")]
	private sealed class <UpdateIslandsCoroutine>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MapController <>4__this;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 offset;

		[Token(Token = "0x17000197")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F5E")]
			[Address(RVA = "0x157998C", Offset = "0x157998C", VA = "0x157998C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000198")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F60")]
			[Address(RVA = "0x15799D4", Offset = "0x15799D4", VA = "0x15799D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0x1579814", Offset = "0x1579814", VA = "0x1579814")]
		[DebuggerHidden]
		public <UpdateIslandsCoroutine>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0x1579840", Offset = "0x1579840", VA = "0x1579840", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0x1579844", Offset = "0x1579844", VA = "0x1579844", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0x1579994", Offset = "0x1579994", VA = "0x1579994", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ChunksController chunksController;

	[Token(Token = "0x4001537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Island[] islands;

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0x1528580", Offset = "0x1528580", VA = "0x1528580", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0x152866C", Offset = "0x152866C", VA = "0x152866C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58AE24", Offset = "0x58AE24")]
	private IEnumerator UpdateIslandsCoroutine(Vector3 offset)
	{
		return null;
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0x1528710", Offset = "0x1528710", VA = "0x1528710")]
	public void UpdateIslands(Vector3 offset)
	{
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0x152873C", Offset = "0x152873C", VA = "0x152873C")]
	public void OnPlayerPositionChanged(Vector2 newPosition)
	{
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0x15289F0", Offset = "0x15289F0", VA = "0x15289F0")]
	public int GetIslandsCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0x1528A10", Offset = "0x1528A10", VA = "0x1528A10")]
	public Island GetIsland(int i)
	{
		return null;
	}

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0x1528A4C", Offset = "0x1528A4C", VA = "0x1528A4C")]
	public void SetChunksControllerActive(bool active)
	{
	}

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0x1528A70", Offset = "0x1528A70", VA = "0x1528A70")]
	public void HideIslands()
	{
	}

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0x1528AE0", Offset = "0x1528AE0", VA = "0x1528AE0")]
	public void UnloadResources()
	{
	}

	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0x1528B70", Offset = "0x1528B70", VA = "0x1528B70")]
	public MapController()
	{
	}
}
[Token(Token = "0x2000296")]
public class RecourcesFactoriesManager : SingletonMonoBehaviour<RecourcesFactoriesManager>
{
	[Token(Token = "0x400153C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ResourcesFactory dlcResourceFactory;

	[Token(Token = "0x400153D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ResourcesFactory dlcIslandsFactory;

	[Token(Token = "0x400153E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ResourcesFactory enemiesFactory;

	[Token(Token = "0x400153F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ResourcesFactory holidayDecorationsFactory;

	[Token(Token = "0x4001540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private ResourcesFactory tutorialFactory;

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0x1532540", Offset = "0x1532540", VA = "0x1532540")]
	public static ResourcesFactory GetDLCResourcesFactory()
	{
		return null;
	}

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0x15325BC", Offset = "0x15325BC", VA = "0x15325BC")]
	public static ResourcesFactory GetDLCIslandsFactory()
	{
		return null;
	}

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0x1532638", Offset = "0x1532638", VA = "0x1532638")]
	public static ResourcesFactory GetEnemiesFactory()
	{
		return null;
	}

	[Token(Token = "0x6000F64")]
	[Address(RVA = "0x15326B4", Offset = "0x15326B4", VA = "0x15326B4")]
	public static ResourcesFactory GetHolidaysDecorationsFactory()
	{
		return null;
	}

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0x1532730", Offset = "0x1532730", VA = "0x1532730")]
	public static ResourcesFactory GetTutorialQuestsFactory()
	{
		return null;
	}

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0x15327AC", Offset = "0x15327AC", VA = "0x15327AC")]
	public RecourcesFactoriesManager()
	{
	}
}
[Token(Token = "0x2000297")]
public class LoadingQueueElement
{
	[Token(Token = "0x4001541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string id;

	[Token(Token = "0x4001542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action<string, GameObject> callback;

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0x151C5B0", Offset = "0x151C5B0", VA = "0x151C5B0")]
	public LoadingQueueElement(string id, Action<string, GameObject> callback)
	{
	}

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0x151C600", Offset = "0x151C600", VA = "0x151C600")]
	public LoadingQueueElement(string id)
	{
	}
}
[Token(Token = "0x2000298")]
public class ResourcesFactory : MonoBehaviour
{
	[Token(Token = "0x4001543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] assetsList;

	[Token(Token = "0x4001544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int currentLoadingID;

	[Token(Token = "0x4001545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ResourceRequest currentLoader;

	[Token(Token = "0x4001546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool loadingDone;

	[Token(Token = "0x4001547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<GameObject> loadedAssets;

	[Token(Token = "0x4001548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<string> loadedAssetIds;

	[Token(Token = "0x4001549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<LoadingQueueElement> loadingQueue;

	[Token(Token = "0x400154A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string folder;

	[Token(Token = "0x17000199")]
	public bool LoadingDone
	{
		[Token(Token = "0x6000F69")]
		[Address(RVA = "0x1533834", Offset = "0x1533834", VA = "0x1533834")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0x153383C", Offset = "0x153383C", VA = "0x153383C")]
	private ResourceRequest StartLoadingQueue()
	{
		return null;
	}

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0x153392C", Offset = "0x153392C", VA = "0x153392C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0x1533D18", Offset = "0x1533D18", VA = "0x1533D18")]
	public void PreloadAll()
	{
	}

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0x1533FC4", Offset = "0x1533FC4", VA = "0x1533FC4")]
	public GameObject PreloadImmediate(string resourceID)
	{
		return null;
	}

	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0x1534290", Offset = "0x1534290", VA = "0x1534290")]
	public void Preload(string resourceID)
	{
	}

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0x1534450", Offset = "0x1534450", VA = "0x1534450")]
	public void Preload(string resourceID, Action<string, GameObject> callback)
	{
	}

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0x1534564", Offset = "0x1534564", VA = "0x1534564")]
	public GameObject GetAsset(string id, bool preload = false)
	{
		return null;
	}

	[Token(Token = "0x6000F71")]
	[Address(RVA = "0x1534394", Offset = "0x1534394", VA = "0x1534394")]
	private bool LoadingQueueContainsResource(string resource)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F72")]
	[Address(RVA = "0x1534658", Offset = "0x1534658", VA = "0x1534658")]
	public void DestroyAsset(string resourceID)
	{
	}

	[Token(Token = "0x6000F73")]
	[Address(RVA = "0x153488C", Offset = "0x153488C", VA = "0x153488C")]
	public void DestroyAll()
	{
	}

	[Token(Token = "0x6000F74")]
	[Address(RVA = "0x1534938", Offset = "0x1534938", VA = "0x1534938")]
	public ResourcesFactory()
	{
	}
}
[Token(Token = "0x2000299")]
public class ScenesFactory : MonoBehaviour
{
	[Token(Token = "0x400154B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int currentLoadingID;

	[Token(Token = "0x400154C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AsyncOperation currentLoader;

	[Token(Token = "0x400154D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool loadingDone;

	[Token(Token = "0x400154E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<LoadingQueueElement> loadingQueue;

	[Token(Token = "0x1700019A")]
	public bool LoadingDone
	{
		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x14D8DB4", Offset = "0x14D8DB4", VA = "0x14D8DB4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000F76")]
	[Address(RVA = "0x14D8DBC", Offset = "0x14D8DBC", VA = "0x14D8DBC")]
	private AsyncOperation StartLoadingQueue()
	{
		return null;
	}

	[Token(Token = "0x6000F77")]
	[Address(RVA = "0x14D8E5C", Offset = "0x14D8E5C", VA = "0x14D8E5C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F78")]
	[Address(RVA = "0x14D8F28", Offset = "0x14D8F28", VA = "0x14D8F28")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0x14D8FF4", Offset = "0x14D8FF4", VA = "0x14D8FF4")]
	private void OnSceneLoaded(Scene s, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0x14D92B0", Offset = "0x14D92B0", VA = "0x14D92B0")]
	public void Preload(string sceneID, Action<string, GameObject> callback)
	{
	}

	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0x14D939C", Offset = "0x14D939C", VA = "0x14D939C")]
	private bool LoadingQueueContainsResource(string resource)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0x14D9458", Offset = "0x14D9458", VA = "0x14D9458")]
	public void UnloadScene(Scene s)
	{
	}

	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0x14D94C4", Offset = "0x14D94C4", VA = "0x14D94C4")]
	public ScenesFactory()
	{
	}
}
[Token(Token = "0x200029A")]
public class PrefabList : MonoBehaviour
{
	[Token(Token = "0x400154F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] prefabs;

	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0x15507B0", Offset = "0x15507B0", VA = "0x15507B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0x1550A24", Offset = "0x1550A24", VA = "0x1550A24")]
	public PrefabList()
	{
	}
}
[Token(Token = "0x200029B")]
public class PC_Only : MonoBehaviour
{
	[Token(Token = "0x6000F80")]
	[Address(RVA = "0x15E8054", Offset = "0x15E8054", VA = "0x15E8054")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F81")]
	[Address(RVA = "0x15E80C0", Offset = "0x15E80C0", VA = "0x15E80C0")]
	public PC_Only()
	{
	}
}
[Token(Token = "0x200029C")]
public class PC_scale : MonoBehaviour
{
	[Token(Token = "0x4001550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ScaleTo;

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0x15E80C8", Offset = "0x15E80C8", VA = "0x15E80C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0x15E8134", Offset = "0x15E8134", VA = "0x15E8134")]
	public PC_scale()
	{
	}
}
[Token(Token = "0x200029D")]
public class PFX_Officers : MonoBehaviour
{
	[Token(Token = "0x4001551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem MyPFX;

	[Token(Token = "0x4001552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem MyPFX_shoot;

	[Token(Token = "0x4001553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem.Particle[] p;

	[Token(Token = "0x4001554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Color ShootColor;

	[Token(Token = "0x4001555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int Rotation;

	[Token(Token = "0x4001556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float PercentHP;

	[Token(Token = "0x4001557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int[] angleOut;

	[Token(Token = "0x4001558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int[] angle;

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0x15E813C", Offset = "0x15E813C", VA = "0x15E813C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0x15E81A0", Offset = "0x15E81A0", VA = "0x15E81A0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0x15E8554", Offset = "0x15E8554", VA = "0x15E8554")]
	public PFX_Officers()
	{
	}
}
[Token(Token = "0x200029E")]
public class PickUp : MonoBehaviour
{
	[Token(Token = "0x4001559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ParticleSystem[] particleSystems;

	[Token(Token = "0x400155A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private MeshRenderer[] meshes;

	[Token(Token = "0x400155B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int Type;

	[Token(Token = "0x400155C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int Count;

	[Token(Token = "0x400155D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool spawnedFromLocation;

	[Token(Token = "0x400155E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<GameObject> lst_go;

	[Token(Token = "0x1700019B")]
	public static List<GameObject> list
	{
		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x15EF1B4", Offset = "0x15EF1B4", VA = "0x15EF1B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0x15EF218", Offset = "0x15EF218", VA = "0x15EF218")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0x15EF34C", Offset = "0x15EF34C", VA = "0x15EF34C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0x15EF430", Offset = "0x15EF430", VA = "0x15EF430")]
	public void DestroyParticleSystems()
	{
	}

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0x15EF524", Offset = "0x15EF524", VA = "0x15EF524")]
	public void DestroyParticleSystem(int i)
	{
	}

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0x15EF614", Offset = "0x15EF614", VA = "0x15EF614")]
	public void SetMeshesVisible(bool enabled)
	{
	}

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0x15EF690", Offset = "0x15EF690", VA = "0x15EF690")]
	public bool MeshesEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0x15EF6CC", Offset = "0x15EF6CC", VA = "0x15EF6CC")]
	public PickUp()
	{
	}
}
[Token(Token = "0x200029F")]
public class PirateAnimation : MonoBehaviour
{
	[Token(Token = "0x400155F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PirateAnimation singletone;

	[Token(Token = "0x4001560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float caseRotationZ;

	[Token(Token = "0x4001561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float caseRotationX;

	[Token(Token = "0x4001562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float caseRotationY;

	[Token(Token = "0x4001563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float headRotationX;

	[Token(Token = "0x4001564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float headRotationY;

	[Token(Token = "0x4001565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float headRotationZ;

	[Token(Token = "0x4001566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _caseRotationZ;

	[Token(Token = "0x4001567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float _caseRotationX;

	[Token(Token = "0x4001568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float _caseRotationY;

	[Token(Token = "0x4001569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float _headRotationX;

	[Token(Token = "0x400156A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float _headRotationY;

	[Token(Token = "0x400156B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float _headRotationZ;

	[Token(Token = "0x400156C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float ChangerBehav;

	[Token(Token = "0x400156D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform Case;

	[Token(Token = "0x400156E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform Head;

	[Token(Token = "0x400156F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public H_camera Camera;

	[Token(Token = "0x6000F91")]
	[Address(RVA = "0x15EFAD8", Offset = "0x15EFAD8", VA = "0x15EFAD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F92")]
	[Address(RVA = "0x15EFBA0", Offset = "0x15EFBA0", VA = "0x15EFBA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F93")]
	[Address(RVA = "0x15EFD5C", Offset = "0x15EFD5C", VA = "0x15EFD5C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F94")]
	[Address(RVA = "0x15F00A8", Offset = "0x15F00A8", VA = "0x15F00A8")]
	public PirateAnimation()
	{
	}
}
[Token(Token = "0x20002A0")]
public class PirateOnShip : MonoBehaviour
{
	[Token(Token = "0x4001570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float caseRotationZ;

	[Token(Token = "0x4001571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float caseRotationX;

	[Token(Token = "0x4001572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float caseRotationY;

	[Token(Token = "0x4001573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float headRotationX;

	[Token(Token = "0x4001574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float headRotationY;

	[Token(Token = "0x4001575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float headRotationZ;

	[Token(Token = "0x4001576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _caseRotationZ;

	[Token(Token = "0x4001577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float _caseRotationX;

	[Token(Token = "0x4001578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float _caseRotationY;

	[Token(Token = "0x4001579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float _headRotationX;

	[Token(Token = "0x400157A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float _headRotationY;

	[Token(Token = "0x400157B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float _headRotationZ;

	[Token(Token = "0x400157C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float ChangerBehav;

	[Token(Token = "0x400157D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform Case;

	[Token(Token = "0x400157E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform Head;

	[Token(Token = "0x6000F95")]
	[Address(RVA = "0x15F0144", Offset = "0x15F0144", VA = "0x15F0144")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F96")]
	[Address(RVA = "0x15F0490", Offset = "0x15F0490", VA = "0x15F0490")]
	public PirateOnShip()
	{
	}
}
[Token(Token = "0x20002A1")]
public class PlayFromDst : MonoBehaviour
{
	[Token(Token = "0x6000F97")]
	[Address(RVA = "0x154A674", Offset = "0x154A674", VA = "0x154A674")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F98")]
	[Address(RVA = "0x154A7D8", Offset = "0x154A7D8", VA = "0x154A7D8")]
	public PlayFromDst()
	{
	}
}
[Token(Token = "0x20002A2")]
public class PointOnMap : MonoBehaviour
{
	[Token(Token = "0x400157F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool Inited;

	[Token(Token = "0x4001580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EE40", Offset = "0x57EE40")]
	private NewEvent <MyEvent>k__BackingField;

	[Token(Token = "0x4001581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int MyCMDindex;

	[Token(Token = "0x4001582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject ClickHighlight;

	[Token(Token = "0x4001583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject MapHighlight;

	[Token(Token = "0x4001584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Collider MyCollision;

	[Token(Token = "0x4001585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector2 mypos;

	[Token(Token = "0x4001586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool ClickedTown;

	[Token(Token = "0x4001587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SpriteRenderer spriteRenderer;

	[Token(Token = "0x4001588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private MapHider[] nearFogsOfWar;

	[Token(Token = "0x4001589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool collidedWithShip;

	[Token(Token = "0x1700019C")]
	public NewEvent MyEvent
	{
		[Token(Token = "0x6000F99")]
		[Address(RVA = "0x154B094", Offset = "0x154B094", VA = "0x154B094")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58AEDC", Offset = "0x58AEDC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0x154B09C", Offset = "0x154B09C", VA = "0x154B09C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58AEEC", Offset = "0x58AEEC")]
		set
		{
		}
	}

	[Token(Token = "0x1700019D")]
	public bool IsTown
	{
		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0x154B0A4", Offset = "0x154B0A4", VA = "0x154B0A4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000F9C")]
	[Address(RVA = "0x154B138", Offset = "0x154B138", VA = "0x154B138")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0x154B19C", Offset = "0x154B19C", VA = "0x154B19C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0x154B1A0", Offset = "0x154B1A0", VA = "0x154B1A0")]
	public void Init()
	{
	}

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0x154B278", Offset = "0x154B278", VA = "0x154B278")]
	public void Enter()
	{
	}

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0x154B890", Offset = "0x154B890", VA = "0x154B890")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0x154B8C8", Offset = "0x154B8C8", VA = "0x154B8C8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0x154B8CC", Offset = "0x154B8CC", VA = "0x154B8CC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0x154BBF0", Offset = "0x154BBF0", VA = "0x154BBF0")]
	public PointOnMap()
	{
	}

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0x154BC04", Offset = "0x154BC04", VA = "0x154BC04")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58AEFC", Offset = "0x58AEFC")]
	private void <Enter>b__19_0()
	{
	}
}
[Token(Token = "0x20002A3")]
public class Position_fallow : MonoBehaviour
{
	[Token(Token = "0x400158A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform align_to;

	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0x154D570", Offset = "0x154D570", VA = "0x154D570")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0x154D574", Offset = "0x154D574", VA = "0x154D574")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0x154D5C0", Offset = "0x154D5C0", VA = "0x154D5C0")]
	public Position_fallow()
	{
	}
}
[Token(Token = "0x20002A4")]
public class PredlogItem : MonoBehaviour
{
	[Token(Token = "0x400158B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int MyIndex_Slot;

	[Token(Token = "0x400158C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int MyIndex_Item;

	[Token(Token = "0x400158D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Tovar CURRENT;

	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0x154FADC", Offset = "0x154FADC", VA = "0x154FADC")]
	public void ClickOnMe()
	{
	}

	[Token(Token = "0x6000FAA")]
	[Address(RVA = "0x155062C", Offset = "0x155062C", VA = "0x155062C")]
	public PredlogItem()
	{
	}
}
[Token(Token = "0x20002A5")]
public class PredlogOnDisable : MonoBehaviour
{
	[Token(Token = "0x6000FAB")]
	[Address(RVA = "0x155063C", Offset = "0x155063C", VA = "0x155063C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FAC")]
	[Address(RVA = "0x1550640", Offset = "0x1550640", VA = "0x1550640")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FAD")]
	[Address(RVA = "0x15507A8", Offset = "0x15507A8", VA = "0x15507A8")]
	public PredlogOnDisable()
	{
	}
}
[Token(Token = "0x20002A6")]
public class ParticleSystemLoop : MonoBehaviour
{
	[Token(Token = "0x400158E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float intervalMin;

	[Token(Token = "0x400158F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float intervalMax;

	[Token(Token = "0x4001590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float timer;

	[Token(Token = "0x4001591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem ps;

	[Token(Token = "0x6000FAE")]
	[Address(RVA = "0x15EA04C", Offset = "0x15EA04C", VA = "0x15EA04C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FAF")]
	[Address(RVA = "0x15EA128", Offset = "0x15EA128", VA = "0x15EA128")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FB0")]
	[Address(RVA = "0x15EA1F8", Offset = "0x15EA1F8", VA = "0x15EA1F8")]
	public ParticleSystemLoop()
	{
	}
}
[Token(Token = "0x20002A7")]
public class Playground : MonoBehaviour
{
	[Token(Token = "0x6000FB1")]
	[Address(RVA = "0x154AF9C", Offset = "0x154AF9C", VA = "0x154AF9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0x154B08C", Offset = "0x154B08C", VA = "0x154B08C")]
	public Playground()
	{
	}
}
[Token(Token = "0x20002A8")]
public class CanvasZoom : MonoBehaviour
{
	[Token(Token = "0x4001592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CanvasZoom singletone;

	[Token(Token = "0x4001593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject CanvasZoomGraphics;

	[Token(Token = "0x4001594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera CameraUI;

	[Token(Token = "0x4001595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float zoomOutMin;

	[Token(Token = "0x4001596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float zoomOutMax;

	[Token(Token = "0x4001597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float hideTimeout;

	[Token(Token = "0x6000FB3")]
	[Address(RVA = "0x8506F0", Offset = "0x8506F0", VA = "0x8506F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FB4")]
	[Address(RVA = "0x850764", Offset = "0x850764", VA = "0x850764")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FB5")]
	[Address(RVA = "0x850768", Offset = "0x850768", VA = "0x850768")]
	private void zoom(float increment)
	{
	}

	[Token(Token = "0x6000FB6")]
	[Address(RVA = "0x850C08", Offset = "0x850C08", VA = "0x850C08")]
	public CanvasZoom()
	{
	}
}
[Token(Token = "0x20002A9")]
public class TrophyManager : MonoBehaviour
{
	[Token(Token = "0x6000FB8")]
	[Address(RVA = "0x158E11C", Offset = "0x158E11C", VA = "0x158E11C")]
	public TrophyManager()
	{
	}
}
[Token(Token = "0x20002AA")]
public class Purchaser : MonoBehaviour
{
	[Token(Token = "0x20002AB")]
	public enum IAPModes
	{
		[Token(Token = "0x400159E")]
		None,
		[Token(Token = "0x400159F")]
		F2P,
		[Token(Token = "0x40015A0")]
		Premium
	}

	[Token(Token = "0x4001598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string purchaserPrefab;

	[Token(Token = "0x4001599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Purchaser instance;

	[Token(Token = "0x400159A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private IAPMobileDlcOfferButton dlc1OfferButtonPrefab;

	[Token(Token = "0x400159B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private IAPMobileDlcOfferButton dlc3OfferButtonPrefab;

	[Token(Token = "0x400159C")]
	public const string MobileDLC1SaveId = "chptd1";

	[Token(Token = "0x1700019E")]
	public static Purchaser Instance
	{
		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x1551270", Offset = "0x1551270", VA = "0x1551270")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000FBA")]
	[Address(RVA = "0x1551428", Offset = "0x1551428", VA = "0x1551428")]
	public Purchaser()
	{
	}
}
[Token(Token = "0x20002AC")]
public class QWEST_window : MonoBehaviour
{
	[Token(Token = "0x40015A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public static bool cheatUnlockAcademyQuests;

	[Token(Token = "0x40015A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static QWEST_window singletone;

	[Token(Token = "0x40015A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject MyWindow;

	[Token(Token = "0x40015A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Frac_describe;

	[Token(Token = "0x40015A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Frac_specialization;

	[Token(Token = "0x40015A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image FlagOnTop;

	[Token(Token = "0x40015A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text ReputatoionText;

	[Token(Token = "0x40015A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text ReputatoionPoints;

	[Token(Token = "0x40015A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Slider ReputatoionBar;

	[Token(Token = "0x40015AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text[] qwests_titles;

	[Token(Token = "0x40015AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Button[] qwests_buttons;

	[Token(Token = "0x40015AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text[] qwests_available;

	[Token(Token = "0x40015AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public RectTransform Fraction_spec_panel;

	[Token(Token = "0x40015AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject[] Fraction_spec_button;

	[Token(Token = "0x40015AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject OrdenDLC;

	[Token(Token = "0x40015B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject FRAC_reputation_FLAG;

	[Token(Token = "0x40015B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject FRAC_reputation_Shadow;

	[Token(Token = "0x40015B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Sprite fraction_spec_button_mobile_img;

	[Token(Token = "0x40015B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private HelpContentData HelpData;

	[Token(Token = "0x40015B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private HelpContentData HelpDataSpecial;

	[Token(Token = "0x40015B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private AdvertisingTimer adTimerPrefab;

	[Token(Token = "0x40015B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Vector2 fracTextBigSize;

	[Token(Token = "0x40015B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector2 fracTextSmallSize;

	[Token(Token = "0x40015B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 fracSpecializationPos;

	[Token(Token = "0x40015B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Slider Artef_energy;

	[Token(Token = "0x40015BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Text Bank_output;

	[Token(Token = "0x40015BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int fraction;

	[Token(Token = "0x40015BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private RectTransform RT;

	[Token(Token = "0x40015BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private RectTransform RTtext;

	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0x15514B0", Offset = "0x15514B0", VA = "0x15514B0")]
	public void InitForFreeVersion()
	{
	}

	[Token(Token = "0x6000FBD")]
	[Address(RVA = "0x15514B4", Offset = "0x15514B4", VA = "0x15514B4")]
	public void Run_QWEST(int Number)
	{
	}

	[Token(Token = "0x6000FBE")]
	[Address(RVA = "0x1551A98", Offset = "0x1551A98", VA = "0x1551A98")]
	public void CALL_SPEC(int func)
	{
	}

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0x1554044", Offset = "0x1554044", VA = "0x1554044")]
	public void CallWindow()
	{
	}

	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0x1555C8C", Offset = "0x1555C8C", VA = "0x1555C8C")]
	private void LoadSpecialTown(bool isOurTown)
	{
	}

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0x1556BD8", Offset = "0x1556BD8", VA = "0x1556BD8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0x1556CE4", Offset = "0x1556CE4", VA = "0x1556CE4")]
	public void Update()
	{
	}

	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0x1556E2C", Offset = "0x1556E2C", VA = "0x1556E2C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0x1556FE8", Offset = "0x1556FE8", VA = "0x1556FE8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0x1557174", Offset = "0x1557174", VA = "0x1557174")]
	private void OnLanguageChanged()
	{
	}

	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0x15584F8", Offset = "0x15584F8", VA = "0x15584F8")]
	private CMD GetQuestCMD(NewEvent event_)
	{
		return null;
	}

	[Token(Token = "0x6000FC7")]
	[Address(RVA = "0x1556BA4", Offset = "0x1556BA4", VA = "0x1556BA4")]
	private bool IsTutorialQuestIsAvailable(NewEvent event_prev)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FC8")]
	[Address(RVA = "0x15585D8", Offset = "0x15585D8", VA = "0x15585D8")]
	public QWEST_window()
	{
	}
}
[Token(Token = "0x20002AD")]
public class RailHolder : MonoBehaviour
{
	[Token(Token = "0x40015BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject exitMessage;

	[Token(Token = "0x40015BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text messageElement;

	[Token(Token = "0x6000FCA")]
	[Address(RVA = "0x155CBF8", Offset = "0x155CBF8", VA = "0x155CBF8")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000FCB")]
	[Address(RVA = "0x155CC64", Offset = "0x155CC64", VA = "0x155CC64")]
	public RailHolder()
	{
	}
}
[Token(Token = "0x20002AE")]
public class RebuildMainMenu : MonoBehaviour
{
	[Token(Token = "0x40015C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform HeaderObject;

	[Token(Token = "0x40015C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform ResumeButton;

	[Token(Token = "0x40015C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RectTransform SettingDecor;

	[Token(Token = "0x40015C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RectTransform SettingButton;

	[Token(Token = "0x40015C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RectTransform AchievesDecor;

	[Token(Token = "0x40015C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform AchievesButton;

	[Token(Token = "0x40015C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RectTransform ProfileDecor;

	[Token(Token = "0x40015C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public RectTransform ProfileButton;

	[Token(Token = "0x40015C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RectTransform SaveButton;

	[Token(Token = "0x40015C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RectTransform CreditDecor;

	[Token(Token = "0x40015CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public RectTransform CreditButton;

	[Token(Token = "0x40015CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RectTransform BottomObject;

	[Token(Token = "0x40015CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector2 NewHeaderPos;

	[Token(Token = "0x40015CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector2 NewBottomPos;

	[Token(Token = "0x40015CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector2 OldSettingButton;

	[Token(Token = "0x40015CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool oldSbuttonInited;

	[Token(Token = "0x40015D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool multisave;

	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0x1532150", Offset = "0x1532150", VA = "0x1532150")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0x1532534", Offset = "0x1532534", VA = "0x1532534")]
	public RebuildMainMenu()
	{
	}
}
[Token(Token = "0x20002AF")]
public class BasicSails : SailsController
{
	[Token(Token = "0x40015D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer ParusesModel;

	[Token(Token = "0x40015D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer ParusesModelCloth;

	[Token(Token = "0x1700019F")]
	public Renderer ParusesRenderer
	{
		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0x7E6D44", Offset = "0x7E6D44", VA = "0x7E6D44")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0x7E6D4C", Offset = "0x7E6D4C", VA = "0x7E6D4C", Slot = "4")]
	public override void SetSails(float yOffset)
	{
	}

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0x7E6E80", Offset = "0x7E6E80", VA = "0x7E6E80")]
	public BasicSails()
	{
	}
}
[Token(Token = "0x20002B0")]
public class JunkSails : SailsController
{
	[Token(Token = "0x40015D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform[] ParusJunk;

	[Token(Token = "0x40015D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform[] ParusJunkFinPos;

	[Token(Token = "0x40015D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform[] ParusJunkStartPos;

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0x1516F9C", Offset = "0x1516F9C", VA = "0x1516F9C", Slot = "4")]
	public override void SetSails(float shipSpeed)
	{
	}

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0x1517220", Offset = "0x1517220", VA = "0x1517220")]
	public JunkSails()
	{
	}
}
[Token(Token = "0x20002B1")]
public abstract class SailsController : MonoBehaviour
{
	[Token(Token = "0x6000FD4")]
	public abstract void SetSails(float value);

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0x1535A1C", Offset = "0x1535A1C", VA = "0x1535A1C")]
	protected SailsController()
	{
	}
}
[Token(Token = "0x20002B2")]
public class Sails_GrimReaper : SailsController
{
	[Token(Token = "0x20002B3")]
	private enum ShipSpeed
	{
		[Token(Token = "0x40015DC")]
		None,
		[Token(Token = "0x40015DD")]
		Stop,
		[Token(Token = "0x40015DE")]
		Half,
		[Token(Token = "0x40015DF")]
		Full
	}

	[Token(Token = "0x40015D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Ship ship;

	[Token(Token = "0x40015D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Rank13Ship shipSails;

	[Token(Token = "0x40015D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject parusesHightLight;

	[Token(Token = "0x40015D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ShipSpeed shipSpeed;

	[Token(Token = "0x40015DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 windAcceleretion;

	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0x1535A24", Offset = "0x1535A24", VA = "0x1535A24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0x1535E08", Offset = "0x1535E08", VA = "0x1535E08", Slot = "4")]
	public override void SetSails(float value)
	{
	}

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0x1535F50", Offset = "0x1535F50", VA = "0x1535F50")]
	public Sails_GrimReaper()
	{
	}
}
[Token(Token = "0x20002B4")]
public class SavesWindow : MonoBehaviour
{
	[Token(Token = "0x20002B5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578D64", Offset = "0x578D64")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject button;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SavesWindow <>4__this;

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x1580340", Offset = "0x1580340", VA = "0x1580340")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x1580348", Offset = "0x1580348", VA = "0x1580348")]
		internal void <UpdateItems>b__0()
		{
		}
	}

	[Token(Token = "0x20002B6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578D74", Offset = "0x578D74")]
	private sealed class <GlobalLoadEnumerator>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool reset;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SavesWindow <>4__this;

		[Token(Token = "0x170001A0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FED")]
			[Address(RVA = "0x1580900", Offset = "0x1580900", VA = "0x1580900", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FEF")]
			[Address(RVA = "0x1580948", Offset = "0x1580948", VA = "0x1580948", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x15803E4", Offset = "0x15803E4", VA = "0x15803E4")]
		[DebuggerHidden]
		public <GlobalLoadEnumerator>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x1580410", Offset = "0x1580410", VA = "0x1580410", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x1580414", Offset = "0x1580414", VA = "0x1580414", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x1580908", Offset = "0x1580908", VA = "0x1580908", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002B7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578D84", Offset = "0x578D84")]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Button b;

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SavesWindow <>4__this;

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x15803B4", Offset = "0x15803B4", VA = "0x15803B4")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x15803BC", Offset = "0x15803BC", VA = "0x15803BC")]
		internal void <CreateNewSave>b__1()
		{
		}
	}

	[Token(Token = "0x40015E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SavesWindow singletone;

	[Token(Token = "0x40015E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string saveIndex;

	[Token(Token = "0x40015E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int saveAmount;

	[Token(Token = "0x40015E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject SavesList;

	[Token(Token = "0x40015E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject SaveButton;

	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0x14D5C74", Offset = "0x14D5C74", VA = "0x14D5C74")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0x14D6CC8", Offset = "0x14D6CC8", VA = "0x14D6CC8")]
	public void CenterToItem(RectTransform obj)
	{
	}

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0x14D6EE0", Offset = "0x14D6EE0", VA = "0x14D6EE0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0x14D7A88", Offset = "0x14D7A88", VA = "0x14D7A88")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0x14D7C14", Offset = "0x14D7C14", VA = "0x14D7C14")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0x14D5D5C", Offset = "0x14D5D5C", VA = "0x14D5D5C")]
	public void UpdateItems(bool instantiate)
	{
	}

	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0x14D7C88", Offset = "0x14D7C88", VA = "0x14D7C88")]
	public void Load(Button but)
	{
	}

	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0x14D822C", Offset = "0x14D822C", VA = "0x14D822C")]
	public void GlobalLoad(bool reset)
	{
	}

	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0x14D825C", Offset = "0x14D825C", VA = "0x14D825C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58AF0C", Offset = "0x58AF0C")]
	private IEnumerator GlobalLoadEnumerator(bool reset)
	{
		return null;
	}

	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0x14D82E8", Offset = "0x14D82E8", VA = "0x14D82E8")]
	public void MAP_LOAD()
	{
	}

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0x14D7350", Offset = "0x14D7350", VA = "0x14D7350")]
	public void CreateNewSave()
	{
	}

	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0x14D86A4", Offset = "0x14D86A4", VA = "0x14D86A4")]
	public SavesWindow()
	{
	}

	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0x14D872C", Offset = "0x14D872C", VA = "0x14D872C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58AF74", Offset = "0x58AF74")]
	private void <Load>b__11_0()
	{
	}

	[Token(Token = "0x6000FE7")]
	[Address(RVA = "0x14D8804", Offset = "0x14D8804", VA = "0x14D8804")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58AF84", Offset = "0x58AF84")]
	private void <CreateNewSave>b__15_0()
	{
	}
}
[Token(Token = "0x20002B8")]
public sealed class WaitForRealSeconds : CustomYieldInstruction
{
	[Token(Token = "0x40015ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly float _endTime;

	[Token(Token = "0x170001A2")]
	public override bool keepWaiting
	{
		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x15C04C4", Offset = "0x15C04C4", VA = "0x15C04C4", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000FF3")]
	[Address(RVA = "0x15C04F0", Offset = "0x15C04F0", VA = "0x15C04F0")]
	public WaitForRealSeconds(float seconds)
	{
	}
}
[Token(Token = "0x20002B9")]
public class SeaHeightGrid : MonoBehaviour
{
	[Token(Token = "0x40015EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject boxpref;

	[Token(Token = "0x40015EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool GENERATOR_MODE;

	[Token(Token = "0x40015F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float[] HEIGHT_NEW;

	[Token(Token = "0x40015F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float[] HEIGHT80;

	[Token(Token = "0x40015F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SeaHeightGrid singletone;

	[Token(Token = "0x6000FF4")]
	[Address(RVA = "0x14DAAC4", Offset = "0x14DAAC4", VA = "0x14DAAC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FF5")]
	[Address(RVA = "0x14DADD8", Offset = "0x14DADD8", VA = "0x14DADD8")]
	public SeaHeightGrid()
	{
	}
}
[Token(Token = "0x20002BA")]
public class Sea_reflector : MonoBehaviour
{
	[Token(Token = "0x40015F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ReflectionProbe me;

	[Token(Token = "0x6000FF6")]
	[Address(RVA = "0x14DADE0", Offset = "0x14DADE0", VA = "0x14DADE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FF7")]
	[Address(RVA = "0x14DADE4", Offset = "0x14DADE4", VA = "0x14DADE4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000FF8")]
	[Address(RVA = "0x14DAEAC", Offset = "0x14DAEAC", VA = "0x14DAEAC")]
	public Sea_reflector()
	{
	}
}
[Token(Token = "0x20002BB")]
public class Services_Repair : MonoBehaviour
{
	[Token(Token = "0x40015F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Services_Repair singletone;

	[Token(Token = "0x40015F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Repair_Prem;

	[Token(Token = "0x40015F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Repair;

	[Token(Token = "0x40015F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Pricing_Perc;

	[Token(Token = "0x40015F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text Pricing_Piastr;

	[Token(Token = "0x40015F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Slider RepairVal;

	[Token(Token = "0x40015FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EF70", Offset = "0x57EF70")]
	private int_z <RepairPrice>k__BackingField;

	[Token(Token = "0x170001A3")]
	public int_z RepairPrice
	{
		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x14DB834", Offset = "0x14DB834", VA = "0x14DB834")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58AFE4", Offset = "0x58AFE4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x14DB83C", Offset = "0x14DB83C", VA = "0x14DB83C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58AFF4", Offset = "0x58AFF4")]
		private set
		{
		}
	}

	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0x14DB844", Offset = "0x14DB844", VA = "0x14DB844")]
	public void ProgerssbarChanging()
	{
	}

	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0x14DBC98", Offset = "0x14DBC98", VA = "0x14DBC98")]
	public void Repair_Act_Btn()
	{
	}

	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0x14DC824", Offset = "0x14DC824", VA = "0x14DC824")]
	public void Repair_PREM_Act_Btn()
	{
	}

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0x14DC99C", Offset = "0x14DC99C", VA = "0x14DC99C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0x14DC9F8", Offset = "0x14DC9F8", VA = "0x14DC9F8")]
	public Services_Repair()
	{
	}
}
[Token(Token = "0x20002BC")]
public class Ship : MonoBehaviour
{
	[Token(Token = "0x20002BD")]
	public enum ViewType
	{
		[Token(Token = "0x4001704")]
		Zoom = -1,
		[Token(Token = "0x4001705")]
		Default,
		[Token(Token = "0x4001706")]
		FirstPerson,
		[Token(Token = "0x4001707")]
		Boarding,
		[Token(Token = "0x4001708")]
		CaptainSkills
	}

	[Token(Token = "0x20002BE")]
	public enum VibroCase
	{
		[Token(Token = "0x400170A")]
		GetDamage
	}

	[Token(Token = "0x20002BF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578D94", Offset = "0x578D94")]
	private sealed class <ClearPatchPFX>d__133 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Ship <>4__this;

		[Token(Token = "0x170001B1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001058")]
			[Address(RVA = "0x1581704", Offset = "0x1581704", VA = "0x1581704", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600105A")]
			[Address(RVA = "0x158174C", Offset = "0x158174C", VA = "0x158174C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0x15814A8", Offset = "0x15814A8", VA = "0x15814A8")]
		[DebuggerHidden]
		public <ClearPatchPFX>d__133(int <>1__state)
		{
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0x15814D4", Offset = "0x15814D4", VA = "0x15814D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0x15814D8", Offset = "0x15814D8", VA = "0x15814D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0x158170C", Offset = "0x158170C", VA = "0x158170C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578DA4", Offset = "0x578DA4")]
	private sealed class <>c__DisplayClass169_0
	{
		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject telegr;

		[Token(Token = "0x600105B")]
		[Address(RVA = "0x1581114", Offset = "0x1581114", VA = "0x1581114")]
		public <>c__DisplayClass169_0()
		{
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0x158111C", Offset = "0x158111C", VA = "0x158111C")]
		internal void <RunArtefact>b__0()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002C1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578DB4", Offset = "0x578DB4")]
	private sealed class <>c
	{
		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Converter<Collider, GameObject> <>9__337_0;

		[Token(Token = "0x600105E")]
		[Address(RVA = "0x15810F0", Offset = "0x15810F0", VA = "0x15810F0")]
		public <>c()
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0x15810F8", Offset = "0x15810F8", VA = "0x15810F8")]
		internal GameObject <Awake>b__337_0(Collider item)
		{
			return null;
		}
	}

	[Token(Token = "0x20002C2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578DC4", Offset = "0x578DC4")]
	private sealed class <>c__DisplayClass340_0
	{
		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Ship <>4__this;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer relationsRenderer;

		[Token(Token = "0x6001060")]
		[Address(RVA = "0x15812A0", Offset = "0x15812A0", VA = "0x15812A0")]
		public <>c__DisplayClass340_0()
		{
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0x15812A8", Offset = "0x15812A8", VA = "0x15812A8")]
		internal void <SetAllayOrEnemyView>b__0()
		{
		}
	}

	[Token(Token = "0x40015FB")]
	public const float MOVEMENT_SMOOTH_SPEED = 4f;

	[Token(Token = "0x40015FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PolygonCollider boardingCollider;

	[Token(Token = "0x40015FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool wasCountedInQuests;

	[Token(Token = "0x40015FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool _inMapTown;

	[Token(Token = "0x40015FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SailsController sailsController;

	[Token(Token = "0x4001600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody shipRigid;

	[Token(Token = "0x4001601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isZombieCrew;

	[Token(Token = "0x4001602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform[] ParusJunk;

	[Token(Token = "0x4001603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform[] ParusJunkFinPos;

	[Token(Token = "0x4001604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] ParusJunkStartPos;

	[Token(Token = "0x4001605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private WindDirection windDirection;

	[Token(Token = "0x4001606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<CanonBall> canonBallsLeft;

	[Token(Token = "0x4001607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<CanonBall> canonBallsRight;

	[Token(Token = "0x4001608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool _wasDestroyed;

	[Token(Token = "0x4001609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject[] DamagesDeck;

	[Token(Token = "0x400160A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float BlockRam;

	[Token(Token = "0x400160B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int ArtefUseCount;

	[Token(Token = "0x400160C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject[] LootChests;

	[Token(Token = "0x400160D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Renderer[] PaintParts;

	[Token(Token = "0x400160E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Renderer Deck;

	[Token(Token = "0x400160F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform BoardingSizer;

	[Token(Token = "0x4001610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float AntibugTimer;

	[Token(Token = "0x4001611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform CrewSpounPoints;

	[Token(Token = "0x4001612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public int CaseIndex;

	[Token(Token = "0x4001613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject[] WithCollisionsOrRigid;

	[Token(Token = "0x4001614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public TextMesh[] Compass;

	[Token(Token = "0x4001615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Transform MapFP;

	[Token(Token = "0x4001616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float ShowHide;

	[Token(Token = "0x4001617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform MapPointFP;

	[Token(Token = "0x4001618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EFB0", Offset = "0x57EFB0")]
	private float <Speed>k__BackingField;

	[Token(Token = "0x4001619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float smoothMID;

	[Token(Token = "0x400161A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject CaseLOD;

	[Token(Token = "0x400161B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject CaseDET;

	[Token(Token = "0x400161C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject CaseDET_Macht;

	[Token(Token = "0x400161D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject BoardingArea1;

	[Token(Token = "0x400161E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject BoardingArea2;

	[Token(Token = "0x400161F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public bool BoardedOnce;

	[Token(Token = "0x4001620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private int initialFracIndex;

	[Token(Token = "0x4001621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Ship lastLeftTarget;

	[Token(Token = "0x4001622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Ship lastRightTarget;

	[Token(Token = "0x4001623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private int myLastTargetZoneLeft;

	[Token(Token = "0x4001624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private int myLastTargetZoneRight;

	[Token(Token = "0x4001625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private bool AllowOffixerSprite;

	[Token(Token = "0x4001626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EFC0", Offset = "0x57EFC0")]
	private bool <AlwaysShowFullSails>k__BackingField;

	[Token(Token = "0x4001627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13A")]
	public bool IsQwest;

	[Token(Token = "0x4001628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject PirateOnShip;

	[Token(Token = "0x4001629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Transform[] Canons;

	[Token(Token = "0x400162A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float[] Otbros;

	[Token(Token = "0x400162B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Transform[] ShootPoint;

	[Token(Token = "0x400162C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Transform FirstPersonCampos;

	[Token(Token = "0x400162D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Transform FirstPersonCamposForVR;

	[Token(Token = "0x400162E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Transform FirstPersonCamposForVRWithOffset;

	[Token(Token = "0x400162F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Transform Wheel;

	[Token(Token = "0x4001630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public bool[] LootSolver;

	[Token(Token = "0x4001631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Camera[] LeftRightDamageCamera;

	[Token(Token = "0x4001632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public bool Spoted_weak_areas;

	[Token(Token = "0x4001633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EFD0", Offset = "0x57EFD0")]
	private NewEvent <InitedFromHere>k__BackingField;

	[Token(Token = "0x4001634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57EFE0", Offset = "0x57EFE0")]
	public bool maximumMorale;

	[Token(Token = "0x4001635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A1")]
	public bool LockSetDecor;

	[Token(Token = "0x4001636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObject[] Decor_NOSE;

	[Token(Token = "0x4001637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject[] Decor_BORT;

	[Token(Token = "0x4001638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public GameObject[] Decor_AURA;

	[Token(Token = "0x4001639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public GameObject[] Decor_WATR;

	[Token(Token = "0x400163A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public GameObject[] Decor_PTCH;

	[Token(Token = "0x400163B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public bool debuf_C_reload;

	[Token(Token = "0x400163C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D1")]
	public bool debuf_P_slow;

	[Token(Token = "0x400163D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D2")]
	public bool debuf_P_freez;

	[Token(Token = "0x400163E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public string Sys_config;

	[Token(Token = "0x400163F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public ShipParams ParamsLink;

	[Token(Token = "0x4001640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public float ZoomInfoRevelation;

	[Token(Token = "0x4001641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public Telegraph Telegraph_LEFT;

	[Token(Token = "0x4001642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public Telegraph Telegraph_RIGHT;

	[Token(Token = "0x4001643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public float PrecissionTime_LEFT;

	[Token(Token = "0x4001644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	public float PrecissionTime_RIGHT;

	[Token(Token = "0x4001645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public bool ESC_SURREND;

	[Token(Token = "0x4001646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	public float AI_surrender_value;

	[Token(Token = "0x4001647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public float AI_surrender_value_team;

	[Token(Token = "0x4001648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public GameObject CameraOffsetGO;

	[Token(Token = "0x4001649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public GameObject MyMarker;

	[Token(Token = "0x400164A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private float MarkerOffset;

	[Token(Token = "0x400164B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	private float MarkerFactor;

	[Token(Token = "0x400164C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public Text MyMarkerLabel;

	[Token(Token = "0x400164D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private bool shown_main;

	[Token(Token = "0x400164E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x239")]
	private bool shown_left;

	[Token(Token = "0x400164F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23A")]
	private bool shown_right;

	[Token(Token = "0x4001650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	private float AutoScanTimer;

	[Token(Token = "0x4001651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private float AlarmSygnal_L_2sec;

	[Token(Token = "0x4001652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
	private float AlarmSygnal_R_2sec;

	[Token(Token = "0x4001653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public Ship lastHitedBy;

	[Token(Token = "0x4001654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float positionAround;

	[Token(Token = "0x4001655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private float mypositionAround;

	[Token(Token = "0x4001656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public Loot LootLink;

	[Token(Token = "0x4001657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	[HideInInspector]
	public bool lockOnTarget;

	[Token(Token = "0x4001658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public Ship NearestEnemyShip;

	[Token(Token = "0x4001659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public float NearestEnemyShip_dst;

	[Token(Token = "0x400165A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
	private float ArtefUseTimer;

	[Token(Token = "0x400165B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private int ArtefUse;

	[Token(Token = "0x400165C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	private int Artef_Wait;

	[Token(Token = "0x400165D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public int ArtefactsLimit;

	[Token(Token = "0x400165E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public int[] ArtefactOnBoard;

	[Token(Token = "0x400165F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private int[] WasArtefactOnBoard;

	[Token(Token = "0x4001660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public Tovar[] ArtefactTovar;

	[Token(Token = "0x4001661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private bool[] Artefact_ON_pfx;

	[Token(Token = "0x4001662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private float Artef_01_period;

	[Token(Token = "0x4001663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
	public float Artef_Shld;

	[Token(Token = "0x4001664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public float Artef_Heal;

	[Token(Token = "0x4001665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
	public float Artef_Reload;

	[Token(Token = "0x4001666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public float Artef_Octo;

	[Token(Token = "0x4001667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
	public float Artef_OctoKraken;

	[Token(Token = "0x4001668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public float Artef_Meteor;

	[Token(Token = "0x4001669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
	public float Artef_Flash;

	[Token(Token = "0x400166A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public float Artef_speedUP;

	[Token(Token = "0x400166B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
	public float Artef_Flamethrow;

	[Token(Token = "0x400166C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public float Artef_magnetto;

	[Token(Token = "0x400166D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
	public float Artef_Rotor;

	[Token(Token = "0x400166E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public float Artef_Freez;

	[Token(Token = "0x400166F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
	public float Artef_Poison;

	[Token(Token = "0x4001670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public Transform MagnCache;

	[Token(Token = "0x4001671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public Ship FlameThisShip;

	[Token(Token = "0x4001672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public Transform FlameCache;

	[Token(Token = "0x4001673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	public H_AnimRotation PropellerCache;

	[Token(Token = "0x4001674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	private FxTexTrans MyHealer;

	[Token(Token = "0x4001675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	private FxTexTrans MyReload;

	[Token(Token = "0x4001676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	private AudioSource MyHealerSFX;

	[Token(Token = "0x4001677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public Octopus OctoOnMe;

	[Token(Token = "0x4001678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	private bool OneByOne;

	[Token(Token = "0x4001679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	public GameObject[] ArtefactGO;

	[Token(Token = "0x400167A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	public Vector2[] bounce;

	[Token(Token = "0x400167B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	private float[] height;

	[Token(Token = "0x400167C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	private bool AlreadyLooted;

	[Token(Token = "0x400167D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool isDisabledWindChanging;

	[Token(Token = "0x400167E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
	public static bool isSearchAreaIncreased;

	[Token(Token = "0x400167F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	private Transform MyTransform;

	[Token(Token = "0x4001680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	public Transform MyVisualTransform;

	[Token(Token = "0x4001681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	public Transform MyNewVisualTransform;

	[Token(Token = "0x4001682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	public AudioSource MyFireSound;

	[Token(Token = "0x4001683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	public bool IsTower;

	[Token(Token = "0x4001684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x369")]
	public bool AutoSyncHPwhenStaticObject;

	[Token(Token = "0x4001685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	public Mesh Damaged_Tower;

	[Token(Token = "0x4001686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	private float Waves;

	[Token(Token = "0x4001687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37C")]
	private float WavesSpeedIndivid;

	[Token(Token = "0x4001688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int Num;

	[Token(Token = "0x4001689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	public bool FireOnShip;

	[Token(Token = "0x400168A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x381")]
	private bool IsFireOnShip;

	[Token(Token = "0x400168B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x384")]
	private float FireFreq;

	[Token(Token = "0x400168C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	private float WindFreq;

	[Token(Token = "0x400168D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38C")]
	public int UnfireInt;

	[Token(Token = "0x400168E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	public float UnfireAuto;

	[Token(Token = "0x400168F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	public Material[] ParusesDamage;

	[Token(Token = "0x4001690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	private int CurTexPrs1;

	[Token(Token = "0x4001691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A4")]
	private int NewTexPrs1;

	[Token(Token = "0x4001692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	private int CurTexTeam;

	[Token(Token = "0x4001693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3AC")]
	private int NewTexTeam;

	[Token(Token = "0x4001694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	private int CurTexCase;

	[Token(Token = "0x4001695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B4")]
	private int NewTexCase;

	[Token(Token = "0x4001696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static bool isLockedMyShipHP;

	[Token(Token = "0x4001697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	public static bool isLockedEnemyShipParusHP;

	[Token(Token = "0x4001698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
	public static bool isLockedEnemyShipCaseHP;

	[Token(Token = "0x4001699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	public bool is_Me;

	[Token(Token = "0x400169A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B9")]
	public bool is_AI;

	[Token(Token = "0x400169B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3BA")]
	public bool is_Preview;

	[Token(Token = "0x400169C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3BC")]
	public float RadialTarget;

	[Token(Token = "0x400169D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	public int UniqueID;

	[Token(Token = "0x400169E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C4")]
	public float SyncTime;

	[Token(Token = "0x400169F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	public Vector3 PrevMustBeHere;

	[Token(Token = "0x40016A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D4")]
	public Vector3 NetworkCoordSmooth;

	[Token(Token = "0x40016A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
	public float PrevMustBeRotation;

	[Token(Token = "0x40016A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E4")]
	public Vector3 MustBeHere;

	[Token(Token = "0x40016A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
	public Vector3 MustBeHereSmooth;

	[Token(Token = "0x40016A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3FC")]
	public float MustBeRotation;

	[Token(Token = "0x40016A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
	public float AUTO_reload_left;

	[Token(Token = "0x40016A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x404")]
	public float AUTO_reload_right;

	[Token(Token = "0x40016A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
	public string MultiplayerName;

	[Token(Token = "0x40016A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
	public int AI_Amunition;

	[Token(Token = "0x40016A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x414")]
	public int AI_AmunitionDst;

	[Token(Token = "0x40016AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
	public Tovar AI_AmunitionDmg;

	[Token(Token = "0x40016AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
	public float Ship_CurrentSpeed;

	[Token(Token = "0x40016AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x424")]
	public float Ship_TargetSpeed;

	[Token(Token = "0x40016AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
	public float Ship_RotationChange;

	[Token(Token = "0x40016AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42C")]
	public float Ship_RotationCurr;

	[Token(Token = "0x40016AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
	public float Ship_RotationCurr360;

	[Token(Token = "0x40016B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x434")]
	private float NearestLeft;

	[Token(Token = "0x40016B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
	private float NearestRight;

	[Token(Token = "0x40016B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43C")]
	public int ZalpLeft;

	[Token(Token = "0x40016B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
	public int ZalpRight;

	[Token(Token = "0x40016B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x444")]
	public int ZalpLeftMAX;

	[Token(Token = "0x40016B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
	public int ZalpRightMAX;

	[Token(Token = "0x40016B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
	public Tovar ZalpLeft_CANON_TOVAR;

	[Token(Token = "0x40016B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
	public Tovar ZalpRight_CANON_TOVAR;

	[Token(Token = "0x40016B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
	public float ZalpLeft_Precission;

	[Token(Token = "0x40016B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x464")]
	public float ZalpRight_Precission;

	[Token(Token = "0x40016BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x468")]
	public GameObject TargetLeft;

	[Token(Token = "0x40016BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x470")]
	public GameObject TargetRight;

	[Token(Token = "0x40016BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x478")]
	private float ReloadBetweenSame_Left;

	[Token(Token = "0x40016BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x47C")]
	private float ReloadBetweenSame_Right;

	[Token(Token = "0x40016BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x480")]
	private float SinkinLeft;

	[Token(Token = "0x40016BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x484")]
	private float SinkinRotation;

	[Token(Token = "0x40016C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
	private float SinkinFront;

	[NonSerialized]
	[Token(Token = "0x40016C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
	public int_z case_HP;

	[NonSerialized]
	[Token(Token = "0x40016C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x498")]
	public int_z parus_HP;

	[NonSerialized]
	[Token(Token = "0x40016C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A0")]
	public int_z team_HP;

	[NonSerialized]
	[Token(Token = "0x40016C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A8")]
	public int_z Max_HP_case;

	[NonSerialized]
	[Token(Token = "0x40016C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B0")]
	public int_z Max_HP_parus;

	[NonSerialized]
	[Token(Token = "0x40016C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B8")]
	public int_z Max_HP_team;

	[Token(Token = "0x40016C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C0")]
	public bool DEFEATED;

	[Token(Token = "0x40016C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C4")]
	public float sinkin;

	[Token(Token = "0x40016C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C8")]
	public bool canBeTargeted;

	[Token(Token = "0x40016CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D0")]
	public Ship UnderAbordage;

	[Token(Token = "0x40016CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D8")]
	public GameObject Shoot;

	[Token(Token = "0x40016CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E0")]
	public GameObject CanonBall_pref;

	[Token(Token = "0x40016CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E8")]
	public int DamageType;

	[Token(Token = "0x40016CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4EC")]
	public int DamageValue;

	[Token(Token = "0x40016CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F0")]
	public int MyShootPointCount;

	[Token(Token = "0x40016D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F4")]
	public float PoisonTimer;

	[Token(Token = "0x40016D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F8")]
	public float BlindTimer;

	[Token(Token = "0x40016D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4FC")]
	public int FlagIndex;

	[Token(Token = "0x40016D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x500")]
	public int FracIndex;

	[Token(Token = "0x40016D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x504")]
	public int HerbIndex;

	[Token(Token = "0x40016D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x508")]
	public int CaseColor;

	[Token(Token = "0x40016D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50C")]
	public int DecoInx_Aura;

	[Token(Token = "0x40016D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x510")]
	public int DecoInx_Path;

	[Token(Token = "0x40016D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x514")]
	public int DecoInx_Watr;

	[Token(Token = "0x40016D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x518")]
	public int DecoInx_Bort;

	[Token(Token = "0x40016DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51C")]
	public int DecoInx_Nose;

	[Token(Token = "0x40016DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x520")]
	public H_Flag[] FlagsArray;

	[Token(Token = "0x40016DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x528")]
	public ParticleSystem MyFirePFX;

	[Token(Token = "0x40016DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x530")]
	public ParticleSystem MySmokePFX;

	[Token(Token = "0x40016DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x538")]
	public PFX_Officers Officers1;

	[Token(Token = "0x40016DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x540")]
	public Renderer ParusesModel;

	[Token(Token = "0x40016E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x548")]
	public Renderer ParusesModelCloth;

	[Token(Token = "0x40016E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x550")]
	public Transform MyShootTargets;

	[Token(Token = "0x40016E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x558")]
	public Transform MyShootPoints;

	[Token(Token = "0x40016E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x560")]
	public ParticleSystem MyBlindness;

	[Token(Token = "0x40016E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x568")]
	public ParticleSystem MyPoison;

	[Token(Token = "0x40016E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x570")]
	public GameObject[] Damages;

	[Token(Token = "0x40016E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x578")]
	public Light MyNightLight;

	[Token(Token = "0x40016E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x580")]
	public ParticleSystem MyNightLightsPFX;

	[Token(Token = "0x40016E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x588")]
	public ParticleSystem DecorativeMagicTowerFX1;

	[Token(Token = "0x40016E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x590")]
	public ParticleSystem DecorativeMagicTowerFX2;

	[Token(Token = "0x40016EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x598")]
	public ParticleSystem DecorativeMagicTowerFX3;

	[Token(Token = "0x40016EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A0")]
	public Transform DestructibleHolder;

	[Token(Token = "0x40016EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A8")]
	public Transform ArtefactPlacingGO;

	[Token(Token = "0x40016ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static GameObject[] MapShipsArray;

	[Token(Token = "0x40016EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Ship[] ShipsArray;

	[Token(Token = "0x40016EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B0")]
	public int DefenceCase;

	[Token(Token = "0x40016F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B4")]
	public int DefenceTeam;

	[Token(Token = "0x40016F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B8")]
	public int DefenceParus;

	[Token(Token = "0x40016F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5BC")]
	public int ZalpCnt;

	[Token(Token = "0x40016F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C0")]
	public float ShootPrecission_z;

	[Token(Token = "0x40016F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C4")]
	public float telegrCulldownL;

	[Token(Token = "0x40016F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C8")]
	public float telegrCulldownR;

	[Token(Token = "0x40016F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5CC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57F028", Offset = "0x57F028")]
	public bool isDisabledRepair;

	[Token(Token = "0x40016F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5CD")]
	public bool isDisabledRecruitment;

	[Token(Token = "0x40016F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57F060", Offset = "0x57F060")]
	public GameObject Case_LOD_Deck;

	[Token(Token = "0x40016F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D8")]
	public GameObject Case_Detail_Deck;

	[Token(Token = "0x40016FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E0")]
	public GameObject CanonsHighlight;

	[Token(Token = "0x40016FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E8")]
	public GameObject CanonBallsBoxesHighlight;

	[Token(Token = "0x40016FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F0")]
	private GameObject go;

	[Token(Token = "0x40016FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F8")]
	private GameObject go2;

	[Token(Token = "0x40016FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x600")]
	private Vector3 DetailCaseCoord;

	[Token(Token = "0x40016FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60C")]
	private Quaternion DetailCaseRot;

	[Token(Token = "0x4001700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static bool isDisabledShipRam;

	[Token(Token = "0x4001701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public static bool isDisabledEnemyFiring;

	[Token(Token = "0x4001702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public static bool isDisabledAbordage;

	[Token(Token = "0x170001A4")]
	public bool InMapTown
	{
		[Token(Token = "0x6001000")]
		[Address(RVA = "0x14E05F8", Offset = "0x14E05F8", VA = "0x14E05F8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001001")]
		[Address(RVA = "0x14E0600", Offset = "0x14E0600", VA = "0x14E0600")]
		set
		{
		}
	}

	[Token(Token = "0x170001A5")]
	public bool IsEnemy
	{
		[Token(Token = "0x6001002")]
		[Address(RVA = "0x14E060C", Offset = "0x14E060C", VA = "0x14E060C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001A6")]
	public Rigidbody rigidBody
	{
		[Token(Token = "0x6001004")]
		[Address(RVA = "0x14E2254", Offset = "0x14E2254", VA = "0x14E2254")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A7")]
	public bool WasDestroyed
	{
		[Token(Token = "0x6001005")]
		[Address(RVA = "0x14E225C", Offset = "0x14E225C", VA = "0x14E225C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001006")]
		[Address(RVA = "0x14E2264", Offset = "0x14E2264", VA = "0x14E2264")]
		set
		{
		}
	}

	[Token(Token = "0x170001A8")]
	public float Speed
	{
		[Token(Token = "0x600100C")]
		[Address(RVA = "0x14E2E34", Offset = "0x14E2E34", VA = "0x14E2E34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58B004", Offset = "0x58B004")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600100D")]
		[Address(RVA = "0x14E2E3C", Offset = "0x14E2E3C", VA = "0x14E2E3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58B014", Offset = "0x58B014")]
		private set
		{
		}
	}

	[Token(Token = "0x170001A9")]
	public int InitialFracIndex
	{
		[Token(Token = "0x600100E")]
		[Address(RVA = "0x14E2E44", Offset = "0x14E2E44", VA = "0x14E2E44")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600100F")]
		[Address(RVA = "0x14E2E4C", Offset = "0x14E2E4C", VA = "0x14E2E4C")]
		set
		{
		}
	}

	[Token(Token = "0x170001AA")]
	public Renderer ParusesRenderer
	{
		[Token(Token = "0x6001010")]
		[Address(RVA = "0x14E2E54", Offset = "0x14E2E54", VA = "0x14E2E54")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001AB")]
	public Image PrecisionImage
	{
		[Token(Token = "0x6001011")]
		[Address(RVA = "0x14E2E5C", Offset = "0x14E2E5C", VA = "0x14E2E5C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001AC")]
	public Bounds? ModelBounds
	{
		[Token(Token = "0x6001012")]
		[Address(RVA = "0x14E2F28", Offset = "0x14E2F28", VA = "0x14E2F28")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001AD")]
	public Renderer RelationsRenderer
	{
		[Token(Token = "0x6001013")]
		[Address(RVA = "0x14E30D0", Offset = "0x14E30D0", VA = "0x14E30D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001AE")]
	public bool AlwaysShowFullSails
	{
		[Token(Token = "0x6001014")]
		[Address(RVA = "0x14E3140", Offset = "0x14E3140", VA = "0x14E3140")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58B024", Offset = "0x58B024")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001015")]
		[Address(RVA = "0x14E3148", Offset = "0x14E3148", VA = "0x14E3148")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58B034", Offset = "0x58B034")]
		set
		{
		}
	}

	[Token(Token = "0x170001AF")]
	public NewEvent InitedFromHere
	{
		[Token(Token = "0x6001017")]
		[Address(RVA = "0x14E5FA0", Offset = "0x14E5FA0", VA = "0x14E5FA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58B044", Offset = "0x58B044")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001018")]
		[Address(RVA = "0x14E5FA8", Offset = "0x14E5FA8", VA = "0x14E5FA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58B054", Offset = "0x58B054")]
		set
		{
		}
	}

	[Token(Token = "0x170001B0")]
	public static float searchRadius
	{
		[Token(Token = "0x600102A")]
		[Address(RVA = "0x14EF764", Offset = "0x14EF764", VA = "0x14EF764")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6001003")]
	[Address(RVA = "0x14E061C", Offset = "0x14E061C", VA = "0x14E061C")]
	public void CountItQuest(bool AddXp, bool AddFracRate, bool asBoarding)
	{
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0x14E2270", Offset = "0x14E2270", VA = "0x14E2270")]
	public static void PlayerRespawn()
	{
	}

	[Token(Token = "0x6001008")]
	[Address(RVA = "0x14E26FC", Offset = "0x14E26FC", VA = "0x14E26FC")]
	private static void ChargeDeathPenalty()
	{
	}

	[Token(Token = "0x6001009")]
	[Address(RVA = "0x14E2AA8", Offset = "0x14E2AA8", VA = "0x14E2AA8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600100A")]
	[Address(RVA = "0x14E2B60", Offset = "0x14E2B60", VA = "0x14E2B60")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600100B")]
	[Address(RVA = "0x14E2C18", Offset = "0x14E2C18", VA = "0x14E2C18")]
	private void OnLanguageChanged()
	{
	}

	[Token(Token = "0x6001016")]
	[Address(RVA = "0x14E3154", Offset = "0x14E3154", VA = "0x14E3154")]
	public void SetShipView(ViewType viewType)
	{
	}

	[Token(Token = "0x6001019")]
	[Address(RVA = "0x14E5FB8", Offset = "0x14E5FB8", VA = "0x14E5FB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58B064", Offset = "0x58B064")]
	private IEnumerator ClearPatchPFX()
	{
		return null;
	}

	[Token(Token = "0x600101A")]
	[Address(RVA = "0x14E6038", Offset = "0x14E6038", VA = "0x14E6038")]
	public void ClearPFX_caller()
	{
	}

	[Token(Token = "0x600101B")]
	[Address(RVA = "0x14E60DC", Offset = "0x14E60DC", VA = "0x14E60DC")]
	public void SetArtefactPFX_ON(int indx)
	{
	}

	[Token(Token = "0x600101C")]
	[Address(RVA = "0x14E629C", Offset = "0x14E629C", VA = "0x14E629C")]
	public void SetArtefactPFX_OFF(int TYPE)
	{
	}

	[Token(Token = "0x600101D")]
	[Address(RVA = "0x14E64C8", Offset = "0x14E64C8", VA = "0x14E64C8")]
	public void RunArtefact(int SlotActivation, float power, Ship OctoTrg, Ship MeteorFlashMortarMnogostwTrg, Ship FlameThrowTrg, bool AnyEnemyFar, bool SendNetwork)
	{
	}

	[Token(Token = "0x600101E")]
	[Address(RVA = "0x14EC388", Offset = "0x14EC388", VA = "0x14EC388")]
	public void CheckForDestroing_TOWER()
	{
	}

	[Token(Token = "0x600101F")]
	[Address(RVA = "0x14ED65C", Offset = "0x14ED65C", VA = "0x14ED65C")]
	public void CheckForDestroing_And_SWIM()
	{
	}

	[Token(Token = "0x6001020")]
	[Address(RVA = "0x14EE780", Offset = "0x14EE780", VA = "0x14EE780")]
	private void SinkShip(bool EpicBoom = false)
	{
	}

	[Token(Token = "0x6001021")]
	[Address(RVA = "0x14EE91C", Offset = "0x14EE91C", VA = "0x14EE91C")]
	public float GetWindDirection()
	{
		return default(float);
	}

	[Token(Token = "0x6001022")]
	[Address(RVA = "0x14EEA2C", Offset = "0x14EEA2C", VA = "0x14EEA2C")]
	public void SetFlag(int index, bool frac)
	{
	}

	[Token(Token = "0x6001023")]
	[Address(RVA = "0x14EEC4C", Offset = "0x14EEC4C", VA = "0x14EEC4C")]
	public void SetHerb(int index)
	{
	}

	[Token(Token = "0x6001024")]
	[Address(RVA = "0x14EEFD8", Offset = "0x14EEFD8", VA = "0x14EEFD8")]
	public void SetCaseColor(int index)
	{
	}

	[Token(Token = "0x6001025")]
	[Address(RVA = "0x14EF1D8", Offset = "0x14EF1D8", VA = "0x14EF1D8")]
	public void SetDecor_Aura(int index)
	{
	}

	[Token(Token = "0x6001026")]
	[Address(RVA = "0x14EF2F4", Offset = "0x14EF2F4", VA = "0x14EF2F4")]
	public void SetDecor_Water(int index)
	{
	}

	[Token(Token = "0x6001027")]
	[Address(RVA = "0x14EF410", Offset = "0x14EF410", VA = "0x14EF410")]
	public void SetDecor_Patch(int index)
	{
	}

	[Token(Token = "0x6001028")]
	[Address(RVA = "0x14EF52C", Offset = "0x14EF52C", VA = "0x14EF52C")]
	public void SetDecor_Bort(int index)
	{
	}

	[Token(Token = "0x6001029")]
	[Address(RVA = "0x14EF648", Offset = "0x14EF648", VA = "0x14EF648")]
	public void SetDecor_Nose(int index)
	{
	}

	[Token(Token = "0x600102B")]
	[Address(RVA = "0x14EF7E0", Offset = "0x14EF7E0", VA = "0x14EF7E0")]
	public void FindNearesShip(bool AlsoSearchTowersAndForts, float minDst = 110f, bool IgnoreOctopused = false, bool SearchEscaped = false)
	{
	}

	[Token(Token = "0x600102C")]
	[Address(RVA = "0x14EFAE4", Offset = "0x14EFAE4", VA = "0x14EFAE4")]
	public GameObject FindFarShip(float minDst = 110f)
	{
		return null;
	}

	[Token(Token = "0x600102D")]
	[Address(RVA = "0x14EFD88", Offset = "0x14EFD88", VA = "0x14EFD88")]
	public Ship FindNearesAllay(float minDst = 110f)
	{
		return null;
	}

	[Token(Token = "0x600102E")]
	[Address(RVA = "0x14F0008", Offset = "0x14F0008", VA = "0x14F0008")]
	public void ResetMyArtefacts()
	{
	}

	[Token(Token = "0x600102F")]
	[Address(RVA = "0x14E91C0", Offset = "0x14E91C0", VA = "0x14E91C0")]
	public void DamageShip(int _case, int _parus, int _team, int _type = 0, bool RefreshView = true, bool FromUs = false)
	{
	}

	[Token(Token = "0x6001030")]
	[Address(RVA = "0x14DC240", Offset = "0x14DC240", VA = "0x14DC240")]
	public void RefreshShipDamageView()
	{
	}

	[Token(Token = "0x6001031")]
	[Address(RVA = "0x14F0700", Offset = "0x14F0700", VA = "0x14F0700")]
	public static void RecalcShipList()
	{
	}

	[Token(Token = "0x6001032")]
	[Address(RVA = "0x14F07B8", Offset = "0x14F07B8", VA = "0x14F07B8")]
	public static void RecalcMapShipList()
	{
	}

	[Token(Token = "0x6001033")]
	[Address(RVA = "0x14F0850", Offset = "0x14F0850", VA = "0x14F0850")]
	public int CTRL_Shoot(Tovar CanonTovar, bool LeftBort = true, bool RightBort = true, float Prec_mul = 1f, bool SendMultiplayer = true, float MultiplayerPrecission = -1f, int ShootCount = -1)
	{
		return default(int);
	}

	[Token(Token = "0x6001034")]
	[Address(RVA = "0x14F22FC", Offset = "0x14F22FC", VA = "0x14F22FC")]
	private void FillCanonBalls(List<CanonBall> canonBallsCollection, int zalpCount, float zalpPrecission, Tovar canonTovar, Ship target, [Out] int damageDeal)
	{
	}

	[Token(Token = "0x6001035")]
	[Address(RVA = "0x14F29E4", Offset = "0x14F29E4", VA = "0x14F29E4")]
	private void ShowDamageDeal(int damageDeal, Transform parent)
	{
	}

	[Token(Token = "0x6001036")]
	[Address(RVA = "0x14F2AB4", Offset = "0x14F2AB4", VA = "0x14F2AB4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001037")]
	[Address(RVA = "0x14F2AB8", Offset = "0x14F2AB8", VA = "0x14F2AB8")]
	private void DesroyObj()
	{
	}

	[Token(Token = "0x6001038")]
	[Address(RVA = "0x14F3548", Offset = "0x14F3548", VA = "0x14F3548")]
	private void changeLayer(Transform go)
	{
	}

	[Token(Token = "0x6001039")]
	[Address(RVA = "0x14F3870", Offset = "0x14F3870", VA = "0x14F3870")]
	private void Start()
	{
	}

	[Token(Token = "0x600103A")]
	[Address(RVA = "0x14F6348", Offset = "0x14F6348", VA = "0x14F6348")]
	private void DestroyHighliter(GameObject from)
	{
	}

	[Token(Token = "0x600103B")]
	[Address(RVA = "0x14F64A0", Offset = "0x14F64A0", VA = "0x14F64A0")]
	private void DestroyHighlighterGrimReaper(GameObject from)
	{
	}

	[Token(Token = "0x600103C")]
	[Address(RVA = "0x14F6644", Offset = "0x14F6644", VA = "0x14F6644")]
	private void RenameEnemyParuses()
	{
	}

	[Token(Token = "0x600103D")]
	[Address(RVA = "0x14F6774", Offset = "0x14F6774", VA = "0x14F6774")]
	private void Awake()
	{
	}

	[Token(Token = "0x600103E")]
	[Address(RVA = "0x14F7898", Offset = "0x14F7898", VA = "0x14F7898")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600103F")]
	[Address(RVA = "0x14F5DFC", Offset = "0x14F5DFC", VA = "0x14F5DFC")]
	public void SetAllayOrEnemyView()
	{
	}

	[Token(Token = "0x6001040")]
	[Address(RVA = "0x14F5CE8", Offset = "0x14F5CE8", VA = "0x14F5CE8")]
	public void SailsRefresh()
	{
	}

	[Token(Token = "0x6001041")]
	[Address(RVA = "0x14F7EA8", Offset = "0x14F7EA8", VA = "0x14F7EA8")]
	public void EnableShipMarker()
	{
	}

	[Token(Token = "0x6001042")]
	[Address(RVA = "0x14F8024", Offset = "0x14F8024", VA = "0x14F8024")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001043")]
	[Address(RVA = "0x14F87C4", Offset = "0x14F87C4", VA = "0x14F87C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001044")]
	[Address(RVA = "0x14F0544", Offset = "0x14F0544", VA = "0x14F0544")]
	public int GetDmgCaseWithDefence(int baseDmgCase)
	{
		return default(int);
	}

	[Token(Token = "0x6001045")]
	[Address(RVA = "0x14F05D8", Offset = "0x14F05D8", VA = "0x14F05D8")]
	public int GetDmgParusWithDefence(int baseDmgParus)
	{
		return default(int);
	}

	[Token(Token = "0x6001046")]
	[Address(RVA = "0x14F066C", Offset = "0x14F066C", VA = "0x14F066C")]
	public int GetDmgTeamWithDefence(int baseDmgTeam)
	{
		return default(int);
	}

	[Token(Token = "0x6001047")]
	[Address(RVA = "0x15021E8", Offset = "0x15021E8", VA = "0x15021E8")]
	public void ChangeMyAimState(bool isActivate)
	{
	}

	[Token(Token = "0x6001048")]
	[Address(RVA = "0x14EED20", Offset = "0x14EED20", VA = "0x14EED20")]
	private void SetSailsTextureAndMaterial(Texture texture, [Optional] Material material)
	{
	}

	[Token(Token = "0x6001049")]
	[Address(RVA = "0x15020F8", Offset = "0x15020F8", VA = "0x15020F8")]
	private float GetPrecissionDelta(int targetZone)
	{
		return default(float);
	}

	[Token(Token = "0x600104A")]
	[Address(RVA = "0x1502144", Offset = "0x1502144", VA = "0x1502144")]
	private void FadePrecissionTime(float precissionTime, int targetZone)
	{
	}

	[Token(Token = "0x600104B")]
	[Address(RVA = "0x15022A4", Offset = "0x15022A4", VA = "0x15022A4")]
	private void SetPrecisionOnLastTarget(Ship lastTarget, float precision)
	{
	}

	[Token(Token = "0x600104C")]
	[Address(RVA = "0x1501F08", Offset = "0x1501F08", VA = "0x1501F08")]
	private void LockOnTarget()
	{
	}

	[Token(Token = "0x600104D")]
	[Address(RVA = "0x15023F4", Offset = "0x15023F4", VA = "0x15023F4")]
	private void RotateAngles(float angleDifferense)
	{
	}

	[Token(Token = "0x600104E")]
	[Address(RVA = "0x1502478", Offset = "0x1502478", VA = "0x1502478")]
	public static void ClearShips()
	{
	}

	[Token(Token = "0x600104F")]
	[Address(RVA = "0x14F7E80", Offset = "0x14F7E80", VA = "0x14F7E80")]
	public bool IsJunk()
	{
		return default(bool);
	}

	[Token(Token = "0x6001050")]
	[Address(RVA = "0x1502614", Offset = "0x1502614", VA = "0x1502614")]
	public Ship()
	{
	}

	[Token(Token = "0x6001052")]
	[Address(RVA = "0x15029A8", Offset = "0x15029A8", VA = "0x15029A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58B0CC", Offset = "0x58B0CC")]
	private void <CheckForDestroing_And_SWIM>b__174_0()
	{
	}

	[Token(Token = "0x6001053")]
	[Address(RVA = "0x1502AE4", Offset = "0x1502AE4", VA = "0x1502AE4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58B0DC", Offset = "0x58B0DC")]
	private void <Start>b__331_0()
	{
	}

	[Token(Token = "0x6001054")]
	[Address(RVA = "0x1502BC8", Offset = "0x1502BC8", VA = "0x1502BC8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58B0EC", Offset = "0x58B0EC")]
	private void <Start>b__331_1()
	{
	}
}
[Token(Token = "0x20002C3")]
public class ShipDecorative : MonoBehaviour
{
	[Token(Token = "0x4001713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer Parus;

	[Token(Token = "0x6001062")]
	[Address(RVA = "0x167567C", Offset = "0x167567C", VA = "0x167567C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001063")]
	[Address(RVA = "0x16757B8", Offset = "0x16757B8", VA = "0x16757B8")]
	public ShipDecorative()
	{
	}
}
[Token(Token = "0x20002C4")]
public class ShipListLoader : MonoBehaviour
{
	[Token(Token = "0x4001714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ShipListLoader SingletoneEnemy;

	[Token(Token = "0x4001715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TowarListLoad TowarListLoad;

	[Token(Token = "0x4001716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F098", Offset = "0x57F098")]
	private List<ShipParams> <ShipParams>k__BackingField;

	[Token(Token = "0x170001B3")]
	public List<ShipParams> ShipParams
	{
		[Token(Token = "0x6001064")]
		[Address(RVA = "0x16757C0", Offset = "0x16757C0", VA = "0x16757C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58B14C", Offset = "0x58B14C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001065")]
		[Address(RVA = "0x16757C8", Offset = "0x16757C8", VA = "0x16757C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58B15C", Offset = "0x58B15C")]
		private set
		{
		}
	}

	[Token(Token = "0x6001066")]
	[Address(RVA = "0x16757D0", Offset = "0x16757D0", VA = "0x16757D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001067")]
	[Address(RVA = "0x1675880", Offset = "0x1675880", VA = "0x1675880")]
	private void Start()
	{
	}

	[Token(Token = "0x6001068")]
	[Address(RVA = "0x1675940", Offset = "0x1675940", VA = "0x1675940")]
	public static List<ShipParams> GetShipParams(List<Tovar> tovars, List<Loot> lootList)
	{
		return null;
	}

	[Token(Token = "0x6001069")]
	[Address(RVA = "0x16771F0", Offset = "0x16771F0", VA = "0x16771F0")]
	public ShipListLoader()
	{
	}
}
[Token(Token = "0x20002C5")]
public class ShipParams
{
	[Token(Token = "0x4001717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string ID;

	[Token(Token = "0x4001718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string NameLang;

	[Token(Token = "0x4001719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int MyArrayNumber;

	[Token(Token = "0x400171A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int XP_and_POP;

	[Token(Token = "0x400171B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int CaseIndex;

	[Token(Token = "0x400171C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int CaseDecor;

	[Token(Token = "0x400171D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int CaseColor;

	[Token(Token = "0x400171E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int dcr_nose;

	[Token(Token = "0x400171F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int dcr_bort;

	[Token(Token = "0x4001720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int dcr_watr;

	[Token(Token = "0x4001721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int dcr_aura;

	[Token(Token = "0x4001722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int dcr_ptch;

	[Token(Token = "0x4001723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int _PrecissionOnUs;

	[Token(Token = "0x4001724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int Herb;

	[Token(Token = "0x4001725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int Fraction;

	[Token(Token = "0x4001726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Loot ShipLoot;

	[Token(Token = "0x4001727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int Base_Speed;

	[Token(Token = "0x4001728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int Base_Parus_Open;

	[Token(Token = "0x4001729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int Base_Maneur;

	[Token(Token = "0x400172A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int Base_Reload;

	[Token(Token = "0x400172B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int Base_Precission;

	[Token(Token = "0x400172C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int Base_Width;

	[Token(Token = "0x400172D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int Base_Shoot_count;

	[Token(Token = "0x400172E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int Base_Abord_min;

	[Token(Token = "0x400172F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Base_Abord_max;

	[Token(Token = "0x4001730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int Base_Abord_rel;

	[Token(Token = "0x4001731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int Base_Range;

	[Token(Token = "0x4001732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int Base_DefCase;

	[Token(Token = "0x4001733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public int Base_DefTeam;

	[Token(Token = "0x4001734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public int Base_DefParu;

	[Token(Token = "0x4001735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int Base_MaxHP_Case;

	[Token(Token = "0x4001736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public int Base_MaxHP_Paru;

	[Token(Token = "0x4001737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int Base_MaxHP_Team;

	[Token(Token = "0x4001738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Tovar[] ArtefactOnBoard;

	[Token(Token = "0x4001739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Tovar Amunition_case;

	[Token(Token = "0x400173A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Tovar Amunition_paru;

	[Token(Token = "0x400173B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Tovar Amunition_team;

	[Token(Token = "0x600106A")]
	[Address(RVA = "0x167716C", Offset = "0x167716C", VA = "0x167716C")]
	public ShipParams Copy()
	{
		return null;
	}

	[Token(Token = "0x600106B")]
	[Address(RVA = "0x16770CC", Offset = "0x16770CC", VA = "0x16770CC")]
	public ShipParams()
	{
	}
}
[Token(Token = "0x20002C6")]
public class ShipSpoun : MonoBehaviour
{
	[Token(Token = "0x400173C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ShipID;

	[Token(Token = "0x400173D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool Allay;

	[Token(Token = "0x400173E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool AlreadySpouned;

	[Token(Token = "0x600106C")]
	[Address(RVA = "0x16771F8", Offset = "0x16771F8", VA = "0x16771F8")]
	public ShipSpoun()
	{
	}
}
[Token(Token = "0x20002C7")]
public class Skills : SingletonMonoBehaviour<Skills>
{
	[Token(Token = "0x400173F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Skills singletne;

	[Token(Token = "0x4001740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform BookPanel;

	[Token(Token = "0x4001741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RectTransform XpPointsPanel;

	[Token(Token = "0x4001742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text BooksHave;

	[Token(Token = "0x4001743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text BooksHave_consoles;

	[Token(Token = "0x4001744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text Desription;

	[Token(Token = "0x4001745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RectTransform Selector;

	[Token(Token = "0x4001746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public RectTransform[] ButtonsPos;

	[Token(Token = "0x4001747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject[] ButtonsLOCK;

	[Token(Token = "0x4001748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject LearnBtn;

	[Token(Token = "0x4001749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject ResetBtn;

	[Token(Token = "0x400174A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject ResetConsolesBtn;

	[Token(Token = "0x400174B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text XpPointsCount;

	[Token(Token = "0x400174C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text[] SkillLevelTexts;

	[Token(Token = "0x400174D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text[] SkillLevelPrices;

	[Token(Token = "0x400174E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Image[] SkillLevelImages;

	[Token(Token = "0x400174F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int skillSelected;

	[Token(Token = "0x4001750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int skillPrev;

	[Token(Token = "0x4001751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject[] LearnedRepair;

	[Token(Token = "0x4001752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject[] LearnedHeal;

	[Token(Token = "0x4001753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject[] LearnedShoot;

	[Token(Token = "0x4001754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject[] LearnedArtef;

	[Token(Token = "0x4001755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject[] LearnedSail;

	[Token(Token = "0x4001756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject[] LearnedAbord;

	[Token(Token = "0x4001757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public HelpContentData HelpData;

	[Token(Token = "0x4001758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private SaveDataProfile profile;

	[Token(Token = "0x4001759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private GameObject imageTriangle_PS4;

	[Token(Token = "0x170001B4")]
	public static int SkillSelected
	{
		[Token(Token = "0x600106D")]
		[Address(RVA = "0x167FA78", Offset = "0x167FA78", VA = "0x167FA78")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001B5")]
	public static int SkillPrice
	{
		[Token(Token = "0x600106E")]
		[Address(RVA = "0x167FADC", Offset = "0x167FADC", VA = "0x167FADC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001B6")]
	public static Tovar SkillCurrency
	{
		[Token(Token = "0x600106F")]
		[Address(RVA = "0x167FAE4", Offset = "0x167FAE4", VA = "0x167FAE4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001B7")]
	public static Sprite SkillCurrencyIcon
	{
		[Token(Token = "0x6001070")]
		[Address(RVA = "0x167FB48", Offset = "0x167FB48", VA = "0x167FB48")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001071")]
	[Address(RVA = "0x167FBB8", Offset = "0x167FBB8", VA = "0x167FBB8")]
	public void WriteBook()
	{
	}

	[Token(Token = "0x6001072")]
	[Address(RVA = "0x167FBBC", Offset = "0x167FBBC", VA = "0x167FBBC")]
	public void ResetAct()
	{
	}

	[Token(Token = "0x6001073")]
	[Address(RVA = "0x167FCC4", Offset = "0x167FCC4", VA = "0x167FCC4")]
	private void ResetSkillsConfirm()
	{
	}

	[Token(Token = "0x6001074")]
	[Address(RVA = "0x16807E8", Offset = "0x16807E8", VA = "0x16807E8")]
	public void AddSkillCurrencyCheat()
	{
	}

	[Token(Token = "0x6001075")]
	[Address(RVA = "0x16809C4", Offset = "0x16809C4", VA = "0x16809C4")]
	public void Learn()
	{
	}

	[Token(Token = "0x6001076")]
	[Address(RVA = "0x16810E4", Offset = "0x16810E4", VA = "0x16810E4")]
	public void ResetSkillsWindow()
	{
	}

	[Token(Token = "0x6001077")]
	[Address(RVA = "0x167FF98", Offset = "0x167FF98", VA = "0x167FF98")]
	public void RefreshSkillWindow()
	{
	}

	[Token(Token = "0x6001078")]
	[Address(RVA = "0x16811F0", Offset = "0x16811F0", VA = "0x16811F0")]
	public void SelectSkill(int index)
	{
	}

	[Token(Token = "0x6001079")]
	[Address(RVA = "0x16817D0", Offset = "0x16817D0", VA = "0x16817D0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600107A")]
	[Address(RVA = "0x1681A9C", Offset = "0x1681A9C", VA = "0x1681A9C")]
	public void Update()
	{
	}

	[Token(Token = "0x600107B")]
	[Address(RVA = "0x1681AA0", Offset = "0x1681AA0", VA = "0x1681AA0")]
	private void OnProfileLoaded(object obj)
	{
	}

	[Token(Token = "0x600107C")]
	[Address(RVA = "0x1681B18", Offset = "0x1681B18", VA = "0x1681B18")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600107D")]
	[Address(RVA = "0x1681BE4", Offset = "0x1681BE4", VA = "0x1681BE4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600107E")]
	[Address(RVA = "0x1681C9C", Offset = "0x1681C9C", VA = "0x1681C9C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600107F")]
	[Address(RVA = "0x1681D54", Offset = "0x1681D54", VA = "0x1681D54")]
	private void OnLanguageChanged()
	{
	}

	[Token(Token = "0x6001080")]
	[Address(RVA = "0x168207C", Offset = "0x168207C", VA = "0x168207C")]
	public void SetSpecialProfile(SaveDataProfile profile_)
	{
	}

	[Token(Token = "0x6001081")]
	[Address(RVA = "0x168208C", Offset = "0x168208C", VA = "0x168208C")]
	private void ControllerInput()
	{
	}

	[Token(Token = "0x6001082")]
	[Address(RVA = "0x1682354", Offset = "0x1682354", VA = "0x1682354")]
	public Skills()
	{
	}
}
[Token(Token = "0x20002C8")]
public enum SkillTypes
{
	[Token(Token = "0x400175B")]
	Carpenter,
	[Token(Token = "0x400175C")]
	Engineer,
	[Token(Token = "0x400175D")]
	FirstAid,
	[Token(Token = "0x400175E")]
	Healing,
	[Token(Token = "0x400175F")]
	Gunner,
	[Token(Token = "0x4001760")]
	AdjustedFire,
	[Token(Token = "0x4001761")]
	Mystic,
	[Token(Token = "0x4001762")]
	Geomancer,
	[Token(Token = "0x4001763")]
	Navigator,
	[Token(Token = "0x4001764")]
	Sailor,
	[Token(Token = "0x4001765")]
	Dodger,
	[Token(Token = "0x4001766")]
	Shooter
}
[Token(Token = "0x20002C9")]
public class SkyBoxAlign : MonoBehaviour
{
	[Token(Token = "0x6001084")]
	[Address(RVA = "0x1682404", Offset = "0x1682404", VA = "0x1682404")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001085")]
	[Address(RVA = "0x1682500", Offset = "0x1682500", VA = "0x1682500")]
	public SkyBoxAlign()
	{
	}
}
[Token(Token = "0x20002CA")]
public enum StatisticParameters
{
	[Token(Token = "0x4001768")]
	DistanceCovered,
	[Token(Token = "0x4001769")]
	AreaDiscovered,
	[Token(Token = "0x400176A")]
	QuestsCompleted,
	[Token(Token = "0x400176B")]
	LegendsRevealed,
	[Token(Token = "0x400176C")]
	PiastresGained,
	[Token(Token = "0x400176D")]
	ValuesSold,
	[Token(Token = "0x400176E")]
	CanonballsUsed,
	[Token(Token = "0x400176F")]
	Miss,
	[Token(Token = "0x4001770")]
	EnemiesDestroyed,
	[Token(Token = "0x4001771")]
	TimesSunk,
	[Token(Token = "0x4001772")]
	BoardingWins,
	[Token(Token = "0x4001773")]
	BoardingDefeats,
	[Token(Token = "0x4001774")]
	Escaped,
	[Token(Token = "0x4001775")]
	TowersDestroyed,
	[Token(Token = "0x4001776")]
	MonsterKilled
}
[Token(Token = "0x20002CB")]
public class SwordAnimation : MonoBehaviour
{
	[Token(Token = "0x4001777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SwordAnimation singletone;

	[Token(Token = "0x4001778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] Decor;

	[Token(Token = "0x4001779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float[] Rot_Start;

	[Token(Token = "0x400177A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float[] Rot_Fin;

	[Token(Token = "0x400177B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip OldAchiveSound;

	[Token(Token = "0x400177C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Animation[] buttonsAnimations;

	[Token(Token = "0x400177D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CanvasGroup[] buttonsPanels;

	[Token(Token = "0x400177E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float buttonsStartDelay;

	[Token(Token = "0x400177F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float buttonsInterval;

	[Token(Token = "0x4001780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool[] buttonAnimationStarted;

	[Token(Token = "0x4001781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] Rot_Curr;

	[Token(Token = "0x4001782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float Period;

	[Token(Token = "0x6001086")]
	[Address(RVA = "0x168FC58", Offset = "0x168FC58", VA = "0x168FC58")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001087")]
	[Address(RVA = "0x168FCB4", Offset = "0x168FCB4", VA = "0x168FCB4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001088")]
	[Address(RVA = "0x168FED8", Offset = "0x168FED8", VA = "0x168FED8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001089")]
	[Address(RVA = "0x169024C", Offset = "0x169024C", VA = "0x169024C")]
	public SwordAnimation()
	{
	}
}
[Token(Token = "0x20002CC")]
public class SwordAnimationLoose : MonoBehaviour
{
	[Token(Token = "0x20002CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578DD4", Offset = "0x578DD4")]
	private sealed class <AnimationsLoose>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SwordAnimationLoose <>4__this;

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <partOfPath>5__3;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <path>5__4;

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Color <endColor>5__5;

		[Token(Token = "0x170001B8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001091")]
			[Address(RVA = "0x1581BF8", Offset = "0x1581BF8", VA = "0x1581BF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001093")]
			[Address(RVA = "0x1581C40", Offset = "0x1581C40", VA = "0x1581C40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0x15817A0", Offset = "0x15817A0", VA = "0x15817A0")]
		[DebuggerHidden]
		public <AnimationsLoose>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0x15817CC", Offset = "0x15817CC", VA = "0x15817CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0x15817D0", Offset = "0x15817D0", VA = "0x15817D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0x1581C00", Offset = "0x1581C00", VA = "0x1581C00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] Decor;

	[Token(Token = "0x4001784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float[] Rot_Start;

	[Token(Token = "0x4001785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float[] Rot_Fin;

	[Token(Token = "0x4001786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float buttonsStartDelay;

	[Token(Token = "0x4001787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float buttonsInterval;

	[Token(Token = "0x4001788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool[] buttonAnimationStarted;

	[Token(Token = "0x4001789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float[] Rot_Curr;

	[Token(Token = "0x400178A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float Period;

	[Token(Token = "0x400178B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public CanvasGroup AllImg;

	[Token(Token = "0x400178C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text textLoose;

	[Token(Token = "0x400178D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float appereanceTimeText;

	[Token(Token = "0x400178E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float waitTime;

	[Token(Token = "0x400178F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float fadeTime;

	[Token(Token = "0x4001790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float waitSwitchViewTime;

	[Token(Token = "0x4001791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool waitSwitchView;

	[Token(Token = "0x600108A")]
	[Address(RVA = "0x16902C8", Offset = "0x16902C8", VA = "0x16902C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600108B")]
	[Address(RVA = "0x16905C8", Offset = "0x16905C8", VA = "0x16905C8")]
	private void Update()
	{
	}

	[Token(Token = "0x600108C")]
	[Address(RVA = "0x1690548", Offset = "0x1690548", VA = "0x1690548")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58B16C", Offset = "0x58B16C")]
	private IEnumerator AnimationsLoose()
	{
		return null;
	}

	[Token(Token = "0x600108D")]
	[Address(RVA = "0x16908B4", Offset = "0x16908B4", VA = "0x16908B4")]
	public SwordAnimationLoose()
	{
	}
}
[Token(Token = "0x20002CE")]
public enum PositionAnchor
{
	[Token(Token = "0x400179A")]
	LeftBottomCorner,
	[Token(Token = "0x400179B")]
	LeftTopCorner,
	[Token(Token = "0x400179C")]
	RightTopCorner,
	[Token(Token = "0x400179D")]
	RightBottomCorner
}
[Token(Token = "0x20002CF")]
public class TaskWindow : MonoBehaviour
{
	[Token(Token = "0x400179E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text task_text;

	[Token(Token = "0x400179F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI task_text_consoles;

	[Token(Token = "0x40017A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform canvasRectTransform;

	[Token(Token = "0x40017A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform localRT;

	[Token(Token = "0x40017A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform border;

	[Token(Token = "0x40017A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float panelWidthInTown;

	[Token(Token = "0x40017A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float borderWidthInTown;

	[Token(Token = "0x40017A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float panelWidthInTheSea;

	[Token(Token = "0x40017A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float borderWidthInTheSea;

	[Token(Token = "0x40017A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject targetObject;

	[Token(Token = "0x40017A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RectTransform targetRT;

	[Token(Token = "0x40017A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] targetCorners;

	[Token(Token = "0x40017AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private PositionAnchor targetAnchor;

	[Token(Token = "0x40017AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Quaternion localRotation;

	[Token(Token = "0x40017AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool hasTarget;

	[Token(Token = "0x40017AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector2 oldSilzeDeltaLocalRT;

	[Token(Token = "0x40017AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector2 oldSilzeDeltaborder;

	[Token(Token = "0x40017AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool setDef;

	[Token(Token = "0x40017B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool dontUpdate;

	[Token(Token = "0x40017B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string last_task_string;

	[Token(Token = "0x40017B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string[] last_task_args;

	[Token(Token = "0x6001094")]
	[Address(RVA = "0x169628C", Offset = "0x169628C", VA = "0x169628C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001095")]
	[Address(RVA = "0x1696290", Offset = "0x1696290", VA = "0x1696290")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001096")]
	[Address(RVA = "0x1696348", Offset = "0x1696348", VA = "0x1696348")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001097")]
	[Address(RVA = "0x1696468", Offset = "0x1696468", VA = "0x1696468")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001098")]
	[Address(RVA = "0x169666C", Offset = "0x169666C", VA = "0x169666C")]
	public void SetSizeInTheSea()
	{
	}

	[Token(Token = "0x6001099")]
	[Address(RVA = "0x16966E0", Offset = "0x16966E0", VA = "0x16966E0")]
	public void SetSizeInTown()
	{
	}

	[Token(Token = "0x600109A")]
	[Address(RVA = "0x1696754", Offset = "0x1696754", VA = "0x1696754")]
	public void SetSize(float multiply)
	{
	}

	[Token(Token = "0x600109B")]
	[Address(RVA = "0x1696800", Offset = "0x1696800", VA = "0x1696800")]
	private Vector2 GetAnchorPositionOnCanvas(Vector3 target)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600109C")]
	[Address(RVA = "0x16968A8", Offset = "0x16968A8", VA = "0x16968A8")]
	public void SetDefaultPosition()
	{
	}

	[Token(Token = "0x600109D")]
	[Address(RVA = "0x16968AC", Offset = "0x16968AC", VA = "0x16968AC")]
	public void SetNewPosition(GameObject objectUI, PositionAnchor corner = PositionAnchor.LeftBottomCorner)
	{
	}

	[Token(Token = "0x600109E")]
	[Address(RVA = "0x1696A24", Offset = "0x1696A24", VA = "0x1696A24")]
	public void SetPosition(Vector2 pos, bool dntUpdate = true)
	{
	}

	[Token(Token = "0x600109F")]
	[Address(RVA = "0x1696478", Offset = "0x1696478", VA = "0x1696478")]
	private void UpdatePosition()
	{
	}

	[Token(Token = "0x60010A0")]
	[Address(RVA = "0x1696A90", Offset = "0x1696A90", VA = "0x1696A90")]
	public string GetFormattedString(string task, params string[] args)
	{
		return null;
	}

	[Token(Token = "0x60010A1")]
	[Address(RVA = "0x1696EC4", Offset = "0x1696EC4", VA = "0x1696EC4")]
	public void SetCurrentTask(string task, params string[] args)
	{
	}

	[Token(Token = "0x60010A2")]
	[Address(RVA = "0x1696F7C", Offset = "0x1696F7C", VA = "0x1696F7C")]
	public void OnLanguageChanged()
	{
	}

	[Token(Token = "0x60010A3")]
	[Address(RVA = "0x1696BC0", Offset = "0x1696BC0", VA = "0x1696BC0")]
	private string ReplaceSpriteToText(string txt)
	{
		return null;
	}

	[Token(Token = "0x60010A4")]
	[Address(RVA = "0x1696FC0", Offset = "0x1696FC0", VA = "0x1696FC0")]
	public TaskWindow()
	{
	}
}
[Token(Token = "0x20002D0")]
public enum TeamTypes
{
	[Token(Token = "0x40017B4")]
	Allay,
	[Token(Token = "0x40017B5")]
	Enemy,
	[Token(Token = "0x40017B6")]
	EnemyOfEnemy
}
[Token(Token = "0x20002D1")]
public class Team_managment_new : MonoBehaviour
{
	[Token(Token = "0x40017B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Offic_block_parus;

	[Token(Token = "0x40017B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Offic_block_abord;

	[Token(Token = "0x40017B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Offic_block_canon;

	[Token(Token = "0x40017BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text Effect_det_parus;

	[Token(Token = "0x40017BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text Effect_det_canon;

	[Token(Token = "0x40017BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float OffsetX;

	[Token(Token = "0x40017BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float TargOffsetX;

	[Token(Token = "0x40017BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool SetTabern;

	[Token(Token = "0x40017BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	public static bool SetShipOnly;

	[Token(Token = "0x40017C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject TabernBG;

	[Token(Token = "0x40017C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject TabernBG_2;

	[Token(Token = "0x40017C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject TabernBG_3;

	[Token(Token = "0x40017C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Team_managment_new singletone;

	[Token(Token = "0x40017C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text ___info_team_all_count;

	[Token(Token = "0x40017C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text ___info_team_effect_1;

	[Token(Token = "0x40017C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text ___info_team_effect_3;

	[Token(Token = "0x40017C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text ___info_team_Strelok;

	[Token(Token = "0x40017C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text ___info_team_Reserve;

	[Token(Token = "0x40017C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text ___info_team_count_Wunded;

	[Token(Token = "0x40017CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text ___info_team_count_Wunded_title;

	[Token(Token = "0x40017CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text ___info_team_xp_have;

	[Token(Token = "0x40017CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text ___info_team_xp_have_shadow;

	[Token(Token = "0x40017CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Text ___info_team_medicine;

	[Token(Token = "0x40017CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Text ___info_team_medicine_shadow;

	[Token(Token = "0x40017CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Image[] team_rest;

	[Token(Token = "0x40017D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image[] team_hire;

	[Token(Token = "0x40017D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Image[] team_wund;

	[Token(Token = "0x40017D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Image[] team_paru;

	[Token(Token = "0x40017D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Image[] team_abor;

	[Token(Token = "0x40017D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Image[] team_case;

	[Token(Token = "0x40017D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject hire_salag;

	[Token(Token = "0x40017D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Text[] count_rest;

	[Token(Token = "0x40017D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Text[] price_hire;

	[Token(Token = "0x40017D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Text[] count_wund;

	[Token(Token = "0x40017D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Text[] count_paru;

	[Token(Token = "0x40017DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Text[] count_abor;

	[Token(Token = "0x40017DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Text[] count_case;

	[Token(Token = "0x40017DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject DraggerPricer;

	[Token(Token = "0x40017DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Slider Drag_Slider;

	[Token(Token = "0x40017DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Text Drag_Count;

	[Token(Token = "0x40017DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Image Drag_TovIcon;

	[Token(Token = "0x40017E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Sprite PiastresPriceIcon;

	[Token(Token = "0x40017E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private SaveDataProfile profile;

	[Token(Token = "0x40017E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public bool lock_swipe;

	[Token(Token = "0x40017E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private int cnt_prs;

	[Token(Token = "0x40017E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private int cnt_abr;

	[Token(Token = "0x40017E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private int cnt_can;

	[Token(Token = "0x40017E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int cnt_wun;

	[Token(Token = "0x40017E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static int cnt_summ;

	[Token(Token = "0x40017E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject[] GradeButtons;

	[Token(Token = "0x40017E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject[] MoveBtns;

	[Token(Token = "0x40017EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject FlyPrefab;

	[Token(Token = "0x40017EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject HealButton;

	[Token(Token = "0x40017EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int strelok;

	[Token(Token = "0x40017ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static int reserve;

	[Token(Token = "0x40017EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private bool SlideDetection;

	[Token(Token = "0x170001BA")]
	public SaveDataProfile Profile
	{
		[Token(Token = "0x60010A5")]
		[Address(RVA = "0x15F7948", Offset = "0x15F7948", VA = "0x15F7948")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60010A6")]
	[Address(RVA = "0x15F7950", Offset = "0x15F7950", VA = "0x15F7950")]
	public void ShowDragPricer(float CountFloat, int Count, Tovar TovarLink, Sprite TovSprite, int limitDrag)
	{
	}

	[Token(Token = "0x60010A7")]
	[Address(RVA = "0x15F7AD4", Offset = "0x15F7AD4", VA = "0x15F7AD4")]
	public void HideDraggingPricer()
	{
	}

	[Token(Token = "0x60010A8")]
	[Address(RVA = "0x15F7AF8", Offset = "0x15F7AF8", VA = "0x15F7AF8")]
	public void Click_MOVE_TEAM(int f)
	{
	}

	[Token(Token = "0x60010A9")]
	[Address(RVA = "0x15FD3A4", Offset = "0x15FD3A4", VA = "0x15FD3A4")]
	public void GradeIt(int index)
	{
	}

	[Token(Token = "0x60010AA")]
	[Address(RVA = "0x15FD6F8", Offset = "0x15FD6F8", VA = "0x15FD6F8")]
	public void HealIt()
	{
	}

	[Token(Token = "0x60010AB")]
	[Address(RVA = "0x15FA8CC", Offset = "0x15FA8CC", VA = "0x15FA8CC")]
	public void Refresh()
	{
	}

	[Token(Token = "0x60010AC")]
	[Address(RVA = "0x15FA004", Offset = "0x15FA004", VA = "0x15FA004")]
	public void RefreshTabern()
	{
	}

	[Token(Token = "0x60010AD")]
	[Address(RVA = "0x15FE020", Offset = "0x15FE020", VA = "0x15FE020")]
	public void Refresh_Block_officerst_visiblity()
	{
	}

	[Token(Token = "0x60010AE")]
	[Address(RVA = "0x15FE0EC", Offset = "0x15FE0EC", VA = "0x15FE0EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010AF")]
	[Address(RVA = "0x15FE238", Offset = "0x15FE238", VA = "0x15FE238")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010B0")]
	[Address(RVA = "0x15FE2F0", Offset = "0x15FE2F0", VA = "0x15FE2F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010B1")]
	[Address(RVA = "0x15FE3FC", Offset = "0x15FE3FC", VA = "0x15FE3FC")]
	private void Update()
	{
	}

	[Token(Token = "0x60010B2")]
	[Address(RVA = "0x15FE8EC", Offset = "0x15FE8EC", VA = "0x15FE8EC")]
	private void OnProfileLoaded(object obj)
	{
	}

	[Token(Token = "0x60010B3")]
	[Address(RVA = "0x15FE9B0", Offset = "0x15FE9B0", VA = "0x15FE9B0")]
	public void SetSpecialProfile(SaveDataProfile profile_)
	{
	}

	[Token(Token = "0x60010B4")]
	[Address(RVA = "0x15FE9C8", Offset = "0x15FE9C8", VA = "0x15FE9C8")]
	public bool InTabern()
	{
		return default(bool);
	}

	[Token(Token = "0x60010B5")]
	[Address(RVA = "0x15FEA34", Offset = "0x15FEA34", VA = "0x15FEA34")]
	public bool InShip()
	{
		return default(bool);
	}

	[Token(Token = "0x60010B6")]
	[Address(RVA = "0x15FEAA8", Offset = "0x15FEAA8", VA = "0x15FEAA8")]
	public void OnLanguageChanged()
	{
	}

	[Token(Token = "0x60010B7")]
	[Address(RVA = "0x15FED20", Offset = "0x15FED20", VA = "0x15FED20")]
	public Team_managment_new()
	{
	}
}
[Token(Token = "0x20002D2")]
public class Telegraph : MonoBehaviour
{
	[Token(Token = "0x40017EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool WithDamage;

	[Token(Token = "0x40017F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float DmgTimer;

	[Token(Token = "0x40017F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float DmgStartAfterSec;

	[Token(Token = "0x40017F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public H_Core.H_delegate DmgStartAditionalFunc;

	[Token(Token = "0x40017F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float DmgFrecSec;

	[Token(Token = "0x40017F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float DmgFrecTimer;

	[Token(Token = "0x40017F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float DmgEndAfterSec;

	[Token(Token = "0x40017F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int DmgCase;

	[Token(Token = "0x40017F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int DmgPars;

	[Token(Token = "0x40017F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int DmgTeam;

	[Token(Token = "0x40017F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool DmgFromMe;

	[Token(Token = "0x40017FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool DmdDestroyAfter;

	[Token(Token = "0x40017FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool Linear;

	[Token(Token = "0x40017FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	public bool Cone;

	[Token(Token = "0x40017FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float Radius;

	[Token(Token = "0x40017FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float RadiusSqr;

	[Token(Token = "0x40017FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float RadiusNoSqr;

	[Token(Token = "0x4001800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float WideGrad;

	[Token(Token = "0x4001801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float WideRadians;

	[Token(Token = "0x4001802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool StartVisiblity;

	[Token(Token = "0x4001803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool GetVisiblity;

	[Token(Token = "0x4001804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float TimerScan;

	[Token(Token = "0x4001805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material Tel_Cone_RAD;

	[Token(Token = "0x4001806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject Circle;

	[Token(Token = "0x4001807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject Wide;

	[Token(Token = "0x4001808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject Mid;

	[Token(Token = "0x4001809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject Thin;

	[Token(Token = "0x400180A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Ship[] MyTargets;

	[Token(Token = "0x400180B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int[] MyTargZone;

	[Token(Token = "0x400180C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Renderer r;

	[Token(Token = "0x400180D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Transform shipTransform;

	[Token(Token = "0x400180E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool frontCannons;

	[Token(Token = "0x400180F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	private bool allowShow;

	[Token(Token = "0x170001BB")]
	public Renderer[] TelegraphRenderers
	{
		[Token(Token = "0x60010B9")]
		[Address(RVA = "0x15FED2C", Offset = "0x15FED2C", VA = "0x15FED2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60010BA")]
	[Address(RVA = "0x15FF02C", Offset = "0x15FF02C", VA = "0x15FF02C")]
	private void Start()
	{
	}

	[Token(Token = "0x60010BB")]
	[Address(RVA = "0x15FFAAC", Offset = "0x15FFAAC", VA = "0x15FFAAC")]
	public void AllowShow(bool allow)
	{
	}

	[Token(Token = "0x60010BC")]
	[Address(RVA = "0x15FF648", Offset = "0x15FF648", VA = "0x15FF648")]
	public void SetVisible(bool Vis)
	{
	}

	[Token(Token = "0x60010BD")]
	[Address(RVA = "0x15FF5A4", Offset = "0x15FF5A4", VA = "0x15FF5A4")]
	public void SetParams_Circle(float _Radius)
	{
	}

	[Token(Token = "0x60010BE")]
	[Address(RVA = "0x15FF314", Offset = "0x15FF314", VA = "0x15FF314")]
	public void SetParams_Cone(float _Radius, float WideGraduses)
	{
	}

	[Token(Token = "0x60010BF")]
	[Address(RVA = "0x15FFAE0", Offset = "0x15FFAE0", VA = "0x15FFAE0")]
	public void SetParams_Line(float _Range, float Wide)
	{
	}

	[Token(Token = "0x60010C0")]
	[Address(RVA = "0x15FFB44", Offset = "0x15FFB44", VA = "0x15FFB44")]
	private void Update()
	{
	}

	[Token(Token = "0x60010C1")]
	[Address(RVA = "0x15FF8E4", Offset = "0x15FF8E4", VA = "0x15FF8E4")]
	private void SetColor()
	{
	}

	[Token(Token = "0x60010C2")]
	[Address(RVA = "0x16008F8", Offset = "0x16008F8", VA = "0x16008F8")]
	public Telegraph()
	{
	}
}
[Token(Token = "0x20002D3")]
public class Tornado : MonoBehaviour
{
	[Token(Token = "0x4001810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool showed;

	[Token(Token = "0x4001811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource Mysound;

	[Token(Token = "0x4001812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float globalRootation;

	[Token(Token = "0x4001813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float globalDistance;

	[Token(Token = "0x4001814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool Backward;

	[Token(Token = "0x4001815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool isDisabledTornado;

	[Token(Token = "0x4001816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float timer;

	[Token(Token = "0x4001817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float fracDmg;

	[Token(Token = "0x4001818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int shipsCount;

	[Token(Token = "0x4001819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Ship s;

	[Token(Token = "0x60010C3")]
	[Address(RVA = "0x1667528", Offset = "0x1667528", VA = "0x1667528")]
	private void Start()
	{
	}

	[Token(Token = "0x60010C4")]
	[Address(RVA = "0x16675B8", Offset = "0x16675B8", VA = "0x16675B8")]
	private void Update()
	{
	}

	[Token(Token = "0x60010C5")]
	[Address(RVA = "0x1667EE8", Offset = "0x1667EE8", VA = "0x1667EE8")]
	private void SetEnabled(bool isEnabled)
	{
	}

	[Token(Token = "0x60010C6")]
	[Address(RVA = "0x16680EC", Offset = "0x16680EC", VA = "0x16680EC")]
	public Tornado()
	{
	}
}
[Token(Token = "0x20002D4")]
public class Tovar
{
	[Token(Token = "0x400181A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string _ID;

	[Token(Token = "0x400181B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int _SysIndex;

	[Token(Token = "0x400181C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int _Mass;

	[Token(Token = "0x400181D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int _UnvrsalSysIndex;

	[Token(Token = "0x400181E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool _CantThrowAway;

	[Token(Token = "0x400181F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool _LostOnDefeat;

	[Token(Token = "0x4001820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool _AlwaysInStock;

	[Token(Token = "0x4001821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int _IconID;

	[Token(Token = "0x4001822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string _IconID_filename;

	[Token(Token = "0x4001823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Tovar GetIconHere;

	[Token(Token = "0x4001824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite spriteIcon;

	[Token(Token = "0x4001825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool IconLoaded;

	[Token(Token = "0x4001826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string _Desc;

	[Token(Token = "0x4001827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AWE_global.SlotType _Type;

	[Token(Token = "0x4001828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int _PerkSlotCategory;

	[Token(Token = "0x4001829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int _LootSearching;

	[Token(Token = "0x400182A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int _TeamMAX;

	[Token(Token = "0x400182B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int _TeamXP;

	[Token(Token = "0x400182C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int _SlotParus;

	[Token(Token = "0x400182D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int _SlotCase;

	[Token(Token = "0x400182E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int _SlotCanon;

	[Token(Token = "0x400182F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int _PrecissionOnUs;

	[Token(Token = "0x4001830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int _TrumExtension;

	[Token(Token = "0x4001831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int _Speed;

	[Token(Token = "0x4001832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int _Maneur;

	[Token(Token = "0x4001833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int _ParusOpening;

	[NonSerialized]
	[Token(Token = "0x4001834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public int_z _Price;

	[Token(Token = "0x4001835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int_z _Price_SELL;

	[NonSerialized]
	[Token(Token = "0x4001836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Tovar[] _Price_TOW;

	[Token(Token = "0x4001837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public int_z[] _Price_TOW_cnt;

	[Token(Token = "0x4001838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public string[] _Price_TOW_PostEncode;

	[Token(Token = "0x4001839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public int _ArtefEnergyCost;

	[Token(Token = "0x400183A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public int _ArtefMagicMax;

	[Token(Token = "0x400183B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int _ArtefMagicPow;

	[Token(Token = "0x400183C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public int _ArtefCulldown;

	[Token(Token = "0x400183D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public int _CaseHP;

	[Token(Token = "0x400183E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public int _ParuHP;

	[Token(Token = "0x400183F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public int _TeamHP;

	[Token(Token = "0x4001840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public int _ReqEffect_pars;

	[Token(Token = "0x4001841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public int _ReqEffect_case;

	[Token(Token = "0x4001842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public int _Def_pars;

	[Token(Token = "0x4001843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public int _Def_team;

	[Token(Token = "0x4001844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public int _Def_case;

	[Token(Token = "0x4001845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public int _RepairCase;

	[Token(Token = "0x4001846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public int _RepairPars;

	[Token(Token = "0x4001847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public int _AbordDmg_shoot;

	[Token(Token = "0x4001848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public int _AbordDamage_min;

	[Token(Token = "0x4001849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public int _AbordDamage_max;

	[Token(Token = "0x400184A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public int _distance;

	[Token(Token = "0x400184B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public int _damage_TYPE;

	[Token(Token = "0x400184C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public int _damage_case;

	[Token(Token = "0x400184D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public int _damage_parus;

	[Token(Token = "0x400184E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public int _damage_team;

	[Token(Token = "0x400184F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public int _CanonsShootCount;

	[Token(Token = "0x4001850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public int _ShootZone_Wide;

	[Token(Token = "0x4001851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public int _Precision;

	[Token(Token = "0x4001852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public int _ShootZone_PrecisTime;

	[Token(Token = "0x4001853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public int _ReloadSpeed;

	[Token(Token = "0x4001854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public int _Rotate_limit;

	[Token(Token = "0x4001855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public int _Rotate_speed;

	[Token(Token = "0x4001856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public int _Zoom;

	[Token(Token = "0x4001857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public int _ScanSpeed;

	[Token(Token = "0x4001858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public string _ScanPARAMS;

	[Token(Token = "0x4001859")]
	public const string PiastresId = "piastr";

	[Token(Token = "0x400185A")]
	public const int PiastresIndex = -2;

	[Token(Token = "0x400185B")]
	public const string RandomPiastresId = "RandPiastr";

	[Token(Token = "0x400185C")]
	public const int RandomPiastresIndex = -200;

	[Token(Token = "0x400185D")]
	public const string RandomArtefactId = "RandArtef";

	[Token(Token = "0x400185E")]
	public const int RandomArtefactIndex = -201;

	[Token(Token = "0x400185F")]
	public const string RandomNewLootId = "RandNewLoot";

	[Token(Token = "0x4001860")]
	public const int RandomNewLootIndex = -202;

	[Token(Token = "0x4001861")]
	public const string RandomAlcoholId = "Rand_Rum";

	[Token(Token = "0x4001862")]
	public const int RandomAlcoholIndex = -203;

	[Token(Token = "0x170001BC")]
	public bool NeedRotateIcon
	{
		[Token(Token = "0x60010C8")]
		[Address(RVA = "0x1668FBC", Offset = "0x1668FBC", VA = "0x1668FBC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001BD")]
	public bool IsOfficer
	{
		[Token(Token = "0x60010C9")]
		[Address(RVA = "0x1668FD8", Offset = "0x1668FD8", VA = "0x1668FD8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001BE")]
	public bool IsDecor
	{
		[Token(Token = "0x60010CA")]
		[Address(RVA = "0x1668FFC", Offset = "0x1668FFC", VA = "0x1668FFC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001BF")]
	public bool CanGetRidOf
	{
		[Token(Token = "0x60010CB")]
		[Address(RVA = "0x1669038", Offset = "0x1669038", VA = "0x1669038")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60010CC")]
	[Address(RVA = "0x16690B8", Offset = "0x16690B8", VA = "0x16690B8")]
	public Tovar()
	{
	}
}
[Token(Token = "0x20002D5")]
public class TowarListLoad : MonoBehaviour
{
	[Token(Token = "0x4001863")]
	public const string ID_OFFICER_SAIL = "Off_P_1";

	[Token(Token = "0x4001864")]
	public const string ID_Canon = "Cannons02";

	[Token(Token = "0x4001865")]
	public const string ID_Canon_prk = "Canon_prk_2";

	[Token(Token = "0x4001866")]
	public const string ID_Xp_point = "Xp_point";

	[Token(Token = "0x4001867")]
	public const string ID_skill_point = "skill_point";

	[Token(Token = "0x4001868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Tovar XP_pointTowar;

	[Token(Token = "0x4001869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Tovar I_was_Here;

	[Token(Token = "0x400186A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Tovar Skill_pointTowar;

	[Token(Token = "0x400186B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Tovar Rum;

	[Token(Token = "0x400186C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Tovar Free_ammo_pirates;

	[Token(Token = "0x400186D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static Tovar FreeAmmoKnippel;

	[Token(Token = "0x400186E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static Tovar Free_ammo_dominion;

	[Token(Token = "0x400186F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static Tovar LeviatansClaw;

	[Token(Token = "0x4001870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static Tovar Oscar;

	[Token(Token = "0x4001871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static Tovar TEAM_rank_A1;

	[Token(Token = "0x4001872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static Tovar TEAM_rank_P1;

	[Token(Token = "0x4001873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static Tovar TEAM_rank_C1;

	[Token(Token = "0x4001874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static Tovar TEAM_rank_Wund1;

	[Token(Token = "0x4001875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static Tovar TEAM_rank_A2;

	[Token(Token = "0x4001876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static Tovar TEAM_rank_P2;

	[Token(Token = "0x4001877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static Tovar TEAM_rank_C2;

	[Token(Token = "0x4001878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static Tovar TEAM_rank_Wund2;

	[Token(Token = "0x4001879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static Tovar TEAM_rank_A3;

	[Token(Token = "0x400187A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static Tovar TEAM_rank_P3;

	[Token(Token = "0x400187B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static Tovar TEAM_rank_C3;

	[Token(Token = "0x400187C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static Tovar TEAM_rank_Wund3;

	[Token(Token = "0x400187D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static Tovar TEAM_rank_A4;

	[Token(Token = "0x400187E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public static Tovar TEAM_rank_P4;

	[Token(Token = "0x400187F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static Tovar TEAM_rank_C4;

	[Token(Token = "0x4001880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public static Tovar TEAM_rank_Wund4;

	[Token(Token = "0x4001881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public static Tovar TEAM_rank_A5;

	[Token(Token = "0x4001882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public static Tovar TEAM_rank_P5;

	[Token(Token = "0x4001883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public static Tovar TEAM_rank_C5;

	[Token(Token = "0x4001884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public static Tovar TEAM_rank_Wund5;

	[Token(Token = "0x4001885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public static Tovar FirstGunInList;

	[Token(Token = "0x4001886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public static TowarListLoad singletone;

	[Token(Token = "0x4001887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F0F8", Offset = "0x57F0F8")]
	private List<Tovar> <Tovars>k__BackingField;

	[Token(Token = "0x170001C0")]
	public List<Tovar> Tovars
	{
		[Token(Token = "0x60010CD")]
		[Address(RVA = "0x1669294", Offset = "0x1669294", VA = "0x1669294")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58B224", Offset = "0x58B224")]
		get
		{
			return null;
		}
		[Token(Token = "0x60010CE")]
		[Address(RVA = "0x166929C", Offset = "0x166929C", VA = "0x166929C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58B234", Offset = "0x58B234")]
		private set
		{
		}
	}

	[Token(Token = "0x60010CF")]
	[Address(RVA = "0x16692A4", Offset = "0x16692A4", VA = "0x16692A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010D0")]
	[Address(RVA = "0x166932C", Offset = "0x166932C", VA = "0x166932C")]
	public static List<Tovar> GetTovars()
	{
		return null;
	}

	[Token(Token = "0x60010D1")]
	[Address(RVA = "0x166DFE8", Offset = "0x166DFE8", VA = "0x166DFE8")]
	public int GetTypeByID(string id)
	{
		return default(int);
	}

	[Token(Token = "0x60010D2")]
	[Address(RVA = "0x166E130", Offset = "0x166E130", VA = "0x166E130")]
	public TowarListLoad()
	{
	}
}
[Token(Token = "0x20002D6")]
public class TowarLootLoad : MonoBehaviour
{
	[Token(Token = "0x4001888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TowarListLoad TowarListLoad;

	[Token(Token = "0x4001889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F108", Offset = "0x57F108")]
	private List<Loot> <LootList>k__BackingField;

	[Token(Token = "0x170001C1")]
	public List<Loot> LootList
	{
		[Token(Token = "0x60010D4")]
		[Address(RVA = "0x166E13C", Offset = "0x166E13C", VA = "0x166E13C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58B244", Offset = "0x58B244")]
		get
		{
			return null;
		}
		[Token(Token = "0x60010D5")]
		[Address(RVA = "0x166E144", Offset = "0x166E144", VA = "0x166E144")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58B254", Offset = "0x58B254")]
		private set
		{
		}
	}

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0x166E14C", Offset = "0x166E14C", VA = "0x166E14C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010D7")]
	[Address(RVA = "0x166E1CC", Offset = "0x166E1CC", VA = "0x166E1CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0x166E224", Offset = "0x166E224", VA = "0x166E224")]
	public static List<Loot> GetLootList(List<Tovar> tovars)
	{
		return null;
	}

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0x166EAE4", Offset = "0x166EAE4", VA = "0x166EAE4")]
	public TowarLootLoad()
	{
	}
}
[Token(Token = "0x20002D7")]
public class TownDetector : MonoBehaviour
{
	[Token(Token = "0x20002D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578DE4", Offset = "0x578DE4")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Tovar> saleList;

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0x15887EC", Offset = "0x15887EC", VA = "0x15887EC")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0x15887F4", Offset = "0x15887F4", VA = "0x15887F4")]
		internal bool <SysEnterTown>b__1(Tovar t)
		{
			return default(bool);
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0x158889C", Offset = "0x158889C", VA = "0x158889C")]
		internal bool <SysEnterTown>b__2(Tovar t)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x20002D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578DF4", Offset = "0x578DF4")]
	private sealed class <>c
	{
		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<Tovar> <>9__10_0;

		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Predicate<Ship> <>9__11_0;

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x1588770", Offset = "0x1588770", VA = "0x1588770")]
		public <>c()
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x1588778", Offset = "0x1588778", VA = "0x1588778")]
		internal bool <SysEnterTown>b__10_0(Tovar t)
		{
			return default(bool);
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x15887D0", Offset = "0x15887D0", VA = "0x15887D0")]
		internal bool <Enter_TOWN>b__11_0(Ship s)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578E04", Offset = "0x578E04")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int nine_ded;

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x1588918", Offset = "0x1588918", VA = "0x1588918")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0x1588920", Offset = "0x1588920", VA = "0x1588920")]
		internal void <Enter_TOWN>b__1()
		{
		}
	}

	[Token(Token = "0x20002DB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578E14", Offset = "0x578E14")]
	private sealed class <>c__DisplayClass11_1
	{
		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action LoseTeam;

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0x15899FC", Offset = "0x15899FC", VA = "0x15899FC")]
		public <>c__DisplayClass11_1()
		{
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0x1589A04", Offset = "0x1589A04", VA = "0x1589A04")]
		internal void <Enter_TOWN>b__2()
		{
		}
	}

	[Token(Token = "0x400188A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F118", Offset = "0x57F118")]
	private NewEvent <eventLink>k__BackingField;

	[Token(Token = "0x400188B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int eventLinkEXE;

	[Token(Token = "0x400188C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject TownAreaMy;

	[Token(Token = "0x400188D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float timer;

	[Token(Token = "0x400188E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool AllowEnter;

	[Token(Token = "0x400188F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool AskOnce;

	[Token(Token = "0x4001890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int EnterCount;

	[Token(Token = "0x170001C2")]
	public NewEvent eventLink
	{
		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x166EAEC", Offset = "0x166EAEC", VA = "0x166EAEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58B264", Offset = "0x58B264")]
		get
		{
			return null;
		}
		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x166EAF4", Offset = "0x166EAF4", VA = "0x166EAF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58B274", Offset = "0x58B274")]
		set
		{
		}
	}

	[Token(Token = "0x60010DC")]
	[Address(RVA = "0x166EAFC", Offset = "0x166EAFC", VA = "0x166EAFC")]
	public static void SysEnterTown(NewEvent link, int exer)
	{
	}

	[Token(Token = "0x60010DD")]
	[Address(RVA = "0x166FDEC", Offset = "0x166FDEC", VA = "0x166FDEC")]
	public void Enter_TOWN()
	{
	}

	[Token(Token = "0x60010DE")]
	[Address(RVA = "0x16707DC", Offset = "0x16707DC", VA = "0x16707DC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0x1670A40", Offset = "0x1670A40", VA = "0x1670A40")]
	private void Update()
	{
	}

	[Token(Token = "0x60010E0")]
	[Address(RVA = "0x1671650", Offset = "0x1671650", VA = "0x1671650")]
	public TownDetector()
	{
	}

	[Token(Token = "0x60010E2")]
	[Address(RVA = "0x167165C", Offset = "0x167165C", VA = "0x167165C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58B284", Offset = "0x58B284")]
	private void <Update>b__13_0()
	{
	}

	[Token(Token = "0x60010E3")]
	[Address(RVA = "0x1671834", Offset = "0x1671834", VA = "0x1671834")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58B294", Offset = "0x58B294")]
	private void <Update>b__13_1()
	{
	}
}
[Token(Token = "0x20002DC")]
public class TownPanel : MonoBehaviour
{
	[Token(Token = "0x60010EF")]
	[Address(RVA = "0x1671990", Offset = "0x1671990", VA = "0x1671990")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010F0")]
	[Address(RVA = "0x1672038", Offset = "0x1672038", VA = "0x1672038")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010F1")]
	[Address(RVA = "0x16722D4", Offset = "0x16722D4", VA = "0x16722D4")]
	private void OnLanguageChanged()
	{
	}

	[Token(Token = "0x60010F2")]
	[Address(RVA = "0x167256C", Offset = "0x167256C", VA = "0x167256C")]
	public TownPanel()
	{
	}
}
[Token(Token = "0x20002DD")]
public class Trum_managment_new : MonoBehaviour
{
	[Token(Token = "0x4001897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float OffsetX;

	[Token(Token = "0x4001898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float TargOffsetX;

	[Token(Token = "0x4001899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool SetTrumAndMarket;

	[Token(Token = "0x400189A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	public static bool SetTrumAndStorage;

	[Token(Token = "0x400189B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Trum_managment_new singletone;

	[Token(Token = "0x400189C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ShipHL;

	[Token(Token = "0x400189D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject StorageHL;

	[Token(Token = "0x400189E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject MarketHL;

	[Token(Token = "0x400189F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Ship;

	[Token(Token = "0x40018A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject Storage;

	[Token(Token = "0x40018A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject Market;

	[Token(Token = "0x40018A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject NoStoreText;

	[Token(Token = "0x40018A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject buttonAllToStorage;

	[Token(Token = "0x40018A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject buttonAllToShip;

	[Token(Token = "0x40018A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject[] Trum_Categories;

	[Token(Token = "0x40018A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject[] Storage_Categories;

	[Token(Token = "0x40018A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject[] Market_Categories;

	[Token(Token = "0x40018A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public HelpContentData HelpData;

	[Token(Token = "0x40018A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool isStorageGamepad;

	[Token(Token = "0x40018AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool isMarketGamepad;

	[Token(Token = "0x40018AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	public bool isShipGamepad;

	[Token(Token = "0x40018AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
	public bool returnFromStorages;

	[Token(Token = "0x40018AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool SlideDetection;

	[Token(Token = "0x60010F3")]
	[Address(RVA = "0x158E124", Offset = "0x158E124", VA = "0x158E124")]
	private void Start()
	{
	}

	[Token(Token = "0x60010F4")]
	[Address(RVA = "0x158E6F4", Offset = "0x158E6F4", VA = "0x158E6F4")]
	public void RefreshTrum()
	{
	}

	[Token(Token = "0x60010F5")]
	[Address(RVA = "0x158E9C8", Offset = "0x158E9C8", VA = "0x158E9C8")]
	public void RefreshStorage()
	{
	}

	[Token(Token = "0x60010F6")]
	[Address(RVA = "0x158EC34", Offset = "0x158EC34", VA = "0x158EC34")]
	public void RefreshMarket()
	{
	}

	[Token(Token = "0x60010F7")]
	[Address(RVA = "0x158F590", Offset = "0x158F590", VA = "0x158F590")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010F8")]
	[Address(RVA = "0x158FD4C", Offset = "0x158FD4C", VA = "0x158FD4C")]
	private void Update()
	{
	}

	[Token(Token = "0x60010F9")]
	[Address(RVA = "0x158FB58", Offset = "0x158FB58", VA = "0x158FB58")]
	private void SetStorageLinks()
	{
	}

	[Token(Token = "0x60010FA")]
	[Address(RVA = "0x1590690", Offset = "0x1590690", VA = "0x1590690")]
	public Trum_managment_new()
	{
	}
}
[Token(Token = "0x20002DE")]
public class Turtle_Head : MonoBehaviour
{
	[Token(Token = "0x40018AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float TimeToRot;

	[Token(Token = "0x40018AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float TargRot;

	[Token(Token = "0x40018B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float Rot;

	[Token(Token = "0x40018B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float TargRotX;

	[Token(Token = "0x40018B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float RotX;

	[Token(Token = "0x60010FC")]
	[Address(RVA = "0x159069C", Offset = "0x159069C", VA = "0x159069C")]
	private void Update()
	{
	}

	[Token(Token = "0x60010FD")]
	[Address(RVA = "0x15907E4", Offset = "0x15907E4", VA = "0x15907E4")]
	public Turtle_Head()
	{
	}
}
[Token(Token = "0x20002DF")]
public abstract class AbstractQuest : MonoBehaviour
{
	[Token(Token = "0x20002E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578E24", Offset = "0x578E24")]
	private sealed class <>c__DisplayClass116_0
	{
		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AbstractQuest <>4__this;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public H_Core.H_delegate GiveCustomReward;

		[Token(Token = "0x6001169")]
		[Address(RVA = "0x15DBA2C", Offset = "0x15DBA2C", VA = "0x15DBA2C")]
		public <>c__DisplayClass116_0()
		{
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0x15DBA34", Offset = "0x15DBA34", VA = "0x15DBA34")]
		internal void <ShowRewardWindow>b__0()
		{
		}
	}

	[Token(Token = "0x40018B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool isTutorNow;

	[Token(Token = "0x40018B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool isAdditionalScene;

	[Token(Token = "0x40018B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected NewEvent currentEvent;

	[Token(Token = "0x40018B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CMD questCMD;

	[Token(Token = "0x40018B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public string additionalScene;

	[Token(Token = "0x40018B8")]
	[HideInInspector]
	public const string EVENT_NAME = "t_quest_";

	[Token(Token = "0x40018B9")]
	[HideInInspector]
	public const string QUEST_NAME = "t_quest_";

	[Token(Token = "0x40018BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private HighlightEffect[] allHighlightInterfaces;

	[Token(Token = "0x170001C3")]
	public static bool isVRTutor
	{
		[Token(Token = "0x60010FE")]
		[Address(RVA = "0x7DA17C", Offset = "0x7DA17C", VA = "0x7DA17C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60010FF")]
		[Address(RVA = "0x7DA40C", Offset = "0x7DA40C", VA = "0x7DA40C")]
		set
		{
		}
	}

	[Token(Token = "0x170001C4")]
	public bool isLockedMyShipHP
	{
		[Token(Token = "0x6001104")]
		[Address(RVA = "0x7DA8EC", Offset = "0x7DA8EC", VA = "0x7DA8EC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001105")]
		[Address(RVA = "0x7DA950", Offset = "0x7DA950", VA = "0x7DA950")]
		set
		{
		}
	}

	[Token(Token = "0x170001C5")]
	public bool isLockedMyCaptainHP
	{
		[Token(Token = "0x6001106")]
		[Address(RVA = "0x7DA9C4", Offset = "0x7DA9C4", VA = "0x7DA9C4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001107")]
		[Address(RVA = "0x7DAA28", Offset = "0x7DAA28", VA = "0x7DAA28")]
		set
		{
		}
	}

	[Token(Token = "0x170001C6")]
	public bool isLockedEnemyCaseParusHP
	{
		[Token(Token = "0x6001108")]
		[Address(RVA = "0x7DAA9C", Offset = "0x7DAA9C", VA = "0x7DAA9C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001109")]
		[Address(RVA = "0x7DAB00", Offset = "0x7DAB00", VA = "0x7DAB00")]
		set
		{
		}
	}

	[Token(Token = "0x170001C7")]
	public bool isLockedEnemyShipParusHP
	{
		[Token(Token = "0x600110A")]
		[Address(RVA = "0x7DAB74", Offset = "0x7DAB74", VA = "0x7DAB74")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600110B")]
		[Address(RVA = "0x7DABD8", Offset = "0x7DABD8", VA = "0x7DABD8")]
		set
		{
		}
	}

	[Token(Token = "0x170001C8")]
	public bool isSearchAreaIncreased
	{
		[Token(Token = "0x600110C")]
		[Address(RVA = "0x7DAC4C", Offset = "0x7DAC4C", VA = "0x7DAC4C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600110D")]
		[Address(RVA = "0x7DACB0", Offset = "0x7DACB0", VA = "0x7DACB0")]
		set
		{
		}
	}

	[Token(Token = "0x170001C9")]
	public bool isDisabledBackButton
	{
		[Token(Token = "0x600110E")]
		[Address(RVA = "0x7DAD24", Offset = "0x7DAD24", VA = "0x7DAD24")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600110F")]
		[Address(RVA = "0x7DAD88", Offset = "0x7DAD88", VA = "0x7DAD88")]
		set
		{
		}
	}

	[Token(Token = "0x170001CA")]
	public bool isDisabledShipRam
	{
		[Token(Token = "0x6001110")]
		[Address(RVA = "0x7DADFC", Offset = "0x7DADFC", VA = "0x7DADFC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001111")]
		[Address(RVA = "0x7DAE60", Offset = "0x7DAE60", VA = "0x7DAE60")]
		set
		{
		}
	}

	[Token(Token = "0x170001CB")]
	public bool isDisabledSave
	{
		[Token(Token = "0x6001112")]
		[Address(RVA = "0x7DAED4", Offset = "0x7DAED4", VA = "0x7DAED4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001113")]
		[Address(RVA = "0x7DAF38", Offset = "0x7DAF38", VA = "0x7DAF38")]
		set
		{
		}
	}

	[Token(Token = "0x170001CC")]
	public bool isDisabledAnalytics
	{
		[Token(Token = "0x6001114")]
		[Address(RVA = "0x7DAFAC", Offset = "0x7DAFAC", VA = "0x7DAFAC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001115")]
		[Address(RVA = "0x7DB010", Offset = "0x7DB010", VA = "0x7DB010")]
		set
		{
		}
	}

	[Token(Token = "0x170001CD")]
	public bool isDisabledAdditionalCannons
	{
		[Token(Token = "0x6001116")]
		[Address(RVA = "0x7DB084", Offset = "0x7DB084", VA = "0x7DB084")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001117")]
		[Address(RVA = "0x7DB0E8", Offset = "0x7DB0E8", VA = "0x7DB0E8")]
		set
		{
		}
	}

	[Token(Token = "0x170001CE")]
	public bool isDisabledEnemyFiring
	{
		[Token(Token = "0x6001118")]
		[Address(RVA = "0x7DB15C", Offset = "0x7DB15C", VA = "0x7DB15C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001119")]
		[Address(RVA = "0x7DB1C0", Offset = "0x7DB1C0", VA = "0x7DB1C0")]
		set
		{
		}
	}

	[Token(Token = "0x170001CF")]
	public bool isDisabledWindChanging
	{
		[Token(Token = "0x600111A")]
		[Address(RVA = "0x7DB234", Offset = "0x7DB234", VA = "0x7DB234")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600111B")]
		[Address(RVA = "0x7DB298", Offset = "0x7DB298", VA = "0x7DB298")]
		set
		{
		}
	}

	[Token(Token = "0x170001D0")]
	public bool isDisabledOpenWorldResourcesLoading
	{
		[Token(Token = "0x600111C")]
		[Address(RVA = "0x7DB30C", Offset = "0x7DB30C", VA = "0x7DB30C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600111D")]
		[Address(RVA = "0x7DB370", Offset = "0x7DB370", VA = "0x7DB370")]
		set
		{
		}
	}

	[Token(Token = "0x170001D1")]
	public bool isDisabledMapMovement
	{
		[Token(Token = "0x600111E")]
		[Address(RVA = "0x7DB3E4", Offset = "0x7DB3E4", VA = "0x7DB3E4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600111F")]
		[Address(RVA = "0x7DB448", Offset = "0x7DB448", VA = "0x7DB448")]
		set
		{
		}
	}

	[Token(Token = "0x170001D2")]
	public bool isDisabledPointToSwim
	{
		[Token(Token = "0x6001120")]
		[Address(RVA = "0x7DB4BC", Offset = "0x7DB4BC", VA = "0x7DB4BC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001121")]
		[Address(RVA = "0x7DB520", Offset = "0x7DB520", VA = "0x7DB520")]
		set
		{
		}
	}

	[Token(Token = "0x170001D3")]
	public bool isDisabledShipSails
	{
		[Token(Token = "0x6001122")]
		[Address(RVA = "0x7DB594", Offset = "0x7DB594", VA = "0x7DB594")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001123")]
		[Address(RVA = "0x7DB5F8", Offset = "0x7DB5F8", VA = "0x7DB5F8")]
		set
		{
		}
	}

	[Token(Token = "0x170001D4")]
	public bool isDisabledLiteVersionVerification
	{
		[Token(Token = "0x6001124")]
		[Address(RVA = "0x7DB66C", Offset = "0x7DB66C", VA = "0x7DB66C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001125")]
		[Address(RVA = "0x7DB6D0", Offset = "0x7DB6D0", VA = "0x7DB6D0")]
		set
		{
		}
	}

	[Token(Token = "0x170001D5")]
	public bool isDisabledRainAndWind
	{
		[Token(Token = "0x6001126")]
		[Address(RVA = "0x7DB744", Offset = "0x7DB744", VA = "0x7DB744")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001127")]
		[Address(RVA = "0x7DB7A8", Offset = "0x7DB7A8", VA = "0x7DB7A8")]
		set
		{
		}
	}

	[Token(Token = "0x170001D6")]
	public bool isDisabledTornado
	{
		[Token(Token = "0x6001128")]
		[Address(RVA = "0x7DB81C", Offset = "0x7DB81C", VA = "0x7DB81C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001129")]
		[Address(RVA = "0x7DB880", Offset = "0x7DB880", VA = "0x7DB880")]
		set
		{
		}
	}

	[Token(Token = "0x170001D7")]
	public bool isDisabledEnemyShipSpawning
	{
		[Token(Token = "0x600112A")]
		[Address(RVA = "0x7DB8F4", Offset = "0x7DB8F4", VA = "0x7DB8F4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600112B")]
		[Address(RVA = "0x7DB958", Offset = "0x7DB958", VA = "0x7DB958")]
		set
		{
		}
	}

	[Token(Token = "0x170001D8")]
	public bool isDisabledArtefact
	{
		[Token(Token = "0x600112C")]
		[Address(RVA = "0x7DB9CC", Offset = "0x7DB9CC", VA = "0x7DB9CC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600112D")]
		[Address(RVA = "0x7DBA30", Offset = "0x7DBA30", VA = "0x7DBA30")]
		set
		{
		}
	}

	[Token(Token = "0x170001D9")]
	public bool isDisabledJournalCall
	{
		[Token(Token = "0x600112E")]
		[Address(RVA = "0x7DBAA4", Offset = "0x7DBAA4", VA = "0x7DBAA4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600112F")]
		[Address(RVA = "0x7DBB08", Offset = "0x7DBB08", VA = "0x7DBB08")]
		set
		{
		}
	}

	[Token(Token = "0x170001DA")]
	public bool isDisabledSpyGlass
	{
		[Token(Token = "0x6001130")]
		[Address(RVA = "0x7DBB7C", Offset = "0x7DBB7C", VA = "0x7DBB7C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001131")]
		[Address(RVA = "0x7DBBE0", Offset = "0x7DBBE0", VA = "0x7DBBE0")]
		set
		{
		}
	}

	[Token(Token = "0x170001DB")]
	public bool isDisabledShipRotation
	{
		[Token(Token = "0x6001132")]
		[Address(RVA = "0x7DBC54", Offset = "0x7DBC54", VA = "0x7DBC54")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001133")]
		[Address(RVA = "0x7DBCB8", Offset = "0x7DBCB8", VA = "0x7DBCB8")]
		set
		{
		}
	}

	[Token(Token = "0x170001DC")]
	public bool isDisabledShooting
	{
		[Token(Token = "0x6001134")]
		[Address(RVA = "0x7DBD2C", Offset = "0x7DBD2C", VA = "0x7DBD2C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001135")]
		[Address(RVA = "0x7DBD90", Offset = "0x7DBD90", VA = "0x7DBD90")]
		set
		{
		}
	}

	[Token(Token = "0x170001DD")]
	public bool isDisabledAmmunitionSwitch
	{
		[Token(Token = "0x6001136")]
		[Address(RVA = "0x7DBE04", Offset = "0x7DBE04", VA = "0x7DBE04")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001137")]
		[Address(RVA = "0x7DBE68", Offset = "0x7DBE68", VA = "0x7DBE68")]
		set
		{
		}
	}

	[Token(Token = "0x170001DE")]
	public bool isDisabledHintHP
	{
		[Token(Token = "0x6001138")]
		[Address(RVA = "0x7DBEDC", Offset = "0x7DBEDC", VA = "0x7DBEDC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001139")]
		[Address(RVA = "0x7DBF40", Offset = "0x7DBF40", VA = "0x7DBF40")]
		set
		{
		}
	}

	[Token(Token = "0x170001DF")]
	public bool isDisabledHintMorale
	{
		[Token(Token = "0x600113A")]
		[Address(RVA = "0x7DBFB4", Offset = "0x7DBFB4", VA = "0x7DBFB4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600113B")]
		[Address(RVA = "0x7DC018", Offset = "0x7DC018", VA = "0x7DC018")]
		set
		{
		}
	}

	[Token(Token = "0x170001E0")]
	public bool isDisabledCannonRotation
	{
		[Token(Token = "0x600113C")]
		[Address(RVA = "0x7DC08C", Offset = "0x7DC08C", VA = "0x7DC08C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600113D")]
		[Address(RVA = "0x7DC0F0", Offset = "0x7DC0F0", VA = "0x7DC0F0")]
		set
		{
		}
	}

	[Token(Token = "0x170001E1")]
	public bool isDisabledFreeCamera
	{
		[Token(Token = "0x600113E")]
		[Address(RVA = "0x7DC164", Offset = "0x7DC164", VA = "0x7DC164")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600113F")]
		[Address(RVA = "0x7DC1C8", Offset = "0x7DC1C8", VA = "0x7DC1C8")]
		set
		{
		}
	}

	[Token(Token = "0x170001E2")]
	public Button btnEquip
	{
		[Token(Token = "0x6001152")]
		[Address(RVA = "0x7DD6BC", Offset = "0x7DD6BC", VA = "0x7DD6BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001E3")]
	public Button btnArtef
	{
		[Token(Token = "0x6001153")]
		[Address(RVA = "0x7DD878", Offset = "0x7DD878", VA = "0x7DD878")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001E4")]
	public Button btnXP_captain
	{
		[Token(Token = "0x6001154")]
		[Address(RVA = "0x7DDA34", Offset = "0x7DDA34", VA = "0x7DDA34")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001E5")]
	public Button btnTeam
	{
		[Token(Token = "0x6001155")]
		[Address(RVA = "0x7DDBF0", Offset = "0x7DDBF0", VA = "0x7DDBF0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001E6")]
	public Button btnTrum
	{
		[Token(Token = "0x6001156")]
		[Address(RVA = "0x7DDDAC", Offset = "0x7DDDAC", VA = "0x7DDDAC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001E7")]
	public Button btnQuest
	{
		[Token(Token = "0x6001157")]
		[Address(RVA = "0x7DDF68", Offset = "0x7DDF68", VA = "0x7DDF68")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001E8")]
	public Button btnShip_As_Slot
	{
		[Token(Token = "0x6001158")]
		[Address(RVA = "0x7DE124", Offset = "0x7DE124", VA = "0x7DE124")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001E9")]
	public Button btnFractionChange
	{
		[Token(Token = "0x6001159")]
		[Address(RVA = "0x7DE2DC", Offset = "0x7DE2DC", VA = "0x7DE2DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001EA")]
	public Button btnSwitchToMap
	{
		[Token(Token = "0x600115A")]
		[Address(RVA = "0x7DE35C", Offset = "0x7DE35C", VA = "0x7DE35C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001EB")]
	public Button btnJournal
	{
		[Token(Token = "0x600115B")]
		[Address(RVA = "0x7DE3D0", Offset = "0x7DE3D0", VA = "0x7DE3D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001EC")]
	public Button btnSpeedUP
	{
		[Token(Token = "0x600115C")]
		[Address(RVA = "0x7DE444", Offset = "0x7DE444", VA = "0x7DE444")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001ED")]
	public Button btnSails
	{
		[Token(Token = "0x600115D")]
		[Address(RVA = "0x7DE4B8", Offset = "0x7DE4B8", VA = "0x7DE4B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001EE")]
	public Button btnSwitchToWorld
	{
		[Token(Token = "0x600115E")]
		[Address(RVA = "0x7DE55C", Offset = "0x7DE55C", VA = "0x7DE55C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001EF")]
	public Button btnZoom
	{
		[Token(Token = "0x600115F")]
		[Address(RVA = "0x7DE5D0", Offset = "0x7DE5D0", VA = "0x7DE5D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F0")]
	public Button btnShoot
	{
		[Token(Token = "0x6001160")]
		[Address(RVA = "0x7DE65C", Offset = "0x7DE65C", VA = "0x7DE65C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F1")]
	public Button btnArtefact0
	{
		[Token(Token = "0x6001161")]
		[Address(RVA = "0x7DE700", Offset = "0x7DE700", VA = "0x7DE700")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F2")]
	public Button btnBack
	{
		[Token(Token = "0x6001162")]
		[Address(RVA = "0x7DE78C", Offset = "0x7DE78C", VA = "0x7DE78C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F3")]
	public Button btnBackMobile
	{
		[Token(Token = "0x6001163")]
		[Address(RVA = "0x7DE834", Offset = "0x7DE834", VA = "0x7DE834")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F4")]
	public Button btnChooseAmmunition
	{
		[Token(Token = "0x6001164")]
		[Address(RVA = "0x7DE8C0", Offset = "0x7DE8C0", VA = "0x7DE8C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F5")]
	public Button btnNetwork
	{
		[Token(Token = "0x6001165")]
		[Address(RVA = "0x7DE964", Offset = "0x7DE964", VA = "0x7DE964")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F6")]
	public Button btnNetworkRegion
	{
		[Token(Token = "0x6001166")]
		[Address(RVA = "0x7DE9FC", Offset = "0x7DE9FC", VA = "0x7DE9FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001100")]
	public abstract void Launch();

	[Token(Token = "0x6001101")]
	[Address(RVA = "0x7DA670", Offset = "0x7DA670", VA = "0x7DA670")]
	public void SetEvent(NewEvent currentEvent)
	{
	}

	[Token(Token = "0x6001102")]
	[Address(RVA = "0x7DA78C", Offset = "0x7DA78C", VA = "0x7DA78C")]
	public void IncreaseEventStep()
	{
	}

	[Token(Token = "0x6001103")]
	[Address(RVA = "0x7DA86C", Offset = "0x7DA86C", VA = "0x7DA86C")]
	public void EndQuest()
	{
	}

	[Token(Token = "0x6001140")]
	[Address(RVA = "0x7DC23C", Offset = "0x7DC23C", VA = "0x7DC23C")]
	public void SetEnabledButton(GameObject go, bool active)
	{
	}

	[Token(Token = "0x6001141")]
	[Address(RVA = "0x7DC310", Offset = "0x7DC310", VA = "0x7DC310")]
	public void SetEnabledDrag(GameObject go, bool active)
	{
	}

	[Token(Token = "0x6001142")]
	[Address(RVA = "0x7DC3E4", Offset = "0x7DC3E4", VA = "0x7DC3E4")]
	public void SetInteractibleButton(GameObject go, bool active)
	{
	}

	[Token(Token = "0x6001143")]
	[Address(RVA = "0x7DC4B8", Offset = "0x7DC4B8", VA = "0x7DC4B8")]
	public void FasterReload()
	{
	}

	[Token(Token = "0x6001144")]
	[Address(RVA = "0x7DC570", Offset = "0x7DC570", VA = "0x7DC570")]
	public void SetActiveAllQuestButtons(bool active)
	{
	}

	[Token(Token = "0x6001145")]
	[Address(RVA = "0x7DA6A8", Offset = "0x7DA6A8", VA = "0x7DA6A8")]
	private CMD GetQuestCMD()
	{
		return null;
	}

	[Token(Token = "0x6001146")]
	[Address(RVA = "0x7DC640", Offset = "0x7DC640", VA = "0x7DC640")]
	private CMD GetRewardCMD()
	{
		return null;
	}

	[Token(Token = "0x6001147")]
	[Address(RVA = "0x7DC724", Offset = "0x7DC724", VA = "0x7DC724")]
	public bool IsRewardReceived()
	{
		return default(bool);
	}

	[Token(Token = "0x6001148")]
	[Address(RVA = "0x7DC758", Offset = "0x7DC758", VA = "0x7DC758")]
	public void SetRewardToDefault()
	{
	}

	[Token(Token = "0x6001149")]
	[Address(RVA = "0x7DC7E8", Offset = "0x7DC7E8", VA = "0x7DC7E8")]
	public void GiveReward()
	{
	}

	[Token(Token = "0x600114A")]
	[Address(RVA = "0x7DCB64", Offset = "0x7DCB64", VA = "0x7DCB64")]
	public void SetTimeToDay([Out] float savedTime)
	{
	}

	[Token(Token = "0x600114B")]
	[Address(RVA = "0x7DCC88", Offset = "0x7DCC88", VA = "0x7DCC88")]
	public void RestoreTime(float savedTime)
	{
	}

	[Token(Token = "0x600114C")]
	[Address(RVA = "0x7DC860", Offset = "0x7DC860", VA = "0x7DC860")]
	public void ShowRewardWindow([Optional] H_Core.H_delegate GiveCustomReward)
	{
	}

	[Token(Token = "0x600114D")]
	[Address(RVA = "0x7DCE28", Offset = "0x7DCE28", VA = "0x7DCE28")]
	public void GiveRewardAndEndQuest(H_Core.H_delegate GiveCustomReward)
	{
	}

	[Token(Token = "0x600114E")]
	[Address(RVA = "0x7DD328", Offset = "0x7DD328", VA = "0x7DD328")]
	private void DisableEvent()
	{
	}

	[Token(Token = "0x600114F")]
	[Address(RVA = "0x7DCF54", Offset = "0x7DCF54", VA = "0x7DCF54")]
	private void GiveQuestReward()
	{
	}

	[Token(Token = "0x6001150")]
	[Address(RVA = "0x7DD408", Offset = "0x7DD408", VA = "0x7DD408")]
	public void GetAllHighlightOutlines()
	{
	}

	[Token(Token = "0x6001151")]
	[Address(RVA = "0x7DD494", Offset = "0x7DD494", VA = "0x7DD494")]
	public void SwitchHighlightsOnDeckAndParuses(bool deck, bool paruses)
	{
	}

	[Token(Token = "0x6001167")]
	[Address(RVA = "0x7DEA88", Offset = "0x7DEA88", VA = "0x7DEA88")]
	protected AbstractQuest()
	{
	}
}
[Token(Token = "0x20002E1")]
public class TutorData : MonoBehaviour
{
	[Token(Token = "0x40018BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI MainText;

	[Token(Token = "0x40018BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_SpriteAsset assetPS4;

	[Token(Token = "0x40018BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_SpriteAsset assetXBOX;

	[Token(Token = "0x40018C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_SpriteAsset assetNS;

	[Token(Token = "0x40018C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_SpriteAsset assetVR;

	[Token(Token = "0x600116B")]
	[Address(RVA = "0x15907F4", Offset = "0x15907F4", VA = "0x15907F4")]
	private void Start()
	{
	}

	[Token(Token = "0x600116C")]
	[Address(RVA = "0x159081C", Offset = "0x159081C", VA = "0x159081C")]
	public TutorData()
	{
	}
}
[Token(Token = "0x20002E2")]
public class TutorialQuest0 : AbstractQuest
{
	[Token(Token = "0x20002E3")]
	public enum States
	{
		[Token(Token = "0x40018CD")]
		None,
		[Token(Token = "0x40018CE")]
		SpawnEnemy,
		[Token(Token = "0x40018CF")]
		QuestPreparation,
		[Token(Token = "0x40018D0")]
		CameraRotation,
		[Token(Token = "0x40018D1")]
		WaitForEnemyInTelegraf,
		[Token(Token = "0x40018D2")]
		ShootInformation,
		[Token(Token = "0x40018D3")]
		WaitForPlayetShootFirstTime,
		[Token(Token = "0x40018D4")]
		WaitAfterShoot,
		[Token(Token = "0x40018D5")]
		ShowReloadInformation,
		[Token(Token = "0x40018D6")]
		WaitForAccuracy,
		[Token(Token = "0x40018D7")]
		WaitForPlayerShootSecondTime,
		[Token(Token = "0x40018D8")]
		WaitForReload,
		[Token(Token = "0x40018D9")]
		WaitForFullAccuracy,
		[Token(Token = "0x40018DA")]
		AutoShoot,
		[Token(Token = "0x40018DB")]
		KillEnemyAndWait3Sec,
		[Token(Token = "0x40018DC")]
		PreparationForKraken,
		[Token(Token = "0x40018DD")]
		WaitForKraken,
		[Token(Token = "0x40018DE")]
		SpawnKraken,
		[Token(Token = "0x40018DF")]
		WaitForShipDestroyed,
		[Token(Token = "0x40018E0")]
		ExitTutorial
	}

	[Token(Token = "0x20002E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578E34", Offset = "0x578E34")]
	private sealed class <WaitSeconds>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialQuest0 <>4__this;

		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float time;

		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public States nextState;

		[Token(Token = "0x170001F7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600118F")]
			[Address(RVA = "0x1700C4C", Offset = "0x1700C4C", VA = "0x1700C4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001191")]
			[Address(RVA = "0x1700C94", Offset = "0x1700C94", VA = "0x1700C94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0x1700B50", Offset = "0x1700B50", VA = "0x1700B50")]
		[DebuggerHidden]
		public <WaitSeconds>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0x1700B7C", Offset = "0x1700B7C", VA = "0x1700B7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0x1700B80", Offset = "0x1700B80", VA = "0x1700B80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0x1700C54", Offset = "0x1700C54", VA = "0x1700C54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578E44", Offset = "0x578E44")]
	private sealed class <>c__DisplayClass25_0
	{
		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TutorialQuest0 <>4__this;

		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public States nextState;

		[Token(Token = "0x6001192")]
		[Address(RVA = "0x1700AA0", Offset = "0x1700AA0", VA = "0x1700AA0")]
		public <>c__DisplayClass25_0()
		{
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0x1700AA8", Offset = "0x1700AA8", VA = "0x1700AA8")]
		internal void <ShowShootInformation>b__0()
		{
		}
	}

	[Token(Token = "0x20002E6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578E54", Offset = "0x578E54")]
	private sealed class <>c__DisplayClass26_0
	{
		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TutorialQuest0 <>4__this;

		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public States nextState;

		[Token(Token = "0x6001194")]
		[Address(RVA = "0x1700ACC", Offset = "0x1700ACC", VA = "0x1700ACC")]
		public <>c__DisplayClass26_0()
		{
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0x1700AD4", Offset = "0x1700AD4", VA = "0x1700AD4")]
		internal void <ShowReloadInformation>b__0()
		{
		}
	}

	[Token(Token = "0x20002E7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578E64", Offset = "0x578E64")]
	private sealed class <>c__DisplayClass27_0
	{
		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TutorialQuest0 <>4__this;

		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public States nextState;

		[Token(Token = "0x6001196")]
		[Address(RVA = "0x1700AF8", Offset = "0x1700AF8", VA = "0x1700AF8")]
		public <>c__DisplayClass27_0()
		{
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0x1700B00", Offset = "0x1700B00", VA = "0x1700B00")]
		internal void <ShowAccuracyInfo>b__0()
		{
		}
	}

	[Token(Token = "0x20002E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578E74", Offset = "0x578E74")]
	private sealed class <>c__DisplayClass28_0
	{
		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TutorialQuest0 <>4__this;

		[Token(Token = "0x40018ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public States nextState;

		[Token(Token = "0x6001198")]
		[Address(RVA = "0x1700B24", Offset = "0x1700B24", VA = "0x1700B24")]
		public <>c__DisplayClass28_0()
		{
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0x1700B2C", Offset = "0x1700B2C", VA = "0x1700B2C")]
		internal void <LoadSea>b__0()
		{
		}
	}

	[Token(Token = "0x40018C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool isStartQuest;

	[Token(Token = "0x40018C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Sprite[] sprites;

	[Token(Token = "0x40018C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject kraken;

	[Token(Token = "0x40018C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject krakenInited;

	[Token(Token = "0x40018C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Ship enemyShip;

	[Token(Token = "0x40018C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private HighlightInterface highlight;

	[Token(Token = "0x40018C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SaveDataProfile profile;

	[Token(Token = "0x40018C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private States state;

	[Token(Token = "0x40018CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float timer;

	[Token(Token = "0x40018CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private States tempState;

	[Token(Token = "0x600116D")]
	[Address(RVA = "0x1590824", Offset = "0x1590824", VA = "0x1590824", Slot = "4")]
	public override void Launch()
	{
	}

	[Token(Token = "0x600116E")]
	[Address(RVA = "0x159112C", Offset = "0x159112C", VA = "0x159112C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600116F")]
	[Address(RVA = "0x159220C", Offset = "0x159220C", VA = "0x159220C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001170")]
	[Address(RVA = "0x1591220", Offset = "0x1591220", VA = "0x1591220")]
	private void QuestLogic()
	{
	}

	[Token(Token = "0x6001171")]
	[Address(RVA = "0x1593550", Offset = "0x1593550", VA = "0x1593550")]
	private void WaitForFullAccuracy()
	{
	}

	[Token(Token = "0x6001172")]
	[Address(RVA = "0x15937A4", Offset = "0x15937A4", VA = "0x15937A4")]
	private void SpawnKraken()
	{
	}

	[Token(Token = "0x6001173")]
	[Address(RVA = "0x159231C", Offset = "0x159231C", VA = "0x159231C")]
	private void SpawnEnemy()
	{
	}

	[Token(Token = "0x6001174")]
	[Address(RVA = "0x1593DF4", Offset = "0x1593DF4", VA = "0x1593DF4")]
	private void LoadProfile()
	{
	}

	[Token(Token = "0x6001175")]
	[Address(RVA = "0x1593A8C", Offset = "0x1593A8C", VA = "0x1593A8C")]
	private Ship SpawnEnemyShip()
	{
		return null;
	}

	[Token(Token = "0x6001176")]
	[Address(RVA = "0x1590A4C", Offset = "0x1590A4C", VA = "0x1590A4C")]
	private void SetQuestParametrs(bool active)
	{
	}

	[Token(Token = "0x6001177")]
	[Address(RVA = "0x15926C0", Offset = "0x15926C0", VA = "0x15926C0")]
	private void Preparation()
	{
	}

	[Token(Token = "0x6001178")]
	[Address(RVA = "0x1592978", Offset = "0x1592978", VA = "0x1592978")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58B2A4", Offset = "0x58B2A4")]
	private IEnumerator WaitSeconds(float time, States nextState)
	{
		return null;
	}

	[Token(Token = "0x6001179")]
	[Address(RVA = "0x1592A10", Offset = "0x1592A10", VA = "0x1592A10")]
	private void RotateCameraTowardsEnemy()
	{
	}

	[Token(Token = "0x600117A")]
	[Address(RVA = "0x159310C", Offset = "0x159310C", VA = "0x159310C")]
	private void SelectShootButton()
	{
	}

	[Token(Token = "0x600117B")]
	[Address(RVA = "0x1592B38", Offset = "0x1592B38", VA = "0x1592B38")]
	private void ShowShootInformation(States nextState)
	{
	}

	[Token(Token = "0x600117C")]
	[Address(RVA = "0x1592DE0", Offset = "0x1592DE0", VA = "0x1592DE0")]
	private void ShowReloadInformation(States nextState)
	{
	}

	[Token(Token = "0x600117D")]
	[Address(RVA = "0x1593234", Offset = "0x1593234", VA = "0x1593234")]
	private void ShowAccuracyInfo(States nextState)
	{
	}

	[Token(Token = "0x600117E")]
	[Address(RVA = "0x1591030", Offset = "0x1591030", VA = "0x1591030")]
	private void LoadSea(States nextState)
	{
	}

	[Token(Token = "0x600117F")]
	[Address(RVA = "0x1593F48", Offset = "0x1593F48", VA = "0x1593F48")]
	private void PlayerShooted(object obj)
	{
	}

	[Token(Token = "0x6001180")]
	[Address(RVA = "0x1594024", Offset = "0x1594024", VA = "0x1594024")]
	private void PlayerShootedSecondTime(object obj)
	{
	}

	[Token(Token = "0x6001181")]
	[Address(RVA = "0x159409C", Offset = "0x159409C", VA = "0x159409C")]
	private void ShowMap()
	{
	}

	[Token(Token = "0x6001182")]
	[Address(RVA = "0x1590D48", Offset = "0x1590D48", VA = "0x1590D48")]
	private void CreateFakeProfile()
	{
	}

	[Token(Token = "0x6001183")]
	[Address(RVA = "0x1593950", Offset = "0x1593950", VA = "0x1593950")]
	private void HideAllUI(bool status)
	{
	}

	[Token(Token = "0x6001184")]
	[Address(RVA = "0x1591158", Offset = "0x1591158", VA = "0x1591158")]
	private void HideAllNotify()
	{
	}

	[Token(Token = "0x6001185")]
	[Address(RVA = "0x159411C", Offset = "0x159411C", VA = "0x159411C")]
	private void SkipTutorial()
	{
	}

	[Token(Token = "0x6001186")]
	[Address(RVA = "0x159424C", Offset = "0x159424C", VA = "0x159424C")]
	private void SetupSkipTutorialBtn()
	{
	}

	[Token(Token = "0x6001187")]
	[Address(RVA = "0x15943E8", Offset = "0x15943E8", VA = "0x15943E8")]
	private void OnSkipTutorBtnClick()
	{
	}

	[Token(Token = "0x6001188")]
	[Address(RVA = "0x159456C", Offset = "0x159456C", VA = "0x159456C")]
	private void CloseMessage()
	{
	}

	[Token(Token = "0x6001189")]
	[Address(RVA = "0x15945D0", Offset = "0x15945D0", VA = "0x15945D0")]
	public TutorialQuest0()
	{
	}

	[Token(Token = "0x600118B")]
	[Address(RVA = "0x1594640", Offset = "0x1594640", VA = "0x1594640")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58B30C", Offset = "0x58B30C")]
	private void <QuestLogic>b__14_0()
	{
	}
}
[Token(Token = "0x20002E9")]
public class TutorialQuest1 : AbstractQuest
{
	[Token(Token = "0x20002EA")]
	public enum States
	{
		[Token(Token = "0x40018F8")]
		None,
		[Token(Token = "0x40018F9")]
		QuestPreparation,
		[Token(Token = "0x40018FA")]
		ShipRotate,
		[Token(Token = "0x40018FB")]
		ClosedInstructionForSails,
		[Token(Token = "0x40018FC")]
		WaitForPlayerSetSail,
		[Token(Token = "0x40018FD")]
		WaitForPlayerReachFirstArea,
		[Token(Token = "0x40018FE")]
		ClosedInstructionForSpeedUPSea,
		[Token(Token = "0x40018FF")]
		ClickSpeedUPSea,
		[Token(Token = "0x4001900")]
		WaitingForPlayerReachSecondArea,
		[Token(Token = "0x4001901")]
		ClosedInstructionForSpeedUPGlobalMap,
		[Token(Token = "0x4001902")]
		ClickSpeedUPSeaGlobalMap
	}

	[Token(Token = "0x20002EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578E84", Offset = "0x578E84")]
	private sealed class <OpenSea>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialQuest1 <>4__this;

		[Token(Token = "0x170001F9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011B3")]
			[Address(RVA = "0x1701108", Offset = "0x1701108", VA = "0x1701108", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011B5")]
			[Address(RVA = "0x1701150", Offset = "0x1701150", VA = "0x1701150", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0x1700F08", Offset = "0x1700F08", VA = "0x1700F08")]
		[DebuggerHidden]
		public <OpenSea>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x1700F34", Offset = "0x1700F34", VA = "0x1700F34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x1700F38", Offset = "0x1700F38", VA = "0x1700F38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0x1701110", Offset = "0x1701110", VA = "0x1701110", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578E94", Offset = "0x578E94")]
	private sealed class <>c__DisplayClass21_0
	{
		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TutorialQuest1 <>4__this;

		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public States nextState;

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0x1700C9C", Offset = "0x1700C9C", VA = "0x1700C9C")]
		public <>c__DisplayClass21_0()
		{
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0x1700CA4", Offset = "0x1700CA4", VA = "0x1700CA4")]
		internal void <ShowWindInformation>b__0()
		{
		}
	}

	[Token(Token = "0x20002ED")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578EA4", Offset = "0x578EA4")]
	private sealed class <>c__DisplayClass22_0
	{
		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TutorialQuest1 <>4__this;

		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public States nextState;

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0x1700CC8", Offset = "0x1700CC8", VA = "0x1700CC8")]
		public <>c__DisplayClass22_0()
		{
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0x1700CD0", Offset = "0x1700CD0", VA = "0x1700CD0")]
		internal void <ShowInformationWindow>b__0()
		{
		}
	}

	[Token(Token = "0x20002EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578EB4", Offset = "0x578EB4")]
	private sealed class <OpenMap>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialQuest1 <>4__this;

		[Token(Token = "0x170001FB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011BD")]
			[Address(RVA = "0x1700EB8", Offset = "0x1700EB8", VA = "0x1700EB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011BF")]
			[Address(RVA = "0x1700F00", Offset = "0x1700F00", VA = "0x1700F00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0x1700CF4", Offset = "0x1700CF4", VA = "0x1700CF4")]
		[DebuggerHidden]
		public <OpenMap>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0x1700D20", Offset = "0x1700D20", VA = "0x1700D20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0x1700D24", Offset = "0x1700D24", VA = "0x1700D24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0x1700EC0", Offset = "0x1700EC0", VA = "0x1700EC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40018EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool isSwimTutor;

	[Token(Token = "0x40018EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Sprite[] questSprites;

	[Token(Token = "0x40018F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject areaPrefab;

	[Token(Token = "0x40018F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private States state;

	[Token(Token = "0x40018F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private HighlightInterface highlight;

	[Token(Token = "0x40018F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TaskWindow task_wnd;

	[Token(Token = "0x40018F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isSpeedUpClicked;

	[Token(Token = "0x40018F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject targetArea;

	[Token(Token = "0x40018F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float savedTime;

	[Token(Token = "0x600119A")]
	[Address(RVA = "0x159464C", Offset = "0x159464C", VA = "0x159464C", Slot = "4")]
	public override void Launch()
	{
	}

	[Token(Token = "0x600119B")]
	[Address(RVA = "0x1594950", Offset = "0x1594950", VA = "0x1594950")]
	private void СloseMap()
	{
	}

	[Token(Token = "0x600119C")]
	[Address(RVA = "0x159497C", Offset = "0x159497C", VA = "0x159497C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58B36C", Offset = "0x58B36C")]
	private IEnumerator OpenSea()
	{
		return null;
	}

	[Token(Token = "0x600119D")]
	[Address(RVA = "0x15949FC", Offset = "0x15949FC", VA = "0x15949FC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600119E")]
	[Address(RVA = "0x1594A00", Offset = "0x1594A00", VA = "0x1594A00")]
	private void QuestLogic()
	{
	}

	[Token(Token = "0x600119F")]
	[Address(RVA = "0x1594850", Offset = "0x1594850", VA = "0x1594850")]
	private void SetQuestParametrsState(bool active)
	{
	}

	[Token(Token = "0x60011A0")]
	[Address(RVA = "0x1596304", Offset = "0x1596304", VA = "0x1596304")]
	private void DisableAllControl(bool action)
	{
	}

	[Token(Token = "0x60011A1")]
	[Address(RVA = "0x159637C", Offset = "0x159637C", VA = "0x159637C")]
	public void DisableAllUIButtons(bool status)
	{
	}

	[Token(Token = "0x60011A2")]
	[Address(RVA = "0x15961A4", Offset = "0x15961A4", VA = "0x15961A4")]
	private void SetInteractibleButtonSpeedUP(bool status)
	{
	}

	[Token(Token = "0x60011A3")]
	[Address(RVA = "0x1595D90", Offset = "0x1595D90", VA = "0x1595D90")]
	private static void StopShipRotation()
	{
	}

	[Token(Token = "0x60011A4")]
	[Address(RVA = "0x1595CD8", Offset = "0x1595CD8", VA = "0x1595CD8")]
	private bool IsShipDirectedByTheWind()
	{
		return default(bool);
	}

	[Token(Token = "0x60011A5")]
	[Address(RVA = "0x1595A14", Offset = "0x1595A14", VA = "0x1595A14")]
	public void ShowWindInformation(States nextState)
	{
	}

	[Token(Token = "0x60011A6")]
	[Address(RVA = "0x1595E50", Offset = "0x1595E50", VA = "0x1595E50")]
	public void ShowInformationWindow(string text, States nextState)
	{
	}

	[Token(Token = "0x60011A7")]
	[Address(RVA = "0x159586C", Offset = "0x159586C", VA = "0x159586C")]
	private void SpawnShip()
	{
	}

	[Token(Token = "0x60011A8")]
	[Address(RVA = "0x159615C", Offset = "0x159615C", VA = "0x159615C")]
	private bool IsPlayerReachedArea(Vector3 player, Vector3 target)
	{
		return default(bool);
	}

	[Token(Token = "0x60011A9")]
	[Address(RVA = "0x1596674", Offset = "0x1596674", VA = "0x1596674")]
	private void CloseSea()
	{
	}

	[Token(Token = "0x60011AA")]
	[Address(RVA = "0x15966A0", Offset = "0x15966A0", VA = "0x15966A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58B3D4", Offset = "0x58B3D4")]
	private IEnumerator OpenMap()
	{
		return null;
	}

	[Token(Token = "0x60011AB")]
	[Address(RVA = "0x1596720", Offset = "0x1596720", VA = "0x1596720")]
	private void SpeedUpClicked(object obj)
	{
	}

	[Token(Token = "0x60011AC")]
	[Address(RVA = "0x1595FBC", Offset = "0x1595FBC", VA = "0x1595FBC")]
	private GameObject SpawnAreaInFrontOfShip(float distance)
	{
		return null;
	}

	[Token(Token = "0x60011AD")]
	[Address(RVA = "0x159672C", Offset = "0x159672C", VA = "0x159672C")]
	public TutorialQuest1()
	{
	}

	[Token(Token = "0x60011AF")]
	[Address(RVA = "0x159679C", Offset = "0x159679C", VA = "0x159679C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58B43C", Offset = "0x58B43C")]
	private void <OpenSea>b__12_0()
	{
	}
}
[Token(Token = "0x20002EF")]
public class TutorialQuest10 : AbstractQuest
{
	[Token(Token = "0x20002F0")]
	private enum State
	{
		[Token(Token = "0x400191E")]
		Start = -1,
		[Token(Token = "0x400191F")]
		WaitForExitQuestWindow,
		[Token(Token = "0x4001920")]
		PrepareClickSkills,
		[Token(Token = "0x4001921")]
		WaitForClickSkills,
		[Token(Token = "0x4001922")]
		PrepareSkillsNote,
		[Token(Token = "0x4001923")]
		WaitAcceptSkillsNote,
		[Token(Token = "0x4001924")]
		PrepareSelectSkill,
		[Token(Token = "0x4001925")]
		WaitForSelectSkill,
		[Token(Token = "0x4001926")]
		PrepareLearnSkill,
		[Token(Token = "0x4001927")]
		WaitForLearnSkill,
		[Token(Token = "0x4001928")]
		WaitBeforeFinal,
		[Token(Token = "0x4001929")]
		Final
	}

	[Token(Token = "0x20002F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578EC4", Offset = "0x578EC4")]
	private sealed class <Wait>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float t;

		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TutorialQuest10 <>4__this;

		[Token(Token = "0x170001FD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011D2")]
			[Address(RVA = "0x1701250", Offset = "0x1701250", VA = "0x1701250", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011D4")]
			[Address(RVA = "0x1701298", Offset = "0x1701298", VA = "0x1701298", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0x1701158", Offset = "0x1701158", VA = "0x1701158")]
		[DebuggerHidden]
		public <Wait>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0x1701184", Offset = "0x1701184", VA = "0x1701184", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0x1701188", Offset = "0x1701188", VA = "0x1701188", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0x1701258", Offset = "0x1701258", VA = "0x1701258", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400190D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool isCaptainSkillTutor;

	[Token(Token = "0x400190E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int curr_exe;

	[Token(Token = "0x400190F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private State state;

	[Token(Token = "0x4001910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private State last_state;

	[Token(Token = "0x4001911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SaveDataProfile profile;

	[Token(Token = "0x4001912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private TaskWindow task_wnd;

	[Token(Token = "0x4001913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private M_Event_ResultWin ev_result;

	[Token(Token = "0x4001914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private HighlightInterface highlight;

	[Token(Token = "0x4001915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ConfigPanel config_panel;

	[Token(Token = "0x4001916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private NEW_UI_aditional new_ui;

	[Token(Token = "0x4001917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int counter;

	[Token(Token = "0x4001918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Skills skills;

	[Token(Token = "0x4001919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject fakeButton;

	[Token(Token = "0x400191A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool need_remove_listener_one_time;

	[Token(Token = "0x400191B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Button listenering_button;

	[Token(Token = "0x400191C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Slider listenering_slider;

	[Token(Token = "0x60011C0")]
	[Address(RVA = "0x15967A8", Offset = "0x15967A8", VA = "0x15967A8", Slot = "4")]
	public override void Launch()
	{
	}

	[Token(Token = "0x60011C1")]
	[Address(RVA = "0x1596AE0", Offset = "0x1596AE0", VA = "0x1596AE0")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x60011C2")]
	[Address(RVA = "0x1596BD0", Offset = "0x1596BD0", VA = "0x1596BD0")]
	private void QuestLogic()
	{
	}

	[Token(Token = "0x60011C3")]
	[Address(RVA = "0x1597FFC", Offset = "0x1597FFC", VA = "0x1597FFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58B4EC", Offset = "0x58B4EC")]
	private IEnumerator Wait(float t)
	{
		return null;
	}

	[Token(Token = "0x60011C4")]
	[Address(RVA = "0x1597F50", Offset = "0x1597F50", VA = "0x1597F50")]
	private void AddListenerOneTime(Button btn)
	{
	}

	[Token(Token = "0x60011C5")]
	[Address(RVA = "0x159808C", Offset = "0x159808C", VA = "0x159808C")]
	private void AddListenerOneTime(Slider slider)
	{
	}

	[Token(Token = "0x60011C6")]
	[Address(RVA = "0x15978F0", Offset = "0x15978F0", VA = "0x15978F0")]
	private void RemoveListenerOneTime()
	{
	}

	[Token(Token = "0x60011C7")]
	[Address(RVA = "0x1598160", Offset = "0x1598160", VA = "0x1598160")]
	private void NextState_Slider(float f)
	{
	}

	[Token(Token = "0x60011C8")]
	[Address(RVA = "0x1598178", Offset = "0x1598178", VA = "0x1598178")]
	private void NextState()
	{
	}

	[Token(Token = "0x60011C9")]
	[Address(RVA = "0x1598190", Offset = "0x1598190", VA = "0x1598190")]
	private void NextState_WithoutListener()
	{
	}

	[Token(Token = "0x60011CA")]
	[Address(RVA = "0x1597B08", Offset = "0x1597B08", VA = "0x1597B08")]
	private void SetActiveAllButtons(bool active)
	{
	}

	[Token(Token = "0x60011CB")]
	[Address(RVA = "0x15981A8", Offset = "0x15981A8", VA = "0x15981A8")]
	private void GetQuestReward(SaveDataProfile profile_)
	{
	}

	[Token(Token = "0x60011CC")]
	[Address(RVA = "0x15969A4", Offset = "0x15969A4", VA = "0x15969A4")]
	private void CreateFakeProfile()
	{
	}

	[Token(Token = "0x60011CD")]
	[Address(RVA = "0x15981AC", Offset = "0x15981AC", VA = "0x15981AC")]
	public TutorialQuest10()
	{
	}
}
[Token(Token = "0x20002F2")]
public class TutorialQuest2 : AbstractQuest
{
	[Token(Token = "0x20002F3")]
	private enum State
	{
		[Token(Token = "0x4001947")]
		Start = -1,
		[Token(Token = "0x4001948")]
		PrepareClickTeam,
		[Token(Token = "0x4001949")]
		WaitClickTeam,
		[Token(Token = "0x400194A")]
		PrepareSwipeToTavernNote,
		[Token(Token = "0x400194B")]
		WaitAcceptSwipeToTavernNote,
		[Token(Token = "0x400194C")]
		PrepareSwipeToTavern,
		[Token(Token = "0x400194D")]
		WaitSwipeToTavern,
		[Token(Token = "0x400194E")]
		PrepareRecruitPunksNote,
		[Token(Token = "0x400194F")]
		WaitAccetpRecruitPunksNote,
		[Token(Token = "0x4001950")]
		PrepareRecruitPunks,
		[Token(Token = "0x4001951")]
		RecruitPunks,
		[Token(Token = "0x4001952")]
		PrepareSwipeToShipNote,
		[Token(Token = "0x4001953")]
		WaitAcceptSwipeToShipNote,
		[Token(Token = "0x4001954")]
		PrepareSwipeToShip,
		[Token(Token = "0x4001955")]
		WaitSwipeToShip,
		[Token(Token = "0x4001956")]
		WaitAcceptDialogAllocation,
		[Token(Token = "0x4001957")]
		PrepareMoveToSail,
		[Token(Token = "0x4001958")]
		MoveToSail,
		[Token(Token = "0x4001959")]
		PrepareMoveToDeckNote,
		[Token(Token = "0x400195A")]
		WaitAcceptMoveToDeckNote,
		[Token(Token = "0x400195B")]
		PrepareMoveToDeck,
		[Token(Token = "0x400195C")]
		MoveToDeck,
		[Token(Token = "0x400195D")]
		WaitAcceptDialogDeck,
		[Token(Token = "0x400195E")]
		PrepareDialogHealNote,
		[Token(Token = "0x400195F")]
		WaitAcceptDialogHealNote,
		[Token(Token = "0x4001960")]
		PrepareHealing,
		[Token(Token = "0x4001961")]
		Healing,
		[Token(Token = "0x4001962")]
		PrepareOfficersNote,
		[Token(Token = "0x4001963")]
		WaitAcceptOfficersNote,
		[Token(Token = "0x4001964")]
		PrepareClickOfficerSlot,
		[Token(Token = "0x4001965")]
		WaitClickOfficerSlot,
		[Token(Token = "0x4001966")]
		WaitSelectOfficer,
		[Token(Token = "0x4001967")]
		WaitUseOfficerMobile,
		[Token(Token = "0x4001968")]
		WaitUseOfficer,
		[Token(Token = "0x4001969")]
		WaitBeforeFinal,
		[Token(Token = "0x400196A")]
		Final,
		[Token(Token = "0x400196B")]
		KillThisThread
	}

	[Token(Token = "0x20002F4")]
	private enum DeckType
	{
		[Token(Token = "0x400196D")]
		SAIL,
		[Token(Token = "0x400196E")]
		BOARDING_DECK,
		[Token(Token = "0x400196F")]
		GUN_DECK
	}

	[Token(Token = "0x20002F5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578ED4", Offset = "0x578ED4")]
	private sealed class <Wait>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float t;

		[Token(Token = "0x4001973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TutorialQuest2 <>4__this;

		[Token(Token = "0x1700020A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011F2")]
			[Address(RVA = "0x1701398", Offset = "0x1701398", VA = "0x1701398", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011F4")]
			[Address(RVA = "0x17013E0", Offset = "0x17013E0", VA = "0x17013E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x17012A0", Offset = "0x17012A0", VA = "0x17012A0")]
		[DebuggerHidden]
		public <Wait>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0x17012CC", Offset = "0x17012CC", VA = "0x17012CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x17012D0", Offset = "0x17012D0", VA = "0x17012D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0x17013A0", Offset = "0x17013A0", VA = "0x17013A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400192E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool isTeamTutor;

	[Token(Token = "0x400192F")]
	private const int _MOVE_TO_SAIL = 4;

	[Token(Token = "0x4001930")]
	private const int _MOVE_TO_GUN_DECK = 4;

	[Token(Token = "0x4001931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject prefabMoveCrewmanDown;

	[Token(Token = "0x4001932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject prefabMoveCrewmanUp;

	[Token(Token = "0x4001933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject prefabSwipeRight;

	[Token(Token = "0x4001934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject prefabSwipeLeft;

	[Token(Token = "0x4001935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject animation;

	[Token(Token = "0x4001936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int curr_exe;

	[Token(Token = "0x4001937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private State state;

	[Token(Token = "0x4001938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private State last_state;

	[Token(Token = "0x4001939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private SaveDataProfile profile;

	[Token(Token = "0x400193A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private SaveDataProfile profileBkp;

	[Token(Token = "0x400193B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ConfigTeamMobile cfg_tm;

	[Token(Token = "0x400193C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private TeamManageShipMobile tm_ship;

	[Token(Token = "0x400193D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private TeamManageTavernMobile tm_tavern;

	[Token(Token = "0x400193E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private TaskWindow task_wnd;

	[Token(Token = "0x400193F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private M_Event_ResultWin ev_result;

	[Token(Token = "0x4001940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private HighlightInterface highlight;

	[Token(Token = "0x4001941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private ConfigPanel config_panel;

	[Token(Token = "0x4001942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int counter;

	[Token(Token = "0x4001943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private GameObject tmpGO;

	[Token(Token = "0x4001944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool skipState;

	[Token(Token = "0x4001945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int[] list_team_fields;

	[Token(Token = "0x170001FF")]
	public Button btnOfficer1
	{
		[Token(Token = "0x60011E2")]
		[Address(RVA = "0x159CE6C", Offset = "0x159CE6C", VA = "0x159CE6C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000200")]
	public Button btnOfficer2
	{
		[Token(Token = "0x60011E3")]
		[Address(RVA = "0x159CF18", Offset = "0x159CF18", VA = "0x159CF18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000201")]
	public Button btnOfficer3
	{
		[Token(Token = "0x60011E4")]
		[Address(RVA = "0x159CFC4", Offset = "0x159CFC4", VA = "0x159CFC4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000202")]
	public Button btnChangeOrEquip
	{
		[Token(Token = "0x60011E5")]
		[Address(RVA = "0x159D070", Offset = "0x159D070", VA = "0x159D070")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000203")]
	public Button btnThrowAway
	{
		[Token(Token = "0x60011E6")]
		[Address(RVA = "0x159D0E4", Offset = "0x159D0E4", VA = "0x159D0E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000204")]
	public Button btnHeal
	{
		[Token(Token = "0x60011E7")]
		[Address(RVA = "0x159D158", Offset = "0x159D158", VA = "0x159D158")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000205")]
	public Button btnTavernMobile
	{
		[Token(Token = "0x60011E8")]
		[Address(RVA = "0x159C48C", Offset = "0x159C48C", VA = "0x159C48C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000206")]
	public Button btnMedBayMobile
	{
		[Token(Token = "0x60011E9")]
		[Address(RVA = "0x159C6D0", Offset = "0x159C6D0", VA = "0x159C6D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000207")]
	public Button btnHealMobile
	{
		[Token(Token = "0x60011EA")]
		[Address(RVA = "0x159C7D4", Offset = "0x159C7D4", VA = "0x159C7D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000208")]
	public Button btnHealAllMobile
	{
		[Token(Token = "0x60011EB")]
		[Address(RVA = "0x159D1E4", Offset = "0x159D1E4", VA = "0x159D1E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000209")]
	public Button btnOfficerSlotMobile
	{
		[Token(Token = "0x60011EC")]
		[Address(RVA = "0x159C9C0", Offset = "0x159C9C0", VA = "0x159C9C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60011D5")]
	[Address(RVA = "0x1598228", Offset = "0x1598228", VA = "0x1598228", Slot = "4")]
	public override void Launch()
	{
	}

	[Token(Token = "0x60011D6")]
	[Address(RVA = "0x1598A04", Offset = "0x1598A04", VA = "0x1598A04")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x60011D7")]
	[Address(RVA = "0x1598AF4", Offset = "0x1598AF4", VA = "0x1598AF4")]
	private void QuestLogic()
	{
	}

	[Token(Token = "0x60011D8")]
	[Address(RVA = "0x159CB00", Offset = "0x159CB00", VA = "0x159CB00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58B5A4", Offset = "0x58B5A4")]
	private IEnumerator Wait(float t)
	{
		return null;
	}

	[Token(Token = "0x60011D9")]
	[Address(RVA = "0x159CB90", Offset = "0x159CB90", VA = "0x159CB90")]
	private void NextState()
	{
	}

	[Token(Token = "0x60011DA")]
	[Address(RVA = "0x159BC94", Offset = "0x159BC94", VA = "0x159BC94")]
	private void SetActiveAllButtons(bool active)
	{
	}

	[Token(Token = "0x60011DB")]
	[Address(RVA = "0x15986D8", Offset = "0x15986D8", VA = "0x15986D8")]
	private void CreateFakeProfile()
	{
	}

	[Token(Token = "0x60011DC")]
	[Address(RVA = "0x15983A4", Offset = "0x15983A4", VA = "0x15983A4")]
	private void InitListTeamFields()
	{
	}

	[Token(Token = "0x60011DD")]
	[Address(RVA = "0x159CBA0", Offset = "0x159CBA0", VA = "0x159CBA0")]
	private void GetQuestReward()
	{
	}

	[Token(Token = "0x60011DE")]
	[Address(RVA = "0x159C590", Offset = "0x159C590", VA = "0x159C590")]
	private int GetTeamCount()
	{
		return default(int);
	}

	[Token(Token = "0x60011DF")]
	[Address(RVA = "0x159CE08", Offset = "0x159CE08", VA = "0x159CE08")]
	private int GetTeamCountMax()
	{
		return default(int);
	}

	[Token(Token = "0x60011E0")]
	[Address(RVA = "0x159C5B0", Offset = "0x159C5B0", VA = "0x159C5B0")]
	private int GetTeamOnDeck(DeckType deck_type)
	{
		return default(int);
	}

	[Token(Token = "0x60011E1")]
	[Address(RVA = "0x159C930", Offset = "0x159C930", VA = "0x159C930")]
	private int GetTeamWounded()
	{
		return default(int);
	}

	[Token(Token = "0x60011ED")]
	[Address(RVA = "0x159D2E8", Offset = "0x159D2E8", VA = "0x159D2E8")]
	public TutorialQuest2()
	{
	}
}
[Token(Token = "0x20002F6")]
public class TutorialQuest3 : AbstractQuest
{
	[Token(Token = "0x20002F7")]
	private enum State
	{
		[Token(Token = "0x4001985")]
		Start = -1,
		[Token(Token = "0x4001986")]
		PrepareClickTrum,
		[Token(Token = "0x4001987")]
		WaitForClickTrum,
		[Token(Token = "0x4001988")]
		PrepareGoToMarket,
		[Token(Token = "0x4001989")]
		WaitForGoToMarket,
		[Token(Token = "0x400198A")]
		PrepareSelectCanonBuy,
		[Token(Token = "0x400198B")]
		WaitForSelectCanonBuy,
		[Token(Token = "0x400198C")]
		PrepareSelectX10Buy,
		[Token(Token = "0x400198D")]
		WaitForSelectX10Buy,
		[Token(Token = "0x400198E")]
		PrepareSelectBuy,
		[Token(Token = "0x400198F")]
		WaitForSelectBuy,
		[Token(Token = "0x4001990")]
		PrepareExitMarket,
		[Token(Token = "0x4001991")]
		WaitForExitMarket,
		[Token(Token = "0x4001992")]
		PrepareStorageNote,
		[Token(Token = "0x4001993")]
		WaitForStorageNote,
		[Token(Token = "0x4001994")]
		PrepareGoToShip,
		[Token(Token = "0x4001995")]
		WaitForGoToShip,
		[Token(Token = "0x4001996")]
		PrepareSelectCanonToStorage,
		[Token(Token = "0x4001997")]
		WaitForSelectCanonToStorage,
		[Token(Token = "0x4001998")]
		PrepareSelectX10ToStorage,
		[Token(Token = "0x4001999")]
		WaitForSelectX10ToStorage,
		[Token(Token = "0x400199A")]
		PrepareSelectToStorage,
		[Token(Token = "0x400199B")]
		WaitForSelectToStorage,
		[Token(Token = "0x400199C")]
		PrepareSellNote,
		[Token(Token = "0x400199D")]
		WaitForSellNote,
		[Token(Token = "0x400199E")]
		PrepareGoToShip2,
		[Token(Token = "0x400199F")]
		WaitForGoToShip2,
		[Token(Token = "0x40019A0")]
		WaitOneFrame,
		[Token(Token = "0x40019A1")]
		PrepareSelectCanonToSell,
		[Token(Token = "0x40019A2")]
		WaitForSelectCanonToSell,
		[Token(Token = "0x40019A3")]
		PrepareSelectX1ToSell,
		[Token(Token = "0x40019A4")]
		WaitForSelectX1ToSell,
		[Token(Token = "0x40019A5")]
		PrepareSelectToSell,
		[Token(Token = "0x40019A6")]
		WaitForSelectToSell,
		[Token(Token = "0x40019A7")]
		PrepareExitShip,
		[Token(Token = "0x40019A8")]
		WaitForExitShip,
		[Token(Token = "0x40019A9")]
		Final
	}

	[Token(Token = "0x20002F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578EE4", Offset = "0x578EE4")]
	private sealed class <Wait>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float t;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TutorialQuest3 <>4__this;

		[Token(Token = "0x1700021A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001218")]
			[Address(RVA = "0x17014E0", Offset = "0x17014E0", VA = "0x17014E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600121A")]
			[Address(RVA = "0x1701528", Offset = "0x1701528", VA = "0x1701528", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0x17013E8", Offset = "0x17013E8", VA = "0x17013E8")]
		[DebuggerHidden]
		public <Wait>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0x1701414", Offset = "0x1701414", VA = "0x1701414", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0x1701418", Offset = "0x1701418", VA = "0x1701418", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0x17014E8", Offset = "0x17014E8", VA = "0x17014E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool isHoldTutor;

	[Token(Token = "0x4001975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int curr_exe;

	[Token(Token = "0x4001976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private State state;

	[Token(Token = "0x4001977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private State last_state;

	[Token(Token = "0x4001978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SaveDataProfile profile;

	[Token(Token = "0x4001979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private TaskWindow task_wnd;

	[Token(Token = "0x400197A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private M_Event_ResultWin ev_result;

	[Token(Token = "0x400197B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private HighlightInterface highlight;

	[Token(Token = "0x400197C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ConfigPanel config_panel;

	[Token(Token = "0x400197D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private NEW_UI_aditional new_ui;

	[Token(Token = "0x400197E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int counter;

	[Token(Token = "0x400197F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Trum_managment_new trum;

	[Token(Token = "0x4001980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private UI_Hold hold;

	[Token(Token = "0x4001981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool need_remove_listener_one_time;

	[Token(Token = "0x4001982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Button listenering_button;

	[Token(Token = "0x4001983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Slider listenering_slider;

	[Token(Token = "0x1700020C")]
	public Button btnMarketCannonballs
	{
		[Token(Token = "0x6001205")]
		[Address(RVA = "0x159FB18", Offset = "0x159FB18", VA = "0x159FB18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700020D")]
	public Button btnShipCannonballs
	{
		[Token(Token = "0x6001206")]
		[Address(RVA = "0x15A04E4", Offset = "0x15A04E4", VA = "0x15A04E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700020E")]
	public Button btnStorageCannonballs
	{
		[Token(Token = "0x6001207")]
		[Address(RVA = "0x15A0560", Offset = "0x15A0560", VA = "0x15A0560")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700020F")]
	public Image imageSellOne
	{
		[Token(Token = "0x6001208")]
		[Address(RVA = "0x15A05DC", Offset = "0x15A05DC", VA = "0x15A05DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000210")]
	public Image imageSellTen
	{
		[Token(Token = "0x6001209")]
		[Address(RVA = "0x15A0638", Offset = "0x15A0638", VA = "0x15A0638")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000211")]
	public Button btnSellOne
	{
		[Token(Token = "0x600120A")]
		[Address(RVA = "0x159FE00", Offset = "0x159FE00", VA = "0x159FE00")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000212")]
	public Button btnSellTen
	{
		[Token(Token = "0x600120B")]
		[Address(RVA = "0x159FE5C", Offset = "0x159FE5C", VA = "0x159FE5C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000213")]
	public Button btnAmountLeft
	{
		[Token(Token = "0x600120C")]
		[Address(RVA = "0x15A0068", Offset = "0x15A0068", VA = "0x15A0068")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000214")]
	public Button btnAmountRight
	{
		[Token(Token = "0x600120D")]
		[Address(RVA = "0x15A00C4", Offset = "0x15A00C4", VA = "0x15A00C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000215")]
	public Button btnAmountCenter
	{
		[Token(Token = "0x600120E")]
		[Address(RVA = "0x159FD48", Offset = "0x159FD48", VA = "0x159FD48")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000216")]
	private HorizontalLayoutGroup SellItemsGroup
	{
		[Token(Token = "0x600120F")]
		[Address(RVA = "0x159FDA4", Offset = "0x159FDA4", VA = "0x159FDA4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000217")]
	public Button btnShip
	{
		[Token(Token = "0x6001210")]
		[Address(RVA = "0x15A02B8", Offset = "0x15A02B8", VA = "0x15A02B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000218")]
	public Button btnStorage
	{
		[Token(Token = "0x6001211")]
		[Address(RVA = "0x15A0398", Offset = "0x15A0398", VA = "0x15A0398")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000219")]
	public Button btnMarket
	{
		[Token(Token = "0x6001212")]
		[Address(RVA = "0x159F9C8", Offset = "0x159F9C8", VA = "0x159F9C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60011F5")]
	[Address(RVA = "0x159D364", Offset = "0x159D364", VA = "0x159D364", Slot = "4")]
	public override void Launch()
	{
	}

	[Token(Token = "0x60011F6")]
	[Address(RVA = "0x159D6BC", Offset = "0x159D6BC", VA = "0x159D6BC")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x60011F7")]
	[Address(RVA = "0x159D7AC", Offset = "0x159D7AC", VA = "0x159D7AC")]
	private void QuestLogic()
	{
	}

	[Token(Token = "0x60011F8")]
	[Address(RVA = "0x159FEB8", Offset = "0x159FEB8", VA = "0x159FEB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58B65C", Offset = "0x58B65C")]
	private IEnumerator Wait(float t)
	{
		return null;
	}

	[Token(Token = "0x60011F9")]
	[Address(RVA = "0x159F510", Offset = "0x159F510", VA = "0x159F510")]
	private void AddListenerOneTime(Button btn)
	{
	}

	[Token(Token = "0x60011FA")]
	[Address(RVA = "0x159FF48", Offset = "0x159FF48", VA = "0x159FF48")]
	private void AddListenerOneTime(Slider slider)
	{
	}

	[Token(Token = "0x60011FB")]
	[Address(RVA = "0x159F2F8", Offset = "0x159F2F8", VA = "0x159F2F8")]
	private void RemoveListenerOneTime()
	{
	}

	[Token(Token = "0x60011FC")]
	[Address(RVA = "0x15A001C", Offset = "0x15A001C", VA = "0x15A001C")]
	private void ChangeStateToMarket()
	{
	}

	[Token(Token = "0x60011FD")]
	[Address(RVA = "0x15A0028", Offset = "0x15A0028", VA = "0x15A0028")]
	private void NextState_Slider(float f)
	{
	}

	[Token(Token = "0x60011FE")]
	[Address(RVA = "0x15A0040", Offset = "0x15A0040", VA = "0x15A0040")]
	private void NextState()
	{
	}

	[Token(Token = "0x60011FF")]
	[Address(RVA = "0x15A0058", Offset = "0x15A0058", VA = "0x15A0058")]
	private void NextState_WithoutListener()
	{
	}

	[Token(Token = "0x6001200")]
	[Address(RVA = "0x159FB94", Offset = "0x159FB94", VA = "0x159FB94")]
	private void SetActiveAllButtonsInHoldWindow(bool active)
	{
	}

	[Token(Token = "0x6001201")]
	[Address(RVA = "0x15A0120", Offset = "0x15A0120", VA = "0x15A0120")]
	private void SetActiveAllButtonsInTradeWindow(bool active)
	{
	}

	[Token(Token = "0x6001202")]
	[Address(RVA = "0x159F5BC", Offset = "0x159F5BC", VA = "0x159F5BC")]
	private void SetActiveAllButtons(bool active)
	{
	}

	[Token(Token = "0x6001203")]
	[Address(RVA = "0x15A04E0", Offset = "0x15A04E0", VA = "0x15A04E0")]
	private void GetQuestReward(SaveDataProfile profile_)
	{
	}

	[Token(Token = "0x6001204")]
	[Address(RVA = "0x159D604", Offset = "0x159D604", VA = "0x159D604")]
	private void CreateFakeProfile()
	{
	}

	[Token(Token = "0x6001213")]
	[Address(RVA = "0x15A0694", Offset = "0x15A0694", VA = "0x15A0694")]
	public TutorialQuest3()
	{
	}
}
[Token(Token = "0x20002F9")]
public class TutorialQuest4 : AbstractQuest
{
	[Token(Token = "0x20002FA")]
	public enum States
	{
		[Token(Token = "0x40019B9")]
		None,
		[Token(Token = "0x40019BA")]
		SpawnEnemy,
		[Token(Token = "0x40019BB")]
		SetupPlayerAndEnemy,
		[Token(Token = "0x40019BC")]
		ChooseAmmunitionShrapnel,
		[Token(Token = "0x40019BD")]
		ChooseShrapnel,
		[Token(Token = "0x40019BE")]
		ShowMessageShootShrapnel,
		[Token(Token = "0x40019BF")]
		WaitForTheShotShrapnel,
		[Token(Token = "0x40019C0")]
		ShowMessageChooseKnippel,
		[Token(Token = "0x40019C1")]
		ChooseAmmunitionKnippel,
		[Token(Token = "0x40019C2")]
		ChooseKnippel,
		[Token(Token = "0x40019C3")]
		ShowMessageShootKnippel,
		[Token(Token = "0x40019C4")]
		WaitForTheShotKnippel,
		[Token(Token = "0x40019C5")]
		ShowMessageForBoarding,
		[Token(Token = "0x40019C6")]
		BoardingProcess,
		[Token(Token = "0x40019C7")]
		FightEnded,
		[Token(Token = "0x40019C8")]
		WaitForPlayerSelectReward,
		[Token(Token = "0x40019C9")]
		WaitOneSec,
		[Token(Token = "0x40019CA")]
		OpenMap,
		[Token(Token = "0x40019CB")]
		RestoreProfileAndGiveReward,
		[Token(Token = "0x40019CC")]
		Final
	}

	[Token(Token = "0x20002FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578EF4", Offset = "0x578EF4")]
	private sealed class <waitOneSecCoroutine>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialQuest4 <>4__this;

		[Token(Token = "0x1700021D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600123B")]
			[Address(RVA = "0x1701F90", Offset = "0x1701F90", VA = "0x1701F90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600123D")]
			[Address(RVA = "0x1701FD8", Offset = "0x1701FD8", VA = "0x1701FD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0x1701EA8", Offset = "0x1701EA8", VA = "0x1701EA8")]
		[DebuggerHidden]
		public <waitOneSecCoroutine>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0x1701ED4", Offset = "0x1701ED4", VA = "0x1701ED4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0x1701ED8", Offset = "0x1701ED8", VA = "0x1701ED8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0x1701F98", Offset = "0x1701F98", VA = "0x1701F98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578F04", Offset = "0x578F04")]
	private sealed class <OpenSea>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialQuest4 <>4__this;

		[Token(Token = "0x1700021F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001241")]
			[Address(RVA = "0x1701BC4", Offset = "0x1701BC4", VA = "0x1701BC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000220")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001243")]
			[Address(RVA = "0x1701C0C", Offset = "0x1701C0C", VA = "0x1701C0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0x17019C4", Offset = "0x17019C4", VA = "0x17019C4")]
		[DebuggerHidden]
		public <OpenSea>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0x17019F0", Offset = "0x17019F0", VA = "0x17019F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0x17019F4", Offset = "0x17019F4", VA = "0x17019F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0x1701BCC", Offset = "0x1701BCC", VA = "0x1701BCC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578F14", Offset = "0x578F14")]
	private sealed class <>c
	{
		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<Tovar> <>9__26_0;

		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Predicate<Tovar> <>9__26_1;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Predicate<Tovar> <>9__26_2;

		[Token(Token = "0x6001245")]
		[Address(RVA = "0x1701594", Offset = "0x1701594", VA = "0x1701594")]
		public <>c()
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x170159C", Offset = "0x170159C", VA = "0x170159C")]
		internal bool <AddCannonBalls>b__26_0(Tovar t)
		{
			return default(bool);
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0x17015F4", Offset = "0x17015F4", VA = "0x17015F4")]
		internal bool <AddCannonBalls>b__26_1(Tovar t)
		{
			return default(bool);
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0x170164C", Offset = "0x170164C", VA = "0x170164C")]
		internal bool <AddCannonBalls>b__26_2(Tovar t)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578F24", Offset = "0x578F24")]
	private sealed class <WaitTime>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialQuest4 <>4__this;

		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float time;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public H_Core.H_delegate LoadingMoment;

		[Token(Token = "0x17000221")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600124C")]
			[Address(RVA = "0x1701E58", Offset = "0x1701E58", VA = "0x1701E58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000222")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600124E")]
			[Address(RVA = "0x1701EA0", Offset = "0x1701EA0", VA = "0x1701EA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0x1701D60", Offset = "0x1701D60", VA = "0x1701D60")]
		[DebuggerHidden]
		public <WaitTime>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0x1701D8C", Offset = "0x1701D8C", VA = "0x1701D8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0x1701D90", Offset = "0x1701D90", VA = "0x1701D90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0x1701E60", Offset = "0x1701E60", VA = "0x1701E60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578F34", Offset = "0x578F34")]
	private sealed class <WaitEndOfShotAnimation>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialQuest4 <>4__this;

		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float animationTime;

		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public States nextState;

		[Token(Token = "0x17000223")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001252")]
			[Address(RVA = "0x1701D10", Offset = "0x1701D10", VA = "0x1701D10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000224")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001254")]
			[Address(RVA = "0x1701D58", Offset = "0x1701D58", VA = "0x1701D58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0x1701C14", Offset = "0x1701C14", VA = "0x1701C14")]
		[DebuggerHidden]
		public <WaitEndOfShotAnimation>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0x1701C40", Offset = "0x1701C40", VA = "0x1701C40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0x1701C44", Offset = "0x1701C44", VA = "0x1701C44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0x1701D18", Offset = "0x1701D18", VA = "0x1701D18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000300")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578F44", Offset = "0x578F44")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TutorialQuest4 <>4__this;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public States nextState;

		[Token(Token = "0x6001255")]
		[Address(RVA = "0x17016A4", Offset = "0x17016A4", VA = "0x17016A4")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0x17016AC", Offset = "0x17016AC", VA = "0x17016AC")]
		internal void <ShowInformation>b__0()
		{
		}
	}

	[Token(Token = "0x2000301")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578F54", Offset = "0x578F54")]
	private sealed class <OpenMap>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialQuest4 <>4__this;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public States nextState;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AsyncOperation <aoTemp>5__2;

		[Token(Token = "0x17000225")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600125A")]
			[Address(RVA = "0x1701974", Offset = "0x1701974", VA = "0x1701974", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000226")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600125C")]
			[Address(RVA = "0x17019BC", Offset = "0x17019BC", VA = "0x17019BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0x17016D0", Offset = "0x17016D0", VA = "0x17016D0")]
		[DebuggerHidden]
		public <OpenMap>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0x17016FC", Offset = "0x17016FC", VA = "0x17016FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0x1701700", Offset = "0x1701700", VA = "0x1701700", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0x170197C", Offset = "0x170197C", VA = "0x170197C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40019AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool isAboardageTutor;

	[Token(Token = "0x40019AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private States state;

	[Token(Token = "0x40019B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private HighlightInterface highlight;

	[Token(Token = "0x40019B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TaskWindow task_wnd;

	[Token(Token = "0x40019B2")]
	private const float ANIMATION_LENGTH = 2f;

	[Token(Token = "0x40019B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Ship enemyShip;

	[Token(Token = "0x40019B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isPlayerShot;

	[Token(Token = "0x40019B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float savedTime;

	[Token(Token = "0x40019B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool enterToWaitTime;

	[Token(Token = "0x40019B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private States sTemp;

	[Token(Token = "0x1700021C")]
	private bool isAmmunitionMenuOpen
	{
		[Token(Token = "0x600122D")]
		[Address(RVA = "0x1608378", Offset = "0x1608378", VA = "0x1608378")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600121B")]
	[Address(RVA = "0x1606118", Offset = "0x1606118", VA = "0x1606118", Slot = "4")]
	public override void Launch()
	{
	}

	[Token(Token = "0x600121C")]
	[Address(RVA = "0x16062CC", Offset = "0x16062CC", VA = "0x16062CC")]
	private void SetQuestParametersState(bool active)
	{
	}

	[Token(Token = "0x600121D")]
	[Address(RVA = "0x16063F4", Offset = "0x16063F4", VA = "0x16063F4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600121E")]
	[Address(RVA = "0x1606514", Offset = "0x1606514", VA = "0x1606514")]
	private void QuestLogic()
	{
	}

	[Token(Token = "0x600121F")]
	[Address(RVA = "0x1608690", Offset = "0x1608690", VA = "0x1608690")]
	private void waitOneSec()
	{
	}

	[Token(Token = "0x6001220")]
	[Address(RVA = "0x16087DC", Offset = "0x16087DC", VA = "0x16087DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58B714", Offset = "0x58B714")]
	private IEnumerator waitOneSecCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6001221")]
	[Address(RVA = "0x160885C", Offset = "0x160885C", VA = "0x160885C")]
	private void HighlightTrophyShip()
	{
	}

	[Token(Token = "0x6001222")]
	[Address(RVA = "0x16082E8", Offset = "0x16082E8", VA = "0x16082E8")]
	private void DisableSpecialButtons(bool active)
	{
	}

	[Token(Token = "0x6001223")]
	[Address(RVA = "0x16083F0", Offset = "0x16083F0", VA = "0x16083F0")]
	private void ChooseSpecificCannonBall(string cannonBallID)
	{
	}

	[Token(Token = "0x6001224")]
	[Address(RVA = "0x1608BC0", Offset = "0x1608BC0", VA = "0x1608BC0")]
	private void СloseMap()
	{
	}

	[Token(Token = "0x6001225")]
	[Address(RVA = "0x1608BEC", Offset = "0x1608BEC", VA = "0x1608BEC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58B77C", Offset = "0x58B77C")]
	private IEnumerator OpenSea()
	{
		return null;
	}

	[Token(Token = "0x6001226")]
	[Address(RVA = "0x1607734", Offset = "0x1607734", VA = "0x1607734")]
	public Ship SpawnEnemyShip()
	{
		return null;
	}

	[Token(Token = "0x6001227")]
	[Address(RVA = "0x1607958", Offset = "0x1607958", VA = "0x1607958")]
	private void SetEnemyParameters()
	{
	}

	[Token(Token = "0x6001228")]
	[Address(RVA = "0x1608C6C", Offset = "0x1608C6C", VA = "0x1608C6C")]
	private bool IsItemCrewMan(Tovar t)
	{
		return default(bool);
	}

	[Token(Token = "0x6001229")]
	[Address(RVA = "0x1607A94", Offset = "0x1607A94", VA = "0x1607A94")]
	private void ClearTrum()
	{
	}

	[Token(Token = "0x600122A")]
	[Address(RVA = "0x1607D3C", Offset = "0x1607D3C", VA = "0x1607D3C")]
	private void AddCannonBalls()
	{
	}

	[Token(Token = "0x600122B")]
	[Address(RVA = "0x1608968", Offset = "0x1608968", VA = "0x1608968")]
	private Transform GetTransformOfCannonBall(string cannonBallID)
	{
		return null;
	}

	[Token(Token = "0x600122C")]
	[Address(RVA = "0x16086C4", Offset = "0x16086C4", VA = "0x16086C4")]
	private void SetInteracrableAllAmmunition(bool status)
	{
	}

	[Token(Token = "0x600122E")]
	[Address(RVA = "0x1608CA4", Offset = "0x1608CA4", VA = "0x1608CA4")]
	private void PlayerShot(object obj)
	{
	}

	[Token(Token = "0x600122F")]
	[Address(RVA = "0x16085EC", Offset = "0x16085EC", VA = "0x16085EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58B7E4", Offset = "0x58B7E4")]
	private IEnumerator WaitTime(float time, H_Core.H_delegate LoadingMoment)
	{
		return null;
	}

	[Token(Token = "0x6001230")]
	[Address(RVA = "0x160848C", Offset = "0x160848C", VA = "0x160848C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58B84C", Offset = "0x58B84C")]
	private IEnumerator WaitEndOfShotAnimation(float animationTime, States nextState)
	{
		return null;
	}

	[Token(Token = "0x6001231")]
	[Address(RVA = "0x160817C", Offset = "0x160817C", VA = "0x160817C")]
	public void ShowInformation(string text, States nextState)
	{
	}

	[Token(Token = "0x6001232")]
	[Address(RVA = "0x1608CB0", Offset = "0x1608CB0", VA = "0x1608CB0")]
	private void CloseSea()
	{
	}

	[Token(Token = "0x6001233")]
	[Address(RVA = "0x1608CE4", Offset = "0x1608CE4", VA = "0x1608CE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58B8B4", Offset = "0x58B8B4")]
	private IEnumerator OpenMap(States nextState)
	{
		return null;
	}

	[Token(Token = "0x6001234")]
	[Address(RVA = "0x1608524", Offset = "0x1608524", VA = "0x1608524")]
	private void HideAllNotify()
	{
	}

	[Token(Token = "0x6001235")]
	[Address(RVA = "0x1608D6C", Offset = "0x1608D6C", VA = "0x1608D6C")]
	public TutorialQuest4()
	{
	}

	[Token(Token = "0x6001237")]
	[Address(RVA = "0x1608DDC", Offset = "0x1608DDC", VA = "0x1608DDC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58B91C", Offset = "0x58B91C")]
	private void <OpenSea>b__21_0()
	{
	}
}
[Token(Token = "0x2000302")]
public class TutorialQuest5 : AbstractQuest
{
	[Token(Token = "0x2000303")]
	private enum State
	{
		[Token(Token = "0x4001A05")]
		Start = -1,
		[Token(Token = "0x4001A06")]
		PrepareClickEquip,
		[Token(Token = "0x4001A07")]
		WaitForClickEquip,
		[Token(Token = "0x4001A08")]
		GoToMobile,
		[Token(Token = "0x4001A09")]
		PrepareSelectCannonSlot,
		[Token(Token = "0x4001A0A")]
		WaitForSelectCannonSlot,
		[Token(Token = "0x4001A0B")]
		PrepareSelectCannon,
		[Token(Token = "0x4001A0C")]
		WaitForSelectCannon,
		[Token(Token = "0x4001A0D")]
		PrepareSelectCannonUse,
		[Token(Token = "0x4001A0E")]
		WaitForSelectCannonUse,
		[Token(Token = "0x4001A0F")]
		PrepareExitContentWindow,
		[Token(Token = "0x4001A10")]
		WaitForExitContentWindow,
		[Token(Token = "0x4001A11")]
		WaitFor__added,
		[Token(Token = "0x4001A12")]
		PrepareMessageUpgradeNote,
		[Token(Token = "0x4001A13")]
		WaitForMessageUpgradeNote,
		[Token(Token = "0x4001A14")]
		PrepareSelectUpgradeSlot,
		[Token(Token = "0x4001A15")]
		WaitForSelectUpgradeSlot,
		[Token(Token = "0x4001A16")]
		PrepareSelectUpgrade,
		[Token(Token = "0x4001A17")]
		WaitForSelectUpgrade,
		[Token(Token = "0x4001A18")]
		PrepareSelectUpgradeUse,
		[Token(Token = "0x4001A19")]
		WaitForSelectUpgradeUse,
		[Token(Token = "0x4001A1A")]
		GoToFinal,
		[Token(Token = "0x4001A1B")]
		PrepareCannonDrag,
		[Token(Token = "0x4001A1C")]
		WaitForCannonDrop,
		[Token(Token = "0x4001A1D")]
		PrepareUpgradeDrag,
		[Token(Token = "0x4001A1E")]
		WaitForUpgradeDrop,
		[Token(Token = "0x4001A1F")]
		FinalMobile,
		[Token(Token = "0x4001A20")]
		PrepareExitContentWindow2,
		[Token(Token = "0x4001A21")]
		WaitForExitContentWindow2,
		[Token(Token = "0x4001A22")]
		Final
	}

	[Token(Token = "0x2000304")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578F64", Offset = "0x578F64")]
	private sealed class <Wait>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float t;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TutorialQuest5 <>4__this;

		[Token(Token = "0x1700022A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001275")]
			[Address(RVA = "0x17020D8", Offset = "0x17020D8", VA = "0x17020D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001277")]
			[Address(RVA = "0x1702120", Offset = "0x1702120", VA = "0x1702120", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0x1701FE0", Offset = "0x1701FE0", VA = "0x1701FE0")]
		[DebuggerHidden]
		public <Wait>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0x170200C", Offset = "0x170200C", VA = "0x170200C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0x1702010", Offset = "0x1702010", VA = "0x1702010", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0x17020E0", Offset = "0x17020E0", VA = "0x17020E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40019E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool isEquipTutor;

	[Token(Token = "0x40019E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static TutorialQuest5 instance;

	[Token(Token = "0x40019EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject prefabEqipCannon;

	[Token(Token = "0x40019EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject prefabEquipUpgrade;

	[Token(Token = "0x40019EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject animation;

	[Token(Token = "0x40019ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int curr_exe;

	[Token(Token = "0x40019EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private State state;

	[Token(Token = "0x40019EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private State last_state;

	[Token(Token = "0x40019F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SaveDataProfile profile;

	[Token(Token = "0x40019F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private TaskWindow task_wnd;

	[Token(Token = "0x40019F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private M_Event_ResultWin ev_result;

	[Token(Token = "0x40019F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private HighlightInterface highlight;

	[Token(Token = "0x40019F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ConfigPanel config_panel;

	[Token(Token = "0x40019F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private NEW_UI_aditional new_ui;

	[Token(Token = "0x40019F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int counter;

	[Token(Token = "0x40019F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool doubleHighlight;

	[Token(Token = "0x40019F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private UI_Equip equip_ui;

	[Token(Token = "0x40019F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject tempHL_object_Cannon;

	[Token(Token = "0x40019FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private HighlightInterface tempHL_Cannon;

	[Token(Token = "0x40019FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool highLightCanonClick;

	[Token(Token = "0x40019FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private GameObject tempHL_object_CannonDeck;

	[Token(Token = "0x40019FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private HighlightInterface tempHL_CannonDeck;

	[Token(Token = "0x40019FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool highLightCanonDeckClick;

	[Token(Token = "0x40019FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	private bool highLightCanonDeckClick_second;

	[Token(Token = "0x4001A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
	private bool highLightCanonDeckClick_third;

	[Token(Token = "0x4001A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCB")]
	private bool need_remove_listener_one_time;

	[Token(Token = "0x4001A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Button listenering_button;

	[Token(Token = "0x4001A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Slider listenering_slider;

	[Token(Token = "0x17000227")]
	private Button btnCannonSlot
	{
		[Token(Token = "0x600126C")]
		[Address(RVA = "0x160ABDC", Offset = "0x160ABDC", VA = "0x160ABDC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000228")]
	private Button btnCannonExtSlot
	{
		[Token(Token = "0x600126D")]
		[Address(RVA = "0x160AC58", Offset = "0x160AC58", VA = "0x160AC58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000229")]
	private Button btnCannonExtSlot2
	{
		[Token(Token = "0x600126E")]
		[Address(RVA = "0x160ACD4", Offset = "0x160ACD4", VA = "0x160ACD4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600125D")]
	[Address(RVA = "0x1608DE8", Offset = "0x1608DE8", VA = "0x1608DE8", Slot = "4")]
	public override void Launch()
	{
	}

	[Token(Token = "0x600125E")]
	[Address(RVA = "0x16091AC", Offset = "0x16091AC", VA = "0x16091AC")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x600125F")]
	[Address(RVA = "0x160929C", Offset = "0x160929C", VA = "0x160929C")]
	private void QuestLogic()
	{
	}

	[Token(Token = "0x6001260")]
	[Address(RVA = "0x160AD50", Offset = "0x160AD50", VA = "0x160AD50")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58BABC", Offset = "0x58BABC")]
	private IEnumerator Wait(float t)
	{
		return null;
	}

	[Token(Token = "0x6001261")]
	[Address(RVA = "0x160A4FC", Offset = "0x160A4FC", VA = "0x160A4FC")]
	private void AddListenerOneTime(Button btn)
	{
	}

	[Token(Token = "0x6001262")]
	[Address(RVA = "0x160ADE0", Offset = "0x160ADE0", VA = "0x160ADE0")]
	private void AddListenerOneTime(Slider slider)
	{
	}

	[Token(Token = "0x6001263")]
	[Address(RVA = "0x160A2E4", Offset = "0x160A2E4", VA = "0x160A2E4")]
	private void RemoveListenerOneTime()
	{
	}

	[Token(Token = "0x6001264")]
	[Address(RVA = "0x160AEB4", Offset = "0x160AEB4", VA = "0x160AEB4")]
	private void NextState_Slider(float f)
	{
	}

	[Token(Token = "0x6001265")]
	[Address(RVA = "0x160AECC", Offset = "0x160AECC", VA = "0x160AECC")]
	private void NextState()
	{
	}

	[Token(Token = "0x6001266")]
	[Address(RVA = "0x160AEE4", Offset = "0x160AEE4", VA = "0x160AEE4")]
	private void NextState_WithoutListener()
	{
	}

	[Token(Token = "0x6001267")]
	[Address(RVA = "0x160A9D4", Offset = "0x160A9D4", VA = "0x160A9D4")]
	private void SetActiveAllButtonsInEquipWindow(bool active)
	{
	}

	[Token(Token = "0x6001268")]
	[Address(RVA = "0x160A5A8", Offset = "0x160A5A8", VA = "0x160A5A8")]
	private void SetActiveAllButtons(bool active)
	{
	}

	[Token(Token = "0x6001269")]
	[Address(RVA = "0x160AEFC", Offset = "0x160AEFC", VA = "0x160AEFC")]
	private void GetQuestReward(SaveDataProfile profile_)
	{
	}

	[Token(Token = "0x600126A")]
	[Address(RVA = "0x1608FD0", Offset = "0x1608FD0", VA = "0x1608FD0")]
	private void CreateFakeProfile()
	{
	}

	[Token(Token = "0x600126B")]
	[Address(RVA = "0x160AF00", Offset = "0x160AF00", VA = "0x160AF00")]
	public void DiabaleHighlight()
	{
	}

	[Token(Token = "0x600126F")]
	[Address(RVA = "0x160AF04", Offset = "0x160AF04", VA = "0x160AF04")]
	public TutorialQuest5()
	{
	}

	[Token(Token = "0x6001271")]
	[Address(RVA = "0x160AF80", Offset = "0x160AF80", VA = "0x160AF80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58BB24", Offset = "0x58BB24")]
	private void <QuestLogic>b__28_0()
	{
	}
}
[Token(Token = "0x2000305")]
public class TutorialQuest6 : AbstractQuest
{
	[Token(Token = "0x2000306")]
	public enum States
	{
		[Token(Token = "0x4001A2C")]
		None,
		[Token(Token = "0x4001A2D")]
		WaitForPlayerOpenPerk,
		[Token(Token = "0x4001A2E")]
		WaitForPlayerAcceptReward
	}

	[Token(Token = "0x4001A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool isFiftyPercent;

	[Token(Token = "0x4001A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private States state;

	[Token(Token = "0x4001A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private HighlightInterface highlight;

	[Token(Token = "0x4001A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isPerkUsed;

	[Token(Token = "0x1700022C")]
	private GameObject btnTownMail
	{
		[Token(Token = "0x600127F")]
		[Address(RVA = "0x160B948", Offset = "0x160B948", VA = "0x160B948")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700022D")]
	private GameObject btnTownMail2
	{
		[Token(Token = "0x6001280")]
		[Address(RVA = "0x160B9B8", Offset = "0x160B9B8", VA = "0x160B9B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001278")]
	[Address(RVA = "0x160AF90", Offset = "0x160AF90", VA = "0x160AF90", Slot = "4")]
	public override void Launch()
	{
	}

	[Token(Token = "0x6001279")]
	[Address(RVA = "0x160B0A8", Offset = "0x160B0A8", VA = "0x160B0A8")]
	private void SetQuestParametersState(bool active)
	{
	}

	[Token(Token = "0x600127A")]
	[Address(RVA = "0x160B45C", Offset = "0x160B45C", VA = "0x160B45C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600127B")]
	[Address(RVA = "0x160B460", Offset = "0x160B460", VA = "0x160B460")]
	private void QuestLogic()
	{
	}

	[Token(Token = "0x600127C")]
	[Address(RVA = "0x160B7DC", Offset = "0x160B7DC", VA = "0x160B7DC")]
	private void OnPerkClicked(object obj)
	{
	}

	[Token(Token = "0x600127D")]
	[Address(RVA = "0x160B100", Offset = "0x160B100", VA = "0x160B100")]
	public void SetInteractableAllUIButtons(bool status)
	{
	}

	[Token(Token = "0x600127E")]
	[Address(RVA = "0x160B7E8", Offset = "0x160B7E8", VA = "0x160B7E8")]
	private void SetInteractibleButtonSpeedUP(bool status)
	{
	}

	[Token(Token = "0x6001281")]
	[Address(RVA = "0x160BA28", Offset = "0x160BA28", VA = "0x160BA28")]
	public TutorialQuest6()
	{
	}
}
[Token(Token = "0x2000307")]
public class TutorialQuest7 : AbstractQuest
{
	[Token(Token = "0x2000308")]
	public enum States
	{
		[Token(Token = "0x4001A36")]
		None,
		[Token(Token = "0x4001A37")]
		SpawnEnemy,
		[Token(Token = "0x4001A38")]
		SetupPlayerAndEnemy,
		[Token(Token = "0x4001A39")]
		WaitForShipExploration,
		[Token(Token = "0x4001A3A")]
		WaitForEnemyDestroyed,
		[Token(Token = "0x4001A3B")]
		RestoreProfileAndGetReward
	}

	[Token(Token = "0x2000309")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578F74", Offset = "0x578F74")]
	private sealed class <OpenSea>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialQuest7 <>4__this;

		[Token(Token = "0x1700022E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600129E")]
			[Address(RVA = "0x170259C", Offset = "0x170259C", VA = "0x170259C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012A0")]
			[Address(RVA = "0x17025E4", Offset = "0x17025E4", VA = "0x17025E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0x170239C", Offset = "0x170239C", VA = "0x170239C")]
		[DebuggerHidden]
		public <OpenSea>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0x17023C8", Offset = "0x17023C8", VA = "0x17023C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0x17023CC", Offset = "0x17023CC", VA = "0x17023CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0x17025A4", Offset = "0x17025A4", VA = "0x17025A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200030A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578F84", Offset = "0x578F84")]
	private sealed class <>c__DisplayClass23_0
	{
		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string ID;

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0x1702128", Offset = "0x1702128", VA = "0x1702128")]
		public <>c__DisplayClass23_0()
		{
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0x1702130", Offset = "0x1702130", VA = "0x1702130")]
		internal bool <AddItemToPlayer>b__0(Tovar t)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200030B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578F94", Offset = "0x578F94")]
	private sealed class <>c__DisplayClass24_0
	{
		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TutorialQuest7 <>4__this;

		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public States nextState;

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0x1702158", Offset = "0x1702158", VA = "0x1702158")]
		public <>c__DisplayClass24_0()
		{
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0x1702160", Offset = "0x1702160", VA = "0x1702160")]
		internal void <ShowInformation>b__0()
		{
		}
	}

	[Token(Token = "0x200030C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578FA4", Offset = "0x578FA4")]
	private sealed class <OpenMap>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialQuest7 <>4__this;

		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public States nextState;

		[Token(Token = "0x17000230")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012A8")]
			[Address(RVA = "0x170234C", Offset = "0x170234C", VA = "0x170234C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000231")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012AA")]
			[Address(RVA = "0x1702394", Offset = "0x1702394", VA = "0x1702394", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0x1702184", Offset = "0x1702184", VA = "0x1702184")]
		[DebuggerHidden]
		public <OpenMap>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0x17021B0", Offset = "0x17021B0", VA = "0x17021B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x17021B4", Offset = "0x17021B4", VA = "0x17021B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0x1702354", Offset = "0x1702354", VA = "0x1702354", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool isSpyglassTutor;

	[Token(Token = "0x4001A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private States state;

	[Token(Token = "0x4001A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private HighlightInterface highlight;

	[Token(Token = "0x4001A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TaskWindow task_wnd;

	[Token(Token = "0x4001A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Ship enemyShip;

	[Token(Token = "0x4001A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float savedTime;

	[Token(Token = "0x6001283")]
	[Address(RVA = "0x160BA98", Offset = "0x160BA98", VA = "0x160BA98", Slot = "4")]
	public override void Launch()
	{
	}

	[Token(Token = "0x6001284")]
	[Address(RVA = "0x160BD64", Offset = "0x160BD64", VA = "0x160BD64")]
	private void СloseMap()
	{
	}

	[Token(Token = "0x6001285")]
	[Address(RVA = "0x160BD90", Offset = "0x160BD90", VA = "0x160BD90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58BB84", Offset = "0x58BB84")]
	private IEnumerator OpenSea()
	{
		return null;
	}

	[Token(Token = "0x6001286")]
	[Address(RVA = "0x160BC4C", Offset = "0x160BC4C", VA = "0x160BC4C")]
	private void SetQuestParametersState(bool active)
	{
	}

	[Token(Token = "0x6001287")]
	[Address(RVA = "0x160BE10", Offset = "0x160BE10", VA = "0x160BE10")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001288")]
	[Address(RVA = "0x160BE38", Offset = "0x160BE38", VA = "0x160BE38")]
	private void QuestLogic()
	{
	}

	[Token(Token = "0x6001289")]
	[Address(RVA = "0x160C710", Offset = "0x160C710", VA = "0x160C710")]
	private void SetPlayerPosition()
	{
	}

	[Token(Token = "0x600128A")]
	[Address(RVA = "0x160C524", Offset = "0x160C524", VA = "0x160C524")]
	private void SetMyShipAndCamerRotationTowardsEnemy()
	{
	}

	[Token(Token = "0x600128B")]
	[Address(RVA = "0x160CDB0", Offset = "0x160CDB0", VA = "0x160CDB0")]
	private bool DoesPlayerHasCannonBalls()
	{
		return default(bool);
	}

	[Token(Token = "0x600128C")]
	[Address(RVA = "0x160D218", Offset = "0x160D218", VA = "0x160D218")]
	private void HideAllNotify()
	{
	}

	[Token(Token = "0x600128D")]
	[Address(RVA = "0x160CA88", Offset = "0x160CA88", VA = "0x160CA88")]
	private void RefreshShipParametrs()
	{
	}

	[Token(Token = "0x600128E")]
	[Address(RVA = "0x160C360", Offset = "0x160C360", VA = "0x160C360")]
	public Ship SpawnEnemyShip()
	{
		return null;
	}

	[Token(Token = "0x600128F")]
	[Address(RVA = "0x160C648", Offset = "0x160C648", VA = "0x160C648")]
	private void RemoveArtefactsFromEnemy()
	{
	}

	[Token(Token = "0x6001290")]
	[Address(RVA = "0x160C7AC", Offset = "0x160C7AC", VA = "0x160C7AC")]
	private void ClearTrum()
	{
	}

	[Token(Token = "0x6001291")]
	[Address(RVA = "0x160D2E0", Offset = "0x160D2E0", VA = "0x160D2E0")]
	private bool IsItemCrewMan(Tovar t)
	{
		return default(bool);
	}

	[Token(Token = "0x6001292")]
	[Address(RVA = "0x160C9C8", Offset = "0x160C9C8", VA = "0x160C9C8")]
	private void AddCannonBallsAndSpyGlass()
	{
	}

	[Token(Token = "0x6001293")]
	[Address(RVA = "0x160D024", Offset = "0x160D024", VA = "0x160D024")]
	private void AddItemToPlayer(string ID, int count)
	{
	}

	[Token(Token = "0x6001294")]
	[Address(RVA = "0x160CC44", Offset = "0x160CC44", VA = "0x160CC44")]
	public void ShowInformation(string text, States nextState)
	{
	}

	[Token(Token = "0x6001295")]
	[Address(RVA = "0x160D318", Offset = "0x160D318", VA = "0x160D318")]
	private void CloseSea()
	{
	}

	[Token(Token = "0x6001296")]
	[Address(RVA = "0x160D34C", Offset = "0x160D34C", VA = "0x160D34C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58BBEC", Offset = "0x58BBEC")]
	private IEnumerator OpenMap(States nextState)
	{
		return null;
	}

	[Token(Token = "0x6001297")]
	[Address(RVA = "0x160CB98", Offset = "0x160CB98", VA = "0x160CB98")]
	private void SetInteractableAllUI(bool action)
	{
	}

	[Token(Token = "0x6001298")]
	[Address(RVA = "0x160D3D4", Offset = "0x160D3D4", VA = "0x160D3D4")]
	public TutorialQuest7()
	{
	}

	[Token(Token = "0x600129A")]
	[Address(RVA = "0x160D444", Offset = "0x160D444", VA = "0x160D444")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58BC54", Offset = "0x58BC54")]
	private void <OpenSea>b__9_0()
	{
	}
}
[Token(Token = "0x200030D")]
public class TutorialQuest8 : AbstractQuest
{
	[Token(Token = "0x200030E")]
	public enum States
	{
		[Token(Token = "0x4001A50")]
		None,
		[Token(Token = "0x4001A51")]
		SpawnFirstEnemy,
		[Token(Token = "0x4001A52")]
		SetupPlayerAndEnemy,
		[Token(Token = "0x4001A53")]
		WaitForPlayerUseArtefact,
		[Token(Token = "0x4001A54")]
		SetupEnemies,
		[Token(Token = "0x4001A55")]
		RotateCameraTowardsEnemies,
		[Token(Token = "0x4001A56")]
		WaitForEnemiesDestroyed,
		[Token(Token = "0x4001A57")]
		RestoreProfileAndGetReward,
		[Token(Token = "0x4001A58")]
		Final
	}

	[Token(Token = "0x200030F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578FB4", Offset = "0x578FB4")]
	private sealed class <OpenSea>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialQuest8 <>4__this;

		[Token(Token = "0x17000232")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012CF")]
			[Address(RVA = "0x1702A88", Offset = "0x1702A88", VA = "0x1702A88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000233")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012D1")]
			[Address(RVA = "0x1702AD0", Offset = "0x1702AD0", VA = "0x1702AD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0x1702888", Offset = "0x1702888", VA = "0x1702888")]
		[DebuggerHidden]
		public <OpenSea>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0x17028B4", Offset = "0x17028B4", VA = "0x17028B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0x17028B8", Offset = "0x17028B8", VA = "0x17028B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0x1702A90", Offset = "0x1702A90", VA = "0x1702A90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000310")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578FC4", Offset = "0x578FC4")]
	private sealed class <>c__DisplayClass28_0
	{
		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TutorialQuest8 <>4__this;

		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public States nextState;

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x17025EC", Offset = "0x17025EC", VA = "0x17025EC")]
		public <>c__DisplayClass28_0()
		{
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x17025F4", Offset = "0x17025F4", VA = "0x17025F4")]
		internal void <ShowInformation>b__0()
		{
		}
	}

	[Token(Token = "0x2000311")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578FD4", Offset = "0x578FD4")]
	private sealed class <>c__DisplayClass29_0
	{
		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action onClose;

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0x1702618", Offset = "0x1702618", VA = "0x1702618")]
		public <>c__DisplayClass29_0()
		{
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0x1702620", Offset = "0x1702620", VA = "0x1702620")]
		internal void <ShowInformation>b__0()
		{
		}
	}

	[Token(Token = "0x2000312")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578FE4", Offset = "0x578FE4")]
	private sealed class <OpenMap>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialQuest8 <>4__this;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public States nextState;

		[Token(Token = "0x17000234")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012D9")]
			[Address(RVA = "0x1702838", Offset = "0x1702838", VA = "0x1702838", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000235")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012DB")]
			[Address(RVA = "0x1702880", Offset = "0x1702880", VA = "0x1702880", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0x1702670", Offset = "0x1702670", VA = "0x1702670")]
		[DebuggerHidden]
		public <OpenMap>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0x170269C", Offset = "0x170269C", VA = "0x170269C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0x17026A0", Offset = "0x17026A0", VA = "0x17026A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0x1702840", Offset = "0x1702840", VA = "0x1702840", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000313")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578FF4", Offset = "0x578FF4")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string ID;

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0x1702640", Offset = "0x1702640", VA = "0x1702640")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0x1702648", Offset = "0x1702648", VA = "0x1702648")]
		internal bool <AddItemToPlayer>b__0(Tovar t)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000314")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579004", Offset = "0x579004")]
	private sealed class <WaitTime>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialQuest8 <>4__this;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float time;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public States nextState;

		[Token(Token = "0x17000236")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012E1")]
			[Address(RVA = "0x1702BD4", Offset = "0x1702BD4", VA = "0x1702BD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000237")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012E3")]
			[Address(RVA = "0x1702C1C", Offset = "0x1702C1C", VA = "0x1702C1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0x1702AD8", Offset = "0x1702AD8", VA = "0x1702AD8")]
		[DebuggerHidden]
		public <WaitTime>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0x1702B04", Offset = "0x1702B04", VA = "0x1702B04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0x1702B08", Offset = "0x1702B08", VA = "0x1702B08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0x1702BDC", Offset = "0x1702BDC", VA = "0x1702BDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000315")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579014", Offset = "0x579014")]
	private sealed class <WaitTime>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialQuest8 <>4__this;

		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float time;

		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public H_Core.H_delegate LoadingMoment;

		[Token(Token = "0x17000238")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012E7")]
			[Address(RVA = "0x1702D30", Offset = "0x1702D30", VA = "0x1702D30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000239")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012E9")]
			[Address(RVA = "0x1702D78", Offset = "0x1702D78", VA = "0x1702D78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0x1702C24", Offset = "0x1702C24", VA = "0x1702C24")]
		[DebuggerHidden]
		public <WaitTime>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0x1702C50", Offset = "0x1702C50", VA = "0x1702C50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0x1702C54", Offset = "0x1702C54", VA = "0x1702C54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0x1702D38", Offset = "0x1702D38", VA = "0x1702D38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool isArtifactTutor;

	[Token(Token = "0x4001A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private States state;

	[Token(Token = "0x4001A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private HighlightInterface highlight;

	[Token(Token = "0x4001A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TaskWindow task_wnd;

	[Token(Token = "0x4001A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Ship enemyShip1;

	[Token(Token = "0x4001A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Ship enemyShip2;

	[Token(Token = "0x4001A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Ship enemyShip3;

	[Token(Token = "0x4001A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Dictionary<int, int> equipedArtefacts;

	[Token(Token = "0x4001A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float savedTime;

	[Token(Token = "0x60012AB")]
	[Address(RVA = "0x160D450", Offset = "0x160D450", VA = "0x160D450", Slot = "4")]
	public override void Launch()
	{
	}

	[Token(Token = "0x60012AC")]
	[Address(RVA = "0x160D6DC", Offset = "0x160D6DC", VA = "0x160D6DC")]
	private void СloseMap()
	{
	}

	[Token(Token = "0x60012AD")]
	[Address(RVA = "0x160D708", Offset = "0x160D708", VA = "0x160D708")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58BD04", Offset = "0x58BD04")]
	private IEnumerator OpenSea()
	{
		return null;
	}

	[Token(Token = "0x60012AE")]
	[Address(RVA = "0x160D604", Offset = "0x160D604", VA = "0x160D604")]
	private void SetQuestParametersState(bool active)
	{
	}

	[Token(Token = "0x60012AF")]
	[Address(RVA = "0x160D788", Offset = "0x160D788", VA = "0x160D788")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60012B0")]
	[Address(RVA = "0x160D78C", Offset = "0x160D78C", VA = "0x160D78C")]
	private void QuestLogic()
	{
	}

	[Token(Token = "0x60012B1")]
	[Address(RVA = "0x160F31C", Offset = "0x160F31C", VA = "0x160F31C")]
	private void OpenSeaAfterBlackScreen()
	{
	}

	[Token(Token = "0x60012B2")]
	[Address(RVA = "0x160F3D4", Offset = "0x160F3D4", VA = "0x160F3D4")]
	private void SpawnEnemies()
	{
	}

	[Token(Token = "0x60012B3")]
	[Address(RVA = "0x160ECE0", Offset = "0x160ECE0", VA = "0x160ECE0")]
	private void CameraLookAtEnemy()
	{
	}

	[Token(Token = "0x60012B4")]
	[Address(RVA = "0x160ED78", Offset = "0x160ED78", VA = "0x160ED78")]
	private bool IsCameraAimedAtEnemy()
	{
		return default(bool);
	}

	[Token(Token = "0x60012B5")]
	[Address(RVA = "0x160EAB4", Offset = "0x160EAB4", VA = "0x160EAB4")]
	private void HideAllNotify()
	{
	}

	[Token(Token = "0x60012B6")]
	[Address(RVA = "0x160E680", Offset = "0x160E680", VA = "0x160E680")]
	private void RefreshShipParametrs()
	{
	}

	[Token(Token = "0x60012B7")]
	[Address(RVA = "0x160DEB4", Offset = "0x160DEB4", VA = "0x160DEB4")]
	public Ship SpawnEnemyShip(Vector3 spawnCoordinates)
	{
		return null;
	}

	[Token(Token = "0x60012B8")]
	[Address(RVA = "0x160E74C", Offset = "0x160E74C", VA = "0x160E74C")]
	private void RemoveArtefactsFromShip(Ship ship)
	{
	}

	[Token(Token = "0x60012B9")]
	[Address(RVA = "0x160F574", Offset = "0x160F574", VA = "0x160F574")]
	private bool IsItemCrewMan(Tovar t)
	{
		return default(bool);
	}

	[Token(Token = "0x60012BA")]
	[Address(RVA = "0x160E084", Offset = "0x160E084", VA = "0x160E084")]
	private void ClearTrum()
	{
	}

	[Token(Token = "0x60012BB")]
	[Address(RVA = "0x160E2A0", Offset = "0x160E2A0", VA = "0x160E2A0")]
	private void RemoveArtefactsFromMyShip(bool save = false)
	{
	}

	[Token(Token = "0x60012BC")]
	[Address(RVA = "0x160F158", Offset = "0x160F158", VA = "0x160F158")]
	private void RestorePlayerArtefactsOnShip()
	{
	}

	[Token(Token = "0x60012BD")]
	[Address(RVA = "0x160E8D0", Offset = "0x160E8D0", VA = "0x160E8D0")]
	public void ShowInformation(string text, States nextState)
	{
	}

	[Token(Token = "0x60012BE")]
	[Address(RVA = "0x160EB7C", Offset = "0x160EB7C", VA = "0x160EB7C")]
	public void ShowInformation(string text, Action onClose)
	{
	}

	[Token(Token = "0x60012BF")]
	[Address(RVA = "0x160F5AC", Offset = "0x160F5AC", VA = "0x160F5AC")]
	private void CloseSea()
	{
	}

	[Token(Token = "0x60012C0")]
	[Address(RVA = "0x160F5E0", Offset = "0x160F5E0", VA = "0x160F5E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58BD6C", Offset = "0x58BD6C")]
	private IEnumerator OpenMap(States nextState)
	{
		return null;
	}

	[Token(Token = "0x60012C1")]
	[Address(RVA = "0x160EA3C", Offset = "0x160EA3C", VA = "0x160EA3C")]
	private void SetInteractableAllUI(bool action)
	{
	}

	[Token(Token = "0x60012C2")]
	[Address(RVA = "0x160E48C", Offset = "0x160E48C", VA = "0x160E48C")]
	private void AddItemToPlayer(string ID, int count)
	{
	}

	[Token(Token = "0x60012C3")]
	[Address(RVA = "0x160E804", Offset = "0x160E804", VA = "0x160E804")]
	private void SetEnemyShipHP(Ship ship)
	{
	}

	[Token(Token = "0x60012C4")]
	[Address(RVA = "0x160F4DC", Offset = "0x160F4DC", VA = "0x160F4DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58BDD4", Offset = "0x58BDD4")]
	private IEnumerator WaitTime(float time, States nextState)
	{
		return null;
	}

	[Token(Token = "0x60012C5")]
	[Address(RVA = "0x160F0B4", Offset = "0x160F0B4", VA = "0x160F0B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58BE3C", Offset = "0x58BE3C")]
	private IEnumerator WaitTime(float time, H_Core.H_delegate LoadingMoment)
	{
		return null;
	}

	[Token(Token = "0x60012C6")]
	[Address(RVA = "0x160EE18", Offset = "0x160EE18", VA = "0x160EE18")]
	public void SetInteractableAllUIButtons(bool status)
	{
	}

	[Token(Token = "0x60012C7")]
	[Address(RVA = "0x160F668", Offset = "0x160F668", VA = "0x160F668")]
	private void SetInteractibleButtonSpeedUP(bool status)
	{
	}

	[Token(Token = "0x60012C8")]
	[Address(RVA = "0x160F7C8", Offset = "0x160F7C8", VA = "0x160F7C8")]
	public TutorialQuest8()
	{
	}

	[Token(Token = "0x60012CA")]
	[Address(RVA = "0x160F88C", Offset = "0x160F88C", VA = "0x160F88C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58BEA4", Offset = "0x58BEA4")]
	private void <OpenSea>b__12_0()
	{
	}

	[Token(Token = "0x60012CB")]
	[Address(RVA = "0x160F898", Offset = "0x160F898", VA = "0x160F898")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58BEB4", Offset = "0x58BEB4")]
	private void <QuestLogic>b__15_0()
	{
	}
}
[Token(Token = "0x2000316")]
public class TutorialQuest9 : AbstractQuest
{
	[Token(Token = "0x2000317")]
	public enum QuestPhase
	{
		[Token(Token = "0x4001A7B")]
		ShowLowOffer,
		[Token(Token = "0x4001A7C")]
		WaitForPlayerBuyGoods,
		[Token(Token = "0x4001A7D")]
		ShowHighOffer,
		[Token(Token = "0x4001A7E")]
		WaitForPlayerSellGoods,
		[Token(Token = "0x4001A7F")]
		None
	}

	[Serializable]
	[Token(Token = "0x2000318")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579024", Offset = "0x579024")]
	private sealed class <>c
	{
		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<Tovar> <>9__19_0;

		[Token(Token = "0x6001303")]
		[Address(RVA = "0x1702DE4", Offset = "0x1702DE4", VA = "0x1702DE4")]
		public <>c()
		{
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0x1702DEC", Offset = "0x1702DEC", VA = "0x1702DEC")]
		internal bool <Launch>b__19_0(Tovar t)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4001A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Tovar selectedItemQuest;

	[Token(Token = "0x4001A6F")]
	public const int QUEST_ITEM_PRICE = 50;

	[Token(Token = "0x4001A70")]
	public const int QUEST_ITEM_SELL_PRICE = 42;

	[Token(Token = "0x4001A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public QuestPhase questPhase;

	[Token(Token = "0x4001A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite lowOfferImage;

	[Token(Token = "0x4001A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite highOfferImage;

	[Token(Token = "0x4001A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private HighlightInterface highlight;

	[Token(Token = "0x4001A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private M_Event_ResultWin ev_result;

	[Token(Token = "0x4001A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Button listening_button;

	[Token(Token = "0x4001A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private UnityAction listening_button_action;

	[Token(Token = "0x4001A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject highLightObjectCopy;

	[Token(Token = "0x4001A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Tovar questItem;

	[Token(Token = "0x1700023A")]
	private Tovar questItemInTrum
	{
		[Token(Token = "0x60012EA")]
		[Address(RVA = "0x160F89C", Offset = "0x160F89C", VA = "0x160F89C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700023B")]
	private Button BtnBuy
	{
		[Token(Token = "0x60012EB")]
		[Address(RVA = "0x160FA6C", Offset = "0x160FA6C", VA = "0x160FA6C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700023C")]
	private Button BtnSell
	{
		[Token(Token = "0x60012EC")]
		[Address(RVA = "0x160FAF8", Offset = "0x160FAF8", VA = "0x160FAF8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60012ED")]
	[Address(RVA = "0x160FB84", Offset = "0x160FB84", VA = "0x160FB84", Slot = "4")]
	public override void Launch()
	{
	}

	[Token(Token = "0x60012EE")]
	[Address(RVA = "0x16100E0", Offset = "0x16100E0", VA = "0x16100E0")]
	private void OpenMapAndShowOffer(bool lowOffer)
	{
	}

	[Token(Token = "0x60012EF")]
	[Address(RVA = "0x16104B0", Offset = "0x16104B0", VA = "0x16104B0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60012F0")]
	[Address(RVA = "0x161091C", Offset = "0x161091C", VA = "0x161091C")]
	private RectTransform FindQuestItemInMarket()
	{
		return null;
	}

	[Token(Token = "0x60012F1")]
	[Address(RVA = "0x1610D84", Offset = "0x1610D84", VA = "0x1610D84")]
	private RectTransform FindQuestItemInTrum()
	{
		return null;
	}

	[Token(Token = "0x60012F2")]
	[Address(RVA = "0x160F8A0", Offset = "0x160F8A0", VA = "0x160F8A0")]
	private Tovar FindItemInTrum()
	{
		return null;
	}

	[Token(Token = "0x60012F3")]
	[Address(RVA = "0x1610F64", Offset = "0x1610F64", VA = "0x1610F64")]
	private void CheckIfItemBought()
	{
	}

	[Token(Token = "0x60012F4")]
	[Address(RVA = "0x16113C8", Offset = "0x16113C8", VA = "0x16113C8")]
	private void CheckIfItemSold()
	{
	}

	[Token(Token = "0x60012F5")]
	[Address(RVA = "0x1610A14", Offset = "0x1610A14", VA = "0x1610A14")]
	private RectTransform FindItemToHighlight(int index)
	{
		return null;
	}

	[Token(Token = "0x60012F6")]
	[Address(RVA = "0x16114E8", Offset = "0x16114E8", VA = "0x16114E8")]
	private void SetHighlight(RectTransform itemToHighlight, float scaleParam = 1f)
	{
	}

	[Token(Token = "0x60012F7")]
	[Address(RVA = "0x16104C8", Offset = "0x16104C8", VA = "0x16104C8")]
	private void InTownLogic()
	{
	}

	[Token(Token = "0x60012F8")]
	[Address(RVA = "0x1610078", Offset = "0x1610078", VA = "0x1610078")]
	private void SetItemPrice(bool forSell, Tovar tovar)
	{
	}

	[Token(Token = "0x60012F9")]
	[Address(RVA = "0x16110C8", Offset = "0x16110C8", VA = "0x16110C8")]
	private void RemoveQuestItemFromTown()
	{
	}

	[Token(Token = "0x60012FA")]
	[Address(RVA = "0x160FEA0", Offset = "0x160FEA0", VA = "0x160FEA0")]
	private void AddQuestItemToTown()
	{
	}

	[Token(Token = "0x60012FB")]
	[Address(RVA = "0x1611698", Offset = "0x1611698", VA = "0x1611698")]
	private void AddListenerOneTime(Button btn, UnityAction myAction)
	{
	}

	[Token(Token = "0x60012FC")]
	[Address(RVA = "0x16112DC", Offset = "0x16112DC", VA = "0x16112DC")]
	private void RemoveListenerOneTime()
	{
	}

	[Token(Token = "0x60012FD")]
	[Address(RVA = "0x16116F4", Offset = "0x16116F4", VA = "0x16116F4")]
	private void SetPreviousQuestStep()
	{
	}

	[Token(Token = "0x60012FE")]
	[Address(RVA = "0x1611760", Offset = "0x1611760", VA = "0x1611760")]
	public TutorialQuest9()
	{
	}

	[Token(Token = "0x60012FF")]
	[Address(RVA = "0x16117CC", Offset = "0x16117CC", VA = "0x16117CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58C004", Offset = "0x58C004")]
	private void <Launch>b__19_1()
	{
	}

	[Token(Token = "0x6001300")]
	[Address(RVA = "0x16117D4", Offset = "0x16117D4", VA = "0x16117D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58C014", Offset = "0x58C014")]
	private void <Launch>b__19_2()
	{
	}

	[Token(Token = "0x6001301")]
	[Address(RVA = "0x16117DC", Offset = "0x16117DC", VA = "0x16117DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58C024", Offset = "0x58C024")]
	private void <OpenMapAndShowOffer>b__20_0()
	{
	}
}
[Token(Token = "0x2000319")]
public class Tutorial_Animation : MonoBehaviour
{
	[Token(Token = "0x4001A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float Position;

	[Token(Token = "0x4001A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float Timer;

	[Token(Token = "0x6001305")]
	[Address(RVA = "0x16117E4", Offset = "0x16117E4", VA = "0x16117E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001306")]
	[Address(RVA = "0x16117E8", Offset = "0x16117E8", VA = "0x16117E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001307")]
	[Address(RVA = "0x16118E0", Offset = "0x16118E0", VA = "0x16118E0")]
	public Tutorial_Animation()
	{
	}
}
[Token(Token = "0x200031A")]
public class T_Core : MonoBehaviour
{
	[Token(Token = "0x4001A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip DLC_cageOpen;

	[Token(Token = "0x4001A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] AllLandingFX;

	[Token(Token = "0x4001A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject HQwaterTrackPoint;

	[Token(Token = "0x4001A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Mesh[] Anim;

	[Token(Token = "0x4001A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject TownArea;

	[Token(Token = "0x4001A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material MapSmall0;

	[Token(Token = "0x4001A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material MapSmall1;

	[Token(Token = "0x4001A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material MapSmall2;

	[Token(Token = "0x4001A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material MapSmall3;

	[Token(Token = "0x4001A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioClip[] BoardingShoot;

	[Token(Token = "0x4001A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClip[] BoardingHit;

	[Token(Token = "0x4001A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioClip[] BoardingSword;

	[Token(Token = "0x4001A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material[] AbRanks;

	[Token(Token = "0x4001A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject HPDamage;

	[Token(Token = "0x4001A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static T_Core MySelf;

	[Token(Token = "0x4001A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Ship MyShip;

	[Token(Token = "0x4001A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Ship LastSpounedShip;

	[Token(Token = "0x4001A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject ChangeOrEquip_BTN_remote;

	[Token(Token = "0x4001A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject Buy_BTN_remote;

	[Token(Token = "0x4001A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject Buy_SELL_remote;

	[Token(Token = "0x4001A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject Buy_BTN_prem_remote;

	[Token(Token = "0x4001A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AudioClip AlarmBell;

	[Token(Token = "0x4001A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static float AlarmBellT;

	[Token(Token = "0x4001A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static float OneColisSound;

	[Token(Token = "0x4001A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject _Telegraph;

	[Token(Token = "0x4001A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject Marker;

	[Token(Token = "0x4001A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float Rotor1;

	[Token(Token = "0x4001A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float[] angleF;

	[Token(Token = "0x4001AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AudioClip[] Hit;

	[Token(Token = "0x4001AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject[] AllSnarTypeList;

	[Token(Token = "0x4001AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static float TeamTimer;

	[Token(Token = "0x4001AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public TowarLootLoad TowarLootLoad;

	[Token(Token = "0x4001AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject SinkinPFX_prefab;

	[Token(Token = "0x4001AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject EpicBoomPFX_prefab;

	[Token(Token = "0x4001AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject EpicBoomPFX_prefab_small;

	[Token(Token = "0x4001AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject MiddleBoomPFX_prefab;

	[Token(Token = "0x4001AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject SmallBoomPFX_prefab;

	[Token(Token = "0x4001AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject CollidePFX_prefab;

	[Token(Token = "0x4001AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject EpicWaterSplash;

	[Token(Token = "0x4001AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public AudioClip WaterSplashSound;

	[Token(Token = "0x4001AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject SinkinFast;

	[Token(Token = "0x4001AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public AudioClip SinkinSound;

	[Token(Token = "0x4001AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject FastRepair_Pref;

	[Token(Token = "0x4001AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject FastRELOADER_Pref;

	[Token(Token = "0x4001AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject Octopus;

	[Token(Token = "0x4001AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject Meteor;

	[Token(Token = "0x4001AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject Flash;

	[Token(Token = "0x4001AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject IceRain;

	[Token(Token = "0x4001AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public AudioClip[] FlashSnd;

	[Token(Token = "0x4001AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public AudioClip[] Shooting;

	[Token(Token = "0x4001AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public AudioClip[] CustomShooting;

	[Token(Token = "0x4001AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public AudioClip[] DeployingSails;

	[Token(Token = "0x4001AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public AudioClip[] BigExplose;

	[Token(Token = "0x4001AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public AudioClip[] TeamScreem;

	[Token(Token = "0x4001ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public AudioClip[] HitShip;

	[Token(Token = "0x4001ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public AudioClip[] WaterSplashes;

	[Token(Token = "0x4001ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public AudioClip magicShieldFX;

	[Token(Token = "0x4001ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public AudioClip IceRainSound;

	[Token(Token = "0x4001ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public GameObject HitFX_Shield;

	[Token(Token = "0x4001ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public AudioClip[] MiddleExplose;

	[Token(Token = "0x4001AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public AudioClip[] SmallHit;

	[Token(Token = "0x4001AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public AudioClip treashuresound;

	[Token(Token = "0x4001AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public AudioClip FlameThrower;

	[Token(Token = "0x4001AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public AudioClip Healer;

	[Token(Token = "0x4001AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public GameObject DelayAttak;

	[Token(Token = "0x4001AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public GameObject CatchCanonball;

	[Token(Token = "0x4001AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public GameObject SmallWaterSplash;

	[Token(Token = "0x4001AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public GameObject MinePrefab;

	[Token(Token = "0x4001AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public GameObject[] Pref_Ranks;

	[Token(Token = "0x4001AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public Sprite[] ShipIcons;

	[Token(Token = "0x4001ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public int[] ShipDescribeLoc;

	[Token(Token = "0x4001ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public GameObject[] Pref_Towers;

	[Token(Token = "0x4001ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public GameObject[] Pref_Artefacts;

	[Token(Token = "0x4001ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public GameObject[] Pref_PickUp;

	[Token(Token = "0x4001ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public Material[] Ship_Deck_Mtrl;

	[Token(Token = "0x4001ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public Material[] Ship_Cases_Mtrl;

	[Token(Token = "0x4001AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static bool LocaLoad;

	[Token(Token = "0x4001AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private Vector3 LastPickUpCrd;

	[Token(Token = "0x4001AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static int LAST_VALUE;

	[Token(Token = "0x6001308")]
	[Address(RVA = "0x169104C", Offset = "0x169104C", VA = "0x169104C")]
	public void Put_PickUp(Vector3 where, int TowarIndex, int counts, bool localPickup = true, [Optional] Transform ItParent)
	{
	}

	[Token(Token = "0x6001309")]
	[Address(RVA = "0x16912FC", Offset = "0x16912FC", VA = "0x16912FC")]
	public static void HEAL_SHIP(bool anywayDO = false)
	{
	}

	[Token(Token = "0x600130A")]
	[Address(RVA = "0x1691AF4", Offset = "0x1691AF4", VA = "0x1691AF4")]
	public Ship InitShipAsPlayer(ShipParams Config, int _UniqueID, int Flag, float SpounX, float SpounY, float Angle, bool isMy, bool isAI, float TargetSpped, bool isqwest, bool isQwestChangeTeam, int initialFracIndex, [Optional] Loot Loot_Index)
	{
		return null;
	}

	[Token(Token = "0x600130B")]
	[Address(RVA = "0x16924A8", Offset = "0x16924A8", VA = "0x16924A8")]
	public void InitShipAsPlayer(int CaseView, int _UniqueID, int Flag, int Frac, float SpounX, float SpounY, float Angle, bool isMy, bool isAI, float TargetSpped, bool isqwest, [Optional] Loot Loot_Index)
	{
	}

	[Token(Token = "0x600130C")]
	[Address(RVA = "0x1693048", Offset = "0x1693048", VA = "0x1693048")]
	public Ship InitShipAsPreview(Tovar shipTovar, Vector3 position, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x600130D")]
	[Address(RVA = "0x16932A4", Offset = "0x16932A4", VA = "0x16932A4")]
	public void PutMine(Vector3 whereSplash, GameObject owner, float power)
	{
	}

	[Token(Token = "0x600130E")]
	[Address(RVA = "0x16934B0", Offset = "0x16934B0", VA = "0x16934B0")]
	public void PutSmallWaterSplash(Vector3 whereSplash, bool WithSound)
	{
	}

	[Token(Token = "0x600130F")]
	[Address(RVA = "0x169367C", Offset = "0x169367C", VA = "0x169367C")]
	public void PutFlash(Vector3 whereFlash)
	{
	}

	[Token(Token = "0x6001310")]
	[Address(RVA = "0x169380C", Offset = "0x169380C", VA = "0x169380C")]
	public void PutSinkin(Vector3 whereSinkin)
	{
	}

	[Token(Token = "0x6001311")]
	[Address(RVA = "0x1693938", Offset = "0x1693938", VA = "0x1693938")]
	public void PutSinkinFast(Vector3 whereSinkin)
	{
	}

	[Token(Token = "0x6001312")]
	[Address(RVA = "0x1693A64", Offset = "0x1693A64", VA = "0x1693A64")]
	public void PutEpicWaterSplash(Vector3 Where, float volume = 1.2f)
	{
	}

	[Token(Token = "0x6001313")]
	[Address(RVA = "0x1693C08", Offset = "0x1693C08", VA = "0x1693C08")]
	public void PutEpicBoom(Vector3 whereBoom)
	{
	}

	[Token(Token = "0x6001314")]
	[Address(RVA = "0x1693DA4", Offset = "0x1693DA4", VA = "0x1693DA4")]
	public void PutEpicBoomSmall(Vector3 whereBoom)
	{
	}

	[Token(Token = "0x6001315")]
	[Address(RVA = "0x1693EE4", Offset = "0x1693EE4", VA = "0x1693EE4")]
	public void PutTeamScreem(Vector3 whereTeam)
	{
	}

	[Token(Token = "0x6001316")]
	[Address(RVA = "0x1694014", Offset = "0x1694014", VA = "0x1694014")]
	public void PutCatchCanonball(Vector3 whereit)
	{
	}

	[Token(Token = "0x6001317")]
	[Address(RVA = "0x169411C", Offset = "0x169411C", VA = "0x169411C")]
	public void PutShieldHit(Vector3 whereit)
	{
	}

	[Token(Token = "0x6001318")]
	[Address(RVA = "0x1694188", Offset = "0x1694188", VA = "0x1694188")]
	public void GetTreashure()
	{
	}

	[Token(Token = "0x6001319")]
	[Address(RVA = "0x16941C0", Offset = "0x16941C0", VA = "0x16941C0")]
	public void PutMiddleBoom(Vector3 whereBoom)
	{
	}

	[Token(Token = "0x600131A")]
	[Address(RVA = "0x169436C", Offset = "0x169436C", VA = "0x169436C")]
	public void PutSmallHit(Vector3 whereBoom)
	{
	}

	[Token(Token = "0x600131B")]
	[Address(RVA = "0x1694510", Offset = "0x1694510", VA = "0x1694510")]
	public void PutCollision(Vector3 whereColide)
	{
	}

	[Token(Token = "0x600131C")]
	[Address(RVA = "0x16946FC", Offset = "0x16946FC", VA = "0x16946FC")]
	public void PutFlamethrower(Vector3 whereit)
	{
	}

	[Token(Token = "0x600131D")]
	[Address(RVA = "0x1694714", Offset = "0x1694714", VA = "0x1694714")]
	public static int ParseFraction(string fractionName)
	{
		return default(int);
	}

	[Token(Token = "0x600131E")]
	[Address(RVA = "0x169492C", Offset = "0x169492C", VA = "0x169492C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600131F")]
	[Address(RVA = "0x16949A0", Offset = "0x16949A0", VA = "0x16949A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001320")]
	[Address(RVA = "0x1694CD8", Offset = "0x1694CD8", VA = "0x1694CD8")]
	public T_Core()
	{
	}
}
[Token(Token = "0x200031B")]
public class HighlightInterface : MonoBehaviour
{
	[Token(Token = "0x4001AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject pcTutorialButtonHighlight;

	[Token(Token = "0x4001AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject mobileTutorialButtonHighlight;

	[Token(Token = "0x4001AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform new_position;

	[Token(Token = "0x4001AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float scale_param;

	[Token(Token = "0x4001AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform startTransform;

	[Token(Token = "0x4001AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int startSibling;

	[Token(Token = "0x1700023D")]
	public GameObject ButtonHighlight
	{
		[Token(Token = "0x6001325")]
		[Address(RVA = "0x155E498", Offset = "0x155E498", VA = "0x155E498")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001322")]
	[Address(RVA = "0x155DFB0", Offset = "0x155DFB0", VA = "0x155DFB0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001323")]
	[Address(RVA = "0x155DFB4", Offset = "0x155DFB4", VA = "0x155DFB4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001324")]
	[Address(RVA = "0x155E104", Offset = "0x155E104", VA = "0x155E104")]
	public void Set(bool active, [Optional] Transform position, bool need_resize_effect = false, float scale_param_ = 1f)
	{
	}

	[Token(Token = "0x6001326")]
	[Address(RVA = "0x155E4A0", Offset = "0x155E4A0", VA = "0x155E4A0")]
	public HighlightInterface()
	{
	}
}
[Token(Token = "0x200031C")]
public class MailScreenLock : MonoBehaviour
{
	[Token(Token = "0x4001AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Image screenLock;

	[Token(Token = "0x6001327")]
	[Address(RVA = "0x1527D60", Offset = "0x1527D60", VA = "0x1527D60")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001328")]
	[Address(RVA = "0x1527E54", Offset = "0x1527E54", VA = "0x1527E54")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001329")]
	[Address(RVA = "0x1527F48", Offset = "0x1527F48", VA = "0x1527F48")]
	private void Start()
	{
	}

	[Token(Token = "0x600132A")]
	[Address(RVA = "0x152800C", Offset = "0x152800C", VA = "0x152800C")]
	public void Setup()
	{
	}

	[Token(Token = "0x600132B")]
	[Address(RVA = "0x152838C", Offset = "0x152838C", VA = "0x152838C")]
	public MailScreenLock()
	{
	}
}
[Token(Token = "0x200031D")]
public class PistolSelect : RectTransformMonoBehaviour
{
	[Token(Token = "0x4001ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text[] titles;

	[Token(Token = "0x4001ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text damageText;

	[Token(Token = "0x4001ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text reloadText;

	[Token(Token = "0x4001ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text shootsText;

	[Token(Token = "0x4001ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Image iconImage;

	[Token(Token = "0x4001ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private PistolData pistol;

	[Token(Token = "0x600132D")]
	[Address(RVA = "0x15F05F4", Offset = "0x15F05F4", VA = "0x15F05F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600132E")]
	[Address(RVA = "0x15F0704", Offset = "0x15F0704", VA = "0x15F0704")]
	public void Init(PistolData pistol)
	{
	}

	[Token(Token = "0x600132F")]
	[Address(RVA = "0x15F089C", Offset = "0x15F089C", VA = "0x15F089C")]
	public void IconOnClick()
	{
	}

	[Token(Token = "0x6001330")]
	[Address(RVA = "0x15F091C", Offset = "0x15F091C", VA = "0x15F091C")]
	public PistolSelect()
	{
	}
}
[Token(Token = "0x200031E")]
public class RewardInMessageBox : MonoBehaviour
{
	[Token(Token = "0x4001AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Button button;

	[Token(Token = "0x4001AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Image icon;

	[Token(Token = "0x4001AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text countText;

	[Token(Token = "0x4001AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color activeColor;

	[Token(Token = "0x4001AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int index;

	[Token(Token = "0x4001AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int count;

	[Token(Token = "0x1700023E")]
	public int TovarIndex
	{
		[Token(Token = "0x6001331")]
		[Address(RVA = "0x1534AA0", Offset = "0x1534AA0", VA = "0x1534AA0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700023F")]
	public int TovarCount
	{
		[Token(Token = "0x6001332")]
		[Address(RVA = "0x1534AA8", Offset = "0x1534AA8", VA = "0x1534AA8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001333")]
	[Address(RVA = "0x1534AB0", Offset = "0x1534AB0", VA = "0x1534AB0")]
	public void SetupButton(int tovarIndex, int tovarCount)
	{
	}

	[Token(Token = "0x6001334")]
	[Address(RVA = "0x1534C64", Offset = "0x1534C64", VA = "0x1534C64")]
	public void DisableReward()
	{
	}

	[Token(Token = "0x6001335")]
	[Address(RVA = "0x1534C8C", Offset = "0x1534C8C", VA = "0x1534C8C")]
	public void OnClickReward()
	{
	}

	[Token(Token = "0x6001336")]
	[Address(RVA = "0x1534E08", Offset = "0x1534E08", VA = "0x1534E08")]
	public void SetStatusToActive()
	{
	}

	[Token(Token = "0x6001337")]
	[Address(RVA = "0x1534C90", Offset = "0x1534C90", VA = "0x1534C90")]
	private void ShowAdditionalTovarInformation()
	{
	}

	[Token(Token = "0x6001338")]
	[Address(RVA = "0x1534E3C", Offset = "0x1534E3C", VA = "0x1534E3C")]
	public RewardInMessageBox()
	{
	}
}
[Token(Token = "0x200031F")]
public class TaskExplanationWindow : MonoBehaviour
{
	[Token(Token = "0x4001AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string currentText;

	[Token(Token = "0x4001AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool currentUpped;

	[Token(Token = "0x4001AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text explanationText;

	[Token(Token = "0x4001AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject explanationWindow;

	[Token(Token = "0x4001AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform explanationRT;

	[Token(Token = "0x17000240")]
	public bool IsActive
	{
		[Token(Token = "0x6001339")]
		[Address(RVA = "0x1695EE4", Offset = "0x1695EE4", VA = "0x1695EE4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600133A")]
	[Address(RVA = "0x1695F04", Offset = "0x1695F04", VA = "0x1695F04")]
	public void SetExplanation(string text, bool upped = false)
	{
	}

	[Token(Token = "0x600133B")]
	[Address(RVA = "0x16960BC", Offset = "0x16960BC", VA = "0x16960BC")]
	public void DisableExplanation()
	{
	}

	[Token(Token = "0x600133C")]
	[Address(RVA = "0x1696100", Offset = "0x1696100", VA = "0x1696100")]
	private void UpdateTextToNewLanguage()
	{
	}

	[Token(Token = "0x600133D")]
	[Address(RVA = "0x1696114", Offset = "0x1696114", VA = "0x1696114")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600133E")]
	[Address(RVA = "0x16961CC", Offset = "0x16961CC", VA = "0x16961CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600133F")]
	[Address(RVA = "0x1696284", Offset = "0x1696284", VA = "0x1696284")]
	public TaskExplanationWindow()
	{
	}
}
[Token(Token = "0x2000320")]
public class UNICORN_part : MonoBehaviour
{
	[Token(Token = "0x4001AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int Phase;

	[Token(Token = "0x4001AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Rot;

	[Token(Token = "0x4001AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float RotX;

	[Token(Token = "0x4001AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float RotOnEnemRAD;

	[Token(Token = "0x4001AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float RotOnEnemGRAD;

	[Token(Token = "0x4001AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool its_Head;

	[Token(Token = "0x4001AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool its_Hwist;

	[Token(Token = "0x4001AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource Death;

	[Token(Token = "0x4001AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Ship MyShip;

	[Token(Token = "0x4001AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Mesh HEAD;

	[Token(Token = "0x4001AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Mesh HEADHALF;

	[Token(Token = "0x4001AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Mesh BACK;

	[Token(Token = "0x4001AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Mesh CASE;

	[Token(Token = "0x4001AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Mesh HALFBACK;

	[Token(Token = "0x4001AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform HeadTech;

	[Token(Token = "0x4001AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private UNICORN_part part_0;

	[Token(Token = "0x4001AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private UNICORN_part part_1;

	[Token(Token = "0x4001AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private UNICORN_part part_2;

	[Token(Token = "0x4001AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private UNICORN_part part_3;

	[Token(Token = "0x6001340")]
	[Address(RVA = "0x15B44E0", Offset = "0x15B44E0", VA = "0x15B44E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001341")]
	[Address(RVA = "0x15B457C", Offset = "0x15B457C", VA = "0x15B457C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001342")]
	[Address(RVA = "0x15B46F8", Offset = "0x15B46F8", VA = "0x15B46F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001343")]
	[Address(RVA = "0x15B53BC", Offset = "0x15B53BC", VA = "0x15B53BC")]
	public UNICORN_part()
	{
	}
}
[Token(Token = "0x2000321")]
public class ExceptionsHandler
{
	[Token(Token = "0x4001AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool isInited;

	[Token(Token = "0x4001AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	private static bool isCrashOnExceptionDisabled;

	[Token(Token = "0x6001344")]
	[Address(RVA = "0x9BC474", Offset = "0x9BC474", VA = "0x9BC474")]
	private static void HandleExceptions(string condition, string stackTrace, LogType type)
	{
	}

	[Token(Token = "0x6001345")]
	[Address(RVA = "0x9BC570", Offset = "0x9BC570", VA = "0x9BC570")]
	public static void DisableCrashOnException()
	{
	}

	[Token(Token = "0x6001346")]
	[Address(RVA = "0x9BC5C0", Offset = "0x9BC5C0", VA = "0x9BC5C0")]
	public static void RestoreCrashOnException()
	{
	}

	[Token(Token = "0x6001347")]
	[Address(RVA = "0x9BC60C", Offset = "0x9BC60C", VA = "0x9BC60C")]
	internal static void Init()
	{
	}

	[Token(Token = "0x6001348")]
	[Address(RVA = "0x9BC6BC", Offset = "0x9BC6BC", VA = "0x9BC6BC")]
	public ExceptionsHandler()
	{
	}
}
[Token(Token = "0x2000322")]
public class InternetChecker : SingletonMonoBehaviour<InternetChecker>
{
	[Token(Token = "0x2000323")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579034", Offset = "0x579034")]
	private sealed class <CheckCoroutine>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<bool> onCheckComplete;

		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Ping <ping>5__2;

		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <timeout>5__3;

		[Token(Token = "0x17000241")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600134F")]
			[Address(RVA = "0x15153C8", Offset = "0x15153C8", VA = "0x15153C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000242")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001351")]
			[Address(RVA = "0x1515410", Offset = "0x1515410", VA = "0x1515410", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0x1515224", Offset = "0x1515224", VA = "0x1515224")]
		[DebuggerHidden]
		public <CheckCoroutine>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0x1515250", Offset = "0x1515250", VA = "0x1515250", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0x1515254", Offset = "0x1515254", VA = "0x1515254", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0x15153D0", Offset = "0x15153D0", VA = "0x15153D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001B00")]
	private const string ip = "8.8.8.8";

	[Token(Token = "0x4001B01")]
	private const float timeoutSec = 10f;

	[Token(Token = "0x6001349")]
	[Address(RVA = "0x1569E78", Offset = "0x1569E78", VA = "0x1569E78")]
	public void Check(Action<bool> onCheckComplete)
	{
	}

	[Token(Token = "0x600134A")]
	[Address(RVA = "0x1569EA4", Offset = "0x1569EA4", VA = "0x1569EA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58C034", Offset = "0x58C034")]
	private IEnumerator CheckCoroutine(Action<bool> onCheckComplete)
	{
		return null;
	}

	[Token(Token = "0x600134B")]
	[Address(RVA = "0x1569F24", Offset = "0x1569F24", VA = "0x1569F24")]
	public InternetChecker()
	{
	}
}
[Token(Token = "0x2000324")]
public class LodUpdater : MonoBehaviour
{
	[Token(Token = "0x4001B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float updateTime;

	[Token(Token = "0x4001B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float timer;

	[Token(Token = "0x4001B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MyLOD lod;

	[Token(Token = "0x6001352")]
	[Address(RVA = "0x152267C", Offset = "0x152267C", VA = "0x152267C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001353")]
	[Address(RVA = "0x152275C", Offset = "0x152275C", VA = "0x152275C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001354")]
	[Address(RVA = "0x15227C4", Offset = "0x15227C4", VA = "0x15227C4")]
	public LodUpdater()
	{
	}
}
[Token(Token = "0x2000325")]
public class PolygonCollider : MonoBehaviour
{
	[Token(Token = "0x4001B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector3[] points;

	[Token(Token = "0x4001B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float wallHeight;

	[Token(Token = "0x4001B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private Rect boardingArea;

	[Token(Token = "0x6001355")]
	[Address(RVA = "0x154BF1C", Offset = "0x154BF1C", VA = "0x154BF1C")]
	public void SetPoints(Vector3[] p)
	{
	}

	[Token(Token = "0x6001356")]
	[Address(RVA = "0x154BF24", Offset = "0x154BF24", VA = "0x154BF24")]
	public Vector3[] GetPoints()
	{
		return null;
	}

	[Token(Token = "0x6001357")]
	[Address(RVA = "0x154BF2C", Offset = "0x154BF2C", VA = "0x154BF2C")]
	public Rect GetBoardingArea()
	{
		return default(Rect);
	}

	[Token(Token = "0x6001358")]
	[Address(RVA = "0x154BF38", Offset = "0x154BF38", VA = "0x154BF38")]
	public Rect GetSmallestBoardingArea(Rect anotherArea)
	{
		return default(Rect);
	}

	[Token(Token = "0x6001359")]
	[Address(RVA = "0x154BFB4", Offset = "0x154BFB4", VA = "0x154BFB4")]
	public Vector3[] GetSmallestBoardingAreaAsPolygon(PolygonCollider anotherCollider)
	{
		return null;
	}

	[Token(Token = "0x600135A")]
	[Address(RVA = "0x154C078", Offset = "0x154C078", VA = "0x154C078")]
	public Vector3[] GetBoardingAreaAsPolygon()
	{
		return null;
	}

	[Token(Token = "0x600135B")]
	[Address(RVA = "0x154C20C", Offset = "0x154C20C", VA = "0x154C20C")]
	public static void ChangePolygonPivot(Vector3[] polygon, Transform orginalPivot, Transform newPivot)
	{
	}

	[Token(Token = "0x600135C")]
	[Address(RVA = "0x154C2CC", Offset = "0x154C2CC", VA = "0x154C2CC")]
	public Vector3[] GetPolygonTransformed(PolygonCollider newPivot)
	{
		return null;
	}

	[Token(Token = "0x600135D")]
	[Address(RVA = "0x154C38C", Offset = "0x154C38C", VA = "0x154C38C")]
	public void BuildWallCollider(Vector3[] refPoints)
	{
	}

	[Token(Token = "0x600135E")]
	[Address(RVA = "0x154C75C", Offset = "0x154C75C", VA = "0x154C75C")]
	public void Clean()
	{
	}

	[Token(Token = "0x600135F")]
	[Address(RVA = "0x154C840", Offset = "0x154C840", VA = "0x154C840")]
	public List<Vector3> FindPolygonUnion(Vector3[] otherPoints)
	{
		return null;
	}

	[Token(Token = "0x6001360")]
	[Address(RVA = "0x154CC84", Offset = "0x154CC84", VA = "0x154CC84")]
	private void FindIntersection(Vector3 p1, Vector3 p2, Vector3 p3, Vector3 p4, [Out] bool lines_intersect, [Out] bool segments_intersect, [Out] Vector3 intersection, [Out] Vector3 close_p1, [Out] Vector3 close_p2, [Out] float t1, [Out] float t2)
	{
	}

	[Token(Token = "0x6001361")]
	[Address(RVA = "0x154CE8C", Offset = "0x154CE8C", VA = "0x154CE8C")]
	public PolygonCollider()
	{
	}
}
[Token(Token = "0x2000326")]
public class RenderSettingsSaver : SingletonMonoBehaviour<RenderSettingsSaver>
{
	[Token(Token = "0x4001B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Color fogColor;

	[Token(Token = "0x4001B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float fogDensity;

	[Token(Token = "0x4001B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float fogEndDistance;

	[Token(Token = "0x4001B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float fogStartDistance;

	[Token(Token = "0x4001B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private FogMode fogMode;

	[Token(Token = "0x4001B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool fog;

	[Token(Token = "0x6001362")]
	[Address(RVA = "0x1532AC4", Offset = "0x1532AC4", VA = "0x1532AC4")]
	public void SaveSettings()
	{
	}

	[Token(Token = "0x6001363")]
	[Address(RVA = "0x1532B30", Offset = "0x1532B30", VA = "0x1532B30")]
	public void RestoreSettings()
	{
	}

	[Token(Token = "0x6001364")]
	[Address(RVA = "0x1532B94", Offset = "0x1532B94", VA = "0x1532B94")]
	public RenderSettingsSaver()
	{
	}
}
[Token(Token = "0x2000327")]
public class UnityRemoteSettings
{
	[Token(Token = "0x4001B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string fbWebUrl;

	[Token(Token = "0x4001B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string fbAppUrl;

	[Token(Token = "0x4001B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool IsActiveChineseNewYear;

	[Token(Token = "0x4001B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public static bool halloweenIsActive;

	[Token(Token = "0x4001B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public static bool halloweenSellHerbs;

	[Token(Token = "0x4001B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	public static bool simplifiedMobileTutorial;

	[Token(Token = "0x4001B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static bool isPremiumInappsDisabled;

	[Token(Token = "0x4001B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	private static bool isInited;

	[Token(Token = "0x6001365")]
	[Address(RVA = "0x15B8740", Offset = "0x15B8740", VA = "0x15B8740")]
	public static void CheckInited()
	{
	}

	[Token(Token = "0x6001366")]
	[Address(RVA = "0x15B87CC", Offset = "0x15B87CC", VA = "0x15B87CC")]
	private static void HandleRemoteUpdate()
	{
	}

	[Token(Token = "0x6001367")]
	[Address(RVA = "0x15B8860", Offset = "0x15B8860", VA = "0x15B8860")]
	public UnityRemoteSettings()
	{
	}
}
[Token(Token = "0x2000328")]
public class AddInvertedMeshCollider : MonoBehaviour
{
	[Token(Token = "0x4001B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool removeExistingColliders;

	[Token(Token = "0x6001369")]
	[Address(RVA = "0x7E0434", Offset = "0x7E0434", VA = "0x7E0434")]
	public void CreateInvertedMeshCollider()
	{
	}

	[Token(Token = "0x600136A")]
	[Address(RVA = "0x7E04A8", Offset = "0x7E04A8", VA = "0x7E04A8")]
	private void RemoveExistingColliders()
	{
	}

	[Token(Token = "0x600136B")]
	[Address(RVA = "0x7E058C", Offset = "0x7E058C", VA = "0x7E058C")]
	private void InvertMesh()
	{
	}

	[Token(Token = "0x600136C")]
	[Address(RVA = "0x7E0648", Offset = "0x7E0648", VA = "0x7E0648")]
	public AddInvertedMeshCollider()
	{
	}
}
[Token(Token = "0x2000329")]
public class AddListnerAfterInit : MonoBehaviour
{
	[Token(Token = "0x200032A")]
	public enum MethodName
	{
		[Token(Token = "0x4001B2B")]
		Equipment,
		[Token(Token = "0x4001B2C")]
		Artefact,
		[Token(Token = "0x4001B2D")]
		HeroXP,
		[Token(Token = "0x4001B2E")]
		TeamWindow,
		[Token(Token = "0x4001B2F")]
		Trum_Store_Storage,
		[Token(Token = "0x4001B30")]
		QWEST,
		[Token(Token = "0x4001B31")]
		Decor,
		[Token(Token = "0x4001B32")]
		Trum,
		[Token(Token = "0x4001B33")]
		Store,
		[Token(Token = "0x4001B34")]
		Storage
	}

	[Serializable]
	[Token(Token = "0x200032B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579044", Offset = "0x579044")]
	private sealed class <>c
	{
		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static UnityAction <>9__16_0;

		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static UnityAction <>9__16_1;

		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static UnityAction <>9__16_2;

		[Token(Token = "0x4001B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static UnityAction <>9__16_3;

		[Token(Token = "0x4001B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static UnityAction <>9__16_4;

		[Token(Token = "0x4001B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static UnityAction <>9__16_5;

		[Token(Token = "0x4001B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static UnityAction <>9__16_6;

		[Token(Token = "0x6001379")]
		[Address(RVA = "0x15DBB68", Offset = "0x15DBB68", VA = "0x15DBB68")]
		public <>c()
		{
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0x15DBB70", Offset = "0x15DBB70", VA = "0x15DBB70")]
		internal void <Start>b__16_0()
		{
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0x15DBBE0", Offset = "0x15DBBE0", VA = "0x15DBBE0")]
		internal void <Start>b__16_1()
		{
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0x15DBC50", Offset = "0x15DBC50", VA = "0x15DBC50")]
		internal void <Start>b__16_2()
		{
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0x15DBCC0", Offset = "0x15DBCC0", VA = "0x15DBCC0")]
		internal void <Start>b__16_3()
		{
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0x15DBD30", Offset = "0x15DBD30", VA = "0x15DBD30")]
		internal void <Start>b__16_4()
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0x15DBDA0", Offset = "0x15DBDA0", VA = "0x15DBDA0")]
		internal void <Start>b__16_5()
		{
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0x15DBE10", Offset = "0x15DBE10", VA = "0x15DBE10")]
		internal void <Start>b__16_6()
		{
		}
	}

	[Token(Token = "0x4001B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Button thisBtn;

	[Token(Token = "0x4001B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Selector;

	[Token(Token = "0x4001B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Highlight;

	[Token(Token = "0x4001B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject ButtonName;

	[Token(Token = "0x4001B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text ButtonNameText;

	[Token(Token = "0x4001B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector2 endPosition;

	[Token(Token = "0x4001B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float ShowSpeed;

	[Token(Token = "0x4001B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RectTransform ButtonNameObjRT;

	[Token(Token = "0x4001B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CanvasGroup ButtonNameObjCG;

	[Token(Token = "0x4001B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector2 startPosition;

	[Token(Token = "0x4001B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool show;

	[Token(Token = "0x4001B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float path;

	[Token(Token = "0x4001B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool animating;

	[Token(Token = "0x4001B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public MethodName methodName;

	[Token(Token = "0x600136D")]
	[Address(RVA = "0x7E0658", Offset = "0x7E0658", VA = "0x7E0658")]
	private void Awake()
	{
	}

	[Token(Token = "0x600136E")]
	[Address(RVA = "0x7E07E4", Offset = "0x7E07E4", VA = "0x7E07E4")]
	private void Start()
	{
	}

	[Token(Token = "0x600136F")]
	[Address(RVA = "0x7E1064", Offset = "0x7E1064", VA = "0x7E1064")]
	public void RayEnter()
	{
	}

	[Token(Token = "0x6001370")]
	[Address(RVA = "0x7E1104", Offset = "0x7E1104", VA = "0x7E1104")]
	public void RayLeave()
	{
	}

	[Token(Token = "0x6001371")]
	[Address(RVA = "0x7E11A0", Offset = "0x7E11A0", VA = "0x7E11A0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001372")]
	[Address(RVA = "0x7E11A4", Offset = "0x7E11A4", VA = "0x7E11A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001373")]
	[Address(RVA = "0x7E1344", Offset = "0x7E1344", VA = "0x7E1344")]
	private void AnimFunc(float path)
	{
	}

	[Token(Token = "0x6001374")]
	[Address(RVA = "0x7E1434", Offset = "0x7E1434", VA = "0x7E1434")]
	private void BeforeOpenTrum(int windowType)
	{
	}

	[Token(Token = "0x6001375")]
	[Address(RVA = "0x7E15D8", Offset = "0x7E15D8", VA = "0x7E15D8")]
	public AddListnerAfterInit()
	{
	}

	[Token(Token = "0x6001376")]
	[Address(RVA = "0x7E15E0", Offset = "0x7E15E0", VA = "0x7E15E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58C0EC", Offset = "0x58C0EC")]
	private void <Start>b__16_7()
	{
	}

	[Token(Token = "0x6001377")]
	[Address(RVA = "0x7E1644", Offset = "0x7E1644", VA = "0x7E1644")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58C0FC", Offset = "0x58C0FC")]
	private void <Start>b__16_8()
	{
	}
}
[Token(Token = "0x200032C")]
public class ControllerButtons : MonoBehaviour
{
	[Token(Token = "0x4001B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HighlightButtonAnimations MenuButton;

	[Token(Token = "0x4001B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HighlightButtonAnimations One;

	[Token(Token = "0x4001B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HighlightButtonAnimations Two;

	[Token(Token = "0x4001B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HighlightButtonAnimations StickButton;

	[Token(Token = "0x4001B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public HighlightButtonAnimations StickUp;

	[Token(Token = "0x4001B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HighlightButtonAnimations StickRight;

	[Token(Token = "0x4001B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HighlightButtonAnimations StickDown;

	[Token(Token = "0x4001B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public HighlightButtonAnimations StickLeft;

	[Token(Token = "0x4001B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public HighlightButtonAnimations Trigger;

	[Token(Token = "0x4001B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public HighlightButtonAnimations Bumper;

	[Token(Token = "0x6001381")]
	[Address(RVA = "0xA264A0", Offset = "0xA264A0", VA = "0xA264A0")]
	public void EnableHighLight(HighlightButtonOculusControllers.ControllerButton ctnButton)
	{
	}

	[Token(Token = "0x6001382")]
	[Address(RVA = "0xA26554", Offset = "0xA26554", VA = "0xA26554")]
	public void DisableHighLight(HighlightButtonOculusControllers.ControllerButton ctnButton)
	{
	}

	[Token(Token = "0x6001383")]
	[Address(RVA = "0xA26608", Offset = "0xA26608", VA = "0xA26608")]
	public ControllerButtons()
	{
	}
}
[Token(Token = "0x200032D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x579054", Offset = "0x579054")]
public class DbgInVR : MonoBehaviour
{
	[Token(Token = "0x4001B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DbgInVR instance;

	[Token(Token = "0x4001B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text dbgText;

	[Token(Token = "0x4001B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string[] allText;

	[Token(Token = "0x4001B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float updateInterval;

	[Token(Token = "0x4001B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float accum;

	[Token(Token = "0x4001B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int frames;

	[Token(Token = "0x4001B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float timeleft;

	[Token(Token = "0x4001B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string FPScount;

	[Token(Token = "0x6001384")]
	[Address(RVA = "0x7C6E40", Offset = "0x7C6E40", VA = "0x7C6E40")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001385")]
	[Address(RVA = "0x7C7378", Offset = "0x7C7378", VA = "0x7C7378")]
	private void Update()
	{
	}

	[Token(Token = "0x6001386")]
	[Address(RVA = "0x7C79FC", Offset = "0x7C79FC", VA = "0x7C79FC")]
	public void DBG_Text(string text)
	{
	}

	[Token(Token = "0x6001387")]
	[Address(RVA = "0x7C78F4", Offset = "0x7C78F4", VA = "0x7C78F4")]
	public void FPSCounter()
	{
	}

	[Token(Token = "0x6001388")]
	[Address(RVA = "0x7C7C60", Offset = "0x7C7C60", VA = "0x7C7C60")]
	public void ChangePos(Vector2 vec)
	{
	}

	[Token(Token = "0x6001389")]
	[Address(RVA = "0x7C7CEC", Offset = "0x7C7CEC", VA = "0x7C7CEC")]
	public DbgInVR()
	{
	}
}
[Token(Token = "0x200032E")]
public class EveryLookAt : MonoBehaviour
{
	[Token(Token = "0x600138A")]
	[Address(RVA = "0x9BBCFC", Offset = "0x9BBCFC", VA = "0x9BBCFC")]
	private void Start()
	{
	}

	[Token(Token = "0x600138B")]
	[Address(RVA = "0x9BBD00", Offset = "0x9BBD00", VA = "0x9BBD00")]
	private void Update()
	{
	}

	[Token(Token = "0x600138C")]
	[Address(RVA = "0x9BBE68", Offset = "0x9BBE68", VA = "0x9BBE68")]
	public EveryLookAt()
	{
	}
}
[Token(Token = "0x200032F")]
public class FindVRCameraForCanvas : MonoBehaviour
{
	[Token(Token = "0x4001B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Canvas thisCanvas;

	[Token(Token = "0x4001B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera VRCamera;

	[Token(Token = "0x600138D")]
	[Address(RVA = "0x7B12AC", Offset = "0x7B12AC", VA = "0x7B12AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600138E")]
	[Address(RVA = "0x7B14AC", Offset = "0x7B14AC", VA = "0x7B14AC")]
	private void Update()
	{
	}

	[Token(Token = "0x600138F")]
	[Address(RVA = "0x7B1624", Offset = "0x7B1624", VA = "0x7B1624")]
	public FindVRCameraForCanvas()
	{
	}
}
[Token(Token = "0x2000330")]
public class FollowForParentColor : MonoBehaviour
{
	[Token(Token = "0x4001B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Image parentImage;

	[Token(Token = "0x4001B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Image thisImage;

	[Token(Token = "0x4001B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SpriteRenderer thisSpriteRenderer;

	[Token(Token = "0x4001B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image FollowingObj;

	[Token(Token = "0x6001390")]
	[Address(RVA = "0x7B7FE0", Offset = "0x7B7FE0", VA = "0x7B7FE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001391")]
	[Address(RVA = "0x7B8074", Offset = "0x7B8074", VA = "0x7B8074")]
	private void Update()
	{
	}

	[Token(Token = "0x6001392")]
	[Address(RVA = "0x7B8238", Offset = "0x7B8238", VA = "0x7B8238")]
	public FollowForParentColor()
	{
	}
}
[Token(Token = "0x2000331")]
public class GetParentHighlighter : MonoBehaviour
{
	[Token(Token = "0x4001B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HighlightEffect HL_Effect;

	[Token(Token = "0x4001B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool setLayerToLayerMask;

	[Token(Token = "0x4001B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int layerMask;

	[Token(Token = "0x4001B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float outlineWidthSelected;

	[Token(Token = "0x4001B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float outlineWidthUnSelected;

	[Token(Token = "0x4001B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float outlineWidthUnSelectedInTown;

	[Token(Token = "0x4001B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float outlineWidthUnSelectedInBattle;

	[Token(Token = "0x6001393")]
	[Address(RVA = "0x7F63A0", Offset = "0x7F63A0", VA = "0x7F63A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001394")]
	[Address(RVA = "0x7F67A0", Offset = "0x7F67A0", VA = "0x7F67A0")]
	public void OnHoverEnter()
	{
	}

	[Token(Token = "0x6001395")]
	[Address(RVA = "0x7F6678", Offset = "0x7F6678", VA = "0x7F6678")]
	public void OnHoverExit()
	{
	}

	[Token(Token = "0x6001396")]
	[Address(RVA = "0x7F6A8C", Offset = "0x7F6A8C", VA = "0x7F6A8C")]
	public void InTownAction()
	{
	}

	[Token(Token = "0x6001397")]
	[Address(RVA = "0x7F6B18", Offset = "0x7F6B18", VA = "0x7F6B18")]
	public void OutTownActions()
	{
	}

	[Token(Token = "0x6001398")]
	[Address(RVA = "0x7F682C", Offset = "0x7F682C", VA = "0x7F682C")]
	private bool InFight()
	{
		return default(bool);
	}

	[Token(Token = "0x6001399")]
	[Address(RVA = "0x7F6BA4", Offset = "0x7F6BA4", VA = "0x7F6BA4")]
	public GetParentHighlighter()
	{
	}
}
[Token(Token = "0x2000332")]
public class HighlightButtonAnimations : MonoBehaviour
{
	[Token(Token = "0x4001B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4001B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color startColor;

	[Token(Token = "0x4001B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color EndColor;

	[Token(Token = "0x4001B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SpriteRenderer thisImage;

	[Token(Token = "0x4001B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float path;

	[Token(Token = "0x4001B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool toEnd;

	[Token(Token = "0x600139A")]
	[Address(RVA = "0x16A188C", Offset = "0x16A188C", VA = "0x16A188C")]
	private void Start()
	{
	}

	[Token(Token = "0x600139B")]
	[Address(RVA = "0x16A18F0", Offset = "0x16A18F0", VA = "0x16A18F0")]
	private void Update()
	{
	}

	[Token(Token = "0x600139C")]
	[Address(RVA = "0x16A1A3C", Offset = "0x16A1A3C", VA = "0x16A1A3C")]
	public void EnableButton()
	{
	}

	[Token(Token = "0x600139D")]
	[Address(RVA = "0x16A1A70", Offset = "0x16A1A70", VA = "0x16A1A70")]
	public void DisableButton()
	{
	}

	[Token(Token = "0x600139E")]
	[Address(RVA = "0x16A1A98", Offset = "0x16A1A98", VA = "0x16A1A98")]
	public HighlightButtonAnimations()
	{
	}
}
[Token(Token = "0x2000333")]
public class HighlightButtonOculusControllers : MonoBehaviour
{
	[Token(Token = "0x2000334")]
	public enum ControllerType
	{
		[Token(Token = "0x4001B66")]
		LEFT,
		[Token(Token = "0x4001B67")]
		RIGHT
	}

	[Token(Token = "0x2000335")]
	public enum ControllerButton
	{
		[Token(Token = "0x4001B69")]
		Menu,
		[Token(Token = "0x4001B6A")]
		One,
		[Token(Token = "0x4001B6B")]
		Two,
		[Token(Token = "0x4001B6C")]
		StickButton,
		[Token(Token = "0x4001B6D")]
		StickUp,
		[Token(Token = "0x4001B6E")]
		StickRight,
		[Token(Token = "0x4001B6F")]
		StickDown,
		[Token(Token = "0x4001B70")]
		StickLeft,
		[Token(Token = "0x4001B71")]
		Trigger,
		[Token(Token = "0x4001B72")]
		Bumper
	}

	[Token(Token = "0x4001B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HighlightButtonOculusControllers instance;

	[Token(Token = "0x4001B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControllerButtons LeftController;

	[Token(Token = "0x4001B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ControllerButtons RightController;

	[Token(Token = "0x600139F")]
	[Address(RVA = "0x16A1AA8", Offset = "0x16A1AA8", VA = "0x16A1AA8")]
	private void Start()
	{
	}

	[Token(Token = "0x60013A0")]
	[Address(RVA = "0x16A1C98", Offset = "0x16A1C98", VA = "0x16A1C98")]
	public void EnableHighLight(ControllerType cntType, ControllerButton cntButton)
	{
	}

	[Token(Token = "0x60013A1")]
	[Address(RVA = "0x16A1D7C", Offset = "0x16A1D7C", VA = "0x16A1D7C")]
	public void EnableHighLight(ControllerButton cntButton)
	{
	}

	[Token(Token = "0x60013A2")]
	[Address(RVA = "0x16A1E5C", Offset = "0x16A1E5C", VA = "0x16A1E5C")]
	public void DisableHighLight(ControllerType cntType, ControllerButton cntButton)
	{
	}

	[Token(Token = "0x60013A3")]
	[Address(RVA = "0x16A1B0C", Offset = "0x16A1B0C", VA = "0x16A1B0C")]
	public void DisableAllHighlight()
	{
	}

	[Token(Token = "0x60013A4")]
	[Address(RVA = "0x16A1F40", Offset = "0x16A1F40", VA = "0x16A1F40")]
	public HighlightButtonOculusControllers()
	{
	}
}
[Token(Token = "0x2000336")]
public class ImageForShipButton : MonoBehaviour
{
	[Token(Token = "0x4001B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image lockImage;

	[Token(Token = "0x4001B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Alert alert;

	[Token(Token = "0x60013A5")]
	[Address(RVA = "0x15630B0", Offset = "0x15630B0", VA = "0x15630B0")]
	public ImageForShipButton()
	{
	}
}
[Token(Token = "0x2000337")]
public class OpacityControllerUI : MonoBehaviour
{
	[Token(Token = "0x4001B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject CameraVR;

	[Token(Token = "0x4001B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CanvasGroup thisCanvasGroup;

	[Token(Token = "0x4001B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float angle;

	[Token(Token = "0x4001B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float normalized;

	[Token(Token = "0x60013A6")]
	[Address(RVA = "0x15E4168", Offset = "0x15E4168", VA = "0x15E4168")]
	private void Start()
	{
	}

	[Token(Token = "0x60013A7")]
	[Address(RVA = "0x15E41CC", Offset = "0x15E41CC", VA = "0x15E41CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60013A8")]
	[Address(RVA = "0x15E4328", Offset = "0x15E4328", VA = "0x15E4328")]
	public OpacityControllerUI()
	{
	}
}
[Token(Token = "0x2000338")]
public class ScaleFromDistance : MonoBehaviour
{
	[Token(Token = "0x4001B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera CameraVR;

	[Token(Token = "0x4001B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float koef;

	[Token(Token = "0x4001B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float normalScale;

	[Token(Token = "0x4001B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float distanceFromCamera;

	[Token(Token = "0x4001B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float frustumHeight;

	[Token(Token = "0x60013A9")]
	[Address(RVA = "0x14D88DC", Offset = "0x14D88DC", VA = "0x14D88DC")]
	private void Start()
	{
	}

	[Token(Token = "0x60013AA")]
	[Address(RVA = "0x14D88E0", Offset = "0x14D88E0", VA = "0x14D88E0")]
	private void Update()
	{
	}

	[Token(Token = "0x60013AB")]
	[Address(RVA = "0x14D89F4", Offset = "0x14D89F4", VA = "0x14D89F4")]
	public ScaleFromDistance()
	{
	}
}
[Token(Token = "0x2000339")]
public class SwtichSpyglass : MonoBehaviour
{
	[Token(Token = "0x4001B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Controller;

	[Token(Token = "0x4001B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Spyglass;

	[Token(Token = "0x4001B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform LeftEyeAnchor;

	[Token(Token = "0x4001B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform RightEyeAnchor;

	[Token(Token = "0x4001B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform RightHandAnchor;

	[Token(Token = "0x4001B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float minDistance;

	[Token(Token = "0x4001B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float distanceBeetweeAnchors;

	[Token(Token = "0x4001B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool swtitchObj;

	[Token(Token = "0x4001B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float distanceLeft;

	[Token(Token = "0x4001B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float distanceRight;

	[Token(Token = "0x4001B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 startLocalPos;

	[Token(Token = "0x4001B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Quaternion startLocalRot;

	[Token(Token = "0x4001B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isMagneted;

	[Token(Token = "0x4001B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float angleRotateToDown;

	[Token(Token = "0x60013AC")]
	[Address(RVA = "0x1690944", Offset = "0x1690944", VA = "0x1690944")]
	private void Start()
	{
	}

	[Token(Token = "0x60013AD")]
	[Address(RVA = "0x16909AC", Offset = "0x16909AC", VA = "0x16909AC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60013AE")]
	[Address(RVA = "0x1690E5C", Offset = "0x1690E5C", VA = "0x1690E5C")]
	public void SwitchControllerSpyGlass(bool enabl)
	{
	}

	[Token(Token = "0x60013AF")]
	[Address(RVA = "0x1690F4C", Offset = "0x1690F4C", VA = "0x1690F4C")]
	public SwtichSpyglass()
	{
	}
}
[Token(Token = "0x200033A")]
public class TownObject : MonoBehaviour
{
	[Token(Token = "0x60013B0")]
	[Address(RVA = "0x1671980", Offset = "0x1671980", VA = "0x1671980")]
	private void Start()
	{
	}

	[Token(Token = "0x60013B1")]
	[Address(RVA = "0x1671984", Offset = "0x1671984", VA = "0x1671984")]
	private void Update()
	{
	}

	[Token(Token = "0x60013B2")]
	[Address(RVA = "0x1671988", Offset = "0x1671988", VA = "0x1671988")]
	public TownObject()
	{
	}
}
[Token(Token = "0x200033B")]
public class VRDebugMenuScript : MonoBehaviour
{
	[Token(Token = "0x200033C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5790BC", Offset = "0x5790BC")]
	private sealed class <WaitInitVRScripts>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRDebugMenuScript <>4__this;

		[Token(Token = "0x17000243")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013CA")]
			[Address(RVA = "0x17038D8", Offset = "0x17038D8", VA = "0x17038D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000244")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013CC")]
			[Address(RVA = "0x1703920", Offset = "0x1703920", VA = "0x1703920", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x1703130", Offset = "0x1703130", VA = "0x1703130")]
		[DebuggerHidden]
		public <WaitInitVRScripts>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x170315C", Offset = "0x170315C", VA = "0x170315C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x1703160", Offset = "0x1703160", VA = "0x1703160", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0x17038E0", Offset = "0x17038E0", VA = "0x17038E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Dbg_menu;

	[Token(Token = "0x4001B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text StartAngleValue;

	[Token(Token = "0x4001B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slider StartAngleSlider;

	[Token(Token = "0x4001B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text StopAngleValue;

	[Token(Token = "0x4001B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Slider StopAngleSlider;

	[Token(Token = "0x4001B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text DistanceValue;

	[Token(Token = "0x4001B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Slider DistanceSlider;

	[Token(Token = "0x4001B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text SpeedValue;

	[Token(Token = "0x4001B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider SpeedSlider;

	[Token(Token = "0x4001B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text SizeWinValue;

	[Token(Token = "0x4001B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Slider SizeWinSlider;

	[Token(Token = "0x4001B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float sizeWin;

	[Token(Token = "0x4001B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text DistWinValue;

	[Token(Token = "0x4001B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Slider DistWinSlider;

	[Token(Token = "0x4001B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text DPPUValue;

	[Token(Token = "0x4001B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Slider DPPUSlider;

	[Token(Token = "0x4001B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private CanvasScaler DPPUScaler;

	[Token(Token = "0x4001B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Text fbSDPIValue;

	[Token(Token = "0x4001B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Slider fbSDPISlider;

	[Token(Token = "0x4001B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Text RPPUValue;

	[Token(Token = "0x4001BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Slider RPPUSlider;

	[Token(Token = "0x4001BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Text ScaleFactorValue;

	[Token(Token = "0x4001BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Slider ScaleFactorSlider;

	[Token(Token = "0x4001BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Text XRScaleValue;

	[Token(Token = "0x4001BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Slider XRScaleSlider;

	[Token(Token = "0x4001BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Text renderViewportScaleValue;

	[Token(Token = "0x4001BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Slider renderViewportScaleSlider;

	[Token(Token = "0x4001BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Text eyeTextureHeightValue;

	[Token(Token = "0x4001BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Slider eyeTextureHeightSlider;

	[Token(Token = "0x4001BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Text MSAAValue;

	[Token(Token = "0x4001BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Slider MSAASlider;

	[Token(Token = "0x4001BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Text Info;

	[Token(Token = "0x4001BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Text InfoXR;

	[Token(Token = "0x4001BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Toggle ConsoleEnable;

	[Token(Token = "0x4001BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Text ConsoleScreen;

	[Token(Token = "0x60013B3")]
	[Address(RVA = "0x15BA138", Offset = "0x15BA138", VA = "0x15BA138")]
	private void Start()
	{
	}

	[Token(Token = "0x60013B4")]
	[Address(RVA = "0x15BA164", Offset = "0x15BA164", VA = "0x15BA164")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58C10C", Offset = "0x58C10C")]
	private IEnumerator WaitInitVRScripts()
	{
		return null;
	}

	[Token(Token = "0x60013B5")]
	[Address(RVA = "0x15BA1E4", Offset = "0x15BA1E4", VA = "0x15BA1E4")]
	private void SetInfo()
	{
	}

	[Token(Token = "0x60013B6")]
	[Address(RVA = "0x15BA9A0", Offset = "0x15BA9A0", VA = "0x15BA9A0")]
	private void SetInfoXR()
	{
	}

	[Token(Token = "0x60013B7")]
	[Address(RVA = "0x15BB734", Offset = "0x15BB734", VA = "0x15BB734")]
	private void Update()
	{
	}

	[Token(Token = "0x60013B8")]
	[Address(RVA = "0x15BB884", Offset = "0x15BB884", VA = "0x15BB884")]
	public void ChangeStartAngle()
	{
	}

	[Token(Token = "0x60013B9")]
	[Address(RVA = "0x15BB950", Offset = "0x15BB950", VA = "0x15BB950")]
	public void ChangeStopAngle()
	{
	}

	[Token(Token = "0x60013BA")]
	[Address(RVA = "0x15BBA1C", Offset = "0x15BBA1C", VA = "0x15BBA1C")]
	public void ChangeDistance()
	{
	}

	[Token(Token = "0x60013BB")]
	[Address(RVA = "0x15BBB00", Offset = "0x15BBB00", VA = "0x15BBB00")]
	public void ChangeSpeed()
	{
	}

	[Token(Token = "0x60013BC")]
	[Address(RVA = "0x15BBBCC", Offset = "0x15BBBCC", VA = "0x15BBBCC")]
	public void ChangeDistanceWin()
	{
	}

	[Token(Token = "0x60013BD")]
	[Address(RVA = "0x15BBCD4", Offset = "0x15BBCD4", VA = "0x15BBCD4")]
	public void ChangeSizeWin()
	{
	}

	[Token(Token = "0x60013BE")]
	[Address(RVA = "0x15BBE9C", Offset = "0x15BBE9C", VA = "0x15BBE9C")]
	public void ChangeDPPU()
	{
	}

	[Token(Token = "0x60013BF")]
	[Address(RVA = "0x15BBF48", Offset = "0x15BBF48", VA = "0x15BBF48")]
	public void ChangefbSDPI()
	{
	}

	[Token(Token = "0x60013C0")]
	[Address(RVA = "0x15BBFFC", Offset = "0x15BBFFC", VA = "0x15BBFFC")]
	public void ChangeRPPU()
	{
	}

	[Token(Token = "0x60013C1")]
	[Address(RVA = "0x15BC0B0", Offset = "0x15BC0B0", VA = "0x15BC0B0")]
	public void ChangeScaleFactor()
	{
	}

	[Token(Token = "0x60013C2")]
	[Address(RVA = "0x15BC168", Offset = "0x15BC168", VA = "0x15BC168")]
	public void ChangeXRScale()
	{
	}

	[Token(Token = "0x60013C3")]
	[Address(RVA = "0x15BC218", Offset = "0x15BC218", VA = "0x15BC218")]
	public void ChangerenderViewportScale()
	{
	}

	[Token(Token = "0x60013C4")]
	[Address(RVA = "0x15BC2C8", Offset = "0x15BC2C8", VA = "0x15BC2C8")]
	public void RunQuest(int numQ)
	{
	}

	[Token(Token = "0x60013C5")]
	[Address(RVA = "0x15BC348", Offset = "0x15BC348", VA = "0x15BC348")]
	public void SetMSAA()
	{
	}

	[Token(Token = "0x60013C6")]
	[Address(RVA = "0x15BC424", Offset = "0x15BC424", VA = "0x15BC424")]
	public VRDebugMenuScript()
	{
	}
}
[Token(Token = "0x200033D")]
public class VRLenght : MonoBehaviour
{
	[Token(Token = "0x4001BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject TO;

	[Token(Token = "0x4001BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distance;

	[Token(Token = "0x60013CD")]
	[Address(RVA = "0x15BC42C", Offset = "0x15BC42C", VA = "0x15BC42C")]
	private void Start()
	{
	}

	[Token(Token = "0x60013CE")]
	[Address(RVA = "0x15BC430", Offset = "0x15BC430", VA = "0x15BC430")]
	private void Update()
	{
	}

	[Token(Token = "0x60013CF")]
	[Address(RVA = "0x15BC520", Offset = "0x15BC520", VA = "0x15BC520")]
	public VRLenght()
	{
	}
}
[Token(Token = "0x200033E")]
public class VRPrototypeScripts : MonoBehaviour
{
	[Token(Token = "0x200033F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5790CC", Offset = "0x5790CC")]
	private sealed class <AfterOneFrame>d__79 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRPrototypeScripts <>4__this;

		[Token(Token = "0x17000247")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013E6")]
			[Address(RVA = "0x1703A68", Offset = "0x1703A68", VA = "0x1703A68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000248")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013E8")]
			[Address(RVA = "0x1703AB0", Offset = "0x1703AB0", VA = "0x1703AB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0x1703928", Offset = "0x1703928", VA = "0x1703928")]
		[DebuggerHidden]
		public <AfterOneFrame>d__79(int <>1__state)
		{
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0x1703954", Offset = "0x1703954", VA = "0x1703954", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0x1703958", Offset = "0x1703958", VA = "0x1703958", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0x1703A70", Offset = "0x1703A70", VA = "0x1703A70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000340")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5790DC", Offset = "0x5790DC")]
	private sealed class <TimerToEnd>d__83 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRPrototypeScripts <>4__this;

		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x17000249")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013EC")]
			[Address(RVA = "0x1703DBC", Offset = "0x1703DBC", VA = "0x1703DBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013EE")]
			[Address(RVA = "0x1703E04", Offset = "0x1703E04", VA = "0x1703E04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0x1703AB8", Offset = "0x1703AB8", VA = "0x1703AB8")]
		[DebuggerHidden]
		public <TimerToEnd>d__83(int <>1__state)
		{
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0x1703AE4", Offset = "0x1703AE4", VA = "0x1703AE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0x1703AE8", Offset = "0x1703AE8", VA = "0x1703AE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x1703DC4", Offset = "0x1703DC4", VA = "0x1703DC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static VRPrototypeScripts Instance;

	[Token(Token = "0x4001BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool C_E;

	[Token(Token = "0x4001BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float timeCE;

	[Token(Token = "0x4001BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool step1;

	[Token(Token = "0x4001BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private static bool step2;

	[Token(Token = "0x4001BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	private static bool step3;

	[Token(Token = "0x4001BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	private static bool step4;

	[Token(Token = "0x4001BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static bool step5;

	[Token(Token = "0x4001BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	private static bool step6;

	[Token(Token = "0x4001BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	private static bool step7;

	[Token(Token = "0x4001BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
	private static bool step8;

	[Token(Token = "0x4001BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static List<RaycastResult> _resultAppendListGlobal;

	[Token(Token = "0x4001BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 offsetMapCamera;

	[Token(Token = "0x4001BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject PositionObject;

	[Token(Token = "0x4001BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject MapObject;

	[Token(Token = "0x4001BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject ZoomObject;

	[Token(Token = "0x4001BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject ZoomTarget;

	[Token(Token = "0x4001BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 offsetEndPoint;

	[Token(Token = "0x4001BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float lerpF;

	[Token(Token = "0x4001BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 endpoint;

	[Token(Token = "0x4001BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector3 offsetFirstperson;

	[Token(Token = "0x4001BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Camera OVR_camera;

	[Token(Token = "0x4001BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Camera OVRUI_camera;

	[Token(Token = "0x4001BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	public LayerMask lm_Map;

	[Token(Token = "0x4001BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	public LayerMask lm_Gameplay;

	[Token(Token = "0x4001BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Canvas CanvasG;

	[Token(Token = "0x4001BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Vector3 TownPosition;

	[Token(Token = "0x4001BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform TownTansform;

	[Token(Token = "0x4001BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static bool CanvasGSwitch;

	[Token(Token = "0x4001BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public H_camera h_Camera;

	[Token(Token = "0x4001BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 veloC;

	[Token(Token = "0x4001BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float speed;

	[Token(Token = "0x4001BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject CanvasAnchor;

	[Token(Token = "0x4001BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject LookAtCanvasObject;

	[Token(Token = "0x4001BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float YDownLimit;

	[Token(Token = "0x4001BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float StartMoveFromAngle;

	[Token(Token = "0x4001BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float StopMoveFromAngle;

	[Token(Token = "0x4001BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float minDistanceBetweenPointAndCanvas;

	[Token(Token = "0x4001BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float speedFolowCanvas;

	[Token(Token = "0x4001BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private bool startFollowing;

	[Token(Token = "0x4001BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
	private bool switchLayers;

	[Token(Token = "0x4001BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE6")]
	private bool switchFirstPerson;

	[Token(Token = "0x4001BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 startpoint;

	[Token(Token = "0x4001BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Transform offsetOVRHolder;

	[Token(Token = "0x4001BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float timeForAbordage;

	[Token(Token = "0x4001BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject TimerAbordage;

	[Token(Token = "0x4001BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Text textTimerAbordage;

	[Token(Token = "0x4001BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public SwtichSpyglass SpyglassScript;

	[Token(Token = "0x4001BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float t;

	[Token(Token = "0x4001BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public AudioClip C_Sound;

	[Token(Token = "0x4001BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject OceanObj;

	[Token(Token = "0x4001BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float rotateAngle;

	[Token(Token = "0x4001BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private bool switchTown;

	[Token(Token = "0x4001BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13D")]
	private bool startswin;

	[Token(Token = "0x4001BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[HideInInspector]
	public float AngleView;

	[Token(Token = "0x4001BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float yOffsetByShip;

	[Token(Token = "0x4001BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float angleViewBetweenCanvasCamera;

	[Token(Token = "0x4001BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private float distanceBetweenCanvasCamera;

	[Token(Token = "0x4001BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float tempYcoord;

	[Token(Token = "0x4001BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private Vector3 vQ;

	[Token(Token = "0x4001BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Vector3 vQShip;

	[Token(Token = "0x4001BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private Vector3 tempRot;

	[Token(Token = "0x4001BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private LTDescr rAngleTween;

	[Token(Token = "0x4001BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Vector3 offsetCanvasInTown;

	[Token(Token = "0x4001BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static float limitTemp;

	[Token(Token = "0x4001BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static Vector3 tempStartPoint;

	[Token(Token = "0x4001BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private static bool enterAbordage;

	[Token(Token = "0x17000245")]
	public static List<RaycastResult> resultAppendListGlobal
	{
		[Token(Token = "0x60013D0")]
		[Address(RVA = "0x15BC528", Offset = "0x15BC528", VA = "0x15BC528")]
		get
		{
			return null;
		}
		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x15BC58C", Offset = "0x15BC58C", VA = "0x15BC58C")]
		set
		{
		}
	}

	[Token(Token = "0x17000246")]
	public bool isFirstPerson
	{
		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x15BC600", Offset = "0x15BC600", VA = "0x15BC600")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60013D3")]
	[Address(RVA = "0x15BC608", Offset = "0x15BC608", VA = "0x15BC608")]
	private void Start()
	{
	}

	[Token(Token = "0x60013D4")]
	[Address(RVA = "0x15BCB08", Offset = "0x15BCB08", VA = "0x15BCB08")]
	private void Update()
	{
	}

	[Token(Token = "0x60013D5")]
	[Address(RVA = "0x15BEE64", Offset = "0x15BEE64", VA = "0x15BEE64")]
	private void StartTween(float angleRotate = 0f)
	{
	}

	[Token(Token = "0x60013D6")]
	[Address(RVA = "0x15BCA28", Offset = "0x15BCA28", VA = "0x15BCA28")]
	private void SetCanvasSize(Vector3 v)
	{
	}

	[Token(Token = "0x60013D7")]
	[Address(RVA = "0x15BEFC0", Offset = "0x15BEFC0", VA = "0x15BEFC0")]
	private void InTownAction()
	{
	}

	[Token(Token = "0x60013D8")]
	[Address(RVA = "0x15BF594", Offset = "0x15BF594", VA = "0x15BF594")]
	private void OutTownActions()
	{
	}

	[Token(Token = "0x60013D9")]
	[Address(RVA = "0x15BF6D8", Offset = "0x15BF6D8", VA = "0x15BF6D8")]
	public void EnterAboardage()
	{
	}

	[Token(Token = "0x60013DA")]
	[Address(RVA = "0x15BFB2C", Offset = "0x15BFB2C", VA = "0x15BFB2C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58C1C4", Offset = "0x58C1C4")]
	private IEnumerator AfterOneFrame()
	{
		return null;
	}

	[Token(Token = "0x60013DB")]
	[Address(RVA = "0x15BFBAC", Offset = "0x15BFBAC", VA = "0x15BFBAC")]
	public static void ExitAboardage()
	{
	}

	[Token(Token = "0x60013DC")]
	[Address(RVA = "0x15BFD4C", Offset = "0x15BFD4C", VA = "0x15BFD4C")]
	public float GetShipHeight()
	{
		return default(float);
	}

	[Token(Token = "0x60013DD")]
	[Address(RVA = "0x15BED88", Offset = "0x15BED88", VA = "0x15BED88")]
	public float GetShipHeight(int caseIndex)
	{
		return default(float);
	}

	[Token(Token = "0x60013DE")]
	[Address(RVA = "0x15BFE34", Offset = "0x15BFE34", VA = "0x15BFE34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58C22C", Offset = "0x58C22C")]
	private IEnumerator TimerToEnd()
	{
		return null;
	}

	[Token(Token = "0x60013DF")]
	[Address(RVA = "0x15BFEB4", Offset = "0x15BFEB4", VA = "0x15BFEB4")]
	public void SwitchSpyglass(bool enbl)
	{
	}

	[Token(Token = "0x60013E0")]
	[Address(RVA = "0x15BFED8", Offset = "0x15BFED8", VA = "0x15BFED8")]
	public VRPrototypeScripts()
	{
	}

	[Token(Token = "0x60013E2")]
	[Address(RVA = "0x15BFF84", Offset = "0x15BFF84", VA = "0x15BFF84")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58C294", Offset = "0x58C294")]
	private void <StartTween>b__70_0(float x)
	{
	}
}
[Token(Token = "0x2000341")]
public class XRSettingsManager : MonoBehaviour
{
	[Token(Token = "0x4001BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float eyeTextureResolutionScale;

	[Token(Token = "0x4001BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float eyeTextureResolutionScaleQuestOne;

	[Token(Token = "0x60013EF")]
	[Address(RVA = "0x15D4B48", Offset = "0x15D4B48", VA = "0x15D4B48")]
	private void Start()
	{
	}

	[Token(Token = "0x60013F0")]
	[Address(RVA = "0x15D4D84", Offset = "0x15D4D84", VA = "0x15D4D84")]
	public XRSettingsManager()
	{
	}
}
[Token(Token = "0x2000342")]
public class BaseWeather : MonoBehaviour
{
	[Token(Token = "0x4001C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WeatherState targetState;

	[Token(Token = "0x4001C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool changing;

	[Token(Token = "0x60013F1")]
	[Address(RVA = "0x7E6BEC", Offset = "0x7E6BEC", VA = "0x7E6BEC", Slot = "4")]
	public virtual void SetWeather(WeatherState target)
	{
	}

	[Token(Token = "0x60013F2")]
	[Address(RVA = "0x7E6BF0", Offset = "0x7E6BF0", VA = "0x7E6BF0", Slot = "5")]
	public virtual void SetScaleParam(float param)
	{
	}

	[Token(Token = "0x60013F3")]
	[Address(RVA = "0x7E6BF4", Offset = "0x7E6BF4", VA = "0x7E6BF4")]
	public BaseWeather()
	{
	}
}
[Token(Token = "0x2000343")]
public class BuoyancyIniter : MonoBehaviour
{
	[Token(Token = "0x4001C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BuoyancyDescriptor desc;

	[Token(Token = "0x4001C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool simple;

	[Token(Token = "0x60013F4")]
	[Address(RVA = "0x7ED1B4", Offset = "0x7ED1B4", VA = "0x7ED1B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60013F5")]
	[Address(RVA = "0x7ED280", Offset = "0x7ED280", VA = "0x7ED280")]
	public BuoyancyIniter()
	{
	}
}
[Token(Token = "0x2000344")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x5790EC", Offset = "0x5790EC")]
public class BuoyancyDescriptor : ScriptableObject
{
	[Token(Token = "0x4001C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float magnitude;

	[Token(Token = "0x4001C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ypos;

	[Token(Token = "0x4001C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float CenterOfMassOffset;

	[Token(Token = "0x4001C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Rect size;

	[Token(Token = "0x60013F6")]
	[Address(RVA = "0x7ED1AC", Offset = "0x7ED1AC", VA = "0x7ED1AC")]
	public BuoyancyDescriptor()
	{
	}
}
[Token(Token = "0x2000345")]
public class ComunityOceanWeather : BaseWeather
{
	[Serializable]
	[Token(Token = "0x2000346")]
	public struct WeatherParams
	{
		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float windPower;
	}

	[Token(Token = "0x4001C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<WeatherState> states;

	[Token(Token = "0x4001C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private WeatherParams[] weatherParams;

	[Token(Token = "0x4001C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float changeRate;

	[Token(Token = "0x4001C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float windScaleStep;

	[Token(Token = "0x4001C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int targetID;

	[Token(Token = "0x4001C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float timer;

	[Token(Token = "0x4001C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float scale;

	[Token(Token = "0x60013F7")]
	[Address(RVA = "0x85C100", Offset = "0x85C100", VA = "0x85C100", Slot = "4")]
	public override void SetWeather(WeatherState target)
	{
	}

	[Token(Token = "0x60013F8")]
	[Address(RVA = "0x85C184", Offset = "0x85C184", VA = "0x85C184", Slot = "5")]
	public override void SetScaleParam(float param)
	{
	}

	[Token(Token = "0x60013F9")]
	[Address(RVA = "0x85C1A8", Offset = "0x85C1A8", VA = "0x85C1A8")]
	private void Update()
	{
	}

	[Token(Token = "0x60013FA")]
	[Address(RVA = "0x85C2F8", Offset = "0x85C2F8", VA = "0x85C2F8")]
	public ComunityOceanWeather()
	{
	}
}
[Token(Token = "0x2000347")]
public enum WeatherState
{
	[Token(Token = "0x4001C11")]
	Sunny,
	[Token(Token = "0x4001C12")]
	Rainy,
	[Token(Token = "0x4001C13")]
	Windy,
	[Token(Token = "0x4001C14")]
	RainyAndWindy
}
[Token(Token = "0x2000348")]
public class WaterWeatherController : SingletonMonoBehaviour<WaterWeatherController>
{
	[Token(Token = "0x4001C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private BaseWeather comunityWeather;

	[Token(Token = "0x4001C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BaseWeather weather;

	[Token(Token = "0x4001C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float scaleParamMin;

	[Token(Token = "0x4001C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float scaleParamMax;

	[Token(Token = "0x4001C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float nearTownDistance;

	[Token(Token = "0x4001C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float farTownDistance;

	[Token(Token = "0x1700024B")]
	public bool isChangingState
	{
		[Token(Token = "0x60013FB")]
		[Address(RVA = "0x16F8138", Offset = "0x16F8138", VA = "0x16F8138")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700024C")]
	public WeatherState state
	{
		[Token(Token = "0x60013FC")]
		[Address(RVA = "0x16F8158", Offset = "0x16F8158", VA = "0x16F8158")]
		get
		{
			return default(WeatherState);
		}
		[Token(Token = "0x60013FD")]
		[Address(RVA = "0x16F8178", Offset = "0x16F8178", VA = "0x16F8178")]
		set
		{
		}
	}

	[Token(Token = "0x60013FE")]
	[Address(RVA = "0x16F819C", Offset = "0x16F819C", VA = "0x16F819C", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60013FF")]
	[Address(RVA = "0x16F828C", Offset = "0x16F828C", VA = "0x16F828C")]
	public void SetState(bool rain, bool wind)
	{
	}

	[Token(Token = "0x6001400")]
	[Address(RVA = "0x16F831C", Offset = "0x16F831C", VA = "0x16F831C")]
	public void SetScaleParam(float dist)
	{
	}

	[Token(Token = "0x6001401")]
	[Address(RVA = "0x16F8390", Offset = "0x16F8390", VA = "0x16F8390")]
	public WaterWeatherController()
	{
	}
}
[Token(Token = "0x2000349")]
public class WaterCameraTest : MonoBehaviour
{
	[Token(Token = "0x6001402")]
	[Address(RVA = "0x16DFA3C", Offset = "0x16DFA3C", VA = "0x16DFA3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001403")]
	[Address(RVA = "0x16DFA40", Offset = "0x16DFA40", VA = "0x16DFA40")]
	private void Update()
	{
	}

	[Token(Token = "0x6001404")]
	[Address(RVA = "0x16DFA44", Offset = "0x16DFA44", VA = "0x16DFA44")]
	public WaterCameraTest()
	{
	}
}
[Token(Token = "0x200034A")]
public class WeatherController : MonoBehaviour
{
	[Token(Token = "0x200034B")]
	public enum Cheat
	{
		[Token(Token = "0x4001C59")]
		DamageEveryone,
		[Token(Token = "0x4001C5A")]
		IncreaceFrac,
		[Token(Token = "0x4001C5B")]
		Repair,
		[Token(Token = "0x4001C5C")]
		AddMoney,
		[Token(Token = "0x4001C5D")]
		DamageSelf,
		[Token(Token = "0x4001C5E")]
		HideUI,
		[Token(Token = "0x4001C5F")]
		SlowMo,
		[Token(Token = "0x4001C60")]
		RunTutorial,
		[Token(Token = "0x4001C61")]
		ClearRateMe,
		[Token(Token = "0x4001C62")]
		ShopAllItems,
		[Token(Token = "0x4001C63")]
		GetItem,
		[Token(Token = "0x4001C64")]
		GetAchievement,
		[Token(Token = "0x4001C65")]
		LandTest,
		[Token(Token = "0x4001C66")]
		PushNotification,
		[Token(Token = "0x4001C67")]
		TurnOnOffAspid,
		[Token(Token = "0x4001C68")]
		TurnOnOffGoat,
		[Token(Token = "0x4001C69")]
		TurnOnOffKills,
		[Token(Token = "0x4001C6A")]
		TurnOnOffMiss,
		[Token(Token = "0x4001C6B")]
		DecreaseFrac,
		[Token(Token = "0x4001C6C")]
		DisableTownUpgradeParams,
		[Token(Token = "0x4001C6D")]
		FastShopPayment,
		[Token(Token = "0x4001C6E")]
		EnableEndlessLanding,
		[Token(Token = "0x4001C6F")]
		UnlockAcademyQuests
	}

	[Token(Token = "0x200034C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579158", Offset = "0x579158")]
	private sealed class <>c__DisplayClass74_0
	{
		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string id;

		[Token(Token = "0x600141B")]
		[Address(RVA = "0x1704328", Offset = "0x1704328", VA = "0x1704328")]
		public <>c__DisplayClass74_0()
		{
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0x1704330", Offset = "0x1704330", VA = "0x1704330")]
		internal bool <RunCheat>b__0(Tovar t)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200034D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579168", Offset = "0x579168")]
	private sealed class <CheatTimeCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x1700024E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001420")]
			[Address(RVA = "0x170443C", Offset = "0x170443C", VA = "0x170443C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001422")]
			[Address(RVA = "0x1704484", Offset = "0x1704484", VA = "0x1704484", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0x170435C", Offset = "0x170435C", VA = "0x170435C")]
		[DebuggerHidden]
		public <CheatTimeCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0x1704388", Offset = "0x1704388", VA = "0x1704388", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0x170438C", Offset = "0x170438C", VA = "0x170438C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0x1704444", Offset = "0x1704444", VA = "0x1704444", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static WeatherController Singleton;

	[Token(Token = "0x4001C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float WEA_PrecissinOffset;

	[Token(Token = "0x4001C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float WEA_FireTime;

	[Token(Token = "0x4001C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57F3A8", Offset = "0x57F3A8")]
	public Light mainLight;

	[Token(Token = "0x4001C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57F3E0", Offset = "0x57F3E0")]
	public Transform skyBoxTransform;

	[Token(Token = "0x4001C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Material[] SkyBoxMaterialTextures;

	[Token(Token = "0x4001C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Renderer skyBoxRenderer;

	[Token(Token = "0x4001C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material currentSkyBoxMaterial;

	[Token(Token = "0x4001C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int TargetSkyBox;

	[Token(Token = "0x4001C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static int CurrentSkyBox;

	[Token(Token = "0x4001C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static float SwitchSkyProc;

	[Token(Token = "0x4001C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static Color Was_LightGamma;

	[Token(Token = "0x4001C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static Color Was_FogGamma;

	[Token(Token = "0x4001C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static Color Was_ShadowsGamma;

	[Token(Token = "0x4001C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private static float Flashlight;

	[Token(Token = "0x4001C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static float FlashMicroTimer;

	[Token(Token = "0x4001C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static float FlashFadingAndRandomizing;

	[Token(Token = "0x4001C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static Color FlashColorAddon;

	[Token(Token = "0x4001C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static Vector3 LightPos;

	[Token(Token = "0x4001C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static Transform Camerapos;

	[Token(Token = "0x4001C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static float Light_RotZ;

	[Token(Token = "0x4001C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private static float Light_RotX;

	[Token(Token = "0x4001C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57F438", Offset = "0x57F438")]
	public Transform starsTransform;

	[Token(Token = "0x4001C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Material starsMaterial;

	[Token(Token = "0x4001C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Renderer starsRenderer;

	[Token(Token = "0x4001C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static float wasStarsAlpha;

	[Token(Token = "0x4001C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57F490", Offset = "0x57F490")]
	[SerializeField]
	private SpriteRenderer Haze;

	[Token(Token = "0x4001C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private SpriteRenderer Sun;

	[Token(Token = "0x4001C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private SpriteRenderer Moon;

	[Token(Token = "0x4001C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private SpriteRenderer MoonHalf;

	[Token(Token = "0x4001C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57F50C", Offset = "0x57F50C")]
	[SerializeField]
	private Color[] HoursColor_Light;

	[Token(Token = "0x4001C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Color[] HoursColor_HAZE;

	[Token(Token = "0x4001C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Color[] HoursColor_Fog;

	[Token(Token = "0x4001C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Color[] HoursColor_Shadow;

	[Token(Token = "0x4001C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public static bool HighWATER;

	[Token(Token = "0x4001C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static float WaterChanger;

	[Token(Token = "0x4001C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public static bool TargHightWATER;

	[Token(Token = "0x4001C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static float Flash;

	[Token(Token = "0x4001C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public static bool RAIN;

	[Token(Token = "0x4001C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	public static bool WIND;

	[Token(Token = "0x4001C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9E")]
	public static bool isDisabledRainAndWind;

	[Token(Token = "0x4001C44")]
	private const float RainInitChance = 80f;

	[Token(Token = "0x4001C45")]
	private const float RainHourPassChance = 50f;

	[Token(Token = "0x4001C46")]
	private const float RainHourPassNetChance = 60f;

	[Token(Token = "0x4001C47")]
	private const float WindInitChance = 60f;

	[Token(Token = "0x4001C48")]
	private const float WindHourPassChance = 60f;

	[Token(Token = "0x4001C49")]
	private const float WeatherChancesDayCoef = 1f;

	[Token(Token = "0x4001C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float RainPower;

	[Token(Token = "0x4001C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public static float WindPower;

	[Token(Token = "0x4001C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float FogPower;

	[Token(Token = "0x4001C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public static float FogPowerTarg;

	[Token(Token = "0x4001C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57F588", Offset = "0x57F588")]
	[SerializeField]
	private List<InputField> unitsPoints;

	[Token(Token = "0x4001C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private List<InputField> unitsWave;

	[Token(Token = "0x4001C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private List<InputField> unitsHP;

	[Token(Token = "0x4001C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private List<InputField> unitsBlock;

	[Token(Token = "0x4001C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private List<InputField> unitsShots;

	[Token(Token = "0x4001C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private GameObject cheatsPanelArena;

	[Token(Token = "0x4001C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private InputField chTovarId;

	[Token(Token = "0x4001C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private InputField chTovarAmount;

	[Token(Token = "0x4001C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Color originalOceanColor;

	[Token(Token = "0x4001C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Coroutine cheatTimeCoroutine;

	[Token(Token = "0x1700024D")]
	public bool ShowCheatsArena
	{
		[Token(Token = "0x6001405")]
		[Address(RVA = "0x15CB7DC", Offset = "0x15CB7DC", VA = "0x15CB7DC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001406")]
		[Address(RVA = "0x15CB878", Offset = "0x15CB878", VA = "0x15CB878")]
		set
		{
		}
	}

	[Token(Token = "0x6001407")]
	[Address(RVA = "0x15CB918", Offset = "0x15CB918", VA = "0x15CB918")]
	public static void SetLightPos(float rotZ_PI, float rotX_PI)
	{
	}

	[Token(Token = "0x6001408")]
	[Address(RVA = "0x15CBAE8", Offset = "0x15CBAE8", VA = "0x15CBAE8")]
	public static void SetLightPosMoon(float rotZ_PI, float rotX_PI)
	{
	}

	[Token(Token = "0x6001409")]
	[Address(RVA = "0x15CBCB4", Offset = "0x15CBCB4", VA = "0x15CBCB4")]
	public static void FlashLight(float PowerMin, float PowerMax)
	{
	}

	[Token(Token = "0x600140A")]
	[Address(RVA = "0x15CBDA0", Offset = "0x15CBDA0", VA = "0x15CBDA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600140B")]
	[Address(RVA = "0x15CC238", Offset = "0x15CC238", VA = "0x15CC238")]
	private void Start()
	{
	}

	[Token(Token = "0x600140C")]
	[Address(RVA = "0x15CC29C", Offset = "0x15CC29C", VA = "0x15CC29C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600140D")]
	[Address(RVA = "0x15CC100", Offset = "0x15CC100", VA = "0x15CC100")]
	public void SetSkyBox(int targetSkyBox)
	{
	}

	[Token(Token = "0x600140E")]
	[Address(RVA = "0x15CC7A8", Offset = "0x15CC7A8", VA = "0x15CC7A8")]
	public static void SetWeather(bool hourpass = false)
	{
	}

	[Token(Token = "0x600140F")]
	[Address(RVA = "0x15CBFB8", Offset = "0x15CBFB8", VA = "0x15CBFB8")]
	private static bool GetWeatherByDay(float weatherNormalChance)
	{
		return default(bool);
	}

	[Token(Token = "0x6001410")]
	[Address(RVA = "0x15CEB78", Offset = "0x15CEB78", VA = "0x15CEB78")]
	public void RunCheat(int cheatID)
	{
	}

	[Token(Token = "0x6001411")]
	[Address(RVA = "0x15CEB7C", Offset = "0x15CEB7C", VA = "0x15CEB7C")]
	private void RunCheat(Cheat cheat)
	{
	}

	[Token(Token = "0x6001412")]
	[Address(RVA = "0x15D005C", Offset = "0x15D005C", VA = "0x15D005C")]
	public void CheatShowFPSValueChanged(bool isOn)
	{
	}

	[Token(Token = "0x6001413")]
	[Address(RVA = "0x15D00B8", Offset = "0x15D00B8", VA = "0x15D00B8")]
	public void CheatShowShipCoordsValueChanged(bool isOn)
	{
	}

	[Token(Token = "0x6001414")]
	private void HandleGenericComponent<T>(bool isOn) where T : MonoBehaviour
	{
	}

	[Token(Token = "0x6001415")]
	[Address(RVA = "0x15D0114", Offset = "0x15D0114", VA = "0x15D0114")]
	public void CheatTimeOnEndEdit(string value)
	{
	}

	[Token(Token = "0x6001416")]
	[Address(RVA = "0x15D0198", Offset = "0x15D0198", VA = "0x15D0198")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58C344", Offset = "0x58C344")]
	private IEnumerator CheatTimeCoroutine(float time)
	{
		return null;
	}

	[Token(Token = "0x6001417")]
	[Address(RVA = "0x15D020C", Offset = "0x15D020C", VA = "0x15D020C")]
	public void ChangeSettingsUnit()
	{
	}

	[Token(Token = "0x6001418")]
	[Address(RVA = "0x15D0210", Offset = "0x15D0210", VA = "0x15D0210")]
	public void ShowArenaUnits()
	{
	}

	[Token(Token = "0x6001419")]
	[Address(RVA = "0x15D0214", Offset = "0x15D0214", VA = "0x15D0214")]
	public WeatherController()
	{
	}
}
[Token(Token = "0x200034E")]
public class WindPalms : MonoBehaviour
{
	[Token(Token = "0x4001C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float mul;

	[Token(Token = "0x6001423")]
	[Address(RVA = "0x15D2474", Offset = "0x15D2474", VA = "0x15D2474")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001424")]
	[Address(RVA = "0x15D24E0", Offset = "0x15D24E0", VA = "0x15D24E0")]
	public WindPalms()
	{
	}
}
[Token(Token = "0x200034F")]
public class XboxManager : MonoBehaviour
{
	[Token(Token = "0x6001425")]
	[Address(RVA = "0x15D4D98", Offset = "0x15D4D98", VA = "0x15D4D98")]
	public XboxManager()
	{
	}
}
[Token(Token = "0x2000350")]
public class Zoom_Info : MonoBehaviour
{
	[Token(Token = "0x4001C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite UnknownArtefact;

	[Token(Token = "0x4001C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image[] ArtefOutput;

	[Token(Token = "0x4001C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image[] GoodsOutput;

	[Token(Token = "0x4001C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text InfoText;

	[Token(Token = "0x4001C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text InfoTextLeft;

	[Token(Token = "0x4001C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text InfoTextRight;

	[Token(Token = "0x4001C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject InfoText_artef;

	[Token(Token = "0x4001C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject InfoText_goods;

	[Token(Token = "0x4001C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider HPCase;

	[Token(Token = "0x4001C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Slider HPTeam;

	[Token(Token = "0x4001C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Slider HPParus;

	[Token(Token = "0x4001C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject Focus;

	[Token(Token = "0x4001C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Camera VRCamera;

	[Token(Token = "0x4001C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Canvas ParentCanvas;

	[Token(Token = "0x4001C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Quaternion CanvasAngleQ;

	[Token(Token = "0x4001C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject testCube;

	[Token(Token = "0x4001C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float angleRotate;

	[Token(Token = "0x6001426")]
	[Address(RVA = "0x15D4EA0", Offset = "0x15D4EA0", VA = "0x15D4EA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001427")]
	[Address(RVA = "0x15D7338", Offset = "0x15D7338", VA = "0x15D7338")]
	private void enableHPBars(Ship enemyS)
	{
	}

	[Token(Token = "0x6001428")]
	[Address(RVA = "0x15D78D4", Offset = "0x15D78D4", VA = "0x15D78D4")]
	private void disableObjects()
	{
	}

	[Token(Token = "0x6001429")]
	[Address(RVA = "0x15D72F8", Offset = "0x15D72F8", VA = "0x15D72F8")]
	public Vector3 WorldToScreenPos(Vector3 coord)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600142A")]
	[Address(RVA = "0x15D7C74", Offset = "0x15D7C74", VA = "0x15D7C74")]
	public Zoom_Info()
	{
	}
}
[Token(Token = "0x2000351")]
public class TextPosition : MonoBehaviour
{
	[Token(Token = "0x600142B")]
	[Address(RVA = "0x1666444", Offset = "0x1666444", VA = "0x1666444")]
	public Vector3 GetTextPos(Canvas canvas, int charIndex, Text textComp)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600142C")]
	[Address(RVA = "0x1666964", Offset = "0x1666964", VA = "0x1666964")]
	public TextPosition()
	{
	}
}
namespace DataPlatform
{
	[Token(Token = "0x2000352")]
	public class Events
	{
		[Token(Token = "0x600142D")]
		[Address(RVA = "0x9B9E6C", Offset = "0x9B9E6C", VA = "0x9B9E6C")]
		public static void SendBase(string UserId, Guid PlayerSessionId)
		{
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0x9B9F28", Offset = "0x9B9F28", VA = "0x9B9F28")]
		public static void SendDoorOpened(string UserId, Guid PlayerSessionId, float CompletionPercent, float LocationX, float LocationY, float LocationZ)
		{
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0x9BA054", Offset = "0x9BA054", VA = "0x9BA054")]
		public static void SendEnemyDefeated(string UserId, int SectionId, Guid PlayerSessionId, string MultiplayerCorrelationId, int GameplayModeId, int DifficultyLevelId, Guid RoundId, int PlayerRoleId, int PlayerWeaponId, int EnemyRoleId, int KillTypeId, float LocationX, float LocationY, float LocationZ, int EnemyWeaponId)
		{
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0x9BA280", Offset = "0x9BA280", VA = "0x9BA280")]
		public static void SendGameCompleted(string UserId, int SectionId, Guid PlayerSessionId, string MultiplayerCorrelationId, int GameplayModeId, int DifficultyLevelId, int ExitStatusId, int Score)
		{
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0x9BA3E4", Offset = "0x9BA3E4", VA = "0x9BA3E4")]
		public static void SendGameProgress(string UserId, Guid PlayerSessionId, float CompletionPercent)
		{
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0x9BA4C0", Offset = "0x9BA4C0", VA = "0x9BA4C0")]
		public static void SendMediaUsage(string AppSessionId, string AppSessionStartDateTime, uint UserIdType, string UserId, string SubscriptionTierType, string SubscriptionTier, string MediaType, string ProviderId, string ProviderMediaId, string ProviderMediaInstanceId, Guid BingId, ulong MediaLengthMs, uint MediaControlAction, float PlaybackSpeed, ulong MediaPositionMs, ulong PlaybackDurationMs, string AcquisitionType, string AcquisitionContext, string AcquisitionContextType, string AcquisitionContextId, int PlaybackIsStream, int PlaybackIsTethered, string MarketplaceLocation, string ContentLocale, float TimeZoneOffset, uint ScreenState)
		{
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0x9BA80C", Offset = "0x9BA80C", VA = "0x9BA80C")]
		public static void SendMultiplayerRoundEnd(string UserId, Guid RoundId, int SectionId, Guid PlayerSessionId, string MultiplayerCorrelationId, int GameplayModeId, int MatchTypeId, int DifficultyLevelId, float TimeInSeconds, int ExitStatusId)
		{
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0x9BA9A4", Offset = "0x9BA9A4", VA = "0x9BA9A4")]
		public static void SendMultiplayerRoundStart(string UserId, Guid RoundId, int SectionId, Guid PlayerSessionId, string MultiplayerCorrelationId, int GameplayModeId, int MatchTypeId, int DifficultyLevelId)
		{
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0x9BAB08", Offset = "0x9BAB08", VA = "0x9BAB08")]
		public static void SendObjectiveEnd(string UserId, int SectionId, Guid PlayerSessionId, string MultiplayerCorrelationId, int GameplayModeId, int DifficultyLevelId, int ObjectiveId, int ExitStatusId)
		{
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0x9BAC6C", Offset = "0x9BAC6C", VA = "0x9BAC6C")]
		public static void SendObjectiveStart(string UserId, int SectionId, Guid PlayerSessionId, string MultiplayerCorrelationId, int GameplayModeId, int DifficultyLevelId, int ObjectiveId)
		{
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0x9BADB0", Offset = "0x9BADB0", VA = "0x9BADB0")]
		public static void SendPageAction(string UserId, Guid PlayerSessionId, int ActionTypeId, int ActionInputMethodId, string Page, string TemplateId, string DestinationPage, string Content)
		{
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0x9BAF14", Offset = "0x9BAF14", VA = "0x9BAF14")]
		public static void SendPageView(string UserId, Guid PlayerSessionId, string Page, string RefererPage, int PageTypeId, string PageTags, string TemplateId, string Content)
		{
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0x9BB078", Offset = "0x9BB078", VA = "0x9BB078")]
		public static void SendPlayerSessionEnd(string UserId, Guid PlayerSessionId, string MultiplayerCorrelationId, int GameplayModeId, int DifficultyLevelId, int ExitStatusId)
		{
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0x9BB1A4", Offset = "0x9BB1A4", VA = "0x9BB1A4")]
		public static void SendPlayerSessionPause(string UserId, Guid PlayerSessionId, string MultiplayerCorrelationId)
		{
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0x9BB278", Offset = "0x9BB278", VA = "0x9BB278")]
		public static void SendPlayerSessionResume(string UserId, Guid PlayerSessionId, string MultiplayerCorrelationId, int GameplayModeId, int DifficultyLevelId)
		{
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0x9BB384", Offset = "0x9BB384", VA = "0x9BB384")]
		public static void SendPlayerSessionStart(string UserId, Guid PlayerSessionId, string MultiplayerCorrelationId, int GameplayModeId, int DifficultyLevelId)
		{
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0x9BB490", Offset = "0x9BB490", VA = "0x9BB490")]
		public static void SendPlaySessionStart(string UserId, Guid PlayerSessionId, string MultiplayerCorrelationId, int GameplayModeId, int DifficultyLevelId, ulong StartTime)
		{
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0x9BB5BC", Offset = "0x9BB5BC", VA = "0x9BB5BC")]
		public static void SendSceneChanged(string UserId, Guid PlayerSessionId, int SceneId)
		{
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0x9BB690", Offset = "0x9BB690", VA = "0x9BB690")]
		public static void SendScoreChanged(string UserId, Guid PlayerSessionId, int CurrentScore)
		{
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0x9BB764", Offset = "0x9BB764", VA = "0x9BB764")]
		public static void SendSectionEnd(string UserId, int SectionId, Guid PlayerSessionId, string MultiplayerCorrelationId, int GameplayModeId, int DifficultyLevelId, int ExitStatusId)
		{
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0x9BB8A8", Offset = "0x9BB8A8", VA = "0x9BB8A8")]
		public static void SendSectionStart(string UserId, int SectionId, Guid PlayerSessionId, string MultiplayerCorrelationId, int GameplayModeId, int DifficultyLevelId)
		{
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0x9BB9D4", Offset = "0x9BB9D4", VA = "0x9BB9D4")]
		public static void SendSplashScreen(string UserId, Guid PlayerSessionId, string Page, string RefererPage, int PageTypeId, string PageTags, string TemplateId, string Content)
		{
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0x9BBB38", Offset = "0x9BBB38", VA = "0x9BBB38")]
		public static void SendViewOffer(string UserId, Guid PlayerSessionId, Guid OfferGuid, Guid ProductGuid)
		{
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0x9BBC2C", Offset = "0x9BBC2C", VA = "0x9BBC2C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x58C3FC", Offset = "0x58C3FC")]
		public static void SendButtonPress(string Button)
		{
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0x9BBCDC", Offset = "0x9BBCDC", VA = "0x9BBCDC")]
		public Events()
		{
		}
	}
}
namespace UnityEngine.PostProcessing
{
	[Token(Token = "0x2000353")]
	public sealed class GetSetAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string name;

		[Token(Token = "0x4001C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool dirty;

		[Token(Token = "0x6001446")]
		[Address(RVA = "0x7F6BC0", Offset = "0x7F6BC0", VA = "0x7F6BC0")]
		public GetSetAttribute(string name)
		{
		}
	}
	[Token(Token = "0x2000354")]
	public sealed class MinAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly float min;

		[Token(Token = "0x6001447")]
		[Address(RVA = "0x15A7404", Offset = "0x15A7404", VA = "0x15A7404")]
		public MinAttribute(float min)
		{
		}
	}
	[Token(Token = "0x2000355")]
	public sealed class TrackballAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string method;

		[Token(Token = "0x6001448")]
		[Address(RVA = "0x158B0F4", Offset = "0x158B0F4", VA = "0x158B0F4")]
		public TrackballAttribute(string method)
		{
		}
	}
	[Token(Token = "0x2000356")]
	public sealed class TrackballGroupAttribute : PropertyAttribute
	{
		[Token(Token = "0x6001449")]
		[Address(RVA = "0x158B128", Offset = "0x158B128", VA = "0x158B128")]
		public TrackballGroupAttribute()
		{
		}
	}
	[Token(Token = "0x2000357")]
	public sealed class AmbientOcclusionComponent : PostProcessingComponentCommandBuffer<AmbientOcclusionModel>
	{
		[Token(Token = "0x2000358")]
		private static class Uniforms
		{
			[Token(Token = "0x4001C8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Intensity;

			[Token(Token = "0x4001C8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Radius;

			[Token(Token = "0x4001C8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _FogParams;

			[Token(Token = "0x4001C90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _Downsample;

			[Token(Token = "0x4001C91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _SampleCount;

			[Token(Token = "0x4001C92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _OcclusionTexture1;

			[Token(Token = "0x4001C93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _OcclusionTexture2;

			[Token(Token = "0x4001C94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _OcclusionTexture;

			[Token(Token = "0x4001C95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _MainTex;

			[Token(Token = "0x4001C96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _TempRT;
		}

		[Token(Token = "0x2000359")]
		private enum OcclusionSource
		{
			[Token(Token = "0x4001C98")]
			DepthTexture,
			[Token(Token = "0x4001C99")]
			DepthNormalsTexture,
			[Token(Token = "0x4001C9A")]
			GBuffer
		}

		[Token(Token = "0x4001C8A")]
		private const string k_BlitShaderString = "Hidden/Post FX/Blit";

		[Token(Token = "0x4001C8B")]
		private const string k_ShaderString = "Hidden/Post FX/Ambient Occlusion";

		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly RenderTargetIdentifier[] m_MRT;

		[Token(Token = "0x17000250")]
		private OcclusionSource occlusionSource
		{
			[Token(Token = "0x600144A")]
			[Address(RVA = "0x7E2C34", Offset = "0x7E2C34", VA = "0x7E2C34")]
			get
			{
				return default(OcclusionSource);
			}
		}

		[Token(Token = "0x17000251")]
		private bool ambientOnlySupported
		{
			[Token(Token = "0x600144B")]
			[Address(RVA = "0x7E2CDC", Offset = "0x7E2CDC", VA = "0x7E2CDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000252")]
		public override bool active
		{
			[Token(Token = "0x600144C")]
			[Address(RVA = "0x7E2D70", Offset = "0x7E2D70", VA = "0x7E2D70", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0x7E2DE8", Offset = "0x7E2DE8", VA = "0x7E2DE8", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0x7E2E24", Offset = "0x7E2E24", VA = "0x7E2E24", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0x7E2E68", Offset = "0x7E2E68", VA = "0x7E2E68", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0x7E2ED4", Offset = "0x7E2ED4", VA = "0x7E2ED4", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0x7E38AC", Offset = "0x7E38AC", VA = "0x7E38AC")]
		public AmbientOcclusionComponent()
		{
		}
	}
	[Token(Token = "0x200035A")]
	public sealed class BloomComponent : PostProcessingComponentRenderTexture<BloomModel>
	{
		[Token(Token = "0x200035B")]
		private static class Uniforms
		{
			[Token(Token = "0x4001C9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _AutoExposure;

			[Token(Token = "0x4001C9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Threshold;

			[Token(Token = "0x4001CA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Curve;

			[Token(Token = "0x4001CA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _PrefilterOffs;

			[Token(Token = "0x4001CA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _SampleScale;

			[Token(Token = "0x4001CA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _BaseTex;

			[Token(Token = "0x4001CA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _BloomTex;

			[Token(Token = "0x4001CA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _Bloom_Settings;

			[Token(Token = "0x4001CA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _Bloom_DirtTex;

			[Token(Token = "0x4001CA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _Bloom_DirtIntensity;
		}

		[Token(Token = "0x4001C9B")]
		private const int k_MaxPyramidBlurLevel = 16;

		[Token(Token = "0x4001C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly RenderTexture[] m_BlurBuffer1;

		[Token(Token = "0x4001C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly RenderTexture[] m_BlurBuffer2;

		[Token(Token = "0x17000253")]
		public override bool active
		{
			[Token(Token = "0x6001453")]
			[Address(RVA = "0x7E76D4", Offset = "0x7E76D4", VA = "0x7E76D4", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0x7E774C", Offset = "0x7E774C", VA = "0x7E774C")]
		public void Prepare(RenderTexture source, Material uberMaterial, Texture autoExposure)
		{
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0x7E8138", Offset = "0x7E8138", VA = "0x7E8138")]
		public BloomComponent()
		{
		}
	}
	[Token(Token = "0x200035C")]
	public sealed class BuiltinDebugViewsComponent : PostProcessingComponentCommandBuffer<BuiltinDebugViewsModel>
	{
		[Token(Token = "0x200035D")]
		private static class Uniforms
		{
			[Token(Token = "0x4001CAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _DepthScale;

			[Token(Token = "0x4001CAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _TempRT;

			[Token(Token = "0x4001CAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Opacity;

			[Token(Token = "0x4001CAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _MainTex;

			[Token(Token = "0x4001CAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _TempRT2;

			[Token(Token = "0x4001CAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _Amplitude;

			[Token(Token = "0x4001CB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _Scale;
		}

		[Token(Token = "0x200035E")]
		private enum Pass
		{
			[Token(Token = "0x4001CB2")]
			Depth,
			[Token(Token = "0x4001CB3")]
			Normals,
			[Token(Token = "0x4001CB4")]
			MovecOpacity,
			[Token(Token = "0x4001CB5")]
			MovecImaging,
			[Token(Token = "0x4001CB6")]
			MovecArrows
		}

		[Token(Token = "0x200035F")]
		private class ArrowArray
		{
			[Token(Token = "0x4001CB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F644", Offset = "0x57F644")]
			private Mesh <mesh>k__BackingField;

			[Token(Token = "0x4001CB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F654", Offset = "0x57F654")]
			private int <columnCount>k__BackingField;

			[Token(Token = "0x4001CB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F664", Offset = "0x57F664")]
			private int <rowCount>k__BackingField;

			[Token(Token = "0x17000255")]
			public Mesh mesh
			{
				[Token(Token = "0x6001463")]
				[Address(RVA = "0x1504068", Offset = "0x1504068", VA = "0x1504068")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58C434", Offset = "0x58C434")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001464")]
				[Address(RVA = "0x1504070", Offset = "0x1504070", VA = "0x1504070")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58C444", Offset = "0x58C444")]
				private set
				{
				}
			}

			[Token(Token = "0x17000256")]
			public int columnCount
			{
				[Token(Token = "0x6001465")]
				[Address(RVA = "0x1504078", Offset = "0x1504078", VA = "0x1504078")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58C454", Offset = "0x58C454")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001466")]
				[Address(RVA = "0x1504080", Offset = "0x1504080", VA = "0x1504080")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58C464", Offset = "0x58C464")]
				private set
				{
				}
			}

			[Token(Token = "0x17000257")]
			public int rowCount
			{
				[Token(Token = "0x6001467")]
				[Address(RVA = "0x1504088", Offset = "0x1504088", VA = "0x1504088")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58C474", Offset = "0x58C474")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001468")]
				[Address(RVA = "0x1504090", Offset = "0x1504090", VA = "0x1504090")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58C484", Offset = "0x58C484")]
				private set
				{
				}
			}

			[Token(Token = "0x6001469")]
			[Address(RVA = "0x1504098", Offset = "0x1504098", VA = "0x1504098")]
			public void BuildMesh(int columns, int rows)
			{
			}

			[Token(Token = "0x600146A")]
			[Address(RVA = "0x1504454", Offset = "0x1504454", VA = "0x1504454")]
			public void Release()
			{
			}

			[Token(Token = "0x600146B")]
			[Address(RVA = "0x1504488", Offset = "0x1504488", VA = "0x1504488")]
			public ArrowArray()
			{
			}
		}

		[Token(Token = "0x4001CA8")]
		private const string k_ShaderString = "Hidden/Post FX/Builtin Debug Views";

		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ArrowArray m_Arrows;

		[Token(Token = "0x17000254")]
		public override bool active
		{
			[Token(Token = "0x6001457")]
			[Address(RVA = "0x7EAC84", Offset = "0x7EAC84", VA = "0x7EAC84", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0x7EACEC", Offset = "0x7EACEC", VA = "0x7EACEC", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0x7EAD58", Offset = "0x7EAD58", VA = "0x7EAD58", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0x7EADB4", Offset = "0x7EADB4", VA = "0x7EADB4", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0x7EADF8", Offset = "0x7EADF8", VA = "0x7EADF8", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0x7EAF1C", Offset = "0x7EAF1C", VA = "0x7EAF1C")]
		private void DepthPass(CommandBuffer cb)
		{
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0x7EB048", Offset = "0x7EB048", VA = "0x7EB048")]
		private void DepthNormalsPass(CommandBuffer cb)
		{
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0x7EB118", Offset = "0x7EB118", VA = "0x7EB118")]
		private void MotionVectorsPass(CommandBuffer cb)
		{
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0x7EB6AC", Offset = "0x7EB6AC", VA = "0x7EB6AC")]
		private void PrepareArrows()
		{
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0x7EB7BC", Offset = "0x7EB7BC", VA = "0x7EB7BC", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0x7EB7F4", Offset = "0x7EB7F4", VA = "0x7EB7F4")]
		public BuiltinDebugViewsComponent()
		{
		}
	}
	[Token(Token = "0x2000360")]
	public sealed class ChromaticAberrationComponent : PostProcessingComponentRenderTexture<ChromaticAberrationModel>
	{
		[Token(Token = "0x2000361")]
		private static class Uniforms
		{
			[Token(Token = "0x4001CBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _ChromaticAberration_Amount;

			[Token(Token = "0x4001CBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _ChromaticAberration_Spectrum;
		}

		[Token(Token = "0x4001CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D m_SpectrumLut;

		[Token(Token = "0x17000258")]
		public override bool active
		{
			[Token(Token = "0x600146C")]
			[Address(RVA = "0x853760", Offset = "0x853760", VA = "0x853760", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0x8537D8", Offset = "0x8537D8", VA = "0x8537D8", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0x85380C", Offset = "0x85380C", VA = "0x85380C", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0x853B14", Offset = "0x853B14", VA = "0x853B14")]
		public ChromaticAberrationComponent()
		{
		}
	}
	[Token(Token = "0x2000362")]
	public sealed class ColorGradingComponent : PostProcessingComponentRenderTexture<ColorGradingModel>
	{
		[Token(Token = "0x2000363")]
		private static class Uniforms
		{
			[Token(Token = "0x4001CC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _LutParams;

			[Token(Token = "0x4001CC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _NeutralTonemapperParams1;

			[Token(Token = "0x4001CC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _NeutralTonemapperParams2;

			[Token(Token = "0x4001CC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _HueShift;

			[Token(Token = "0x4001CC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _Saturation;

			[Token(Token = "0x4001CC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _Contrast;

			[Token(Token = "0x4001CC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _Balance;

			[Token(Token = "0x4001CC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _Lift;

			[Token(Token = "0x4001CCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _InvGamma;

			[Token(Token = "0x4001CCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _Gain;

			[Token(Token = "0x4001CCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _Slope;

			[Token(Token = "0x4001CCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal static readonly int _Power;

			[Token(Token = "0x4001CCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly int _Offset;

			[Token(Token = "0x4001CCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal static readonly int _ChannelMixerRed;

			[Token(Token = "0x4001CD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly int _ChannelMixerGreen;

			[Token(Token = "0x4001CD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal static readonly int _ChannelMixerBlue;

			[Token(Token = "0x4001CD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly int _Curves;

			[Token(Token = "0x4001CD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal static readonly int _LogLut;

			[Token(Token = "0x4001CD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly int _LogLut_Params;

			[Token(Token = "0x4001CD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal static readonly int _ExposureEV;
		}

		[Token(Token = "0x4001CBD")]
		private const int k_InternalLogLutSize = 32;

		[Token(Token = "0x4001CBE")]
		private const int k_CurvePrecision = 128;

		[Token(Token = "0x4001CBF")]
		private const float k_CurveStep = 1f / 128f;

		[Token(Token = "0x4001CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D m_GradingCurves;

		[Token(Token = "0x4001CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] m_pixels;

		[Token(Token = "0x17000259")]
		public override bool active
		{
			[Token(Token = "0x6001471")]
			[Address(RVA = "0x855C60", Offset = "0x855C60", VA = "0x855C60", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0x855CCC", Offset = "0x855CCC", VA = "0x855CCC")]
		private float StandardIlluminantY(float x)
		{
			return default(float);
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0x855CF8", Offset = "0x855CF8", VA = "0x855CF8")]
		private Vector3 CIExyToLMS(float x, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0x855D88", Offset = "0x855D88", VA = "0x855D88")]
		private Vector3 CalculateColorBalance(float temperature, float tint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0x855E8C", Offset = "0x855E8C", VA = "0x855E8C")]
		private static Color NormalizeColor(Color c)
		{
			return default(Color);
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0x855F34", Offset = "0x855F34", VA = "0x855F34")]
		private static Vector3 ClampVector(Vector3 v, float min, float max)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0x855FB8", Offset = "0x855FB8", VA = "0x855FB8")]
		public static Vector3 GetLiftValue(Color lift)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0x85601C", Offset = "0x85601C", VA = "0x85601C")]
		public static Vector3 GetGammaValue(Color gamma)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0x856110", Offset = "0x856110", VA = "0x856110")]
		public static Vector3 GetGainValue(Color gain)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0x8561AC", Offset = "0x8561AC", VA = "0x8561AC")]
		public static void CalculateLiftGammaGain(Color lift, Color gamma, Color gain, [Out] Vector3 outLift, [Out] Vector3 outGamma, [Out] Vector3 outGain)
		{
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0x856254", Offset = "0x856254", VA = "0x856254")]
		public static Vector3 GetSlopeValue(Color slope)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0x8562D0", Offset = "0x8562D0", VA = "0x8562D0")]
		public static Vector3 GetPowerValue(Color power)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0x8563A4", Offset = "0x8563A4", VA = "0x8563A4")]
		public static Vector3 GetOffsetValue(Color offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0x856418", Offset = "0x856418", VA = "0x856418")]
		public static void CalculateSlopePowerOffset(Color slope, Color power, Color offset, [Out] Vector3 outSlope, [Out] Vector3 outPower, [Out] Vector3 outOffset)
		{
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0x8564C0", Offset = "0x8564C0", VA = "0x8564C0")]
		private TextureFormat GetCurveFormat()
		{
			return default(TextureFormat);
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0x8564F4", Offset = "0x8564F4", VA = "0x8564F4")]
		private Texture2D GetCurveTexture()
		{
			return null;
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0x856AC8", Offset = "0x856AC8", VA = "0x856AC8")]
		private bool IsLogLutValid(RenderTexture lut)
		{
			return default(bool);
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0x856B78", Offset = "0x856B78", VA = "0x856B78")]
		private RenderTextureFormat GetLutFormat()
		{
			return default(RenderTextureFormat);
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0x856BA8", Offset = "0x856BA8", VA = "0x856BA8")]
		private void GenerateLut()
		{
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0x857430", Offset = "0x857430", VA = "0x857430", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0x857628", Offset = "0x857628", VA = "0x857628")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0x857754", Offset = "0x857754", VA = "0x857754", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0x8577DC", Offset = "0x8577DC", VA = "0x8577DC")]
		public ColorGradingComponent()
		{
		}
	}
	[Token(Token = "0x2000364")]
	public sealed class DepthOfFieldComponent : PostProcessingComponentRenderTexture<DepthOfFieldModel>
	{
		[Token(Token = "0x2000365")]
		private static class Uniforms
		{
			[Token(Token = "0x4001CD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _DepthOfFieldTex;

			[Token(Token = "0x4001CDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _DepthOfFieldCoCTex;

			[Token(Token = "0x4001CDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Distance;

			[Token(Token = "0x4001CDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _LensCoeff;

			[Token(Token = "0x4001CDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _MaxCoC;

			[Token(Token = "0x4001CDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _RcpMaxCoC;

			[Token(Token = "0x4001CDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _RcpAspect;

			[Token(Token = "0x4001CE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _MainTex;

			[Token(Token = "0x4001CE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _CoCTex;

			[Token(Token = "0x4001CE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _TaaParams;

			[Token(Token = "0x4001CE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _DepthOfFieldParams;
		}

		[Token(Token = "0x4001CD6")]
		private const string k_ShaderString = "Hidden/Post FX/Depth Of Field";

		[Token(Token = "0x4001CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderTexture m_CoCHistory;

		[Token(Token = "0x4001CD8")]
		private const float k_FilmHeight = 0.024f;

		[Token(Token = "0x1700025A")]
		public override bool active
		{
			[Token(Token = "0x6001489")]
			[Address(RVA = "0x7CB8E0", Offset = "0x7CB8E0", VA = "0x7CB8E0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0x7CB94C", Offset = "0x7CB94C", VA = "0x7CB94C", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0x7CB954", Offset = "0x7CB954", VA = "0x7CB954")]
		private float CalculateFocalLength()
		{
			return default(float);
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0x7CB9F4", Offset = "0x7CB9F4", VA = "0x7CB9F4")]
		private float CalculateMaxCoCRadius(int screenHeight)
		{
			return default(float);
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0x7CBA74", Offset = "0x7CBA74", VA = "0x7CBA74")]
		private bool CheckHistory(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0x7CBB58", Offset = "0x7CBB58", VA = "0x7CBB58")]
		private RenderTextureFormat SelectFormat(RenderTextureFormat primary, RenderTextureFormat secondary)
		{
			return default(RenderTextureFormat);
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0x7CBBA8", Offset = "0x7CBBA8", VA = "0x7CBBA8")]
		public void Prepare(RenderTexture source, Material uberMaterial, bool antialiasCoC, Vector2 taaJitter, float taaBlending)
		{
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0x7CC360", Offset = "0x7CC360", VA = "0x7CC360", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0x7CC3F4", Offset = "0x7CC3F4", VA = "0x7CC3F4")]
		public DepthOfFieldComponent()
		{
		}
	}
	[Token(Token = "0x2000366")]
	public sealed class DitheringComponent : PostProcessingComponentRenderTexture<DitheringModel>
	{
		[Token(Token = "0x2000367")]
		private static class Uniforms
		{
			[Token(Token = "0x4001CE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _DitheringTex;

			[Token(Token = "0x4001CE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _DitheringCoords;
		}

		[Token(Token = "0x4001CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D[] noiseTextures;

		[Token(Token = "0x4001CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int textureIndex;

		[Token(Token = "0x4001CE6")]
		private const int k_TextureCount = 64;

		[Token(Token = "0x1700025B")]
		public override bool active
		{
			[Token(Token = "0x6001493")]
			[Address(RVA = "0x7CEB18", Offset = "0x7CEB18", VA = "0x7CEB18", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0x7CEB84", Offset = "0x7CEB84", VA = "0x7CEB84", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0x7CEB90", Offset = "0x7CEB90", VA = "0x7CEB90")]
		private void LoadNoiseTextures()
		{
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0x7CECCC", Offset = "0x7CECCC", VA = "0x7CECCC", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0x7CEEA4", Offset = "0x7CEEA4", VA = "0x7CEEA4")]
		public DitheringComponent()
		{
		}
	}
	[Token(Token = "0x2000368")]
	public sealed class EyeAdaptationComponent : PostProcessingComponentRenderTexture<EyeAdaptationModel>
	{
		[Token(Token = "0x2000369")]
		private static class Uniforms
		{
			[Token(Token = "0x4001CF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Params;

			[Token(Token = "0x4001CF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Speed;

			[Token(Token = "0x4001CF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _ScaleOffsetRes;

			[Token(Token = "0x4001CF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _ExposureCompensation;

			[Token(Token = "0x4001CF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _AutoExposure;

			[Token(Token = "0x4001CF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _DebugWidth;
		}

		[Token(Token = "0x4001CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ComputeShader m_EyeCompute;

		[Token(Token = "0x4001CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ComputeBuffer m_HistogramBuffer;

		[Token(Token = "0x4001CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly RenderTexture[] m_AutoExposurePool;

		[Token(Token = "0x4001CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_AutoExposurePingPing;

		[Token(Token = "0x4001CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RenderTexture m_CurrentAutoExposure;

		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTexture m_DebugHistogram;

		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static uint[] s_EmptyHistogramBuffer;

		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_FirstFrame;

		[Token(Token = "0x4001CF1")]
		private const int k_HistogramBins = 64;

		[Token(Token = "0x4001CF2")]
		private const int k_HistogramThreadX = 16;

		[Token(Token = "0x4001CF3")]
		private const int k_HistogramThreadY = 16;

		[Token(Token = "0x1700025C")]
		public override bool active
		{
			[Token(Token = "0x6001499")]
			[Address(RVA = "0x7AB530", Offset = "0x7AB530", VA = "0x7AB530", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0x7AB5A8", Offset = "0x7AB5A8", VA = "0x7AB5A8")]
		public void ResetHistory()
		{
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0x7AB5B4", Offset = "0x7AB5B4", VA = "0x7AB5B4", Slot = "6")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0x7AB5C0", Offset = "0x7AB5C0", VA = "0x7AB5C0", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0x7AB6D0", Offset = "0x7AB6D0", VA = "0x7AB6D0")]
		private Vector4 GetHistogramScaleOffsetRes()
		{
			return default(Vector4);
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0x7AB7BC", Offset = "0x7AB7BC", VA = "0x7AB7BC")]
		public Texture Prepare(RenderTexture source, Material uberMaterial)
		{
			return null;
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0x7AC230", Offset = "0x7AC230", VA = "0x7AC230")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0x7AC3AC", Offset = "0x7AC3AC", VA = "0x7AC3AC")]
		public EyeAdaptationComponent()
		{
		}
	}
	[Token(Token = "0x200036A")]
	public sealed class FogComponent : PostProcessingComponentCommandBuffer<FogModel>
	{
		[Token(Token = "0x200036B")]
		private static class Uniforms
		{
			[Token(Token = "0x4001CFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _FogColor;

			[Token(Token = "0x4001CFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Density;

			[Token(Token = "0x4001CFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Start;

			[Token(Token = "0x4001CFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _End;

			[Token(Token = "0x4001CFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _TempRT;
		}

		[Token(Token = "0x4001CFA")]
		private const string k_ShaderString = "Hidden/Post FX/Fog";

		[Token(Token = "0x1700025D")]
		public override bool active
		{
			[Token(Token = "0x60014A2")]
			[Address(RVA = "0x7B5AA4", Offset = "0x7B5AA4", VA = "0x7B5AA4", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0x7B5B30", Offset = "0x7B5B30", VA = "0x7B5B30", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0x7B5B74", Offset = "0x7B5B74", VA = "0x7B5B74", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x7B5B7C", Offset = "0x7B5B7C", VA = "0x7B5B7C", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x7B5B84", Offset = "0x7B5B84", VA = "0x7B5B84", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x7B600C", Offset = "0x7B600C", VA = "0x7B600C")]
		public FogComponent()
		{
		}
	}
	[Token(Token = "0x200036C")]
	public sealed class FxaaComponent : PostProcessingComponentRenderTexture<AntialiasingModel>
	{
		[Token(Token = "0x200036D")]
		private static class Uniforms
		{
			[Token(Token = "0x4001D00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _QualitySettings;

			[Token(Token = "0x4001D01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _ConsoleSettings;
		}

		[Token(Token = "0x1700025E")]
		public override bool active
		{
			[Token(Token = "0x60014A9")]
			[Address(RVA = "0x7BC824", Offset = "0x7BC824", VA = "0x7BC824", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x7BC898", Offset = "0x7BC898", VA = "0x7BC898")]
		public void Render(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0x7BCAFC", Offset = "0x7BCAFC", VA = "0x7BCAFC")]
		public FxaaComponent()
		{
		}
	}
	[Token(Token = "0x200036E")]
	public sealed class GrainComponent : PostProcessingComponentRenderTexture<GrainModel>
	{
		[Token(Token = "0x200036F")]
		private static class Uniforms
		{
			[Token(Token = "0x4001D03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Grain_Params1;

			[Token(Token = "0x4001D04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Grain_Params2;

			[Token(Token = "0x4001D05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _GrainTex;

			[Token(Token = "0x4001D06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _Phase;
		}

		[Token(Token = "0x4001D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderTexture m_GrainLookupRT;

		[Token(Token = "0x1700025F")]
		public override bool active
		{
			[Token(Token = "0x60014AD")]
			[Address(RVA = "0x7F7C9C", Offset = "0x7F7C9C", VA = "0x7F7C9C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0x7F7D24", Offset = "0x7F7D24", VA = "0x7F7D24", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0x7F7DFC", Offset = "0x7F7DFC", VA = "0x7F7DFC", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0x7F81EC", Offset = "0x7F81EC", VA = "0x7F81EC")]
		public GrainComponent()
		{
		}
	}
	[Token(Token = "0x2000370")]
	public sealed class MotionBlurComponent : PostProcessingComponentCommandBuffer<MotionBlurModel>
	{
		[Token(Token = "0x2000371")]
		private static class Uniforms
		{
			[Token(Token = "0x4001D0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _VelocityScale;

			[Token(Token = "0x4001D0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _MaxBlurRadius;

			[Token(Token = "0x4001D0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _RcpMaxBlurRadius;

			[Token(Token = "0x4001D0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _VelocityTex;

			[Token(Token = "0x4001D0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _MainTex;

			[Token(Token = "0x4001D0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _Tile2RT;

			[Token(Token = "0x4001D10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _Tile4RT;

			[Token(Token = "0x4001D11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _Tile8RT;

			[Token(Token = "0x4001D12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _TileMaxOffs;

			[Token(Token = "0x4001D13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _TileMaxLoop;

			[Token(Token = "0x4001D14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _TileVRT;

			[Token(Token = "0x4001D15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal static readonly int _NeighborMaxTex;

			[Token(Token = "0x4001D16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly int _LoopCount;

			[Token(Token = "0x4001D17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal static readonly int _TempRT;

			[Token(Token = "0x4001D18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly int _History1LumaTex;

			[Token(Token = "0x4001D19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal static readonly int _History2LumaTex;

			[Token(Token = "0x4001D1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly int _History3LumaTex;

			[Token(Token = "0x4001D1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal static readonly int _History4LumaTex;

			[Token(Token = "0x4001D1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly int _History1ChromaTex;

			[Token(Token = "0x4001D1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal static readonly int _History2ChromaTex;

			[Token(Token = "0x4001D1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal static readonly int _History3ChromaTex;

			[Token(Token = "0x4001D1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			internal static readonly int _History4ChromaTex;

			[Token(Token = "0x4001D20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal static readonly int _History1Weight;

			[Token(Token = "0x4001D21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			internal static readonly int _History2Weight;

			[Token(Token = "0x4001D22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal static readonly int _History3Weight;

			[Token(Token = "0x4001D23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			internal static readonly int _History4Weight;
		}

		[Token(Token = "0x2000372")]
		private enum Pass
		{
			[Token(Token = "0x4001D25")]
			VelocitySetup,
			[Token(Token = "0x4001D26")]
			TileMax1,
			[Token(Token = "0x4001D27")]
			TileMax2,
			[Token(Token = "0x4001D28")]
			TileMaxV,
			[Token(Token = "0x4001D29")]
			NeighborMax,
			[Token(Token = "0x4001D2A")]
			Reconstruction,
			[Token(Token = "0x4001D2B")]
			FrameCompression,
			[Token(Token = "0x4001D2C")]
			FrameBlendingChroma,
			[Token(Token = "0x4001D2D")]
			FrameBlendingRaw
		}

		[Token(Token = "0x2000373")]
		public class ReconstructionFilter
		{
			[Token(Token = "0x4001D2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private RenderTextureFormat m_VectorRTFormat;

			[Token(Token = "0x4001D2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private RenderTextureFormat m_PackedRTFormat;

			[Token(Token = "0x60014BE")]
			[Address(RVA = "0x157A544", Offset = "0x157A544", VA = "0x157A544")]
			public ReconstructionFilter()
			{
			}

			[Token(Token = "0x60014BF")]
			[Address(RVA = "0x157A588", Offset = "0x157A588", VA = "0x157A588")]
			private void CheckTextureFormatSupport()
			{
			}

			[Token(Token = "0x60014C0")]
			[Address(RVA = "0x157A5B8", Offset = "0x157A5B8", VA = "0x157A5B8")]
			public bool IsSupported()
			{
				return default(bool);
			}

			[Token(Token = "0x60014C1")]
			[Address(RVA = "0x157A5C0", Offset = "0x157A5C0", VA = "0x157A5C0")]
			public void ProcessImage(PostProcessingContext context, CommandBuffer cb, MotionBlurModel.Settings settings, RenderTargetIdentifier source, RenderTargetIdentifier destination, Material material)
			{
			}
		}

		[Token(Token = "0x2000374")]
		public class FrameBlendingFilter
		{
			[Token(Token = "0x2000375")]
			private struct Frame
			{
				[Token(Token = "0x4001D34")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public RenderTexture lumaTexture;

				[Token(Token = "0x4001D35")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public RenderTexture chromaTexture;

				[Token(Token = "0x4001D36")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private float m_Time;

				[Token(Token = "0x4001D37")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private RenderTargetIdentifier[] m_MRT;

				[Token(Token = "0x60014C9")]
				[Address(RVA = "0x1704D1C", Offset = "0x1704D1C", VA = "0x1704D1C")]
				public float CalculateWeight(float strength, float currentTime)
				{
					return default(float);
				}

				[Token(Token = "0x60014CA")]
				[Address(RVA = "0x1704D98", Offset = "0x1704D98", VA = "0x1704D98")]
				public void Release()
				{
				}

				[Token(Token = "0x60014CB")]
				[Address(RVA = "0x1704E7C", Offset = "0x1704E7C", VA = "0x1704E7C")]
				public void MakeRecord(CommandBuffer cb, RenderTargetIdentifier source, int width, int height, Material material)
				{
				}

				[Token(Token = "0x60014CC")]
				[Address(RVA = "0x1705160", Offset = "0x1705160", VA = "0x1705160")]
				public void MakeRecordRaw(CommandBuffer cb, RenderTargetIdentifier source, int width, int height, RenderTextureFormat format)
				{
				}
			}

			[Token(Token = "0x4001D30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private bool m_UseCompression;

			[Token(Token = "0x4001D31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private RenderTextureFormat m_RawTextureFormat;

			[Token(Token = "0x4001D32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Frame[] m_FrameList;

			[Token(Token = "0x4001D33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int m_LastFrameCount;

			[Token(Token = "0x60014C2")]
			[Address(RVA = "0x1579C78", Offset = "0x1579C78", VA = "0x1579C78")]
			public FrameBlendingFilter()
			{
			}

			[Token(Token = "0x60014C3")]
			[Address(RVA = "0x1579E0C", Offset = "0x1579E0C", VA = "0x1579E0C")]
			public void Dispose()
			{
			}

			[Token(Token = "0x60014C4")]
			[Address(RVA = "0x1579E98", Offset = "0x1579E98", VA = "0x1579E98")]
			public void PushFrame(CommandBuffer cb, RenderTargetIdentifier source, int width, int height, Material material)
			{
			}

			[Token(Token = "0x60014C5")]
			[Address(RVA = "0x1579FD4", Offset = "0x1579FD4", VA = "0x1579FD4")]
			public void BlendFrames(CommandBuffer cb, float strength, RenderTargetIdentifier source, RenderTargetIdentifier destination, Material material)
			{
			}

			[Token(Token = "0x60014C6")]
			[Address(RVA = "0x1579CFC", Offset = "0x1579CFC", VA = "0x1579CFC")]
			private static bool CheckSupportCompression()
			{
				return default(bool);
			}

			[Token(Token = "0x60014C7")]
			[Address(RVA = "0x1579D34", Offset = "0x1579D34", VA = "0x1579D34")]
			private static RenderTextureFormat GetPreferredRenderTextureFormat()
			{
				return default(RenderTextureFormat);
			}

			[Token(Token = "0x60014C8")]
			[Address(RVA = "0x157A4CC", Offset = "0x157A4CC", VA = "0x157A4CC")]
			private Frame GetFrameRelative(int offset)
			{
				return default(Frame);
			}
		}

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ReconstructionFilter m_ReconstructionFilter;

		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FrameBlendingFilter m_FrameBlendingFilter;

		[Token(Token = "0x4001D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_FirstFrame;

		[Token(Token = "0x17000260")]
		public ReconstructionFilter reconstructionFilter
		{
			[Token(Token = "0x60014B2")]
			[Address(RVA = "0x15A82C4", Offset = "0x15A82C4", VA = "0x15A82C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000261")]
		public FrameBlendingFilter frameBlendingFilter
		{
			[Token(Token = "0x60014B3")]
			[Address(RVA = "0x15A8338", Offset = "0x15A8338", VA = "0x15A8338")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000262")]
		public override bool active
		{
			[Token(Token = "0x60014B4")]
			[Address(RVA = "0x15A83AC", Offset = "0x15A83AC", VA = "0x15A83AC", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0x15A846C", Offset = "0x15A846C", VA = "0x15A846C", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0x15A84B0", Offset = "0x15A84B0", VA = "0x15A84B0")]
		public void ResetHistory()
		{
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0x15A84E8", Offset = "0x15A84E8", VA = "0x15A84E8", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0x15A84F0", Offset = "0x15A84F0", VA = "0x15A84F0", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0x15A84F8", Offset = "0x15A84F8", VA = "0x15A84F8", Slot = "6")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0x15A8504", Offset = "0x15A8504", VA = "0x15A8504", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x15A8BCC", Offset = "0x15A8BCC", VA = "0x15A8BCC", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0x15A8BE0", Offset = "0x15A8BE0", VA = "0x15A8BE0")]
		public MotionBlurComponent()
		{
		}
	}
	[Token(Token = "0x2000376")]
	public sealed class ScreenSpaceReflectionComponent : PostProcessingComponentCommandBuffer<ScreenSpaceReflectionModel>
	{
		[Token(Token = "0x2000377")]
		private static class Uniforms
		{
			[Token(Token = "0x4001D3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _RayStepSize;

			[Token(Token = "0x4001D3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _AdditiveReflection;

			[Token(Token = "0x4001D3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _BilateralUpsampling;

			[Token(Token = "0x4001D40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _TreatBackfaceHitAsMiss;

			[Token(Token = "0x4001D41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _AllowBackwardsRays;

			[Token(Token = "0x4001D42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _TraceBehindObjects;

			[Token(Token = "0x4001D43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _MaxSteps;

			[Token(Token = "0x4001D44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _FullResolutionFiltering;

			[Token(Token = "0x4001D45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _HalfResolution;

			[Token(Token = "0x4001D46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _HighlightSuppression;

			[Token(Token = "0x4001D47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _PixelsPerMeterAtOneMeter;

			[Token(Token = "0x4001D48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal static readonly int _ScreenEdgeFading;

			[Token(Token = "0x4001D49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly int _ReflectionBlur;

			[Token(Token = "0x4001D4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal static readonly int _MaxRayTraceDistance;

			[Token(Token = "0x4001D4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly int _FadeDistance;

			[Token(Token = "0x4001D4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal static readonly int _LayerThickness;

			[Token(Token = "0x4001D4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly int _SSRMultiplier;

			[Token(Token = "0x4001D4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal static readonly int _FresnelFade;

			[Token(Token = "0x4001D4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly int _FresnelFadePower;

			[Token(Token = "0x4001D50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal static readonly int _ReflectionBufferSize;

			[Token(Token = "0x4001D51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal static readonly int _ScreenSize;

			[Token(Token = "0x4001D52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			internal static readonly int _InvScreenSize;

			[Token(Token = "0x4001D53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal static readonly int _ProjInfo;

			[Token(Token = "0x4001D54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			internal static readonly int _CameraClipInfo;

			[Token(Token = "0x4001D55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal static readonly int _ProjectToPixelMatrix;

			[Token(Token = "0x4001D56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			internal static readonly int _WorldToCameraMatrix;

			[Token(Token = "0x4001D57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			internal static readonly int _CameraToWorldMatrix;

			[Token(Token = "0x4001D58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			internal static readonly int _Axis;

			[Token(Token = "0x4001D59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			internal static readonly int _CurrentMipLevel;

			[Token(Token = "0x4001D5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			internal static readonly int _NormalAndRoughnessTexture;

			[Token(Token = "0x4001D5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			internal static readonly int _HitPointTexture;

			[Token(Token = "0x4001D5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			internal static readonly int _BlurTexture;

			[Token(Token = "0x4001D5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			internal static readonly int _FilteredReflections;

			[Token(Token = "0x4001D5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			internal static readonly int _FinalReflectionTexture;

			[Token(Token = "0x4001D5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			internal static readonly int _TempTexture;
		}

		[Token(Token = "0x2000378")]
		private enum PassIndex
		{
			[Token(Token = "0x4001D61")]
			RayTraceStep,
			[Token(Token = "0x4001D62")]
			CompositeFinal,
			[Token(Token = "0x4001D63")]
			Blur,
			[Token(Token = "0x4001D64")]
			CompositeSSR,
			[Token(Token = "0x4001D65")]
			MinMipGeneration,
			[Token(Token = "0x4001D66")]
			HitPointToReflections,
			[Token(Token = "0x4001D67")]
			BilateralKeyPack,
			[Token(Token = "0x4001D68")]
			BlitDepthAsCSZ,
			[Token(Token = "0x4001D69")]
			PoissonBlur
		}

		[Token(Token = "0x4001D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool k_HighlightSuppression;

		[Token(Token = "0x4001D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool k_TraceBehindObjects;

		[Token(Token = "0x4001D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		private bool k_TreatBackfaceHitAsMiss;

		[Token(Token = "0x4001D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		private bool k_BilateralUpsample;

		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly int[] m_ReflectionTextures;

		[Token(Token = "0x17000263")]
		public override bool active
		{
			[Token(Token = "0x60014CE")]
			[Address(RVA = "0x14D9560", Offset = "0x14D9560", VA = "0x14D9560", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0x14D9558", Offset = "0x14D9558", VA = "0x14D9558", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0x14D95E0", Offset = "0x14D95E0", VA = "0x14D95E0", Slot = "6")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0x14D973C", Offset = "0x14D973C", VA = "0x14D973C", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0x14D9780", Offset = "0x14D9780", VA = "0x14D9780", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0x14D9788", Offset = "0x14D9788", VA = "0x14D9788", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0x14DA928", Offset = "0x14DA928", VA = "0x14DA928")]
		public ScreenSpaceReflectionComponent()
		{
		}
	}
	[Token(Token = "0x2000379")]
	public sealed class TaaComponent : PostProcessingComponentRenderTexture<AntialiasingModel>
	{
		[Token(Token = "0x200037A")]
		private static class Uniforms
		{
			[Token(Token = "0x4001D71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static int _Jitter;

			[Token(Token = "0x4001D72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static int _SharpenParameters;

			[Token(Token = "0x4001D73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static int _FinalBlendParameters;

			[Token(Token = "0x4001D74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static int _HistoryTex;

			[Token(Token = "0x4001D75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static int _MainTex;
		}

		[Token(Token = "0x4001D6A")]
		private const string k_ShaderString = "Hidden/Post FX/Temporal Anti-aliasing";

		[Token(Token = "0x4001D6B")]
		private const int k_SampleCount = 8;

		[Token(Token = "0x4001D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly RenderBuffer[] m_MRT;

		[Token(Token = "0x4001D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int m_SampleIndex;

		[Token(Token = "0x4001D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool m_ResetHistory;

		[Token(Token = "0x4001D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderTexture m_HistoryTexture;

		[Token(Token = "0x4001D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F674", Offset = "0x57F674")]
		private Vector2 <jitterVector>k__BackingField;

		[Token(Token = "0x17000264")]
		public override bool active
		{
			[Token(Token = "0x60014D5")]
			[Address(RVA = "0x1694DE8", Offset = "0x1694DE8", VA = "0x1694DE8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000265")]
		public Vector2 jitterVector
		{
			[Token(Token = "0x60014D7")]
			[Address(RVA = "0x1694E84", Offset = "0x1694E84", VA = "0x1694E84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58C494", Offset = "0x58C494")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60014D8")]
			[Address(RVA = "0x1694E8C", Offset = "0x1694E8C", VA = "0x1694E8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58C4A4", Offset = "0x58C4A4")]
			private set
			{
			}
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0x1694E7C", Offset = "0x1694E7C", VA = "0x1694E7C", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0x1694E94", Offset = "0x1694E94", VA = "0x1694E94")]
		public void ResetHistory()
		{
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0x1694EA0", Offset = "0x1694EA0", VA = "0x1694EA0")]
		public void SetProjectionMatrix(Func<Vector2, Matrix4x4> jitteredFunc)
		{
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0x169579C", Offset = "0x169579C", VA = "0x169579C")]
		public void Render(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0x1695C60", Offset = "0x1695C60", VA = "0x1695C60")]
		private float GetHaltonValue(int index, int radix)
		{
			return default(float);
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0x1695148", Offset = "0x1695148", VA = "0x1695148")]
		private Vector2 GenerateRandomOffset()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0x16951DC", Offset = "0x16951DC", VA = "0x16951DC")]
		private Matrix4x4 GetPerspectiveProjectionMatrix(Vector2 offset)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x1695648", Offset = "0x1695648", VA = "0x1695648")]
		private Matrix4x4 GetOrthographicProjectionMatrix(Vector2 offset)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0x1695CA4", Offset = "0x1695CA4", VA = "0x1695CA4", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0x1695D4C", Offset = "0x1695D4C", VA = "0x1695D4C")]
		public TaaComponent()
		{
		}
	}
	[Token(Token = "0x200037B")]
	public sealed class UserLutComponent : PostProcessingComponentRenderTexture<UserLutModel>
	{
		[Token(Token = "0x200037C")]
		private static class Uniforms
		{
			[Token(Token = "0x4001D76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _UserLut;

			[Token(Token = "0x4001D77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _UserLut_Params;
		}

		[Token(Token = "0x17000266")]
		public override bool active
		{
			[Token(Token = "0x60014E3")]
			[Address(RVA = "0x15B9A1C", Offset = "0x15B9A1C", VA = "0x15B9A1C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0x15B9B34", Offset = "0x15B9B34", VA = "0x15B9B34", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x15B9CA0", Offset = "0x15B9CA0", VA = "0x15B9CA0")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0x15B9DCC", Offset = "0x15B9DCC", VA = "0x15B9DCC")]
		public UserLutComponent()
		{
		}
	}
	[Token(Token = "0x200037D")]
	public sealed class VignetteComponent : PostProcessingComponentRenderTexture<VignetteModel>
	{
		[Token(Token = "0x200037E")]
		private static class Uniforms
		{
			[Token(Token = "0x4001D78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Vignette_Color;

			[Token(Token = "0x4001D79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Vignette_Center;

			[Token(Token = "0x4001D7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Vignette_Settings;

			[Token(Token = "0x4001D7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _Vignette_Mask;

			[Token(Token = "0x4001D7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _Vignette_Opacity;
		}

		[Token(Token = "0x17000267")]
		public override bool active
		{
			[Token(Token = "0x60014E8")]
			[Address(RVA = "0x15C0020", Offset = "0x15C0020", VA = "0x15C0020", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0x15C008C", Offset = "0x15C008C", VA = "0x15C008C", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0x15C0348", Offset = "0x15C0348", VA = "0x15C0348")]
		public VignetteComponent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200037F")]
	public class AmbientOcclusionModel : PostProcessingModel
	{
		[Token(Token = "0x2000380")]
		public enum SampleCount
		{
			[Token(Token = "0x4001D7F")]
			Lowest = 3,
			[Token(Token = "0x4001D80")]
			Low = 6,
			[Token(Token = "0x4001D81")]
			Medium = 10,
			[Token(Token = "0x4001D82")]
			High = 16
		}

		[Serializable]
		[Token(Token = "0x2000381")]
		public struct Settings
		{
			[Token(Token = "0x4001D83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57F694", Offset = "0x57F694")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57F694", Offset = "0x57F694")]
			public float intensity;

			[Token(Token = "0x4001D84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x57F6E8", Offset = "0x57F6E8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57F6E8", Offset = "0x57F6E8")]
			public float radius;

			[Token(Token = "0x4001D85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57F73C", Offset = "0x57F73C")]
			public SampleCount sampleCount;

			[Token(Token = "0x4001D86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57F774", Offset = "0x57F774")]
			public bool downsampling;

			[Token(Token = "0x4001D87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57F7AC", Offset = "0x57F7AC")]
			public bool forceForwardCompatibility;

			[Token(Token = "0x4001D88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57F7E4", Offset = "0x57F7E4")]
			public bool ambientOnly;

			[Token(Token = "0x4001D89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57F81C", Offset = "0x57F81C")]
			public bool highPrecision;

			[Token(Token = "0x17000269")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x60014F0")]
				[Address(RVA = "0x15DC098", Offset = "0x15DC098", VA = "0x15DC098")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000268")]
		public Settings settings
		{
			[Token(Token = "0x60014EC")]
			[Address(RVA = "0x7E39E4", Offset = "0x7E39E4", VA = "0x7E39E4")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x60014ED")]
			[Address(RVA = "0x7E39F4", Offset = "0x7E39F4", VA = "0x7E39F4")]
			set
			{
			}
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0x7E3A00", Offset = "0x7E3A00", VA = "0x7E3A00", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0x7E3A2C", Offset = "0x7E3A2C", VA = "0x7E3A2C")]
		public AmbientOcclusionModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000382")]
	public class AntialiasingModel : PostProcessingModel
	{
		[Token(Token = "0x2000383")]
		public enum Method
		{
			[Token(Token = "0x4001D8C")]
			Fxaa,
			[Token(Token = "0x4001D8D")]
			Taa
		}

		[Token(Token = "0x2000384")]
		public enum FxaaPreset
		{
			[Token(Token = "0x4001D8F")]
			ExtremePerformance,
			[Token(Token = "0x4001D90")]
			Performance,
			[Token(Token = "0x4001D91")]
			Default,
			[Token(Token = "0x4001D92")]
			Quality,
			[Token(Token = "0x4001D93")]
			ExtremeQuality
		}

		[Serializable]
		[Token(Token = "0x2000385")]
		public struct FxaaQualitySettings
		{
			[Token(Token = "0x4001D94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57F864", Offset = "0x57F864")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57F864", Offset = "0x57F864")]
			public float subpixelAliasingRemovalAmount;

			[Token(Token = "0x4001D95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57F8B8", Offset = "0x57F8B8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57F8B8", Offset = "0x57F8B8")]
			public float edgeDetectionThreshold;

			[Token(Token = "0x4001D96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57F914", Offset = "0x57F914")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57F914", Offset = "0x57F914")]
			public float minimumRequiredLuminance;

			[Token(Token = "0x4001D97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static FxaaQualitySettings[] presets;
		}

		[Serializable]
		[Token(Token = "0x2000386")]
		public struct FxaaConsoleSettings
		{
			[Token(Token = "0x4001D98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57F96C", Offset = "0x57F96C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57F96C", Offset = "0x57F96C")]
			public float subpixelSpreadAmount;

			[Token(Token = "0x4001D99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57F9C4", Offset = "0x57F9C4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57F9C4", Offset = "0x57F9C4")]
			public float edgeSharpnessAmount;

			[Token(Token = "0x4001D9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57FA18", Offset = "0x57FA18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57FA18", Offset = "0x57FA18")]
			public float edgeDetectionThreshold;

			[Token(Token = "0x4001D9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57FA6C", Offset = "0x57FA6C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57FA6C", Offset = "0x57FA6C")]
			public float minimumRequiredLuminance;

			[Token(Token = "0x4001D9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static FxaaConsoleSettings[] presets;
		}

		[Serializable]
		[Token(Token = "0x2000387")]
		public struct FxaaSettings
		{
			[Token(Token = "0x4001D9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FxaaPreset preset;

			[Token(Token = "0x1700026B")]
			public static FxaaSettings defaultSettings
			{
				[Token(Token = "0x60014F7")]
				[Address(RVA = "0x15DC2AC", Offset = "0x15DC2AC", VA = "0x15DC2AC")]
				get
				{
					return default(FxaaSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000388")]
		public struct TaaSettings
		{
			[Token(Token = "0x4001D9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57FAC8", Offset = "0x57FAC8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57FAC8", Offset = "0x57FAC8")]
			public float jitterSpread;

			[Token(Token = "0x4001D9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57FB20", Offset = "0x57FB20")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57FB20", Offset = "0x57FB20")]
			public float sharpen;

			[Token(Token = "0x4001DA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57FB74", Offset = "0x57FB74")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57FB74", Offset = "0x57FB74")]
			public float stationaryBlending;

			[Token(Token = "0x4001DA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57FBCC", Offset = "0x57FBCC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57FBCC", Offset = "0x57FBCC")]
			public float motionBlending;

			[Token(Token = "0x1700026C")]
			public static TaaSettings defaultSettings
			{
				[Token(Token = "0x60014F8")]
				[Address(RVA = "0x15DC2D0", Offset = "0x15DC2D0", VA = "0x15DC2D0")]
				get
				{
					return default(TaaSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000389")]
		public struct Settings
		{
			[Token(Token = "0x4001DA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Method method;

			[Token(Token = "0x4001DA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public FxaaSettings fxaaSettings;

			[Token(Token = "0x4001DA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public TaaSettings taaSettings;

			[Token(Token = "0x1700026D")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x60014F9")]
				[Address(RVA = "0x15DC2B4", Offset = "0x15DC2B4", VA = "0x15DC2B4")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x1700026A")]
		public Settings settings
		{
			[Token(Token = "0x60014F1")]
			[Address(RVA = "0x7E4DF8", Offset = "0x7E4DF8", VA = "0x7E4DF8")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x60014F2")]
			[Address(RVA = "0x7E4E0C", Offset = "0x7E4E0C", VA = "0x7E4E0C")]
			set
			{
			}
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0x7E4E20", Offset = "0x7E4E20", VA = "0x7E4E20", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0x7E4E68", Offset = "0x7E4E68", VA = "0x7E4E68")]
		public AntialiasingModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200038A")]
	public class BloomModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x200038B")]
		public struct BloomSettings
		{
			[Token(Token = "0x4001DA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x57FC34", Offset = "0x57FC34")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57FC34", Offset = "0x57FC34")]
			public float intensity;

			[Token(Token = "0x4001DA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x57FC84", Offset = "0x57FC84")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57FC84", Offset = "0x57FC84")]
			public float threshold;

			[Token(Token = "0x4001DA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57FCD4", Offset = "0x57FCD4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57FCD4", Offset = "0x57FCD4")]
			public float softKnee;

			[Token(Token = "0x4001DA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57FD28", Offset = "0x57FD28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57FD28", Offset = "0x57FD28")]
			public float radius;

			[Token(Token = "0x4001DAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57FD7C", Offset = "0x57FD7C")]
			public bool antiFlicker;

			[Token(Token = "0x1700026F")]
			public float thresholdLinear
			{
				[Token(Token = "0x60014FF")]
				[Address(RVA = "0x15DC530", Offset = "0x15DC530", VA = "0x15DC530")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60014FE")]
				[Address(RVA = "0x15DC508", Offset = "0x15DC508", VA = "0x15DC508")]
				set
				{
				}
			}

			[Token(Token = "0x17000270")]
			public static BloomSettings defaultSettings
			{
				[Token(Token = "0x6001500")]
				[Address(RVA = "0x15DC53C", Offset = "0x15DC53C", VA = "0x15DC53C")]
				get
				{
					return default(BloomSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200038C")]
		public struct LensDirtSettings
		{
			[Token(Token = "0x4001DAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57FDB4", Offset = "0x57FDB4")]
			public Texture texture;

			[Token(Token = "0x4001DAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x57FDEC", Offset = "0x57FDEC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57FDEC", Offset = "0x57FDEC")]
			public float intensity;

			[Token(Token = "0x17000271")]
			public static LensDirtSettings defaultSettings
			{
				[Token(Token = "0x6001501")]
				[Address(RVA = "0x1503C2C", Offset = "0x1503C2C", VA = "0x1503C2C")]
				get
				{
					return default(LensDirtSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200038D")]
		public struct Settings
		{
			[Token(Token = "0x4001DAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public BloomSettings bloom;

			[Token(Token = "0x4001DAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LensDirtSettings lensDirt;

			[Token(Token = "0x17000272")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001502")]
				[Address(RVA = "0x1503C60", Offset = "0x1503C60", VA = "0x1503C60")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x1700026E")]
		public Settings settings
		{
			[Token(Token = "0x60014FA")]
			[Address(RVA = "0x7E81D8", Offset = "0x7E81D8", VA = "0x7E81D8")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x60014FB")]
			[Address(RVA = "0x7E81F0", Offset = "0x7E81F0", VA = "0x7E81F0")]
			set
			{
			}
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0x7E8214", Offset = "0x7E8214", VA = "0x7E8214", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0x7E8270", Offset = "0x7E8270", VA = "0x7E8270")]
		public BloomModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200038E")]
	public class BuiltinDebugViewsModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x200038F")]
		public struct DepthSettings
		{
			[Token(Token = "0x4001DB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57FE4C", Offset = "0x57FE4C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57FE4C", Offset = "0x57FE4C")]
			public float scale;

			[Token(Token = "0x17000275")]
			public static DepthSettings defaultSettings
			{
				[Token(Token = "0x6001509")]
				[Address(RVA = "0x1504624", Offset = "0x1504624", VA = "0x1504624")]
				get
				{
					return default(DepthSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000390")]
		public struct MotionVectorsSettings
		{
			[Token(Token = "0x4001DB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57FEA0", Offset = "0x57FEA0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57FEA0", Offset = "0x57FEA0")]
			public float sourceOpacity;

			[Token(Token = "0x4001DB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57FEF4", Offset = "0x57FEF4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57FEF4", Offset = "0x57FEF4")]
			public float motionImageOpacity;

			[Token(Token = "0x4001DB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x57FF48", Offset = "0x57FF48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57FF48", Offset = "0x57FF48")]
			public float motionImageAmplitude;

			[Token(Token = "0x4001DB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57FF98", Offset = "0x57FF98")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57FF98", Offset = "0x57FF98")]
			public float motionVectorsOpacity;

			[Token(Token = "0x4001DB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57FFEC", Offset = "0x57FFEC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57FFEC", Offset = "0x57FFEC")]
			public int motionVectorsResolution;

			[Token(Token = "0x4001DB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x580044", Offset = "0x580044")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580044", Offset = "0x580044")]
			public float motionVectorsAmplitude;

			[Token(Token = "0x17000276")]
			public static MotionVectorsSettings defaultSettings
			{
				[Token(Token = "0x600150A")]
				[Address(RVA = "0x150462C", Offset = "0x150462C", VA = "0x150462C")]
				get
				{
					return default(MotionVectorsSettings);
				}
			}
		}

		[Token(Token = "0x2000391")]
		public enum Mode
		{
			[Token(Token = "0x4001DB8")]
			None,
			[Token(Token = "0x4001DB9")]
			Depth,
			[Token(Token = "0x4001DBA")]
			Normals,
			[Token(Token = "0x4001DBB")]
			MotionVectors,
			[Token(Token = "0x4001DBC")]
			AmbientOcclusion,
			[Token(Token = "0x4001DBD")]
			EyeAdaptation,
			[Token(Token = "0x4001DBE")]
			FocusPlane,
			[Token(Token = "0x4001DBF")]
			PreGradingLog,
			[Token(Token = "0x4001DC0")]
			LogLut,
			[Token(Token = "0x4001DC1")]
			UserLut
		}

		[Serializable]
		[Token(Token = "0x2000392")]
		public struct Settings
		{
			[Token(Token = "0x4001DC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Mode mode;

			[Token(Token = "0x4001DC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public DepthSettings depth;

			[Token(Token = "0x4001DC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MotionVectorsSettings motionVectors;

			[Token(Token = "0x17000277")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x600150B")]
				[Address(RVA = "0x1504648", Offset = "0x1504648", VA = "0x1504648")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000273")]
		public Settings settings
		{
			[Token(Token = "0x6001503")]
			[Address(RVA = "0x7EB848", Offset = "0x7EB848", VA = "0x7EB848")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6001504")]
			[Address(RVA = "0x7EB858", Offset = "0x7EB858", VA = "0x7EB858")]
			set
			{
			}
		}

		[Token(Token = "0x17000274")]
		public bool willInterrupt
		{
			[Token(Token = "0x6001505")]
			[Address(RVA = "0x7EB868", Offset = "0x7EB868", VA = "0x7EB868")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0x7EB88C", Offset = "0x7EB88C", VA = "0x7EB88C", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0x7E2EC4", Offset = "0x7E2EC4", VA = "0x7E2EC4")]
		public bool IsModeActive(Mode mode)
		{
			return default(bool);
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0x7EB8CC", Offset = "0x7EB8CC", VA = "0x7EB8CC")]
		public BuiltinDebugViewsModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000393")]
	public class ChromaticAberrationModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000394")]
		public struct Settings
		{
			[Token(Token = "0x4001DC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5800A4", Offset = "0x5800A4")]
			public Texture2D spectralTexture;

			[Token(Token = "0x4001DC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5800DC", Offset = "0x5800DC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5800DC", Offset = "0x5800DC")]
			public float intensity;

			[Token(Token = "0x17000279")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001510")]
				[Address(RVA = "0x1504710", Offset = "0x1504710", VA = "0x1504710")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000278")]
		public Settings settings
		{
			[Token(Token = "0x600150C")]
			[Address(RVA = "0x853B68", Offset = "0x853B68", VA = "0x853B68")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x600150D")]
			[Address(RVA = "0x853B74", Offset = "0x853B74", VA = "0x853B74")]
			set
			{
			}
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0x853B84", Offset = "0x853B84", VA = "0x853B84", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0x853BB8", Offset = "0x853BB8", VA = "0x853BB8")]
		public ChromaticAberrationModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000395")]
	public class ColorGradingModel : PostProcessingModel
	{
		[Token(Token = "0x2000396")]
		public enum Tonemapper
		{
			[Token(Token = "0x4001DCC")]
			None,
			[Token(Token = "0x4001DCD")]
			ACES,
			[Token(Token = "0x4001DCE")]
			Neutral
		}

		[Serializable]
		[Token(Token = "0x2000397")]
		public struct TonemappingSettings
		{
			[Token(Token = "0x4001DCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580160", Offset = "0x580160")]
			public Tonemapper tonemapper;

			[Token(Token = "0x4001DD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x580198", Offset = "0x580198")]
			public float neutralBlackIn;

			[Token(Token = "0x4001DD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5801B8", Offset = "0x5801B8")]
			public float neutralWhiteIn;

			[Token(Token = "0x4001DD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5801D0", Offset = "0x5801D0")]
			public float neutralBlackOut;

			[Token(Token = "0x4001DD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5801F0", Offset = "0x5801F0")]
			public float neutralWhiteOut;

			[Token(Token = "0x4001DD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x580208", Offset = "0x580208")]
			public float neutralWhiteLevel;

			[Token(Token = "0x4001DD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x580224", Offset = "0x580224")]
			public float neutralWhiteClip;

			[Token(Token = "0x1700027D")]
			public static TonemappingSettings defaultSettings
			{
				[Token(Token = "0x600151A")]
				[Address(RVA = "0x1505460", Offset = "0x1505460", VA = "0x1505460")]
				get
				{
					return default(TonemappingSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000398")]
		public struct BasicSettings
		{
			[Token(Token = "0x4001DD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58023C", Offset = "0x58023C")]
			public float postExposure;

			[Token(Token = "0x4001DD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x580274", Offset = "0x580274")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580274", Offset = "0x580274")]
			public float temperature;

			[Token(Token = "0x4001DD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5802D0", Offset = "0x5802D0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5802D0", Offset = "0x5802D0")]
			public float tint;

			[Token(Token = "0x4001DD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58032C", Offset = "0x58032C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58032C", Offset = "0x58032C")]
			public float hueShift;

			[Token(Token = "0x4001DDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x580388", Offset = "0x580388")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580388", Offset = "0x580388")]
			public float saturation;

			[Token(Token = "0x4001DDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5803DC", Offset = "0x5803DC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5803DC", Offset = "0x5803DC")]
			public float contrast;

			[Token(Token = "0x1700027E")]
			public static BasicSettings defaultSettings
			{
				[Token(Token = "0x600151B")]
				[Address(RVA = "0x1504B18", Offset = "0x1504B18", VA = "0x1504B18")]
				get
				{
					return default(BasicSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000399")]
		public struct ChannelMixerSettings
		{
			[Token(Token = "0x4001DDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 red;

			[Token(Token = "0x4001DDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 green;

			[Token(Token = "0x4001DDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 blue;

			[Token(Token = "0x4001DDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[HideInInspector]
			public int currentEditingChannel;

			[Token(Token = "0x1700027F")]
			public static ChannelMixerSettings defaultSettings
			{
				[Token(Token = "0x600151C")]
				[Address(RVA = "0x1504B28", Offset = "0x1504B28", VA = "0x1504B28")]
				get
				{
					return default(ChannelMixerSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200039A")]
		public struct LogWheelsSettings
		{
			[Token(Token = "0x4001DE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x580440", Offset = "0x580440")]
			public Color slope;

			[Token(Token = "0x4001DE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x580478", Offset = "0x580478")]
			public Color power;

			[Token(Token = "0x4001DE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x5804B0", Offset = "0x5804B0")]
			public Color offset;

			[Token(Token = "0x17000280")]
			public static LogWheelsSettings defaultSettings
			{
				[Token(Token = "0x600151D")]
				[Address(RVA = "0x1504BB8", Offset = "0x1504BB8", VA = "0x1504BB8")]
				get
				{
					return default(LogWheelsSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200039B")]
		public struct LinearWheelsSettings
		{
			[Token(Token = "0x4001DE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x5804E8", Offset = "0x5804E8")]
			public Color lift;

			[Token(Token = "0x4001DE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x580520", Offset = "0x580520")]
			public Color gamma;

			[Token(Token = "0x4001DE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x580558", Offset = "0x580558")]
			public Color gain;

			[Token(Token = "0x17000281")]
			public static LinearWheelsSettings defaultSettings
			{
				[Token(Token = "0x600151E")]
				[Address(RVA = "0x1504C44", Offset = "0x1504C44", VA = "0x1504C44")]
				get
				{
					return default(LinearWheelsSettings);
				}
			}
		}

		[Token(Token = "0x200039C")]
		public enum ColorWheelMode
		{
			[Token(Token = "0x4001DE7")]
			Linear,
			[Token(Token = "0x4001DE8")]
			Log
		}

		[Serializable]
		[Token(Token = "0x200039D")]
		public struct ColorWheelsSettings
		{
			[Token(Token = "0x4001DE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ColorWheelMode mode;

			[Token(Token = "0x4001DEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[TrackballGroup]
			public LogWheelsSettings log;

			[Token(Token = "0x4001DEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[TrackballGroup]
			public LinearWheelsSettings linear;

			[Token(Token = "0x17000282")]
			public static ColorWheelsSettings defaultSettings
			{
				[Token(Token = "0x600151F")]
				[Address(RVA = "0x1504B40", Offset = "0x1504B40", VA = "0x1504B40")]
				get
				{
					return default(ColorWheelsSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200039E")]
		public struct CurvesSettings
		{
			[Token(Token = "0x4001DEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ColorGradingCurve master;

			[Token(Token = "0x4001DED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ColorGradingCurve red;

			[Token(Token = "0x4001DEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ColorGradingCurve green;

			[Token(Token = "0x4001DEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ColorGradingCurve blue;

			[Token(Token = "0x4001DF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ColorGradingCurve hueVShue;

			[Token(Token = "0x4001DF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ColorGradingCurve hueVSsat;

			[Token(Token = "0x4001DF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ColorGradingCurve satVSsat;

			[Token(Token = "0x4001DF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ColorGradingCurve lumVSsat;

			[Token(Token = "0x4001DF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[HideInInspector]
			public int e_CurrentEditingCurve;

			[Token(Token = "0x4001DF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[HideInInspector]
			public bool e_CurveY;

			[Token(Token = "0x4001DF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
			[HideInInspector]
			public bool e_CurveR;

			[Token(Token = "0x4001DF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
			[HideInInspector]
			public bool e_CurveG;

			[Token(Token = "0x4001DF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
			[HideInInspector]
			public bool e_CurveB;

			[Token(Token = "0x17000283")]
			public static CurvesSettings defaultSettings
			{
				[Token(Token = "0x6001520")]
				[Address(RVA = "0x1504CD0", Offset = "0x1504CD0", VA = "0x1504CD0")]
				get
				{
					return default(CurvesSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200039F")]
		public struct Settings
		{
			[Token(Token = "0x4001DF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TonemappingSettings tonemapping;

			[Token(Token = "0x4001DFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public BasicSettings basic;

			[Token(Token = "0x4001DFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public ChannelMixerSettings channelMixer;

			[Token(Token = "0x4001DFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public ColorWheelsSettings colorWheels;

			[Token(Token = "0x4001DFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public CurvesSettings curves;

			[Token(Token = "0x17000284")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001521")]
				[Address(RVA = "0x1505314", Offset = "0x1505314", VA = "0x1505314")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x4001DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580140", Offset = "0x580140")]
		private bool <isDirty>k__BackingField;

		[Token(Token = "0x4001DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580150", Offset = "0x580150")]
		private RenderTexture <bakedLut>k__BackingField;

		[Token(Token = "0x1700027A")]
		public Settings settings
		{
			[Token(Token = "0x6001511")]
			[Address(RVA = "0x8578D8", Offset = "0x8578D8", VA = "0x8578D8")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6001512")]
			[Address(RVA = "0x8578E8", Offset = "0x8578E8", VA = "0x8578E8")]
			set
			{
			}
		}

		[Token(Token = "0x1700027B")]
		public bool isDirty
		{
			[Token(Token = "0x6001513")]
			[Address(RVA = "0x857928", Offset = "0x857928", VA = "0x857928")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58C4B4", Offset = "0x58C4B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001514")]
			[Address(RVA = "0x857930", Offset = "0x857930", VA = "0x857930")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58C4C4", Offset = "0x58C4C4")]
			internal set
			{
			}
		}

		[Token(Token = "0x1700027C")]
		public RenderTexture bakedLut
		{
			[Token(Token = "0x6001515")]
			[Address(RVA = "0x85793C", Offset = "0x85793C", VA = "0x85793C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58C4D4", Offset = "0x58C4D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001516")]
			[Address(RVA = "0x857944", Offset = "0x857944", VA = "0x857944")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58C4E4", Offset = "0x58C4E4")]
			internal set
			{
			}
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0x857954", Offset = "0x857954", VA = "0x857954", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0x8579C0", Offset = "0x8579C0", VA = "0x8579C0", Slot = "5")]
		public override void OnValidate()
		{
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0x8579CC", Offset = "0x8579CC", VA = "0x8579CC")]
		public ColorGradingModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A0")]
	public class DepthOfFieldModel : PostProcessingModel
	{
		[Token(Token = "0x20003A1")]
		public enum KernelSize
		{
			[Token(Token = "0x4001E00")]
			Small,
			[Token(Token = "0x4001E01")]
			Medium,
			[Token(Token = "0x4001E02")]
			Large,
			[Token(Token = "0x4001E03")]
			VeryLarge
		}

		[Serializable]
		[Token(Token = "0x20003A2")]
		public struct Settings
		{
			[Token(Token = "0x4001E04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x580610", Offset = "0x580610")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580610", Offset = "0x580610")]
			public float focusDistance;

			[Token(Token = "0x4001E05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x580664", Offset = "0x580664")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580664", Offset = "0x580664")]
			public float aperture;

			[Token(Token = "0x4001E06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5806C0", Offset = "0x5806C0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5806C0", Offset = "0x5806C0")]
			public float focalLength;

			[Token(Token = "0x4001E07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580718", Offset = "0x580718")]
			public bool useCameraFov;

			[Token(Token = "0x4001E08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580750", Offset = "0x580750")]
			public KernelSize kernelSize;

			[Token(Token = "0x17000286")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001526")]
				[Address(RVA = "0x15078C0", Offset = "0x15078C0", VA = "0x15078C0")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000285")]
		public Settings settings
		{
			[Token(Token = "0x6001522")]
			[Address(RVA = "0x7CC448", Offset = "0x7CC448", VA = "0x7CC448")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6001523")]
			[Address(RVA = "0x7CC45C", Offset = "0x7CC45C", VA = "0x7CC45C")]
			set
			{
			}
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0x7CC470", Offset = "0x7CC470", VA = "0x7CC470", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0x7CC4B8", Offset = "0x7CC4B8", VA = "0x7CC4B8")]
		public DepthOfFieldModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A3")]
	public class DitheringModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x20003A4")]
		public struct Settings
		{
			[Token(Token = "0x17000288")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x600152B")]
				[Address(RVA = "0x150798C", Offset = "0x150798C", VA = "0x150798C")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000287")]
		public Settings settings
		{
			[Token(Token = "0x6001527")]
			[Address(RVA = "0x7CEEF8", Offset = "0x7CEEF8", VA = "0x7CEEF8")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6001528")]
			[Address(RVA = "0x7CEF00", Offset = "0x7CEF00", VA = "0x7CEF00")]
			set
			{
			}
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0x7CEF08", Offset = "0x7CEF08", VA = "0x7CEF08", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0x7CEF30", Offset = "0x7CEF30", VA = "0x7CEF30")]
		public DitheringModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A5")]
	public class EyeAdaptationModel : PostProcessingModel
	{
		[Token(Token = "0x20003A6")]
		public enum EyeAdaptationType
		{
			[Token(Token = "0x4001E0C")]
			Progressive,
			[Token(Token = "0x4001E0D")]
			Fixed
		}

		[Serializable]
		[Token(Token = "0x20003A7")]
		public struct Settings
		{
			[Token(Token = "0x4001E0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5807A8", Offset = "0x5807A8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5807A8", Offset = "0x5807A8")]
			public float lowPercent;

			[Token(Token = "0x4001E0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x580800", Offset = "0x580800")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580800", Offset = "0x580800")]
			public float highPercent;

			[Token(Token = "0x4001E10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580858", Offset = "0x580858")]
			public float minLuminance;

			[Token(Token = "0x4001E11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580890", Offset = "0x580890")]
			public float maxLuminance;

			[Token(Token = "0x4001E12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x5808C8", Offset = "0x5808C8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5808C8", Offset = "0x5808C8")]
			public float keyValue;

			[Token(Token = "0x4001E13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580918", Offset = "0x580918")]
			public bool dynamicKeyValue;

			[Token(Token = "0x4001E14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580950", Offset = "0x580950")]
			public EyeAdaptationType adaptationType;

			[Token(Token = "0x4001E15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x580988", Offset = "0x580988")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580988", Offset = "0x580988")]
			public float speedUp;

			[Token(Token = "0x4001E16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x5809D8", Offset = "0x5809D8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5809D8", Offset = "0x5809D8")]
			public float speedDown;

			[Token(Token = "0x4001E17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x580A28", Offset = "0x580A28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580A28", Offset = "0x580A28")]
			public int logMin;

			[Token(Token = "0x4001E18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x580A7C", Offset = "0x580A7C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580A7C", Offset = "0x580A7C")]
			public int logMax;

			[Token(Token = "0x1700028A")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001530")]
				[Address(RVA = "0x1510A88", Offset = "0x1510A88", VA = "0x1510A88")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000289")]
		public Settings settings
		{
			[Token(Token = "0x600152C")]
			[Address(RVA = "0x7AC438", Offset = "0x7AC438", VA = "0x7AC438")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x600152D")]
			[Address(RVA = "0x7AC450", Offset = "0x7AC450", VA = "0x7AC450")]
			set
			{
			}
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0x7AC470", Offset = "0x7AC470", VA = "0x7AC470", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0x7AC4C4", Offset = "0x7AC4C4", VA = "0x7AC4C4")]
		public EyeAdaptationModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A8")]
	public class FogModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x20003A9")]
		public struct Settings
		{
			[Token(Token = "0x4001E1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580AE0", Offset = "0x580AE0")]
			public bool excludeSkybox;

			[Token(Token = "0x1700028C")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001535")]
				[Address(RVA = "0x1511710", Offset = "0x1511710", VA = "0x1511710")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x1700028B")]
		public Settings settings
		{
			[Token(Token = "0x6001531")]
			[Address(RVA = "0x7B6060", Offset = "0x7B6060", VA = "0x7B6060")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6001532")]
			[Address(RVA = "0x7B6068", Offset = "0x7B6068", VA = "0x7B6068")]
			set
			{
			}
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0x7B6070", Offset = "0x7B6070", VA = "0x7B6070", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x7B6098", Offset = "0x7B6098", VA = "0x7B6098")]
		public FogModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003AA")]
	public class GrainModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x20003AB")]
		public struct Settings
		{
			[Token(Token = "0x4001E1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580B28", Offset = "0x580B28")]
			public bool colored;

			[Token(Token = "0x4001E1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x580B60", Offset = "0x580B60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580B60", Offset = "0x580B60")]
			public float intensity;

			[Token(Token = "0x4001E1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x580BB4", Offset = "0x580BB4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580BB4", Offset = "0x580BB4")]
			public float size;

			[Token(Token = "0x4001E1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x580C0C", Offset = "0x580C0C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580C0C", Offset = "0x580C0C")]
			public float luminanceContribution;

			[Token(Token = "0x1700028E")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x600153A")]
				[Address(RVA = "0x1512704", Offset = "0x1512704", VA = "0x1512704")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x1700028D")]
		public Settings settings
		{
			[Token(Token = "0x6001536")]
			[Address(RVA = "0x7F8240", Offset = "0x7F8240", VA = "0x7F8240")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6001537")]
			[Address(RVA = "0x7F8250", Offset = "0x7F8250", VA = "0x7F8250")]
			set
			{
			}
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x7F825C", Offset = "0x7F825C", VA = "0x7F825C", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x7F8288", Offset = "0x7F8288", VA = "0x7F8288")]
		public GrainModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003AC")]
	public class MotionBlurModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x20003AD")]
		public struct Settings
		{
			[Token(Token = "0x4001E21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x580C70", Offset = "0x580C70")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580C70", Offset = "0x580C70")]
			public float shutterAngle;

			[Token(Token = "0x4001E22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x580CC8", Offset = "0x580CC8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580CC8", Offset = "0x580CC8")]
			public int sampleCount;

			[Token(Token = "0x4001E23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x580D20", Offset = "0x580D20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580D20", Offset = "0x580D20")]
			public float frameBlending;

			[Token(Token = "0x17000290")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x600153F")]
				[Address(RVA = "0x157B384", Offset = "0x157B384", VA = "0x157B384")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x1700028F")]
		public Settings settings
		{
			[Token(Token = "0x600153B")]
			[Address(RVA = "0x15A8C3C", Offset = "0x15A8C3C", VA = "0x15A8C3C")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x600153C")]
			[Address(RVA = "0x15A8C4C", Offset = "0x15A8C4C", VA = "0x15A8C4C")]
			set
			{
			}
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0x15A8C58", Offset = "0x15A8C58", VA = "0x15A8C58", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0x15A8C84", Offset = "0x15A8C84", VA = "0x15A8C84")]
		public MotionBlurModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003AE")]
	public class ScreenSpaceReflectionModel : PostProcessingModel
	{
		[Token(Token = "0x20003AF")]
		public enum SSRResolution
		{
			[Token(Token = "0x4001E26")]
			High = 0,
			[Token(Token = "0x4001E27")]
			Low = 2
		}

		[Token(Token = "0x20003B0")]
		public enum SSRReflectionBlendType
		{
			[Token(Token = "0x4001E29")]
			PhysicallyBased,
			[Token(Token = "0x4001E2A")]
			Additive
		}

		[Serializable]
		[Token(Token = "0x20003B1")]
		public struct IntensitySettings
		{
			[Token(Token = "0x4001E2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580D84", Offset = "0x580D84")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x580D84", Offset = "0x580D84")]
			public float reflectionMultiplier;

			[Token(Token = "0x4001E2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580DD8", Offset = "0x580DD8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x580DD8", Offset = "0x580DD8")]
			public float fadeDistance;

			[Token(Token = "0x4001E2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580E30", Offset = "0x580E30")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x580E30", Offset = "0x580E30")]
			public float fresnelFade;

			[Token(Token = "0x4001E2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580E84", Offset = "0x580E84")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x580E84", Offset = "0x580E84")]
			public float fresnelFadePower;
		}

		[Serializable]
		[Token(Token = "0x20003B2")]
		public struct ReflectionSettings
		{
			[Token(Token = "0x4001E2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580EDC", Offset = "0x580EDC")]
			public SSRReflectionBlendType blendType;

			[Token(Token = "0x4001E30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580F14", Offset = "0x580F14")]
			public SSRResolution reflectionQuality;

			[Token(Token = "0x4001E31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580F4C", Offset = "0x580F4C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x580F4C", Offset = "0x580F4C")]
			public float maxDistance;

			[Token(Token = "0x4001E32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580FA8", Offset = "0x580FA8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x580FA8", Offset = "0x580FA8")]
			public int iterationCount;

			[Token(Token = "0x4001E33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581000", Offset = "0x581000")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x581000", Offset = "0x581000")]
			public int stepSize;

			[Token(Token = "0x4001E34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581054", Offset = "0x581054")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x581054", Offset = "0x581054")]
			public float widthModifier;

			[Token(Token = "0x4001E35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5810AC", Offset = "0x5810AC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5810AC", Offset = "0x5810AC")]
			public float reflectionBlur;

			[Token(Token = "0x4001E36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581104", Offset = "0x581104")]
			public bool reflectBackfaces;
		}

		[Serializable]
		[Token(Token = "0x20003B3")]
		public struct ScreenEdgeMask
		{
			[Token(Token = "0x4001E37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58113C", Offset = "0x58113C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58113C", Offset = "0x58113C")]
			public float intensity;
		}

		[Serializable]
		[Token(Token = "0x20003B4")]
		public struct Settings
		{
			[Token(Token = "0x4001E38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectionSettings reflection;

			[Token(Token = "0x4001E39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IntensitySettings intensity;

			[Token(Token = "0x4001E3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ScreenEdgeMask screenEdgeMask;

			[Token(Token = "0x17000292")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001544")]
				[Address(RVA = "0x1580FB4", Offset = "0x1580FB4", VA = "0x1580FB4")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000291")]
		public Settings settings
		{
			[Token(Token = "0x6001540")]
			[Address(RVA = "0x14DA9B8", Offset = "0x14DA9B8", VA = "0x14DA9B8")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6001541")]
			[Address(RVA = "0x14DA9D8", Offset = "0x14DA9D8", VA = "0x14DA9D8")]
			set
			{
			}
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0x14DA9F8", Offset = "0x14DA9F8", VA = "0x14DA9F8", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0x14DAA54", Offset = "0x14DAA54", VA = "0x14DAA54")]
		public ScreenSpaceReflectionModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003B5")]
	public class UserLutModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x20003B6")]
		public struct Settings
		{
			[Token(Token = "0x4001E3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5811A0", Offset = "0x5811A0")]
			public Texture2D lut;

			[Token(Token = "0x4001E3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5811D8", Offset = "0x5811D8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5811D8", Offset = "0x5811D8")]
			public float contribution;

			[Token(Token = "0x17000294")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001549")]
				[Address(RVA = "0x17030FC", Offset = "0x17030FC", VA = "0x17030FC")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000293")]
		public Settings settings
		{
			[Token(Token = "0x6001545")]
			[Address(RVA = "0x15B9E20", Offset = "0x15B9E20", VA = "0x15B9E20")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6001546")]
			[Address(RVA = "0x15B9E2C", Offset = "0x15B9E2C", VA = "0x15B9E2C")]
			set
			{
			}
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0x15B9E3C", Offset = "0x15B9E3C", VA = "0x15B9E3C", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0x15B9E70", Offset = "0x15B9E70", VA = "0x15B9E70")]
		public UserLutModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003B7")]
	public class VignetteModel : PostProcessingModel
	{
		[Token(Token = "0x20003B8")]
		public enum Mode
		{
			[Token(Token = "0x4001E40")]
			Classic,
			[Token(Token = "0x4001E41")]
			Masked
		}

		[Serializable]
		[Token(Token = "0x20003B9")]
		public struct Settings
		{
			[Token(Token = "0x4001E42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58123C", Offset = "0x58123C")]
			public Mode mode;

			[Token(Token = "0x4001E43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x581274", Offset = "0x581274")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581274", Offset = "0x581274")]
			public Color color;

			[Token(Token = "0x4001E44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5812C4", Offset = "0x5812C4")]
			public Vector2 center;

			[Token(Token = "0x4001E45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5812FC", Offset = "0x5812FC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5812FC", Offset = "0x5812FC")]
			public float intensity;

			[Token(Token = "0x4001E46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x581350", Offset = "0x581350")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581350", Offset = "0x581350")]
			public float smoothness;

			[Token(Token = "0x4001E47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5813A8", Offset = "0x5813A8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5813A8", Offset = "0x5813A8")]
			public float roundness;

			[Token(Token = "0x4001E48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5813FC", Offset = "0x5813FC")]
			public Texture mask;

			[Token(Token = "0x4001E49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x581434", Offset = "0x581434")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581434", Offset = "0x581434")]
			public float opacity;

			[Token(Token = "0x4001E4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581488", Offset = "0x581488")]
			public bool rounded;

			[Token(Token = "0x17000296")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x600154E")]
				[Address(RVA = "0x1703F40", Offset = "0x1703F40", VA = "0x1703F40")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000295")]
		public Settings settings
		{
			[Token(Token = "0x600154A")]
			[Address(RVA = "0x15C039C", Offset = "0x15C039C", VA = "0x15C039C")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x600154B")]
			[Address(RVA = "0x15C03BC", Offset = "0x15C03BC", VA = "0x15C03BC")]
			set
			{
			}
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0x15C03E8", Offset = "0x15C03E8", VA = "0x15C03E8", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0x15C0450", Offset = "0x15C0450", VA = "0x15C0450")]
		public VignetteModel()
		{
		}
	}
	[Token(Token = "0x20003BA")]
	[ImageEffectAllowedInSceneView]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x579178", Offset = "0x579178")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x579178", Offset = "0x579178")]
	[DisallowMultipleComponent]
	public class PostProcessingBehaviour : MonoBehaviour
	{
		[Token(Token = "0x4001E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PostProcessingProfile profile;

		[Token(Token = "0x4001E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Func<Vector2, Matrix4x4> jitteredMatrixFunc;

		[Token(Token = "0x4001E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<Type, KeyValuePair<CameraEvent, CommandBuffer>> m_CommandBuffers;

		[Token(Token = "0x4001E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<PostProcessingComponentBase> m_Components;

		[Token(Token = "0x4001E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<PostProcessingComponentBase, bool> m_ComponentStates;

		[Token(Token = "0x4001E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MaterialFactory m_MaterialFactory;

		[Token(Token = "0x4001E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTextureFactory m_RenderTextureFactory;

		[Token(Token = "0x4001E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PostProcessingContext m_Context;

		[Token(Token = "0x4001E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Camera m_Camera;

		[Token(Token = "0x4001E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PostProcessingProfile m_PreviousProfile;

		[Token(Token = "0x4001E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_RenderingInSceneView;

		[Token(Token = "0x4001E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private BuiltinDebugViewsComponent m_DebugViews;

		[Token(Token = "0x4001E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private AmbientOcclusionComponent m_AmbientOcclusion;

		[Token(Token = "0x4001E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ScreenSpaceReflectionComponent m_ScreenSpaceReflection;

		[Token(Token = "0x4001E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private FogComponent m_FogComponent;

		[Token(Token = "0x4001E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private MotionBlurComponent m_MotionBlur;

		[Token(Token = "0x4001E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TaaComponent m_Taa;

		[Token(Token = "0x4001E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private EyeAdaptationComponent m_EyeAdaptation;

		[Token(Token = "0x4001E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private DepthOfFieldComponent m_DepthOfField;

		[Token(Token = "0x4001E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private BloomComponent m_Bloom;

		[Token(Token = "0x4001E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ChromaticAberrationComponent m_ChromaticAberration;

		[Token(Token = "0x4001E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ColorGradingComponent m_ColorGrading;

		[Token(Token = "0x4001E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private UserLutComponent m_UserLut;

		[Token(Token = "0x4001E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private GrainComponent m_Grain;

		[Token(Token = "0x4001E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private VignetteComponent m_Vignette;

		[Token(Token = "0x4001E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private DitheringComponent m_Dithering;

		[Token(Token = "0x4001E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private FxaaComponent m_Fxaa;

		[Token(Token = "0x4001E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private List<PostProcessingComponentBase> m_ComponentsToEnable;

		[Token(Token = "0x4001E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private List<PostProcessingComponentBase> m_ComponentsToDisable;

		[Token(Token = "0x600154F")]
		[Address(RVA = "0x154D5C8", Offset = "0x154D5C8", VA = "0x154D5C8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0x154DEC8", Offset = "0x154DEC8", VA = "0x154DEC8")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0x154E8EC", Offset = "0x154E8EC", VA = "0x154E8EC")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0x154EA30", Offset = "0x154EA30", VA = "0x154EA30")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0x154EB40", Offset = "0x154EB40", VA = "0x154EB40")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0x154F118", Offset = "0x154F118", VA = "0x154F118")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0x154F2E0", Offset = "0x154F2E0", VA = "0x154F2E0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0x154F52C", Offset = "0x154F52C", VA = "0x154F52C")]
		public void ResetTemporalEffects()
		{
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0x154E5C8", Offset = "0x154E5C8", VA = "0x154E5C8")]
		private void CheckObservers()
		{
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0x154E488", Offset = "0x154E488", VA = "0x154E488")]
		private void DisableComponents()
		{
		}

		[Token(Token = "0x6001559")]
		private CommandBuffer AddCommandBuffer<T>(CameraEvent evt, string name) where T : PostProcessingModel
		{
			return null;
		}

		[Token(Token = "0x600155A")]
		private void RemoveCommandBuffer<T>() where T : PostProcessingModel
		{
		}

		[Token(Token = "0x600155B")]
		private CommandBuffer GetCommandBuffer<T>(CameraEvent evt, string name) where T : PostProcessingModel
		{
			return null;
		}

		[Token(Token = "0x600155C")]
		private void TryExecuteCommandBuffer<T>(PostProcessingComponentCommandBuffer<T> component) where T : PostProcessingModel
		{
		}

		[Token(Token = "0x600155D")]
		private bool TryPrepareUberImageEffect<T>(PostProcessingComponentRenderTexture<T> component, Material material) where T : PostProcessingModel
		{
			return default(bool);
		}

		[Token(Token = "0x600155E")]
		private T AddComponent<T>(T component) where T : PostProcessingComponentBase
		{
			return null;
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0x154F578", Offset = "0x154F578", VA = "0x154F578")]
		public PostProcessingBehaviour()
		{
		}
	}
	[Token(Token = "0x20003BB")]
	public abstract class PostProcessingComponentBase
	{
		[Token(Token = "0x4001E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PostProcessingContext context;

		[Token(Token = "0x17000297")]
		public abstract bool active
		{
			[Token(Token = "0x6001561")]
			get;
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0x154F628", Offset = "0x154F628", VA = "0x154F628", Slot = "4")]
		public virtual DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0x154F630", Offset = "0x154F630", VA = "0x154F630", Slot = "6")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0x154F634", Offset = "0x154F634", VA = "0x154F634", Slot = "7")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001564")]
		public abstract PostProcessingModel GetModel();

		[Token(Token = "0x6001565")]
		[Address(RVA = "0x154F638", Offset = "0x154F638", VA = "0x154F638")]
		protected PostProcessingComponentBase()
		{
		}
	}
	[Token(Token = "0x20003BC")]
	public abstract class PostProcessingComponent<T> : PostProcessingComponentBase where T : PostProcessingModel
	{
		[Token(Token = "0x4001E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5814C0", Offset = "0x5814C0")]
		private T <model>k__BackingField;

		[Token(Token = "0x17000298")]
		public T model
		{
			[Token(Token = "0x6001566")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58C4F4", Offset = "0x58C4F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001567")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58C504", Offset = "0x58C504")]
			internal set
			{
			}
		}

		[Token(Token = "0x6001568")]
		public virtual void Init(PostProcessingContext pcontext, T pmodel)
		{
		}

		[Token(Token = "0x6001569")]
		public override PostProcessingModel GetModel()
		{
			return null;
		}

		[Token(Token = "0x600156A")]
		protected PostProcessingComponent()
		{
		}
	}
	[Token(Token = "0x20003BD")]
	public abstract class PostProcessingComponentCommandBuffer<T> : PostProcessingComponent<T> where T : PostProcessingModel
	{
		[Token(Token = "0x600156B")]
		public abstract CameraEvent GetCameraEvent();

		[Token(Token = "0x600156C")]
		public abstract string GetName();

		[Token(Token = "0x600156D")]
		public abstract void PopulateCommandBuffer(CommandBuffer cb);

		[Token(Token = "0x600156E")]
		protected PostProcessingComponentCommandBuffer()
		{
		}
	}
	[Token(Token = "0x20003BE")]
	public abstract class PostProcessingComponentRenderTexture<T> : PostProcessingComponent<T> where T : PostProcessingModel
	{
		[Token(Token = "0x600156F")]
		public virtual void Prepare(Material material)
		{
		}

		[Token(Token = "0x6001570")]
		protected PostProcessingComponentRenderTexture()
		{
		}
	}
	[Token(Token = "0x20003BF")]
	public class PostProcessingContext
	{
		[Token(Token = "0x4001E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PostProcessingProfile profile;

		[Token(Token = "0x4001E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera camera;

		[Token(Token = "0x4001E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MaterialFactory materialFactory;

		[Token(Token = "0x4001E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RenderTextureFactory renderTextureFactory;

		[Token(Token = "0x4001E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5814D0", Offset = "0x5814D0")]
		private bool <interrupted>k__BackingField;

		[Token(Token = "0x17000299")]
		public bool interrupted
		{
			[Token(Token = "0x6001571")]
			[Address(RVA = "0x154F640", Offset = "0x154F640", VA = "0x154F640")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58C514", Offset = "0x58C514")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001572")]
			[Address(RVA = "0x154F648", Offset = "0x154F648", VA = "0x154F648")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58C524", Offset = "0x58C524")]
			private set
			{
			}
		}

		[Token(Token = "0x1700029A")]
		public bool isGBufferAvailable
		{
			[Token(Token = "0x6001575")]
			[Address(RVA = "0x154F660", Offset = "0x154F660", VA = "0x154F660")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700029B")]
		public bool isHdr
		{
			[Token(Token = "0x6001576")]
			[Address(RVA = "0x154F68C", Offset = "0x154F68C", VA = "0x154F68C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700029C")]
		public int width
		{
			[Token(Token = "0x6001577")]
			[Address(RVA = "0x154F6AC", Offset = "0x154F6AC", VA = "0x154F6AC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700029D")]
		public int height
		{
			[Token(Token = "0x6001578")]
			[Address(RVA = "0x154F6CC", Offset = "0x154F6CC", VA = "0x154F6CC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700029E")]
		public Rect viewport
		{
			[Token(Token = "0x6001579")]
			[Address(RVA = "0x154F6EC", Offset = "0x154F6EC", VA = "0x154F6EC")]
			get
			{
				return default(Rect);
			}
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0x154F654", Offset = "0x154F654", VA = "0x154F654")]
		public void Interrupt()
		{
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0x154E428", Offset = "0x154E428", VA = "0x154E428")]
		public PostProcessingContext Reset()
		{
			return null;
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0x154DEC0", Offset = "0x154DEC0", VA = "0x154DEC0")]
		public PostProcessingContext()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C0")]
	public abstract class PostProcessingModel
	{
		[Token(Token = "0x4001E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "GetSetAttribute", RVA = "0x5814E0", Offset = "0x5814E0")]
		private bool m_Enabled;

		[Token(Token = "0x1700029F")]
		public bool enabled
		{
			[Token(Token = "0x600157B")]
			[Address(RVA = "0x154F70C", Offset = "0x154F70C", VA = "0x154F70C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600157C")]
			[Address(RVA = "0x154F714", Offset = "0x154F714", VA = "0x154F714")]
			set
			{
			}
		}

		[Token(Token = "0x600157D")]
		public abstract void Reset();

		[Token(Token = "0x600157E")]
		[Address(RVA = "0x154F730", Offset = "0x154F730", VA = "0x154F730", Slot = "5")]
		public virtual void OnValidate()
		{
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0x154F734", Offset = "0x154F734", VA = "0x154F734")]
		protected PostProcessingModel()
		{
		}
	}
	[Token(Token = "0x20003C1")]
	public class PostProcessingProfile : ScriptableObject
	{
		[Token(Token = "0x4001E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BuiltinDebugViewsModel debugViews;

		[Token(Token = "0x4001E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FogModel fog;

		[Token(Token = "0x4001E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AntialiasingModel antialiasing;

		[Token(Token = "0x4001E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AmbientOcclusionModel ambientOcclusion;

		[Token(Token = "0x4001E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ScreenSpaceReflectionModel screenSpaceReflection;

		[Token(Token = "0x4001E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public DepthOfFieldModel depthOfField;

		[Token(Token = "0x4001E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MotionBlurModel motionBlur;

		[Token(Token = "0x4001E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public EyeAdaptationModel eyeAdaptation;

		[Token(Token = "0x4001E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public BloomModel bloom;

		[Token(Token = "0x4001E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ColorGradingModel colorGrading;

		[Token(Token = "0x4001E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UserLutModel userLut;

		[Token(Token = "0x4001E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ChromaticAberrationModel chromaticAberration;

		[Token(Token = "0x4001E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GrainModel grain;

		[Token(Token = "0x4001E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public VignetteModel vignette;

		[Token(Token = "0x4001E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public DitheringModel dithering;

		[Token(Token = "0x6001580")]
		[Address(RVA = "0x154F73C", Offset = "0x154F73C", VA = "0x154F73C")]
		public PostProcessingProfile()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C2")]
	public sealed class ColorGradingCurve
	{
		[Token(Token = "0x4001E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationCurve curve;

		[Token(Token = "0x4001E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_Loop;

		[Token(Token = "0x4001E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_ZeroValue;

		[Token(Token = "0x4001E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_Range;

		[Token(Token = "0x4001E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AnimationCurve m_InternalLoopingCurve;

		[Token(Token = "0x6001581")]
		[Address(RVA = "0x857860", Offset = "0x857860", VA = "0x857860")]
		public ColorGradingCurve(AnimationCurve curve, float zeroValue, bool loop, Vector2 bounds)
		{
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0x856854", Offset = "0x856854", VA = "0x856854")]
		public void Cache()
		{
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0x856A3C", Offset = "0x856A3C", VA = "0x856A3C")]
		public float Evaluate(float t)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20003C3")]
	public static class GraphicsUtils
	{
		[Token(Token = "0x4001E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Texture2D s_WhiteTexture;

		[Token(Token = "0x4001E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Mesh s_Quad;

		[Token(Token = "0x170002A0")]
		public static bool isLinearColorSpace
		{
			[Token(Token = "0x6001584")]
			[Address(RVA = "0x7F85D8", Offset = "0x7F85D8", VA = "0x7F85D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A1")]
		public static bool supportsDX11
		{
			[Token(Token = "0x6001585")]
			[Address(RVA = "0x7F85F8", Offset = "0x7F85F8", VA = "0x7F85F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A2")]
		public static Texture2D whiteTexture
		{
			[Token(Token = "0x6001586")]
			[Address(RVA = "0x7F8628", Offset = "0x7F8628", VA = "0x7F8628")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A3")]
		public static Mesh quad
		{
			[Token(Token = "0x6001587")]
			[Address(RVA = "0x7F8784", Offset = "0x7F8784", VA = "0x7F8784")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0x7F8A10", Offset = "0x7F8A10", VA = "0x7F8A10")]
		public static void Blit(Material material, int pass)
		{
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0x7F8B14", Offset = "0x7F8B14", VA = "0x7F8B14")]
		public static void ClearAndBlit(Texture source, RenderTexture destination, Material material, int pass, bool clearColor = true, bool clearDepth = false)
		{
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0x7F7D54", Offset = "0x7F7D54", VA = "0x7F7D54")]
		public static void Destroy(Object obj)
		{
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0x7F8CAC", Offset = "0x7F8CAC", VA = "0x7F8CAC")]
		public static void Dispose()
		{
		}
	}
	[Token(Token = "0x20003C4")]
	public sealed class MaterialFactory : IDisposable
	{
		[Token(Token = "0x4001E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, Material> m_Materials;

		[Token(Token = "0x600158C")]
		[Address(RVA = "0x15A16F0", Offset = "0x15A16F0", VA = "0x15A16F0")]
		public MaterialFactory()
		{
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0x15A177C", Offset = "0x15A177C", VA = "0x15A177C")]
		public Material Get(string shaderName)
		{
			return null;
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0x15A1984", Offset = "0x15A1984", VA = "0x15A1984", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x20003C5")]
	public sealed class RenderTextureFactory : IDisposable
	{
		[Token(Token = "0x4001E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HashSet<RenderTexture> m_TemporaryRTs;

		[Token(Token = "0x600158F")]
		[Address(RVA = "0x1532BE8", Offset = "0x1532BE8", VA = "0x1532BE8")]
		public RenderTextureFactory()
		{
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0x1532C74", Offset = "0x1532C74", VA = "0x1532C74")]
		public RenderTexture Get(RenderTexture baseRenderTexture)
		{
			return null;
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0x1532D90", Offset = "0x1532D90", VA = "0x1532D90")]
		public RenderTexture Get(int width, int height, int depthBuffer = 0, RenderTextureFormat format = RenderTextureFormat.ARGBHalf, RenderTextureReadWrite rw = RenderTextureReadWrite.Default, FilterMode filterMode = FilterMode.Bilinear, TextureWrapMode wrapMode = TextureWrapMode.Clamp, string name = "FactoryTempTexture")
		{
			return null;
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0x1532E80", Offset = "0x1532E80", VA = "0x1532E80")]
		public void Release(RenderTexture rt)
		{
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0x1532FC0", Offset = "0x1532FC0", VA = "0x1532FC0")]
		public void ReleaseAll()
		{
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0x1533090", Offset = "0x1533090", VA = "0x1533090", Slot = "4")]
		public void Dispose()
		{
		}
	}
}
namespace PlayWay.Water
{
	[Token(Token = "0x20003C6")]
	public class FloatEqualityComparer : IEqualityComparer<float>
	{
		[Token(Token = "0x4001E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FloatEqualityComparer defaultInstance;

		[Token(Token = "0x170002A4")]
		public static FloatEqualityComparer Default
		{
			[Token(Token = "0x6001595")]
			[Address(RVA = "0x7B3A84", Offset = "0x7B3A84", VA = "0x7B3A84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0x7B3B04", Offset = "0x7B3B04", VA = "0x7B3B04", Slot = "4")]
		public bool Equals(float x, float y)
		{
			return default(bool);
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0x7B3B10", Offset = "0x7B3B10", VA = "0x7B3B10", Slot = "5")]
		public int GetHashCode(float obj)
		{
			return default(int);
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0x7B3AFC", Offset = "0x7B3AFC", VA = "0x7B3AFC")]
		public FloatEqualityComparer()
		{
		}
	}
	[Token(Token = "0x20003C7")]
	public sealed class Heap<T> : IEnumerable<T>, IEnumerable where T : IComparable<T>
	{
		[Token(Token = "0x4001E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T[] elements;

		[Token(Token = "0x4001E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int numElements;

		[Token(Token = "0x170002A5")]
		public int Count
		{
			[Token(Token = "0x600159B")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002A6")]
		public T Max
		{
			[Token(Token = "0x600159C")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x6001599")]
		public Heap()
		{
		}

		[Token(Token = "0x600159A")]
		public Heap(int capacity)
		{
		}

		[Token(Token = "0x600159D")]
		public T ExtractMax()
		{
			return (T)null;
		}

		[Token(Token = "0x600159E")]
		public void Insert(T element)
		{
		}

		[Token(Token = "0x600159F")]
		public void Remove(T element)
		{
		}

		[Token(Token = "0x60015A0")]
		public void Clear()
		{
		}

		[Token(Token = "0x60015A1")]
		public T[] GetUnderlyingArray()
		{
			return null;
		}

		[Token(Token = "0x60015A2")]
		private void BubbleUp(int index, T element)
		{
		}

		[Token(Token = "0x60015A3")]
		private void BubbleDown(int index)
		{
		}

		[Token(Token = "0x60015A4")]
		public void Resize(int len)
		{
		}

		[Token(Token = "0x60015A5")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60015A6")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x20003C8")]
	public class Int32EqualityComparer : IEqualityComparer<int>
	{
		[Token(Token = "0x4001E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Int32EqualityComparer defaultInstance;

		[Token(Token = "0x170002A7")]
		public static Int32EqualityComparer Default
		{
			[Token(Token = "0x60015A7")]
			[Address(RVA = "0x1567780", Offset = "0x1567780", VA = "0x1567780")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0x1567800", Offset = "0x1567800", VA = "0x1567800", Slot = "4")]
		public bool Equals(int x, int y)
		{
			return default(bool);
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0x156780C", Offset = "0x156780C", VA = "0x156780C", Slot = "5")]
		public int GetHashCode(int obj)
		{
			return default(int);
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0x15677F8", Offset = "0x15677F8", VA = "0x15677F8")]
		public Int32EqualityComparer()
		{
		}
	}
	[Token(Token = "0x20003C9")]
	public interface IPoint2D
	{
		[Token(Token = "0x170002A8")]
		Vector2 Position
		{
			[Token(Token = "0x60015AB")]
			get;
		}

		[Token(Token = "0x60015AC")]
		void Destroy();
	}
	[Token(Token = "0x20003CA")]
	public class Quadtree<T> where T : class, IPoint2D
	{
		[Token(Token = "0x4001E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Rect rect;

		[Token(Token = "0x4001E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Rect marginRect;

		[Token(Token = "0x4001E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Vector2 center;

		[Token(Token = "0x4001E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Quadtree<T> a;

		[Token(Token = "0x4001E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Quadtree<T> b;

		[Token(Token = "0x4001E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Quadtree<T> c;

		[Token(Token = "0x4001E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Quadtree<T> d;

		[Token(Token = "0x4001E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Quadtree<T> root;

		[Token(Token = "0x4001E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected T[] elements;

		[Token(Token = "0x4001E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected int numElements;

		[Token(Token = "0x4001E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int freeSpace;

		[Token(Token = "0x4001E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int lastIndex;

		[Token(Token = "0x4001E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int depth;

		[Token(Token = "0x170002A9")]
		public Rect Rect
		{
			[Token(Token = "0x60015AF")]
			get
			{
				return default(Rect);
			}
			[Token(Token = "0x60015B0")]
			set
			{
			}
		}

		[Token(Token = "0x170002AA")]
		public int Count
		{
			[Token(Token = "0x60015B1")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002AB")]
		public int FreeSpace
		{
			[Token(Token = "0x60015B2")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60015AD")]
		public Quadtree(Rect rect, int maxElementsPerNode, int maxTotalElements)
		{
		}

		[Token(Token = "0x60015AE")]
		private Quadtree(Quadtree<T> root, Rect rect, int maxElementsPerNode)
		{
		}

		[Token(Token = "0x60015B3")]
		public bool AddElement(T element)
		{
			return default(bool);
		}

		[Token(Token = "0x60015B4")]
		private bool AddElementInternal(T element)
		{
			return default(bool);
		}

		[Token(Token = "0x60015B5")]
		public void UpdateElements(Quadtree<T> root)
		{
		}

		[Token(Token = "0x60015B6")]
		public void ExpandToContain(Vector2 point)
		{
		}

		[Token(Token = "0x60015B7")]
		public virtual void Destroy()
		{
		}

		[Token(Token = "0x60015B8")]
		protected virtual void AddElementAt(T element, int index)
		{
		}

		[Token(Token = "0x60015B9")]
		protected virtual void RemoveElementAt(int index)
		{
		}

		[Token(Token = "0x60015BA")]
		protected virtual void SpawnChildNodes()
		{
		}
	}
	[Token(Token = "0x20003CB")]
	public class UInt64EqualityComparer : IEqualityComparer<ulong>
	{
		[Token(Token = "0x4001E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UInt64EqualityComparer defaultInstance;

		[Token(Token = "0x170002AC")]
		public static UInt64EqualityComparer Default
		{
			[Token(Token = "0x60015BB")]
			[Address(RVA = "0x15B4448", Offset = "0x15B4448", VA = "0x15B4448")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x15B44C8", Offset = "0x15B44C8", VA = "0x15B44C8", Slot = "4")]
		public bool Equals(ulong x, ulong y)
		{
			return default(bool);
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0x15B44D4", Offset = "0x15B44D4", VA = "0x15B44D4", Slot = "5")]
		public int GetHashCode(ulong obj)
		{
			return default(int);
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0x15B44C0", Offset = "0x15B44C0", VA = "0x15B44C0")]
		public UInt64EqualityComparer()
		{
		}
	}
	[Token(Token = "0x20003CC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x579238", Offset = "0x579238")]
	public sealed class DynamicWaterDeprecated : MonoBehaviour
	{
		[Token(Token = "0x4001E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int antialiasing;

		[Token(Token = "0x4001E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LayerMask interactionMask;

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0x7D47D0", Offset = "0x7D47D0", VA = "0x7D47D0")]
		public DynamicWaterDeprecated()
		{
		}
	}
	[Token(Token = "0x20003CD")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x579270", Offset = "0x579270")]
	public sealed class WaterFoamDeprecated : MonoBehaviour
	{
		[Token(Token = "0x4001E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float supersampling;

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0x16E162C", Offset = "0x16E162C", VA = "0x16E162C")]
		public WaterFoamDeprecated()
		{
		}
	}
	[Token(Token = "0x20003CE")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5792A8", Offset = "0x5792A8")]
	public sealed class WaterPlanarReflectionDeprecated : MonoBehaviour
	{
		[Token(Token = "0x4001E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera reflectionCamera;

		[Token(Token = "0x4001E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool reflectSkybox;

		[Token(Token = "0x4001E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int downsample;

		[Token(Token = "0x4001EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int retinaDownsample;

		[Token(Token = "0x4001EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LayerMask reflectionMask;

		[Token(Token = "0x4001EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool highQuality;

		[Token(Token = "0x4001EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float clipPlaneOffset;

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0x16EACE8", Offset = "0x16EACE8", VA = "0x16EACE8")]
		public WaterPlanarReflectionDeprecated()
		{
		}
	}
	[Token(Token = "0x20003CF")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5792E0", Offset = "0x5792E0")]
	public sealed class WindWavesDeprecated : MonoBehaviour
	{
		[Token(Token = "0x4001EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform windDirectionPointer;

		[Token(Token = "0x4001EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int resolution;

		[Token(Token = "0x4001EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool highPrecision;

		[Token(Token = "0x4001EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float cpuWaveThreshold;

		[Token(Token = "0x4001EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int cpuMaxWaves;

		[Token(Token = "0x4001EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int cpuFFTPrecisionBoost;

		[Token(Token = "0x4001EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public WindWaves copyFrom;

		[Token(Token = "0x4001EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public WaveSpectrumRenderMode renderMode;

		[Token(Token = "0x4001EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public WindWaves.WindWavesEvent windDirectionChanged;

		[Token(Token = "0x4001EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public WindWaves.WindWavesEvent resolutionChanged;

		[Token(Token = "0x4001EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public WavesRendererFFT waterWavesFFT;

		[Token(Token = "0x4001EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public WavesRendererGerstner waterWavesGerstner;

		[Token(Token = "0x4001EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float mipBias;

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0x15D3BAC", Offset = "0x15D3BAC", VA = "0x15D3BAC")]
		public WindWavesDeprecated()
		{
		}
	}
	[Token(Token = "0x20003D0")]
	public class DynamicWaterCameraData
	{
		[Token(Token = "0x4001EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private RenderTexture dynamicDisplacementMap;

		[Token(Token = "0x4001EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RenderTexture normalMap;

		[Token(Token = "0x4001EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderTexture foamMapA;

		[Token(Token = "0x4001EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RenderTexture foamMapB;

		[Token(Token = "0x4001EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderTexture displacementsMask;

		[Token(Token = "0x4001EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RenderTexture totalDisplacementMap;

		[Token(Token = "0x4001EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RenderTexture debugMap;

		[Token(Token = "0x4001EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool totalDisplacementMapDirty;

		[Token(Token = "0x4001EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private readonly int antialiasing;

		[Token(Token = "0x4001EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly WaterCamera camera;

		[Token(Token = "0x4001EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly DynamicWater dynamicWater;

		[Token(Token = "0x4001EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal int lastFrameUsed;

		[Token(Token = "0x4001EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58155C", Offset = "0x58155C")]
		private bool <Initialization>k__BackingField;

		[Token(Token = "0x170002AD")]
		public bool Initialization
		{
			[Token(Token = "0x60015C4")]
			[Address(RVA = "0x7D4394", Offset = "0x7D4394", VA = "0x7D4394")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58C534", Offset = "0x58C534")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015C5")]
			[Address(RVA = "0x7D439C", Offset = "0x7D439C", VA = "0x7D439C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58C544", Offset = "0x58C544")]
			set
			{
			}
		}

		[Token(Token = "0x170002AE")]
		public RenderTexture DynamicDisplacementMap
		{
			[Token(Token = "0x60015C6")]
			[Address(RVA = "0x7D43A8", Offset = "0x7D43A8", VA = "0x7D43A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AF")]
		public RenderTexture NormalMap
		{
			[Token(Token = "0x60015C7")]
			[Address(RVA = "0x7D43B0", Offset = "0x7D43B0", VA = "0x7D43B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B0")]
		public RenderTexture FoamMap
		{
			[Token(Token = "0x60015C8")]
			[Address(RVA = "0x7D43B8", Offset = "0x7D43B8", VA = "0x7D43B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B1")]
		public RenderTexture FoamMapPrevious
		{
			[Token(Token = "0x60015C9")]
			[Address(RVA = "0x7D43C0", Offset = "0x7D43C0", VA = "0x7D43C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B2")]
		public RenderTexture DisplacementsMask
		{
			[Token(Token = "0x60015CA")]
			[Address(RVA = "0x7D43C8", Offset = "0x7D43C8", VA = "0x7D43C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B3")]
		public WaterCamera Camera
		{
			[Token(Token = "0x60015CB")]
			[Address(RVA = "0x7D43D0", Offset = "0x7D43D0", VA = "0x7D43D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B4")]
		public DynamicWater DynamicWater
		{
			[Token(Token = "0x60015CC")]
			[Address(RVA = "0x7D43D8", Offset = "0x7D43D8", VA = "0x7D43D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0x7D3E30", Offset = "0x7D3E30", VA = "0x7D3E30")]
		public DynamicWaterCameraData(DynamicWater dynamicWater, WaterCamera camera, int antialiasing)
		{
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0x7D33AC", Offset = "0x7D33AC", VA = "0x7D33AC")]
		public RenderTexture GetDebugMap(bool createIfNotExists = false)
		{
			return null;
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0x7D3368", Offset = "0x7D3368", VA = "0x7D3368")]
		public RenderTexture GetTotalDisplacementMap()
		{
			return null;
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0x7D1F14", Offset = "0x7D1F14", VA = "0x7D1F14")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0x7D4548", Offset = "0x7D4548", VA = "0x7D4548")]
		private void DisposeTextures()
		{
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0x7D2918", Offset = "0x7D2918", VA = "0x7D2918")]
		public void ClearOverlays()
		{
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0x7D47CC", Offset = "0x7D47CC", VA = "0x7D47CC")]
		private void Camera_RenderTargetResized(WaterCamera camera)
		{
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0x7D40EC", Offset = "0x7D40EC", VA = "0x7D40EC")]
		private void CreateRenderTargets()
		{
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0x7D43E0", Offset = "0x7D43E0", VA = "0x7D43E0")]
		private static RenderTexture CreateDynamicMap(string name, RenderTextureFormat format, int width, int height, int antialiasing)
		{
			return null;
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0x7D3F30", Offset = "0x7D3F30", VA = "0x7D3F30")]
		public void SwapFoamMaps()
		{
		}
	}
	[Token(Token = "0x20003D1")]
	public sealed class DynamicWaterInteraction : MonoBehaviour, ILocalFoamRenderer
	{
		[Token(Token = "0x20003D2")]
		private struct VertexData
		{
			[Token(Token = "0x4001ED4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 position;

			[Token(Token = "0x4001ED5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 normal;
		}

		[Token(Token = "0x4001EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		private ComputeShader colliderInteractionShader;

		[Token(Token = "0x4001EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[SerializeField]
		private Shader maskDisplayShader;

		[Token(Token = "0x4001EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		[SerializeField]
		private Shader baseShader;

		[Token(Token = "0x4001EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x581614", Offset = "0x581614")]
		[SerializeField]
		private bool foam;

		[Token(Token = "0x4001EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float foamPatternTiling;

		[Token(Token = "0x4001EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float foamRange;

		[Token(Token = "0x4001EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float uniformFoamAmount;

		[Token(Token = "0x4001EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float noisyFoamAmount;

		[Token(Token = "0x4001EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5816A0", Offset = "0x5816A0")]
		[SerializeField]
		private float foamIntensity;

		[Token(Token = "0x4001EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool detectContactArea;

		[Token(Token = "0x4001EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private int foamOcclusionMapResolution;

		[Token(Token = "0x4001EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private MeshFilter[] meshFilters;

		[Token(Token = "0x4001ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x581710", Offset = "0x581710")]
		[SerializeField]
		private bool waves;

		[Token(Token = "0x4001ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private WaveParticlesSystemGPU water;

		[Token(Token = "0x4001ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58176C", Offset = "0x58176C")]
		[SerializeField]
		private float waveEmissionFrequency;

		[Token(Token = "0x4001ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material material;

		[Token(Token = "0x4001ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int occlusionMapHash;

		[Token(Token = "0x4001ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int occlusionMap2Hash;

		[Token(Token = "0x4001ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int occlusionMapProjectionMatrixHash;

		[Token(Token = "0x4001ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private ComputeBuffer colliderVerticesBuffer;

		[Token(Token = "0x4001ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ComputeBuffer objectToWorld;

		[Token(Token = "0x4001ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Matrix4x4[] matrixTemp;

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0x7D480C", Offset = "0x7D480C", VA = "0x7D480C")]
		private void Start()
		{
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0x7D4E38", Offset = "0x7D4E38", VA = "0x7D4E38")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0x7D4EAC", Offset = "0x7D4EAC", VA = "0x7D4EAC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0x7D4F14", Offset = "0x7D4F14", VA = "0x7D4F14")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0x7D4994", Offset = "0x7D4994", VA = "0x7D4994")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0x7D4F7C", Offset = "0x7D4F7C", VA = "0x7D4F7C", Slot = "4")]
		public void RenderLocalFoam(CommandBuffer commandBuffer, DynamicWaterCameraData overlays)
		{
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0x7D4B8C", Offset = "0x7D4B8C", VA = "0x7D4B8C")]
		private void CreateComputeBuffers()
		{
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0x7D59B4", Offset = "0x7D59B4", VA = "0x7D59B4")]
		public DynamicWaterInteraction()
		{
		}
	}
	[Token(Token = "0x20003D3")]
	public class GlobalWaterInteraction : MonoBehaviour, ILocalDisplacementMaskRenderer
	{
		[Token(Token = "0x4001ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		private Shader maskDisplayShader;

		[Token(Token = "0x4001ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Texture2D intensityMask;

		[Token(Token = "0x4001ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Vector2 worldUnitsOffset;

		[Token(Token = "0x4001ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector2 worldUnitsSize;

		[Token(Token = "0x4001EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MeshRenderer interactionMaskRenderer;

		[Token(Token = "0x4001EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material interactionMaskMaterial;

		[Token(Token = "0x170002B5")]
		public Vector2 WorldUnitsOffset
		{
			[Token(Token = "0x60015E2")]
			[Address(RVA = "0x7F6FF4", Offset = "0x7F6FF4", VA = "0x7F6FF4")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60015E3")]
			[Address(RVA = "0x7F6FFC", Offset = "0x7F6FFC", VA = "0x7F6FFC")]
			set
			{
			}
		}

		[Token(Token = "0x170002B6")]
		public Vector2 WorldUnitsSize
		{
			[Token(Token = "0x60015E4")]
			[Address(RVA = "0x7F7004", Offset = "0x7F7004", VA = "0x7F7004")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60015E5")]
			[Address(RVA = "0x7F700C", Offset = "0x7F700C", VA = "0x7F700C")]
			set
			{
			}
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0x7F6BF4", Offset = "0x7F6BF4", VA = "0x7F6BF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0x7F6F1C", Offset = "0x7F6F1C", VA = "0x7F6F1C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0x7F6F88", Offset = "0x7F6F88", VA = "0x7F6F88")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0x7F6C9C", Offset = "0x7F6C9C", VA = "0x7F6C9C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0x7F6D54", Offset = "0x7F6D54", VA = "0x7F6D54")]
		private void CreateMaskRenderer()
		{
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0x7F7014", Offset = "0x7F7014", VA = "0x7F7014", Slot = "4")]
		public void RenderLocalMask(CommandBuffer commandBuffer, DynamicWaterCameraData overlays)
		{
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0x7F7244", Offset = "0x7F7244", VA = "0x7F7244")]
		public GlobalWaterInteraction()
		{
		}
	}
	[Token(Token = "0x20003D4")]
	public interface ILocalDisplacementMaskRenderer
	{
		[Token(Token = "0x60015EA")]
		void RenderLocalMask(CommandBuffer commandBuffer, DynamicWaterCameraData overlays);
	}
	[Token(Token = "0x20003D5")]
	public interface ILocalDisplacementRenderer
	{
		[Token(Token = "0x60015EB")]
		void RenderLocalDisplacement(CommandBuffer commandBuffer, DynamicWaterCameraData overlays);
	}
	[Token(Token = "0x20003D6")]
	public interface ILocalFoamRenderer
	{
		[Token(Token = "0x60015EC")]
		void RenderLocalFoam(CommandBuffer commandBuffer, DynamicWaterCameraData overlays);
	}
	[Token(Token = "0x20003D7")]
	public interface IOverlaysRenderer
	{
		[Token(Token = "0x60015ED")]
		void RenderOverlays(DynamicWaterCameraData overlays);

		[Token(Token = "0x60015EE")]
		void RenderFoam(DynamicWaterCameraData overlays);
	}
	[Token(Token = "0x20003D8")]
	public interface IWaterShore
	{
		[Token(Token = "0x60015EF")]
		float GetDepthAt(float x, float z);
	}
	[Token(Token = "0x20003D9")]
	public interface IWavesParticleSystemPlugin
	{
		[Token(Token = "0x60015F0")]
		void UpdateParticles(float time, float deltaTime);
	}
	[Token(Token = "0x20003DA")]
	public class OverlayRendererOrderAttribute : Attribute
	{
		[Token(Token = "0x4001EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly int priority;

		[Token(Token = "0x170002B7")]
		public int Priority
		{
			[Token(Token = "0x60015F2")]
			[Address(RVA = "0x15E804C", Offset = "0x15E804C", VA = "0x15E804C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0x15E8020", Offset = "0x15E8020", VA = "0x15E8020")]
		public OverlayRendererOrderAttribute(int priority)
		{
		}
	}
	[Token(Token = "0x20003DB")]
	public sealed class StaticWaterInteraction : MonoBehaviour, IWaterShore, ILocalDisplacementMaskRenderer
	{
		[Token(Token = "0x20003DC")]
		public enum UnderwaterAreasMode
		{
			[Token(Token = "0x4001EFC")]
			Generate,
			[Token(Token = "0x4001EFD")]
			UseExisting
		}

		[Token(Token = "0x4001EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		private Shader maskGenerateShader;

		[Token(Token = "0x4001EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[SerializeField]
		private Shader maskDisplayShader;

		[Token(Token = "0x4001EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		[SerializeField]
		private Shader heightMapperShader;

		[Token(Token = "0x4001EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		[SerializeField]
		private Shader heightMapperShaderAlt;

		[Token(Token = "0x4001EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5818F4", Offset = "0x5818F4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5818F4", Offset = "0x5818F4")]
		private float shoreSmoothness;

		[Token(Token = "0x4001EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581960", Offset = "0x581960")]
		[SerializeField]
		private bool hasBottomFaces;

		[Token(Token = "0x4001EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UnderwaterAreasMode underwaterAreasMode;

		[Token(Token = "0x4001EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "ResolutionAttribute", RVA = "0x5819BC", Offset = "0x5819BC")]
		[SerializeField]
		private int mapResolution;

		[Token(Token = "0x4001EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581A4C", Offset = "0x581A4C")]
		[SerializeField]
		private float waveDampingThreshold;

		[Token(Token = "0x4001EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float depthScale;

		[Token(Token = "0x4001EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private ParticleSystem shoreWavesParticleSystem;

		[Token(Token = "0x4001EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private ParticleSystem sprayParticleSystem;

		[Token(Token = "0x4001EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RenderTexture intensityMask;

		[Token(Token = "0x4001EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MeshRenderer interactionMaskRenderer;

		[Token(Token = "0x4001EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material interactionMaskMaterial;

		[Token(Token = "0x4001EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Bounds bounds;

		[Token(Token = "0x4001EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Bounds totalBounds;

		[Token(Token = "0x4001EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float[] heightMapData;

		[Token(Token = "0x4001EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float offsetX;

		[Token(Token = "0x4001EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float offsetZ;

		[Token(Token = "0x4001EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float scaleX;

		[Token(Token = "0x4001EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float scaleZ;

		[Token(Token = "0x4001EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int width;

		[Token(Token = "0x4001EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int height;

		[Token(Token = "0x4001EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<StaticWaterInteraction> staticWaterInteractions;

		[Token(Token = "0x4001EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private GameObject[] gameObjects;

		[Token(Token = "0x4001EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Terrain[] terrains;

		[Token(Token = "0x4001EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int[] originalRendererLayers;

		[Token(Token = "0x4001EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float[] originalTerrainPixelErrors;

		[Token(Token = "0x4001EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool[] originalDrawTrees;

		[Token(Token = "0x170002B8")]
		public Bounds Bounds
		{
			[Token(Token = "0x60015F5")]
			[Address(RVA = "0x168C0BC", Offset = "0x168C0BC", VA = "0x168C0BC")]
			get
			{
				return default(Bounds);
			}
		}

		[Token(Token = "0x170002B9")]
		public RenderTexture IntensityMask
		{
			[Token(Token = "0x60015F6")]
			[Address(RVA = "0x168C0D0", Offset = "0x168C0D0", VA = "0x168C0D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BA")]
		public Renderer InteractionRenderer
		{
			[Token(Token = "0x60015F7")]
			[Address(RVA = "0x168C1CC", Offset = "0x168C1CC", VA = "0x168C1CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0x168B254", Offset = "0x168B254", VA = "0x168B254")]
		private void Start()
		{
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0x168C014", Offset = "0x168C014", VA = "0x168C014")]
		public static StaticWaterInteraction AttachTo(GameObject target, float shoreSmoothness, bool hasBottomFaces, UnderwaterAreasMode underwaterAreasMode, int mapResolution, float waveDampingThreshold = 4f, float depthScale = 1f)
		{
			return null;
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0x168B324", Offset = "0x168B324", VA = "0x168B324")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0x168C1D4", Offset = "0x168C1D4", VA = "0x168C1D4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0x168C2A0", Offset = "0x168C2A0", VA = "0x168C2A0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0x168C36C", Offset = "0x168C36C", VA = "0x168C36C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0x168C4B0", Offset = "0x168C4B0", VA = "0x168C4B0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x58C554", Offset = "0x58C554")]
		public void Refresh()
		{
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0x168C618", Offset = "0x168C618", VA = "0x168C618")]
		public void SetUniformDepth(float depth, float boundsSize)
		{
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0x168B5B4", Offset = "0x168B5B4", VA = "0x168B5B4")]
		private void RenderShorelineIntensityMask()
		{
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0x168C7FC", Offset = "0x168C7FC", VA = "0x168C7FC")]
		private void PrepareRenderers()
		{
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0x168D86C", Offset = "0x168D86C", VA = "0x168D86C")]
		private void RestoreRenderers()
		{
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0x168D064", Offset = "0x168D064", VA = "0x168D064")]
		private RenderTexture RenderHeightMap(int width, int height)
		{
			return null;
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0x168D400", Offset = "0x168D400", VA = "0x168D400")]
		private static void ComputeDistanceMap(Material material, RenderTexture sa, RenderTexture sb)
		{
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0x168D5CC", Offset = "0x168D5CC", VA = "0x168D5CC")]
		private void ReadBackHeightMap(RenderTexture source)
		{
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0x168BC90", Offset = "0x168BC90", VA = "0x168BC90")]
		private void CreateMaskRenderer()
		{
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0x168D9A0", Offset = "0x168D9A0", VA = "0x168D9A0", Slot = "4")]
		public float GetDepthAt(float x, float z)
		{
			return default(float);
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0x168DAF0", Offset = "0x168DAF0", VA = "0x168DAF0")]
		public static float GetTotalDepthAt(float x, float z)
		{
			return default(float);
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0x168DC28", Offset = "0x168DC28", VA = "0x168DC28", Slot = "5")]
		public void RenderLocalMask(CommandBuffer commandBuffer, DynamicWaterCameraData overlays)
		{
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0x168DDA8", Offset = "0x168DDA8", VA = "0x168DDA8")]
		public StaticWaterInteraction()
		{
		}
	}
	[Token(Token = "0x20003DD")]
	public sealed class WaveParticle : IPoint2D
	{
		[Token(Token = "0x4001EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2 position;

		[Token(Token = "0x4001EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 direction;

		[Token(Token = "0x4001F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float speed;

		[Token(Token = "0x4001F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float targetSpeed;

		[Token(Token = "0x4001F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float baseFrequency;

		[Token(Token = "0x4001F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float frequency;

		[Token(Token = "0x4001F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float baseAmplitude;

		[Token(Token = "0x4001F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float amplitude;

		[Token(Token = "0x4001F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float fadeFactor;

		[Token(Token = "0x4001F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float energyBalance;

		[Token(Token = "0x4001F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float targetEnergyBalance;

		[Token(Token = "0x4001F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float shoaling;

		[Token(Token = "0x4001F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float invkh;

		[Token(Token = "0x4001F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float targetInvKh;

		[Token(Token = "0x4001F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float baseSpeed;

		[Token(Token = "0x4001F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float lifetime;

		[Token(Token = "0x4001F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float amplitudeModifiers;

		[Token(Token = "0x4001F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float amplitudeModifiers2;

		[Token(Token = "0x4001F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float expansionEnergyLoss;

		[Token(Token = "0x4001F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool isShoreWave;

		[Token(Token = "0x4001F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		public bool isAlive;

		[Token(Token = "0x4001F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
		public bool disallowSubdivision;

		[Token(Token = "0x4001F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public WaveParticle leftNeighbour;

		[Token(Token = "0x4001F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public WaveParticle rightNeighbour;

		[Token(Token = "0x4001F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public WaveParticlesGroup group;

		[Token(Token = "0x4001F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Stack<WaveParticle> waveParticlesCache;

		[Token(Token = "0x4001F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly float[] amplitudeFuncPrecomp;

		[Token(Token = "0x4001F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly float[] frequencyFuncPrecomp;

		[Token(Token = "0x170002BB")]
		public Vector2 Position
		{
			[Token(Token = "0x600160C")]
			[Address(RVA = "0x16F8994", Offset = "0x16F8994", VA = "0x16F8994", Slot = "4")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170002BC")]
		public Vector4 PackedParticleData
		{
			[Token(Token = "0x600160D")]
			[Address(RVA = "0x16F899C", Offset = "0x16F899C", VA = "0x16F899C")]
			get
			{
				return default(Vector4);
			}
		}

		[Token(Token = "0x170002BD")]
		public Vector3 VertexData
		{
			[Token(Token = "0x600160E")]
			[Address(RVA = "0x16F89FC", Offset = "0x16F89FC", VA = "0x16F89FC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002BE")]
		public Vector3 DebugData
		{
			[Token(Token = "0x600160F")]
			[Address(RVA = "0x16F8A08", Offset = "0x16F8A08", VA = "0x16F8A08")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0x16F83F0", Offset = "0x16F83F0", VA = "0x16F83F0")]
		static WaveParticle()
		{
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0x16F872C", Offset = "0x16F872C", VA = "0x16F872C")]
		private WaveParticle(Vector2 position, Vector2 direction, float baseFrequency, float baseAmplitude, float lifetime, bool isShoreWave)
		{
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0x16F8A34", Offset = "0x16F8A34", VA = "0x16F8A34")]
		public static WaveParticle Create(Vector3 position, Vector2 direction, float baseFrequency, float baseAmplitude, float lifetime, bool isShoreWave)
		{
			return null;
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0x16F8AF4", Offset = "0x16F8AF4", VA = "0x16F8AF4")]
		public static WaveParticle Create(Vector2 position, Vector2 direction, float baseFrequency, float baseAmplitude, float lifetime, bool isShoreWave)
		{
			return null;
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0x16F8CF4", Offset = "0x16F8CF4", VA = "0x16F8CF4", Slot = "5")]
		public void Destroy()
		{
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0x16F8DB0", Offset = "0x16F8DB0", VA = "0x16F8DB0")]
		public void DelayedDestroy()
		{
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0x16F8DBC", Offset = "0x16F8DBC", VA = "0x16F8DBC")]
		public void AddToCache()
		{
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0x16F8E50", Offset = "0x16F8E50", VA = "0x16F8E50")]
		public WaveParticle Clone(Vector2 position)
		{
			return null;
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0x16F8F64", Offset = "0x16F8F64", VA = "0x16F8F64")]
		public void Update(float deltaTime, float step, float invStep)
		{
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0x16F87F4", Offset = "0x16F87F4", VA = "0x16F87F4")]
		public int CostlyUpdate(WaveParticlesQuadtree quadtree, float deltaTime)
		{
			return default(int);
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0x16F9220", Offset = "0x16F9220", VA = "0x16F9220")]
		private void UpdateWaveParameters(float deltaTime, float depth)
		{
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0x16F9510", Offset = "0x16F9510", VA = "0x16F9510")]
		private void Subdivide(WaveParticlesQuadtree quadtree, WaveParticle left, WaveParticle right, int numSubdivisions)
		{
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0x16F8604", Offset = "0x16F8604", VA = "0x16F8604")]
		private static float ComputeAmplitudeAtShore(double kh)
		{
			return default(float);
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0x16F8698", Offset = "0x16F8698", VA = "0x16F8698")]
		private static float ComputeWavelengthAtShore(double kh)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20003DE")]
	public class WaveParticlesGroup
	{
		[Token(Token = "0x4001F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float lastUpdateTime;

		[Token(Token = "0x4001F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float lastCostlyUpdateTime;

		[Token(Token = "0x4001F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WaveParticle leftParticle;

		[Token(Token = "0x4001F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly int id;

		[Token(Token = "0x4001F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int nextId;

		[Token(Token = "0x170002BF")]
		public WaveParticle LastParticle
		{
			[Token(Token = "0x600161D")]
			[Address(RVA = "0x16FAD04", Offset = "0x16FAD04", VA = "0x16FAD04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C0")]
		public int Id
		{
			[Token(Token = "0x600161E")]
			[Address(RVA = "0x16FAD24", Offset = "0x16FAD24", VA = "0x16FAD24")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002C1")]
		public int ParticleCount
		{
			[Token(Token = "0x600161F")]
			[Address(RVA = "0x16FAD2C", Offset = "0x16FAD2C", VA = "0x16FAD2C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0x16FA010", Offset = "0x16FA010", VA = "0x16FA010")]
		public WaveParticlesGroup(float startTime)
		{
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0x16FAD50", Offset = "0x16FAD50", VA = "0x16FAD50")]
		public void Update(float time)
		{
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0x16FADBC", Offset = "0x16FADBC", VA = "0x16FADBC")]
		public void CostlyUpdate(WaveParticlesQuadtree quadtree, float time)
		{
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0x16FAE78", Offset = "0x16FAE78", VA = "0x16FAE78")]
		private static void FilterRefractedDirections(WaveParticle left, int waveLength)
		{
		}
	}
	[Token(Token = "0x20003DF")]
	public sealed class WaveParticlesQuadtree : Quadtree<WaveParticle>
	{
		[Token(Token = "0x4001F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Mesh mesh;

		[Token(Token = "0x4001F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3[] vertices;

		[Token(Token = "0x4001F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector4[] tangentsPack;

		[Token(Token = "0x4001F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3[] debugData;

		[Token(Token = "0x4001F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private WaveParticlesGroup[] particleGroups;

		[Token(Token = "0x4001F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int numParticleGroups;

		[Token(Token = "0x4001F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int lastGroupIndex;

		[Token(Token = "0x4001F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float stress;

		[Token(Token = "0x4001F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private bool tangentsPackChanged;

		[Token(Token = "0x4001F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Stopwatch stopwatch;

		[Token(Token = "0x4001F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int lastUpdateIndex;

		[Token(Token = "0x4001F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private bool debugMode;

		[Token(Token = "0x4001F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private WaveParticlesQuadtree qa;

		[Token(Token = "0x4001F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private WaveParticlesQuadtree qb;

		[Token(Token = "0x4001F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private WaveParticlesQuadtree qc;

		[Token(Token = "0x4001F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private WaveParticlesQuadtree qd;

		[Token(Token = "0x4001F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private readonly WaveParticlesQuadtree qroot;

		[Token(Token = "0x170002C2")]
		public bool DebugMode
		{
			[Token(Token = "0x6001625")]
			[Address(RVA = "0x16FB2A0", Offset = "0x16FB2A0", VA = "0x16FB2A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001626")]
			[Address(RVA = "0x16FB2A8", Offset = "0x16FB2A8", VA = "0x16FB2A8")]
			set
			{
			}
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0x16FAC14", Offset = "0x16FAC14", VA = "0x16FAC14")]
		public WaveParticlesQuadtree(Rect rect, int maxElementsPerNode, int maxTotalElements)
		{
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0x16FB268", Offset = "0x16FB268", VA = "0x16FB268")]
		private WaveParticlesQuadtree(WaveParticlesQuadtree root, Rect rect, int maxElementsPerNode)
		{
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0x16FAA34", Offset = "0x16FAA34", VA = "0x16FAA34")]
		public void Render(Rect renderRect)
		{
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0x16FA88C", Offset = "0x16FA88C", VA = "0x16FA88C")]
		public void UpdateSimulation(float time, float maxExecutionTimeExp)
		{
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0x16FA9B0", Offset = "0x16FA9B0", VA = "0x16FA9B0")]
		public void UpdateSimulation(float time)
		{
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0x16FB2B4", Offset = "0x16FB2B4", VA = "0x16FB2B4")]
		private void UpdateParticles(float time)
		{
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0x16FB984", Offset = "0x16FB984", VA = "0x16FB984", Slot = "4")]
		public override void Destroy()
		{
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0x16FBA58", Offset = "0x16FBA58", VA = "0x16FBA58")]
		private bool HasParticleGroup(WaveParticlesGroup group)
		{
			return default(bool);
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0x16FBAC0", Offset = "0x16FBAC0", VA = "0x16FBAC0")]
		private void AddParticleGroup(WaveParticlesGroup group)
		{
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0x16FB928", Offset = "0x16FB928", VA = "0x16FB928")]
		private bool RectContainsParticleGroup(WaveParticlesGroup group)
		{
			return default(bool);
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0x16FBC20", Offset = "0x16FBC20", VA = "0x16FBC20", Slot = "5")]
		protected override void AddElementAt(WaveParticle particle, int index)
		{
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0x16FBCC4", Offset = "0x16FBCC4", VA = "0x16FBCC4", Slot = "6")]
		protected override void RemoveElementAt(int index)
		{
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0x16FBDDC", Offset = "0x16FBDDC", VA = "0x16FBDDC", Slot = "7")]
		protected override void SpawnChildNodes()
		{
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0x16FAF90", Offset = "0x16FAF90", VA = "0x16FAF90")]
		private void CreateMesh()
		{
		}
	}
	[Token(Token = "0x20003E0")]
	public class WaveParticlesSystemGPU : MonoBehaviour, IOverlaysRenderer
	{
		[Token(Token = "0x20003E1")]
		public struct ParticleData
		{
			[Token(Token = "0x4001F42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector2 position;

			[Token(Token = "0x4001F43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector2 direction;

			[Token(Token = "0x4001F44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float wavelength;

			[Token(Token = "0x4001F45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float amplitude;

			[Token(Token = "0x4001F46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float initialLifetime;

			[Token(Token = "0x4001F47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float lifetime;

			[Token(Token = "0x4001F48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float uvOffsetPack;

			[Token(Token = "0x4001F49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float foam;

			[Token(Token = "0x4001F4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float trailCalming;

			[Token(Token = "0x4001F4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float trailFoam;
		}

		[Token(Token = "0x4001F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int maxParticles;

		[Token(Token = "0x4001F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ComputeShader controllerShader;

		[Token(Token = "0x4001F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Shader particlesRenderShader;

		[Token(Token = "0x4001F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Texture foamTexture;

		[Token(Token = "0x4001F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Texture foamOverlayTexture;

		[Token(Token = "0x4001F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private int foamAtlasWidth;

		[Token(Token = "0x4001F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private int foamAtlasHeight;

		[Token(Token = "0x4001F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material particlesRenderMaterial;

		[Token(Token = "0x4001F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ComputeBuffer particlesA;

		[Token(Token = "0x4001F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ComputeBuffer particlesB;

		[Token(Token = "0x4001F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ComputeBuffer spawnBuffer;

		[Token(Token = "0x4001F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ComputeBuffer particlesRenderInfo;

		[Token(Token = "0x4001F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ComputeBuffer particlesUpdateInfo;

		[Token(Token = "0x4001F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector2 lastSurfaceOffset;

		[Token(Token = "0x4001F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private uint particlesToSpawnCount;

		[Token(Token = "0x4001F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Water water;

		[Token(Token = "0x4001F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly ParticleData[] particlesToSpawn;

		[Token(Token = "0x4001F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private readonly RenderBuffer[] renderBuffers;

		[Token(Token = "0x170002C3")]
		public ComputeBuffer ParticlesBuffer
		{
			[Token(Token = "0x6001635")]
			[Address(RVA = "0x16FC494", Offset = "0x16FC494", VA = "0x16FC494")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C4")]
		public int FoamAtlasWidth
		{
			[Token(Token = "0x6001636")]
			[Address(RVA = "0x16FC49C", Offset = "0x16FC49C", VA = "0x16FC49C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002C5")]
		public int FoamAtlasHeight
		{
			[Token(Token = "0x6001637")]
			[Address(RVA = "0x16FC4A4", Offset = "0x16FC4A4", VA = "0x16FC4A4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0x16FC0F0", Offset = "0x16FC0F0", VA = "0x16FC0F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0x16FC3C0", Offset = "0x16FC3C0", VA = "0x16FC3C0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0x16FC4AC", Offset = "0x16FC4AC", VA = "0x16FC4AC")]
		public void EmitParticle(ParticleData particleData)
		{
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0x16FC528", Offset = "0x16FC528", VA = "0x16FC528", Slot = "4")]
		public void RenderOverlays(DynamicWaterCameraData overlays)
		{
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0x16FC8C4", Offset = "0x16FC8C4", VA = "0x16FC8C4", Slot = "5")]
		public void RenderFoam(DynamicWaterCameraData overlays)
		{
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0x16FC9C4", Offset = "0x16FC9C4", VA = "0x16FC9C4")]
		private void Update()
		{
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0x16FCC84", Offset = "0x16FCC84", VA = "0x16FCC84")]
		private void UpdateParticles()
		{
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0x16FCE10", Offset = "0x16FCE10", VA = "0x16FCE10")]
		private void SpawnParticles()
		{
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0x16FCF30", Offset = "0x16FCF30", VA = "0x16FCF30")]
		private void SwapBuffers()
		{
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0x16FCA34", Offset = "0x16FCA34", VA = "0x16FCA34")]
		private void CheckResources()
		{
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0x16FC1D4", Offset = "0x16FC1D4", VA = "0x16FC1D4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0x16FC2C8", Offset = "0x16FC2C8", VA = "0x16FC2C8")]
		private void SetMaterialProperties()
		{
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0x16FCF68", Offset = "0x16FCF68", VA = "0x16FCF68")]
		public WaveParticlesSystemGPU()
		{
		}
	}
	[Token(Token = "0x20003E2")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x579318", Offset = "0x579318")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x579318", Offset = "0x579318")]
	public sealed class WaveParticleSystem : MonoBehaviour, IOverlaysRenderer
	{
		[Token(Token = "0x4001F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		private Shader waterWavesParticlesShader;

		[Token(Token = "0x4001F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int maxParticles;

		[Token(Token = "0x4001F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int maxParticlesPerTile;

		[Token(Token = "0x4001F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float prewarmTime;

		[Token(Token = "0x4001F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581BA0", Offset = "0x581BA0")]
		[SerializeField]
		private float timePerFrame;

		[Token(Token = "0x4001F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaveParticlesQuadtree particles;

		[Token(Token = "0x4001F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Water water;

		[Token(Token = "0x4001F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material waterWavesParticlesMaterial;

		[Token(Token = "0x4001F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float simulationTime;

		[Token(Token = "0x4001F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float timePerFrameExp;

		[Token(Token = "0x4001F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool prewarmed;

		[Token(Token = "0x4001F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly List<IWavesParticleSystemPlugin> plugins;

		[Token(Token = "0x170002C6")]
		public int ParticleCount
		{
			[Token(Token = "0x6001647")]
			[Address(RVA = "0x16F9C54", Offset = "0x16F9C54", VA = "0x16F9C54")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002C7")]
		public float SimulationTime
		{
			[Token(Token = "0x6001648")]
			[Address(RVA = "0x16F9CA8", Offset = "0x16F9CA8", VA = "0x16F9CA8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0x16F9838", Offset = "0x16F9838", VA = "0x16F9838")]
		public WaveParticleSystem()
		{
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0x16F98D8", Offset = "0x16F98D8", VA = "0x16F98D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0x16F9A2C", Offset = "0x16F9A2C", VA = "0x16F9A2C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0x16F9BB0", Offset = "0x16F9BB0", VA = "0x16F9BB0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0x16F9CB0", Offset = "0x16F9CB0", VA = "0x16F9CB0")]
		public bool AddParticle(WaveParticle particle)
		{
			return default(bool);
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0x16F9D7C", Offset = "0x16F9D7C", VA = "0x16F9D7C")]
		public bool Spawn(WaveParticle particle, int clones, float waveShapeIrregularity, float centerElevation = 2f, float edgesElevation = 0.35f)
		{
			return default(bool);
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0x16FA090", Offset = "0x16FA090", VA = "0x16FA090", Slot = "4")]
		public void RenderOverlays(DynamicWaterCameraData overlays)
		{
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0x16FA094", Offset = "0x16FA094", VA = "0x16FA094", Slot = "5")]
		public void RenderFoam(DynamicWaterCameraData overlays)
		{
		}

		[Token(Token = "0x600164D")]
		[Address(RVA = "0x16F9944", Offset = "0x16F9944", VA = "0x16F9944")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0x16FA548", Offset = "0x16FA548", VA = "0x16FA548")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0x16FA61C", Offset = "0x16FA61C", VA = "0x16FA61C")]
		public void RegisterPlugin(IWavesParticleSystemPlugin plugin)
		{
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0x16FA6BC", Offset = "0x16FA6BC", VA = "0x16FA6BC")]
		public void UnregisterPlugin(IWavesParticleSystemPlugin plugin)
		{
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0x16FA580", Offset = "0x16FA580", VA = "0x16FA580")]
		private void Prewarm()
		{
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0x16FA5E0", Offset = "0x16FA5E0", VA = "0x16FA5E0")]
		private void UpdateSimulation(float deltaTime)
		{
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0x16FA720", Offset = "0x16FA720", VA = "0x16FA720")]
		private void UpdateSimulationWithoutFrameBudget(float deltaTime)
		{
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0x16FA75C", Offset = "0x16FA75C", VA = "0x16FA75C")]
		private void UpdatePlugins(float deltaTime)
		{
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0x16FA0D4", Offset = "0x16FA0D4", VA = "0x16FA0D4")]
		private void RenderParticles(DynamicWaterCameraData overlays)
		{
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0x16F9A30", Offset = "0x16F9A30", VA = "0x16F9A30")]
		private void CheckResources()
		{
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0x16F9BB4", Offset = "0x16F9BB4", VA = "0x16F9BB4")]
		private void FreeResources()
		{
		}
	}
	[Token(Token = "0x20003E3")]
	public class DynamicWater
	{
		[Serializable]
		[Token(Token = "0x20003E4")]
		public class Data
		{
			[Token(Token = "0x4001F6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int Antialiasing;

			[Token(Token = "0x4001F6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public LayerMask CustomEffectsLayerMask;

			[Token(Token = "0x600166E")]
			[Address(RVA = "0x150807C", Offset = "0x150807C", VA = "0x150807C")]
			public Data()
			{
			}
		}

		[Token(Token = "0x4001F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IOverlaysRenderer[] overlayRenderers;

		[Token(Token = "0x4001F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Material mapLocalDisplacementsMaterial;

		[Token(Token = "0x4001F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<ILocalDisplacementRenderer> localDisplacementRenderers;

		[Token(Token = "0x4001F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<ILocalDisplacementMaskRenderer> localDisplacementMaskRenderers;

		[Token(Token = "0x4001F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<ILocalFoamRenderer> localFoamRenderers;

		[Token(Token = "0x4001F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Water water;

		[Token(Token = "0x4001F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Data data;

		[Token(Token = "0x4001F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Shader mapLocalDisplacementsShader;

		[Token(Token = "0x4001F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static CommandBuffer renderDisplacementBuffer;

		[Token(Token = "0x4001F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static CommandBuffer renderDisplacementMaskBuffer;

		[Token(Token = "0x4001F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static CommandBuffer renderFoamBuffer;

		[Token(Token = "0x4001F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Dictionary<Camera, DynamicWaterCameraData> buffers;

		[Token(Token = "0x4001F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly List<Camera> lostCameras;

		[Token(Token = "0x4001F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static RenderTargetIdentifier[] customEffectsBuffers;

		[Token(Token = "0x4001F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static int localDisplacementMapId;

		[Token(Token = "0x4001F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private static int localNormalMapId;

		[Token(Token = "0x4001F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static int totalDisplacementMapId;

		[Token(Token = "0x4001F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private static int displacementsMaskId;

		[Token(Token = "0x170002C8")]
		public Water Water
		{
			[Token(Token = "0x600165B")]
			[Address(RVA = "0x7D1FCC", Offset = "0x7D1FCC", VA = "0x7D1FCC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0x7D1648", Offset = "0x7D1648", VA = "0x7D1648")]
		public DynamicWater(Water water, Data data)
		{
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0x7D1988", Offset = "0x7D1988", VA = "0x7D1988")]
		internal void Enable()
		{
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0x7D1E1C", Offset = "0x7D1E1C", VA = "0x7D1E1C")]
		internal void Disable()
		{
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0x7D1FD4", Offset = "0x7D1FD4", VA = "0x7D1FD4")]
		internal void Destroy()
		{
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0x7D1984", Offset = "0x7D1984", VA = "0x7D1984")]
		internal void Validate()
		{
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0x7D1FD8", Offset = "0x7D1FD8", VA = "0x7D1FD8")]
		internal void Update()
		{
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0x7D1C04", Offset = "0x7D1C04", VA = "0x7D1C04")]
		public void ValidateWaterComponents()
		{
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0x7D21A8", Offset = "0x7D21A8", VA = "0x7D21A8")]
		public void OnWaterRender(Camera camera)
		{
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0x7D385C", Offset = "0x7D385C", VA = "0x7D385C")]
		public static void AddRenderer(ILocalDisplacementRenderer renderer)
		{
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0x7D38F0", Offset = "0x7D38F0", VA = "0x7D38F0")]
		public static void AddRenderer(ILocalDisplacementMaskRenderer renderer)
		{
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0x7D3984", Offset = "0x7D3984", VA = "0x7D3984")]
		public static void AddRenderer(ILocalFoamRenderer renderer)
		{
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0x7D3A18", Offset = "0x7D3A18", VA = "0x7D3A18")]
		public static void RemoveRenderer(ILocalDisplacementRenderer renderer)
		{
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0x7D3AAC", Offset = "0x7D3AAC", VA = "0x7D3AAC")]
		public static void RemoveRenderer(ILocalDisplacementMaskRenderer renderer)
		{
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0x7D3B40", Offset = "0x7D3B40", VA = "0x7D3B40")]
		public static void RemoveRenderer(ILocalFoamRenderer renderer)
		{
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0x7D3BD4", Offset = "0x7D3BD4", VA = "0x7D3BD4")]
		public void RenderTotalDisplacementMap(WaterCamera camera, RenderTexture renderTexture)
		{
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0x7D26C4", Offset = "0x7D26C4", VA = "0x7D26C4")]
		public DynamicWaterCameraData GetCameraOverlaysData(Camera camera, bool createIfNotExists = true)
		{
			return null;
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0x7D2F08", Offset = "0x7D2F08", VA = "0x7D2F08")]
		private void DrawDisplacementRenderers(DynamicWaterCameraData overlays)
		{
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0x7D2B78", Offset = "0x7D2B78", VA = "0x7D2B78")]
		private void DrawDisplacementMaskRenderers(DynamicWaterCameraData overlays)
		{
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0x7D34CC", Offset = "0x7D34CC", VA = "0x7D34CC")]
		private void DrawFoamRenderers(DynamicWaterCameraData overlays)
		{
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0x7D1ABC", Offset = "0x7D1ABC", VA = "0x7D1ABC")]
		private static void CacheShaderProperties()
		{
		}
	}
	[Token(Token = "0x20003E5")]
	public class ComplexWavesEmitter : MonoBehaviour, IWavesParticleSystemPlugin
	{
		[Token(Token = "0x20003E6")]
		public enum WavesSource
		{
			[Token(Token = "0x4001F81")]
			CustomWaveFrequency,
			[Token(Token = "0x4001F82")]
			WindWavesSpectrum,
			[Token(Token = "0x4001F83")]
			Shoaling,
			[Token(Token = "0x4001F84")]
			Vehicle
		}

		[Token(Token = "0x20003E7")]
		private class SpawnPoint
		{
			[Token(Token = "0x4001F85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector2 position;

			[Token(Token = "0x4001F86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector2 direction;

			[Token(Token = "0x4001F87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float frequency;

			[Token(Token = "0x4001F88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float amplitude;

			[Token(Token = "0x4001F89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float timeInterval;

			[Token(Token = "0x4001F8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float timeLeft;

			[Token(Token = "0x6001677")]
			[Address(RVA = "0x1505500", Offset = "0x1505500", VA = "0x1505500")]
			public SpawnPoint(Vector2 position, Vector2 direction, float frequency, float amplitude, float speed)
			{
			}
		}

		[Token(Token = "0x4001F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WaveParticleSystem wavesParticleSystem;

		[Token(Token = "0x4001F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private WavesSource wavesSource;

		[Token(Token = "0x4001F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float wavelength;

		[Token(Token = "0x4001F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float amplitude;

		[Token(Token = "0x4001F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float emissionRate;

		[Token(Token = "0x4001F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int width;

		[Token(Token = "0x4001F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x581C4C", Offset = "0x581C4C")]
		[SerializeField]
		private float spectrumCoincidenceRange;

		[Token(Token = "0x4001F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x581C90", Offset = "0x581C90")]
		[SerializeField]
		private int spectrumWavesCount;

		[Token(Token = "0x4001F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581CD4", Offset = "0x581CD4")]
		[SerializeField]
		private float span;

		[Token(Token = "0x4001F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x581D20", Offset = "0x581D20")]
		[SerializeField]
		private float waveShapeIrregularity;

		[Token(Token = "0x4001F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float lifetime;

		[Token(Token = "0x4001F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool shoreWaves;

		[Token(Token = "0x4001F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private Vector2 boundsSize;

		[Token(Token = "0x4001F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x581D90", Offset = "0x581D90")]
		[SerializeField]
		private float spawnDepth;

		[Token(Token = "0x4001F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x581DD4", Offset = "0x581DD4")]
		[SerializeField]
		private float emissionFrequencyScale;

		[Token(Token = "0x4001F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float spawnPointsDensity;

		[Token(Token = "0x4001F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SpawnPoint[] spawnPoints;

		[Token(Token = "0x4001F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private WindWaves windWaves;

		[Token(Token = "0x4001F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float nextSpawnTime;

		[Token(Token = "0x4001F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float timeStep;

		[Token(Token = "0x600166F")]
		[Address(RVA = "0x85B2F4", Offset = "0x85B2F4", VA = "0x85B2F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0x85B398", Offset = "0x85B398", VA = "0x85B398")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0x85B3F0", Offset = "0x85B3F0", VA = "0x85B3F0", Slot = "4")]
		public void UpdateParticles(float time, float deltaTime)
		{
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0x85B384", Offset = "0x85B384", VA = "0x85B384")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0x85B874", Offset = "0x85B874", VA = "0x85B874")]
		private void UpdateSpawnPoints(float deltaTime)
		{
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0x85BB00", Offset = "0x85BB00", VA = "0x85BB00")]
		private void CreateShoalingSpawnPoints()
		{
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0x85B5C8", Offset = "0x85B5C8", VA = "0x85B5C8")]
		private void CreateSpectralWavesSpawnPoints()
		{
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0x85C0A4", Offset = "0x85C0A4", VA = "0x85C0A4")]
		public ComplexWavesEmitter()
		{
		}
	}
	[Token(Token = "0x20003E8")]
	public class ShipBowWavesEmitter : MonoBehaviour
	{
		[Token(Token = "0x4001F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x581E28", Offset = "0x581E28")]
		[SerializeField]
		private WaveParticlesSystemGPU gpuParticleSystem;

		[Token(Token = "0x4001F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ParticleSystem unityParticleSystem;

		[Token(Token = "0x4001F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x581E84", Offset = "0x581E84")]
		[SerializeField]
		private float waveSpeed;

		[Token(Token = "0x4001F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float amplitude;

		[Token(Token = "0x4001F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float wavelength;

		[Token(Token = "0x4001F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float lifetime;

		[Token(Token = "0x4001F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float foam;

		[Token(Token = "0x4001F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float maxShipSpeed;

		[Token(Token = "0x4001F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float leftRightSpace;

		[Token(Token = "0x4001F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x581F2C", Offset = "0x581F2C")]
		[SerializeField]
		private float trailCalming;

		[Token(Token = "0x4001F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x581F6C", Offset = "0x581F6C")]
		[SerializeField]
		private float trailFoam;

		[Token(Token = "0x4001F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581FAC", Offset = "0x581FAC")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x581FAC", Offset = "0x581FAC")]
		private bool advancedEmissionPositioning;

		[Token(Token = "0x4001F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58201C", Offset = "0x58201C")]
		[SerializeField]
		private Collider shipCollider;

		[Token(Token = "0x4001F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float advancedEmissionOffset;

		[Token(Token = "0x4001F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private int minTextureIndex;

		[Token(Token = "0x4001F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private int maxTextureIndex;

		[Token(Token = "0x4001F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x582098", Offset = "0x582098")]
		[SerializeField]
		private float emissionSpacing;

		[Token(Token = "0x4001F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector2 previousFrameBowPosition;

		[Token(Token = "0x4001F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float totalBowDeltaMagnitude;

		[Token(Token = "0x4001F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float lastBowEmitTime;

		[Token(Token = "0x4001F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float angleSin;

		[Token(Token = "0x4001FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float angleCos;

		[Token(Token = "0x4001FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float space;

		[Token(Token = "0x4001FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool useBuiltinParticleSystem;

		[Token(Token = "0x4001FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Water waterComponent;

		[Token(Token = "0x6001678")]
		[Address(RVA = "0x1674598", Offset = "0x1674598", VA = "0x1674598")]
		private void Start()
		{
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0x1674748", Offset = "0x1674748", VA = "0x1674748")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0x167479C", Offset = "0x167479C", VA = "0x167479C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0x1674794", Offset = "0x1674794", VA = "0x1674794")]
		private static Vector2 GetVector2(Vector3 vector3)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0x1674D7C", Offset = "0x1674D7C", VA = "0x1674D7C")]
		public ShipBowWavesEmitter()
		{
		}
	}
	[Token(Token = "0x20003E9")]
	public sealed class WaterSprayEmitter : MonoBehaviour
	{
		[Token(Token = "0x4001FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Spray water;

		[Token(Token = "0x4001FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float emissionRate;

		[Token(Token = "0x4001FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float startIntensity;

		[Token(Token = "0x4001FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float startVelocity;

		[Token(Token = "0x4001FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float lifetime;

		[Token(Token = "0x4001FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float totalTime;

		[Token(Token = "0x4001FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float timeStep;

		[Token(Token = "0x4001FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Spray.Particle[] particles;

		[Token(Token = "0x170002C9")]
		public float StartVelocity
		{
			[Token(Token = "0x600167E")]
			[Address(RVA = "0x16F082C", Offset = "0x16F082C", VA = "0x16F082C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600167F")]
			[Address(RVA = "0x16F0834", Offset = "0x16F0834", VA = "0x16F0834")]
			set
			{
			}
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0x16F0778", Offset = "0x16F0778", VA = "0x16F0778")]
		private void Start()
		{
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0x16F083C", Offset = "0x16F083C", VA = "0x16F083C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0x16F0818", Offset = "0x16F0818", VA = "0x16F0818")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0x16F0A68", Offset = "0x16F0A68", VA = "0x16F0A68")]
		public WaterSprayEmitter()
		{
		}
	}
	[Token(Token = "0x20003EA")]
	public class WavesEmitter : MonoBehaviour
	{
		[Token(Token = "0x4001FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WaveParticlesSystemGPU water;

		[Token(Token = "0x4001FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float amplitude;

		[Token(Token = "0x4001FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float wavelength;

		[Token(Token = "0x4001FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float lifetime;

		[Token(Token = "0x4001FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float speed;

		[Token(Token = "0x4001FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float foam;

		[Token(Token = "0x4001FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float emissionArea;

		[Token(Token = "0x4001FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float emissionInterval;

		[Token(Token = "0x4001FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5821AC", Offset = "0x5821AC")]
		[SerializeField]
		private float trailCalming;

		[Token(Token = "0x4001FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5821EC", Offset = "0x5821EC")]
		[SerializeField]
		private float trailFoam;

		[Token(Token = "0x4001FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58222C", Offset = "0x58222C")]
		[SerializeField]
		private float emissionAngle;

		[Token(Token = "0x4001FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x582270", Offset = "0x582270")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x582270", Offset = "0x582270")]
		[SerializeField]
		private int minTextureU;

		[Token(Token = "0x4001FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5822E0", Offset = "0x5822E0")]
		[SerializeField]
		private int maxTextureU;

		[Token(Token = "0x4001FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58232C", Offset = "0x58232C")]
		[SerializeField]
		private float initialPower;

		[Token(Token = "0x4001FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float power;

		[Token(Token = "0x4001FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float lastEmitTime;

		[Token(Token = "0x4001FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float finalEmissionInterval;

		[Token(Token = "0x4001FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Water waterComponent;

		[Token(Token = "0x170002CA")]
		public float Power
		{
			[Token(Token = "0x6001684")]
			[Address(RVA = "0x16FD160", Offset = "0x16FD160", VA = "0x16FD160")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001685")]
			[Address(RVA = "0x16FD124", Offset = "0x16FD124", VA = "0x16FD124")]
			set
			{
			}
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0x16FD020", Offset = "0x16FD020", VA = "0x16FD020")]
		private void Start()
		{
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0x16FD168", Offset = "0x16FD168", VA = "0x16FD168")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0x16FD17C", Offset = "0x16FD17C", VA = "0x16FD17C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0x16FD470", Offset = "0x16FD470", VA = "0x16FD470")]
		private static Vector2 GetVector2(Vector3 vector3)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0x16FD478", Offset = "0x16FD478", VA = "0x16FD478")]
		public WavesEmitter()
		{
		}
	}
	[Token(Token = "0x20003EB")]
	public interface IWaterImageEffect
	{
		[Token(Token = "0x600168A")]
		void OnWaterCameraEnabled();

		[Token(Token = "0x600168B")]
		void OnWaterCameraPreCull();
	}
	[Token(Token = "0x20003EC")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5793A8", Offset = "0x5793A8")]
	public sealed class LightWaterEffects : MonoBehaviour
	{
		[Token(Token = "0x20003ED")]
		public enum CausticsMode
		{
			[Token(Token = "0x4001FDE")]
			None,
			[Token(Token = "0x4001FDF")]
			ProjectedTexture,
			[Token(Token = "0x4001FE0")]
			Raymarching
		}

		[Token(Token = "0x4001FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		private Shader worldPosShader;

		[Token(Token = "0x4001FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[SerializeField]
		private Shader causticsMapShader;

		[Token(Token = "0x4001FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		[SerializeField]
		private Shader normalMapperShader;

		[Token(Token = "0x4001FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		[SerializeField]
		private Shader causticUtilShader;

		[Token(Token = "0x4001FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool castShadows;

		[Token(Token = "0x4001FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private CausticsMode causticsMode;

		[Token(Token = "0x4001FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58246C", Offset = "0x58246C")]
		[SerializeField]
		private float intensity;

		[Token(Token = "0x4001FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private LayerMask causticReceiversMask;

		[Token(Token = "0x4001FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Blur blur;

		[Token(Token = "0x4001FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5824CC", Offset = "0x5824CC")]
		[SerializeField]
		private bool skipTerrainTrees;

		[Token(Token = "0x4001FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x582518", Offset = "0x582518")]
		[SerializeField]
		private Texture2D projectedTexture;

		[Token(Token = "0x4001FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582564", Offset = "0x582564")]
		[SerializeField]
		private Transform scrollDirectionPointer;

		[Token(Token = "0x4001FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float uvScale;

		[Token(Token = "0x4001FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5825C0", Offset = "0x5825C0")]
		[SerializeField]
		private float scrollSpeed;

		[Token(Token = "0x4001FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x582600", Offset = "0x582600")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x582600", Offset = "0x582600")]
		[SerializeField]
		private float distortions1;

		[Token(Token = "0x4001FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x582664", Offset = "0x582664")]
		[SerializeField]
		private float distortions2;

		[Token(Token = "0x4001FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Camera renderCamera;

		[Token(Token = "0x4001FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private WaterCamera waterCamera;

		[Token(Token = "0x4001FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material causticUtilMat;

		[Token(Token = "0x4001FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Light localLight;

		[Token(Token = "0x4001FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector2 offset;

		[Token(Token = "0x4001FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector2 scroll;

		[Token(Token = "0x4001FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool hasDirectionPointer;

		[Token(Token = "0x4001FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		private bool renderingPrepared;

		[Token(Token = "0x4001FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool[] terrainSettingTemp;

		[Token(Token = "0x4001FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int id;

		[Token(Token = "0x4001FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private CommandBuffer copyShadowmap;

		[Token(Token = "0x4001FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private RenderTexture worldPosMap;

		[Token(Token = "0x4001FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private RenderTexture causticsMap;

		[Token(Token = "0x4001FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly List<LightWaterEffects> lights;

		[Token(Token = "0x4001FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int shadowmapId;

		[Token(Token = "0x170002CB")]
		public Light UnityLight
		{
			[Token(Token = "0x6001691")]
			[Address(RVA = "0x151B670", Offset = "0x151B670", VA = "0x151B670")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CC")]
		public bool CastShadows
		{
			[Token(Token = "0x6001692")]
			[Address(RVA = "0x151B678", Offset = "0x151B678", VA = "0x151B678")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001693")]
			[Address(RVA = "0x151B680", Offset = "0x151B680", VA = "0x151B680")]
			set
			{
			}
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0x151A7D4", Offset = "0x151A7D4", VA = "0x151A7D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0x151A8D0", Offset = "0x151A8D0", VA = "0x151A8D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0x151B0CC", Offset = "0x151B0CC", VA = "0x151B0CC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0x151B334", Offset = "0x151B334", VA = "0x151B334")]
		public void PrepareRenderingOnCamera(WaterCamera targetCamera)
		{
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0x151B630", Offset = "0x151B630", VA = "0x151B630")]
		public void CleanRenderingOnCamera()
		{
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0x151AB14", Offset = "0x151AB14", VA = "0x151AB14")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0x151B68C", Offset = "0x151B68C", VA = "0x151B68C")]
		public void AddWorldSpaceOffset(Vector3 offset)
		{
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0x151B794", Offset = "0x151B794", VA = "0x151B794")]
		private void Update()
		{
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0x151B844", Offset = "0x151B844", VA = "0x151B844")]
		private void OnSomeCameraGlobalPreCull(Camera camera)
		{
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0x151AD38", Offset = "0x151AD38", VA = "0x151AD38")]
		private void CreateCausticsCamera()
		{
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0x151B3A0", Offset = "0x151B3A0", VA = "0x151B3A0")]
		private void PrepareShadows(Camera camera)
		{
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0x151B5C0", Offset = "0x151B5C0", VA = "0x151B5C0")]
		private void PrepareCaustics(WaterCamera waterCamera)
		{
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0x151B89C", Offset = "0x151B89C", VA = "0x151B89C")]
		private void UpdateCausticsCameraPosition(WaterCamera waterCamera)
		{
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0x151B9E8", Offset = "0x151B9E8", VA = "0x151B9E8")]
		private void RenderProjectedTextureCaustics()
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0x151BDE8", Offset = "0x151BDE8", VA = "0x151BDE8")]
		private void RenderRaymarchedCaustics(WaterCamera waterCamera)
		{
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0x151C4C4", Offset = "0x151C4C4", VA = "0x151C4C4")]
		public LightWaterEffects()
		{
		}
	}
	[Token(Token = "0x20003EE")]
	public class PlayWayWaterShip : MonoBehaviour
	{
		[Token(Token = "0x20003EF")]
		public class ParticleSystemData
		{
			[Token(Token = "0x4001FEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float rateOverTime;

			[Token(Token = "0x4001FED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float startSpeed;

			[Token(Token = "0x4001FEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool useAlphaGradient;

			[Token(Token = "0x4001FEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Color color;

			[Token(Token = "0x4001FF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Gradient gradient;

			[Token(Token = "0x60016A8")]
			[Address(RVA = "0x157E274", Offset = "0x157E274", VA = "0x157E274")]
			public ParticleSystemData(ParticleSystem particleSystem)
			{
			}
		}

		[Token(Token = "0x4001FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Rigidbody rigidBody;

		[Token(Token = "0x4001FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Collider mainCollider;

		[Token(Token = "0x4001FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ParticleSystem[] sternEffects;

		[Token(Token = "0x4001FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private WavesEmitter[] sternWaveEmitters;

		[Token(Token = "0x4001FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ShipBowWavesEmitter bowWavesEmitter;

		[Token(Token = "0x4001FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ParticleSystem[] bowSprayEmitters;

		[Token(Token = "0x4001FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float maxVelocity;

		[Token(Token = "0x4001FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ParticleSystemData[] propellerEffectsData;

		[Token(Token = "0x4001FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ParticleSystemData[] bowSprayEmittersData;

		[Token(Token = "0x4001FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float previousSternEffectsIntensity;

		[Token(Token = "0x4001FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float previousBowEffectsIntensity;

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0x154A7E0", Offset = "0x154A7E0", VA = "0x154A7E0")]
		private void Start()
		{
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0x154AA14", Offset = "0x154AA14", VA = "0x154AA14")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0x154AB10", Offset = "0x154AB10", VA = "0x154AB10")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0x154AB18", Offset = "0x154AB18", VA = "0x154AB18")]
		private void Update()
		{
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0x154ADDC", Offset = "0x154ADDC", VA = "0x154ADDC")]
		private static void SetEffectIntensity(ParticleSystem particleSystem, ParticleSystemData data, float intensity)
		{
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0x154ADB0", Offset = "0x154ADB0", VA = "0x154ADB0")]
		private static float ClampIntensity(float x)
		{
			return default(float);
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0x154AA1C", Offset = "0x154AA1C", VA = "0x154AA1C")]
		private void SetEnabled(bool enabled)
		{
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0x154AF48", Offset = "0x154AF48", VA = "0x154AF48")]
		public PlayWayWaterShip()
		{
		}
	}
	[Token(Token = "0x20003F0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x579420", Offset = "0x579420")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x579420", Offset = "0x579420")]
	[ExecuteInEditMode]
	public sealed class UnderwaterIME : MonoBehaviour, IWaterImageEffect
	{
		[Token(Token = "0x4001FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		private Shader underwaterMaskShader;

		[Token(Token = "0x4001FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[SerializeField]
		private Shader imeShader;

		[Token(Token = "0x4001FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		[SerializeField]
		private Shader noiseShader;

		[Token(Token = "0x4001FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		[SerializeField]
		private Shader composeUnderwaterMaskShader;

		[Token(Token = "0x4001FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Blur blur;

		[Token(Token = "0x4001FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool underwaterAudio;

		[Token(Token = "0x4001FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582814", Offset = "0x582814")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x582814", Offset = "0x582814")]
		private float cameraBlurScale;

		[Token(Token = "0x4001FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x582878", Offset = "0x582878")]
		[SerializeField]
		private float maskResolution;

		[Token(Token = "0x4001FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private bool renderInEditMode;

		[Token(Token = "0x4001FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material maskMaterial;

		[Token(Token = "0x4001FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material imeMaterial;

		[Token(Token = "0x4001FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material noiseMaterial;

		[Token(Token = "0x4001FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material composeUnderwaterMaskMaterial;

		[Token(Token = "0x4001FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Camera localCamera;

		[Token(Token = "0x4001FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private WaterCamera localWaterCamera;

		[Token(Token = "0x4002000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private AudioReverbFilter reverbFilter;

		[Token(Token = "0x4002001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private CommandBuffer maskCommandBuffer;

		[Token(Token = "0x4002002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float intensity;

		[Token(Token = "0x4002003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool renderUnderwaterMask;

		[Token(Token = "0x4002004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Water waterOverride;

		[Token(Token = "0x4002005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool hasWaterOverride;

		[Token(Token = "0x4002006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		private bool effectEnabled;

		[Token(Token = "0x4002007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int maskRT;

		[Token(Token = "0x4002008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int maskRT2;

		[Token(Token = "0x170002CD")]
		public Blur Blur
		{
			[Token(Token = "0x60016AA")]
			[Address(RVA = "0x15B58D4", Offset = "0x15B58D4", VA = "0x15B58D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CE")]
		public float Intensity
		{
			[Token(Token = "0x60016AB")]
			[Address(RVA = "0x15B58DC", Offset = "0x15B58DC", VA = "0x15B58DC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002CF")]
		public bool EffectEnabled
		{
			[Token(Token = "0x60016AC")]
			[Address(RVA = "0x15B58E4", Offset = "0x15B58E4", VA = "0x15B58E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016AD")]
			[Address(RVA = "0x15B58EC", Offset = "0x15B58EC", VA = "0x15B58EC")]
			set
			{
			}
		}

		[Token(Token = "0x170002D0")]
		public Water WaterOverride
		{
			[Token(Token = "0x60016AE")]
			[Address(RVA = "0x15B58F8", Offset = "0x15B58F8", VA = "0x15B58F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016AF")]
			[Address(RVA = "0x15B5900", Offset = "0x15B5900", VA = "0x15B5900")]
			set
			{
			}
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0x15B53CC", Offset = "0x15B53CC", VA = "0x15B53CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0x15B5B0C", Offset = "0x15B5B0C", VA = "0x15B5B0C", Slot = "4")]
		public void OnWaterCameraEnabled()
		{
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0x15B5C68", Offset = "0x15B5C68", VA = "0x15B5C68", Slot = "5")]
		public void OnWaterCameraPreCull()
		{
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0x15B6100", Offset = "0x15B6100", VA = "0x15B6100")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0x15B6114", Offset = "0x15B6114", VA = "0x15B6114")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0x15B56B8", Offset = "0x15B56B8", VA = "0x15B56B8")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0x15B6178", Offset = "0x15B6178", VA = "0x15B6178")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0x15B6868", Offset = "0x15B6868", VA = "0x15B6868")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0x15B617C", Offset = "0x15B617C", VA = "0x15B617C")]
		private void RenderUnderwaterMask()
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0x15B6B30", Offset = "0x15B6B30", VA = "0x15B6B30")]
		private void RenderDepthScatter(RenderTexture source, RenderTexture target)
		{
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0x15B6D68", Offset = "0x15B6D68", VA = "0x15B6D68")]
		private void RenderDistortions(RenderTexture source, RenderTexture target)
		{
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0x15B6F98", Offset = "0x15B6F98", VA = "0x15B6F98")]
		private void RenderDistortionMap(RenderTexture target)
		{
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0x15B5998", Offset = "0x15B5998", VA = "0x15B5998")]
		private void OnSubmersionStateChanged(WaterCamera waterCamera)
		{
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0x15B5EEC", Offset = "0x15B5EEC", VA = "0x15B5EEC")]
		private void SetEffectsIntensity(float intensity)
		{
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0x15B7108", Offset = "0x15B7108", VA = "0x15B7108")]
		public UnderwaterIME()
		{
		}
	}
	[Token(Token = "0x20003F1")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5794CC", Offset = "0x5794CC")]
	[ExecuteInEditMode]
	public class WaterDropsIME : MonoBehaviour, IWaterImageEffect
	{
		[Token(Token = "0x4002009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		private Shader waterDropsShader;

		[Token(Token = "0x400200A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x582904", Offset = "0x582904")]
		[SerializeField]
		private Texture2D normalMap;

		[Token(Token = "0x400200B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float intensity;

		[Token(Token = "0x400200C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x582960", Offset = "0x582960")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582960", Offset = "0x582960")]
		[SerializeField]
		private bool useBlur;

		[Token(Token = "0x400200D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float blurFadeSpeed;

		[Token(Token = "0x400200E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Blur blur;

		[Token(Token = "0x400200F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material overlayMaterial;

		[Token(Token = "0x4002010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTexture maskA;

		[Token(Token = "0x4002011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RenderTexture maskB;

		[Token(Token = "0x4002012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private WaterCamera waterCamera;

		[Token(Token = "0x4002013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private UnderwaterIME underwaterIME;

		[Token(Token = "0x4002014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float disableTime;

		[Token(Token = "0x4002015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float blurIntensity;

		[Token(Token = "0x4002016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool effectEnabled;

		[Token(Token = "0x170002D1")]
		public bool EffectEnabled
		{
			[Token(Token = "0x60016BF")]
			[Address(RVA = "0x16E098C", Offset = "0x16E098C", VA = "0x16E098C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016C0")]
			[Address(RVA = "0x16E0994", Offset = "0x16E0994", VA = "0x16E0994")]
			set
			{
			}
		}

		[Token(Token = "0x170002D2")]
		public float Intensity
		{
			[Token(Token = "0x60016C1")]
			[Address(RVA = "0x16E09A0", Offset = "0x16E09A0", VA = "0x16E09A0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016C2")]
			[Address(RVA = "0x16E09A8", Offset = "0x16E09A8", VA = "0x16E09A8")]
			set
			{
			}
		}

		[Token(Token = "0x170002D3")]
		public Texture2D NormalMap
		{
			[Token(Token = "0x60016C3")]
			[Address(RVA = "0x16E09B0", Offset = "0x16E09B0", VA = "0x16E09B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016C4")]
			[Address(RVA = "0x16E09B8", Offset = "0x16E09B8", VA = "0x16E09B8")]
			set
			{
			}
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0x16E080C", Offset = "0x16E080C", VA = "0x16E080C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0x16E08A8", Offset = "0x16E08A8", VA = "0x16E08A8")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0x16E0A88", Offset = "0x16E0A88", VA = "0x16E0A88")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0x16E0C34", Offset = "0x16E0C34", VA = "0x16E0C34")]
		private void CheckResources()
		{
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0x16E0E34", Offset = "0x16E0E34", VA = "0x16E0E34")]
		private static RenderTexture CreateMaskRT()
		{
			return null;
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0x16E0DFC", Offset = "0x16E0DFC", VA = "0x16E0DFC")]
		private void SwapMasks()
		{
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0x16E0F3C", Offset = "0x16E0F3C", VA = "0x16E0F3C", Slot = "4")]
		public void OnWaterCameraEnabled()
		{
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0x16E0F40", Offset = "0x16E0F40", VA = "0x16E0F40", Slot = "5")]
		public void OnWaterCameraPreCull()
		{
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0x16E106C", Offset = "0x16E106C", VA = "0x16E106C")]
		public WaterDropsIME()
		{
		}
	}
	[Token(Token = "0x20003F2")]
	public sealed class WaterShadowCastingLight : MonoBehaviour
	{
		[Token(Token = "0x4002017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CommandBuffer commandBuffer1;

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0x16F009C", Offset = "0x16F009C", VA = "0x16F009C")]
		private void Start()
		{
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0x16F026C", Offset = "0x16F026C", VA = "0x16F026C")]
		public WaterShadowCastingLight()
		{
		}
	}
	[Token(Token = "0x20003F3")]
	public sealed class WettableSurface : MonoBehaviour
	{
		[Token(Token = "0x20003F4")]
		public enum Mode
		{
			[Token(Token = "0x4002029")]
			TextureSpace,
			[Token(Token = "0x400202A")]
			NearCamera
		}

		[Serializable]
		[Token(Token = "0x20003F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579544", Offset = "0x579544")]
		private sealed class <>c
		{
			[Token(Token = "0x400202B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400202C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<MeshRenderer, IEnumerable<Material>> <>9__16_0;

			[Token(Token = "0x400202D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Terrain, Material> <>9__16_1;

			[Token(Token = "0x400202E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<MeshRenderer, IEnumerable<Material>> <>9__20_0;

			[Token(Token = "0x400202F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<Terrain, Material> <>9__20_1;

			[Token(Token = "0x60016D8")]
			[Address(RVA = "0x17044F0", Offset = "0x17044F0", VA = "0x17044F0")]
			public <>c()
			{
			}

			[Token(Token = "0x60016D9")]
			[Address(RVA = "0x17044F8", Offset = "0x17044F8", VA = "0x17044F8")]
			internal IEnumerable<Material> <Awake>b__16_0(MeshRenderer mr)
			{
				return null;
			}

			[Token(Token = "0x60016DA")]
			[Address(RVA = "0x1704514", Offset = "0x1704514", VA = "0x1704514")]
			internal Material <Awake>b__16_1(Terrain t)
			{
				return null;
			}

			[Token(Token = "0x60016DB")]
			[Address(RVA = "0x1704530", Offset = "0x1704530", VA = "0x1704530")]
			internal IEnumerable<Material> <OnValidate>b__20_0(MeshRenderer mr)
			{
				return null;
			}

			[Token(Token = "0x60016DC")]
			[Address(RVA = "0x170454C", Offset = "0x170454C", VA = "0x170454C")]
			internal Material <OnValidate>b__20_1(Terrain t)
			{
				return null;
			}
		}

		[Token(Token = "0x4002018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		private Shader wettableUtilShader;

		[Token(Token = "0x4002019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[SerializeField]
		private Shader wettableUtilNearShader;

		[Token(Token = "0x400201A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Water water;

		[Token(Token = "0x400201B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582A70", Offset = "0x582A70")]
		[SerializeField]
		private WaterCamera mainCamera;

		[Token(Token = "0x400201C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582ABC", Offset = "0x582ABC")]
		[SerializeField]
		private Mode mode;

		[Token(Token = "0x400201D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private int resolution;

		[Token(Token = "0x400201E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x582B18", Offset = "0x582B18")]
		[SerializeField]
		private MeshRenderer[] meshRenderers;

		[Token(Token = "0x400201F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Terrain[] terrains;

		[Token(Token = "0x4002020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MeshFilter[] meshFilters;

		[Token(Token = "0x4002021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material wettableUtilMaterial;

		[Token(Token = "0x4002022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RenderTexture wetnessMapA;

		[Token(Token = "0x4002023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RenderTexture wetnessMapB;

		[Token(Token = "0x4002024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Camera wettingCamera;

		[Token(Token = "0x4002025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material[] materials;

		[Token(Token = "0x4002026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool[] terrainDrawTrees;

		[Token(Token = "0x4002027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int[] terrainLayers;

		[Token(Token = "0x170002D4")]
		public WaterCamera MainCamera
		{
			[Token(Token = "0x60016D0")]
			[Address(RVA = "0x15D14F0", Offset = "0x15D14F0", VA = "0x15D14F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016D1")]
			[Address(RVA = "0x15D14F8", Offset = "0x15D14F8", VA = "0x15D14F8")]
			set
			{
			}
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0x15D06F0", Offset = "0x15D06F0", VA = "0x15D06F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0x15D0D0C", Offset = "0x15D0D0C", VA = "0x15D0D0C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0x15D1500", Offset = "0x15D1500", VA = "0x15D1500")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0x15D11BC", Offset = "0x15D11BC", VA = "0x15D11BC")]
		private Material[] InstantiateMaterials(Material[] materials)
		{
			return null;
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0x15D1FBC", Offset = "0x15D1FBC", VA = "0x15D1FBC")]
		private Camera GetWettingCamera()
		{
			return null;
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0x15D2220", Offset = "0x15D2220", VA = "0x15D2220")]
		public WettableSurface()
		{
		}
	}
	[Token(Token = "0x20003F6")]
	public class Foam
	{
		[Serializable]
		[Token(Token = "0x20003F7")]
		public class Data
		{
			[Token(Token = "0x4002047")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582B74", Offset = "0x582B74")]
			public float Supersampling;

			[Token(Token = "0x60016F3")]
			[Address(RVA = "0x15115CC", Offset = "0x15115CC", VA = "0x15115CC")]
			public Data()
			{
			}
		}

		[Token(Token = "0x20003F8")]
		private class CameraRenderData
		{
			[Token(Token = "0x4002048")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly int[] RenderFramePerLayer;

			[Token(Token = "0x4002049")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector2 LastSurfaceOffset;

			[Token(Token = "0x60016F4")]
			[Address(RVA = "0x151155C", Offset = "0x151155C", VA = "0x151155C")]
			public CameraRenderData()
			{
			}
		}

		[Token(Token = "0x4002030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Water water;

		[Token(Token = "0x4002031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly WindWaves windWaves;

		[Token(Token = "0x4002032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Data data;

		[Token(Token = "0x4002033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float foamIntensity;

		[Token(Token = "0x4002034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float foamThreshold;

		[Token(Token = "0x4002035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float foamFadingFactor;

		[Token(Token = "0x4002036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float foamShoreExtent;

		[Token(Token = "0x4002037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool foamIntensityOverriden;

		[Token(Token = "0x4002038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Shader localFoamSimulationShader;

		[Token(Token = "0x4002039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Shader globalFoamSimulationShader;

		[Token(Token = "0x400203A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RenderTexture foamMapA;

		[Token(Token = "0x400203B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RenderTexture foamMapB;

		[Token(Token = "0x400203C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RenderTexture[] displacementDeltaMaps;

		[Token(Token = "0x400203D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int resolution;

		[Token(Token = "0x400203E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool firstFrame;

		[Token(Token = "0x400203F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly DynamicWater overlays;

		[Token(Token = "0x4002040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly Material globalFoamSimulationMaterial;

		[Token(Token = "0x4002041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int foamParametersId;

		[Token(Token = "0x4002042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int foamShoreIntensityId;

		[Token(Token = "0x4002043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int foamIntensityId;

		[Token(Token = "0x4002044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int waterTileSizeInvSRTId;

		[Token(Token = "0x4002045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int[] displacementDeltaMapsIds;

		[Token(Token = "0x4002046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly Dictionary<WaterCamera, CameraRenderData> layerUpdateFrames;

		[Token(Token = "0x170002D5")]
		public float FoamIntensity
		{
			[Token(Token = "0x60016E0")]
			[Address(RVA = "0x7B45F4", Offset = "0x7B45F4", VA = "0x7B45F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016E1")]
			[Address(RVA = "0x7B45FC", Offset = "0x7B45FC", VA = "0x7B45FC")]
			set
			{
			}
		}

		[Token(Token = "0x170002D6")]
		public Texture FoamMap
		{
			[Token(Token = "0x60016E2")]
			[Address(RVA = "0x7B4834", Offset = "0x7B4834", VA = "0x7B4834")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0x7B3C3C", Offset = "0x7B3C3C", VA = "0x7B3C3C")]
		public Foam(Water water, Data data)
		{
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0x7B41EC", Offset = "0x7B41EC", VA = "0x7B41EC")]
		internal void Enable()
		{
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0x7B4528", Offset = "0x7B4528", VA = "0x7B4528")]
		internal void Disable()
		{
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0x7B483C", Offset = "0x7B483C", VA = "0x7B483C")]
		private void SetupFoamMaterials()
		{
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0x7B3E68", Offset = "0x7B3E68", VA = "0x7B3E68")]
		internal void Validate()
		{
		}

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0x7B49DC", Offset = "0x7B49DC", VA = "0x7B49DC")]
		internal void Destroy()
		{
		}

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0x7B4B00", Offset = "0x7B4B00", VA = "0x7B4B00")]
		internal void Update()
		{
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0x7B4D5C", Offset = "0x7B4D5C", VA = "0x7B4D5C")]
		private void CheckTilesFoamResources()
		{
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0x7B4E4C", Offset = "0x7B4E4C", VA = "0x7B4E4C")]
		private RenderTexture CreateRT(int depth, RenderTextureFormat format, RenderTextureReadWrite readWrite, FilterMode filterMode, TextureWrapMode wrapMode)
		{
			return null;
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0x7B4B1C", Offset = "0x7B4B1C", VA = "0x7B4B1C")]
		private void UpdateFoamTiled()
		{
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0x7B5034", Offset = "0x7B5034", VA = "0x7B5034")]
		private void OnResolutionChanged(WindWaves windWaves)
		{
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0x7B4FDC", Offset = "0x7B4FDC", VA = "0x7B4FDC")]
		private bool CheckPreresquisites()
		{
			return default(bool);
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0x7B42C4", Offset = "0x7B42C4", VA = "0x7B42C4")]
		private void OnProfilesChanged(Water water)
		{
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0x7B4FFC", Offset = "0x7B4FFC", VA = "0x7B4FFC")]
		private void SwapRenderTargets()
		{
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0x7B5080", Offset = "0x7B5080", VA = "0x7B5080")]
		public void RenderOverlays(DynamicWaterCameraData overlays)
		{
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0x7B560C", Offset = "0x7B560C", VA = "0x7B560C")]
		private RenderTexture[] GetDisplacementDeltaMaps()
		{
			return null;
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0x7B3FBC", Offset = "0x7B3FBC", VA = "0x7B3FBC")]
		private static void ComputeShaderIds()
		{
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0x7B5870", Offset = "0x7B5870", VA = "0x7B5870")]
		private static void OnCameraDestroyed(WaterCamera waterCamera)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003F9")]
	public class WaterCustomSurfaceMeshes
	{
		[Token(Token = "0x20003FA")]
		private struct Edge
		{
			[Token(Token = "0x400204E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int vertexIndex0;

			[Token(Token = "0x400204F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int vertexIndex1;

			[Token(Token = "0x4002050")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int faceIndex0;

			[Token(Token = "0x4002051")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int faceIndex1;
		}

		[Token(Token = "0x400204A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Mesh[] customMeshes;

		[Token(Token = "0x400204B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Water water;

		[Token(Token = "0x400204C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Mesh[] usedMeshes;

		[Token(Token = "0x400204D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Mesh[] volumeMeshes;

		[Token(Token = "0x170002D7")]
		public Mesh[] Meshes
		{
			[Token(Token = "0x60016F7")]
			[Address(RVA = "0x16DFAE4", Offset = "0x16DFAE4", VA = "0x16DFAE4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016F8")]
			[Address(RVA = "0x16DFAEC", Offset = "0x16DFAEC", VA = "0x16DFAEC")]
			set
			{
			}
		}

		[Token(Token = "0x170002D8")]
		private Mesh[] UsedMeshes
		{
			[Token(Token = "0x60016F9")]
			[Address(RVA = "0x16DFB2C", Offset = "0x16DFB2C", VA = "0x16DFB2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D9")]
		public Mesh[] VolumeMeshes
		{
			[Token(Token = "0x60016FA")]
			[Address(RVA = "0x16DFCA8", Offset = "0x16DFCA8", VA = "0x16DFCA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DA")]
		public bool Triangular
		{
			[Token(Token = "0x60016FB")]
			[Address(RVA = "0x16E021C", Offset = "0x16E021C", VA = "0x16E021C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0x16DFA4C", Offset = "0x16DFA4C", VA = "0x16DFA4C", Slot = "4")]
		internal virtual void OnEnable(Water water)
		{
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0x16DFA54", Offset = "0x16DFA54", VA = "0x16DFA54", Slot = "5")]
		internal virtual void OnDisable()
		{
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0x16E0298", Offset = "0x16E0298", VA = "0x16E0298")]
		public Mesh[] GetTransformedMeshes(Camera camera, [Out] Matrix4x4 matrix, bool volume)
		{
			return null;
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0x16DFA58", Offset = "0x16DFA58", VA = "0x16DFA58")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0x16DFE08", Offset = "0x16DFE08", VA = "0x16DFE08")]
		private Mesh CreateBoundaryMesh(Mesh sourceMesh)
		{
			return null;
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0x16E031C", Offset = "0x16E031C", VA = "0x16E031C")]
		private static Edge[] BuildManifoldEdges(Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0x16E046C", Offset = "0x16E046C", VA = "0x16E046C")]
		private static Edge[] BuildEdges(int vertexCount, int[] triangleArray)
		{
			return null;
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0x16E07FC", Offset = "0x16E07FC", VA = "0x16E07FC")]
		public WaterCustomSurfaceMeshes()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003FB")]
	public class WaterGeometry
	{
		[Token(Token = "0x20003FC")]
		public enum Type
		{
			[Token(Token = "0x4002062")]
			RadialGrid,
			[Token(Token = "0x4002063")]
			ProjectionGrid,
			[Token(Token = "0x4002064")]
			UniformGrid,
			[Token(Token = "0x4002065")]
			CustomMeshes
		}

		[Token(Token = "0x4002052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582BBC", Offset = "0x582BBC")]
		[SerializeField]
		private Type type;

		[Token(Token = "0x4002053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582C08", Offset = "0x582C08")]
		[SerializeField]
		private int baseVertexCount;

		[Token(Token = "0x4002054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582C54", Offset = "0x582C54")]
		[SerializeField]
		private int tesselatedBaseVertexCount;

		[Token(Token = "0x4002055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool adaptToResolution;

		[Token(Token = "0x4002056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private WaterRadialGrid radialGrid;

		[Token(Token = "0x4002057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private WaterProjectionGrid projectionGrid;

		[Token(Token = "0x4002058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private WaterUniformGrid uniformGrid;

		[Token(Token = "0x4002059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private WaterCustomSurfaceMeshes customSurfaceMeshes;

		[Token(Token = "0x400205A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x582CF0", Offset = "0x582CF0")]
		[SerializeField]
		private Mesh[] customMeshes;

		[Token(Token = "0x400205B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Water water;

		[Token(Token = "0x400205C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Type previousType;

		[Token(Token = "0x400205D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int previousTargetVertexCount;

		[Token(Token = "0x400205E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int thisSystemVertexCount;

		[Token(Token = "0x400205F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int frameCount;

		[Token(Token = "0x4002060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private WaterQuadGeometry quadGeometry;

		[Token(Token = "0x170002DB")]
		public Type GeometryType
		{
			[Token(Token = "0x6001705")]
			[Address(RVA = "0x16E1A04", Offset = "0x16E1A04", VA = "0x16E1A04")]
			get
			{
				return default(Type);
			}
		}

		[Token(Token = "0x170002DC")]
		public int VertexCount
		{
			[Token(Token = "0x6001706")]
			[Address(RVA = "0x16E1A0C", Offset = "0x16E1A0C", VA = "0x16E1A0C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002DD")]
		public int TesselatedBaseVertexCount
		{
			[Token(Token = "0x6001707")]
			[Address(RVA = "0x16E1A14", Offset = "0x16E1A14", VA = "0x16E1A14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002DE")]
		public bool AdaptToResolution
		{
			[Token(Token = "0x6001708")]
			[Address(RVA = "0x16E1A1C", Offset = "0x16E1A1C", VA = "0x16E1A1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002DF")]
		public bool Triangular
		{
			[Token(Token = "0x6001709")]
			[Address(RVA = "0x16E1A24", Offset = "0x16E1A24", VA = "0x16E1A24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002E0")]
		public WaterCustomSurfaceMeshes CustomSurfaceMeshes
		{
			[Token(Token = "0x600170A")]
			[Address(RVA = "0x16E1A58", Offset = "0x16E1A58", VA = "0x16E1A58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0x16E163C", Offset = "0x16E163C", VA = "0x16E163C")]
		internal void Start(Water water)
		{
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0x16E1644", Offset = "0x16E1644", VA = "0x16E1644")]
		internal void Enable()
		{
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0x16E1990", Offset = "0x16E1990", VA = "0x16E1990")]
		internal void Disable()
		{
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0x16E1A60", Offset = "0x16E1A60", VA = "0x16E1A60")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x58C58C", Offset = "0x58C58C")]
		public Mesh[] GetCustomMeshesDirect()
		{
			return null;
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0x16E1A80", Offset = "0x16E1A80", VA = "0x16E1A80")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x58C5C4", Offset = "0x58C5C4")]
		public void SetCustomMeshes(Mesh[] meshes)
		{
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0x16E1700", Offset = "0x16E1700", VA = "0x16E1700")]
		internal void Validate()
		{
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0x16E1CE4", Offset = "0x16E1CE4", VA = "0x16E1CE4")]
		internal void Update()
		{
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0x16E2044", Offset = "0x16E2044", VA = "0x16E2044")]
		public Mesh[] GetMeshes(WaterGeometryType geometryType, int vertexCount, bool volume)
		{
			return null;
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0x16E2198", Offset = "0x16E2198", VA = "0x16E2198")]
		public Mesh[] GetTransformedMeshes(Camera camera, [Out] Matrix4x4 matrix, WaterGeometryType geometryType, bool volume, int vertexCount = 0)
		{
			return null;
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0x16E22F0", Offset = "0x16E22F0", VA = "0x16E22F0")]
		public int ComputeVertexCountForCamera(Camera camera)
		{
			return default(int);
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0x16E1930", Offset = "0x16E1930", VA = "0x16E1930")]
		private void UpdateVertexCount()
		{
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0x16E2470", Offset = "0x16E2470", VA = "0x16E2470")]
		public WaterGeometry()
		{
		}
	}
	[Token(Token = "0x20003FD")]
	public enum WaterGeometryType
	{
		[Token(Token = "0x4002067")]
		Auto,
		[Token(Token = "0x4002068")]
		RadialGrid,
		[Token(Token = "0x4002069")]
		ProjectionGrid,
		[Token(Token = "0x400206A")]
		UniformGrid,
		[Token(Token = "0x400206B")]
		QuadGeometry
	}
	[Serializable]
	[Token(Token = "0x20003FE")]
	public abstract class WaterPrimitiveBase
	{
		[Token(Token = "0x20003FF")]
		protected class CachedMeshSet
		{
			[Token(Token = "0x400206F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Mesh[] meshes;

			[Token(Token = "0x4002070")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int lastFrameUsed;

			[Token(Token = "0x600171F")]
			[Address(RVA = "0x1704208", Offset = "0x1704208", VA = "0x1704208")]
			public CachedMeshSet(Mesh[] meshes)
			{
			}

			[Token(Token = "0x6001720")]
			[Address(RVA = "0x170424C", Offset = "0x170424C", VA = "0x170424C")]
			public void Update()
			{
			}
		}

		[Token(Token = "0x400206C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected Water water;

		[Token(Token = "0x400206D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Dictionary<int, CachedMeshSet> cache;

		[Token(Token = "0x400206E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<int> keysToRemove;

		[Token(Token = "0x6001714")]
		[Address(RVA = "0x16E1AA4", Offset = "0x16E1AA4", VA = "0x16E1AA4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0x16EAD40", Offset = "0x16EAD40", VA = "0x16EAD40", Slot = "4")]
		internal virtual void OnEnable(Water water)
		{
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0x16EAD48", Offset = "0x16EAD48", VA = "0x16EAD48", Slot = "5")]
		internal virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0x16EAD4C", Offset = "0x16EAD4C", VA = "0x16EAD4C", Slot = "6")]
		internal virtual void AddToMaterial(Water water)
		{
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0x16EAD50", Offset = "0x16EAD50", VA = "0x16EAD50", Slot = "7")]
		internal virtual void RemoveFromMaterial(Water water)
		{
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0x16EAD54", Offset = "0x16EAD54", VA = "0x16EAD54", Slot = "8")]
		public virtual Mesh[] GetTransformedMeshes(Camera camera, [Out] Matrix4x4 matrix, int vertexCount, bool volume)
		{
			return null;
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0x16E1D4C", Offset = "0x16E1D4C", VA = "0x16E1D4C")]
		internal void Update()
		{
		}

		[Token(Token = "0x600171B")]
		protected abstract Matrix4x4 GetMatrix(Camera camera);

		[Token(Token = "0x600171C")]
		protected abstract Mesh[] CreateMeshes(int vertexCount, bool volume);

		[Token(Token = "0x600171D")]
		[Address(RVA = "0x16EAF2C", Offset = "0x16EAF2C", VA = "0x16EAF2C")]
		protected Mesh CreateMesh(Vector3[] vertices, int[] indices, string name, bool triangular = false)
		{
			return null;
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0x16EB018", Offset = "0x16EB018", VA = "0x16EB018")]
		protected WaterPrimitiveBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000400")]
	[ExecuteInEditMode]
	public class WaterProjectionGrid : WaterPrimitiveBase
	{
		[Token(Token = "0x6001721")]
		[Address(RVA = "0x16EBA1C", Offset = "0x16EBA1C", VA = "0x16EBA1C", Slot = "4")]
		internal override void OnEnable(Water water)
		{
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0x16EBA54", Offset = "0x16EBA54", VA = "0x16EBA54", Slot = "6")]
		internal override void AddToMaterial(Water water)
		{
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0x16EBAB0", Offset = "0x16EBAB0", VA = "0x16EBAB0", Slot = "7")]
		internal override void RemoveFromMaterial(Water water)
		{
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0x16EBB0C", Offset = "0x16EBB0C", VA = "0x16EBB0C", Slot = "8")]
		public override Mesh[] GetTransformedMeshes(Camera camera, [Out] Matrix4x4 matrix, int vertexCount, bool volume)
		{
			return null;
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0x16EC2EC", Offset = "0x16EC2EC", VA = "0x16EC2EC", Slot = "10")]
		protected override Mesh[] CreateMeshes(int vertexCount, bool volume)
		{
			return null;
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0x16EBD58", Offset = "0x16EBD58", VA = "0x16EBD58")]
		private Mesh[] CreateMeshes(int verticesX, int verticesY)
		{
			return null;
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0x16EC32C", Offset = "0x16EC32C", VA = "0x16EC32C", Slot = "9")]
		protected override Matrix4x4 GetMatrix(Camera camera)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0x16E1AA0", Offset = "0x16E1AA0", VA = "0x16E1AA0")]
		public WaterProjectionGrid()
		{
		}
	}
	[Token(Token = "0x2000401")]
	public class WaterQuadGeometry : WaterPrimitiveBase
	{
		[Token(Token = "0x4002071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Mesh[] meshes;

		[Token(Token = "0x6001729")]
		[Address(RVA = "0x16EC36C", Offset = "0x16EC36C", VA = "0x16EC36C", Slot = "8")]
		public override Mesh[] GetTransformedMeshes(Camera camera, [Out] Matrix4x4 matrix, int vertexCount, bool volume)
		{
			return null;
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0x16EC4AC", Offset = "0x16EC4AC", VA = "0x16EC4AC", Slot = "9")]
		protected override Matrix4x4 GetMatrix(Camera camera)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0x16EC53C", Offset = "0x16EC53C", VA = "0x16EC53C", Slot = "10")]
		protected override Mesh[] CreateMeshes(int vertexCount, bool volume)
		{
			return null;
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0x16E24F8", Offset = "0x16E24F8", VA = "0x16E24F8")]
		public WaterQuadGeometry()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000402")]
	public class WaterRadialGrid : WaterPrimitiveBase
	{
		[Token(Token = "0x4002072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int[][] horizontalVerticesToVertexCount;

		[Token(Token = "0x600172D")]
		[Address(RVA = "0x16ECD74", Offset = "0x16ECD74", VA = "0x16ECD74")]
		static WaterRadialGrid()
		{
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0x16ED008", Offset = "0x16ED008", VA = "0x16ED008", Slot = "8")]
		public override Mesh[] GetTransformedMeshes(Camera camera, [Out] Matrix4x4 matrix, int vertexCount, bool volume)
		{
			return null;
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0x16EDD94", Offset = "0x16EDD94", VA = "0x16EDD94", Slot = "10")]
		protected override Mesh[] CreateMeshes(int vertexCount, bool volume)
		{
			return null;
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0x16ED5F0", Offset = "0x16ED5F0", VA = "0x16ED5F0")]
		protected Mesh[] CreateMeshes(int vertexCount, bool volume, int fovIndex)
		{
			return null;
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0x16ED314", Offset = "0x16ED314", VA = "0x16ED314")]
		protected Matrix4x4 GetMatrix(Camera camera, float fov)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0x16EDDD4", Offset = "0x16EDDD4", VA = "0x16EDDD4", Slot = "9")]
		protected override Matrix4x4 GetMatrix(Camera camera)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0x16E1A9C", Offset = "0x16E1A9C", VA = "0x16E1A9C")]
		public WaterRadialGrid()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000403")]
	public class WaterUniformGrid : WaterPrimitiveBase
	{
		[Token(Token = "0x6001734")]
		[Address(RVA = "0x16F27C8", Offset = "0x16F27C8", VA = "0x16F27C8", Slot = "10")]
		protected override Mesh[] CreateMeshes(int vertexCount, bool volume)
		{
			return null;
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0x16F2CF8", Offset = "0x16F2CF8", VA = "0x16F2CF8", Slot = "9")]
		protected override Matrix4x4 GetMatrix(Camera camera)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0x16F2F08", Offset = "0x16F2F08", VA = "0x16F2F08")]
		public WaterUniformGrid()
		{
		}
	}
	[Token(Token = "0x2000404")]
	public class FastMath
	{
		[Token(Token = "0x4002073")]
		private const float PIx2 = (float)Math.PI * 2f;

		[Token(Token = "0x4002074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly float[] sines;

		[Token(Token = "0x4002075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly float[] cosines;

		[Token(Token = "0x4002076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly float[] positiveTanhSqrt;

		[Token(Token = "0x4002077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly float[] positiveTanhSqrtNoZero;

		[Token(Token = "0x6001737")]
		[Address(RVA = "0x7AE970", Offset = "0x7AE970", VA = "0x7AE970")]
		static FastMath()
		{
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0x7AEA5C", Offset = "0x7AEA5C", VA = "0x7AEA5C")]
		private static void PrecomputeFastSines()
		{
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0x7AEC74", Offset = "0x7AEC74", VA = "0x7AEC74")]
		public static float Sin2048(float x)
		{
			return default(float);
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0x7AED38", Offset = "0x7AED38", VA = "0x7AED38")]
		public static float Cos2048(float x)
		{
			return default(float);
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0x7AEDFC", Offset = "0x7AEDFC", VA = "0x7AEDFC")]
		public static void SinCos2048(float x, [Out] float s, [Out] float c)
		{
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0x7AEEFC", Offset = "0x7AEEFC", VA = "0x7AEEFC")]
		public static float TanhSqrt2048Positive(float x)
		{
			return default(float);
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0x7AEFCC", Offset = "0x7AEFCC", VA = "0x7AEFCC")]
		public static float Pow2(float x)
		{
			return default(float);
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0x7AEFD4", Offset = "0x7AEFD4", VA = "0x7AEFD4")]
		public static float Pow4(float x)
		{
			return default(float);
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0x7AEFE0", Offset = "0x7AEFE0", VA = "0x7AEFE0")]
		public static int FloorToInt(float f)
		{
			return default(int);
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0x7AF010", Offset = "0x7AF010", VA = "0x7AF010")]
		public static float Angle180(float f)
		{
			return default(float);
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0x7AF098", Offset = "0x7AF098", VA = "0x7AF098")]
		public static float Angle360(float f)
		{
			return default(float);
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0x7AF0CC", Offset = "0x7AF0CC", VA = "0x7AF0CC")]
		public static void Normalize(Vector3 a, Vector3 b)
		{
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0x7AF1B4", Offset = "0x7AF1B4", VA = "0x7AF1B4")]
		public static void Normalize(Vector3 a)
		{
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0x7AF28C", Offset = "0x7AF28C", VA = "0x7AF28C")]
		public static float Magnitude(Vector3 a)
		{
			return default(float);
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0x7AF320", Offset = "0x7AF320", VA = "0x7AF320")]
		public static float TriangleArea(Vector3 a, Vector3 b, Vector3 c)
		{
			return default(float);
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0x7AF434", Offset = "0x7AF434", VA = "0x7AF434")]
		public static void MultiplyVector(Matrix4x4 matrix, Vector3 a, Vector3 b)
		{
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0x7AF4BC", Offset = "0x7AF4BC", VA = "0x7AF4BC")]
		public static void MultiplyPoint(Matrix4x4 matrix, Vector3 a, Vector3 b)
		{
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0x7AF55C", Offset = "0x7AF55C", VA = "0x7AF55C")]
		public static Vector2 ProjectOntoLine(Vector2 a, Vector2 b, Vector2 target)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0x7AF5D0", Offset = "0x7AF5D0", VA = "0x7AF5D0")]
		public static float DistanceToLine(Vector3 a, Vector3 b, Vector3 target)
		{
			return default(float);
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0x7AF698", Offset = "0x7AF698", VA = "0x7AF698")]
		public static float DistanceToSegment(Vector3 a, Vector3 b, Vector3 target)
		{
			return default(float);
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0x7AF828", Offset = "0x7AF828", VA = "0x7AF828")]
		public static float DistanceToSegment(Vector2 a, Vector2 b, Vector2 target)
		{
			return default(float);
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0x7AF960", Offset = "0x7AF960", VA = "0x7AF960")]
		public static Vector2 ClosestPointOnSegment(Vector2 a, Vector2 b, Vector2 target)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0x7AFA88", Offset = "0x7AFA88", VA = "0x7AFA88")]
		public static bool IsPointInsideTriangle(Vector2 a, Vector2 b, Vector2 c, Vector2 target)
		{
			return default(bool);
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0x7AFB0C", Offset = "0x7AFB0C", VA = "0x7AFB0C")]
		public static float Gauss01()
		{
			return default(float);
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0x7AFB64", Offset = "0x7AFB64", VA = "0x7AFB64")]
		public static float Gauss(float mean, float stdDev)
		{
			return default(float);
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0x7AFBD4", Offset = "0x7AFBD4", VA = "0x7AFBD4")]
		public static float Gauss01(float u1, float u2)
		{
			return default(float);
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0x7AFC14", Offset = "0x7AFC14", VA = "0x7AFC14")]
		public static float FracAdditive(float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0x7AFC3C", Offset = "0x7AFC3C", VA = "0x7AFC3C")]
		public static Vector2 Rotate(Vector2 vector, float angle)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0x7AFCE0", Offset = "0x7AFCE0", VA = "0x7AFCE0")]
		public static float Interpolate(float a0, float a1, float a2, float a3, float b0, float b1, float b2, float b3, float fx, float invFx, float fy, float invFy, float t)
		{
			return default(float);
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0x7AFD54", Offset = "0x7AFD54", VA = "0x7AFD54")]
		public static Vector2 Interpolate(Vector2 a0, Vector2 a1, Vector2 a2, Vector2 a3, Vector2 b0, Vector2 b1, Vector2 b2, Vector2 b3, float fx, float invFx, float fy, float invFy, float t)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0x7AFE7C", Offset = "0x7AFE7C", VA = "0x7AFE7C")]
		public static Vector2 Interpolate(Vector2 a0, Vector2 a1, Vector2 a2, Vector2 a3, Vector2 b0, Vector2 b1, Vector2 b2, Vector2 b3, float fx, float invFx, float fy, float invFy, float t)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0x7AFF34", Offset = "0x7AFF34", VA = "0x7AFF34")]
		public static Vector3 Interpolate(Vector3 a0, Vector3 a1, Vector3 a2, Vector3 a3, Vector3 b0, Vector3 b1, Vector3 b2, Vector3 b3, float fx, float invFx, float fy, float invFy, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0x7B0068", Offset = "0x7B0068", VA = "0x7B0068")]
		public static Vector4 Interpolate(Vector4 a0, Vector4 a1, Vector4 a2, Vector4 a3, Vector4 b0, Vector4 b1, Vector4 b2, Vector4 b3, float fx, float invFx, float fy, float invFy, float t)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0x7B028C", Offset = "0x7B028C", VA = "0x7B028C")]
		public static Vector4 Interpolate(Vector4 a0, Vector4 a1, Vector4 a2, Vector4 a3, Vector4 b0, Vector4 b1, Vector4 b2, Vector4 b3, float fx, float invFx, float fy, float invFy, float t)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0x7B08A8", Offset = "0x7B08A8", VA = "0x7B08A8")]
		public FastMath()
		{
		}
	}
	[Token(Token = "0x2000405")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x579564", Offset = "0x579564")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x579564", Offset = "0x579564")]
	public class NetworkWater : NetworkBehaviour
	{
		[Token(Token = "0x4002078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SyncVar]
		private float time;

		[Token(Token = "0x4002079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Water water;

		[Token(Token = "0x170002E1")]
		public float Networktime
		{
			[Token(Token = "0x600175E")]
			[Address(RVA = "0x15B1CE8", Offset = "0x15B1CE8", VA = "0x15B1CE8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600175F")]
			[Address(RVA = "0x15B1C0C", Offset = "0x15B1C0C", VA = "0x15B1C0C")]
			[param: In]
			set
			{
			}
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0x15B1AD8", Offset = "0x15B1AD8", VA = "0x15B1AD8")]
		private void Start()
		{
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0x15B1BA4", Offset = "0x15B1BA4", VA = "0x15B1BA4")]
		private void Update()
		{
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0x15B1C78", Offset = "0x15B1C78", VA = "0x15B1C78")]
		public NetworkWater()
		{
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0x15B1CE4", Offset = "0x15B1CE4", VA = "0x15B1CE4")]
		private void UNetVersion()
		{
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0x15B1CF0", Offset = "0x15B1CF0", VA = "0x15B1CF0", Slot = "8")]
		public override bool OnSerialize(NetworkWriter writer, bool forceAll)
		{
			return default(bool);
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0x15B1D64", Offset = "0x15B1D64", VA = "0x15B1D64", Slot = "9")]
		public override void OnDeserialize(NetworkReader reader, bool initialState)
		{
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0x15B1DB0", Offset = "0x15B1DB0", VA = "0x15B1DB0", Slot = "10")]
		public override void PreStartClient()
		{
		}
	}
	[Token(Token = "0x2000406")]
	public sealed class CenterOfMass : MonoBehaviour
	{
		[Token(Token = "0x6001763")]
		[Address(RVA = "0x850F28", Offset = "0x850F28", VA = "0x850F28")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0x850F2C", Offset = "0x850F2C", VA = "0x850F2C")]
		public void Apply()
		{
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0x85104C", Offset = "0x85104C", VA = "0x85104C")]
		public CenterOfMass()
		{
		}
	}
	[Token(Token = "0x2000407")]
	public static class ColliderExtensions
	{
		[Token(Token = "0x6001766")]
		[Address(RVA = "0x853FD0", Offset = "0x853FD0", VA = "0x853FD0")]
		public static float ComputeVolume(this Collider that)
		{
			return default(float);
		}

		[Token(Token = "0x6001767")]
		[Address(RVA = "0x854168", Offset = "0x854168", VA = "0x854168")]
		public static float ComputeVolume(this BoxCollider that)
		{
			return default(float);
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0x8541DC", Offset = "0x8541DC", VA = "0x8541DC")]
		public static float ComputeVolume(this SphereCollider that)
		{
			return default(float);
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0x85424C", Offset = "0x85424C", VA = "0x85424C")]
		public static float ComputeVolume(this MeshCollider that)
		{
			return default(float);
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0x85444C", Offset = "0x85444C", VA = "0x85444C")]
		public static float ComputeVolume(this CapsuleCollider that)
		{
			return default(float);
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0x8544EC", Offset = "0x8544EC", VA = "0x8544EC")]
		public static float SignedVolumeOfTriangle(Vector3 p1, Vector3 p2, Vector3 p3)
		{
			return default(float);
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0x854548", Offset = "0x854548", VA = "0x854548")]
		public static float ComputeArea(this Collider that)
		{
			return default(float);
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0x8546E0", Offset = "0x8546E0", VA = "0x8546E0")]
		public static float ComputeArea(this MeshCollider that)
		{
			return default(float);
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0x8548A0", Offset = "0x8548A0", VA = "0x8548A0")]
		public static float ComputeArea(this BoxCollider that)
		{
			return default(float);
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0x854924", Offset = "0x854924", VA = "0x854924")]
		public static float ComputeArea(this SphereCollider that)
		{
			return default(float);
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0x8549AC", Offset = "0x8549AC", VA = "0x8549AC")]
		public static float ComputeArea(this CapsuleCollider that)
		{
			return default(float);
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0x854AC4", Offset = "0x854AC4", VA = "0x854AC4")]
		public static Vector3 RandomPoint(this Collider that)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0x854C5C", Offset = "0x854C5C", VA = "0x854C5C")]
		public static Vector3 RandomPoint(this MeshCollider that)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0x854DA4", Offset = "0x854DA4", VA = "0x854DA4")]
		public static Vector3 RandomPoint(this BoxCollider that)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0x854E64", Offset = "0x854E64", VA = "0x854E64")]
		public static Vector3 RandomPoint(this CapsuleCollider that)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0x854F88", Offset = "0x854F88", VA = "0x854F88")]
		public static Vector3 RandomPoint(this SphereCollider that)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0x855190", Offset = "0x855190", VA = "0x855190")]
		public static Vector3 RandomPointInSphere(float radius)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0x8550EC", Offset = "0x8550EC", VA = "0x8550EC")]
		public static Vector2 RandomPointInCircle(float radius)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0x85524C", Offset = "0x85524C", VA = "0x85524C")]
		public static void GetLocalMinMax(Collider collider, [Out] Vector3 min, [Out] Vector3 max)
		{
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0x854FA8", Offset = "0x854FA8", VA = "0x854FA8")]
		public static bool IsPointInside(this Collider convex, Vector3 point)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000408")]
	public class FastWaterPhysics : MonoBehaviour
	{
		[Token(Token = "0x400207A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Water water;

		[Token(Token = "0x400207B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582D48", Offset = "0x582D48")]
		[SerializeField]
		private float buoyancyIntensity;

		[Token(Token = "0x400207C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x582D94", Offset = "0x582D94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582D94", Offset = "0x582D94")]
		[SerializeField]
		private float dragCoefficient;

		[Token(Token = "0x400207D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582DF8", Offset = "0x582DF8")]
		[SerializeField]
		private float flowIntensity;

		[Token(Token = "0x400207E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody rigidBody;

		[Token(Token = "0x400207F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Collider localCollider;

		[Token(Token = "0x4002080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WaterSample sample;

		[Token(Token = "0x4002081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float lastPositionX;

		[Token(Token = "0x4002082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float lastPositionZ;

		[Token(Token = "0x4002083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 buoyancyPart;

		[Token(Token = "0x4002084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float dragPart;

		[Token(Token = "0x4002085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float flowPart;

		[Token(Token = "0x4002086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float volume;

		[Token(Token = "0x4002087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float area;

		[Token(Token = "0x4002088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool useCheapDrag;

		[Token(Token = "0x4002089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		private bool useCheapFlow;

		[Token(Token = "0x400208A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Ray rayUp;

		[Token(Token = "0x400208B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Ray rayDown;

		[Token(Token = "0x600177A")]
		[Address(RVA = "0x7B08B0", Offset = "0x7B08B0", VA = "0x7B08B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0x7B09C8", Offset = "0x7B09C8", VA = "0x7B09C8")]
		private void Start()
		{
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0x7B0B90", Offset = "0x7B0B90", VA = "0x7B0B90")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0x7B0D8C", Offset = "0x7B0D8C", VA = "0x7B0D8C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0x7B0CB8", Offset = "0x7B0CB8", VA = "0x7B0CB8")]
		private void PrecomputeBuoyancy()
		{
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0x7B0D14", Offset = "0x7B0D14", VA = "0x7B0D14")]
		private void PrecomputeDrag()
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0x7B0D5C", Offset = "0x7B0D5C", VA = "0x7B0D5C")]
		private void PrecomputeFlow()
		{
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0x7B1290", Offset = "0x7B1290", VA = "0x7B1290")]
		public FastWaterPhysics()
		{
		}
	}
	[Token(Token = "0x2000409")]
	public enum SubmersionState
	{
		[Token(Token = "0x400208D")]
		None,
		[Token(Token = "0x400208E")]
		Partial,
		[Token(Token = "0x400208F")]
		Full
	}
	[Token(Token = "0x200040A")]
	public class WaterFloat : MonoBehaviour
	{
		[Token(Token = "0x200040B")]
		public enum DisplacementMode
		{
			[Token(Token = "0x4002097")]
			Height,
			[Token(Token = "0x4002098")]
			Displacement
		}

		[Token(Token = "0x4002090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float heightBonus;

		[Token(Token = "0x4002091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x582E54", Offset = "0x582E54")]
		[SerializeField]
		private float precision;

		[Token(Token = "0x4002092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DisplacementMode displacementMode;

		[Token(Token = "0x4002093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaterSample sample;

		[Token(Token = "0x4002094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 initialPosition;

		[Token(Token = "0x4002095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 previousPosition;

		[Token(Token = "0x6001782")]
		[Address(RVA = "0x16E12F0", Offset = "0x16E12F0", VA = "0x16E12F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0x16E1330", Offset = "0x16E1330", VA = "0x16E1330")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0x16E1400", Offset = "0x16E1400", VA = "0x16E1400")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0x16E1614", Offset = "0x16E1614", VA = "0x16E1614")]
		public WaterFloat()
		{
		}
	}
	[Token(Token = "0x200040C")]
	public sealed class WaterPhysics : MonoBehaviour
	{
		[Token(Token = "0x200040D")]
		private struct NormalMatch
		{
			[Token(Token = "0x40020BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly ushort indexA;

			[Token(Token = "0x40020BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
			public readonly ushort indexB;

			[Token(Token = "0x40020C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float match;

			[Token(Token = "0x60017A7")]
			[Address(RVA = "0x17041F8", Offset = "0x17041F8", VA = "0x17041F8")]
			public NormalMatch(ushort indexA, ushort indexB, float match)
			{
			}
		}

		[Token(Token = "0x4002099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x582EA8", Offset = "0x582EA8")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582EA8", Offset = "0x582EA8")]
		private int sampleCount;

		[Token(Token = "0x400209A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x582F0C", Offset = "0x582F0C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582F0C", Offset = "0x582F0C")]
		[SerializeField]
		private float dragCoefficient;

		[Token(Token = "0x400209B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x582F70", Offset = "0x582F70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582F70", Offset = "0x582F70")]
		[SerializeField]
		private float precision;

		[Token(Token = "0x400209C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582FD4", Offset = "0x582FD4")]
		[SerializeField]
		private float buoyancyIntensity;

		[Token(Token = "0x400209D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x583020", Offset = "0x583020")]
		[SerializeField]
		private float flowIntensity;

		[Token(Token = "0x400209E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58306C", Offset = "0x58306C")]
		[SerializeField]
		private bool useImprovedDragAndFlowForces;

		[Token(Token = "0x400209F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3[] cachedSamplePositions;

		[Token(Token = "0x40020A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int cachedSampleIndex;

		[Token(Token = "0x40020A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int cachedSampleCount;

		[Token(Token = "0x40020A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Collider localCollider;

		[Token(Token = "0x40020A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Rigidbody rigidBody;

		[Token(Token = "0x40020A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float volume;

		[Token(Token = "0x40020A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float area;

		[Token(Token = "0x40020A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float totalArea;

		[Token(Token = "0x40020A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private WaterSample[] samples;

		[Token(Token = "0x40020A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float numSamplesInv;

		[Token(Token = "0x40020A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 buoyancyPart;

		[Token(Token = "0x40020AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 improvedBuoyancyPart;

		[Token(Token = "0x40020AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float dragPart;

		[Token(Token = "0x40020AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float improvedDragPart;

		[Token(Token = "0x40020AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float flowPart;

		[Token(Token = "0x40020AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float improvedFlowPart;

		[Token(Token = "0x40020AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float averageWaterElevation;

		[Token(Token = "0x40020B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool useCheapDrag;

		[Token(Token = "0x40020B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		private bool useCheapFlow;

		[Token(Token = "0x40020B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Water waterOverride;

		[Token(Token = "0x40020B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private WaterVolumeProbe waterProbe;

		[Token(Token = "0x40020B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float lastPositionX;

		[Token(Token = "0x40020B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float lastPositionZ;

		[Token(Token = "0x40020B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3[] dragNormals;

		[Token(Token = "0x40020B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector3[] dragCenters;

		[Token(Token = "0x40020B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3[] dragVertices;

		[Token(Token = "0x40020B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float[] polygonVolumes;

		[Token(Token = "0x40020BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float[] dragAreas;

		[Token(Token = "0x40020BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private WaterSample[] improvedDragSamples;

		[Token(Token = "0x40020BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Ray rayUp;

		[Token(Token = "0x40020BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Ray rayDown;

		[Token(Token = "0x170002E2")]
		public Water AffectingWater
		{
			[Token(Token = "0x6001787")]
			[Address(RVA = "0x16E8C74", Offset = "0x16E8C74", VA = "0x16E8C74")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001788")]
			[Address(RVA = "0x16E8C90", Offset = "0x16E8C90", VA = "0x16E8C90")]
			set
			{
			}
		}

		[Token(Token = "0x170002E3")]
		public float BuoyancyIntensity
		{
			[Token(Token = "0x6001789")]
			[Address(RVA = "0x16E9168", Offset = "0x16E9168", VA = "0x16E9168")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600178A")]
			[Address(RVA = "0x16E9170", Offset = "0x16E9170", VA = "0x16E9170")]
			set
			{
			}
		}

		[Token(Token = "0x170002E4")]
		public float DragCoefficient
		{
			[Token(Token = "0x600178B")]
			[Address(RVA = "0x16E92E4", Offset = "0x16E92E4", VA = "0x16E92E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600178C")]
			[Address(RVA = "0x16E92EC", Offset = "0x16E92EC", VA = "0x16E92EC")]
			set
			{
			}
		}

		[Token(Token = "0x170002E5")]
		public float FlowIntensity
		{
			[Token(Token = "0x600178D")]
			[Address(RVA = "0x16E9434", Offset = "0x16E9434", VA = "0x16E9434")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600178E")]
			[Address(RVA = "0x16E943C", Offset = "0x16E943C", VA = "0x16E943C")]
			set
			{
			}
		}

		[Token(Token = "0x170002E6")]
		public float AverageWaterElevation
		{
			[Token(Token = "0x600178F")]
			[Address(RVA = "0x16E9588", Offset = "0x16E9588", VA = "0x16E9588")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002E7")]
		public float Volume
		{
			[Token(Token = "0x6001790")]
			[Address(RVA = "0x16E9590", Offset = "0x16E9590", VA = "0x16E9590")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0x16E7CFC", Offset = "0x16E7CFC", VA = "0x16E7CFC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0x16E9598", Offset = "0x16E9598", VA = "0x16E9598")]
		public float GetTotalBuoyancy(float fluidDensity = 999.8f)
		{
			return default(float);
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0x16E961C", Offset = "0x16E961C", VA = "0x16E961C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0x16E96AC", Offset = "0x16E96AC", VA = "0x16E96AC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0x16E7FA4", Offset = "0x16E7FA4", VA = "0x16E7FA4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0x16E98E4", Offset = "0x16E98E4", VA = "0x16E98E4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0x16E9EDC", Offset = "0x16E9EDC", VA = "0x16E9EDC")]
		private void SimpleFixedUpdate()
		{
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0x16E98F4", Offset = "0x16E98F4", VA = "0x16E98F4")]
		private void ImprovedFixedUpdate()
		{
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0x16EA6E8", Offset = "0x16EA6E8", VA = "0x16EA6E8")]
		private static float SingleComponentTransform(Vector3 point, Vector4 row)
		{
			return default(float);
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0x16E8E18", Offset = "0x16E8E18", VA = "0x16E8E18")]
		private void CreateWaterProbe()
		{
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0x16E9000", Offset = "0x16E9000", VA = "0x16E9000")]
		private void DestroyWaterProbe()
		{
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0x16E90B4", Offset = "0x16E90B4", VA = "0x16E90B4")]
		private void OnWaterEnter()
		{
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0x16E8D78", Offset = "0x16E8D78", VA = "0x16E8D78")]
		private void OnWaterLeave()
		{
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0x16EA9E8", Offset = "0x16EA9E8", VA = "0x16EA9E8")]
		private bool ValidateForEditor()
		{
			return default(bool);
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0x16E8410", Offset = "0x16E8410", VA = "0x16E8410")]
		private void PrecomputeSamples()
		{
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0x16E869C", Offset = "0x16E869C", VA = "0x16E869C")]
		private void PrecomputeImprovedDrag()
		{
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0x16E96D0", Offset = "0x16E96D0", VA = "0x16E96D0")]
		private void UpdateTotalArea()
		{
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0x16EA718", Offset = "0x16EA718", VA = "0x16EA718")]
		private void CreateWaterSamplers()
		{
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0x16E9228", Offset = "0x16E9228", VA = "0x16E9228")]
		private void PrecomputeBuoyancy()
		{
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0x16E93A4", Offset = "0x16E93A4", VA = "0x16E93A4")]
		private void PrecomputeDrag()
		{
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0x16E9530", Offset = "0x16E9530", VA = "0x16E9530")]
		private void PrecomputeFlow()
		{
		}

		[Token(Token = "0x60017A5")]
		private static void Shuffle<T>(T[] array)
		{
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0x16EACC4", Offset = "0x16EACC4", VA = "0x16EACC4")]
		public WaterPhysics()
		{
		}
	}
	[Token(Token = "0x200040E")]
	public class PlanarReflection
	{
		[Serializable]
		[Token(Token = "0x200040F")]
		public class Data
		{
			[Token(Token = "0x40020CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LayerMask ReflectionMask;

			[Token(Token = "0x40020CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool ReflectSkybox;

			[Token(Token = "0x40020CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
			public bool RenderShadows;

			[Token(Token = "0x40020D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5830B8", Offset = "0x5830B8")]
			public float Resolution;

			[Token(Token = "0x40020D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5830D0", Offset = "0x5830D0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5830D0", Offset = "0x5830D0")]
			public float RetinaResolution;

			[Token(Token = "0x60017B9")]
			[Address(RVA = "0x157E22C", Offset = "0x157E22C", VA = "0x157E22C")]
			public Data()
			{
			}
		}

		[Token(Token = "0x40020C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Data data;

		[Token(Token = "0x40020C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Water water;

		[Token(Token = "0x40020C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly bool systemSupportsHDR;

		[Token(Token = "0x40020C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Dictionary<Camera, TemporaryRenderTexture> temporaryTargets;

		[Token(Token = "0x40020C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Camera reflectionCamera;

		[Token(Token = "0x40020C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TemporaryRenderTexture currentTarget;

		[Token(Token = "0x40020C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float finalResolutionMultiplier;

		[Token(Token = "0x40020C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool renderPlanarReflections;

		[Token(Token = "0x40020C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material utilitiesMaterial;

		[Token(Token = "0x40020CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Shader utilitiesShader;

		[Token(Token = "0x40020CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int reflectionTexProperty;

		[Token(Token = "0x40020CC")]
		private const float ClipPlaneOffset = 0.07f;

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0x1548D90", Offset = "0x1548D90", VA = "0x1548D90")]
		public PlanarReflection(Water water, Data data)
		{
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0x1548F50", Offset = "0x1548F50", VA = "0x1548F50")]
		internal void Validate()
		{
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0x15493E8", Offset = "0x15493E8", VA = "0x15493E8")]
		internal void Destroy()
		{
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0x15493EC", Offset = "0x15493EC", VA = "0x15493EC")]
		internal void Update()
		{
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0x15493F0", Offset = "0x15493F0", VA = "0x15493F0")]
		public void OnWaterRender(Camera camera)
		{
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0x1549F60", Offset = "0x1549F60", VA = "0x1549F60")]
		public void OnWaterPostRender(Camera camera)
		{
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0x15494E0", Offset = "0x15494E0", VA = "0x15494E0")]
		private void RenderReflection(Camera camera)
		{
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0x1549D18", Offset = "0x1549D18", VA = "0x1549D18")]
		private void UpdateRenderProperties()
		{
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0x154A010", Offset = "0x154A010", VA = "0x154A010")]
		private void CreateReflectionCamera()
		{
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0x1549278", Offset = "0x1549278", VA = "0x1549278")]
		private bool FindReflectionCamera()
		{
			return default(bool);
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0x1549378", Offset = "0x1549378", VA = "0x1549378")]
		private void ValidateReflectionCamera()
		{
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0x154A2C4", Offset = "0x154A2C4", VA = "0x154A2C4")]
		private static Matrix4x4 CalculateReflectionMatrix(Matrix4x4 reflectionMat, Vector4 plane)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0x154A368", Offset = "0x154A368", VA = "0x154A368")]
		private static Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
		{
			return default(Vector4);
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0x154A49C", Offset = "0x154A49C", VA = "0x154A49C")]
		private static Matrix4x4 CalculateObliqueMatrix(Matrix4x4 projection, Vector4 clipPlane)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0x154A14C", Offset = "0x154A14C", VA = "0x154A14C")]
		private TemporaryRenderTexture GetRenderTexture(int width, int height)
		{
			return default(TemporaryRenderTexture);
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0x1549190", Offset = "0x1549190", VA = "0x1549190")]
		private void ClearRenderTextures()
		{
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0x1549108", Offset = "0x1549108", VA = "0x1549108")]
		private void OnProfilesChanged(Water water)
		{
		}
	}
	[Token(Token = "0x2000410")]
	public class WaterProfile : ScriptableObject
	{
		[Token(Token = "0x2000411")]
		public enum WaterSpectrumType
		{
			[Token(Token = "0x4002110")]
			Phillips,
			[Token(Token = "0x4002111")]
			Unified
		}

		[Token(Token = "0x40020D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WaterSpectrumType spectrumType;

		[Token(Token = "0x40020D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float windSpeed;

		[Token(Token = "0x40020D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x583144", Offset = "0x583144")]
		[SerializeField]
		private float tileSize;

		[Token(Token = "0x40020D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float tileScale;

		[Token(Token = "0x40020D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5831A0", Offset = "0x5831A0")]
		[SerializeField]
		private float wavesAmplitude;

		[Token(Token = "0x40020D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float wavesFrequencyScale;

		[Token(Token = "0x40020D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5831FC", Offset = "0x5831FC")]
		[SerializeField]
		private float horizontalDisplacementScale;

		[Token(Token = "0x40020D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float phillipsCutoffFactor;

		[Token(Token = "0x40020DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float gravity;

		[Token(Token = "0x40020DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58325C", Offset = "0x58325C")]
		[SerializeField]
		private float fetch;

		[Token(Token = "0x40020DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5832A8", Offset = "0x5832A8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5832A8", Offset = "0x5832A8")]
		[SerializeField]
		private float directionality;

		[Token(Token = "0x40020DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x58330C", Offset = "0x58330C")]
		[SerializeField]
		private Color absorptionColor;

		[Token(Token = "0x40020DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private bool customUnderwaterAbsorptionColor;

		[Token(Token = "0x40020DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58336C", Offset = "0x58336C")]
		[SerializeField]
		private Gradient absorptionColorByDepth;

		[Token(Token = "0x40020E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Gradient absorptionColorByDepthFlatGradient;

		[Token(Token = "0x40020E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x5833C8", Offset = "0x5833C8")]
		[SerializeField]
		private Color diffuseColor;

		[Token(Token = "0x40020E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x583418", Offset = "0x583418")]
		[SerializeField]
		private Color specularColor;

		[Token(Token = "0x40020E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x583454", Offset = "0x583454")]
		[SerializeField]
		private Color depthColor;

		[Token(Token = "0x40020E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x583490", Offset = "0x583490")]
		[SerializeField]
		private Color emissionColor;

		[Token(Token = "0x40020E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x5834CC", Offset = "0x5834CC")]
		[SerializeField]
		private Color reflectionColor;

		[Token(Token = "0x40020E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x583508", Offset = "0x583508")]
		[SerializeField]
		private float smoothness;

		[Token(Token = "0x40020E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		private bool customAmbientSmoothness;

		[Token(Token = "0x40020E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x583558", Offset = "0x583558")]
		[SerializeField]
		private float ambientSmoothness;

		[Token(Token = "0x40020E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x583598", Offset = "0x583598")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x583598", Offset = "0x583598")]
		[SerializeField]
		private float isotropicScatteringIntensity;

		[Token(Token = "0x40020EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5835FC", Offset = "0x5835FC")]
		[SerializeField]
		private float forwardScatteringIntensity;

		[Token(Token = "0x40020EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58363C", Offset = "0x58363C")]
		[SerializeField]
		private float subsurfaceScatteringContrast;

		[Token(Token = "0x40020EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x58367C", Offset = "0x58367C")]
		[SerializeField]
		private Color subsurfaceScatteringShoreColor;

		[Token(Token = "0x40020ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5836CC", Offset = "0x5836CC")]
		[SerializeField]
		private float refractionDistortion;

		[Token(Token = "0x40020EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private float fresnelBias;

		[Token(Token = "0x40020EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58371C", Offset = "0x58371C")]
		[SerializeField]
		private float detailFadeDistance;

		[Token(Token = "0x40020F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58375C", Offset = "0x58375C")]
		[SerializeField]
		private float displacementNormalsIntensity;

		[Token(Token = "0x40020F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5837A0", Offset = "0x5837A0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5837A0", Offset = "0x5837A0")]
		[SerializeField]
		private float planarReflectionIntensity;

		[Token(Token = "0x40020F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x583804", Offset = "0x583804")]
		[SerializeField]
		private float planarReflectionFlatten;

		[Token(Token = "0x40020F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x583844", Offset = "0x583844")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x583844", Offset = "0x583844")]
		[SerializeField]
		private float planarReflectionVerticalOffset;

		[Token(Token = "0x40020F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[SerializeField]
		private float edgeBlendFactor;

		[Token(Token = "0x40020F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private float directionalWrapSSS;

		[Token(Token = "0x40020F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[SerializeField]
		private float pointWrapSSS;

		[Token(Token = "0x40020F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5838DC", Offset = "0x5838DC")]
		[SerializeField]
		private float density;

		[Token(Token = "0x40020F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x583928", Offset = "0x583928")]
		[SerializeField]
		private float underwaterBlurSize;

		[Token(Token = "0x40020F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58396C", Offset = "0x58396C")]
		[SerializeField]
		private float underwaterLightFadeScale;

		[Token(Token = "0x40020FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5839AC", Offset = "0x5839AC")]
		[SerializeField]
		private float underwaterDistortionsIntensity;

		[Token(Token = "0x40020FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5839F0", Offset = "0x5839F0")]
		[SerializeField]
		private float underwaterDistortionAnimationSpeed;

		[Token(Token = "0x40020FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x583A34", Offset = "0x583A34")]
		[SerializeField]
		private float dynamicSmoothnessIntensity;

		[Token(Token = "0x40020FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private NormalMapAnimation normalMapAnimation1;

		[Token(Token = "0x40020FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[SerializeField]
		private NormalMapAnimation normalMapAnimation2;

		[Token(Token = "0x40020FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private Texture2D normalMap;

		[Token(Token = "0x4002100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private float foamIntensity;

		[Token(Token = "0x4002101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[SerializeField]
		private float foamThreshold;

		[Token(Token = "0x4002102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x583AC8", Offset = "0x583AC8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x583AC8", Offset = "0x583AC8")]
		[SerializeField]
		private float foamFadingFactor;

		[Token(Token = "0x4002103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x583B2C", Offset = "0x583B2C")]
		[SerializeField]
		private float foamShoreIntensity;

		[Token(Token = "0x4002104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x583B6C", Offset = "0x583B6C")]
		[SerializeField]
		private float foamShoreExtent;

		[Token(Token = "0x4002105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[SerializeField]
		private float foamNormalScale;

		[Token(Token = "0x4002106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x583BBC", Offset = "0x583BBC")]
		[SerializeField]
		private Color foamDiffuseColor;

		[Token(Token = "0x4002107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x583BF8", Offset = "0x583BF8")]
		[SerializeField]
		private Color foamSpecularColor;

		[Token(Token = "0x4002108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x583C44", Offset = "0x583C44")]
		[SerializeField]
		private float sprayThreshold;

		[Token(Token = "0x4002109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x583C84", Offset = "0x583C84")]
		[SerializeField]
		private float spraySkipRatio;

		[Token(Token = "0x400210A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x583CC8", Offset = "0x583CC8")]
		[SerializeField]
		private float spraySize;

		[Token(Token = "0x400210B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private Texture2D foamDiffuseMap;

		[Token(Token = "0x400210C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		private Texture2D foamNormalMap;

		[Token(Token = "0x400210D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private Vector2 foamTiling;

		[Token(Token = "0x400210E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private WaterWavesSpectrum spectrum;

		[Token(Token = "0x170002E8")]
		public WaterSpectrumType SpectrumType
		{
			[Token(Token = "0x60017BA")]
			[Address(RVA = "0x16EB0B8", Offset = "0x16EB0B8", VA = "0x16EB0B8")]
			get
			{
				return default(WaterSpectrumType);
			}
		}

		[Token(Token = "0x170002E9")]
		public WaterWavesSpectrum Spectrum
		{
			[Token(Token = "0x60017BB")]
			[Address(RVA = "0x16EB0C0", Offset = "0x16EB0C0", VA = "0x16EB0C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EA")]
		public float WindSpeed
		{
			[Token(Token = "0x60017BC")]
			[Address(RVA = "0x16EB204", Offset = "0x16EB204", VA = "0x16EB204")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002EB")]
		public float TileSize
		{
			[Token(Token = "0x60017BD")]
			[Address(RVA = "0x16EB20C", Offset = "0x16EB20C", VA = "0x16EB20C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002EC")]
		public float TileScale
		{
			[Token(Token = "0x60017BE")]
			[Address(RVA = "0x16EB214", Offset = "0x16EB214", VA = "0x16EB214")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002ED")]
		public float HorizontalDisplacementScale
		{
			[Token(Token = "0x60017BF")]
			[Address(RVA = "0x16EB21C", Offset = "0x16EB21C", VA = "0x16EB21C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002EE")]
		public float Gravity
		{
			[Token(Token = "0x60017C0")]
			[Address(RVA = "0x16EB224", Offset = "0x16EB224", VA = "0x16EB224")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002EF")]
		public float Directionality
		{
			[Token(Token = "0x60017C1")]
			[Address(RVA = "0x16EB22C", Offset = "0x16EB22C", VA = "0x16EB22C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002F0")]
		public Color AbsorptionColor
		{
			[Token(Token = "0x60017C2")]
			[Address(RVA = "0x16EB234", Offset = "0x16EB234", VA = "0x16EB234")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x170002F1")]
		public Color DiffuseColor
		{
			[Token(Token = "0x60017C3")]
			[Address(RVA = "0x16EB240", Offset = "0x16EB240", VA = "0x16EB240")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x170002F2")]
		public Color SpecularColor
		{
			[Token(Token = "0x60017C4")]
			[Address(RVA = "0x16EB24C", Offset = "0x16EB24C", VA = "0x16EB24C")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x170002F3")]
		public Color DepthColor
		{
			[Token(Token = "0x60017C5")]
			[Address(RVA = "0x16EB258", Offset = "0x16EB258", VA = "0x16EB258")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x170002F4")]
		public Color EmissionColor
		{
			[Token(Token = "0x60017C6")]
			[Address(RVA = "0x16EB264", Offset = "0x16EB264", VA = "0x16EB264")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x170002F5")]
		public Color ReflectionColor
		{
			[Token(Token = "0x60017C7")]
			[Address(RVA = "0x16EB270", Offset = "0x16EB270", VA = "0x16EB270")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x170002F6")]
		public float Smoothness
		{
			[Token(Token = "0x60017C8")]
			[Address(RVA = "0x16EB27C", Offset = "0x16EB27C", VA = "0x16EB27C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002F7")]
		public bool CustomAmbientSmoothness
		{
			[Token(Token = "0x60017C9")]
			[Address(RVA = "0x16EB284", Offset = "0x16EB284", VA = "0x16EB284")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F8")]
		public float AmbientSmoothness
		{
			[Token(Token = "0x60017CA")]
			[Address(RVA = "0x16E6300", Offset = "0x16E6300", VA = "0x16E6300")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002F9")]
		public float IsotropicScatteringIntensity
		{
			[Token(Token = "0x60017CB")]
			[Address(RVA = "0x16EB28C", Offset = "0x16EB28C", VA = "0x16EB28C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002FA")]
		public float ForwardScatteringIntensity
		{
			[Token(Token = "0x60017CC")]
			[Address(RVA = "0x16EB294", Offset = "0x16EB294", VA = "0x16EB294")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002FB")]
		public float SubsurfaceScatteringContrast
		{
			[Token(Token = "0x60017CD")]
			[Address(RVA = "0x16EB29C", Offset = "0x16EB29C", VA = "0x16EB29C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002FC")]
		public Color SubsurfaceScatteringShoreColor
		{
			[Token(Token = "0x60017CE")]
			[Address(RVA = "0x16EB2A4", Offset = "0x16EB2A4", VA = "0x16EB2A4")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x170002FD")]
		public float RefractionDistortion
		{
			[Token(Token = "0x60017CF")]
			[Address(RVA = "0x16EB2B0", Offset = "0x16EB2B0", VA = "0x16EB2B0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002FE")]
		public float FresnelBias
		{
			[Token(Token = "0x60017D0")]
			[Address(RVA = "0x16EB2B8", Offset = "0x16EB2B8", VA = "0x16EB2B8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002FF")]
		public float DetailFadeDistance
		{
			[Token(Token = "0x60017D1")]
			[Address(RVA = "0x16E631C", Offset = "0x16E631C", VA = "0x16E631C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000300")]
		public float DisplacementNormalsIntensity
		{
			[Token(Token = "0x60017D2")]
			[Address(RVA = "0x16EB2C0", Offset = "0x16EB2C0", VA = "0x16EB2C0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000301")]
		public float PlanarReflectionIntensity
		{
			[Token(Token = "0x60017D3")]
			[Address(RVA = "0x16EB2C8", Offset = "0x16EB2C8", VA = "0x16EB2C8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000302")]
		public float PlanarReflectionFlatten
		{
			[Token(Token = "0x60017D4")]
			[Address(RVA = "0x16EB2D0", Offset = "0x16EB2D0", VA = "0x16EB2D0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000303")]
		public float PlanarReflectionVerticalOffset
		{
			[Token(Token = "0x60017D5")]
			[Address(RVA = "0x16EB2D8", Offset = "0x16EB2D8", VA = "0x16EB2D8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000304")]
		public float EdgeBlendFactor
		{
			[Token(Token = "0x60017D6")]
			[Address(RVA = "0x16EB2E0", Offset = "0x16EB2E0", VA = "0x16EB2E0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000305")]
		public float DirectionalWrapSSS
		{
			[Token(Token = "0x60017D7")]
			[Address(RVA = "0x16EB2E8", Offset = "0x16EB2E8", VA = "0x16EB2E8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000306")]
		public float PointWrapSSS
		{
			[Token(Token = "0x60017D8")]
			[Address(RVA = "0x16EB2F0", Offset = "0x16EB2F0", VA = "0x16EB2F0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000307")]
		public float DynamicSmoothnessIntensity
		{
			[Token(Token = "0x60017D9")]
			[Address(RVA = "0x16EB2F8", Offset = "0x16EB2F8", VA = "0x16EB2F8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000308")]
		public float Density
		{
			[Token(Token = "0x60017DA")]
			[Address(RVA = "0x16EB300", Offset = "0x16EB300", VA = "0x16EB300")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000309")]
		public float UnderwaterBlurSize
		{
			[Token(Token = "0x60017DB")]
			[Address(RVA = "0x16EB308", Offset = "0x16EB308", VA = "0x16EB308")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700030A")]
		public float UnderwaterLightFadeScale
		{
			[Token(Token = "0x60017DC")]
			[Address(RVA = "0x16EB310", Offset = "0x16EB310", VA = "0x16EB310")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700030B")]
		public float UnderwaterDistortionsIntensity
		{
			[Token(Token = "0x60017DD")]
			[Address(RVA = "0x16EB318", Offset = "0x16EB318", VA = "0x16EB318")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700030C")]
		public float UnderwaterDistortionAnimationSpeed
		{
			[Token(Token = "0x60017DE")]
			[Address(RVA = "0x16EB320", Offset = "0x16EB320", VA = "0x16EB320")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700030D")]
		public NormalMapAnimation NormalMapAnimation1
		{
			[Token(Token = "0x60017DF")]
			[Address(RVA = "0x16EB328", Offset = "0x16EB328", VA = "0x16EB328")]
			get
			{
				return default(NormalMapAnimation);
			}
		}

		[Token(Token = "0x1700030E")]
		public NormalMapAnimation NormalMapAnimation2
		{
			[Token(Token = "0x60017E0")]
			[Address(RVA = "0x16EB33C", Offset = "0x16EB33C", VA = "0x16EB33C")]
			get
			{
				return default(NormalMapAnimation);
			}
		}

		[Token(Token = "0x1700030F")]
		public float FoamIntensity
		{
			[Token(Token = "0x60017E1")]
			[Address(RVA = "0x16EB354", Offset = "0x16EB354", VA = "0x16EB354")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000310")]
		public float FoamThreshold
		{
			[Token(Token = "0x60017E2")]
			[Address(RVA = "0x16EB35C", Offset = "0x16EB35C", VA = "0x16EB35C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000311")]
		public float FoamFadingFactor
		{
			[Token(Token = "0x60017E3")]
			[Address(RVA = "0x16EB364", Offset = "0x16EB364", VA = "0x16EB364")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000312")]
		public float FoamShoreIntensity
		{
			[Token(Token = "0x60017E4")]
			[Address(RVA = "0x16EB36C", Offset = "0x16EB36C", VA = "0x16EB36C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000313")]
		public float FoamShoreExtent
		{
			[Token(Token = "0x60017E5")]
			[Address(RVA = "0x16EB374", Offset = "0x16EB374", VA = "0x16EB374")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000314")]
		public float FoamNormalScale
		{
			[Token(Token = "0x60017E6")]
			[Address(RVA = "0x16EB37C", Offset = "0x16EB37C", VA = "0x16EB37C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000315")]
		public Color FoamDiffuseColor
		{
			[Token(Token = "0x60017E7")]
			[Address(RVA = "0x16EB384", Offset = "0x16EB384", VA = "0x16EB384")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000316")]
		public Color FoamSpecularColor
		{
			[Token(Token = "0x60017E8")]
			[Address(RVA = "0x16EB398", Offset = "0x16EB398", VA = "0x16EB398")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000317")]
		public float SprayThreshold
		{
			[Token(Token = "0x60017E9")]
			[Address(RVA = "0x16EB3AC", Offset = "0x16EB3AC", VA = "0x16EB3AC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000318")]
		public float SpraySkipRatio
		{
			[Token(Token = "0x60017EA")]
			[Address(RVA = "0x16EB3B4", Offset = "0x16EB3B4", VA = "0x16EB3B4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000319")]
		public float SpraySize
		{
			[Token(Token = "0x60017EB")]
			[Address(RVA = "0x16EB3BC", Offset = "0x16EB3BC", VA = "0x16EB3BC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700031A")]
		public Texture2D NormalMap
		{
			[Token(Token = "0x60017EC")]
			[Address(RVA = "0x16EB3C4", Offset = "0x16EB3C4", VA = "0x16EB3C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031B")]
		public Texture2D FoamDiffuseMap
		{
			[Token(Token = "0x60017ED")]
			[Address(RVA = "0x16EB3CC", Offset = "0x16EB3CC", VA = "0x16EB3CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031C")]
		public Texture2D FoamNormalMap
		{
			[Token(Token = "0x60017EE")]
			[Address(RVA = "0x16EB3D4", Offset = "0x16EB3D4", VA = "0x16EB3D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031D")]
		public Vector2 FoamTiling
		{
			[Token(Token = "0x60017EF")]
			[Address(RVA = "0x16EB3DC", Offset = "0x16EB3DC", VA = "0x16EB3DC")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x1700031E")]
		public float WavesFrequencyScale
		{
			[Token(Token = "0x60017F0")]
			[Address(RVA = "0x16EB3E8", Offset = "0x16EB3E8", VA = "0x16EB3E8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700031F")]
		public Gradient AbsorptionColorByDepth
		{
			[Token(Token = "0x60017F1")]
			[Address(RVA = "0x16E6BF8", Offset = "0x16E6BF8", VA = "0x16E6BF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0x16EB3F0", Offset = "0x16EB3F0", VA = "0x16EB3F0")]
		public void CacheSpectrum()
		{
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0x16EB0F0", Offset = "0x16EB0F0", VA = "0x16EB0F0")]
		private void CreateSpectrum()
		{
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0x16EB400", Offset = "0x16EB400", VA = "0x16EB400")]
		public WaterProfile()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000412")]
	public class ProfilesManager
	{
		[Token(Token = "0x4002112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private WaterProfile initialProfile;

		[Token(Token = "0x4002113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Water.WaterEvent changed;

		[Token(Token = "0x4002114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Water water;

		[Token(Token = "0x4002115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool profilesDirty;

		[Token(Token = "0x4002116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaterProfile initialProfileCopy;

		[Token(Token = "0x4002117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x583D58", Offset = "0x583D58")]
		private Water.WeightedProfile[] <Profiles>k__BackingField;

		[Token(Token = "0x17000320")]
		public Water.WeightedProfile[] Profiles
		{
			[Token(Token = "0x60017F9")]
			[Address(RVA = "0x1550D64", Offset = "0x1550D64", VA = "0x1550D64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58C6FC", Offset = "0x58C6FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017FA")]
			[Address(RVA = "0x1550D6C", Offset = "0x1550D6C", VA = "0x1550D6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58C70C", Offset = "0x58C70C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000321")]
		public Water.WaterEvent Changed
		{
			[Token(Token = "0x60017FB")]
			[Address(RVA = "0x1550D74", Offset = "0x1550D74", VA = "0x1550D74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0x1550A2C", Offset = "0x1550A2C", VA = "0x1550A2C")]
		internal void Start(Water water)
		{
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0x1550CB4", Offset = "0x1550CB4", VA = "0x1550CB4")]
		internal void Enable()
		{
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0x1550CC0", Offset = "0x1550CC0", VA = "0x1550CC0")]
		internal void Disable()
		{
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0x1550CC4", Offset = "0x1550CC4", VA = "0x1550CC4")]
		internal void Destroy()
		{
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0x1550D7C", Offset = "0x1550D7C", VA = "0x1550D7C")]
		public void CacheProfiles(params WaterProfile[] profiles)
		{
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0x1550E28", Offset = "0x1550E28", VA = "0x1550E28")]
		public float EvaluateProfilesParameter(Func<WaterProfile, float> func)
		{
			return default(float);
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0x1550C74", Offset = "0x1550C74", VA = "0x1550C74")]
		public void SetProfiles(params Water.WeightedProfile[] profiles)
		{
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0x1551030", Offset = "0x1551030", VA = "0x1551030")]
		public void SetProfilesDirty()
		{
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0x155103C", Offset = "0x155103C", VA = "0x155103C")]
		public void ValidateProfiles()
		{
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0x15510AC", Offset = "0x15510AC", VA = "0x15510AC")]
		internal void Update()
		{
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0x15510B0", Offset = "0x15510B0", VA = "0x15510B0")]
		internal void Validate()
		{
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0x155125C", Offset = "0x155125C", VA = "0x155125C")]
		private void OnQualitySettingsChanged()
		{
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0x1550F08", Offset = "0x1550F08", VA = "0x1550F08")]
		private static void CheckProfiles(Water.WeightedProfile[] profiles)
		{
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0x1551268", Offset = "0x1551268", VA = "0x1551268")]
		public ProfilesManager()
		{
		}
	}
	[Token(Token = "0x2000413")]
	public interface IShaderSetBuilder
	{
		[Token(Token = "0x6001806")]
		Shader BuildShaderVariant(string[] localKeywords, string[] sharedKeywords, string additionalCode, string keywordsString, bool volume, bool useForwardPasses, bool useDeferredPass);
	}
	[Serializable]
	[Token(Token = "0x2000414")]
	public class ShaderSet : ScriptableObject
	{
		[Token(Token = "0x4002118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x583D68", Offset = "0x583D68")]
		[SerializeField]
		private WaterTransparencyMode transparencyMode;

		[Token(Token = "0x4002119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private ReflectionProbeUsage reflectionProbeUsage;

		[Token(Token = "0x400211A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlanarReflectionsMode planarReflections;

		[Token(Token = "0x400211B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x583DD4", Offset = "0x583DD4")]
		[SerializeField]
		private bool receiveShadows;

		[Token(Token = "0x400211C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x583E20", Offset = "0x583E20")]
		[SerializeField]
		private WindWavesRenderMode windWavesMode;

		[Token(Token = "0x400211D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private DynamicSmoothnessMode dynamicSmoothnessMode;

		[Token(Token = "0x400211E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool localEffectsSupported;

		[Token(Token = "0x400211F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		private bool localEffectsDebug;

		[Token(Token = "0x4002120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[SerializeField]
		private bool foam;

		[Token(Token = "0x4002121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x583EAC", Offset = "0x583EAC")]
		[SerializeField]
		private bool forwardRenderMode;

		[Token(Token = "0x4002122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool deferredRenderMode;

		[Token(Token = "0x4002123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x583F08", Offset = "0x583F08")]
		[SerializeField]
		private bool projectionGrid;

		[Token(Token = "0x4002124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		[SerializeField]
		private bool customTriangularGeometry;

		[Token(Token = "0x4002125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x583F64", Offset = "0x583F64")]
		[SerializeField]
		private bool displayOnlyInAdditiveVolumes;

		[Token(Token = "0x4002126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool wavesAlign;

		[Token(Token = "0x4002127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x583FC0", Offset = "0x583FC0")]
		[SerializeField]
		private NormalMappingMode normalMappingMode;

		[Token(Token = "0x4002128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool supportEmission;

		[Token(Token = "0x4002129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58401C", Offset = "0x58401C")]
		[SerializeField]
		private Shader[] surfaceShaders;

		[Token(Token = "0x400212A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Shader[] volumeShaders;

		[Token(Token = "0x400212B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Shader[] utilityShaders;

		[Token(Token = "0x400212C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ComputeShader[] computeShaders;

		[Token(Token = "0x400212D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool errorDisplayed;

		[Token(Token = "0x17000322")]
		public WaterTransparencyMode TransparencyMode
		{
			[Token(Token = "0x6001807")]
			[Address(RVA = "0x14DDF84", Offset = "0x14DDF84", VA = "0x14DDF84")]
			get
			{
				return default(WaterTransparencyMode);
			}
			[Token(Token = "0x6001808")]
			[Address(RVA = "0x14DDF8C", Offset = "0x14DDF8C", VA = "0x14DDF8C")]
			set
			{
			}
		}

		[Token(Token = "0x17000323")]
		public ReflectionProbeUsage ReflectionProbeUsage
		{
			[Token(Token = "0x6001809")]
			[Address(RVA = "0x14DDF94", Offset = "0x14DDF94", VA = "0x14DDF94")]
			get
			{
				return default(ReflectionProbeUsage);
			}
			[Token(Token = "0x600180A")]
			[Address(RVA = "0x14DDF9C", Offset = "0x14DDF9C", VA = "0x14DDF9C")]
			set
			{
			}
		}

		[Token(Token = "0x17000324")]
		public bool ReceiveShadows
		{
			[Token(Token = "0x600180B")]
			[Address(RVA = "0x14DDFA4", Offset = "0x14DDFA4", VA = "0x14DDFA4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600180C")]
			[Address(RVA = "0x14DDFAC", Offset = "0x14DDFAC", VA = "0x14DDFAC")]
			set
			{
			}
		}

		[Token(Token = "0x17000325")]
		public PlanarReflectionsMode PlanarReflections
		{
			[Token(Token = "0x600180D")]
			[Address(RVA = "0x14DDFB8", Offset = "0x14DDFB8", VA = "0x14DDFB8")]
			get
			{
				return default(PlanarReflectionsMode);
			}
			[Token(Token = "0x600180E")]
			[Address(RVA = "0x14DDFC0", Offset = "0x14DDFC0", VA = "0x14DDFC0")]
			set
			{
			}
		}

		[Token(Token = "0x17000326")]
		public WindWavesRenderMode WindWavesMode
		{
			[Token(Token = "0x600180F")]
			[Address(RVA = "0x14DDFC8", Offset = "0x14DDFC8", VA = "0x14DDFC8")]
			get
			{
				return default(WindWavesRenderMode);
			}
			[Token(Token = "0x6001810")]
			[Address(RVA = "0x14DDFD0", Offset = "0x14DDFD0", VA = "0x14DDFD0")]
			set
			{
			}
		}

		[Token(Token = "0x17000327")]
		public Shader[] SurfaceShaders
		{
			[Token(Token = "0x6001811")]
			[Address(RVA = "0x14DDFD8", Offset = "0x14DDFD8", VA = "0x14DDFD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000328")]
		public Shader[] VolumeShaders
		{
			[Token(Token = "0x6001812")]
			[Address(RVA = "0x14DDFE0", Offset = "0x14DDFE0", VA = "0x14DDFE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000329")]
		public bool LocalEffectsSupported
		{
			[Token(Token = "0x6001813")]
			[Address(RVA = "0x14DDFE8", Offset = "0x14DDFE8", VA = "0x14DDFE8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700032A")]
		public bool Foam
		{
			[Token(Token = "0x6001814")]
			[Address(RVA = "0x14DDFF0", Offset = "0x14DDFF0", VA = "0x14DDFF0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700032B")]
		public bool LocalEffectsDebug
		{
			[Token(Token = "0x6001815")]
			[Address(RVA = "0x14DDFF8", Offset = "0x14DDFF8", VA = "0x14DDFF8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700032C")]
		public bool CustomTriangularGeometry
		{
			[Token(Token = "0x6001816")]
			[Address(RVA = "0x14DE000", Offset = "0x14DE000", VA = "0x14DE000")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700032D")]
		public bool ProjectionGrid
		{
			[Token(Token = "0x6001817")]
			[Address(RVA = "0x14DE008", Offset = "0x14DE008", VA = "0x14DE008")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700032E")]
		public DynamicSmoothnessMode SmoothnessMode
		{
			[Token(Token = "0x6001818")]
			[Address(RVA = "0x14DE010", Offset = "0x14DE010", VA = "0x14DE010")]
			get
			{
				return default(DynamicSmoothnessMode);
			}
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0x14DE018", Offset = "0x14DE018", VA = "0x14DE018")]
		public static Shader GetRuntimeShaderVariant(string keywordsString, bool volume)
		{
			return null;
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0x14DE1D0", Offset = "0x14DE1D0", VA = "0x14DE1D0")]
		public Shader GetShaderVariant(string[] localKeywords, string[] sharedKeywords, string additionalCode, string keywordsString, bool volume)
		{
			return null;
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0x14DE2C4", Offset = "0x14DE2C4", VA = "0x14DE2C4")]
		public void FindBestShaders([Out] Shader surfaceShader, [Out] Shader volumeShader)
		{
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0x14DF624", Offset = "0x14DF624", VA = "0x14DF624")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x58C71C", Offset = "0x58C71C")]
		public void Build()
		{
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0x14DF628", Offset = "0x14DF628", VA = "0x14DF628")]
		private static void ValidateWaterObjects()
		{
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0x14DF700", Offset = "0x14DF700", VA = "0x14DF700")]
		private static void SetProgress(float progress)
		{
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0x14DF704", Offset = "0x14DF704", VA = "0x14DF704")]
		public bool ContainsShaderVariant(string keywordsString)
		{
			return default(bool);
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0x14DF894", Offset = "0x14DF894", VA = "0x14DF894")]
		public ComputeShader GetComputeShader(string name)
		{
			return null;
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0x14DF940", Offset = "0x14DF940", VA = "0x14DF940")]
		private void AddShader(Shader shader, bool volumeShader)
		{
		}

		[Token(Token = "0x6001822")]
		[Address(RVA = "0x14DE7B8", Offset = "0x14DE7B8", VA = "0x14DE7B8")]
		private void BuildShaderVariant(ShaderVariant variant, WaterQualityLevel qualityLevel)
		{
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0x14DFC4C", Offset = "0x14DFC4C", VA = "0x14DFC4C")]
		private WindWavesRenderMode BuildWindWavesVariant(ShaderVariant variant, WaterQualityLevel qualityLevel)
		{
			return default(WindWavesRenderMode);
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0x14DFD78", Offset = "0x14DFD78", VA = "0x14DFD78")]
		public ShaderSet()
		{
		}
	}
	[Token(Token = "0x2000415")]
	public enum WaterTransparencyMode
	{
		[Token(Token = "0x400212F")]
		Solid,
		[Token(Token = "0x4002130")]
		Refractive
	}
	[Token(Token = "0x2000416")]
	public enum ReflectionProbeUsage
	{
		[Token(Token = "0x4002132")]
		Off,
		[Token(Token = "0x4002133")]
		BlendProbes,
		[Token(Token = "0x4002134")]
		BlendProbesAndSkybox,
		[Token(Token = "0x4002135")]
		Simple
	}
	[Token(Token = "0x2000417")]
	public enum PlanarReflectionsMode
	{
		[Token(Token = "0x4002137")]
		Disabled,
		[Token(Token = "0x4002138")]
		Normal,
		[Token(Token = "0x4002139")]
		HighQuality
	}
	[Token(Token = "0x2000418")]
	public enum DynamicSmoothnessMode
	{
		[Token(Token = "0x400213B")]
		CheapApproximation,
		[Token(Token = "0x400213C")]
		Physical
	}
	[Token(Token = "0x2000419")]
	public enum NormalMappingMode
	{
		[Token(Token = "0x400213E")]
		Never,
		[Token(Token = "0x400213F")]
		Auto,
		[Token(Token = "0x4002140")]
		Always
	}
	[Token(Token = "0x200041A")]
	public enum WindWavesRenderMode
	{
		[Token(Token = "0x4002142")]
		FullFFT,
		[Token(Token = "0x4002143")]
		GerstnerAndFFTNormals,
		[Token(Token = "0x4002144")]
		Gerstner,
		[Token(Token = "0x4002145")]
		Disabled
	}
	[Token(Token = "0x200041B")]
	public class ShaderVariant
	{
		[Serializable]
		[Token(Token = "0x200041C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579604", Offset = "0x579604")]
		private sealed class <>c
		{
			[Token(Token = "0x400214A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400214B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<string, string> <>9__15_0;

			[Token(Token = "0x400214C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<string, string> <>9__15_1;

			[Token(Token = "0x400214D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<string, string> <>9__15_2;

			[Token(Token = "0x6001832")]
			[Address(RVA = "0x158106C", Offset = "0x158106C", VA = "0x158106C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001833")]
			[Address(RVA = "0x1581074", Offset = "0x1581074", VA = "0x1581074")]
			internal string <GetKeywordsString>b__15_0(string k)
			{
				return null;
			}

			[Token(Token = "0x6001834")]
			[Address(RVA = "0x158107C", Offset = "0x158107C", VA = "0x158107C")]
			internal string <GetKeywordsString>b__15_1(string k)
			{
				return null;
			}

			[Token(Token = "0x6001835")]
			[Address(RVA = "0x1581084", Offset = "0x1581084", VA = "0x1581084")]
			internal string <GetKeywordsString>b__15_2(string k)
			{
				return null;
			}
		}

		[Token(Token = "0x4002146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<string, bool> unityKeywords;

		[Token(Token = "0x4002147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Dictionary<string, bool> waterKeywords;

		[Token(Token = "0x4002148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Dictionary<string, string> surfaceShaderParts;

		[Token(Token = "0x4002149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Dictionary<string, string> volumeShaderParts;

		[Token(Token = "0x6001825")]
		[Address(RVA = "0x14DE690", Offset = "0x14DE690", VA = "0x14DE690")]
		public ShaderVariant()
		{
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0x14DFB14", Offset = "0x14DFB14", VA = "0x14DFB14")]
		public void SetUnityKeyword(string keyword, bool value)
		{
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0x14DFA78", Offset = "0x14DFA78", VA = "0x14DFA78")]
		public void SetWaterKeyword(string keyword, bool value)
		{
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0x14DFBB0", Offset = "0x14DFBB0", VA = "0x14DFBB0")]
		public void SetAdditionalSurfaceCode(string keyword, string code)
		{
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0x14DFDA4", Offset = "0x14DFDA4", VA = "0x14DFDA4")]
		public void SetAdditionalVolumeCode(string keyword, string code)
		{
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0x14DFE40", Offset = "0x14DFE40", VA = "0x14DFE40")]
		public bool IsUnityKeywordEnabled(string keyword)
		{
			return default(bool);
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0x14DFEB4", Offset = "0x14DFEB4", VA = "0x14DFEB4")]
		public bool IsWaterKeywordEnabled(string keyword)
		{
			return default(bool);
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0x14DFF28", Offset = "0x14DFF28", VA = "0x14DFF28")]
		public string GetAdditionalSurfaceCode()
		{
			return null;
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0x14E00AC", Offset = "0x14E00AC", VA = "0x14E00AC")]
		public string GetAdditionalVolumeCode()
		{
			return null;
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0x14E0230", Offset = "0x14E0230", VA = "0x14E0230")]
		public string[] GetUnityKeywords()
		{
			return null;
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0x14E0414", Offset = "0x14E0414", VA = "0x14E0414")]
		public string[] GetWaterKeywords()
		{
			return null;
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0x14DEB3C", Offset = "0x14DEB3C", VA = "0x14DEB3C")]
		public string GetKeywordsString()
		{
			return null;
		}
	}
	[Token(Token = "0x200041D")]
	public class CpuFFT
	{
		[Token(Token = "0x200041E")]
		public class FFTBuffers
		{
			[Token(Token = "0x4002152")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly float[] timed;

			[Token(Token = "0x4002153")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public readonly float[] pingPongA;

			[Token(Token = "0x4002154")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public readonly float[] pingPongB;

			[Token(Token = "0x4002155")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public readonly int[][] indices;

			[Token(Token = "0x4002156")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public readonly float[][] weights;

			[Token(Token = "0x4002157")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public readonly int numButterflies;

			[Token(Token = "0x4002158")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private readonly int resolution;

			[Token(Token = "0x4002159")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private readonly Dictionary<float, Vector3[]> precomputedKMap;

			[Token(Token = "0x600183D")]
			[Address(RVA = "0x1506354", Offset = "0x1506354", VA = "0x1506354")]
			public FFTBuffers(int resolution)
			{
			}

			[Token(Token = "0x600183E")]
			[Address(RVA = "0x1506568", Offset = "0x1506568", VA = "0x1506568")]
			public Vector3[] GetPrecomputedK(float tileSize)
			{
				return null;
			}
		}

		[Token(Token = "0x400214E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private WaterTileSpectrum targetSpectrum;

		[Token(Token = "0x400214F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float time;

		[Token(Token = "0x4002150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int resolution;

		[Token(Token = "0x4002151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<int, FFTBuffers> buffersCache;

		[Token(Token = "0x6001836")]
		[Address(RVA = "0xA2F824", Offset = "0xA2F824", VA = "0xA2F824")]
		public void Compute(WaterTileSpectrum targetSpectrum, float time, int outputBufferIndex)
		{
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0xA2FB64", Offset = "0xA2FB64", VA = "0xA2FB64")]
		private void ComputeDirectionalSpectra(int scaleIndex, Vector2[] directional, Vector3[] kMap)
		{
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0xA30688", Offset = "0xA30688", VA = "0xA30688")]
		private void ComputeTimedSpectra(Vector2[] directional, float[] timed, Vector3[] kMap, float loopDuration)
		{
		}

		[Token(Token = "0x6001839")]
		[Address(RVA = "0xA30A94", Offset = "0xA30A94", VA = "0xA30A94")]
		private void ComputeFFT(float[] data, Vector2[] displacements, Vector4[] forceAndHeight, int[][] indices, float[][] weights, float[] pingPongA, float[] pingPongB)
		{
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0xA30DF0", Offset = "0xA30DF0", VA = "0xA30DF0")]
		private void FFT(int[][] indices, float[][] weights, float[] pingPongA, float[] pingPongB)
		{
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0xA31538", Offset = "0xA31538", VA = "0xA31538")]
		public CpuFFT()
		{
		}
	}
	[Token(Token = "0x200041F")]
	public class SpectrumResolverCPU
	{
		[Token(Token = "0x400215A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private WaterTileSpectrum[] tileSpectra;

		[Token(Token = "0x400215B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2 surfaceOffset;

		[Token(Token = "0x400215C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector2 windDirection;

		[Token(Token = "0x400215D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float lastFrameTime;

		[Token(Token = "0x400215E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float uniformWaterScale;

		[Token(Token = "0x400215F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaterWave[] directWaves;

		[Token(Token = "0x4002160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float stdDev;

		[Token(Token = "0x4002161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int targetDirectWavesCount;

		[Token(Token = "0x4002162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int cachedSeed;

		[Token(Token = "0x4002163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool cpuWavesDirty;

		[Token(Token = "0x4002164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float maxVerticalDisplacement;

		[Token(Token = "0x4002165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float maxHorizontalDisplacement;

		[Token(Token = "0x4002166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly int numTiles;

		[Token(Token = "0x4002167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly Water water;

		[Token(Token = "0x4002168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly WindWaves windWaves;

		[Token(Token = "0x4002169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly List<WaterWavesSpectrumDataBase> spectraDataList;

		[Token(Token = "0x400216A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected readonly List<WaterWavesSpectrumDataBase> overlayedSpectra;

		[Token(Token = "0x400216B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Dictionary<WaterWavesSpectrum, WaterWavesSpectrumData> spectraDataCache;

		[Token(Token = "0x1700032F")]
		public WaterWave[] DirectWaves
		{
			[Token(Token = "0x6001840")]
			[Address(RVA = "0x1684A68", Offset = "0x1684A68", VA = "0x1684A68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000330")]
		public float MaxVerticalDisplacement
		{
			[Token(Token = "0x6001841")]
			[Address(RVA = "0x1684BAC", Offset = "0x1684BAC", VA = "0x1684BAC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000331")]
		public float MaxHorizontalDisplacement
		{
			[Token(Token = "0x6001842")]
			[Address(RVA = "0x1684BB4", Offset = "0x1684BB4", VA = "0x1684BB4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000332")]
		public Vector2 WindDirection
		{
			[Token(Token = "0x6001843")]
			[Address(RVA = "0x1684BBC", Offset = "0x1684BBC", VA = "0x1684BBC")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000333")]
		public float LastFrameTime
		{
			[Token(Token = "0x6001844")]
			[Address(RVA = "0x1684BC4", Offset = "0x1684BC4", VA = "0x1684BC4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000334")]
		public float StdDev
		{
			[Token(Token = "0x6001845")]
			[Address(RVA = "0x1684BCC", Offset = "0x1684BCC", VA = "0x1684BCC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600183F")]
		[Address(RVA = "0x16847D4", Offset = "0x16847D4", VA = "0x16847D4")]
		public SpectrumResolverCPU(Water water, WindWaves windWaves, int numScales)
		{
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0x1684BD4", Offset = "0x1684BD4", VA = "0x1684BD4")]
		public WaterTileSpectrum GetTile(int index)
		{
			return null;
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0x1684C10", Offset = "0x1684C10", VA = "0x1684C10")]
		internal void Update()
		{
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0x1684F7C", Offset = "0x1684F7C", VA = "0x1684F7C")]
		internal void SetWindDirection(Vector2 windDirection)
		{
		}

		[Token(Token = "0x6001849")]
		[Address(RVA = "0x1684F8C", Offset = "0x1684F8C", VA = "0x1684F8C")]
		public List<WaterWavesSpectrumDataBase> GetOverlayedSpectraDirect()
		{
			return null;
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0x1684F94", Offset = "0x1684F94", VA = "0x1684F94")]
		public void DisposeCachedSpectra()
		{
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0x1685130", Offset = "0x1685130", VA = "0x1685130")]
		public WaterWavesSpectrumData GetSpectrumData(WaterWavesSpectrum spectrum)
		{
			return null;
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0x16853B0", Offset = "0x16853B0", VA = "0x16853B0", Slot = "4")]
		public virtual void AddSpectrum(WaterWavesSpectrumDataBase spectrum)
		{
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0x16854B4", Offset = "0x16854B4", VA = "0x16854B4", Slot = "5")]
		public virtual void RemoveSpectrum(WaterWavesSpectrumDataBase spectrum)
		{
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0x16855BC", Offset = "0x16855BC", VA = "0x16855BC")]
		public bool ContainsSpectrum(WaterWavesSpectrumDataBase spectrum)
		{
			return default(bool);
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0x1685620", Offset = "0x1685620", VA = "0x1685620")]
		public void CacheSpectrum(WaterWavesSpectrum spectrum)
		{
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0x1685624", Offset = "0x1685624", VA = "0x1685624")]
		public Dictionary<WaterWavesSpectrum, WaterWavesSpectrumData> GetCachedSpectraDirect()
		{
			return null;
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0x168562C", Offset = "0x168562C", VA = "0x168562C")]
		private void InterpolationParams(float x, float z, int scaleIndex, float tileSize, [Out] float fx, [Out] float invFx, [Out] float fy, [Out] float invFy, [Out] int index0, [Out] int index1, [Out] int index2, [Out] int index3)
		{
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0x16857A8", Offset = "0x16857A8", VA = "0x16857A8")]
		public Vector3 GetDisplacementAt(float x, float z, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0x1685CE0", Offset = "0x1685CE0", VA = "0x1685CE0")]
		public Vector2 GetHorizontalDisplacementAt(float x, float z, float time)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0x16860F8", Offset = "0x16860F8", VA = "0x16860F8")]
		public Vector4 GetForceAndHeightAt(float x, float z, float time)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0x1686694", Offset = "0x1686694", VA = "0x1686694")]
		public float GetHeightAt(float x, float z, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0x1686A58", Offset = "0x1686A58", VA = "0x1686A58")]
		public void SetDirectWaveEvaluationMode(int waveCount)
		{
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0x1686B70", Offset = "0x1686B70", VA = "0x1686B70")]
		public void SetFFTEvaluationMode()
		{
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0x1686C3C", Offset = "0x1686C3C", VA = "0x1686C3C")]
		public WaterWave[] FindMostMeaningfulWaves(int waveCount)
		{
			return null;
		}

		[Token(Token = "0x6001859")]
		[Address(RVA = "0x1684B34", Offset = "0x1684B34", VA = "0x1684B34")]
		private WaterWave[] GetValidatedDirectWavesList()
		{
			return null;
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0x1686F30", Offset = "0x1686F30", VA = "0x1686F30")]
		public GerstnerWave[] SelectShorelineWaves(int waveCount, float angle, float coincidenceRange)
		{
			return null;
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0x1684F20", Offset = "0x1684F20", VA = "0x1684F20")]
		private void UpdateCachedSeed()
		{
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0x16874D0", Offset = "0x16874D0", VA = "0x16874D0", Slot = "6")]
		internal virtual void OnProfilesChanged()
		{
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0x168493C", Offset = "0x168493C", VA = "0x168493C")]
		private void CreateSpectraLevels()
		{
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0x1687828", Offset = "0x1687828", VA = "0x1687828", Slot = "7")]
		public virtual void SetDirectionalSpectrumDirty()
		{
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0x1687934", Offset = "0x1687934", VA = "0x1687934", Slot = "8")]
		internal virtual void OnMapsFormatChanged(bool resolution)
		{
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0x1687AA0", Offset = "0x1687AA0", VA = "0x1687AA0", Slot = "9")]
		internal virtual void OnDestroy()
		{
		}
	}
	[Token(Token = "0x2000420")]
	public class WaterTileSpectrum
	{
		[Token(Token = "0x400216C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Water water;

		[Token(Token = "0x400216D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly WindWaves windWaves;

		[Token(Token = "0x400216E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly int tileIndex;

		[Token(Token = "0x400216F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2[] directionalSpectrum;

		[Token(Token = "0x4002170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2[][] displacements;

		[Token(Token = "0x4002171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector4[][] forceAndHeight;

		[Token(Token = "0x4002172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float[] resultsTiming;

		[Token(Token = "0x4002173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int recentResultIndex;

		[Token(Token = "0x4002174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float cachedTime;

		[Token(Token = "0x4002175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float cachedTimeProp;

		[Token(Token = "0x4002176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector2[] cachedDisplacementsA;

		[Token(Token = "0x4002177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector2[] cachedDisplacementsB;

		[Token(Token = "0x4002178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Vector4[] cachedForceAndHeightA;

		[Token(Token = "0x4002179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector4[] cachedForceAndHeightB;

		[Token(Token = "0x400217A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool resolveByFFT;

		[Token(Token = "0x400217B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public int directionalSpectrumDirty;

		[Token(Token = "0x400217C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int resolutionFFT;

		[Token(Token = "0x400217D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int mipIndexFFT;

		[Token(Token = "0x17000335")]
		public bool IsResolvedByFFT
		{
			[Token(Token = "0x6001862")]
			[Address(RVA = "0x16F1C80", Offset = "0x16F1C80", VA = "0x16F1C80")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000336")]
		public int ResolutionFFT
		{
			[Token(Token = "0x6001863")]
			[Address(RVA = "0x16F1C88", Offset = "0x16F1C88", VA = "0x16F1C88")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000337")]
		public int MipIndexFFT
		{
			[Token(Token = "0x6001864")]
			[Address(RVA = "0x16F1C90", Offset = "0x16F1C90", VA = "0x16F1C90")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0x16F1C1C", Offset = "0x16F1C1C", VA = "0x16F1C1C")]
		public WaterTileSpectrum(Water water, WindWaves windWaves, int index)
		{
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0x16F1C98", Offset = "0x16F1C98", VA = "0x16F1C98")]
		public void SetDirty()
		{
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0x16F1CA4", Offset = "0x16F1CA4", VA = "0x16F1CA4")]
		public bool SetResolveMode(bool resolveByFFT, int resolution)
		{
			return default(bool);
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0x16F2100", Offset = "0x16F2100", VA = "0x16F2100")]
		public void GetResults(float time, [Out] Vector2[] da, [Out] Vector2[] db, [Out] Vector4[] fa, [Out] Vector4[] fb, [Out] float p)
		{
		}
	}
	[Token(Token = "0x2000421")]
	public abstract class WaterWavesSpectrumDataBase
	{
		[Serializable]
		[Token(Token = "0x2000422")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579614", Offset = "0x579614")]
		private sealed class <>c
		{
			[Token(Token = "0x400218E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400218F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<WaterWave> <>9__47_0;

			[Token(Token = "0x6001882")]
			[Address(RVA = "0x17042D8", Offset = "0x17042D8", VA = "0x17042D8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001883")]
			[Address(RVA = "0x17042E0", Offset = "0x17042E0", VA = "0x17042E0")]
			internal int <SortCpuWaves>b__47_0(WaterWave a, WaterWave b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x400217E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3[][] spectrumValues;

		[Token(Token = "0x400217F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float[][] standardDeviationData;

		[Token(Token = "0x4002180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private WaterWave[] cpuWaves;

		[Token(Token = "0x4002181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaterWave[] shorelineCandidates;

		[Token(Token = "0x4002182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool cpuWavesDirty;

		[Token(Token = "0x4002183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector2 lastWindDirection;

		[Token(Token = "0x4002184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float stdDev;

		[Token(Token = "0x4002185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float weight;

		[Token(Token = "0x4002186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector2 weatherSystemOffset;

		[Token(Token = "0x4002187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float weatherSystemRadius;

		[Token(Token = "0x4002188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector2 windDirection;

		[Token(Token = "0x4002189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Texture2D texture;

		[Token(Token = "0x400218A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly float tileSize;

		[Token(Token = "0x400218B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private readonly float gravity;

		[Token(Token = "0x400218C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected readonly Water water;

		[Token(Token = "0x400218D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected readonly WindWaves windWaves;

		[Token(Token = "0x17000338")]
		public WaterWave[] CpuWaves
		{
			[Token(Token = "0x6001869")]
			[Address(RVA = "0x16F6D98", Offset = "0x16F6D98", VA = "0x16F6D98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000339")]
		public WaterWave[] ShorelineCandidates
		{
			[Token(Token = "0x600186A")]
			[Address(RVA = "0x16F6DA0", Offset = "0x16F6DA0", VA = "0x16F6DA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033A")]
		public Vector3[][] SpectrumValues
		{
			[Token(Token = "0x600186B")]
			[Address(RVA = "0x16F6DA8", Offset = "0x16F6DA8", VA = "0x16F6DA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033B")]
		public Texture2D Texture
		{
			[Token(Token = "0x600186C")]
			[Address(RVA = "0x16F6DB0", Offset = "0x16F6DB0", VA = "0x16F6DB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033C")]
		public float Weight
		{
			[Token(Token = "0x600186D")]
			[Address(RVA = "0x16F7064", Offset = "0x16F7064", VA = "0x16F7064")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600186E")]
			[Address(RVA = "0x16F706C", Offset = "0x16F706C", VA = "0x16F706C")]
			set
			{
			}
		}

		[Token(Token = "0x1700033D")]
		public float Gravity
		{
			[Token(Token = "0x600186F")]
			[Address(RVA = "0x16F7074", Offset = "0x16F7074", VA = "0x16F7074")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700033E")]
		public Vector2 WeatherSystemOffset
		{
			[Token(Token = "0x6001870")]
			[Address(RVA = "0x16F707C", Offset = "0x16F707C", VA = "0x16F707C")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001871")]
			[Address(RVA = "0x16F7084", Offset = "0x16F7084", VA = "0x16F7084")]
			set
			{
			}
		}

		[Token(Token = "0x1700033F")]
		public float WeatherSystemRadius
		{
			[Token(Token = "0x6001872")]
			[Address(RVA = "0x16F708C", Offset = "0x16F708C", VA = "0x16F708C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001873")]
			[Address(RVA = "0x16F7094", Offset = "0x16F7094", VA = "0x16F7094")]
			set
			{
			}
		}

		[Token(Token = "0x17000340")]
		public Vector2 WindDirection
		{
			[Token(Token = "0x6001874")]
			[Address(RVA = "0x16F709C", Offset = "0x16F709C", VA = "0x16F709C")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001875")]
			[Address(RVA = "0x16F70A4", Offset = "0x16F70A4", VA = "0x16F70A4")]
			set
			{
			}
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0x16F6A88", Offset = "0x16F6A88", VA = "0x16F6A88")]
		protected WaterWavesSpectrumDataBase(Water water, WindWaves windWaves, float tileSize, float gravity)
		{
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0x16F6E38", Offset = "0x16F6E38", VA = "0x16F6E38")]
		private void CreateSpectrumTexture()
		{
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0x16F73D4", Offset = "0x16F73D4", VA = "0x16F73D4")]
		private void AnalyzeSpectrum()
		{
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0x16F20B8", Offset = "0x16F20B8", VA = "0x16F20B8")]
		public static int GetMipIndex(int i)
		{
			return default(int);
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0x16F7C88", Offset = "0x16F7C88", VA = "0x16F7C88")]
		public float GetStandardDeviation()
		{
			return default(float);
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0x16F7C90", Offset = "0x16F7C90", VA = "0x16F7C90")]
		public float GetStandardDeviation(int scaleIndex, int mipLevel)
		{
			return default(float);
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0x16F7CEC", Offset = "0x16F7CEC", VA = "0x16F7CEC")]
		public void SetCpuWavesDirty()
		{
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0x16F70AC", Offset = "0x16F70AC", VA = "0x16F70AC")]
		public void ValidateSpectrumData()
		{
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0x16F7CF8", Offset = "0x16F7CF8", VA = "0x16F7CF8")]
		public void UpdateSpectralValues(Vector2 windDirection, float directionality)
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0x16F7A48", Offset = "0x16F7A48", VA = "0x16F7A48")]
		public static void SortCpuWaves(WaterWave[] windWaves, bool mostlySorted)
		{
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0x16F7FD4", Offset = "0x16F7FD4", VA = "0x16F7FD4")]
		public void Dispose(bool onlyTexture)
		{
		}

		[Token(Token = "0x6001880")]
		protected abstract void GenerateContents(Vector3[][] spectrumValues);
	}
	[Token(Token = "0x2000423")]
	public class WindWavesSpectrumOverlay
	{
		[Token(Token = "0x4002190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector2[][] spectrumData;

		[Token(Token = "0x4002191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Texture2D texture;

		[Token(Token = "0x4002192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool textureDirty;

		[Token(Token = "0x4002194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly WindWaves windWaves;

		[Token(Token = "0x17000341")]
		public Texture2D Texture
		{
			[Token(Token = "0x6001888")]
			[Address(RVA = "0x15D3F34", Offset = "0x15D3F34", VA = "0x15D3F34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000018")]
		public event Action Cleared
		{
			[Token(Token = "0x6001884")]
			[Address(RVA = "0x15D3BDC", Offset = "0x15D3BDC", VA = "0x15D3BDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58C754", Offset = "0x58C754")]
			add
			{
			}
			[Token(Token = "0x6001885")]
			[Address(RVA = "0x15D3C7C", Offset = "0x15D3C7C", VA = "0x15D3C7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58C764", Offset = "0x58C764")]
			remove
			{
			}
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0x15D3D1C", Offset = "0x15D3D1C", VA = "0x15D3D1C")]
		public WindWavesSpectrumOverlay(WindWaves windWaves)
		{
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0x15D3E54", Offset = "0x15D3E54", VA = "0x15D3E54")]
		public void Destroy()
		{
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0x15D4230", Offset = "0x15D4230", VA = "0x15D4230")]
		public Vector2[] GetSpectrumDataDirect(int tileIndex)
		{
			return null;
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0x15D426C", Offset = "0x15D426C", VA = "0x15D426C")]
		public void Refresh()
		{
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0x15D3F64", Offset = "0x15D3F64", VA = "0x15D3F64")]
		private void ValidateTexture()
		{
		}
	}
	[Token(Token = "0x2000424")]
	public static class ButterflyFFTUtility
	{
		[Token(Token = "0x600188C")]
		[Address(RVA = "0x7ED4E8", Offset = "0x7ED4E8", VA = "0x7ED4E8")]
		private static void BitReverse(int[] indices, int N, int n)
		{
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0x7ED56C", Offset = "0x7ED56C", VA = "0x7ED56C")]
		private static void ComputeWeights(Vector2[][] weights, int resolution, int numButterflies)
		{
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0x7ED708", Offset = "0x7ED708", VA = "0x7ED708")]
		private static void ComputeWeights(float[][] weights, int resolution, int numButterflies)
		{
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0x7ED8C4", Offset = "0x7ED8C4", VA = "0x7ED8C4")]
		private static void ComputeIndices(int[][] indices, int resolution, int numButterflies)
		{
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0x7EDA44", Offset = "0x7EDA44", VA = "0x7EDA44")]
		public static void ComputeButterfly(int resolution, int numButterflies, [Out] int[][] indices, [Out] Vector2[][] weights)
		{
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0x7EDC30", Offset = "0x7EDC30", VA = "0x7EDC30")]
		public static void ComputeButterfly(int resolution, int numButterflies, [Out] int[][] indices, [Out] float[][] weights)
		{
		}
	}
	[Token(Token = "0x2000425")]
	public sealed class Dx11FFT : GpuFFT
	{
		[Token(Token = "0x4002195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ComputeShader shader;

		[Token(Token = "0x4002196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly int kernelIndex;

		[Token(Token = "0x6001892")]
		[Address(RVA = "0x7D07A8", Offset = "0x7D07A8", VA = "0x7D07A8")]
		public Dx11FFT(ComputeShader shader, int resolution, bool highPrecision, bool twoChannels)
		{
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0x7D0818", Offset = "0x7D0818", VA = "0x7D0818", Slot = "4")]
		public override void SetupMaterials()
		{
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0x7D081C", Offset = "0x7D081C", VA = "0x7D081C", Slot = "5")]
		public override void ComputeFFT(Texture tex, RenderTexture target)
		{
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0x7D0A6C", Offset = "0x7D0A6C", VA = "0x7D0A6C", Slot = "7")]
		protected override void FillButterflyTexture(Texture2D butterfly, int[][] indices, Vector2[][] weights)
		{
		}
	}
	[Token(Token = "0x2000426")]
	public abstract class GpuFFT
	{
		[Token(Token = "0x4002197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Texture2D butterfly;

		[Token(Token = "0x4002198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected RenderTexturesCache renderTexturesSet;

		[Token(Token = "0x4002199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected int resolution;

		[Token(Token = "0x400219A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected int numButterflies;

		[Token(Token = "0x400219B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected int numButterfliesPow2;

		[Token(Token = "0x400219C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected bool twoChannels;

		[Token(Token = "0x400219D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		private readonly bool highPrecision;

		[Token(Token = "0x400219E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		private readonly bool usesUAV;

		[Token(Token = "0x17000342")]
		public Texture2D Butterfly
		{
			[Token(Token = "0x6001897")]
			[Address(RVA = "0x7F754C", Offset = "0x7F754C", VA = "0x7F754C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000343")]
		public int Resolution
		{
			[Token(Token = "0x6001898")]
			[Address(RVA = "0x7F7554", Offset = "0x7F7554", VA = "0x7F7554")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0x7F73D4", Offset = "0x7F73D4", VA = "0x7F73D4")]
		protected GpuFFT(int resolution, bool highPrecision, bool twoChannels, bool usesUAV)
		{
		}

		[Token(Token = "0x6001899")]
		public abstract void SetupMaterials();

		[Token(Token = "0x600189A")]
		public abstract void ComputeFFT(Texture tex, RenderTexture target);

		[Token(Token = "0x600189B")]
		[Address(RVA = "0x7F755C", Offset = "0x7F755C", VA = "0x7F755C", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0x7F7548", Offset = "0x7F7548", VA = "0x7F7548")]
		private void CreateTextures()
		{
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0x7F7480", Offset = "0x7F7480", VA = "0x7F7480")]
		private void RetrieveRenderTexturesSet()
		{
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0x7F7744", Offset = "0x7F7744", VA = "0x7F7744", Slot = "7")]
		protected virtual void FillButterflyTexture(Texture2D butterfly, int[][] indices, Vector2[][] weights)
		{
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0x7F7600", Offset = "0x7F7600", VA = "0x7F7600")]
		private void CreateButterflyTexture()
		{
		}
	}
	[Token(Token = "0x2000427")]
	public sealed class PixelShaderFFT : GpuFFT
	{
		[Token(Token = "0x400219F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TemporaryRenderTexture rt1;

		[Token(Token = "0x40021A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TemporaryRenderTexture rt2;

		[Token(Token = "0x40021A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly Material material;

		[Token(Token = "0x40021A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly int butterflyTexProperty;

		[Token(Token = "0x40021A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private readonly int butterflyPassProperty;

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0x1548728", Offset = "0x1548728", VA = "0x1548728")]
		public PixelShaderFFT(Shader fftShader, int resolution, bool highPrecision, bool twoChannels)
		{
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0x1548838", Offset = "0x1548838", VA = "0x1548838", Slot = "6")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0x15488F4", Offset = "0x15488F4", VA = "0x15488F4", Slot = "4")]
		public override void SetupMaterials()
		{
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0x1548920", Offset = "0x1548920", VA = "0x1548920", Slot = "5")]
		public override void ComputeFFT(Texture tex, RenderTexture target)
		{
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0x1548ADC", Offset = "0x1548ADC", VA = "0x1548ADC")]
		private void ComputeFFT(Texture tex, RenderTexture target, int passIndex)
		{
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0x1548D3C", Offset = "0x1548D3C", VA = "0x1548D3C")]
		private void SwapRT()
		{
		}
	}
	[Token(Token = "0x2000428")]
	public class PhillipsSpectrum : WaterWavesSpectrum
	{
		[Token(Token = "0x40021A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly float cutoffFactor;

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0x15EE9F4", Offset = "0x15EE9F4", VA = "0x15EE9F4")]
		public PhillipsSpectrum(float tileSize, float gravity, float windSpeed, float amplitude, float cutoffFactor)
		{
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0x15EEA28", Offset = "0x15EEA28", VA = "0x15EEA28", Slot = "4")]
		public override void ComputeSpectrum(Vector3[] spectrum, float tileSizeMultiplier, int maxResolution, System.Random random)
		{
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0x15EECD0", Offset = "0x15EECD0", VA = "0x15EECD0")]
		private static float ComputeWaveAmplitude(float windSpeed)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000429")]
	public sealed class WaterAsynchronousTasks : MonoBehaviour
	{
		[Token(Token = "0x40021A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static WaterAsynchronousTasks instance;

		[Token(Token = "0x40021A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool run;

		[Token(Token = "0x40021A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly List<WaterTileSpectrum> fftSpectra;

		[Token(Token = "0x40021A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int fftSpectrumIndex;

		[Token(Token = "0x40021A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float fftTimeStep;

		[Token(Token = "0x40021AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly List<WaterSample> computations;

		[Token(Token = "0x40021AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int computationIndex;

		[Token(Token = "0x40021AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Exception threadException;

		[Token(Token = "0x17000344")]
		public static WaterAsynchronousTasks Instance
		{
			[Token(Token = "0x60018A9")]
			[Address(RVA = "0x15C2B20", Offset = "0x15C2B20", VA = "0x15C2B20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000345")]
		public static bool HasInstance
		{
			[Token(Token = "0x60018AA")]
			[Address(RVA = "0x15C2CB8", Offset = "0x15C2CB8", VA = "0x15C2CB8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0x15C2D44", Offset = "0x15C2D44", VA = "0x15C2D44")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0x15C3060", Offset = "0x15C3060", VA = "0x15C3060")]
		public void AddWaterSampleComputations(WaterSample computation)
		{
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0x15C3164", Offset = "0x15C3164", VA = "0x15C3164")]
		public void RemoveWaterSampleComputations(WaterSample computation)
		{
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0x15C32B8", Offset = "0x15C32B8", VA = "0x15C32B8")]
		public void AddFFTComputations(WaterTileSpectrum scale)
		{
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0x15C33BC", Offset = "0x15C33BC", VA = "0x15C33BC")]
		public void RemoveFFTComputations(WaterTileSpectrum scale)
		{
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0x15C3510", Offset = "0x15C3510", VA = "0x15C3510")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0x15C358C", Offset = "0x15C358C", VA = "0x15C358C")]
		private void RunSamplingTask()
		{
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0x15C3880", Offset = "0x15C3880", VA = "0x15C3880")]
		private void RunFFTTask()
		{
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0x15C3E48", Offset = "0x15C3E48", VA = "0x15C3E48")]
		public WaterAsynchronousTasks()
		{
		}
	}
	[Token(Token = "0x200042A")]
	public sealed class WaterSample
	{
		[Token(Token = "0x200042B")]
		public enum DisplacementMode
		{
			[Token(Token = "0x40021B9")]
			Height,
			[Token(Token = "0x40021BA")]
			Displacement,
			[Token(Token = "0x40021BB")]
			HeightAndForces
		}

		[Token(Token = "0x200042C")]
		public enum ComputationsMode
		{
			[Token(Token = "0x40021BD")]
			Normal = 0,
			[Token(Token = "0x40021BE")]
			[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5840A8", Offset = "0x5840A8")]
			Stabilized = 0,
			[Token(Token = "0x40021BF")]
			ForceCompletion = 2
		}

		[Token(Token = "0x40021AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Water water;

		[Token(Token = "0x40021AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float x;

		[Token(Token = "0x40021AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float z;

		[Token(Token = "0x40021B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float time;

		[Token(Token = "0x40021B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 displaced;

		[Token(Token = "0x40021B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 previousResult;

		[Token(Token = "0x40021B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 forces;

		[Token(Token = "0x40021B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 previousForces;

		[Token(Token = "0x40021B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool finished;

		[Token(Token = "0x40021B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		private bool enqueued;

		[Token(Token = "0x40021B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly DisplacementMode displacementMode;

		[Token(Token = "0x17000346")]
		public bool Finished
		{
			[Token(Token = "0x60018B5")]
			[Address(RVA = "0x16EFC10", Offset = "0x16EFC10", VA = "0x16EFC10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000347")]
		public Vector2 Position
		{
			[Token(Token = "0x60018B6")]
			[Address(RVA = "0x16EFC18", Offset = "0x16EFC18", VA = "0x16EFC18")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0x16EAB3C", Offset = "0x16EAB3C", VA = "0x16EAB3C")]
		public WaterSample(Water water, DisplacementMode displacementMode = DisplacementMode.Height, float precision = 1f)
		{
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0x16EAC74", Offset = "0x16EAC74", VA = "0x16EAC74")]
		public void Start(Vector3 origin)
		{
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0x16EFC20", Offset = "0x16EFC20", VA = "0x16EFC20")]
		public void Start(float x, float z)
		{
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0x16EFCB4", Offset = "0x16EFCB4", VA = "0x16EFCB4")]
		public Vector3 GetAndReset(Vector3 origin, ComputationsMode mode = ComputationsMode.Normal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0x16E15EC", Offset = "0x16E15EC", VA = "0x16E15EC")]
		public Vector3 GetAndReset(float x, float z, ComputationsMode mode = ComputationsMode.Normal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0x16EFCE0", Offset = "0x16EFCE0", VA = "0x16EFCE0")]
		public Vector3 GetAndReset(float x, float z, ComputationsMode mode, [Out] Vector3 forces)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0x16EA4FC", Offset = "0x16EA4FC", VA = "0x16EA4FC")]
		public void GetAndResetFast(float x, float z, float time, Vector3 result, Vector3 forces)
		{
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0x16EA5F8", Offset = "0x16EA5F8", VA = "0x16EA5F8")]
		public void GetAndResetFast(float x, float z, float time, float result, Vector3 forces)
		{
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0x16EFF5C", Offset = "0x16EFF5C", VA = "0x16EFF5C")]
		public float GetAndResetFast(float x, float z, float time)
		{
			return default(float);
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0x16EFFFC", Offset = "0x16EFFFC", VA = "0x16EFFFC")]
		public float GetAndResetFast(Vector3 position, float time)
		{
			return default(float);
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0x16E1340", Offset = "0x16E1340", VA = "0x16E1340")]
		public Vector3 Stop()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0x16EFE58", Offset = "0x16EFE58", VA = "0x16EFE58")]
		internal void ComputationStep(bool ignoreFinishedFlag = false)
		{
		}
	}
	[Token(Token = "0x200042D")]
	public class UnifiedSpectrum : WaterWavesSpectrum
	{
		[Token(Token = "0x40021C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly float fetch;

		[Token(Token = "0x40021C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private readonly float freqScale;

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0x15B7F20", Offset = "0x15B7F20", VA = "0x15B7F20")]
		public UnifiedSpectrum(float tileSize, float gravity, float windSpeed, float amplitude, float freqScale, float fetch)
		{
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0x15B7F58", Offset = "0x15B7F58", VA = "0x15B7F58", Slot = "4")]
		public override void ComputeSpectrum(Vector3[] spectrum, float tileSizeMultiplier, int maxResolution, System.Random random)
		{
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0x15B86A0", Offset = "0x15B86A0", VA = "0x15B86A0")]
		private float PhaseSpeed(float k, float km)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200042E")]
	public struct WaterWave : IComparable<WaterWave>
	{
		[Token(Token = "0x40021C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly ushort u;

		[Token(Token = "0x40021C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public readonly ushort v;

		[Token(Token = "0x40021C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public readonly float kx;

		[Token(Token = "0x40021C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly float kz;

		[Token(Token = "0x40021C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly float nkx;

		[Token(Token = "0x40021C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly float nky;

		[Token(Token = "0x40021C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly float w;

		[Token(Token = "0x40021C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly byte scaleIndex;

		[Token(Token = "0x40021CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly float dotOffset;

		[Token(Token = "0x40021CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float amplitude;

		[Token(Token = "0x40021CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float cpuPriority;

		[Token(Token = "0x40021CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float offset;

		[Token(Token = "0x17000348")]
		public float k
		{
			[Token(Token = "0x60018C6")]
			[Address(RVA = "0x16F649C", Offset = "0x16F649C", VA = "0x16F649C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0x16F643C", Offset = "0x16F643C", VA = "0x16F643C")]
		public WaterWave(byte scaleIndex, float offsetX, float offsetZ, ushort u, ushort v, float kx, float kz, float k, float w, float amplitude, float cpuPriority)
		{
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0x16F64B4", Offset = "0x16F64B4", VA = "0x16F64B4")]
		public void UpdateSpectralValues(Vector3[][] spectrum, Vector2 windDirection, float directionalityInv, int resolution, float horizontalScale)
		{
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0x16F6600", Offset = "0x16F6600", VA = "0x16F6600")]
		public Vector3 GetDisplacementAt(float x, float z, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0x16F66EC", Offset = "0x16F66EC", VA = "0x16F66EC")]
		public Vector2 GetRawHorizontalDisplacementAt(float x, float z, float t)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0x16F674C", Offset = "0x16F674C", VA = "0x16F674C")]
		public void GetForceAndHeightAt(float x, float z, float t, Vector4 result)
		{
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0x16F68B0", Offset = "0x16F68B0", VA = "0x16F68B0")]
		public float GetHeightAt(float x, float z, float t)
		{
			return default(float);
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0x16F68F8", Offset = "0x16F68F8", VA = "0x16F68F8", Slot = "4")]
		public int CompareTo(WaterWave other)
		{
			return default(int);
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0x16F6908", Offset = "0x16F6908", VA = "0x16F6908")]
		private float DisplacementFunc(float r, float precomp)
		{
			return default(float);
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0x16F6950", Offset = "0x16F6950", VA = "0x16F6950")]
		private float DisplacementFuncDerivative(float r, float precomp)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200042F")]
	public abstract class WaterWavesSpectrum
	{
		[Token(Token = "0x40021CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected float tileSize;

		[Token(Token = "0x40021CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		protected float gravity;

		[Token(Token = "0x40021D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected float windSpeed;

		[Token(Token = "0x40021D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected float amplitude;

		[Token(Token = "0x17000349")]
		public float TileSize
		{
			[Token(Token = "0x60018D0")]
			[Address(RVA = "0x16F69E8", Offset = "0x16F69E8", VA = "0x16F69E8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700034A")]
		public float Gravity
		{
			[Token(Token = "0x60018D1")]
			[Address(RVA = "0x16F6A20", Offset = "0x16F6A20", VA = "0x16F6A20")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0x16F699C", Offset = "0x16F699C", VA = "0x16F699C")]
		protected WaterWavesSpectrum(float tileSize, float gravity, float windSpeed, float amplitude)
		{
		}

		[Token(Token = "0x60018D2")]
		public abstract void ComputeSpectrum(Vector3[] spectrum, float tileSizeMultiplier, int maxResolution, System.Random random);
	}
	[Token(Token = "0x2000430")]
	public sealed class WaterWavesSpectrumData : WaterWavesSpectrumDataBase
	{
		[Token(Token = "0x40021D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly WaterWavesSpectrum spectrum;

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0x16F6A28", Offset = "0x16F6A28", VA = "0x16F6A28")]
		public WaterWavesSpectrumData(Water water, WindWaves windWaves, WaterWavesSpectrum spectrum)
		{
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0x16F6B04", Offset = "0x16F6B04", VA = "0x16F6B04", Slot = "4")]
		protected override void GenerateContents(Vector3[][] spectrumValues)
		{
		}
	}
	[Token(Token = "0x2000431")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x579624", Offset = "0x579624")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x579624", Offset = "0x579624")]
	public sealed class Spray : MonoBehaviour, IOverlaysRenderer
	{
		[Token(Token = "0x2000432")]
		public struct Particle
		{
			[Token(Token = "0x40021F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 Position;

			[Token(Token = "0x40021F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 Velocity;

			[Token(Token = "0x40021F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector2 Lifetime;

			[Token(Token = "0x40021F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float Offset;

			[Token(Token = "0x40021F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float MaxIntensity;

			[Token(Token = "0x60018F0")]
			[Address(RVA = "0x1581754", Offset = "0x1581754", VA = "0x1581754")]
			public Particle(Vector3 position, Vector3 velocity, float lifetime, float offset, float maxIntensity)
			{
			}
		}

		[Token(Token = "0x40021D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		private Shader sprayTiledGeneratorShader;

		[Token(Token = "0x40021D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[SerializeField]
		private Shader sprayLocalGeneratorShader;

		[Token(Token = "0x40021D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		[SerializeField]
		private Shader sprayToFoamShader;

		[Token(Token = "0x40021D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		[SerializeField]
		private ComputeShader sprayControllerShader;

		[Token(Token = "0x40021D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Material sprayMaterial;

		[Token(Token = "0x40021D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5841A8", Offset = "0x5841A8")]
		[SerializeField]
		private int maxParticles;

		[Token(Token = "0x40021D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private bool sprayToFoam;

		[Token(Token = "0x40021DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float spawnThreshold;

		[Token(Token = "0x40021DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float spawnSkipRatio;

		[Token(Token = "0x40021DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float scale;

		[Token(Token = "0x40021DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Water water;

		[Token(Token = "0x40021DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private WindWaves windWaves;

		[Token(Token = "0x40021DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private DynamicWater overlays;

		[Token(Token = "0x40021E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material sprayTiledGeneratorMaterial;

		[Token(Token = "0x40021E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material sprayLocalGeneratorMaterial;

		[Token(Token = "0x40021E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material sprayToFoamMaterial;

		[Token(Token = "0x40021E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Transform probeAnchor;

		[Token(Token = "0x40021E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private RenderTexture blankOutput;

		[Token(Token = "0x40021E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Texture2D blankWhiteTex;

		[Token(Token = "0x40021E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private ComputeBuffer particlesA;

		[Token(Token = "0x40021E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ComputeBuffer particlesB;

		[Token(Token = "0x40021E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ComputeBuffer particlesInfo;

		[Token(Token = "0x40021E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ComputeBuffer spawnBuffer;

		[Token(Token = "0x40021EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int resolution;

		[Token(Token = "0x40021EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Mesh mesh;

		[Token(Token = "0x40021EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool supported;

		[Token(Token = "0x40021ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		private bool resourcesReady;

		[Token(Token = "0x40021EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Vector2 lastSurfaceOffset;

		[Token(Token = "0x40021EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private readonly int[] countBuffer;

		[Token(Token = "0x40021F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float skipRatioPrecomp;

		[Token(Token = "0x40021F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Particle[] particlesToSpawn;

		[Token(Token = "0x40021F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private int numParticlesToSpawn;

		[Token(Token = "0x40021F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private MaterialPropertyBlock[] propertyBlocks;

		[Token(Token = "0x1700034B")]
		public int MaxParticles
		{
			[Token(Token = "0x60018D8")]
			[Address(RVA = "0x1688770", Offset = "0x1688770", VA = "0x1688770")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700034C")]
		public int SpawnedParticles
		{
			[Token(Token = "0x60018D9")]
			[Address(RVA = "0x1688778", Offset = "0x1688778", VA = "0x1688778")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700034D")]
		public ComputeBuffer ParticlesBuffer
		{
			[Token(Token = "0x60018DA")]
			[Address(RVA = "0x16887E4", Offset = "0x16887E4", VA = "0x16887E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0x1687E64", Offset = "0x1687E64", VA = "0x1687E64")]
		private void Start()
		{
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0x1688090", Offset = "0x1688090", VA = "0x1688090")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0x1688368", Offset = "0x1688368", VA = "0x1688368")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0x1687FF0", Offset = "0x1687FF0", VA = "0x1687FF0")]
		private bool CheckSupport()
		{
			return default(bool);
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0x16887EC", Offset = "0x16887EC", VA = "0x16887EC")]
		private void CheckResources()
		{
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0x1688534", Offset = "0x1688534", VA = "0x1688534")]
		private void Dispose()
		{
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0x1688F7C", Offset = "0x1688F7C", VA = "0x1688F7C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0x1689120", Offset = "0x1689120", VA = "0x1689120")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0x1689BC4", Offset = "0x1689BC4", VA = "0x1689BC4")]
		private void OnSomeCameraPreCull(Camera camera)
		{
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0x1689F88", Offset = "0x1689F88", VA = "0x1689F88")]
		public void SpawnCustomParticle(Particle particle)
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0x1689A14", Offset = "0x1689A14", VA = "0x1689A14")]
		public void SpawnCustomParticles(Particle[] particles, int numParticles)
		{
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0x1689720", Offset = "0x1689720", VA = "0x1689720")]
		private void SpawnWindWavesParticlesTiled(Transform origin)
		{
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0x168A200", Offset = "0x168A200", VA = "0x168A200")]
		private void SpawnWindWavesParticlesLocal(DynamicWaterCameraData overlays)
		{
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0x168A4AC", Offset = "0x168A4AC", VA = "0x168A4AC")]
		private void GenerateLocalFoam(DynamicWaterCameraData data)
		{
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0x1689304", Offset = "0x1689304", VA = "0x1689304")]
		private void UpdateParticles()
		{
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0x168A0A0", Offset = "0x168A0A0", VA = "0x168A0A0")]
		private Texture2D GetBlankWhiteTex()
		{
			return null;
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0x1689274", Offset = "0x1689274", VA = "0x1689274")]
		private void ClearParticles()
		{
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0x168923C", Offset = "0x168923C", VA = "0x168923C")]
		private void SwapParticleBuffers()
		{
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0x168A9D8", Offset = "0x168A9D8", VA = "0x168A9D8")]
		private void OnResolutionChanged(WindWaves windWaves)
		{
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0x16882B8", Offset = "0x16882B8", VA = "0x16882B8")]
		private void OnProfilesChanged(Water water)
		{
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0x1688EC8", Offset = "0x1688EC8", VA = "0x1688EC8")]
		private void UpdatePrecomputedParams()
		{
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0x168AA94", Offset = "0x168AA94", VA = "0x168AA94", Slot = "4")]
		public void RenderOverlays(DynamicWaterCameraData overlays)
		{
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0x168AA98", Offset = "0x168AA98", VA = "0x168AA98", Slot = "5")]
		public void RenderFoam(DynamicWaterCameraData overlays)
		{
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0x168AAE8", Offset = "0x168AAE8", VA = "0x168AAE8")]
		public Spray()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000433")]
	public class Blur
	{
		[Token(Token = "0x40021F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		[SerializeField]
		protected ComputeShader blurComputeShader;

		[Token(Token = "0x40021FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		private Shader blurShader;

		[Token(Token = "0x40021FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[SerializeField]
		private int computeShaderKernelIndex;

		[Token(Token = "0x40021FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5842A4", Offset = "0x5842A4")]
		[SerializeField]
		private int iterations;

		[Token(Token = "0x40021FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float size;

		[Token(Token = "0x40021FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material blurMaterial;

		[Token(Token = "0x40021FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int passIndex;

		[Token(Token = "0x4002200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected ComputeBuffer shaderWeights;

		[Token(Token = "0x4002201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static int offsetHash;

		[Token(Token = "0x1700034E")]
		public int Iterations
		{
			[Token(Token = "0x60018F2")]
			[Address(RVA = "0x7E82F0", Offset = "0x7E82F0", VA = "0x7E82F0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60018F3")]
			[Address(RVA = "0x7E82F8", Offset = "0x7E82F8", VA = "0x7E82F8")]
			set
			{
			}
		}

		[Token(Token = "0x1700034F")]
		public float Size
		{
			[Token(Token = "0x60018F4")]
			[Address(RVA = "0x7E833C", Offset = "0x7E833C", VA = "0x7E833C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60018F5")]
			[Address(RVA = "0x7E8344", Offset = "0x7E8344", VA = "0x7E8344")]
			set
			{
			}
		}

		[Token(Token = "0x17000350")]
		public float TotalSize
		{
			[Token(Token = "0x60018F6")]
			[Address(RVA = "0x7E8318", Offset = "0x7E8318", VA = "0x7E8318")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60018F7")]
			[Address(RVA = "0x7E8328", Offset = "0x7E8328", VA = "0x7E8328")]
			set
			{
			}
		}

		[Token(Token = "0x17000351")]
		public Material BlurMaterial
		{
			[Token(Token = "0x60018F8")]
			[Address(RVA = "0x7E834C", Offset = "0x7E834C", VA = "0x7E834C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018F9")]
			[Address(RVA = "0x7E8518", Offset = "0x7E8518", VA = "0x7E8518")]
			set
			{
			}
		}

		[Token(Token = "0x17000352")]
		public int PassIndex
		{
			[Token(Token = "0x60018FA")]
			[Address(RVA = "0x7E8520", Offset = "0x7E8520", VA = "0x7E8520")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60018FB")]
			[Address(RVA = "0x7E8528", Offset = "0x7E8528", VA = "0x7E8528")]
			set
			{
			}
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0x7E82D8", Offset = "0x7E82D8", VA = "0x7E82D8")]
		public Blur()
		{
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0x7E8530", Offset = "0x7E8530", VA = "0x7E8530")]
		public void Apply(RenderTexture target)
		{
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0x7E8798", Offset = "0x7E8798", VA = "0x7E8798")]
		protected void ApplyComputeShader(RenderTexture target)
		{
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0x7E8540", Offset = "0x7E8540", VA = "0x7E8540")]
		protected void ApplyPixelShader(RenderTexture target)
		{
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0x7E84A0", Offset = "0x7E84A0", VA = "0x7E84A0")]
		public void Validate()
		{
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0x7E8BCC", Offset = "0x7E8BCC", VA = "0x7E8BCC", Slot = "4")]
		public virtual void Validate(string shaderName, [Optional] string computeShaderName, int kernelIndex = 0)
		{
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0x7E8C8C", Offset = "0x7E8C8C", VA = "0x7E8C8C")]
		public void Dispose()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000434")]
	public sealed class BlurSSS : Blur
	{
		[Token(Token = "0x4002202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool initializedDefaults;

		[Token(Token = "0x4002203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int maxDistanceHash;

		[Token(Token = "0x4002204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int absorptionColorPerPixelHash;

		[Token(Token = "0x6001902")]
		[Address(RVA = "0x7E8D5C", Offset = "0x7E8D5C", VA = "0x7E8D5C")]
		public void Apply(RenderTexture source, RenderTexture target, Color absorptionColor, float worldSpaceSize, float lightFractionToIgnore)
		{
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0x7E8F68", Offset = "0x7E8F68", VA = "0x7E8F68")]
		private void ApplyComputeShader(RenderTexture target, Color absorptionColor, float worldSpaceSize, float lightFractionToIgnore)
		{
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0x7E8D60", Offset = "0x7E8D60", VA = "0x7E8D60")]
		private void ApplyPixelShader(RenderTexture source, RenderTexture target, Color absorptionColor, float worldSpaceSize, float lightFractionToIgnore)
		{
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0x7E93F8", Offset = "0x7E93F8", VA = "0x7E93F8", Slot = "4")]
		public override void Validate(string shaderName, [Optional] string computeShaderName, int kernelIndex = 0)
		{
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0x7E9338", Offset = "0x7E9338", VA = "0x7E9338")]
		private static void InitializeStaticFields()
		{
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0x7E9448", Offset = "0x7E9448", VA = "0x7E9448")]
		public BlurSSS()
		{
		}
	}
	[Token(Token = "0x2000435")]
	public class GradientContainer : ScriptableObject
	{
		[Token(Token = "0x4002205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Gradient gradient;

		[Token(Token = "0x6001909")]
		[Address(RVA = "0x7F7C94", Offset = "0x7F7C94", VA = "0x7F7C94")]
		public GradientContainer()
		{
		}
	}
	[Token(Token = "0x2000436")]
	public interface IWaterDisplacements
	{
		[Token(Token = "0x17000353")]
		float MaxVerticalDisplacement
		{
			[Token(Token = "0x600190E")]
			get;
		}

		[Token(Token = "0x17000354")]
		float MaxHorizontalDisplacement
		{
			[Token(Token = "0x600190F")]
			get;
		}

		[Token(Token = "0x600190A")]
		Vector3 GetDisplacementAt(float x, float z, float spectrumStart, float spectrumEnd, float time);

		[Token(Token = "0x600190B")]
		Vector2 GetHorizontalDisplacementAt(float x, float z, float spectrumStart, float spectrumEnd, float time);

		[Token(Token = "0x600190C")]
		float GetHeightAt(float x, float z, float spectrumStart, float spectrumEnd, float time);

		[Token(Token = "0x600190D")]
		Vector4 GetForceAndHeightAt(float x, float z, float spectrumStart, float spectrumEnd, float time);
	}
	[Token(Token = "0x2000437")]
	public interface IWaterRenderAware
	{
		[Token(Token = "0x6001910")]
		void OnWaterRender(Camera camera);

		[Token(Token = "0x6001911")]
		void OnWaterPostRender(Camera camera);

		[Token(Token = "0x6001912")]
		void BuildShaderVariant(ShaderVariant variant, Water water, WaterQualityLevel qualityLevel);

		[Token(Token = "0x6001913")]
		void UpdateMaterial(Water water, WaterQualityLevel qualityLevel);
	}
	[Serializable]
	[Token(Token = "0x2000438")]
	public struct NormalMapAnimation
	{
		[Token(Token = "0x4002206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float speed;

		[Token(Token = "0x4002207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x584314", Offset = "0x584314")]
		[SerializeField]
		private float deviation;

		[Token(Token = "0x4002208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x584360", Offset = "0x584360")]
		private float intensity;

		[Token(Token = "0x4002209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private Vector2 tiling;

		[Token(Token = "0x17000355")]
		public float Speed
		{
			[Token(Token = "0x6001915")]
			[Address(RVA = "0x16C7A34", Offset = "0x16C7A34", VA = "0x16C7A34")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000356")]
		public float Deviation
		{
			[Token(Token = "0x6001916")]
			[Address(RVA = "0x16C7A3C", Offset = "0x16C7A3C", VA = "0x16C7A3C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000357")]
		public float Intensity
		{
			[Token(Token = "0x6001917")]
			[Address(RVA = "0x16C7A44", Offset = "0x16C7A44", VA = "0x16C7A44")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000358")]
		public Vector2 Tiling
		{
			[Token(Token = "0x6001918")]
			[Address(RVA = "0x16C7A4C", Offset = "0x16C7A4C", VA = "0x16C7A4C")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0x16C7A24", Offset = "0x16C7A24", VA = "0x16C7A24")]
		public NormalMapAnimation(float speed, float deviation, float intensity, Vector2 tiling)
		{
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0x16C7A54", Offset = "0x16C7A54", VA = "0x16C7A54")]
		public static NormalMapAnimation operator *(NormalMapAnimation a, float w)
		{
			return default(NormalMapAnimation);
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0x16C7A70", Offset = "0x16C7A70", VA = "0x16C7A70")]
		public static NormalMapAnimation operator +(NormalMapAnimation a, NormalMapAnimation b)
		{
			return default(NormalMapAnimation);
		}
	}
	[Token(Token = "0x2000439")]
	public class RenderTexturesCache
	{
		[Token(Token = "0x200043A")]
		[ExecuteInEditMode]
		public class RenderTexturesUpdater : MonoBehaviour
		{
			[Token(Token = "0x4002215")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static RenderTexturesUpdater instance;

			[Token(Token = "0x6001923")]
			[Address(RVA = "0x157EE88", Offset = "0x157EE88", VA = "0x157EE88")]
			public static void EnsureInstance()
			{
			}

			[Token(Token = "0x6001924")]
			[Address(RVA = "0x157EFE8", Offset = "0x157EFE8", VA = "0x157EFE8")]
			private void Update()
			{
			}

			[Token(Token = "0x6001925")]
			[Address(RVA = "0x157F0EC", Offset = "0x157F0EC", VA = "0x157F0EC")]
			public RenderTexturesUpdater()
			{
			}
		}

		[Token(Token = "0x400220A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<ulong, RenderTexturesCache> cache;

		[Token(Token = "0x400220B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Queue<RenderTexture> renderTextures;

		[Token(Token = "0x400220C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int lastFrameAllUsed;

		[Token(Token = "0x400220D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ulong hash;

		[Token(Token = "0x400220E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly int width;

		[Token(Token = "0x400220F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private readonly int height;

		[Token(Token = "0x4002210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly int depthBuffer;

		[Token(Token = "0x4002211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private readonly RenderTextureFormat format;

		[Token(Token = "0x4002212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly bool linear;

		[Token(Token = "0x4002213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private readonly bool uav;

		[Token(Token = "0x4002214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private readonly bool mipMaps;

		[Token(Token = "0x600191B")]
		[Address(RVA = "0x1533094", Offset = "0x1533094", VA = "0x1533094")]
		public RenderTexturesCache(ulong hash, int width, int height, int depthBuffer, RenderTextureFormat format, bool linear, bool uav, bool mipMaps)
		{
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0x153317C", Offset = "0x153317C", VA = "0x153317C")]
		public static RenderTexturesCache GetCache(int width, int height, int depthBuffer, RenderTextureFormat format, bool linear, bool uav, bool mipMaps = false)
		{
			return null;
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0x1533338", Offset = "0x1533338", VA = "0x1533338")]
		public static TemporaryRenderTexture GetTemporary(int width, int height, int depthBuffer, RenderTextureFormat format, bool linear, bool uav, bool mipMaps = false)
		{
			return default(TemporaryRenderTexture);
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0x1533414", Offset = "0x1533414", VA = "0x1533414")]
		public TemporaryRenderTexture GetTemporary()
		{
			return default(TemporaryRenderTexture);
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0x1533444", Offset = "0x1533444", VA = "0x1533444")]
		public RenderTexture GetTemporaryDirect()
		{
			return null;
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0x1533638", Offset = "0x1533638", VA = "0x1533638")]
		public void ReleaseTemporaryDirect(RenderTexture renderTexture)
		{
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0x153369C", Offset = "0x153369C", VA = "0x153369C")]
		internal void Update(int frame)
		{
		}
	}
	[Token(Token = "0x200043B")]
	public class ResolutionAttribute : PropertyAttribute
	{
		[Token(Token = "0x4002216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly int recommendedResolution;

		[Token(Token = "0x4002217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly int[] resolutions;

		[Token(Token = "0x17000359")]
		public int RecommendedResolution
		{
			[Token(Token = "0x6001927")]
			[Address(RVA = "0x1533824", Offset = "0x1533824", VA = "0x1533824")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700035A")]
		public int[] Resolutions
		{
			[Token(Token = "0x6001928")]
			[Address(RVA = "0x153382C", Offset = "0x153382C", VA = "0x153382C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0x15337E0", Offset = "0x15337E0", VA = "0x15337E0")]
		public ResolutionAttribute(int recommendedResolution, params int[] resolutions)
		{
		}
	}
	[Token(Token = "0x200043C")]
	public class ScriptableObjectSingleton : ScriptableObject
	{
		[Token(Token = "0x6001929")]
		protected static T LoadSingleton<T>() where T : ScriptableObject
		{
			return null;
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0x14DAABC", Offset = "0x14DAABC", VA = "0x14DAABC")]
		public ScriptableObjectSingleton()
		{
		}
	}
	[Token(Token = "0x200043D")]
	public sealed class SpritesheetAnimation : MonoBehaviour
	{
		[Token(Token = "0x4002218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int horizontal;

		[Token(Token = "0x4002219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int vertical;

		[Token(Token = "0x400221A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float timeStep;

		[Token(Token = "0x400221B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool loop;

		[Token(Token = "0x400221C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[SerializeField]
		private bool destroyGo;

		[Token(Token = "0x400221D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material material;

		[Token(Token = "0x400221E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float nextChangeTime;

		[Token(Token = "0x400221F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int x;

		[Token(Token = "0x4002220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int y;

		[Token(Token = "0x600192B")]
		[Address(RVA = "0x168ABAC", Offset = "0x168ABAC", VA = "0x168ABAC")]
		private void Start()
		{
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0x168AC78", Offset = "0x168AC78", VA = "0x168AC78")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0x168AD38", Offset = "0x168AD38", VA = "0x168AD38")]
		private void Update()
		{
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0x168AEA0", Offset = "0x168AEA0", VA = "0x168AEA0")]
		public SpritesheetAnimation()
		{
		}
	}
	[Token(Token = "0x200043E")]
	public struct TemporaryRenderTexture : IDisposable
	{
		[Token(Token = "0x4002221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RenderTexture renderTexture;

		[Token(Token = "0x4002222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private RenderTexturesCache renderTexturesCache;

		[Token(Token = "0x1700035B")]
		public RenderTexture Texture
		{
			[Token(Token = "0x6001930")]
			[Address(RVA = "0x1603E30", Offset = "0x1603E30", VA = "0x1603E30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0x1603DE8", Offset = "0x1603DE8", VA = "0x1603DE8")]
		internal TemporaryRenderTexture(RenderTexturesCache renderTexturesCache)
		{
		}

		[Token(Token = "0x6001931")]
		[Address(RVA = "0x1603E38", Offset = "0x1603E38", VA = "0x1603E38", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0x1603EE8", Offset = "0x1603EE8", VA = "0x1603EE8")]
		public static implicit operator RenderTexture(TemporaryRenderTexture that)
		{
			return null;
		}
	}
	[Token(Token = "0x200043F")]
	public static class WaterDebug
	{
		[Token(Token = "0x6001933")]
		[Address(RVA = "0x16E0804", Offset = "0x16E0804", VA = "0x16E0804")]
		public static void WriteAllMaps(Water water)
		{
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0x16E0808", Offset = "0x16E0808", VA = "0x16E0808")]
		public static void SaveTexture(Texture tex, string name)
		{
		}
	}
	[Token(Token = "0x2000440")]
	public class WaterPackageUtilities
	{
		[Token(Token = "0x6001935")]
		[Address(RVA = "0x16E7CF4", Offset = "0x16E7CF4", VA = "0x16E7CF4")]
		public WaterPackageUtilities()
		{
		}
	}
	[Token(Token = "0x2000441")]
	public static class WaterUtilities
	{
		[Token(Token = "0x6001936")]
		[Address(RVA = "0x16F2F10", Offset = "0x16F2F10", VA = "0x16F2F10")]
		public static Vector3 RaycastPlane(Camera camera, float planeHeight, Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0x16F306C", Offset = "0x16F306C", VA = "0x16F306C")]
		public static Vector3 ViewportWaterPerpendicular(Camera camera)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0x16F3100", Offset = "0x16F3100", VA = "0x16F3100")]
		public static Vector3 ViewportWaterRight(Camera camera)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0x16F1058", Offset = "0x16F1058", VA = "0x16F1058")]
		public static void Destroy(this UnityEngine.Object obj)
		{
		}
	}
	[Token(Token = "0x2000442")]
	public enum WaterVolumetricLightingQuality
	{
		[Token(Token = "0x4002224")]
		Cheap,
		[Token(Token = "0x4002225")]
		Normal,
		[Token(Token = "0x4002226")]
		Best
	}
	[Token(Token = "0x2000443")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5796D4", Offset = "0x5796D4")]
	public sealed class WaterSimpleMask : MonoBehaviour
	{
		[Token(Token = "0x4002227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Water water;

		[Token(Token = "0x4002228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int renderQueuePriority;

		[Token(Token = "0x4002229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Renderer rendererComponent;

		[Token(Token = "0x1700035C")]
		public Renderer Renderer
		{
			[Token(Token = "0x600193C")]
			[Address(RVA = "0x16F0554", Offset = "0x16F0554", VA = "0x16F0554")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035D")]
		public int RenderQueuePriority
		{
			[Token(Token = "0x600193D")]
			[Address(RVA = "0x16F055C", Offset = "0x16F055C", VA = "0x16F055C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700035E")]
		public Water Water
		{
			[Token(Token = "0x600193E")]
			[Address(RVA = "0x16F0564", Offset = "0x16F0564", VA = "0x16F0564")]
			get
			{
				return null;
			}
			[Token(Token = "0x600193F")]
			[Address(RVA = "0x16F056C", Offset = "0x16F056C", VA = "0x16F056C")]
			set
			{
			}
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0x16F0274", Offset = "0x16F0274", VA = "0x16F0274")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0x16F04A4", Offset = "0x16F04A4", VA = "0x16F04A4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001940")]
		[Address(RVA = "0x16F0638", Offset = "0x16F0638", VA = "0x16F0638")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0x16F06D0", Offset = "0x16F06D0", VA = "0x16F06D0")]
		private void OnWaterIdChanged()
		{
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0x16F0770", Offset = "0x16F0770", VA = "0x16F0770")]
		public WaterSimpleMask()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000444")]
	public class WaterVolume
	{
		[Token(Token = "0x400222A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x584420", Offset = "0x584420")]
		[SerializeField]
		private bool boundless;

		[Token(Token = "0x400222B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool collidersAdded;

		[Token(Token = "0x400222C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Water water;

		[Token(Token = "0x400222D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly List<WaterVolumeAdd> volumes;

		[Token(Token = "0x400222E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly List<WaterVolumeSubtract> subtractors;

		[Token(Token = "0x1700035F")]
		public bool Boundless
		{
			[Token(Token = "0x6001944")]
			[Address(RVA = "0x16F3610", Offset = "0x16F3610", VA = "0x16F3610")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000360")]
		public bool HasRenderableAdditiveVolumes
		{
			[Token(Token = "0x6001945")]
			[Address(RVA = "0x16F3618", Offset = "0x16F3618", VA = "0x16F3618")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001943")]
		[Address(RVA = "0x16F3608", Offset = "0x16F3608", VA = "0x16F3608")]
		internal void Start(Water water)
		{
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0x16F36C4", Offset = "0x16F36C4", VA = "0x16F36C4")]
		public List<WaterVolumeAdd> GetVolumesDirect()
		{
			return null;
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0x16F36CC", Offset = "0x16F36CC", VA = "0x16F36CC")]
		public List<WaterVolumeSubtract> GetSubtractiveVolumesDirect()
		{
			return null;
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0x16F36D4", Offset = "0x16F36D4", VA = "0x16F36D4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001949")]
		[Address(RVA = "0x16F36D8", Offset = "0x16F36D8", VA = "0x16F36D8")]
		internal void Enable()
		{
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0x16F3A30", Offset = "0x16F3A30", VA = "0x16F3A30")]
		internal void Disable()
		{
		}

		[Token(Token = "0x600194B")]
		[Address(RVA = "0x16F3928", Offset = "0x16F3928", VA = "0x16F3928")]
		public void EnableRenderers()
		{
		}

		[Token(Token = "0x600194C")]
		[Address(RVA = "0x16F3A34", Offset = "0x16F3A34", VA = "0x16F3A34")]
		public void DisableRenderers()
		{
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0x16F38B4", Offset = "0x16F38B4", VA = "0x16F38B4")]
		internal void AddVolume(WaterVolumeAdd volume)
		{
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0x16F3D7C", Offset = "0x16F3D7C", VA = "0x16F3D7C")]
		internal void RemoveVolume(WaterVolumeAdd volume)
		{
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0x16F3DE0", Offset = "0x16F3DE0", VA = "0x16F3DE0")]
		internal void AddSubtractor(WaterVolumeSubtract volume)
		{
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0x16F3E54", Offset = "0x16F3E54", VA = "0x16F3E54")]
		internal void RemoveSubtractor(WaterVolumeSubtract volume)
		{
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0x16F3EB8", Offset = "0x16F3EB8", VA = "0x16F3EB8")]
		public bool IsPointInside(Vector3 point, WaterVolumeSubtract[] exclusions, float radius = 0f)
		{
			return default(bool);
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0x16F4130", Offset = "0x16F4130", VA = "0x16F4130")]
		private static bool Contains(WaterVolumeSubtract[] array, WaterVolumeSubtract element)
		{
			return default(bool);
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0x16F41F8", Offset = "0x16F41F8", VA = "0x16F41F8")]
		internal bool IsPointInsideMainVolume(Vector3 point, float radius = 0f)
		{
			return default(bool);
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0x16F4270", Offset = "0x16F4270", VA = "0x16F4270")]
		public WaterVolume()
		{
		}
	}
	[Token(Token = "0x2000445")]
	public class WaterVolumeAdd : WaterVolumeBase
	{
		[Token(Token = "0x6001955")]
		[Address(RVA = "0x16F4358", Offset = "0x16F4358", VA = "0x16F4358", Slot = "5")]
		protected override void Register(Water water)
		{
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0x16F43F8", Offset = "0x16F43F8", VA = "0x16F43F8", Slot = "6")]
		protected override void Unregister(Water water)
		{
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0x16F4498", Offset = "0x16F4498", VA = "0x16F4498")]
		public WaterVolumeAdd()
		{
		}
	}
	[Token(Token = "0x2000446")]
	[ExecuteInEditMode]
	public abstract class WaterVolumeBase : MonoBehaviour
	{
		[Token(Token = "0x2000447")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x57974C", Offset = "0x57974C")]
		public enum WaterVolumeMode
		{
			[Token(Token = "0x4002239")]
			Physics,
			[Token(Token = "0x400223A")]
			PhysicsAndRendering,
			[Token(Token = "0x400223B")]
			Deprecated
		}

		[Token(Token = "0x400222F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Water water;

		[Token(Token = "0x4002230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private WaterVolumeRenderMode renderMode;

		[Token(Token = "0x4002231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool affectPhysics;

		[Token(Token = "0x4002232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[HideInInspector]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x58449C", Offset = "0x58449C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58449C", Offset = "0x58449C")]
		[SerializeField]
		private bool renderDisplacedWater;

		[Token(Token = "0x4002233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x58451C", Offset = "0x58451C")]
		[SerializeField]
		private WaterVolumeMode mode;

		[Token(Token = "0x4002234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] colliders;

		[Token(Token = "0x4002235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MeshFilter[] volumeFilters;

		[Token(Token = "0x4002236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MeshRenderer[] volumeRenderers;

		[Token(Token = "0x4002237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<Collider, WaterVolumeBase> colliderToVolumeCache;

		[Token(Token = "0x17000361")]
		public bool EnablePhysics
		{
			[Token(Token = "0x600195A")]
			[Address(RVA = "0x16F4800", Offset = "0x16F4800", VA = "0x16F4800")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000362")]
		public WaterVolumeRenderMode RenderMode
		{
			[Token(Token = "0x600195B")]
			[Address(RVA = "0x16F4808", Offset = "0x16F4808", VA = "0x16F4808")]
			get
			{
				return default(WaterVolumeRenderMode);
			}
		}

		[Token(Token = "0x17000363")]
		public MeshFilter[] VolumeFilters
		{
			[Token(Token = "0x600195C")]
			[Address(RVA = "0x16F4810", Offset = "0x16F4810", VA = "0x16F4810")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000364")]
		public MeshRenderer[] VolumeRenderers
		{
			[Token(Token = "0x600195D")]
			[Address(RVA = "0x16F4818", Offset = "0x16F4818", VA = "0x16F4818")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000365")]
		public Water Water
		{
			[Token(Token = "0x600195E")]
			[Address(RVA = "0x16F4820", Offset = "0x16F4820", VA = "0x16F4820")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000366")]
		protected virtual CullMode CullMode
		{
			[Token(Token = "0x600195F")]
			[Address(RVA = "0x16F4828", Offset = "0x16F4828", VA = "0x16F4828", Slot = "4")]
			get
			{
				return default(CullMode);
			}
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0x16F4534", Offset = "0x16F4534", VA = "0x16F4534")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0x16F4688", Offset = "0x16F4688", VA = "0x16F4688")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6001960")]
		protected abstract void Register(Water water);

		[Token(Token = "0x6001961")]
		protected abstract void Unregister(Water water);

		[Token(Token = "0x6001962")]
		public static WaterVolumeBase GetWaterVolume<T>(Collider collider) where T : WaterVolumeBase
		{
			return null;
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0x16F4830", Offset = "0x16F4830", VA = "0x16F4830")]
		public static WaterVolumeBase GetWaterVolume(Collider collider)
		{
			return null;
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0x16F49D8", Offset = "0x16F49D8", VA = "0x16F49D8")]
		protected void OnValidate()
		{
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0x16F3C50", Offset = "0x16F3C50", VA = "0x16F3C50")]
		public void AssignTo(Water water)
		{
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0x16F3B34", Offset = "0x16F3B34", VA = "0x16F3B34")]
		public void EnableRenderers(bool forBorderRendering)
		{
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0x16F3BE0", Offset = "0x16F3BE0", VA = "0x16F3BE0")]
		public void DisableRenderers()
		{
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0x16F4B7C", Offset = "0x16F4B7C", VA = "0x16F4B7C")]
		internal void SetLayer(int layer)
		{
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0x16F4090", Offset = "0x16F4090", VA = "0x16F4090")]
		public bool IsPointInside(Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0x16F4C04", Offset = "0x16F4C04", VA = "0x16F4C04")]
		private void Update()
		{
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0x16F46B8", Offset = "0x16F46B8", VA = "0x16F46B8")]
		private void DisposeRenderers()
		{
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0x16F4C98", Offset = "0x16F4C98", VA = "0x16F4C98", Slot = "7")]
		protected virtual void CreateRenderers()
		{
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0x16F4518", Offset = "0x16F4518", VA = "0x16F4518")]
		protected WaterVolumeBase()
		{
		}
	}
	[Token(Token = "0x2000448")]
	public enum WaterVolumeRenderMode
	{
		[Token(Token = "0x400223D")]
		None,
		[Token(Token = "0x400223E")]
		Basic,
		[Token(Token = "0x400223F")]
		Full
	}
	[Token(Token = "0x2000449")]
	public sealed class WaterVolumeProbe : MonoBehaviour
	{
		[Token(Token = "0x4002240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEvent enter;

		[Token(Token = "0x4002241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent leave;

		[Token(Token = "0x4002242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Water currentWater;

		[Token(Token = "0x4002243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform target;

		[Token(Token = "0x4002244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool targetted;

		[Token(Token = "0x4002245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WaterVolumeSubtract[] exclusions;

		[Token(Token = "0x4002246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float size;

		[Token(Token = "0x17000367")]
		public Water CurrentWater
		{
			[Token(Token = "0x600196F")]
			[Address(RVA = "0x16F54F4", Offset = "0x16F54F4", VA = "0x16F54F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000368")]
		public UnityEvent Enter
		{
			[Token(Token = "0x6001970")]
			[Address(RVA = "0x16F54FC", Offset = "0x16F54FC", VA = "0x16F54FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000369")]
		public UnityEvent Leave
		{
			[Token(Token = "0x6001971")]
			[Address(RVA = "0x16F5570", Offset = "0x16F5570", VA = "0x16F5570")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0x16F55E4", Offset = "0x16F55E4", VA = "0x16F55E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0x16F5730", Offset = "0x16F5730", VA = "0x16F5730")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0x16F5B2C", Offset = "0x16F5B2C", VA = "0x16F5B2C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0x16F5BA0", Offset = "0x16F5BA0", VA = "0x16F5BA0")]
		public void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001976")]
		[Address(RVA = "0x16F5E58", Offset = "0x16F5E58", VA = "0x16F5E58")]
		public void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0x16F55E8", Offset = "0x16F55E8", VA = "0x16F55E8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x58C784", Offset = "0x58C784")]
		private void ScanWaters()
		{
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0x16F59DC", Offset = "0x16F59DC", VA = "0x16F59DC")]
		private void ScanBoundlessWaters()
		{
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0x16F5D64", Offset = "0x16F5D64", VA = "0x16F5D64")]
		private void EnterWater(Water water)
		{
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0x16F5930", Offset = "0x16F5930", VA = "0x16F5930")]
		private void LeaveCurrentWater()
		{
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0x16F604C", Offset = "0x16F604C", VA = "0x16F604C")]
		public static WaterVolumeProbe CreateProbe(Transform target, float size = 0f)
		{
			return null;
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0x16F626C", Offset = "0x16F626C", VA = "0x16F626C")]
		public WaterVolumeProbe()
		{
		}
	}
	[Token(Token = "0x200044A")]
	public class WaterVolumeSubtract : WaterVolumeBase
	{
		[Token(Token = "0x1700036A")]
		protected override CullMode CullMode
		{
			[Token(Token = "0x600197D")]
			[Address(RVA = "0x16F6274", Offset = "0x16F6274", VA = "0x16F6274", Slot = "4")]
			get
			{
				return default(CullMode);
			}
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0x16F627C", Offset = "0x16F627C", VA = "0x16F627C", Slot = "5")]
		protected override void Register(Water water)
		{
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0x16F631C", Offset = "0x16F631C", VA = "0x16F631C", Slot = "6")]
		protected override void Unregister(Water water)
		{
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0x16F63BC", Offset = "0x16F63BC", VA = "0x16F63BC")]
		public WaterVolumeSubtract()
		{
		}
	}
	[Token(Token = "0x200044B")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x579784", Offset = "0x579784")]
	public sealed class Water : MonoBehaviour, ISerializationCallbackReceiver
	{
		[Token(Token = "0x200044C")]
		public struct WeightedProfile
		{
			[Token(Token = "0x4002272")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly WaterProfile Profile;

			[Token(Token = "0x4002273")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public readonly float Weight;

			[Token(Token = "0x60019CE")]
			[Address(RVA = "0x1704038", Offset = "0x1704038", VA = "0x1704038")]
			public WeightedProfile(WaterProfile profile, float weight)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200044D")]
		public class WaterEvent : UnityEvent<Water>
		{
			[Token(Token = "0x60019CF")]
			[Address(RVA = "0x1703FE4", Offset = "0x1703FE4", VA = "0x1703FE4")]
			public WaterEvent()
			{
			}
		}

		[Token(Token = "0x4002247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x584598", Offset = "0x584598")]
		private ShaderSet shaderSet;

		[Token(Token = "0x4002248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5845E4", Offset = "0x5845E4")]
		[SerializeField]
		private int seed;

		[Token(Token = "0x4002249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private WaterMaterials materials;

		[Token(Token = "0x400224A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ProfilesManager profilesManager;

		[Token(Token = "0x400224B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private WaterGeometry geometry;

		[Token(Token = "0x400224C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private WaterRenderer waterRenderer;

		[Token(Token = "0x400224D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private WaterUvAnimator uvAnimator;

		[Token(Token = "0x400224E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private WaterVolume volume;

		[Token(Token = "0x400224F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private WaterSubsurfaceScattering subsurfaceScattering;

		[Token(Token = "0x4002250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private DynamicWater.Data dynamicWaterData;

		[Token(Token = "0x4002251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Foam.Data foamData;

		[Token(Token = "0x4002252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private PlanarReflection.Data planarReflectionData;

		[Token(Token = "0x4002253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private WindWaves.Data windWavesData;

		[Token(Token = "0x4002254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private bool dontRotateUpwards;

		[Token(Token = "0x4002255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		[SerializeField]
		private bool fastEnableDisable;

		[Token(Token = "0x4002256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private float version;

		[Token(Token = "0x4002257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x584710", Offset = "0x584710")]
		[SerializeField]
		private bool refraction;

		[Token(Token = "0x4002258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x584748", Offset = "0x584748")]
		[SerializeField]
		private bool blendEdges;

		[Token(Token = "0x4002259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x584780", Offset = "0x584780")]
		[SerializeField]
		private bool receiveShadows;

		[Token(Token = "0x400225A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5847B8", Offset = "0x5847B8")]
		[SerializeField]
		private float tesselationFactor;

		[Token(Token = "0x400225B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5847F0", Offset = "0x5847F0")]
		[SerializeField]
		private bool useCubemapReflections;

		[Token(Token = "0x400225C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private DynamicWater dynamicWater;

		[Token(Token = "0x400225D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Foam foam;

		[Token(Token = "0x400225E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private PlanarReflection planarReflection;

		[Token(Token = "0x400225F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private WindWaves windWaves;

		[Token(Token = "0x4002260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool componentsCreated;

		[Token(Token = "0x4002261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int waterId;

		[Token(Token = "0x4002262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int activeSamplesCount;

		[Token(Token = "0x4002263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Vector2 surfaceOffset;

		[Token(Token = "0x4002264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float maxHorizontalDisplacement;

		[Token(Token = "0x4002265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float maxVerticalDisplacement;

		[Token(Token = "0x4002266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float time;

		[Token(Token = "0x4002267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float density;

		[Token(Token = "0x4002268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float gravity;

		[Token(Token = "0x4002269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool renderingEnabled;

		[Token(Token = "0x400226B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool isPlaying;

		[Token(Token = "0x400226C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int nextWaterId;

		[Token(Token = "0x400226D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly bool[] idUsageRegister;

		[Token(Token = "0x400226E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly float[] compensationStepWeights;

		[Token(Token = "0x400226F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly Collider[] collidersBuffer;

		[Token(Token = "0x4002270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly List<Water> possibleWaters;

		[Token(Token = "0x4002271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly List<Water> excludedWaters;

		[Token(Token = "0x1700036B")]
		public WaterMaterials Materials
		{
			[Token(Token = "0x6001988")]
			[Address(RVA = "0x15C127C", Offset = "0x15C127C", VA = "0x15C127C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036C")]
		public ProfilesManager ProfilesManager
		{
			[Token(Token = "0x6001989")]
			[Address(RVA = "0x15C1284", Offset = "0x15C1284", VA = "0x15C1284")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036D")]
		public WaterGeometry Geometry
		{
			[Token(Token = "0x600198A")]
			[Address(RVA = "0x15C128C", Offset = "0x15C128C", VA = "0x15C128C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036E")]
		public WaterRenderer Renderer
		{
			[Token(Token = "0x600198B")]
			[Address(RVA = "0x15C1294", Offset = "0x15C1294", VA = "0x15C1294")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036F")]
		public WaterUvAnimator UVAnimator
		{
			[Token(Token = "0x600198C")]
			[Address(RVA = "0x15C129C", Offset = "0x15C129C", VA = "0x15C129C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000370")]
		public WaterVolume Volume
		{
			[Token(Token = "0x600198D")]
			[Address(RVA = "0x15C12A4", Offset = "0x15C12A4", VA = "0x15C12A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600198E")]
			[Address(RVA = "0x15C12AC", Offset = "0x15C12AC", VA = "0x15C12AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000371")]
		public DynamicWater DynamicWater
		{
			[Token(Token = "0x600198F")]
			[Address(RVA = "0x15C12B4", Offset = "0x15C12B4", VA = "0x15C12B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000372")]
		public Foam Foam
		{
			[Token(Token = "0x6001990")]
			[Address(RVA = "0x15C12BC", Offset = "0x15C12BC", VA = "0x15C12BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000373")]
		public PlanarReflection PlanarReflection
		{
			[Token(Token = "0x6001991")]
			[Address(RVA = "0x15C12C4", Offset = "0x15C12C4", VA = "0x15C12C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000374")]
		public WaterSubsurfaceScattering SubsurfaceScattering
		{
			[Token(Token = "0x6001992")]
			[Address(RVA = "0x15C12CC", Offset = "0x15C12CC", VA = "0x15C12CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000375")]
		public WindWaves WindWaves
		{
			[Token(Token = "0x6001993")]
			[Address(RVA = "0x15C12D4", Offset = "0x15C12D4", VA = "0x15C12D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000376")]
		public ShaderSet ShaderSet
		{
			[Token(Token = "0x6001994")]
			[Address(RVA = "0x15C12DC", Offset = "0x15C12DC", VA = "0x15C12DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000377")]
		public bool RenderingEnabled
		{
			[Token(Token = "0x6001995")]
			[Address(RVA = "0x15C12E4", Offset = "0x15C12E4", VA = "0x15C12E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001996")]
			[Address(RVA = "0x15C12EC", Offset = "0x15C12EC", VA = "0x15C12EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000378")]
		public int ComputedSamplesCount
		{
			[Token(Token = "0x6001997")]
			[Address(RVA = "0x15C137C", Offset = "0x15C137C", VA = "0x15C137C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000379")]
		public float Density
		{
			[Token(Token = "0x6001998")]
			[Address(RVA = "0x15C1384", Offset = "0x15C1384", VA = "0x15C1384")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700037A")]
		public float Gravity
		{
			[Token(Token = "0x6001999")]
			[Address(RVA = "0x15C138C", Offset = "0x15C138C", VA = "0x15C138C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700037B")]
		public float MaxHorizontalDisplacement
		{
			[Token(Token = "0x600199A")]
			[Address(RVA = "0x15C1394", Offset = "0x15C1394", VA = "0x15C1394")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700037C")]
		public float MaxVerticalDisplacement
		{
			[Token(Token = "0x600199B")]
			[Address(RVA = "0x15C139C", Offset = "0x15C139C", VA = "0x15C139C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700037D")]
		public int Seed
		{
			[Token(Token = "0x600199C")]
			[Address(RVA = "0x15C13A4", Offset = "0x15C13A4", VA = "0x15C13A4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600199D")]
			[Address(RVA = "0x15C13AC", Offset = "0x15C13AC", VA = "0x15C13AC")]
			set
			{
			}
		}

		[Token(Token = "0x1700037E")]
		public Vector2 SurfaceOffset
		{
			[Token(Token = "0x600199E")]
			[Address(RVA = "0x15C13B4", Offset = "0x15C13B4", VA = "0x15C13B4")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x600199F")]
			[Address(RVA = "0x15C1430", Offset = "0x15C1430", VA = "0x15C1430")]
			set
			{
			}
		}

		[Token(Token = "0x1700037F")]
		public float Time
		{
			[Token(Token = "0x60019A0")]
			[Address(RVA = "0x15C1438", Offset = "0x15C1438", VA = "0x15C1438")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019A1")]
			[Address(RVA = "0x15C1454", Offset = "0x15C1454", VA = "0x15C1454")]
			set
			{
			}
		}

		[Token(Token = "0x17000380")]
		public float UniformWaterScale
		{
			[Token(Token = "0x60019A2")]
			[Address(RVA = "0x15C145C", Offset = "0x15C145C", VA = "0x15C145C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000381")]
		public int WaterId
		{
			[Token(Token = "0x60019A3")]
			[Address(RVA = "0x15C1488", Offset = "0x15C1488", VA = "0x15C1488")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000382")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x58D8A4", Offset = "0x58D8A4")]
		public WeightedProfile[] Profiles
		{
			[Token(Token = "0x60019B5")]
			[Address(RVA = "0x15C1DB0", Offset = "0x15C1DB0", VA = "0x15C1DB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000383")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x58D8DC", Offset = "0x58D8DC")]
		public WaterEvent ProfilesChanged
		{
			[Token(Token = "0x60019B6")]
			[Address(RVA = "0x15C1DD0", Offset = "0x15C1DD0", VA = "0x15C1DD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000019")]
		public event Action WaterIdChanged
		{
			[Token(Token = "0x6001981")]
			[Address(RVA = "0x15C0530", Offset = "0x15C0530", VA = "0x15C0530")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58C7BC", Offset = "0x58C7BC")]
			add
			{
			}
			[Token(Token = "0x6001982")]
			[Address(RVA = "0x15C05D0", Offset = "0x15C05D0", VA = "0x15C05D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58C7CC", Offset = "0x58C7CC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0x15C0670", Offset = "0x15C0670", VA = "0x15C0670")]
		public static Water CreateWater(string name, ShaderSet shaderCollection)
		{
			return null;
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0x15C0718", Offset = "0x15C0718", VA = "0x15C0718")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0x15C0800", Offset = "0x15C0800", VA = "0x15C0800")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0x15C0F40", Offset = "0x15C0F40", VA = "0x15C0F40")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0x15C10FC", Offset = "0x15C10FC", VA = "0x15C10FC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0x15C1490", Offset = "0x15C1490", VA = "0x15C1490")]
		public Vector3 GetDisplacementAt(float x, float z)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0x15C16EC", Offset = "0x15C16EC", VA = "0x15C16EC")]
		public Vector3 GetDisplacementAt(float x, float z, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0x15C1774", Offset = "0x15C1774", VA = "0x15C1774")]
		public Vector3 GetUncompensatedDisplacementAt(float x, float z, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0x15C17DC", Offset = "0x15C17DC", VA = "0x15C17DC")]
		public Vector2 GetHorizontalDisplacementAt(float x, float z)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0x15C1854", Offset = "0x15C1854", VA = "0x15C1854")]
		public Vector2 GetHorizontalDisplacementAt(float x, float z, float time)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0x15C18D8", Offset = "0x15C18D8", VA = "0x15C18D8")]
		public Vector2 GetUncompensatedHorizontalDisplacementAt(float x, float z, float time)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0x15C193C", Offset = "0x15C193C", VA = "0x15C193C")]
		public float GetHeightAt(float x, float z)
		{
			return default(float);
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0x15C19B4", Offset = "0x15C19B4", VA = "0x15C19B4")]
		public float GetHeightAt(float x, float z, float time)
		{
			return default(float);
		}

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0x15C1A40", Offset = "0x15C1A40", VA = "0x15C1A40")]
		public float GetUncompensatedHeightAt(float x, float z, float time)
		{
			return default(float);
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0x15C1AA8", Offset = "0x15C1AA8", VA = "0x15C1AA8")]
		public Vector4 GetHeightAndForcesAt(float x, float z)
		{
			return default(Vector4);
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0x15C1B20", Offset = "0x15C1B20", VA = "0x15C1B20")]
		public Vector4 GetHeightAndForcesAt(float x, float z, float time)
		{
			return default(Vector4);
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0x15C1BA4", Offset = "0x15C1BA4", VA = "0x15C1BA4")]
		public Vector4 GetUncompensatedHeightAndForcesAt(float x, float z, float time)
		{
			return default(Vector4);
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0x15C1C10", Offset = "0x15C1C10", VA = "0x15C1C10")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x58C7DC", Offset = "0x58C7DC")]
		public Vector3 GetDisplacementAt(float x, float z, float spectrumStart, float spectrumEnd, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0x15C1C78", Offset = "0x15C1C78", VA = "0x15C1C78")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x58C814", Offset = "0x58C814")]
		public Vector2 GetHorizontalDisplacementAt(float x, float z, float spectrumStart, float spectrumEnd, float time)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0x15C1CDC", Offset = "0x15C1CDC", VA = "0x15C1CDC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x58C84C", Offset = "0x58C84C")]
		public float GetHeightAt(float x, float z, float spectrumStart, float spectrumEnd, float time)
		{
			return default(float);
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0x15C1D44", Offset = "0x15C1D44", VA = "0x15C1D44")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x58C884", Offset = "0x58C884")]
		public Vector4 GetHeightAndForcesAt(float x, float z, float spectrumStart, float spectrumEnd, float time)
		{
			return default(Vector4);
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0x15C150C", Offset = "0x15C150C", VA = "0x15C150C")]
		public void CompensateHorizontalDisplacement(float x, float z, float errorTolerance = 0.045f)
		{
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0x15C1DF0", Offset = "0x15C1DF0", VA = "0x15C1DF0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x58C8BC", Offset = "0x58C8BC")]
		public void CacheProfiles(params WaterProfile[] profiles)
		{
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0x15C1E10", Offset = "0x15C1E10", VA = "0x15C1E10")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x58C8F4", Offset = "0x58C8F4")]
		public void SetProfiles(params WeightedProfile[] profiles)
		{
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0x15C1E30", Offset = "0x15C1E30", VA = "0x15C1E30")]
		public void ForceStartup()
		{
		}

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0x15C1E34", Offset = "0x15C1E34", VA = "0x15C1E34", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0x15C1E38", Offset = "0x15C1E38", VA = "0x15C1E38", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0x15C1EB0", Offset = "0x15C1EB0", VA = "0x15C1EB0")]
		public void ResetWater()
		{
		}

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0x15C1EF0", Offset = "0x15C1EF0", VA = "0x15C1EF0")]
		internal void OnWaterRender(Camera camera)
		{
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0x15C1F8C", Offset = "0x15C1F8C", VA = "0x15C1F8C")]
		internal void OnWaterPostRender(Camera camera)
		{
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0x15C1FA0", Offset = "0x15C1FA0", VA = "0x15C1FA0")]
		internal void OnSamplingStarted()
		{
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0x15C1FB0", Offset = "0x15C1FB0", VA = "0x15C1FB0")]
		internal void OnSamplingStopped()
		{
		}

		[Token(Token = "0x60019C1")]
		[Address(RVA = "0x15C1FC0", Offset = "0x15C1FC0", VA = "0x15C1FC0")]
		private void Update()
		{
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0x15C2100", Offset = "0x15C2100", VA = "0x15C2100")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0x15C0964", Offset = "0x15C0964", VA = "0x15C0964")]
		private void CreateWaterComponents()
		{
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0x15C2218", Offset = "0x15C2218", VA = "0x15C2218")]
		private void OnProfilesChanged(Water water)
		{
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0x15C22B0", Offset = "0x15C22B0", VA = "0x15C22B0")]
		private void OnQualitySettingsChanged()
		{
		}

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0x15C20B4", Offset = "0x15C20B4", VA = "0x15C20B4")]
		private void UpdateStatisticalData()
		{
		}

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0x15C0DEC", Offset = "0x15C0DEC", VA = "0x15C0DEC")]
		private void AssignId()
		{
		}

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0x15C101C", Offset = "0x15C101C", VA = "0x15C101C")]
		private void FreeId()
		{
		}

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0x15C22B4", Offset = "0x15C22B4", VA = "0x15C22B4")]
		public static Water FindWater(Vector3 position, float radius)
		{
			return null;
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0x15C2890", Offset = "0x15C2890", VA = "0x15C2890")]
		public static Water FindWater(Vector3 position, float radius, [Out] bool isInsideSubtractiveVolume, [Out] bool isInsideAdditiveVolume)
		{
			return null;
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0x15C235C", Offset = "0x15C235C", VA = "0x15C235C")]
		public static Water FindWater(Vector3 position, float radius, List<Water> allowedWaters, [Out] bool isInsideSubtractiveVolume, [Out] bool isInsideAdditiveVolume)
		{
			return null;
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0x15C2934", Offset = "0x15C2934", VA = "0x15C2934")]
		public Water()
		{
		}
	}
	[Token(Token = "0x200044E")]
	[ImageEffectAllowedInSceneView]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5797D4", Offset = "0x5797D4")]
	[ExecuteInEditMode]
	public class WaterCamera : MonoBehaviour
	{
		[Token(Token = "0x200044F")]
		public enum CameraType
		{
			[Token(Token = "0x40022CB")]
			Normal,
			[Token(Token = "0x40022CC")]
			Effect,
			[Token(Token = "0x40022CD")]
			RenderHelper
		}

		[Serializable]
		[Token(Token = "0x2000450")]
		public class WaterCameraEvent : UnityEvent<WaterCamera>
		{
			[Token(Token = "0x6001A2A")]
			[Address(RVA = "0x170406C", Offset = "0x170406C", VA = "0x170406C")]
			public WaterCameraEvent()
			{
			}
		}

		[Token(Token = "0x4002274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		private Shader depthBlitCopyShader;

		[Token(Token = "0x4002275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[SerializeField]
		private Shader waterDepthShader;

		[Token(Token = "0x4002276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		[SerializeField]
		private Shader volumeFrontShader;

		[Token(Token = "0x4002277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		[SerializeField]
		private Shader volumeBackShader;

		[Token(Token = "0x4002278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		[SerializeField]
		private Shader volumeFrontFastShader;

		[Token(Token = "0x4002279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		[SerializeField]
		private Shader shadowEnforcerShader;

		[Token(Token = "0x400227A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		[SerializeField]
		private Shader gbuffer0MixShader;

		[Token(Token = "0x400227B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		[SerializeField]
		private Shader gbuffer123MixShader;

		[Token(Token = "0x400227C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		[SerializeField]
		private Shader finalColorMixShader;

		[Token(Token = "0x400227D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		[SerializeField]
		private Shader deferredReflections;

		[Token(Token = "0x400227E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		[SerializeField]
		private Shader deferredShading;

		[Token(Token = "0x400227F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		[SerializeField]
		private Shader mergeDisplacementsShader;

		[Token(Token = "0x4002280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private WaterRenderMode renderMode;

		[Token(Token = "0x4002281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private WaterGeometryType geometryType;

		[Token(Token = "0x4002282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private bool renderWaterDepth;

		[Token(Token = "0x4002283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x584B08", Offset = "0x584B08")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x584B08", Offset = "0x584B08")]
		[SerializeField]
		private float baseEffectsQuality;

		[Token(Token = "0x4002284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private float superSampling;

		[Token(Token = "0x4002285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private bool renderVolumes;

		[Token(Token = "0x4002286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		[SerializeField]
		private bool renderFlatMasks;

		[Token(Token = "0x4002287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private int forcedVertexCount;

		[Token(Token = "0x4002288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private WaterCameraEvent submersionStateChanged;

		[Token(Token = "0x4002289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x584BC0", Offset = "0x584BC0")]
		[SerializeField]
		private Water mainWater;

		[Token(Token = "0x400228A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private LightWaterEffects effectsLight;

		[Token(Token = "0x400228B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x584C1C", Offset = "0x584C1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x584C1C", Offset = "0x584C1C")]
		[SerializeField]
		private float screenSpaceMapsBorder;

		[Token(Token = "0x400228C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private RenderTexture gbuffer0Tex;

		[Token(Token = "0x400228D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private RenderTexture depthTex2;

		[Token(Token = "0x400228E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private CommandBuffer depthRenderCommands;

		[Token(Token = "0x400228F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private CommandBuffer volumeRenderCommands;

		[Token(Token = "0x4002290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private CommandBuffer cleanUpCommands;

		[Token(Token = "0x4002291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private WaterCamera baseCamera;

		[Token(Token = "0x4002292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Camera effectCamera;

		[Token(Token = "0x4002293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Camera mainCamera;

		[Token(Token = "0x4002294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Camera planeProjectorCamera;

		[Token(Token = "0x4002295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected Camera cameraComponent;

		[Token(Token = "0x4002296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Material depthBlitCopyMaterial;

		[Token(Token = "0x4002297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private RenderTextureFormat waterDepthTextureFormat;

		[Token(Token = "0x4002298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private RenderTextureFormat blendedDepthTexturesFormat;

		[Token(Token = "0x4002299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private CameraType waterCameraType;

		[Token(Token = "0x400229A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private bool effectsEnabled;

		[Token(Token = "0x400229B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private IWaterImageEffect[] imageEffects;

		[Token(Token = "0x400229C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Rect localMapsRect;

		[Token(Token = "0x400229D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Rect localMapsRectPrevious;

		[Token(Token = "0x400229E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Rect shadowedWaterRect;

		[Token(Token = "0x400229F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private int pixelWidth;

		[Token(Token = "0x40022A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private int pixelHeight;

		[Token(Token = "0x40022A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Mesh shadowsEnforcerMesh;

		[Token(Token = "0x40022A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private Material shadowsEnforcerMaterial;

		[Token(Token = "0x40022A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private Water containingWater;

		[Token(Token = "0x40022A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private WaterSample waterSample;

		[Token(Token = "0x40022A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private float waterLevel;

		[Token(Token = "0x40022A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private SubmersionState submersionState;

		[Token(Token = "0x40022A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private bool isInsideSubtractiveVolume;

		[Token(Token = "0x40022A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
		private bool isInsideAdditiveVolume;

		[Token(Token = "0x40022A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private Matrix4x4 lastPlaneProjectorMatrix;

		[Token(Token = "0x40022AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private WaterCameraIME waterCameraIME;

		[Token(Token = "0x40022AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private List<Water> customWaterRenderList;

		[Token(Token = "0x40022AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int waterDepthTextureId;

		[Token(Token = "0x40022AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int underwaterMaskId;

		[Token(Token = "0x40022AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int additiveMaskId;

		[Token(Token = "0x40022AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int subtractiveMaskId;

		[Token(Token = "0x40022B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int displacementsMaskId;

		[Token(Token = "0x40022B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static int unityMatrixVPInverseId;

		[Token(Token = "0x40022B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static int depthClipMultiplierId;

		[Token(Token = "0x40022B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static int localMapsCoordsId;

		[Token(Token = "0x40022B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static int localMapsCoordsPreviousId;

		[Token(Token = "0x40022BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static CommandBuffer utilityCommandBuffer;

		[Token(Token = "0x40022BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly Dictionary<Camera, WaterCamera> waterCamerasCache;

		[Token(Token = "0x40022BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static readonly List<WaterCamera> enabledWaterCameras;

		[Token(Token = "0x40022BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static readonly RenderTargetIdentifier[] deferredTargets;

		[Token(Token = "0x40022BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private Camera waterRenderCamera;

		[Token(Token = "0x40022BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private CommandBuffer imageEffectCommands;

		[Token(Token = "0x40022C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private RenderTexture deferredRenderTarget;

		[Token(Token = "0x40022C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private Material gbuffer0MixMaterial;

		[Token(Token = "0x40022C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private Material gbuffer123MixMaterial;

		[Token(Token = "0x40022C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private Material finalColorMixMaterial;

		[Token(Token = "0x40022C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static int gbufferId0;

		[Token(Token = "0x40022C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private static int gbufferId1;

		[Token(Token = "0x40022C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static int gbufferId2;

		[Token(Token = "0x40022C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private static int gbufferId3;

		[Token(Token = "0x40022C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static int refractTexId;

		[Token(Token = "0x40022C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private static int waterlessDepthId;

		[Token(Token = "0x17000384")]
		public bool RenderWaterDepth
		{
			[Token(Token = "0x60019DE")]
			[Address(RVA = "0x15C5DA0", Offset = "0x15C5DA0", VA = "0x15C5DA0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019DF")]
			[Address(RVA = "0x15C5DA8", Offset = "0x15C5DA8", VA = "0x15C5DA8")]
			set
			{
			}
		}

		[Token(Token = "0x17000385")]
		public bool RenderVolumes
		{
			[Token(Token = "0x60019E0")]
			[Address(RVA = "0x15C5DB4", Offset = "0x15C5DB4", VA = "0x15C5DB4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019E1")]
			[Address(RVA = "0x15C5DBC", Offset = "0x15C5DBC", VA = "0x15C5DBC")]
			set
			{
			}
		}

		[Token(Token = "0x17000386")]
		public float BaseEffectsQuality
		{
			[Token(Token = "0x60019E2")]
			[Address(RVA = "0x15C5DC8", Offset = "0x15C5DC8", VA = "0x15C5DC8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019E3")]
			[Address(RVA = "0x15C5DD0", Offset = "0x15C5DD0", VA = "0x15C5DD0")]
			set
			{
			}
		}

		[Token(Token = "0x17000387")]
		public CameraType Type
		{
			[Token(Token = "0x60019E4")]
			[Address(RVA = "0x15C5DD8", Offset = "0x15C5DD8", VA = "0x15C5DD8")]
			get
			{
				return default(CameraType);
			}
			[Token(Token = "0x60019E5")]
			[Address(RVA = "0x15C5DE0", Offset = "0x15C5DE0", VA = "0x15C5DE0")]
			set
			{
			}
		}

		[Token(Token = "0x17000388")]
		public WaterGeometryType GeometryType
		{
			[Token(Token = "0x60019E6")]
			[Address(RVA = "0x15C5DE8", Offset = "0x15C5DE8", VA = "0x15C5DE8")]
			get
			{
				return default(WaterGeometryType);
			}
			[Token(Token = "0x60019E7")]
			[Address(RVA = "0x15C5DF0", Offset = "0x15C5DF0", VA = "0x15C5DF0")]
			set
			{
			}
		}

		[Token(Token = "0x17000389")]
		public Rect LocalMapsRect
		{
			[Token(Token = "0x60019E8")]
			[Address(RVA = "0x15C5DF8", Offset = "0x15C5DF8", VA = "0x15C5DF8")]
			get
			{
				return default(Rect);
			}
		}

		[Token(Token = "0x1700038A")]
		public WaterRenderMode RenderMode
		{
			[Token(Token = "0x60019E9")]
			[Address(RVA = "0x15C5E0C", Offset = "0x15C5E0C", VA = "0x15C5E0C")]
			get
			{
				return default(WaterRenderMode);
			}
			[Token(Token = "0x60019EA")]
			[Address(RVA = "0x15C5E14", Offset = "0x15C5E14", VA = "0x15C5E14")]
			set
			{
			}
		}

		[Token(Token = "0x1700038B")]
		public Rect LocalMapsRectPrevious
		{
			[Token(Token = "0x60019EB")]
			[Address(RVA = "0x15C5E3C", Offset = "0x15C5E3C", VA = "0x15C5E3C")]
			get
			{
				return default(Rect);
			}
		}

		[Token(Token = "0x1700038C")]
		public Vector4 LocalMapsShaderCoords
		{
			[Token(Token = "0x60019EC")]
			[Address(RVA = "0x15C5E50", Offset = "0x15C5E50", VA = "0x15C5E50")]
			get
			{
				return default(Vector4);
			}
		}

		[Token(Token = "0x1700038D")]
		public int ForcedVertexCount
		{
			[Token(Token = "0x60019ED")]
			[Address(RVA = "0x15C5EEC", Offset = "0x15C5EEC", VA = "0x15C5EEC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60019EE")]
			[Address(RVA = "0x15C5EF4", Offset = "0x15C5EF4", VA = "0x15C5EF4")]
			set
			{
			}
		}

		[Token(Token = "0x1700038E")]
		public Water ContainingWater
		{
			[Token(Token = "0x60019EF")]
			[Address(RVA = "0x15B5E4C", Offset = "0x15B5E4C", VA = "0x15B5E4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038F")]
		public float WaterLevel
		{
			[Token(Token = "0x60019F0")]
			[Address(RVA = "0x15C5EFC", Offset = "0x15C5EFC", VA = "0x15C5EFC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000390")]
		public SubmersionState SubmersionState
		{
			[Token(Token = "0x60019F1")]
			[Address(RVA = "0x15C5F04", Offset = "0x15C5F04", VA = "0x15C5F04")]
			get
			{
				return default(SubmersionState);
			}
		}

		[Token(Token = "0x17000391")]
		public Camera MainCamera
		{
			[Token(Token = "0x60019F2")]
			[Address(RVA = "0x15C5F0C", Offset = "0x15C5F0C", VA = "0x15C5F0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000392")]
		public Camera CameraComponent
		{
			[Token(Token = "0x60019F3")]
			[Address(RVA = "0x15C5F14", Offset = "0x15C5F14", VA = "0x15C5F14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000393")]
		protected Material DepthBlitCopyMaterial
		{
			[Token(Token = "0x60019F4")]
			[Address(RVA = "0x15C5250", Offset = "0x15C5250", VA = "0x15C5250")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000394")]
		private static CommandBuffer UtilityCommandBuffer
		{
			[Token(Token = "0x60019F5")]
			[Address(RVA = "0x15C5F1C", Offset = "0x15C5F1C", VA = "0x15C5F1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000395")]
		public Water MainWater
		{
			[Token(Token = "0x60019F6")]
			[Address(RVA = "0x15C6028", Offset = "0x15C6028", VA = "0x15C6028")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000396")]
		public static List<WaterCamera> EnabledWaterCameras
		{
			[Token(Token = "0x60019F7")]
			[Address(RVA = "0x15C6118", Offset = "0x15C6118", VA = "0x15C6118")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000397")]
		public Camera EffectsCamera
		{
			[Token(Token = "0x60019F8")]
			[Address(RVA = "0x15C617C", Offset = "0x15C617C", VA = "0x15C617C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000398")]
		public Camera PlaneProjectorCamera
		{
			[Token(Token = "0x60019F9")]
			[Address(RVA = "0x15C63DC", Offset = "0x15C63DC", VA = "0x15C63DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000399")]
		public WaterCameraEvent SubmersionStateChanged
		{
			[Token(Token = "0x60019FA")]
			[Address(RVA = "0x15B5BF4", Offset = "0x15B5BF4", VA = "0x15B5BF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039A")]
		internal Camera WaterRenderCamera
		{
			[Token(Token = "0x60019FB")]
			[Address(RVA = "0x15C6484", Offset = "0x15C6484", VA = "0x15C6484")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039B")]
		public bool IsInsideAdditiveVolume
		{
			[Token(Token = "0x60019FC")]
			[Address(RVA = "0x15C64D4", Offset = "0x15C64D4", VA = "0x15C64D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700039C")]
		public LightWaterEffects EffectsLight
		{
			[Token(Token = "0x60019FD")]
			[Address(RVA = "0x15C64DC", Offset = "0x15C64DC", VA = "0x15C64DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019FE")]
			[Address(RVA = "0x15C64E4", Offset = "0x15C64E4", VA = "0x15C64E4")]
			set
			{
			}
		}

		[Token(Token = "0x1400001A")]
		public static event Action<WaterCamera> OnGlobalPreCull
		{
			[Token(Token = "0x60019D0")]
			[Address(RVA = "0x15C3F34", Offset = "0x15C3F34", VA = "0x15C3F34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58C92C", Offset = "0x58C92C")]
			add
			{
			}
			[Token(Token = "0x60019D1")]
			[Address(RVA = "0x15C402C", Offset = "0x15C402C", VA = "0x15C402C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58C93C", Offset = "0x58C93C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001B")]
		public static event Action<WaterCamera> OnGlobalPostRender
		{
			[Token(Token = "0x60019D2")]
			[Address(RVA = "0x15C4124", Offset = "0x15C4124", VA = "0x15C4124")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58C94C", Offset = "0x58C94C")]
			add
			{
			}
			[Token(Token = "0x60019D3")]
			[Address(RVA = "0x15C421C", Offset = "0x15C421C", VA = "0x15C421C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58C95C", Offset = "0x58C95C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001C")]
		public event Action<WaterCamera> RenderTargetResized
		{
			[Token(Token = "0x60019D4")]
			[Address(RVA = "0x15C4314", Offset = "0x15C4314", VA = "0x15C4314")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58C96C", Offset = "0x58C96C")]
			add
			{
			}
			[Token(Token = "0x60019D5")]
			[Address(RVA = "0x15C43B8", Offset = "0x15C43B8", VA = "0x15C43B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58C97C", Offset = "0x58C97C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001D")]
		public event Action<WaterCamera> Destroyed
		{
			[Token(Token = "0x60019D6")]
			[Address(RVA = "0x15C445C", Offset = "0x15C445C", VA = "0x15C445C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58C98C", Offset = "0x58C98C")]
			add
			{
			}
			[Token(Token = "0x60019D7")]
			[Address(RVA = "0x15C4500", Offset = "0x15C4500", VA = "0x15C4500")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58C99C", Offset = "0x58C99C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001E")]
		public event Action<WaterCamera> Disabled
		{
			[Token(Token = "0x60019D8")]
			[Address(RVA = "0x15C45A4", Offset = "0x15C45A4", VA = "0x15C45A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58C9AC", Offset = "0x58C9AC")]
			add
			{
			}
			[Token(Token = "0x60019D9")]
			[Address(RVA = "0x15C4648", Offset = "0x15C4648", VA = "0x15C4648")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58C9BC", Offset = "0x58C9BC")]
			remove
			{
			}
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0x15C46EC", Offset = "0x15C46EC", VA = "0x15C46EC")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0x15C5334", Offset = "0x15C5334", VA = "0x15C5334")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0x15C58B0", Offset = "0x15C58B0", VA = "0x15C58B0")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0x15C5C9C", Offset = "0x15C5C9C", VA = "0x15C5C9C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0x15C4C20", Offset = "0x15C4C20", VA = "0x15C4C20")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0x15C64EC", Offset = "0x15C64EC", VA = "0x15C64EC")]
		protected void OnPreCull()
		{
		}

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0x15C917C", Offset = "0x15C917C", VA = "0x15C917C")]
		protected void OnPostRender()
		{
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0x15C92EC", Offset = "0x15C92EC", VA = "0x15C92EC")]
		internal void ReportShadowedWaterMinMaxRect(Vector2 min, Vector2 max)
		{
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0x15C5BA0", Offset = "0x15C5BA0", VA = "0x15C5BA0")]
		public void ReleaseTemporaryTextures()
		{
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0x15C93C8", Offset = "0x15C93C8", VA = "0x15C93C8")]
		public void CopyFrom(WaterCamera waterCamera)
		{
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0x15C9400", Offset = "0x15C9400", VA = "0x15C9400")]
		public void SetCustomWaterRenderList(List<Water> waters)
		{
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0x15C9410", Offset = "0x15C9410", VA = "0x15C9410")]
		public static WaterCamera GetWaterCamera(Camera camera, bool forceAdd = false)
		{
			return null;
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0x15C6938", Offset = "0x15C6938", VA = "0x15C6938")]
		private void RenderWaterDirect()
		{
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0x15C9620", Offset = "0x15C9620", VA = "0x15C9620")]
		public void RenderWaterWithShader(string commandName, RenderTexture target, Shader shader, Water water)
		{
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0x15C97CC", Offset = "0x15C97CC", VA = "0x15C97CC")]
		public void RenderWaterWithShader(string commandName, RenderTargetIdentifier[] targets, RenderTargetIdentifier depthTarget, Shader shader, Water water)
		{
		}

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0x15C9970", Offset = "0x15C9970", VA = "0x15C9970")]
		public void RenderWaterWithShader(string commandName, RenderTexture target, Shader shader, bool surfaces, bool volumes, bool volumesTwoPass)
		{
		}

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0x15C9B24", Offset = "0x15C9B24", VA = "0x15C9B24")]
		private void AddWaterRenderCommands(CommandBuffer commandBuffer, Shader shader, bool surfaces, bool volumes, bool volumesTwoPass)
		{
		}

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0x15C9C90", Offset = "0x15C9C90", VA = "0x15C9C90")]
		private void AddWaterMasksRenderCommands(CommandBuffer commandBuffer)
		{
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0x15C7E84", Offset = "0x15C7E84", VA = "0x15C7E84")]
		private void RenderWaterEffects()
		{
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0x15C86F4", Offset = "0x15C86F4", VA = "0x15C86F4")]
		private void RenderWaterDepthBuffer(int baseEffectsWidth, int baseEffectsHeight, bool renderWater = true)
		{
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0x15C7F4C", Offset = "0x15C7F4C", VA = "0x15C7F4C")]
		private void RenderWaterMasks(int baseEffectsWidth, int baseEffectsHeight)
		{
		}

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0x15C86F0", Offset = "0x15C86F0", VA = "0x15C86F0")]
		private static void SetBlankWaterMasks()
		{
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0x15C9D5C", Offset = "0x15C9D5C", VA = "0x15C9D5C")]
		private void RemoveDepthRenderingCommands()
		{
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0x15C9E88", Offset = "0x15C9E88", VA = "0x15C9E88")]
		internal void OnRenderImageCallback(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0x15CAFA0", Offset = "0x15CAFA0", VA = "0x15CAFA0")]
		protected void Update()
		{
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0x15C5AF8", Offset = "0x15C5AF8", VA = "0x15C5AF8")]
		private void ReleaseImageEffectTemporaryTextures()
		{
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0x15C55D4", Offset = "0x15C55D4", VA = "0x15C55D4")]
		private void AddUtilityCommands()
		{
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0x15C5548", Offset = "0x15C5548", VA = "0x15C5548")]
		private void RemoveUtilityCommands()
		{
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0x15CAFB4", Offset = "0x15CAFB4", VA = "0x15CAFB4")]
		private void RemoveCommandBuffer(CameraEvent cameraEvent, string name)
		{
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0x15CA138", Offset = "0x15CA138", VA = "0x15CA138")]
		private void RenderWaterForward(RenderTexture target)
		{
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0x15CA288", Offset = "0x15CA288", VA = "0x15CA288")]
		private void RenderWaterDeferred(RenderTexture temp, RenderTexture target)
		{
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0x15CB080", Offset = "0x15CB080", VA = "0x15CB080")]
		private void EnableEffects()
		{
		}

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0x15C5C94", Offset = "0x15C5C94", VA = "0x15C5C94")]
		private void DisableEffects()
		{
		}

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0x15CB1BC", Offset = "0x15CB1BC", VA = "0x15CB1BC")]
		private static bool IsWaterPossiblyVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0x15C6224", Offset = "0x15C6224", VA = "0x15C6224")]
		protected Camera CreateEffectsCamera(CameraType type)
		{
			return null;
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0x15C8CA4", Offset = "0x15C8CA4", VA = "0x15C8CA4")]
		private void RenderShadowEnforcers()
		{
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0x15CB218", Offset = "0x15CB218", VA = "0x15CB218")]
		private void SetBoundsMinMaxComponentWise(Bounds bounds, Vector3 a, Vector3 b)
		{
		}

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0x15C766C", Offset = "0x15C766C", VA = "0x15C766C")]
		private void PrepareToRender()
		{
		}

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0x15C7A88", Offset = "0x15C7A88", VA = "0x15C7A88")]
		private static void SetFallbackTextures()
		{
		}

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0x15C74A4", Offset = "0x15C74A4", VA = "0x15C74A4")]
		private void ToggleEffects()
		{
		}

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0x15C6A0C", Offset = "0x15C6A0C", VA = "0x15C6A0C")]
		private void SetPlaneProjectorMatrix()
		{
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0x15CB254", Offset = "0x15CB254", VA = "0x15CB254")]
		private static void IntersectionToBounds(Vector3 a, Vector3 b, float min, float max, Vector2 center, float dynamicMapsBorder, Matrix4x4 projectorMatrix, Vector4 bounds)
		{
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0x15C7B24", Offset = "0x15C7B24", VA = "0x15C7B24")]
		private void SetLocalMapCoordinates()
		{
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0x15C48FC", Offset = "0x15C48FC", VA = "0x15C48FC")]
		private void InitializeStaticFields()
		{
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0x15C6930", Offset = "0x15C6930", VA = "0x15C6930")]
		public static bool IsSceneViewCamera(Camera camera)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0x15CB588", Offset = "0x15CB588", VA = "0x15CB588")]
		public WaterCamera()
		{
		}
	}
	[Token(Token = "0x2000451")]
	[ExecuteInEditMode]
	public sealed class WaterCameraIME : MonoBehaviour
	{
		[Token(Token = "0x40022CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private WaterCamera waterCamera;

		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0x16DF89C", Offset = "0x16DF89C", VA = "0x16DF89C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0x16DF900", Offset = "0x16DF900", VA = "0x16DF900")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0x16DFA34", Offset = "0x16DFA34", VA = "0x16DFA34")]
		public WaterCameraIME()
		{
		}
	}
	[Token(Token = "0x2000452")]
	public enum WaterRenderMode
	{
		[Token(Token = "0x40022D0")]
		DefaultQueue,
		[Token(Token = "0x40022D1")]
		ImageEffectForward,
		[Token(Token = "0x40022D2")]
		ImageEffectDeferred
	}
	[Token(Token = "0x2000453")]
	public class WaterGlobals
	{
		[Token(Token = "0x40022D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static WaterGlobals instance;

		[Token(Token = "0x40022D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<Water> waters;

		[Token(Token = "0x40022D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<Water> boundlessWaters;

		[Token(Token = "0x40022D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly List<Water> dynamicWaters;

		[Token(Token = "0x1700039D")]
		public static WaterGlobals Instance
		{
			[Token(Token = "0x6001A2F")]
			[Address(RVA = "0x16E25D0", Offset = "0x16E25D0", VA = "0x16E25D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039E")]
		public List<Water> Waters
		{
			[Token(Token = "0x6001A30")]
			[Address(RVA = "0x16E2644", Offset = "0x16E2644", VA = "0x16E2644")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039F")]
		public List<Water> BoundlessWaters
		{
			[Token(Token = "0x6001A31")]
			[Address(RVA = "0x16E264C", Offset = "0x16E264C", VA = "0x16E264C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A0")]
		public List<Water> DynamicWaters
		{
			[Token(Token = "0x6001A32")]
			[Address(RVA = "0x16E2654", Offset = "0x16E2654", VA = "0x16E2654")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0x16E24FC", Offset = "0x16E24FC", VA = "0x16E24FC")]
		private WaterGlobals()
		{
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0x16E265C", Offset = "0x16E265C", VA = "0x16E265C")]
		public void AddWater(Water water)
		{
		}

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0x16E273C", Offset = "0x16E273C", VA = "0x16E273C")]
		public void RemoveWater(Water water)
		{
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0x16E27B4", Offset = "0x16E27B4", VA = "0x16E27B4")]
		public void AddDynamicWater(DynamicWater dynamicWater)
		{
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0x16E281C", Offset = "0x16E281C", VA = "0x16E281C")]
		public void RemoveDynamicWater(DynamicWater dynamicWater)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000454")]
	public class WaterMaterials
	{
		[Token(Token = "0x2000455")]
		public enum ColorParameter
		{
			[Token(Token = "0x40022F7")]
			AbsorptionColor,
			[Token(Token = "0x40022F8")]
			DiffuseColor,
			[Token(Token = "0x40022F9")]
			SpecularColor,
			[Token(Token = "0x40022FA")]
			DepthColor,
			[Token(Token = "0x40022FB")]
			EmissionColor,
			[Token(Token = "0x40022FC")]
			ReflectionColor
		}

		[Token(Token = "0x2000456")]
		public enum FloatParameter
		{
			[Token(Token = "0x40022FE")]
			DisplacementScale = 6,
			[Token(Token = "0x40022FF")]
			Glossiness = 7,
			[Token(Token = "0x4002300")]
			RefractionDistortion = 10,
			[Token(Token = "0x4002301")]
			SpecularFresnelBias = 11,
			[Token(Token = "0x4002302")]
			DisplacementNormalsIntensity = 13,
			[Token(Token = "0x4002303")]
			EdgeBlendFactorInv = 14,
			[Token(Token = "0x4002304")]
			LightSmoothnessMultiplier = 18
		}

		[Token(Token = "0x2000457")]
		public enum VectorParameter
		{
			[Token(Token = "0x4002306")]
			SubsurfaceScatteringPack = 8,
			[Token(Token = "0x4002307")]
			WrapSubsurfaceScatteringPack = 9,
			[Token(Token = "0x4002308")]
			DetailFadeFactor = 12,
			[Token(Token = "0x4002309")]
			PlanarReflectionPack = 15,
			[Token(Token = "0x400230A")]
			BumpScale = 16,
			[Token(Token = "0x400230B")]
			FoamTiling = 17
		}

		[Token(Token = "0x2000458")]
		public enum TextureParameter
		{
			[Token(Token = "0x400230D")]
			BumpMap = 19,
			[Token(Token = "0x400230E")]
			FoamTex,
			[Token(Token = "0x400230F")]
			FoamNormalMap
		}

		[Token(Token = "0x2000459")]
		public class WaterParameterFloat
		{
			[Token(Token = "0x4002310")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly int Hash;

			[Token(Token = "0x4002311")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly MaterialPropertyBlock propertyBlock;

			[Token(Token = "0x4002312")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private float value;

			[Token(Token = "0x170003AC")]
			public float Value
			{
				[Token(Token = "0x6001A69")]
				[Address(RVA = "0x1704118", Offset = "0x1704118", VA = "0x1704118")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001A6A")]
				[Address(RVA = "0x1704120", Offset = "0x1704120", VA = "0x1704120")]
				set
				{
				}
			}

			[Token(Token = "0x6001A68")]
			[Address(RVA = "0x17040C0", Offset = "0x17040C0", VA = "0x17040C0")]
			public WaterParameterFloat(MaterialPropertyBlock propertyBlock, int hash, float value)
			{
			}
		}

		[Token(Token = "0x200045A")]
		public class WaterParameterVector4
		{
			[Token(Token = "0x4002313")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly int Hash;

			[Token(Token = "0x4002314")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly MaterialPropertyBlock propertyBlock;

			[Token(Token = "0x4002315")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Vector4 value;

			[Token(Token = "0x170003AD")]
			public Vector4 Value
			{
				[Token(Token = "0x6001A6C")]
				[Address(RVA = "0x17041BC", Offset = "0x17041BC", VA = "0x17041BC")]
				get
				{
					return default(Vector4);
				}
				[Token(Token = "0x6001A6D")]
				[Address(RVA = "0x17041C8", Offset = "0x17041C8", VA = "0x17041C8")]
				set
				{
				}
			}

			[Token(Token = "0x6001A6B")]
			[Address(RVA = "0x170414C", Offset = "0x170414C", VA = "0x170414C")]
			public WaterParameterVector4(MaterialPropertyBlock propertyBlock, int hash, Vector4 value)
			{
			}
		}

		[Token(Token = "0x40022D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private float directionalLightsIntensity;

		[Token(Token = "0x40022D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x584CE0", Offset = "0x584CE0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x584CE0", Offset = "0x584CE0")]
		[SerializeField]
		private float tesselationFactor;

		[Token(Token = "0x40022D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Water water;

		[Token(Token = "0x40022DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float horizontalDisplacementScale;

		[Token(Token = "0x40022DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float underwaterBlurSize;

		[Token(Token = "0x40022DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float underwaterLightFadeScale;

		[Token(Token = "0x40022DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float underwaterDistortionsIntensity;

		[Token(Token = "0x40022DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float underwaterDistortionAnimationSpeed;

		[Token(Token = "0x40022DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float smoothness;

		[Token(Token = "0x40022E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float ambientSmoothness;

		[Token(Token = "0x40022E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float forwardScatteringIntensity;

		[Token(Token = "0x40022E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector4 lastSurfaceOffset;

		[Token(Token = "0x40022E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Texture2D absorptionGradient;

		[Token(Token = "0x40022E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool absorptionGradientDirty;

		[Token(Token = "0x40022E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int alphaBlendMode;

		[Token(Token = "0x40022E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string usedKeywords;

		[Token(Token = "0x40022E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private WaterParameterFloat[] floatOverrides;

		[Token(Token = "0x40022E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private WaterParameterVector4[] vectorOverrides;

		[Token(Token = "0x40022E9")]
		private const int GradientResolution = 64;

		[Token(Token = "0x40022EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Color[] absorptionColorsBuffer;

		[Token(Token = "0x40022EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int surfaceOffsetId;

		[Token(Token = "0x40022EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int waterShaderId;

		[Token(Token = "0x40022ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int cullId;

		[Token(Token = "0x40022EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static int[] parameterHashes;

		[Token(Token = "0x40022EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Texture2D globalWaterLookupTex;

		[Token(Token = "0x40022F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static bool globalLookupDirty;

		[Token(Token = "0x40022F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static readonly string[] parameterNames;

		[Token(Token = "0x40022F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x584D44", Offset = "0x584D44")]
		private Material <SurfaceMaterial>k__BackingField;

		[Token(Token = "0x40022F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x584D54", Offset = "0x584D54")]
		private Material <SurfaceBackMaterial>k__BackingField;

		[Token(Token = "0x40022F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x584D64", Offset = "0x584D64")]
		private Material <VolumeMaterial>k__BackingField;

		[Token(Token = "0x40022F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x584D74", Offset = "0x584D74")]
		private Material <VolumeBackMaterial>k__BackingField;

		[Token(Token = "0x170003A1")]
		public Material SurfaceMaterial
		{
			[Token(Token = "0x6001A3A")]
			[Address(RVA = "0x16E3078", Offset = "0x16E3078", VA = "0x16E3078")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58C9DC", Offset = "0x58C9DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A3B")]
			[Address(RVA = "0x16E3080", Offset = "0x16E3080", VA = "0x16E3080")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58C9EC", Offset = "0x58C9EC")]
			private set
			{
			}
		}

		[Token(Token = "0x170003A2")]
		public Material SurfaceBackMaterial
		{
			[Token(Token = "0x6001A3C")]
			[Address(RVA = "0x16E3088", Offset = "0x16E3088", VA = "0x16E3088")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58C9FC", Offset = "0x58C9FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A3D")]
			[Address(RVA = "0x16E3090", Offset = "0x16E3090", VA = "0x16E3090")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58CA0C", Offset = "0x58CA0C")]
			private set
			{
			}
		}

		[Token(Token = "0x170003A3")]
		public Material VolumeMaterial
		{
			[Token(Token = "0x6001A3E")]
			[Address(RVA = "0x16E3098", Offset = "0x16E3098", VA = "0x16E3098")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58CA1C", Offset = "0x58CA1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A3F")]
			[Address(RVA = "0x16E30A0", Offset = "0x16E30A0", VA = "0x16E30A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58CA2C", Offset = "0x58CA2C")]
			private set
			{
			}
		}

		[Token(Token = "0x170003A4")]
		public Material VolumeBackMaterial
		{
			[Token(Token = "0x6001A40")]
			[Address(RVA = "0x16E30A8", Offset = "0x16E30A8", VA = "0x16E30A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58CA3C", Offset = "0x58CA3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A41")]
			[Address(RVA = "0x16E30B0", Offset = "0x16E30B0", VA = "0x16E30B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58CA4C", Offset = "0x58CA4C")]
			private set
			{
			}
		}

		[Token(Token = "0x170003A5")]
		public Texture2D UnderwaterAbsorptionColorByDepth
		{
			[Token(Token = "0x6001A42")]
			[Address(RVA = "0x16E30B8", Offset = "0x16E30B8", VA = "0x16E30B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A6")]
		public float HorizontalDisplacementScale
		{
			[Token(Token = "0x6001A43")]
			[Address(RVA = "0x16E3420", Offset = "0x16E3420", VA = "0x16E3420")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003A7")]
		public string UsedKeywords
		{
			[Token(Token = "0x6001A44")]
			[Address(RVA = "0x16E3428", Offset = "0x16E3428", VA = "0x16E3428")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A8")]
		public float UnderwaterBlurSize
		{
			[Token(Token = "0x6001A45")]
			[Address(RVA = "0x16E3430", Offset = "0x16E3430", VA = "0x16E3430")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003A9")]
		public float UnderwaterLightFadeScale
		{
			[Token(Token = "0x6001A46")]
			[Address(RVA = "0x16E3438", Offset = "0x16E3438", VA = "0x16E3438")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003AA")]
		public float UnderwaterDistortionsIntensity
		{
			[Token(Token = "0x6001A47")]
			[Address(RVA = "0x16E3440", Offset = "0x16E3440", VA = "0x16E3440")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003AB")]
		public float UnderwaterDistortionAnimationSpeed
		{
			[Token(Token = "0x6001A48")]
			[Address(RVA = "0x16E3448", Offset = "0x16E3448", VA = "0x16E3448")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0x16E2884", Offset = "0x16E2884", VA = "0x16E2884")]
		internal void Start(Water water)
		{
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0x16E3070", Offset = "0x16E3070", VA = "0x16E3070")]
		internal void Enable()
		{
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0x16E3074", Offset = "0x16E3074", VA = "0x16E3074")]
		internal void Disable()
		{
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0x16E3450", Offset = "0x16E3450", VA = "0x16E3450")]
		public Color GetParameterValue(ColorParameter parameter)
		{
			return default(Color);
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0x16E35D8", Offset = "0x16E35D8", VA = "0x16E35D8")]
		public WaterParameterVector4 GetParameterOverride(ColorParameter parameter)
		{
			return null;
		}

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0x16E37D8", Offset = "0x16E37D8", VA = "0x16E37D8")]
		public void ResetParameter(ColorParameter parameter)
		{
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0x16E3914", Offset = "0x16E3914", VA = "0x16E3914")]
		public Vector4 GetParameterValue(VectorParameter parameter)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0x16E3A24", Offset = "0x16E3A24", VA = "0x16E3A24")]
		public WaterParameterVector4 GetParameterOverride(VectorParameter parameter)
		{
			return null;
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0x16E3C24", Offset = "0x16E3C24", VA = "0x16E3C24")]
		public void ResetParameter(VectorParameter parameter)
		{
		}

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0x16E3D60", Offset = "0x16E3D60", VA = "0x16E3D60")]
		public float GetParameterValue(FloatParameter parameter)
		{
			return default(float);
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0x16E3E74", Offset = "0x16E3E74", VA = "0x16E3E74")]
		public WaterParameterFloat GetParameterOverride(FloatParameter parameter)
		{
			return null;
		}

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0x16E4054", Offset = "0x16E4054", VA = "0x16E4054")]
		public void ResetParameter(FloatParameter parameter)
		{
		}

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0x16E4190", Offset = "0x16E4190", VA = "0x16E4190")]
		public void SetKeyword(string keyword, bool enable)
		{
		}

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0x16E424C", Offset = "0x16E424C", VA = "0x16E424C")]
		internal void OnWaterRender(Camera camera)
		{
		}

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0x16E4854", Offset = "0x16E4854", VA = "0x16E4854")]
		internal void Destroy()
		{
		}

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0x16E4A04", Offset = "0x16E4A04", VA = "0x16E4A04")]
		internal void Validate()
		{
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0x16E46CC", Offset = "0x16E46CC", VA = "0x16E46CC")]
		private void SetBlendMode(bool alphaBlend)
		{
		}

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0x16E2C38", Offset = "0x16E2C38", VA = "0x16E2C38")]
		private void CreateMaterials()
		{
		}

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0x16E4A28", Offset = "0x16E4A28", VA = "0x16E4A28")]
		private void UpdateShaders()
		{
		}

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0x16E4B9C", Offset = "0x16E4B9C", VA = "0x16E4B9C")]
		public void UpdateSurfaceMaterial()
		{
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0x16E5404", Offset = "0x16E5404", VA = "0x16E5404")]
		private void OnProfilesChanged(Water water)
		{
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0x16E5048", Offset = "0x16E5048", VA = "0x16E5048")]
		private void UpdateSurfaceBackMaterial()
		{
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0x16E52BC", Offset = "0x16E52BC", VA = "0x16E52BC")]
		private void UpdateVolumeMaterials()
		{
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0x16E6328", Offset = "0x16E6328", VA = "0x16E6328")]
		private void ApplyOverridenParameters()
		{
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0x16E66CC", Offset = "0x16E66CC", VA = "0x16E66CC")]
		private void OnWaterIdChanged()
		{
		}

		[Token(Token = "0x6001A5F")]
		private static void RemoveArrayElementAt<T>(T[] array, int index)
		{
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0x16E29FC", Offset = "0x16E29FC", VA = "0x16E29FC")]
		private static void CreateParameterHashes()
		{
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0x16E641C", Offset = "0x16E641C", VA = "0x16E641C")]
		public void UpdateGlobalLookupTex()
		{
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0x16E44E0", Offset = "0x16E44E0", VA = "0x16E44E0")]
		private void UpdateGlobalLookupTexOffset()
		{
		}

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0x16E67C8", Offset = "0x16E67C8", VA = "0x16E67C8")]
		public static void ValidateGlobalWaterDataLookupTex()
		{
		}

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0x16E693C", Offset = "0x16E693C", VA = "0x16E693C")]
		private static void CreateGlobalWaterDataLookupTex()
		{
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0x16E30E8", Offset = "0x16E30E8", VA = "0x16E30E8")]
		private void ComputeAbsorptionGradient()
		{
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0x16E6C14", Offset = "0x16E6C14", VA = "0x16E6C14")]
		public WaterMaterials()
		{
		}
	}
	[Token(Token = "0x200045B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x579844", Offset = "0x579844")]
	public sealed class WaterNormalMapAnimation : MonoBehaviour
	{
		[Token(Token = "0x4002316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		private Shader normalMapShader;

		[Token(Token = "0x4002317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int resolution;

		[Token(Token = "0x4002318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float period;

		[Token(Token = "0x4002319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float animationSpeed;

		[Token(Token = "0x400231A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float intensity;

		[Token(Token = "0x400231B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderTexture normalMap1;

		[Token(Token = "0x400231C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Texture sourceNormalMap;

		[Token(Token = "0x400231D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material normalMapMaterial;

		[Token(Token = "0x400231E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int offsetProperty;

		[Token(Token = "0x400231F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int periodProperty;

		[Token(Token = "0x4002320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Water water;

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0x16E78D8", Offset = "0x16E78D8", VA = "0x16E78D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0x16E7AC8", Offset = "0x16E7AC8", VA = "0x16E7AC8")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0x16E7B80", Offset = "0x16E7B80", VA = "0x16E7B80")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0x16E7CD0", Offset = "0x16E7CD0", VA = "0x16E7CD0")]
		public WaterNormalMapAnimation()
		{
		}
	}
	[Token(Token = "0x200045C")]
	public class WaterProjectSettings : ScriptableObjectSingleton
	{
		[Token(Token = "0x200045D")]
		public enum AbsorptionEditMode
		{
			[Token(Token = "0x4002333")]
			Absorption,
			[Token(Token = "0x4002334")]
			Transmission
		}

		[Token(Token = "0x200045E")]
		public enum SpecularEditMode
		{
			[Token(Token = "0x4002336")]
			IndexOfRefraction,
			[Token(Token = "0x4002337")]
			CustomColor
		}

		[Token(Token = "0x4002321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly float CurrentVersion;

		[Token(Token = "0x4002322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly string CurrentVersionString;

		[Token(Token = "0x4002323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float serializedVersion;

		[Token(Token = "0x4002324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int waterLayer;

		[Token(Token = "0x4002325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x584E1C", Offset = "0x584E1C")]
		[SerializeField]
		private int waterTempLayer;

		[Token(Token = "0x4002326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x584E68", Offset = "0x584E68")]
		[SerializeField]
		private int waterCollidersLayer;

		[Token(Token = "0x4002327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x584EB4", Offset = "0x584EB4")]
		[SerializeField]
		private int physicsThreads;

		[Token(Token = "0x4002328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private ThreadPriority physicsThreadsPriority;

		[Token(Token = "0x4002329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool allowCpuFFT;

		[Token(Token = "0x400232A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x584F20", Offset = "0x584F20")]
		[SerializeField]
		private bool allowFloatingPointMipMaps;

		[Token(Token = "0x400232B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[SerializeField]
		private bool debugPhysics;

		[Token(Token = "0x400232C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		[SerializeField]
		private bool askForWaterCameras;

		[Token(Token = "0x400232D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private AbsorptionEditMode absorptionEditMode;

		[Token(Token = "0x400232E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SpecularEditMode specularEditMode;

		[Token(Token = "0x400232F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private bool singlePassStereoRendering;

		[Token(Token = "0x4002330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static WaterProjectSettings instance;

		[Token(Token = "0x4002331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static bool noInstance;

		[Token(Token = "0x170003AE")]
		public static WaterProjectSettings Instance
		{
			[Token(Token = "0x6001A72")]
			[Address(RVA = "0x16EB71C", Offset = "0x16EB71C", VA = "0x16EB71C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AF")]
		public int PhysicsThreads
		{
			[Token(Token = "0x6001A73")]
			[Address(RVA = "0x16EB800", Offset = "0x16EB800", VA = "0x16EB800")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001A74")]
			[Address(RVA = "0x16EB808", Offset = "0x16EB808", VA = "0x16EB808")]
			set
			{
			}
		}

		[Token(Token = "0x170003B0")]
		public int WaterLayer
		{
			[Token(Token = "0x6001A75")]
			[Address(RVA = "0x16EB810", Offset = "0x16EB810", VA = "0x16EB810")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003B1")]
		public int WaterTempLayer
		{
			[Token(Token = "0x6001A76")]
			[Address(RVA = "0x16EB818", Offset = "0x16EB818", VA = "0x16EB818")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003B2")]
		public int WaterCollidersLayer
		{
			[Token(Token = "0x6001A77")]
			[Address(RVA = "0x16EB820", Offset = "0x16EB820", VA = "0x16EB820")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003B3")]
		public ThreadPriority PhysicsThreadsPriority
		{
			[Token(Token = "0x6001A78")]
			[Address(RVA = "0x16EB828", Offset = "0x16EB828", VA = "0x16EB828")]
			get
			{
				return default(ThreadPriority);
			}
		}

		[Token(Token = "0x170003B4")]
		public bool AllowCpuFFT
		{
			[Token(Token = "0x6001A79")]
			[Address(RVA = "0x16EB830", Offset = "0x16EB830", VA = "0x16EB830")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003B5")]
		public bool AllowFloatingPointMipMaps
		{
			[Token(Token = "0x6001A7A")]
			[Address(RVA = "0x16EB838", Offset = "0x16EB838", VA = "0x16EB838")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003B6")]
		public bool DebugPhysics
		{
			[Token(Token = "0x6001A7B")]
			[Address(RVA = "0x16EB924", Offset = "0x16EB924", VA = "0x16EB924")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003B7")]
		public bool AskForWaterCameras
		{
			[Token(Token = "0x6001A7C")]
			[Address(RVA = "0x16EB92C", Offset = "0x16EB92C", VA = "0x16EB92C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A7D")]
			[Address(RVA = "0x16EB934", Offset = "0x16EB934", VA = "0x16EB934")]
			set
			{
			}
		}

		[Token(Token = "0x170003B8")]
		public AbsorptionEditMode InspectorAbsorptionEditMode
		{
			[Token(Token = "0x6001A7E")]
			[Address(RVA = "0x16EB940", Offset = "0x16EB940", VA = "0x16EB940")]
			get
			{
				return default(AbsorptionEditMode);
			}
		}

		[Token(Token = "0x170003B9")]
		public SpecularEditMode InspectorSpecularEditMode
		{
			[Token(Token = "0x6001A7F")]
			[Address(RVA = "0x16EB948", Offset = "0x16EB948", VA = "0x16EB948")]
			get
			{
				return default(SpecularEditMode);
			}
		}

		[Token(Token = "0x170003BA")]
		public bool SinglePassStereoRendering
		{
			[Token(Token = "0x6001A80")]
			[Address(RVA = "0x16EB950", Offset = "0x16EB950", VA = "0x16EB950")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0x16EB958", Offset = "0x16EB958", VA = "0x16EB958")]
		public WaterProjectSettings()
		{
		}
	}
	[Token(Token = "0x200045F")]
	public class WaterQualitySettings : ScriptableObjectSingleton
	{
		[Token(Token = "0x4002338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WaterQualityLevel[] qualityLevels;

		[Token(Token = "0x4002339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool synchronizeWithUnity;

		[Token(Token = "0x400233A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int savedCustomQualityLevel;

		[Token(Token = "0x400233C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int waterQualityIndex;

		[Token(Token = "0x400233D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WaterQualityLevel currentQualityLevel;

		[Token(Token = "0x400233E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static WaterQualitySettings instance;

		[Token(Token = "0x170003BB")]
		public static WaterQualitySettings Instance
		{
			[Token(Token = "0x6001A85")]
			[Address(RVA = "0x16E2388", Offset = "0x16E2388", VA = "0x16E2388")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BC")]
		public string[] Names
		{
			[Token(Token = "0x6001A86")]
			[Address(RVA = "0x16EC8A4", Offset = "0x16EC8A4", VA = "0x16EC8A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BD")]
		public int MaxSpectrumResolution
		{
			[Token(Token = "0x6001A87")]
			[Address(RVA = "0x16EC9B0", Offset = "0x16EC9B0", VA = "0x16EC9B0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001A88")]
			[Address(RVA = "0x16EC9B8", Offset = "0x16EC9B8", VA = "0x16EC9B8")]
			set
			{
			}
		}

		[Token(Token = "0x170003BE")]
		public float TileSizeScale
		{
			[Token(Token = "0x6001A89")]
			[Address(RVA = "0x16EC9F4", Offset = "0x16EC9F4", VA = "0x16EC9F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A8A")]
			[Address(RVA = "0x16EC9FC", Offset = "0x16EC9FC", VA = "0x16EC9FC")]
			set
			{
			}
		}

		[Token(Token = "0x170003BF")]
		public bool AllowHighPrecisionTextures
		{
			[Token(Token = "0x6001A8B")]
			[Address(RVA = "0x16ECA24", Offset = "0x16ECA24", VA = "0x16ECA24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A8C")]
			[Address(RVA = "0x16ECA2C", Offset = "0x16ECA2C", VA = "0x16ECA2C")]
			set
			{
			}
		}

		[Token(Token = "0x170003C0")]
		public bool AllowHighQualityNormalMaps
		{
			[Token(Token = "0x6001A8D")]
			[Address(RVA = "0x16ECA60", Offset = "0x16ECA60", VA = "0x16ECA60")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A8E")]
			[Address(RVA = "0x16ECA68", Offset = "0x16ECA68", VA = "0x16ECA68")]
			set
			{
			}
		}

		[Token(Token = "0x170003C1")]
		public WaterWavesMode WavesMode
		{
			[Token(Token = "0x6001A8F")]
			[Address(RVA = "0x16ECA9C", Offset = "0x16ECA9C", VA = "0x16ECA9C")]
			get
			{
				return default(WaterWavesMode);
			}
			[Token(Token = "0x6001A90")]
			[Address(RVA = "0x16ECAA4", Offset = "0x16ECAA4", VA = "0x16ECAA4")]
			set
			{
			}
		}

		[Token(Token = "0x170003C2")]
		public bool AllowVolumetricLighting
		{
			[Token(Token = "0x6001A91")]
			[Address(RVA = "0x16ECACC", Offset = "0x16ECACC", VA = "0x16ECACC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A92")]
			[Address(RVA = "0x16ECAD4", Offset = "0x16ECAD4", VA = "0x16ECAD4")]
			set
			{
			}
		}

		[Token(Token = "0x170003C3")]
		public float MaxTesselationFactor
		{
			[Token(Token = "0x6001A93")]
			[Address(RVA = "0x16ECB08", Offset = "0x16ECB08", VA = "0x16ECB08")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A94")]
			[Address(RVA = "0x16ECB10", Offset = "0x16ECB10", VA = "0x16ECB10")]
			set
			{
			}
		}

		[Token(Token = "0x170003C4")]
		public int MaxVertexCount
		{
			[Token(Token = "0x6001A95")]
			[Address(RVA = "0x16E2460", Offset = "0x16E2460", VA = "0x16E2460")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001A96")]
			[Address(RVA = "0x16ECB38", Offset = "0x16ECB38", VA = "0x16ECB38")]
			set
			{
			}
		}

		[Token(Token = "0x170003C5")]
		public int MaxTesselatedVertexCount
		{
			[Token(Token = "0x6001A97")]
			[Address(RVA = "0x16E2468", Offset = "0x16E2468", VA = "0x16E2468")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001A98")]
			[Address(RVA = "0x16ECB60", Offset = "0x16ECB60", VA = "0x16ECB60")]
			set
			{
			}
		}

		[Token(Token = "0x170003C6")]
		public bool AllowAlphaBlending
		{
			[Token(Token = "0x6001A99")]
			[Address(RVA = "0x16ECB88", Offset = "0x16ECB88", VA = "0x16ECB88")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A9A")]
			[Address(RVA = "0x16ECB90", Offset = "0x16ECB90", VA = "0x16ECB90")]
			set
			{
			}
		}

		[Token(Token = "0x170003C7")]
		public bool AllowHighQualityReflections
		{
			[Token(Token = "0x6001A9B")]
			[Address(RVA = "0x16ECBC4", Offset = "0x16ECBC4", VA = "0x16ECBC4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A9C")]
			[Address(RVA = "0x16ECBCC", Offset = "0x16ECBCC", VA = "0x16ECBCC")]
			set
			{
			}
		}

		[Token(Token = "0x170003C8")]
		public bool SynchronizeWithUnity
		{
			[Token(Token = "0x6001A9D")]
			[Address(RVA = "0x16ECC00", Offset = "0x16ECC00", VA = "0x16ECC00")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003C9")]
		internal WaterQualityLevel CurrentQualityLevel
		{
			[Token(Token = "0x6001AA2")]
			[Address(RVA = "0x16ECD40", Offset = "0x16ECD40", VA = "0x16ECD40")]
			get
			{
				return default(WaterQualityLevel);
			}
		}

		[Token(Token = "0x1400001F")]
		public event Action Changed
		{
			[Token(Token = "0x6001A83")]
			[Address(RVA = "0x16EC6B4", Offset = "0x16EC6B4", VA = "0x16EC6B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58CA5C", Offset = "0x58CA5C")]
			add
			{
			}
			[Token(Token = "0x6001A84")]
			[Address(RVA = "0x16EC754", Offset = "0x16EC754", VA = "0x16EC754")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58CA6C", Offset = "0x58CA6C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0x16ECC08", Offset = "0x16ECC08", VA = "0x16ECC08")]
		public int GetQualityLevel()
		{
			return default(int);
		}

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0x16ECC10", Offset = "0x16ECC10", VA = "0x16ECC10")]
		public void SetQualityLevel(int index)
		{
		}

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0x16EC7F4", Offset = "0x16EC7F4", VA = "0x16EC7F4")]
		public void SynchronizeQualityLevel()
		{
		}

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0x16ECD38", Offset = "0x16ECD38", VA = "0x16ECD38")]
		internal WaterQualityLevel[] GetQualityLevelsDirect()
		{
			return null;
		}

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0x16EC9E0", Offset = "0x16EC9E0", VA = "0x16EC9E0")]
		private void OnChange()
		{
		}

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0x16ECCB0", Offset = "0x16ECCB0", VA = "0x16ECCB0")]
		private int FindQualityLevel(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0x16ECD60", Offset = "0x16ECD60", VA = "0x16ECD60")]
		private void SynchronizeLevelNames()
		{
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0x16ECD64", Offset = "0x16ECD64", VA = "0x16ECD64")]
		public WaterQualitySettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000460")]
	public struct WaterQualityLevel
	{
		[Token(Token = "0x400233F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public string name;

		[Token(Token = "0x4002340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		public int maxSpectrumResolution;

		[Token(Token = "0x4002341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		public bool allowHighPrecisionTextures;

		[Token(Token = "0x4002342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x58502C", Offset = "0x58502C")]
		[SerializeField]
		public bool allowHighQualityNormalMaps;

		[Token(Token = "0x4002343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x585078", Offset = "0x585078")]
		[SerializeField]
		public float tileSizeScale;

		[Token(Token = "0x4002344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		public WaterWavesMode wavesMode;

		[Token(Token = "0x4002345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public bool allowSpray;

		[Token(Token = "0x4002346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5850D8", Offset = "0x5850D8")]
		[SerializeField]
		public float foamQuality;

		[Token(Token = "0x4002347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public bool allowVolumetricLighting;

		[Token(Token = "0x4002348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x585128", Offset = "0x585128")]
		[SerializeField]
		public float maxTesselationFactor;

		[Token(Token = "0x4002349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public int maxVertexCount;

		[Token(Token = "0x400234A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public int maxTesselatedVertexCount;

		[Token(Token = "0x400234B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public bool allowAlphaBlending;

		[Token(Token = "0x400234C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		public bool allowHighQualityReflections;

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0x16EC620", Offset = "0x16EC620", VA = "0x16EC620")]
		public void ResetToDefaults()
		{
		}
	}
	[Token(Token = "0x2000461")]
	public enum WaterWavesMode
	{
		[Token(Token = "0x400234E")]
		AllowAll,
		[Token(Token = "0x400234F")]
		AllowNormalFFT,
		[Token(Token = "0x4002350")]
		AllowGerstner,
		[Token(Token = "0x4002351")]
		DisallowAll
	}
	[Serializable]
	[Token(Token = "0x2000462")]
	public class WaterRenderer
	{
		[Token(Token = "0x4002352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		[SerializeField]
		private Shader volumeFrontShader;

		[Token(Token = "0x4002353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		private Shader volumeFrontFastShader;

		[Token(Token = "0x4002354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[SerializeField]
		private Shader volumeBackShader;

		[Token(Token = "0x4002355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform reflectionProbeAnchor;

		[Token(Token = "0x4002356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ShadowCastingMode shadowCastingMode;

		[Token(Token = "0x4002357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool useSharedMask;

		[Token(Token = "0x4002358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Water water;

		[Token(Token = "0x4002359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MaterialPropertyBlock propertyBlock;

		[Token(Token = "0x400235A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTexture additiveMaskTexture;

		[Token(Token = "0x400235B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RenderTexture subtractiveMaskTexture;

		[Token(Token = "0x400235C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly List<WaterSimpleMask> masks;

		[Token(Token = "0x400235D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int additiveMaskId;

		[Token(Token = "0x400235E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int subtractiveMaskId;

		[Token(Token = "0x170003CA")]
		public int MaskCount
		{
			[Token(Token = "0x6001AAB")]
			[Address(RVA = "0x16EDEDC", Offset = "0x16EDEDC", VA = "0x16EDEDC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003CB")]
		public MaterialPropertyBlock PropertyBlock
		{
			[Token(Token = "0x6001AAC")]
			[Address(RVA = "0x16E3564", Offset = "0x16E3564", VA = "0x16E3564")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CC")]
		public Transform ReflectionProbeAnchor
		{
			[Token(Token = "0x6001AAD")]
			[Address(RVA = "0x16EDF28", Offset = "0x16EDF28", VA = "0x16EDF28")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AAE")]
			[Address(RVA = "0x16EDF30", Offset = "0x16EDF30", VA = "0x16EDF30")]
			set
			{
			}
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0x16EDE14", Offset = "0x16EDE14", VA = "0x16EDE14")]
		internal void Start(Water water)
		{
		}

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0x16EDED4", Offset = "0x16EDED4", VA = "0x16EDED4")]
		internal void Enable()
		{
		}

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0x16EDED8", Offset = "0x16EDED8", VA = "0x16EDED8")]
		internal void Disable()
		{
		}

		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0x16EDF38", Offset = "0x16EDF38", VA = "0x16EDF38")]
		public void AddMask(WaterSimpleMask mask)
		{
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0x16EE040", Offset = "0x16EE040", VA = "0x16EE040")]
		public void RemoveMask(WaterSimpleMask mask)
		{
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0x16EE0A4", Offset = "0x16EE0A4", VA = "0x16EE0A4")]
		internal void Validate()
		{
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0x16EE224", Offset = "0x16EE224", VA = "0x16EE224")]
		public void RenderEffects(Camera camera)
		{
		}

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0x16EE34C", Offset = "0x16EE34C", VA = "0x16EE34C")]
		public void Render(Camera camera, WaterGeometryType geometryType, [Optional] CommandBuffer commandBuffer, [Optional] Shader shader)
		{
		}

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0x16EF238", Offset = "0x16EF238", VA = "0x16EF238")]
		public void RenderVolumes(CommandBuffer commandBuffer, Shader shader, bool twoPass)
		{
		}

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0x16EF354", Offset = "0x16EF354", VA = "0x16EF354")]
		public void RenderMasks(CommandBuffer commandBuffer)
		{
		}

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0x16EF50C", Offset = "0x16EF50C", VA = "0x16EF50C")]
		public void PostRender(Camera camera)
		{
		}

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0x16EF69C", Offset = "0x16EF69C", VA = "0x16EF69C")]
		public void OnSharedSubtractiveMaskRender(bool hasSubtractiveVolumes, bool hasAdditiveVolumes, bool hasFlatMasks)
		{
		}

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0x16EF8D8", Offset = "0x16EF8D8", VA = "0x16EF8D8")]
		public void OnSharedMaskAdditiveRender()
		{
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0x16EFA2C", Offset = "0x16EFA2C", VA = "0x16EFA2C")]
		public void OnSharedMaskPostRender()
		{
		}

		[Token(Token = "0x6001ABA")]
		private static void RenderVolumes<T>(CommandBuffer commandBuffer, Material material, List<T> boundingVolumes, bool twoPass) where T : WaterVolumeBase
		{
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0x16EF5A8", Offset = "0x16EF5A8", VA = "0x16EF5A8")]
		private void ReleaseTemporaryBuffers()
		{
		}

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0x16EE974", Offset = "0x16EE974", VA = "0x16EE974")]
		private void RenderMasks(Camera camera, WaterCamera waterCamera, MaterialPropertyBlock propertyBlock)
		{
		}

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0x16EFB7C", Offset = "0x16EFB7C", VA = "0x16EFB7C")]
		public WaterRenderer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000463")]
	public sealed class WaterSubsurfaceScattering
	{
		[Token(Token = "0x2000464")]
		public enum SubsurfaceScatteringMode
		{
			[Token(Token = "0x400236C")]
			Disabled,
			[Token(Token = "0x400236D")]
			TextureSpace
		}

		[Token(Token = "0x400235F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		[SerializeField]
		private Shader collectLightShader;

		[Token(Token = "0x4002360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		private Shader collectTransmissionShader;

		[Token(Token = "0x4002361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SubsurfaceScatteringMode mode;

		[Token(Token = "0x4002362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BlurSSS subsurfaceScatteringBlur;

		[Token(Token = "0x4002363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x585310", Offset = "0x585310")]
		[SerializeField]
		private float ignoredLightFraction;

		[Token(Token = "0x4002364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "ResolutionAttribute", RVA = "0x585354", Offset = "0x585354")]
		[SerializeField]
		private int ambientResolution;

		[Token(Token = "0x4002365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5853DC", Offset = "0x5853DC")]
		[SerializeField]
		private int lightCount;

		[Token(Token = "0x4002366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private int lightingLayer;

		[Token(Token = "0x4002367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RenderTexture scatteringTex;

		[Token(Token = "0x4002368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector4 shaderParams;

		[Token(Token = "0x4002369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Water water;

		[Token(Token = "0x400236A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<Water> cachedRenderList;

		[Token(Token = "0x170003CD")]
		public float IsotropicScatteringIntensity
		{
			[Token(Token = "0x6001AC2")]
			[Address(RVA = "0x16F10C4", Offset = "0x16F10C4", VA = "0x16F10C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AC3")]
			[Address(RVA = "0x16F10CC", Offset = "0x16F10CC", VA = "0x16F10CC")]
			set
			{
			}
		}

		[Token(Token = "0x170003CE")]
		public float SubsurfaceScatteringContrast
		{
			[Token(Token = "0x6001AC4")]
			[Address(RVA = "0x16F10D4", Offset = "0x16F10D4", VA = "0x16F10D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AC5")]
			[Address(RVA = "0x16F10DC", Offset = "0x16F10DC", VA = "0x16F10DC")]
			set
			{
			}
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0x16F0A7C", Offset = "0x16F0A7C", VA = "0x16F0A7C")]
		static WaterSubsurfaceScattering()
		{
		}

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0x16F0B44", Offset = "0x16F0B44", VA = "0x16F0B44")]
		internal void Start(Water water)
		{
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0x16F0C20", Offset = "0x16F0C20", VA = "0x16F0C20")]
		internal void Enable()
		{
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0x16F0F30", Offset = "0x16F0F30", VA = "0x16F0F30")]
		internal void Disable()
		{
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0x16F10E4", Offset = "0x16F10E4", VA = "0x16F10E4")]
		internal void Destroy()
		{
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0x16F1204", Offset = "0x16F1204", VA = "0x16F1204")]
		internal void ResolveProfileData(Water water)
		{
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0x16F0D94", Offset = "0x16F0D94", VA = "0x16F0D94")]
		internal void Validate()
		{
		}

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0x16F12B8", Offset = "0x16F12B8", VA = "0x16F12B8")]
		public void OnWaterRender(Camera camera)
		{
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0x16F18F4", Offset = "0x16F18F4", VA = "0x16F18F4")]
		public WaterSubsurfaceScattering()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000465")]
	public sealed class WaterUvAnimator
	{
		[Token(Token = "0x400236E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private NormalMapAnimation normalMapAnimation1;

		[Token(Token = "0x400236F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private NormalMapAnimation normalMapAnimation2;

		[Token(Token = "0x4002370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float windOffset1x;

		[Token(Token = "0x4002371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float windOffset1y;

		[Token(Token = "0x4002372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float windOffset2x;

		[Token(Token = "0x4002373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float windOffset2y;

		[Token(Token = "0x4002374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector2 windSpeed1;

		[Token(Token = "0x4002375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector2 windSpeed2;

		[Token(Token = "0x4002376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector2 windSpeed;

		[Token(Token = "0x4002377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Water water;

		[Token(Token = "0x4002378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private WindWaves windWaves;

		[Token(Token = "0x4002379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool hasWindWaves;

		[Token(Token = "0x400237A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int bumpMapST;

		[Token(Token = "0x400237B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int detailAlbedoMapST;

		[Token(Token = "0x400237C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector4 uvTransform1;

		[Token(Token = "0x400237D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector4 uvTransform2;

		[Token(Token = "0x400237E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool windVectorsDirty;

		[Token(Token = "0x400237F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float lastTime;

		[Token(Token = "0x170003CF")]
		public Vector2 WindOffset
		{
			[Token(Token = "0x6001ACC")]
			[Address(RVA = "0x16F3274", Offset = "0x16F3274", VA = "0x16F3274")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170003D0")]
		public NormalMapAnimation NormalMapAnimation1
		{
			[Token(Token = "0x6001ACD")]
			[Address(RVA = "0x16F327C", Offset = "0x16F327C", VA = "0x16F327C")]
			get
			{
				return default(NormalMapAnimation);
			}
			[Token(Token = "0x6001ACE")]
			[Address(RVA = "0x16F3290", Offset = "0x16F3290", VA = "0x16F3290")]
			set
			{
			}
		}

		[Token(Token = "0x170003D1")]
		public NormalMapAnimation NormalMapAnimation2
		{
			[Token(Token = "0x6001ACF")]
			[Address(RVA = "0x16F32B4", Offset = "0x16F32B4", VA = "0x16F32B4")]
			get
			{
				return default(NormalMapAnimation);
			}
			[Token(Token = "0x6001AD0")]
			[Address(RVA = "0x16F32C8", Offset = "0x16F32C8", VA = "0x16F32C8")]
			set
			{
			}
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0x16F31B8", Offset = "0x16F31B8", VA = "0x16F31B8")]
		public void Start(Water water)
		{
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0x16F32EC", Offset = "0x16F32EC", VA = "0x16F32EC")]
		public void Update()
		{
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0x16F341C", Offset = "0x16F341C", VA = "0x16F341C")]
		private void PrecomputeWindVectors()
		{
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0x16F3524", Offset = "0x16F3524", VA = "0x16F3524")]
		private Vector2 GetWindSpeed()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0x16F33E4", Offset = "0x16F33E4", VA = "0x16F33E4")]
		private bool HasWindSpeedChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0x16F3558", Offset = "0x16F3558", VA = "0x16F3558")]
		public WaterUvAnimator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000466")]
	public class DynamicSmoothness
	{
		[Token(Token = "0x4002380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Water water;

		[Token(Token = "0x4002381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly WindWaves windWaves;

		[Token(Token = "0x4002382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly bool supported;

		[Token(Token = "0x4002383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ComputeShader varianceShader;

		[Token(Token = "0x4002384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderTexture varianceTexture;

		[Token(Token = "0x4002385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int lastResetIndex;

		[Token(Token = "0x4002386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int currentIndex;

		[Token(Token = "0x4002387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool finished;

		[Token(Token = "0x4002388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool initialized;

		[Token(Token = "0x4002389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float dynamicSmoothnessIntensity;

		[Token(Token = "0x170003D2")]
		public bool Enabled
		{
			[Token(Token = "0x6001AD7")]
			[Address(RVA = "0x7D0E1C", Offset = "0x7D0E1C", VA = "0x7D0E1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003D3")]
		public Texture VarianceTexture
		{
			[Token(Token = "0x6001AD8")]
			[Address(RVA = "0x7D0E4C", Offset = "0x7D0E4C", VA = "0x7D0E4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D4")]
		public ComputeShader ComputeShader
		{
			[Token(Token = "0x6001AD9")]
			[Address(RVA = "0x7D0E54", Offset = "0x7D0E54", VA = "0x7D0E54")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001ADA")]
			[Address(RVA = "0x7D0E5C", Offset = "0x7D0E5C", VA = "0x7D0E5C")]
			set
			{
			}
		}

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0x7D0C08", Offset = "0x7D0C08", VA = "0x7D0C08")]
		public DynamicSmoothness(Water water, WindWaves windWaves)
		{
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0x7D0E64", Offset = "0x7D0E64", VA = "0x7D0E64")]
		public void FreeResources()
		{
		}

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0x7D0D08", Offset = "0x7D0D08", VA = "0x7D0D08")]
		public void OnCopyModeChanged()
		{
		}

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0x7D0CDC", Offset = "0x7D0CDC", VA = "0x7D0CDC")]
		public bool CheckSupport()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0x7D1018", Offset = "0x7D1018", VA = "0x7D1018")]
		public void Update()
		{
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0x7D108C", Offset = "0x7D108C", VA = "0x7D108C")]
		private void InitializeVariance()
		{
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0x7D0F08", Offset = "0x7D0F08", VA = "0x7D0F08")]
		private void ValidateVarianceTextures(WindWaves windWaves)
		{
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0x7D1204", Offset = "0x7D1204", VA = "0x7D1204")]
		private void RenderNextPixel()
		{
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0x7D1628", Offset = "0x7D1628", VA = "0x7D1628")]
		private void ResetComputations()
		{
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0x7D1544", Offset = "0x7D1544", VA = "0x7D1544")]
		private static RenderTexture CreateVarianceTexture(RenderTextureFormat format)
		{
			return null;
		}

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0x7D14AC", Offset = "0x7D14AC", VA = "0x7D14AC")]
		private void OnProfilesChanged(Water water)
		{
		}

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0x7D1638", Offset = "0x7D1638", VA = "0x7D1638")]
		private void OnWindDirectionChanged(WindWaves windWaves)
		{
		}
	}
	[Token(Token = "0x2000467")]
	public class SpectrumResolver : SpectrumResolverCPU
	{
		[Token(Token = "0x2000468")]
		public enum SpectrumType
		{
			[Token(Token = "0x400239D")]
			Height,
			[Token(Token = "0x400239E")]
			Normal,
			[Token(Token = "0x400239F")]
			Displacement,
			[Token(Token = "0x40023A0")]
			RawDirectional,
			[Token(Token = "0x40023A1")]
			RawOmnidirectional
		}

		[Token(Token = "0x400238A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Texture2D tileSizeLookup;

		[Token(Token = "0x400238B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Texture omnidirectionalSpectrum;

		[Token(Token = "0x400238C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private RenderTexture totalOmnidirectionalSpectrum;

		[Token(Token = "0x400238D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private RenderTexture directionalSpectrum;

		[Token(Token = "0x400238E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RenderTexture heightSpectrum;

		[Token(Token = "0x400238F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private RenderTexture normalSpectrum;

		[Token(Token = "0x4002390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private RenderTexture displacementSpectrum;

		[Token(Token = "0x4002391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private RenderBuffer[] renderTargetsx2;

		[Token(Token = "0x4002392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private RenderBuffer[] renderTargetsx3;

		[Token(Token = "0x4002393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool tileSizesLookupDirty;

		[Token(Token = "0x4002394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
		private bool directionalSpectrumDirty;

		[Token(Token = "0x4002395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Vector4 tileSizes;

		[Token(Token = "0x4002396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Mesh spectrumDownsamplingMesh;

		[Token(Token = "0x4002397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private readonly int renderTimeId;

		[Token(Token = "0x4002398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private readonly Material animationMaterial;

		[Token(Token = "0x4002399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private readonly Water water;

		[Token(Token = "0x400239A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private readonly WindWaves windWaves;

		[Token(Token = "0x400239B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58542C", Offset = "0x58542C")]
		private float <RenderTime>k__BackingField;

		[Token(Token = "0x170003D5")]
		public Texture TileSizeLookup
		{
			[Token(Token = "0x6001AE7")]
			[Address(RVA = "0x1682968", Offset = "0x1682968", VA = "0x1682968")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D6")]
		public float RenderTime
		{
			[Token(Token = "0x6001AE8")]
			[Address(RVA = "0x1682C08", Offset = "0x1682C08", VA = "0x1682C08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58CA7C", Offset = "0x58CA7C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AE9")]
			[Address(RVA = "0x1682C10", Offset = "0x1682C10", VA = "0x1682C10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58CA8C", Offset = "0x58CA8C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0x16827A8", Offset = "0x16827A8", VA = "0x16827A8")]
		public SpectrumResolver(Water water, WindWaves windWaves, Shader spectrumShader)
		{
		}

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0x1682C18", Offset = "0x1682C18", VA = "0x1682C18")]
		public Texture RenderHeightSpectrumAt(float time)
		{
			return null;
		}

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0x168312C", Offset = "0x168312C", VA = "0x168312C")]
		public Texture RenderNormalsSpectrumAt(float time)
		{
			return null;
		}

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0x16831F4", Offset = "0x16831F4", VA = "0x16831F4")]
		public void RenderDisplacementsSpectraAt(float time, [Out] Texture height, [Out] Texture displacement)
		{
		}

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0x168336C", Offset = "0x168336C", VA = "0x168336C")]
		public void RenderCompleteSpectraAt(float time, [Out] Texture height, [Out] Texture normal, [Out] Texture displacement)
		{
		}

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0x1683520", Offset = "0x1683520", VA = "0x1683520")]
		public Texture GetSpectrum(SpectrumType type)
		{
			return null;
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0x16835B4", Offset = "0x16835B4", VA = "0x16835B4", Slot = "4")]
		public override void AddSpectrum(WaterWavesSpectrumDataBase spectrum)
		{
		}

		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0x16835E0", Offset = "0x16835E0", VA = "0x16835E0", Slot = "5")]
		public override void RemoveSpectrum(WaterWavesSpectrumDataBase spectrum)
		{
		}

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0x168360C", Offset = "0x168360C", VA = "0x168360C", Slot = "6")]
		internal override void OnProfilesChanged()
		{
		}

		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0x1683690", Offset = "0x1683690", VA = "0x1683690")]
		private void RenderTotalOmnidirectionalSpectrum()
		{
		}

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0x1683B44", Offset = "0x1683B44", VA = "0x1683B44", Slot = "7")]
		public override void SetDirectionalSpectrumDirty()
		{
		}

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0x1683B70", Offset = "0x1683B70", VA = "0x1683B70")]
		private void RenderDirectionalSpectrum()
		{
		}

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0x1683CFC", Offset = "0x1683CFC", VA = "0x1683CFC")]
		private void AddOverlayToDirectionalSpectrum()
		{
		}

		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0x16830D0", Offset = "0x16830D0", VA = "0x16830D0")]
		internal RenderTexture GetRawDirectionalSpectrum()
		{
			return null;
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0x1683A2C", Offset = "0x1683A2C", VA = "0x1683A2C")]
		private RenderTexture GetTotalOmnidirectionalSpectrum()
		{
			return null;
		}

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0x1682CE0", Offset = "0x1682CE0", VA = "0x1682CE0")]
		private void CheckResources()
		{
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0x16841D8", Offset = "0x16841D8", VA = "0x16841D8", Slot = "8")]
		internal override void OnMapsFormatChanged(bool resolution)
		{
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0x168298C", Offset = "0x168298C", VA = "0x168298C")]
		private void ValidateTileSizeLookup()
		{
		}

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0x16844F4", Offset = "0x16844F4", VA = "0x16844F4")]
		private static void AddQuad(Vector3[] vertices, Vector3[] origins, Vector2[] uvs, int index, float xOffset, float yOffset, int originIndex)
		{
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0x168471C", Offset = "0x168471C", VA = "0x168471C")]
		private static void AddQuads(Vector3[] vertices, Vector3[] origins, Vector2[] uvs, int index, float xOffset, float yOffset)
		{
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0x1683FB4", Offset = "0x1683FB4", VA = "0x1683FB4")]
		private static Mesh CreateDownsamplingMesh()
		{
			return null;
		}
	}
	[Token(Token = "0x2000469")]
	public sealed class WavesRendererFFT
	{
		[Serializable]
		[Token(Token = "0x200046A")]
		public sealed class Data
		{
			[Token(Token = "0x40023C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58545C", Offset = "0x58545C")]
			public bool HighQualityNormalMaps;

			[Token(Token = "0x40023C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585494", Offset = "0x585494")]
			public bool ForcePixelShader;

			[Token(Token = "0x40023C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5854CC", Offset = "0x5854CC")]
			public FlattenMode FlattenMode;

			[Token(Token = "0x40023C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585504", Offset = "0x585504")]
			public int CachedFrameCount;

			[Token(Token = "0x6001B1E")]
			[Address(RVA = "0x1704300", Offset = "0x1704300", VA = "0x1704300")]
			public Data()
			{
			}
		}

		[Token(Token = "0x200046B")]
		public enum SpectrumType
		{
			[Token(Token = "0x40023C7")]
			Phillips,
			[Token(Token = "0x40023C8")]
			Unified
		}

		[Token(Token = "0x200046C")]
		[Flags]
		public enum MapType
		{
			[Token(Token = "0x40023CA")]
			Displacement = 1,
			[Token(Token = "0x40023CB")]
			Normal = 2
		}

		[Token(Token = "0x200046D")]
		public enum FlattenMode
		{
			[Token(Token = "0x40023CD")]
			Auto,
			[Token(Token = "0x40023CE")]
			ForcedOn,
			[Token(Token = "0x40023CF")]
			ForcedOff
		}

		[Token(Token = "0x40023A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Shader fftShader;

		[Token(Token = "0x40023A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Shader fftUtilitiesShader;

		[Token(Token = "0x40023A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Water water;

		[Token(Token = "0x40023A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly WindWaves windWaves;

		[Token(Token = "0x40023A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Data data;

		[Token(Token = "0x40023A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly RenderTexture[][] normalMapsCache;

		[Token(Token = "0x40023A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly RenderTexture[][] displacementMapsCache;

		[Token(Token = "0x40023A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly bool[] isCachedFrameValid;

		[Token(Token = "0x40023AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RenderTexture[] normalMaps;

		[Token(Token = "0x40023AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RenderTexture[] displacementMaps;

		[Token(Token = "0x40023AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RenderTexturesCache singleTargetCache;

		[Token(Token = "0x40023AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RenderTexturesCache doubleTargetCache;

		[Token(Token = "0x40023AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GpuFFT heightFFT;

		[Token(Token = "0x40023AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GpuFFT normalFFT;

		[Token(Token = "0x40023B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private GpuFFT displacementFFT;

		[Token(Token = "0x40023B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material fftUtilitiesMaterial;

		[Token(Token = "0x40023B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ComputeShader dx11FFT;

		[Token(Token = "0x40023B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private MapType renderedMaps;

		[Token(Token = "0x40023B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool finalHighQualityNormalMaps;

		[Token(Token = "0x40023B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
		private bool flatten;

		[Token(Token = "0x40023B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9E")]
		private bool copyModeDirty;

		[Token(Token = "0x40023B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int waveMapsFrame;

		[Token(Token = "0x40023B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Water lastCopyFrom;

		[Token(Token = "0x40023BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int heightTexId;

		[Token(Token = "0x40023BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int displacementTexId;

		[Token(Token = "0x40023BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int horizontalDisplacementScaleId;

		[Token(Token = "0x40023BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int jacobianScaleId;

		[Token(Token = "0x40023BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int offsetId;

		[Token(Token = "0x40023BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly Vector4[] offsets;

		[Token(Token = "0x40023C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly Vector4[] offsetsDual;

		[Token(Token = "0x40023C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58544C", Offset = "0x58544C")]
		private bool <Enabled>k__BackingField;

		[Token(Token = "0x170003D7")]
		public MapType RenderedMaps
		{
			[Token(Token = "0x6001B04")]
			[Address(RVA = "0x16FE6C0", Offset = "0x16FE6C0", VA = "0x16FE6C0")]
			get
			{
				return default(MapType);
			}
			[Token(Token = "0x6001B05")]
			[Address(RVA = "0x16FE6C8", Offset = "0x16FE6C8", VA = "0x16FE6C8")]
			set
			{
			}
		}

		[Token(Token = "0x170003D8")]
		public bool Enabled
		{
			[Token(Token = "0x6001B06")]
			[Address(RVA = "0x16FE718", Offset = "0x16FE718", VA = "0x16FE718")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58CABC", Offset = "0x58CABC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B07")]
			[Address(RVA = "0x16FE720", Offset = "0x16FE720", VA = "0x16FE720")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58CACC", Offset = "0x58CACC")]
			private set
			{
			}
		}

		[Token(Token = "0x170003D9")]
		public RenderTexture[] NormalMaps
		{
			[Token(Token = "0x6001B0A")]
			[Address(RVA = "0x16FE7A8", Offset = "0x16FE7A8", VA = "0x16FE7A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000020")]
		public event Action ResourcesChanged
		{
			[Token(Token = "0x6001AFE")]
			[Address(RVA = "0x16FD4B0", Offset = "0x16FD4B0", VA = "0x16FD4B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58CA9C", Offset = "0x58CA9C")]
			add
			{
			}
			[Token(Token = "0x6001AFF")]
			[Address(RVA = "0x16FD550", Offset = "0x16FD550", VA = "0x16FD550")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58CAAC", Offset = "0x58CAAC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0x16FD5F0", Offset = "0x16FD5F0", VA = "0x16FD5F0")]
		public WavesRendererFFT(Water water, WindWaves windWaves, Data data)
		{
		}

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0x16FDAD4", Offset = "0x16FDAD4", VA = "0x16FDAD4")]
		internal void Enable()
		{
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0x16FE304", Offset = "0x16FE304", VA = "0x16FE304")]
		internal void Disable()
		{
		}

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0x16FE6B8", Offset = "0x16FE6B8", VA = "0x16FE6B8")]
		internal void OnDestroy()
		{
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0x16FE72C", Offset = "0x16FE72C", VA = "0x16FE72C")]
		public Texture GetDisplacementMap(int index)
		{
			return null;
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0x16FE76C", Offset = "0x16FE76C", VA = "0x16FE76C")]
		public Texture GetNormalMap(int index)
		{
			return null;
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0x16FDE1C", Offset = "0x16FDE1C", VA = "0x16FDE1C")]
		private void ValidateResources()
		{
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0x16FDC78", Offset = "0x16FDC78", VA = "0x16FDC78")]
		public void OnCopyModeChanged()
		{
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0x16FE81C", Offset = "0x16FE81C", VA = "0x16FE81C")]
		private void CreateRenderTextures(RenderTexture[] renderTextures, string name, RenderTextureFormat format, int count, bool mipMaps)
		{
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0x16FE944", Offset = "0x16FE944", VA = "0x16FE944")]
		private RenderTexture CreateRenderTexture(string name, RenderTextureFormat format, bool mipMaps)
		{
			return null;
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0x16FE7B0", Offset = "0x16FE7B0", VA = "0x16FE7B0")]
		private void ValidateFFT(GpuFFT fft, bool present, bool twoChannels)
		{
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0x16FEAA0", Offset = "0x16FEAA0", VA = "0x16FEAA0")]
		private GpuFFT ChooseBestFFTAlgorithm(bool twoChannels)
		{
			return null;
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0x16FEB60", Offset = "0x16FEB60", VA = "0x16FEB60")]
		internal void ResolveFinalSettings(WaterQualityLevel qualityLevel)
		{
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0x16FD934", Offset = "0x16FD934", VA = "0x16FD934")]
		internal void Validate()
		{
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0x16FEBA0", Offset = "0x16FEBA0", VA = "0x16FEBA0")]
		private void OnProfilesChanged(Water water)
		{
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0x16FE31C", Offset = "0x16FE31C", VA = "0x16FE31C")]
		private void Dispose(bool total)
		{
		}

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0x16FEC04", Offset = "0x16FEC04", VA = "0x16FEC04")]
		public void OnWaterRender(Camera camera)
		{
		}

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0x16FEDC4", Offset = "0x16FEDC4", VA = "0x16FEDC4")]
		private void OnResolutionChanged(WindWaves windWaves)
		{
		}

		[Token(Token = "0x6001B17")]
		[Address(RVA = "0x16FEC94", Offset = "0x16FEC94", VA = "0x16FEC94")]
		private void ValidateWaveMaps()
		{
		}

		[Token(Token = "0x6001B18")]
		[Address(RVA = "0x16FF49C", Offset = "0x16FF49C", VA = "0x16FF49C")]
		private void RenderMapsFromCache(float time, RenderTexture[] displacementMaps, RenderTexture[] normalMaps)
		{
		}

		[Token(Token = "0x6001B19")]
		[Address(RVA = "0x16FF7B0", Offset = "0x16FF7B0", VA = "0x16FF7B0")]
		private void RetrieveCachedFrame(int frameIndex, [Out] RenderTexture[] displacementMaps, [Out] RenderTexture[] normalMaps)
		{
		}

		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0x16FEDEC", Offset = "0x16FEDEC", VA = "0x16FEDEC")]
		private void RenderMaps(float time, RenderTexture[] displacementMaps, RenderTexture[] normalMaps)
		{
		}

		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0x16FF9AC", Offset = "0x16FF9AC", VA = "0x16FF9AC")]
		private void RenderSpectra(float time, [Out] Texture heightSpectrum, [Out] Texture normalSpectrum, [Out] Texture displacementSpectrum)
		{
		}

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0x16FD7E8", Offset = "0x16FD7E8", VA = "0x16FD7E8")]
		private void CacheShaderIds()
		{
		}
	}
	[Token(Token = "0x200046E")]
	public sealed class WavesRendererGerstner
	{
		[Serializable]
		[Token(Token = "0x200046F")]
		public class Data
		{
			[Token(Token = "0x40023D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58553C", Offset = "0x58553C")]
			public int NumGerstners;

			[Token(Token = "0x6001B2B")]
			[Address(RVA = "0x1704318", Offset = "0x1704318", VA = "0x1704318")]
			public Data()
			{
			}
		}

		[Token(Token = "0x40023D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Water water;

		[Token(Token = "0x40023D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly WindWaves windWaves;

		[Token(Token = "0x40023D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Data data;

		[Token(Token = "0x40023D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Gerstner4[] gerstnerFours;

		[Token(Token = "0x40023D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int lastUpdateFrame;

		[Token(Token = "0x40023D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool enabled;

		[Token(Token = "0x170003DA")]
		public bool Enabled
		{
			[Token(Token = "0x6001B23")]
			[Address(RVA = "0x17002A4", Offset = "0x17002A4", VA = "0x17002A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0x16FFCC8", Offset = "0x16FFCC8", VA = "0x16FFCC8")]
		public WavesRendererGerstner(Water water, WindWaves windWaves, Data data)
		{
		}

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0x16FFD2C", Offset = "0x16FFD2C", VA = "0x16FFD2C")]
		internal void Enable()
		{
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0x1700284", Offset = "0x1700284", VA = "0x1700284")]
		internal void Disable()
		{
		}

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0x1700294", Offset = "0x1700294", VA = "0x1700294")]
		internal void OnValidate(WindWaves windWaves)
		{
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0x16FFE2C", Offset = "0x16FFE2C", VA = "0x16FFE2C")]
		private void FindMostMeaningfulWaves()
		{
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0x17002AC", Offset = "0x17002AC", VA = "0x17002AC")]
		private void UpdateMaterial()
		{
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0x170059C", Offset = "0x170059C", VA = "0x170059C")]
		public void OnWaterRender(Camera camera)
		{
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0x1700774", Offset = "0x1700774", VA = "0x1700774")]
		public void OnWaterPostRender(Camera camera)
		{
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0x1700778", Offset = "0x1700778", VA = "0x1700778")]
		public void BuildShaderVariant(ShaderVariant variant, Water water, WindWaves windWaves, WaterQualityLevel qualityLevel)
		{
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0x17005DC", Offset = "0x17005DC", VA = "0x17005DC")]
		private void UpdateWaves()
		{
		}

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0x17007E0", Offset = "0x17007E0", VA = "0x17007E0")]
		private void OnProfilesChanged(Water water)
		{
		}
	}
	[Token(Token = "0x2000470")]
	public class Gerstner4
	{
		[Token(Token = "0x40023D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GerstnerWave wave0;

		[Token(Token = "0x40023D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GerstnerWave wave1;

		[Token(Token = "0x40023D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GerstnerWave wave2;

		[Token(Token = "0x40023DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GerstnerWave wave3;

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0x7F61C4", Offset = "0x7F61C4", VA = "0x7F61C4")]
		public Gerstner4(GerstnerWave wave0, GerstnerWave wave1, GerstnerWave wave2, GerstnerWave wave3)
		{
		}
	}
	[Token(Token = "0x2000471")]
	public class GerstnerWave
	{
		[Token(Token = "0x40023DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2 direction;

		[Token(Token = "0x40023DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float amplitude;

		[Token(Token = "0x40023DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float offset;

		[Token(Token = "0x40023DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float frequency;

		[Token(Token = "0x40023DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float speed;

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0x7F6244", Offset = "0x7F6244", VA = "0x7F6244")]
		public GerstnerWave()
		{
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0x7F627C", Offset = "0x7F627C", VA = "0x7F627C")]
		public GerstnerWave(WaterWave wave, Vector2[] scaleOffsets)
		{
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0x7F6340", Offset = "0x7F6340", VA = "0x7F6340")]
		public GerstnerWave(Vector2 direction, float amplitude, float offset, float frequency, float speed)
		{
		}
	}
	[Token(Token = "0x2000472")]
	public class WeatherSystem : MonoBehaviour
	{
		[Token(Token = "0x40023E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Water water;

		[Token(Token = "0x40023E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private WaterProfile profile;

		[Token(Token = "0x40023E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585574", Offset = "0x585574")]
		[SerializeField]
		private float radius;

		[Token(Token = "0x40023E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5855C0", Offset = "0x5855C0")]
		[SerializeField]
		private float weight;

		[Token(Token = "0x40023E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaterWavesSpectrumData spectrumData;

		[Token(Token = "0x40023E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector2 lastOffset;

		[Token(Token = "0x40023E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector2 lastWindDirection;

		[Token(Token = "0x40023E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float lastRadius;

		[Token(Token = "0x40023E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float lastWeight;

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0x15D0324", Offset = "0x15D0324", VA = "0x15D0324")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0x15D0618", Offset = "0x15D0618", VA = "0x15D0618")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0x15D0698", Offset = "0x15D0698", VA = "0x15D0698")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0x15D0400", Offset = "0x15D0400", VA = "0x15D0400")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0x15D06DC", Offset = "0x15D06DC", VA = "0x15D06DC")]
		public WeatherSystem()
		{
		}
	}
	[Token(Token = "0x2000473")]
	public sealed class WindWaves
	{
		[Serializable]
		[Token(Token = "0x2000474")]
		public sealed class Data
		{
			[Token(Token = "0x4002405")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform WindDirectionPointer;

			[Token(Token = "0x4002406")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585600", Offset = "0x585600")]
			[SerializeField]
			public int Resolution;

			[Token(Token = "0x4002407")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58564C", Offset = "0x58564C")]
			[SerializeField]
			public bool HighPrecision;

			[Token(Token = "0x4002408")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[HideInInspector]
			[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x585698", Offset = "0x585698")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585698", Offset = "0x585698")]
			[SerializeField]
			public float CpuWaveThreshold;

			[Token(Token = "0x4002409")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[HideInInspector]
			[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x585718", Offset = "0x585718")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585718", Offset = "0x585718")]
			public int CpuMaxWaves;

			[Token(Token = "0x400240A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[HideInInspector]
			[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x585788", Offset = "0x585788")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585788", Offset = "0x585788")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x585788", Offset = "0x585788")]
			public int CpuFFTPrecisionBoost;

			[Token(Token = "0x400240B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585810", Offset = "0x585810")]
			public float CpuDesiredStandardError;

			[Token(Token = "0x400240C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585848", Offset = "0x585848")]
			public Water CopyFrom;

			[Token(Token = "0x400240D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585880", Offset = "0x585880")]
			public float LoopDuration;

			[Token(Token = "0x400240E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public WindWavesEvent WindDirectionChanged;

			[Token(Token = "0x400240F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public WindWavesEvent ResolutionChanged;

			[Token(Token = "0x4002410")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public float MipBias;

			[Token(Token = "0x4002411")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public WavesRendererFFT.Data WavesRendererFFTData;

			[Token(Token = "0x4002412")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public WavesRendererGerstner.Data WavesRendererGerstnerData;

			[Token(Token = "0x6001B65")]
			[Address(RVA = "0x1704914", Offset = "0x1704914", VA = "0x1704914")]
			public Data()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000475")]
		public class WindWavesEvent : UnityEvent<WindWaves>
		{
			[Token(Token = "0x6001B66")]
			[Address(RVA = "0x1704950", Offset = "0x1704950", VA = "0x1704950")]
			public WindWavesEvent()
			{
			}
		}

		[Token(Token = "0x40023E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Water water;

		[Token(Token = "0x40023EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Data data;

		[Token(Token = "0x40023EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector4 tileSizeScales;

		[Token(Token = "0x40023EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int finalResolution;

		[Token(Token = "0x40023ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool finalHighPrecision;

		[Token(Token = "0x40023EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float windSpeedMagnitude;

		[Token(Token = "0x40023EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float spectrumDirectionality;

		[Token(Token = "0x40023F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float tileSize;

		[Token(Token = "0x40023F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float lastTileSize;

		[Token(Token = "0x40023F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float lastUniformWaterScale;

		[Token(Token = "0x40023F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector4 tileSizes;

		[Token(Token = "0x40023F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector4 tileSizesInv;

		[Token(Token = "0x40023F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector4 unscaledTileSizes;

		[Token(Token = "0x40023F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector2 windDirection;

		[Token(Token = "0x40023F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector2 windSpeed;

		[Token(Token = "0x40023F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private WaveSpectrumRenderMode finalRenderMode;

		[Token(Token = "0x40023F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private SpectrumResolver spectrumResolver;

		[Token(Token = "0x40023FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Water runtimeCopyFrom;

		[Token(Token = "0x40023FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool isClone;

		[Token(Token = "0x40023FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		private bool windSpeedChanged;

		[Token(Token = "0x40023FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		private bool hasWindDirectionPointer;

		[Token(Token = "0x40023FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private WavesRendererFFT waterWavesFFT;

		[Token(Token = "0x40023FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private WavesRendererGerstner waterWavesGerstner;

		[Token(Token = "0x4002400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private DynamicSmoothness dynamicSmoothness;

		[Token(Token = "0x4002401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int tileSizeId;

		[Token(Token = "0x4002402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int tileSizeInvId;

		[Token(Token = "0x4002403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int tileSizeScalesId;

		[Token(Token = "0x4002404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private int maxDisplacementId;

		[Token(Token = "0x170003DB")]
		public Water CopyFrom
		{
			[Token(Token = "0x6001B38")]
			[Address(RVA = "0x15D3448", Offset = "0x15D3448", VA = "0x15D3448")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B39")]
			[Address(RVA = "0x15D3450", Offset = "0x15D3450", VA = "0x15D3450")]
			set
			{
			}
		}

		[Token(Token = "0x170003DC")]
		public SpectrumResolver SpectrumResolver
		{
			[Token(Token = "0x6001B3A")]
			[Address(RVA = "0x15D057C", Offset = "0x15D057C", VA = "0x15D057C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DD")]
		public WavesRendererFFT WaterWavesFFT
		{
			[Token(Token = "0x6001B3B")]
			[Address(RVA = "0x15D3590", Offset = "0x15D3590", VA = "0x15D3590")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DE")]
		public WavesRendererGerstner WaterWavesGerstner
		{
			[Token(Token = "0x6001B3C")]
			[Address(RVA = "0x15D3598", Offset = "0x15D3598", VA = "0x15D3598")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DF")]
		public DynamicSmoothness DynamicSmoothness
		{
			[Token(Token = "0x6001B3D")]
			[Address(RVA = "0x15D35A0", Offset = "0x15D35A0", VA = "0x15D35A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E0")]
		public WaveSpectrumRenderMode FinalRenderMode
		{
			[Token(Token = "0x6001B3E")]
			[Address(RVA = "0x15D35A8", Offset = "0x15D35A8", VA = "0x15D35A8")]
			get
			{
				return default(WaveSpectrumRenderMode);
			}
		}

		[Token(Token = "0x170003E1")]
		public Vector4 TileSizes
		{
			[Token(Token = "0x6001B3F")]
			[Address(RVA = "0x15D35B0", Offset = "0x15D35B0", VA = "0x15D35B0")]
			get
			{
				return default(Vector4);
			}
		}

		[Token(Token = "0x170003E2")]
		public Vector4 TileSizesInv
		{
			[Token(Token = "0x6001B40")]
			[Address(RVA = "0x15D35BC", Offset = "0x15D35BC", VA = "0x15D35BC")]
			get
			{
				return default(Vector4);
			}
		}

		[Token(Token = "0x170003E3")]
		public Vector4 UnscaledTileSizes
		{
			[Token(Token = "0x6001B41")]
			[Address(RVA = "0x15D35C8", Offset = "0x15D35C8", VA = "0x15D35C8")]
			get
			{
				return default(Vector4);
			}
		}

		[Token(Token = "0x170003E4")]
		public Vector2 WindSpeed
		{
			[Token(Token = "0x6001B42")]
			[Address(RVA = "0x15D35D4", Offset = "0x15D35D4", VA = "0x15D35D4")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170003E5")]
		public bool WindSpeedChanged
		{
			[Token(Token = "0x6001B43")]
			[Address(RVA = "0x15D35DC", Offset = "0x15D35DC", VA = "0x15D35DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003E6")]
		public Vector2 WindDirection
		{
			[Token(Token = "0x6001B44")]
			[Address(RVA = "0x15D35E4", Offset = "0x15D35E4", VA = "0x15D35E4")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170003E7")]
		public Transform WindDirectionPointer
		{
			[Token(Token = "0x6001B45")]
			[Address(RVA = "0x15D35EC", Offset = "0x15D35EC", VA = "0x15D35EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E8")]
		public WindWavesEvent WindDirectionChanged
		{
			[Token(Token = "0x6001B46")]
			[Address(RVA = "0x15D360C", Offset = "0x15D360C", VA = "0x15D360C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E9")]
		public WindWavesEvent ResolutionChanged
		{
			[Token(Token = "0x6001B47")]
			[Address(RVA = "0x15D362C", Offset = "0x15D362C", VA = "0x15D362C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003EA")]
		public int Resolution
		{
			[Token(Token = "0x6001B48")]
			[Address(RVA = "0x15D36AC", Offset = "0x15D36AC", VA = "0x15D36AC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001B49")]
			[Address(RVA = "0x15D36CC", Offset = "0x15D36CC", VA = "0x15D36CC")]
			set
			{
			}
		}

		[Token(Token = "0x170003EB")]
		public int FinalResolution
		{
			[Token(Token = "0x6001B4A")]
			[Address(RVA = "0x15D3740", Offset = "0x15D3740", VA = "0x15D3740")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003EC")]
		public bool FinalHighPrecision
		{
			[Token(Token = "0x6001B4B")]
			[Address(RVA = "0x15D3748", Offset = "0x15D3748", VA = "0x15D3748")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003ED")]
		public bool HighPrecision
		{
			[Token(Token = "0x6001B4C")]
			[Address(RVA = "0x15D3750", Offset = "0x15D3750", VA = "0x15D3750")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003EE")]
		public float CpuDesiredStandardError
		{
			[Token(Token = "0x6001B4D")]
			[Address(RVA = "0x15D3770", Offset = "0x15D3770", VA = "0x15D3770")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003EF")]
		public float LoopDuration
		{
			[Token(Token = "0x6001B4E")]
			[Address(RVA = "0x15D3790", Offset = "0x15D3790", VA = "0x15D3790")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003F0")]
		public Vector4 TileSizeScales
		{
			[Token(Token = "0x6001B4F")]
			[Address(RVA = "0x15D37B0", Offset = "0x15D37B0", VA = "0x15D37B0")]
			get
			{
				return default(Vector4);
			}
		}

		[Token(Token = "0x170003F1")]
		public float MaxVerticalDisplacement
		{
			[Token(Token = "0x6001B50")]
			[Address(RVA = "0x15D37BC", Offset = "0x15D37BC", VA = "0x15D37BC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003F2")]
		public float MaxHorizontalDisplacement
		{
			[Token(Token = "0x6001B51")]
			[Address(RVA = "0x15D37DC", Offset = "0x15D37DC", VA = "0x15D37DC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003F3")]
		public float SpectrumDirectionality
		{
			[Token(Token = "0x6001B52")]
			[Address(RVA = "0x15D37FC", Offset = "0x15D37FC", VA = "0x15D37FC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0x15D24F0", Offset = "0x15D24F0", VA = "0x15D24F0")]
		public WindWaves(Water water, Data data)
		{
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0x15D32E0", Offset = "0x15D32E0", VA = "0x15D32E0")]
		internal void Enable()
		{
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0x15D33F4", Offset = "0x15D33F4", VA = "0x15D33F4")]
		internal void Disable()
		{
		}

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0x15D2920", Offset = "0x15D2920", VA = "0x15D2920")]
		internal void Validate()
		{
		}

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0x15D394C", Offset = "0x15D394C", VA = "0x15D394C")]
		internal void Update()
		{
		}

		[Token(Token = "0x6001B55")]
		[Address(RVA = "0x15D2D1C", Offset = "0x15D2D1C", VA = "0x15D2D1C")]
		internal void ResolveFinalSettings(WaterQualityLevel quality)
		{
		}

		[Token(Token = "0x6001B56")]
		[Address(RVA = "0x15D3804", Offset = "0x15D3804", VA = "0x15D3804")]
		private void UpdateShaderParams()
		{
		}

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0x15D3120", Offset = "0x15D3120", VA = "0x15D3120")]
		private void OnProfilesChanged(Water water)
		{
		}

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0x15D39D0", Offset = "0x15D39D0", VA = "0x15D39D0")]
		internal void Destroy()
		{
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0x15D3340", Offset = "0x15D3340", VA = "0x15D3340")]
		private void UpdateWind()
		{
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0x15D2BB8", Offset = "0x15D2BB8", VA = "0x15D2BB8")]
		private void CreateObjects()
		{
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0x15D285C", Offset = "0x15D285C", VA = "0x15D285C")]
		private void CheckSupport()
		{
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0x15D3A2C", Offset = "0x15D3A2C", VA = "0x15D3A2C")]
		internal void OnWaterRender(Camera camera)
		{
		}

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0x15D3A9C", Offset = "0x15D3A9C", VA = "0x15D3A9C")]
		public Vector3 GetDisplacementAt(float x, float z, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0x15D3ABC", Offset = "0x15D3ABC", VA = "0x15D3ABC")]
		public Vector2 GetHorizontalDisplacementAt(float x, float z, float time)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0x15D3ADC", Offset = "0x15D3ADC", VA = "0x15D3ADC")]
		public float GetHeightAt(float x, float z, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0x15D3AFC", Offset = "0x15D3AFC", VA = "0x15D3AFC")]
		public Vector4 GetForceAndHeightAt(float x, float z, float time)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0x15D3B1C", Offset = "0x15D3B1C", VA = "0x15D3B1C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x58CADC", Offset = "0x58CADC")]
		public Vector3 GetDisplacementAt(float x, float z, float spectrumStart, float spectrumEnd, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0x15D3B40", Offset = "0x15D3B40", VA = "0x15D3B40")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x58CB14", Offset = "0x58CB14")]
		public Vector2 GetHorizontalDisplacementAt(float x, float z, float spectrumStart, float spectrumEnd, float time)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0x15D3B64", Offset = "0x15D3B64", VA = "0x15D3B64")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x58CB4C", Offset = "0x58CB4C")]
		public float GetHeightAt(float x, float z, float spectrumStart, float spectrumEnd, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0x15D3B88", Offset = "0x15D3B88", VA = "0x15D3B88")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x58CB84", Offset = "0x58CB84")]
		public Vector4 GetForceAndHeightAt(float x, float z, float spectrumStart, float spectrumEnd, float time)
		{
			return default(Vector4);
		}
	}
	[Token(Token = "0x2000476")]
	public enum WaveSpectrumRenderMode
	{
		[Token(Token = "0x4002414")]
		FullFFT,
		[Token(Token = "0x4002415")]
		GerstnerAndFFTNormals,
		[Token(Token = "0x4002416")]
		Gerstner
	}
}
namespace PlayWay.Water.Extensions
{
	[Serializable]
	[Token(Token = "0x2000477")]
	public sealed class NeuralNetwork : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000478")]
		public sealed class NeuralLayer
		{
			[Token(Token = "0x400241F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int NeuronCount;

			[Token(Token = "0x4002420")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float[] Weights;

			[NonSerialized]
			[Token(Token = "0x4002421")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float[] AccumulatedDeltas;

			[NonSerialized]
			[Token(Token = "0x4002422")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float[] Deltas;

			[Token(Token = "0x170003F8")]
			public int InputsCount
			{
				[Token(Token = "0x6001B80")]
				[Address(RVA = "0x157B9E0", Offset = "0x157B9E0", VA = "0x157B9E0")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6001B7E")]
			[Address(RVA = "0x157B8DC", Offset = "0x157B8DC", VA = "0x157B8DC")]
			public NeuralLayer()
			{
			}

			[Token(Token = "0x6001B7F")]
			[Address(RVA = "0x157B8E4", Offset = "0x157B8E4", VA = "0x157B8E4")]
			public NeuralLayer(int previousLayerSize, int neuronCount)
			{
			}
		}

		[Token(Token = "0x4002417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NeuralLayer[] layers;

		[Token(Token = "0x4002418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float trainedRMSError;

		[Token(Token = "0x4002419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int trainedSettingsHash;

		[NonSerialized]
		[Token(Token = "0x400241A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool preparedForTraining;

		[Token(Token = "0x400241B")]
		private const int maxLayerCount = 3;

		[Token(Token = "0x400241C")]
		private const int maxLayerSize = 256;

		[Token(Token = "0x400241D")]
		private const float momentum = 0.9f;

		[Token(Token = "0x400241E")]
		[ThreadStatic]
		private static float[][] Buffers;

		[Token(Token = "0x170003F4")]
		public int InputsCount
		{
			[Token(Token = "0x6001B71")]
			[Address(RVA = "0x15B3350", Offset = "0x15B3350", VA = "0x15B3350")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003F5")]
		public int OutputsCount
		{
			[Token(Token = "0x6001B72")]
			[Address(RVA = "0x15B338C", Offset = "0x15B338C", VA = "0x15B338C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003F6")]
		public int TrainedSettingsHash
		{
			[Token(Token = "0x6001B73")]
			[Address(RVA = "0x15B33D4", Offset = "0x15B33D4", VA = "0x15B33D4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001B74")]
			[Address(RVA = "0x15B33DC", Offset = "0x15B33DC", VA = "0x15B33DC")]
			set
			{
			}
		}

		[Token(Token = "0x170003F7")]
		public float TrainedRMSError
		{
			[Token(Token = "0x6001B75")]
			[Address(RVA = "0x15B33E4", Offset = "0x15B33E4", VA = "0x15B33E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B76")]
			[Address(RVA = "0x15B33EC", Offset = "0x15B33EC", VA = "0x15B33EC")]
			set
			{
			}
		}

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0x15B1DB4", Offset = "0x15B1DB4", VA = "0x15B1DB4")]
		public void Setup(NeuralNetwork copy)
		{
		}

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0x15B1F84", Offset = "0x15B1F84", VA = "0x15B1F84")]
		public void Setup(int inputsSize, int outputsSize)
		{
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0x15B207C", Offset = "0x15B207C", VA = "0x15B207C")]
		public void Setup(int inputsSize, int hiddenLayerSize, int outputsSize)
		{
		}

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0x15B21D0", Offset = "0x15B21D0", VA = "0x15B21D0")]
		public void Setup(int inputsSize, int hiddenLayerSize, int hiddenLayerSize2, int outputsSize)
		{
		}

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0x15B2378", Offset = "0x15B2378", VA = "0x15B2378")]
		public void Setup(int inputsSize, int hiddenLayerSize, int hiddenLayerSize2, int hiddenLayerSize3, int outputsSize)
		{
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0x15B257C", Offset = "0x15B257C", VA = "0x15B257C")]
		public float[] Compute(float[] inputs)
		{
			return null;
		}

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0x15B2834", Offset = "0x15B2834", VA = "0x15B2834")]
		public void Train(float learningRate, float[] inputs, float[] outputs)
		{
		}

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0x15B2E98", Offset = "0x15B2E98", VA = "0x15B2E98")]
		public float ComputeTotalError(float[] outputs)
		{
			return default(float);
		}

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0x15B2F94", Offset = "0x15B2F94", VA = "0x15B2F94")]
		public void PrepareThread()
		{
		}

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0x15B30F0", Offset = "0x15B30F0", VA = "0x15B30F0")]
		public void Copy(NeuralNetwork copy)
		{
		}

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0x15B33F4", Offset = "0x15B33F4", VA = "0x15B33F4")]
		public int GetLayerNeuronCount(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0x15B2A44", Offset = "0x15B2A44", VA = "0x15B2A44")]
		private void PrepareForTraining()
		{
		}

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0x15B26B4", Offset = "0x15B26B4", VA = "0x15B26B4")]
		private static void ComputeSigmoidLayer(float[] inputs, int inputsCount, float[] outputs, NeuralLayer outputLayer)
		{
		}

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0x15B2B44", Offset = "0x15B2B44", VA = "0x15B2B44")]
		private static void ComputeDeltas(float[] outputs, float[] correctOutputs, NeuralLayer layer)
		{
		}

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0x15B2BE8", Offset = "0x15B2BE8", VA = "0x15B2BE8")]
		private static void PropagateDeltas(float[] values, NeuralLayer layer, NeuralLayer outputLayer)
		{
		}

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0x15B2D70", Offset = "0x15B2D70", VA = "0x15B2D70")]
		private static void Train(float learningRate, float[] inputValues, int previousLayerSize, NeuralLayer layer)
		{
		}

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0x15B3438", Offset = "0x15B3438", VA = "0x15B3438")]
		public NeuralNetwork()
		{
		}
	}
	[Token(Token = "0x2000479")]
	public class NeuralNetworkTrainer
	{
		[Token(Token = "0x200047A")]
		public class TrainingData
		{
			[Token(Token = "0x4002429")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float[] Inputs;

			[Token(Token = "0x400242A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float[] Outputs;

			[Token(Token = "0x6001B86")]
			[Address(RVA = "0x157BA74", Offset = "0x157BA74", VA = "0x157BA74")]
			public TrainingData(NeuralNetwork neuralNetwork)
			{
			}
		}

		[Token(Token = "0x4002423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Action<TrainingData, System.Random> generateTrainingData;

		[Token(Token = "0x4002424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int trainingSteps;

		[Token(Token = "0x4002425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float learningRate;

		[Token(Token = "0x4002426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Thread[] threads;

		[Token(Token = "0x4002427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float totalError;

		[Token(Token = "0x4002428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected readonly NeuralNetwork NeuralNetwork;

		[Token(Token = "0x170003F9")]
		public bool Running
		{
			[Token(Token = "0x6001B83")]
			[Address(RVA = "0x1639B6C", Offset = "0x1639B6C", VA = "0x1639B6C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003FA")]
		public float TotalError
		{
			[Token(Token = "0x6001B84")]
			[Address(RVA = "0x1639BE8", Offset = "0x1639BE8", VA = "0x1639BE8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0x16375D8", Offset = "0x16375D8", VA = "0x16375D8")]
		public NeuralNetworkTrainer(NeuralNetwork network)
		{
		}

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0x1637E00", Offset = "0x1637E00", VA = "0x1637E00")]
		public void Train(int threadCount, float learningRate, int trainingSteps, Action<TrainingData, System.Random> generateTrainingData)
		{
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0x1639824", Offset = "0x1639824", VA = "0x1639824")]
		private void TrainingThread(object seed)
		{
		}
	}
	[Token(Token = "0x200047B")]
	public sealed class NeuralNetworkPhysics : MonoBehaviour
	{
		[Token(Token = "0x200047C")]
		public class Voxel
		{
			[Token(Token = "0x4002447")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 center;

			[Token(Token = "0x4002448")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 worldSpacePos;

			[Token(Token = "0x4002449")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public WaterSample sampler;

			[Token(Token = "0x400244A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 waterPosition;

			[Token(Token = "0x400244B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector3 waveForces;

			[Token(Token = "0x6001B99")]
			[Address(RVA = "0x157BA0C", Offset = "0x157BA0C", VA = "0x157BA0C")]
			public Voxel()
			{
			}
		}

		[Token(Token = "0x200047D")]
		public enum CollidersMode
		{
			[Token(Token = "0x400244D")]
			UseRigidbodyColliders,
			[Token(Token = "0x400244E")]
			UseRigidbodyTriggers,
			[Token(Token = "0x400244F")]
			List
		}

		[Token(Token = "0x400242B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float buoyancyIntensity;

		[Token(Token = "0x400242C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float dragCoefficient;

		[Token(Token = "0x400242D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float frontDragCoefficient;

		[Token(Token = "0x400242E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float backDragCoefficient;

		[Token(Token = "0x400242F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float angularDragCoefficient;

		[Token(Token = "0x4002430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float waveForcesIntensity;

		[Token(Token = "0x4002431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x585958", Offset = "0x585958")]
		[SerializeField]
		private float bounceSuppression;

		[Token(Token = "0x4002432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x585998", Offset = "0x585998")]
		[SerializeField]
		private float samplersPrecision;

		[Token(Token = "0x4002433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private int voxelsX;

		[Token(Token = "0x4002434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private int voxelsY;

		[Token(Token = "0x4002435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private int voxelsZ;

		[Token(Token = "0x4002436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x585A08", Offset = "0x585A08")]
		[SerializeField]
		private float margin;

		[Token(Token = "0x4002437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Water water;

		[Token(Token = "0x4002438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private NeuralNetwork neuralNetwork;

		[Token(Token = "0x4002439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private CollidersMode collidersMode;

		[Token(Token = "0x400243A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private MeshCollider[] colliders;

		[Token(Token = "0x400243B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float area;

		[Token(Token = "0x400243C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float volume;

		[Token(Token = "0x400243D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Rigidbody rigidBody;

		[Token(Token = "0x400243E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float[] volumeNNInputs;

		[Token(Token = "0x400243F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 buoyancyPart;

		[Token(Token = "0x4002440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private MeshCollider[] usedColliders;

		[Token(Token = "0x4002441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float dragPart;

		[Token(Token = "0x4002442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float angularDragPart;

		[Token(Token = "0x4002443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float wavesPart;

		[Token(Token = "0x4002444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Voxel[] voxels;

		[Token(Token = "0x4002445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 min;

		[Token(Token = "0x4002446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 size;

		[Token(Token = "0x170003FB")]
		public int VoxelsX
		{
			[Token(Token = "0x6001B8A")]
			[Address(RVA = "0x1635058", Offset = "0x1635058", VA = "0x1635058")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003FC")]
		public int VoxelsY
		{
			[Token(Token = "0x6001B8B")]
			[Address(RVA = "0x1635060", Offset = "0x1635060", VA = "0x1635060")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003FD")]
		public int VoxelsZ
		{
			[Token(Token = "0x6001B8C")]
			[Address(RVA = "0x1635068", Offset = "0x1635068", VA = "0x1635068")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003FE")]
		public NeuralNetwork NeuralNetwork
		{
			[Token(Token = "0x6001B8D")]
			[Address(RVA = "0x1635070", Offset = "0x1635070", VA = "0x1635070")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0x16347E4", Offset = "0x16347E4", VA = "0x16347E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0x163485C", Offset = "0x163485C", VA = "0x163485C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0x1634FC8", Offset = "0x1634FC8", VA = "0x1634FC8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0x1635078", Offset = "0x1635078", VA = "0x1635078")]
		public float GetTotalBuoyancy(float fluidDensity = 999.8f)
		{
			return default(float);
		}

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0x16350FC", Offset = "0x16350FC", VA = "0x16350FC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001B90")]
		[Address(RVA = "0x1635A98", Offset = "0x1635A98", VA = "0x1635A98")]
		private Bounds ComputeBounds()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0x1634C68", Offset = "0x1634C68", VA = "0x1634C68")]
		private void CreateVoxels()
		{
		}

		[Token(Token = "0x6001B92")]
		[Address(RVA = "0x1634FCC", Offset = "0x1634FCC", VA = "0x1634FCC")]
		private void DisposeVoxels()
		{
		}

		[Token(Token = "0x6001B93")]
		[Address(RVA = "0x1635EE0", Offset = "0x1635EE0", VA = "0x1635EE0")]
		public void TrainNeuralNetwork(int steps1, float startLearnFactor = 0.01f, float endLearnFactor = 4E-06f, bool resetNetwork = true)
		{
		}

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0x1635D7C", Offset = "0x1635D7C", VA = "0x1635D7C")]
		private static Bounds TransformBounds(Matrix4x4 matrix, Bounds bounds)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0x16374CC", Offset = "0x16374CC", VA = "0x16374CC")]
		private bool ValidateForEditor()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0x1634888", Offset = "0x1634888", VA = "0x1634888")]
		private void CollectColliders()
		{
		}

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0x1634BA0", Offset = "0x1634BA0", VA = "0x1634BA0")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0x16375AC", Offset = "0x16375AC", VA = "0x16375AC")]
		public NeuralNetworkPhysics()
		{
		}
	}
	[Token(Token = "0x200047E")]
	public class NeuralNetworkPhysicsTrainer : NeuralNetworkTrainer
	{
		[Token(Token = "0x200047F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5798BC", Offset = "0x5798BC")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x400245B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NeuralNetworkPhysicsTrainer <>4__this;

			[Token(Token = "0x400245C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3[] pointsPerVoxel;

			[Token(Token = "0x400245D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3[] vertices;

			[Token(Token = "0x400245E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int[] indices;

			[Token(Token = "0x400245F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float totalMeshArea;

			[Token(Token = "0x4002460")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 centerOfMass;

			[Token(Token = "0x4002461")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Action<TrainingData, System.Random> <>9__0;

			[Token(Token = "0x6001BA5")]
			[Address(RVA = "0x157BA14", Offset = "0x157BA14", VA = "0x157BA14")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6001BA6")]
			[Address(RVA = "0x157BA1C", Offset = "0x157BA1C", VA = "0x157BA1C")]
			internal void <Train>b__0(TrainingData trainingData, System.Random random)
			{
			}
		}

		[Token(Token = "0x4002450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform transform;

		[Token(Token = "0x4002451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MeshCollider[] colliders;

		[Token(Token = "0x4002452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int voxelsX;

		[Token(Token = "0x4002453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int voxelsY;

		[Token(Token = "0x4002454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int voxelsZ;

		[Token(Token = "0x4002455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public NeuralNetworkPhysics.Voxel[] voxels;

		[Token(Token = "0x4002456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Rigidbody rigidBody;

		[Token(Token = "0x4002457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Vector3 min;

		[Token(Token = "0x4002458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Vector3 size;

		[Token(Token = "0x4002459")]
		[ThreadStatic]
		private static Vector2[] mappedVertices;

		[Token(Token = "0x400245A")]
		[ThreadStatic]
		private static float[] waterElevations;

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0x1636130", Offset = "0x1636130", VA = "0x1636130")]
		public NeuralNetworkPhysicsTrainer(NeuralNetwork network)
		{
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0x1636164", Offset = "0x1636164", VA = "0x1636164")]
		public float Train(int steps1, float startLearnFactor, float endLearnFactor, [Out] float area, [Out] float volume)
		{
			return default(float);
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0x163760C", Offset = "0x163760C", VA = "0x163760C")]
		private void RetrieveMeshData([Out] Vector3[] vertices, [Out] int[] indices, [Out] float totalMeshArea)
		{
		}

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0x16380A4", Offset = "0x16380A4", VA = "0x16380A4")]
		private void TrainPerlinWaterSurface(TrainingData trainingData, System.Random random, Vector3[] buoyancySamples, Vector3[] vertices, int[] indices, float totalMeshArea, Vector3 centerOfMass, Vector3 min, Vector3 size)
		{
		}

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0x1638840", Offset = "0x1638840", VA = "0x1638840")]
		private static Vector3 RandomOnUnitSphere(System.Random random)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0x1638940", Offset = "0x1638940", VA = "0x1638940")]
		private static float ComputePerlinVoxelFrac(Vector3[] points, Matrix4x4 objectSpaceToWaterSurface, Vector3 centerOfMass, Vector3 min, Vector3 size, float seed, float frequency, float amplitude, [Out] Vector3 centerOfBuoyancy)
		{
			return default(float);
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0x1638B00", Offset = "0x1638B00", VA = "0x1638B00")]
		private static float ComputePerlinDragArea(Vector3[] vertices, int[] indices, Vector3 directionOfMotion, Vector3 directionOfRotation, Vector3 waterSurfaceNormal, float waterSurfaceOffset, Vector3 centerOfMass, Vector3 xAxis, Vector3 yAxis, Matrix4x4 objectSpaceToWaterSurface, Vector3 min, Vector3 size, float totalMeshArea, float seed, float frequency, float amplitude, [Out] Vector3 dragCenter, [Out] Vector3 angularDragCenter)
		{
			return default(float);
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0x16397D4", Offset = "0x16397D4", VA = "0x16397D4")]
		private static bool GetEdgeIntersection(Vector3 p1, Vector3 p2, float d1, float d2, Vector3 intersectionPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0x1639460", Offset = "0x1639460", VA = "0x1639460")]
		private static float GetFractionOfTriangleBelowPlane(Vector3 a, Vector3 b, Vector3 c, Vector3 planeNormal, float planeOffset)
		{
			return default(float);
		}

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0x1637AC4", Offset = "0x1637AC4", VA = "0x1637AC4")]
		private static Vector3 Div(Vector3 a, Vector3 b)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0x1637AD4", Offset = "0x1637AD4", VA = "0x1637AD4")]
		private Vector3[] PrecomputeVolumePoints(int countX, int countY, int countZ)
		{
			return null;
		}
	}
}
namespace PlayWay.Water.Internal
{
	[Token(Token = "0x2000480")]
	public static class GraphicsUtilities
	{
		[Token(Token = "0x4002462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CommandBuffer commandBuffer;

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0x7F82BC", Offset = "0x7F82BC", VA = "0x7F82BC")]
		public static void Blit(Texture source, RenderTexture target, Material material, int shaderPass, MaterialPropertyBlock properties)
		{
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0x7F8534", Offset = "0x7F8534", VA = "0x7F8534")]
		private static void CreateCommandBuffer()
		{
		}
	}
	[Token(Token = "0x2000481")]
	public class Quads
	{
		[Token(Token = "0x4002463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Mesh bipolarXY;

		[Token(Token = "0x4002464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Mesh bipolarXInversedY;

		[Token(Token = "0x4002465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Mesh bipolarXZ;

		[Token(Token = "0x4002466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static bool initialized;

		[Token(Token = "0x170003FF")]
		public static Mesh BipolarXY
		{
			[Token(Token = "0x6001BA9")]
			[Address(RVA = "0x1558658", Offset = "0x1558658", VA = "0x1558658")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000400")]
		public static Mesh BipolarXInversedY
		{
			[Token(Token = "0x6001BAB")]
			[Address(RVA = "0x15587F8", Offset = "0x15587F8", VA = "0x15587F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000401")]
		public static Mesh BipolarXZ
		{
			[Token(Token = "0x6001BAC")]
			[Address(RVA = "0x155889C", Offset = "0x155889C", VA = "0x155889C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0x15587F0", Offset = "0x15587F0", VA = "0x15587F0")]
		public static Mesh BipolarXYZ()
		{
			return null;
		}

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0x15586FC", Offset = "0x15586FC", VA = "0x15586FC")]
		private static void CreateMeshes()
		{
		}

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0x1558940", Offset = "0x1558940", VA = "0x1558940")]
		private static Mesh CreateBipolarXY(bool inversedY)
		{
			return null;
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0x1558B50", Offset = "0x1558B50", VA = "0x1558B50")]
		private static Mesh CreateBipolarXZ()
		{
			return null;
		}

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0x1558D6C", Offset = "0x1558D6C", VA = "0x1558D6C")]
		public Quads()
		{
		}
	}
	[Token(Token = "0x2000482")]
	public class UtilityShaderVariants
	{
		[Token(Token = "0x4002467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<int, Material> materials;

		[Token(Token = "0x4002468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UtilityShaderVariants instance;

		[Token(Token = "0x17000402")]
		public static UtilityShaderVariants Instance
		{
			[Token(Token = "0x6001BB2")]
			[Address(RVA = "0x15B9EB4", Offset = "0x15B9EB4", VA = "0x15B9EB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0x15B9F28", Offset = "0x15B9F28", VA = "0x15B9F28")]
		private UtilityShaderVariants()
		{
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0x15B9FB4", Offset = "0x15B9FB4", VA = "0x15B9FB4")]
		public Material GetVariant(Shader shader, string keywords)
		{
			return null;
		}
	}
	[Token(Token = "0x2000483")]
	public static class DefaultTextures
	{
		[Token(Token = "0x4002469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Texture2D blackTexture;

		[Token(Token = "0x400246A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Texture2D whiteTexture;

		[Token(Token = "0x400246B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool texturesCreated;

		[Token(Token = "0x17000403")]
		public static Texture2D BlackTexture
		{
			[Token(Token = "0x6001BB5")]
			[Address(RVA = "0x7CB298", Offset = "0x7CB298", VA = "0x7CB298")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000404")]
		public static Texture2D WhiteTexture
		{
			[Token(Token = "0x6001BB6")]
			[Address(RVA = "0x7CB60C", Offset = "0x7CB60C", VA = "0x7CB60C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0x7CB2F8", Offset = "0x7CB2F8", VA = "0x7CB2F8")]
		private static void CreateTextures()
		{
		}
	}
}
namespace PlayWay.WaterSamples
{
	[Token(Token = "0x2000484")]
	public class AdditiveVolumesSample : MonoBehaviour
	{
		[Token(Token = "0x400246C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform water;

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0x7E16A8", Offset = "0x7E16A8", VA = "0x7E16A8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0x7E1700", Offset = "0x7E1700", VA = "0x7E1700")]
		public AdditiveVolumesSample()
		{
		}
	}
}
namespace ControllerSelection
{
	[Token(Token = "0x2000485")]
	public class OVRInputHelpers
	{
		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0x16C7A94", Offset = "0x16C7A94", VA = "0x16C7A94")]
		public static Ray GetSelectionRay(OVRInput.Controller activeController, Transform trackingSpace)
		{
			return default(Ray);
		}

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0x16C7EAC", Offset = "0x16C7EAC", VA = "0x16C7EAC")]
		public static Transform FindTrackingSpace()
		{
			return null;
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0x16C825C", Offset = "0x16C825C", VA = "0x16C825C")]
		public static OVRInput.Controller GetControllerForButton(OVRInput.Button joyPadClickButton, OVRInput.Controller oldController)
		{
			return default(OVRInput.Controller);
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0x16C838C", Offset = "0x16C838C", VA = "0x16C838C")]
		public OVRInputHelpers()
		{
		}
	}
	[Token(Token = "0x2000486")]
	public class OVRInputModule : PointerInputModule
	{
		[Token(Token = "0x2000487")]
		public delegate void RayHitDelegate(Vector3 hitPosition, Vector3 hitNormal);

		[Token(Token = "0x2000488")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5798CC", Offset = "0x5798CC")]
		public enum InputMode
		{
			[Token(Token = "0x4002488")]
			Mouse,
			[Token(Token = "0x4002489")]
			Buttons
		}

		[Token(Token = "0x400246D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x585AD8", Offset = "0x585AD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585AD8", Offset = "0x585AD8")]
		public Transform trackingSpace;

		[Token(Token = "0x400246E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x585B38", Offset = "0x585B38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585B38", Offset = "0x585B38")]
		public OVRInput.Button joyPadClickButton;

		[Token(Token = "0x400246F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x585B98", Offset = "0x585B98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585B98", Offset = "0x585B98")]
		public bool performSphereCastForGazepointer;

		[Token(Token = "0x4002470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585BF8", Offset = "0x585BF8")]
		public bool matchNormalOnPhysicsColliders;

		[Token(Token = "0x4002471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x585C30", Offset = "0x585C30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585C30", Offset = "0x585C30")]
		public bool useLeftStickScroll;

		[Token(Token = "0x4002472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585C90", Offset = "0x585C90")]
		public float leftStickDeadZone;

		[Token(Token = "0x4002473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x585CC8", Offset = "0x585CC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585CC8", Offset = "0x585CC8")]
		public bool useSwipeScroll;

		[Token(Token = "0x4002474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585D28", Offset = "0x585D28")]
		public float minSwipeMovement;

		[Token(Token = "0x4002475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585D60", Offset = "0x585D60")]
		public float swipeScrollScale;

		[Token(Token = "0x4002476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public OVRInput.Controller activeController;

		[Token(Token = "0x4002477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public RayHitDelegate OnSelectionRayHit;

		[Token(Token = "0x4002478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector2 swipeStartPos;

		[Token(Token = "0x4002479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2 unusedSwipe;

		[NonSerialized]
		[Token(Token = "0x400247A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public OVRRaycaster activeGraphicRaycaster;

		[Token(Token = "0x400247B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x585DA8", Offset = "0x585DA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585DA8", Offset = "0x585DA8")]
		public float angleDragThreshold;

		[Token(Token = "0x400247C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float m_NextAction;

		[Token(Token = "0x400247D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector2 m_LastMousePosition;

		[Token(Token = "0x400247E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector2 m_MousePosition;

		[Token(Token = "0x400247F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x585E08", Offset = "0x585E08")]
		[SerializeField]
		private string m_HorizontalAxis;

		[Token(Token = "0x4002480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private string m_VerticalAxis;

		[Token(Token = "0x4002481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private string m_SubmitButton;

		[Token(Token = "0x4002482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private string m_CancelButton;

		[Token(Token = "0x4002483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private float m_InputActionsPerSecond;

		[Token(Token = "0x4002484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private bool m_AllowActivationOnMobileDevice;

		[Token(Token = "0x4002485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected Dictionary<int, OVRRayPointerEventData> m_VRRayPointerData;

		[Token(Token = "0x4002486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private readonly MouseState m_MouseState;

		[Token(Token = "0x17000405")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x58D914", Offset = "0x58D914")]
		public InputMode inputMode
		{
			[Token(Token = "0x6001BC4")]
			[Address(RVA = "0x16C88D0", Offset = "0x16C88D0", VA = "0x16C88D0")]
			get
			{
				return default(InputMode);
			}
		}

		[Token(Token = "0x17000406")]
		public bool allowActivationOnMobileDevice
		{
			[Token(Token = "0x6001BC5")]
			[Address(RVA = "0x16C88D8", Offset = "0x16C88D8", VA = "0x16C88D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001BC6")]
			[Address(RVA = "0x16C88E0", Offset = "0x16C88E0", VA = "0x16C88E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000407")]
		public float inputActionsPerSecond
		{
			[Token(Token = "0x6001BC7")]
			[Address(RVA = "0x16C88EC", Offset = "0x16C88EC", VA = "0x16C88EC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001BC8")]
			[Address(RVA = "0x16C88F4", Offset = "0x16C88F4", VA = "0x16C88F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000408")]
		public string horizontalAxis
		{
			[Token(Token = "0x6001BC9")]
			[Address(RVA = "0x16C88FC", Offset = "0x16C88FC", VA = "0x16C88FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BCA")]
			[Address(RVA = "0x16C8904", Offset = "0x16C8904", VA = "0x16C8904")]
			set
			{
			}
		}

		[Token(Token = "0x17000409")]
		public string verticalAxis
		{
			[Token(Token = "0x6001BCB")]
			[Address(RVA = "0x16C890C", Offset = "0x16C890C", VA = "0x16C890C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BCC")]
			[Address(RVA = "0x16C8914", Offset = "0x16C8914", VA = "0x16C8914")]
			set
			{
			}
		}

		[Token(Token = "0x1700040A")]
		public string submitButton
		{
			[Token(Token = "0x6001BCD")]
			[Address(RVA = "0x16C891C", Offset = "0x16C891C", VA = "0x16C891C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BCE")]
			[Address(RVA = "0x16C8924", Offset = "0x16C8924", VA = "0x16C8924")]
			set
			{
			}
		}

		[Token(Token = "0x1700040B")]
		public string cancelButton
		{
			[Token(Token = "0x6001BCF")]
			[Address(RVA = "0x16C892C", Offset = "0x16C892C", VA = "0x16C892C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BD0")]
			[Address(RVA = "0x16C8934", Offset = "0x16C8934", VA = "0x16C8934")]
			set
			{
			}
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0x16C8394", Offset = "0x16C8394", VA = "0x16C8394", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0x16C8488", Offset = "0x16C8488", VA = "0x16C8488", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0x16C8560", Offset = "0x16C8560", VA = "0x16C8560", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0x16C8638", Offset = "0x16C8638", VA = "0x16C8638")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0x16C8720", Offset = "0x16C8720", VA = "0x16C8720")]
		protected OVRInputModule()
		{
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0x16C88C4", Offset = "0x16C88C4", VA = "0x16C88C4")]
		protected void Reset()
		{
		}

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0x16C893C", Offset = "0x16C893C", VA = "0x16C893C", Slot = "24")]
		public override void UpdateModule()
		{
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0x16C897C", Offset = "0x16C897C", VA = "0x16C897C", Slot = "25")]
		public override bool IsModuleSupported()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0x16C8994", Offset = "0x16C8994", VA = "0x16C8994", Slot = "21")]
		public override bool ShouldActivateModule()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0x16C8A9C", Offset = "0x16C8A9C", VA = "0x16C8A9C", Slot = "23")]
		public override void ActivateModule()
		{
		}

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0x16C8B7C", Offset = "0x16C8B7C", VA = "0x16C8B7C", Slot = "22")]
		public override void DeactivateModule()
		{
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0x16C8E80", Offset = "0x16C8E80", VA = "0x16C8E80")]
		private bool SendSubmitEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0x16C90A0", Offset = "0x16C90A0", VA = "0x16C90A0")]
		private bool AllowMoveEventProcessing(float time)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0x16C9100", Offset = "0x16C9100", VA = "0x16C9100")]
		private Vector2 GetRawMoveVector()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0x16C91A4", Offset = "0x16C91A4", VA = "0x16C91A4")]
		private bool SendMoveEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0x16C9360", Offset = "0x16C9360", VA = "0x16C9360")]
		private bool SendUpdateEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0x16C94C4", Offset = "0x16C94C4", VA = "0x16C94C4")]
		private void ProcessMousePress(MouseButtonEventData data)
		{
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0x16C9BD4", Offset = "0x16C9BD4", VA = "0x16C9BD4")]
		private void ProcessMouseEvent(MouseState mouseData)
		{
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0x16C9E9C", Offset = "0x16C9E9C", VA = "0x16C9E9C", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0x16C9E4C", Offset = "0x16C9E4C", VA = "0x16C9E4C")]
		private static bool UseMouse(bool pressed, bool released, PointerEventData pointerData)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0x16CA478", Offset = "0x16CA478", VA = "0x16CA478")]
		protected void CopyFromTo(OVRRayPointerEventData from, OVRRayPointerEventData to)
		{
		}

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0x16CA50C", Offset = "0x16CA50C", VA = "0x16CA50C")]
		protected new void CopyFromTo(PointerEventData from, PointerEventData to)
		{
		}

		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0x16CA584", Offset = "0x16CA584", VA = "0x16CA584")]
		protected bool GetPointerData(int id, [Out] OVRRayPointerEventData data, bool create)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0x16C8BA4", Offset = "0x16C8BA4", VA = "0x16C8BA4")]
		protected new void ClearSelection()
		{
		}

		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0x16CA690", Offset = "0x16CA690", VA = "0x16CA690")]
		private static Vector3 GetRectTransformNormal(RectTransform rectTransform)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0x16C9F00", Offset = "0x16C9F00", VA = "0x16C9F00")]
		protected MouseState GetGazePointerData()
		{
			return null;
		}

		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0x16CAA14", Offset = "0x16CAA14", VA = "0x16CAA14")]
		protected MouseState GetCanvasPointerData()
		{
			return null;
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0x16CAD90", Offset = "0x16CAD90", VA = "0x16CAD90")]
		private bool ShouldStartDrag(PointerEventData pointerEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0x16CA3E8", Offset = "0x16CA3E8", VA = "0x16CA3E8")]
		private static bool IsPointerMoving(PointerEventData pointerEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0x16CAF3C", Offset = "0x16CAF3C", VA = "0x16CAF3C", Slot = "30")]
		protected override void ProcessDrag(PointerEventData pointerEvent)
		{
		}

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0x16CA90C", Offset = "0x16CA90C", VA = "0x16CA90C")]
		protected PointerEventData.FramePressState GetGazeButtonState()
		{
			return default(PointerEventData.FramePressState);
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0x16CA7B8", Offset = "0x16CA7B8", VA = "0x16CA7B8")]
		protected Vector2 GetExtraScrollDelta()
		{
			return default(Vector2);
		}
	}
	[Token(Token = "0x2000489")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x579908", Offset = "0x579908")]
	public class OVRPhysicsRaycaster : BaseRaycaster
	{
		[Serializable]
		[Token(Token = "0x200048A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579970", Offset = "0x579970")]
		private sealed class <>c
		{
			[Token(Token = "0x400248C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400248D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<RaycastHit> <>9__12_0;

			[Token(Token = "0x400248E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Comparison<RaycastHit> <>9__13_0;

			[Token(Token = "0x6001BF9")]
			[Address(RVA = "0x157CD44", Offset = "0x157CD44", VA = "0x157CD44")]
			public <>c()
			{
			}

			[Token(Token = "0x6001BFA")]
			[Address(RVA = "0x157CD4C", Offset = "0x157CD4C", VA = "0x157CD4C")]
			internal int <Raycast>b__12_0(RaycastHit r1, RaycastHit r2)
			{
				return default(int);
			}

			[Token(Token = "0x6001BFB")]
			[Address(RVA = "0x157CD90", Offset = "0x157CD90", VA = "0x157CD90")]
			internal int <Spherecast>b__13_0(RaycastHit r1, RaycastHit r2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x400248A")]
		protected const int kNoEventMaskSet = -1;

		[Token(Token = "0x400248B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected LayerMask m_EventMask;

		[Token(Token = "0x1700040C")]
		public override Camera eventCamera
		{
			[Token(Token = "0x6001BF0")]
			[Address(RVA = "0x16CDEF4", Offset = "0x16CDEF4", VA = "0x16CDEF4", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040D")]
		public virtual int depth
		{
			[Token(Token = "0x6001BF1")]
			[Address(RVA = "0x16CDF58", Offset = "0x16CDF58", VA = "0x16CDF58", Slot = "22")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700040E")]
		public int finalEventMask
		{
			[Token(Token = "0x6001BF2")]
			[Address(RVA = "0x16CE034", Offset = "0x16CE034", VA = "0x16CE034")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700040F")]
		public LayerMask eventMask
		{
			[Token(Token = "0x6001BF3")]
			[Address(RVA = "0x16CE10C", Offset = "0x16CE10C", VA = "0x16CE10C")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6001BF4")]
			[Address(RVA = "0x16CE114", Offset = "0x16CE114", VA = "0x16CE114")]
			set
			{
			}
		}

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0x16CDEC0", Offset = "0x16CDEC0", VA = "0x16CDEC0")]
		protected OVRPhysicsRaycaster()
		{
		}

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0x16CE11C", Offset = "0x16CE11C", VA = "0x16CE11C", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0x16CE508", Offset = "0x16CE508", VA = "0x16CE508")]
		public void Spherecast(PointerEventData eventData, List<RaycastResult> resultAppendList, float radius)
		{
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0x16CA8B8", Offset = "0x16CA8B8", VA = "0x16CA8B8")]
		public Vector2 GetScreenPos(Vector3 worldPosition)
		{
			return default(Vector2);
		}
	}
	[Token(Token = "0x200048B")]
	public class OVRPointerVisualizer : MonoBehaviour
	{
		[Token(Token = "0x400248F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static OVRPointerVisualizer instance;

		[Token(Token = "0x4002490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x585EB4", Offset = "0x585EB4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585EB4", Offset = "0x585EB4")]
		public Transform trackingSpace;

		[Token(Token = "0x4002491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x585F14", Offset = "0x585F14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585F14", Offset = "0x585F14")]
		public LineRenderer linePointer;

		[Token(Token = "0x4002492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LineRenderer linePointerR;

		[Token(Token = "0x4002493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LineRenderer linePointerL;

		[Token(Token = "0x4002494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585F74", Offset = "0x585F74")]
		public MeshRenderer gazePointerMesh;

		[Token(Token = "0x4002495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585FAC", Offset = "0x585FAC")]
		public float rayDrawDistance;

		[Token(Token = "0x4002496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585FE4", Offset = "0x585FE4")]
		public float gazeDrawDistance;

		[Token(Token = "0x4002497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public OVRInput.Controller activeController;

		[Token(Token = "0x4002498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve normalLRWidth;

		[Token(Token = "0x4002499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AnimationCurve FirstpersionLRWidth;

		[Token(Token = "0x400249A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform LControllerTransform;

		[Token(Token = "0x400249B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform RControllerTransform;

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0x16CE8FC", Offset = "0x16CE8FC", VA = "0x16CE8FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0x16CEA00", Offset = "0x16CEA00", VA = "0x16CEA00")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0x16CEACC", Offset = "0x16CEACC", VA = "0x16CEACC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0x16CEB98", Offset = "0x16CEB98", VA = "0x16CEB98")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0x16CEC80", Offset = "0x16CEC80", VA = "0x16CEC80")]
		public void SetPointer(Ray ray, OVRInput.Controller activeController)
		{
		}

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0x16CEF28", Offset = "0x16CEF28", VA = "0x16CEF28")]
		public void SetPointerVisibility(OVRInput.Controller activeController)
		{
		}

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0x16CF1EC", Offset = "0x16CF1EC", VA = "0x16CF1EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0x16CF220", Offset = "0x16CF220", VA = "0x16CF220")]
		public Ray GetCurrentControllerSelectionRay()
		{
			return default(Ray);
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0x16CF274", Offset = "0x16CF274", VA = "0x16CF274")]
		public OVRPointerVisualizer()
		{
		}
	}
	[Token(Token = "0x200048C")]
	public class OVRRawRaycaster : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200048D")]
		public class HoverCallback : UnityEvent<Transform>
		{
			[Token(Token = "0x6001C0D")]
			[Address(RVA = "0x157CDD4", Offset = "0x157CDD4", VA = "0x157CDD4")]
			public HoverCallback()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200048E")]
		public class SelectionCallback : UnityEvent<Transform>
		{
			[Token(Token = "0x6001C0E")]
			[Address(RVA = "0x157CE28", Offset = "0x157CE28", VA = "0x157CE28")]
			public SelectionCallback()
			{
			}
		}

		[Token(Token = "0x400249C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool HitRawRaycast;

		[Token(Token = "0x400249D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58602C", Offset = "0x58602C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58602C", Offset = "0x58602C")]
		public Transform trackingSpace;

		[Token(Token = "0x400249E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58608C", Offset = "0x58608C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58608C", Offset = "0x58608C")]
		public OVRInput.Button primaryButton;

		[Token(Token = "0x400249F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5860EC", Offset = "0x5860EC")]
		public OVRInput.Button secondaryButton;

		[Token(Token = "0x40024A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586124", Offset = "0x586124")]
		public LayerMask excludeLayers;

		[Token(Token = "0x40024A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string[] withTag;

		[Token(Token = "0x40024A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58615C", Offset = "0x58615C")]
		public float raycastDistance;

		[Token(Token = "0x40024A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x586194", Offset = "0x586194")]
		public HoverCallback onHoverEnter;

		[Token(Token = "0x40024A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public HoverCallback onHoverExit;

		[Token(Token = "0x40024A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public HoverCallback onHover;

		[Token(Token = "0x40024A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5861CC", Offset = "0x5861CC")]
		public SelectionCallback onPrimarySelect;

		[Token(Token = "0x40024A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SelectionCallback onSecondarySelect;

		[Token(Token = "0x40024A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Transform lastHit;

		[Token(Token = "0x40024A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Transform triggerDown;

		[Token(Token = "0x40024AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Transform padDown;

		[Token(Token = "0x40024AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public OVRInput.Controller activeController;

		[Token(Token = "0x40024AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool noUIObject;

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0x16CF288", Offset = "0x16CF288", VA = "0x16CF288")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0x16CF370", Offset = "0x16CF370", VA = "0x16CF370")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C07")]
		[Address(RVA = "0x16CF43C", Offset = "0x16CF43C", VA = "0x16CF43C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C08")]
		[Address(RVA = "0x16CF508", Offset = "0x16CF508", VA = "0x16CF508")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0x16CF5F0", Offset = "0x16CF5F0", VA = "0x16CF5F0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0x16D0180", Offset = "0x16D0180", VA = "0x16D0180")]
		private bool isCorrectTag(string tag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0x16D0208", Offset = "0x16D0208", VA = "0x16D0208")]
		public OVRRawRaycaster()
		{
		}
	}
	[Token(Token = "0x200048F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x579980", Offset = "0x579980")]
	public class OVRRaycaster : GraphicRaycaster, IPointerEnterHandler, IEventSystemHandler
	{
		[Token(Token = "0x2000490")]
		private struct RaycastHit
		{
			[Token(Token = "0x40024B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Graphic graphic;

			[Token(Token = "0x40024B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 worldPos;

			[Token(Token = "0x40024B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool fromMouse;
		}

		[Serializable]
		[Token(Token = "0x2000491")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5799E8", Offset = "0x5799E8")]
		private sealed class <>c
		{
			[Token(Token = "0x40024B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40024B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<RaycastHit> <>9__13_0;

			[Token(Token = "0x6001C1C")]
			[Address(RVA = "0x157CEE0", Offset = "0x157CEE0", VA = "0x157CEE0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001C1D")]
			[Address(RVA = "0x157CEE8", Offset = "0x157CEE8", VA = "0x157CEE8")]
			internal int <GraphicRaycast>b__13_0(RaycastHit g1, RaycastHit g2)
			{
				return default(int);
			}
		}

		[NonSerialized]
		[Token(Token = "0x40024AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Canvas m_Canvas;

		[Token(Token = "0x40024AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected bool warnedAboutCamera;

		[Token(Token = "0x40024AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AddListnerAfterInit prevALAI;

		[NonSerialized]
		[Token(Token = "0x40024B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<RaycastHit> m_RaycastResults;

		[NonSerialized]
		[Token(Token = "0x40024B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<RaycastHit> s_SortedGraphics;

		[Token(Token = "0x17000410")]
		private Canvas canvas
		{
			[Token(Token = "0x6001C10")]
			[Address(RVA = "0x16D073C", Offset = "0x16D073C", VA = "0x16D073C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000411")]
		public override Camera eventCamera
		{
			[Token(Token = "0x6001C11")]
			[Address(RVA = "0x16D07F0", Offset = "0x16D07F0", VA = "0x16D07F0", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0x16D067C", Offset = "0x16D067C", VA = "0x16D067C")]
		protected OVRRaycaster()
		{
		}

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0x16D0B28", Offset = "0x16D0B28", VA = "0x16D0B28")]
		private void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList, Ray ray, bool checkForBlocking)
		{
		}

		[Token(Token = "0x6001C13")]
		[Address(RVA = "0x16D1D7C", Offset = "0x16D1D7C", VA = "0x16D1D7C", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x6001C14")]
		[Address(RVA = "0x16CAD8C", Offset = "0x16CAD8C", VA = "0x16CAD8C")]
		public void RaycastPointer(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0x16D1790", Offset = "0x16D1790", VA = "0x16D1790")]
		private void GraphicRaycast(Canvas canvas, Ray ray, List<RaycastHit> results)
		{
		}

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0x16CA874", Offset = "0x16CA874", VA = "0x16CA874")]
		public Vector2 GetScreenPosition(RaycastResult raycastResult)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0x16D1E3C", Offset = "0x16D1E3C", VA = "0x16D1E3C")]
		private static bool RayIntersectsRectTransform(RectTransform rectTransform, Ray ray, [Out] Vector3 worldPos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0x16D20E8", Offset = "0x16D20E8", VA = "0x16D20E8")]
		public bool IsFocussed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0x16D2228", Offset = "0x16D2228", VA = "0x16D2228", Slot = "22")]
		public void OnPointerEnter(PointerEventData e)
		{
		}
	}
	[Token(Token = "0x2000492")]
	public class OVRRayPointerEventData : PointerEventData
	{
		[Token(Token = "0x40024B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		public Ray worldSpaceRay;

		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0x16CA688", Offset = "0x16CA688", VA = "0x16CA688")]
		public OVRRayPointerEventData(EventSystem eventSystem)
		{
		}

		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0x16D0310", Offset = "0x16D0310", VA = "0x16D0310", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000493")]
	public class PhysicsInteraction : MonoBehaviour
	{
		[Token(Token = "0x40024B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NavMeshAgent agent;

		[Token(Token = "0x40024B9")]
		public const float navMeshSampleDistance = 4f;

		[Token(Token = "0x40024BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text outText;

		[Token(Token = "0x6001C20")]
		[Address(RVA = "0x15EECE8", Offset = "0x15EECE8", VA = "0x15EECE8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0x15EED0C", Offset = "0x15EED0C", VA = "0x15EED0C")]
		public void OnGroundClick(BaseEventData data)
		{
		}

		[Token(Token = "0x6001C22")]
		[Address(RVA = "0x15EF134", Offset = "0x15EF134", VA = "0x15EF134")]
		public void OnBackClick(BaseEventData data)
		{
		}

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0x15EF1AC", Offset = "0x15EF1AC", VA = "0x15EF1AC")]
		public PhysicsInteraction()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x2000494")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x40024BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x40024BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x40024BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x40024BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x40024BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x17000412")]
		public bool Highlight
		{
			[Token(Token = "0x6001C24")]
			[Address(RVA = "0x855678", Offset = "0x855678", VA = "0x855678")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C25")]
			[Address(RVA = "0x855680", Offset = "0x855680", VA = "0x855680")]
			set
			{
			}
		}

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0x85568C", Offset = "0x85568C", VA = "0x85568C")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0x85584C", Offset = "0x85584C", VA = "0x85584C", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0x855874", Offset = "0x855874", VA = "0x855874", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6001C29")]
		[Address(RVA = "0x85589C", Offset = "0x85589C", VA = "0x85589C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0x85574C", Offset = "0x85574C", VA = "0x85574C")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0x855B78", Offset = "0x855B78", VA = "0x855B78")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x2000495")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x40024C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x40024C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x40024C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x40024C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x40024C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x40024C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x40024C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x17000413")]
		public bool InRange
		{
			[Token(Token = "0x6001C2D")]
			[Address(RVA = "0x7CCBC0", Offset = "0x7CCBC0", VA = "0x7CCBC0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C2E")]
			[Address(RVA = "0x7CCBC8", Offset = "0x7CCBC8", VA = "0x7CCBC8")]
			set
			{
			}
		}

		[Token(Token = "0x17000414")]
		public bool Targeted
		{
			[Token(Token = "0x6001C2F")]
			[Address(RVA = "0x7CCD50", Offset = "0x7CCD50", VA = "0x7CCD50")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C30")]
			[Address(RVA = "0x7CCD58", Offset = "0x7CCD58", VA = "0x7CCD58")]
			set
			{
			}
		}

		[Token(Token = "0x6001C31")]
		[Address(RVA = "0x7CCD64", Offset = "0x7CCD64", VA = "0x7CCD64", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001C32")]
		[Address(RVA = "0x7CCBD4", Offset = "0x7CCBD4", VA = "0x7CCBD4")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x6001C33")]
		[Address(RVA = "0x7CCED0", Offset = "0x7CCED0", VA = "0x7CCED0")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x2000496")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5799F8", Offset = "0x5799F8")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x40024C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x40024C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x40024C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x40024CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x40024CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x40024CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x40024CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x40024CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x40024CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x40024D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x40024D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x40024D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x40024D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x17000415")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6001C34")]
			[Address(RVA = "0x7CCED8", Offset = "0x7CCED8", VA = "0x7CCED8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C35")]
			[Address(RVA = "0x7CCEE0", Offset = "0x7CCEE0", VA = "0x7CCEE0")]
			set
			{
			}
		}

		[Token(Token = "0x6001C36")]
		[Address(RVA = "0x7CCEFC", Offset = "0x7CCEFC", VA = "0x7CCEFC", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0x7CD13C", Offset = "0x7CD13C", VA = "0x7CD13C", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0x7CDA60", Offset = "0x7CDA60", VA = "0x7CDA60", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0x7CDEF4", Offset = "0x7CDEF4", VA = "0x7CDEF4", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0x7CE1B8", Offset = "0x7CE1B8", VA = "0x7CE1B8")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0x7CD3B0", Offset = "0x7CD3B0", VA = "0x7CD3B0")]
		protected bool FindTarget([Out] DistanceGrabbable dgOut, [Out] Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0x7CE2BC", Offset = "0x7CE2BC", VA = "0x7CE2BC")]
		protected bool FindTargetWithSpherecast([Out] DistanceGrabbable dgOut, [Out] Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0x7CE700", Offset = "0x7CE700", VA = "0x7CE700", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0x7CE718", Offset = "0x7CE718", VA = "0x7CE718", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0x7CE720", Offset = "0x7CE720", VA = "0x7CE720")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x2000497")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x2000498")]
		public enum CrosshairState
		{
			[Token(Token = "0x40024D9")]
			Disabled,
			[Token(Token = "0x40024DA")]
			Enabled,
			[Token(Token = "0x40024DB")]
			Targeted
		}

		[Token(Token = "0x40024D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x40024D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x40024D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x40024D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0x7F7B34", Offset = "0x7F7B34", VA = "0x7F7B34")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0x7F7BA8", Offset = "0x7F7BA8", VA = "0x7F7BA8")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0x7F7C44", Offset = "0x7F7C44", VA = "0x7F7C44")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0x7F7C8C", Offset = "0x7F7C8C", VA = "0x7F7C8C")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x2000499")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x40024DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x40024DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x40024DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x40024DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0x7F7904", Offset = "0x7F7904", VA = "0x7F7904")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0x7F79BC", Offset = "0x7F79BC", VA = "0x7F79BC")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0x7F7A74", Offset = "0x7F7A74", VA = "0x7F7A74")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x200049A")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x6001C47")]
		[Address(RVA = "0x15EE8E0", Offset = "0x15EE8E0", VA = "0x15EE8E0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0x15EE9D4", Offset = "0x15EE9D4", VA = "0x15EE9D4")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0x15EE9E0", Offset = "0x15EE9E0", VA = "0x15EE9E0")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0x15EE9EC", Offset = "0x15EE9EC", VA = "0x15EE9EC")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x200049B")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x40024E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x40024E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x40024E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0x7E9B24", Offset = "0x7E9B24", VA = "0x7E9B24")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0x7E9B78", Offset = "0x7E9B78", VA = "0x7E9B78")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0x7E9ED4", Offset = "0x7E9ED4", VA = "0x7E9ED4")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0x7E9FD8", Offset = "0x7E9FD8", VA = "0x7E9FD8")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0x7E9B7C", Offset = "0x7E9B7C", VA = "0x7E9B7C")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0x7EA0DC", Offset = "0x7EA0DC", VA = "0x7EA0DC")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x200049C")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x200049D")]
		public enum ContactTest
		{
			[Token(Token = "0x40024F2")]
			PerpenTest,
			[Token(Token = "0x40024F3")]
			BackwardsPress
		}

		[Token(Token = "0x40024E3")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x40024E4")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x40024E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x40024E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x40024E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x40024E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x40024E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x40024EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x40024EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x40024EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x40024ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x40024EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private bool _allowMultipleNearFieldInteraction;

		[Token(Token = "0x40024EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x586344", Offset = "0x586344")]
		private InteractableState <CurrentButtonState>k__BackingField;

		[Token(Token = "0x40024F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x17000416")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x6001C51")]
			[Address(RVA = "0x7EDE20", Offset = "0x7EDE20", VA = "0x7EDE20", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000417")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6001C52")]
			[Address(RVA = "0x7EDE28", Offset = "0x7EDE28", VA = "0x7EDE28")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000418")]
		public InteractableState CurrentButtonState
		{
			[Token(Token = "0x6001C53")]
			[Address(RVA = "0x7EDE34", Offset = "0x7EDE34", VA = "0x7EDE34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58CBBC", Offset = "0x58CBBC")]
			get
			{
				return default(InteractableState);
			}
			[Token(Token = "0x6001C54")]
			[Address(RVA = "0x7EDE3C", Offset = "0x7EDE3C", VA = "0x7EDE3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58CBCC", Offset = "0x58CBCC")]
			private set
			{
			}
		}

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0x7EDE44", Offset = "0x7EDE44", VA = "0x7EDE44", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0x7EDF58", Offset = "0x7EDF58", VA = "0x7EDF58")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0x7EE0B4", Offset = "0x7EE0B4", VA = "0x7EE0B4", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0x7EE658", Offset = "0x7EE658", VA = "0x7EE658")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0x7EE708", Offset = "0x7EE708", VA = "0x7EE708")]
		public void ForceResetButton()
		{
		}

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0x7EE570", Offset = "0x7EE570", VA = "0x7EE570")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0x7EE820", Offset = "0x7EE820", VA = "0x7EE820")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0x7EE8A4", Offset = "0x7EE8A4", VA = "0x7EE8A4")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0x7EE930", Offset = "0x7EE930", VA = "0x7EE930")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x200049E")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x40024F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x40024F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x586364", Offset = "0x586364")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x40024F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x586374", Offset = "0x586374")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x17000419")]
		public Collider Collider
		{
			[Token(Token = "0x6001C5E")]
			[Address(RVA = "0x84E6E0", Offset = "0x84E6E0", VA = "0x84E6E0", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58CBDC", Offset = "0x58CBDC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C5F")]
			[Address(RVA = "0x84E6E8", Offset = "0x84E6E8", VA = "0x84E6E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58CBEC", Offset = "0x58CBEC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700041A")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x6001C60")]
			[Address(RVA = "0x84E6F0", Offset = "0x84E6F0", VA = "0x84E6F0", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58CBFC", Offset = "0x58CBFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C61")]
			[Address(RVA = "0x84E6F8", Offset = "0x84E6F8", VA = "0x84E6F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58CC0C", Offset = "0x58CC0C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700041B")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6001C62")]
			[Address(RVA = "0x84E700", Offset = "0x84E700", VA = "0x84E700", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x6001C63")]
		[Address(RVA = "0x84E754", Offset = "0x84E754", VA = "0x84E754")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C64")]
		[Address(RVA = "0x84E7F4", Offset = "0x84E7F4", VA = "0x84E7F4")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x200049F")]
	public interface ColliderZone
	{
		[Token(Token = "0x1700041C")]
		Collider Collider
		{
			[Token(Token = "0x6001C65")]
			get;
		}

		[Token(Token = "0x1700041D")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x6001C66")]
			get;
		}

		[Token(Token = "0x1700041E")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6001C67")]
			get;
		}
	}
	[Token(Token = "0x20004A0")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x40024F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x40024F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x40024F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x40024FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0x8555C0", Offset = "0x8555C0", VA = "0x8555C0")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x20004A1")]
	public enum InteractionType
	{
		[Token(Token = "0x40024FC")]
		Enter,
		[Token(Token = "0x40024FD")]
		Stay,
		[Token(Token = "0x40024FE")]
		Exit
	}
	[Token(Token = "0x20004A2")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x20004A3")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4002510")]
			Mesh,
			[Token(Token = "0x4002511")]
			Skeleton,
			[Token(Token = "0x4002512")]
			Both
		}

		[Token(Token = "0x20004A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579A60", Offset = "0x579A60")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002513")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002514")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002515")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x1700042A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C8A")]
				[Address(RVA = "0x15143C8", Offset = "0x15143C8", VA = "0x15143C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C8C")]
				[Address(RVA = "0x1514410", Offset = "0x1514410", VA = "0x1514410", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C87")]
			[Address(RVA = "0x151413C", Offset = "0x151413C", VA = "0x151413C")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6001C88")]
			[Address(RVA = "0x1514168", Offset = "0x1514168", VA = "0x1514168", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C89")]
			[Address(RVA = "0x151416C", Offset = "0x151416C", VA = "0x151416C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C8B")]
			[Address(RVA = "0x15143D0", Offset = "0x15143D0", VA = "0x15143D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40024FF")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x4002500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x4002501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4002502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4002503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4002504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4002505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4002506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4002507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4002508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4002509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x400250A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x400250B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x400250C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x400250D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x400250E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5863A4", Offset = "0x5863A4")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x1700041F")]
		public OVRHand RightHand
		{
			[Token(Token = "0x6001C69")]
			[Address(RVA = "0x169F8A0", Offset = "0x169F8A0", VA = "0x169F8A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C6A")]
			[Address(RVA = "0x169F8D8", Offset = "0x169F8D8", VA = "0x169F8D8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000420")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x6001C6B")]
			[Address(RVA = "0x169F944", Offset = "0x169F944", VA = "0x169F944")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C6C")]
			[Address(RVA = "0x169F97C", Offset = "0x169F97C", VA = "0x169F97C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000421")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x6001C6D")]
			[Address(RVA = "0x169F9E8", Offset = "0x169F9E8", VA = "0x169F9E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C6E")]
			[Address(RVA = "0x169FA20", Offset = "0x169FA20", VA = "0x169FA20")]
			private set
			{
			}
		}

		[Token(Token = "0x17000422")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x6001C6F")]
			[Address(RVA = "0x169FA8C", Offset = "0x169FA8C", VA = "0x169FA8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C70")]
			[Address(RVA = "0x169FAC4", Offset = "0x169FAC4", VA = "0x169FAC4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000423")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x6001C71")]
			[Address(RVA = "0x169FB30", Offset = "0x169FB30", VA = "0x169FB30")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C72")]
			[Address(RVA = "0x169FB68", Offset = "0x169FB68", VA = "0x169FB68")]
			private set
			{
			}
		}

		[Token(Token = "0x17000424")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x6001C73")]
			[Address(RVA = "0x169FBD4", Offset = "0x169FBD4", VA = "0x169FBD4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C74")]
			[Address(RVA = "0x169FC08", Offset = "0x169FC08", VA = "0x169FC08")]
			private set
			{
			}
		}

		[Token(Token = "0x17000425")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6001C75")]
			[Address(RVA = "0x169FC70", Offset = "0x169FC70", VA = "0x169FC70")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C76")]
			[Address(RVA = "0x169FCA4", Offset = "0x169FCA4", VA = "0x169FCA4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000426")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x6001C77")]
			[Address(RVA = "0x169FD0C", Offset = "0x169FD0C", VA = "0x169FD0C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C78")]
			[Address(RVA = "0x169FD40", Offset = "0x169FD40", VA = "0x169FD40")]
			private set
			{
			}
		}

		[Token(Token = "0x17000427")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x6001C79")]
			[Address(RVA = "0x169FDA8", Offset = "0x169FDA8", VA = "0x169FDA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C7A")]
			[Address(RVA = "0x169FDDC", Offset = "0x169FDDC", VA = "0x169FDDC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000428")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x6001C7B")]
			[Address(RVA = "0x169FE44", Offset = "0x169FE44", VA = "0x169FE44")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C7C")]
			[Address(RVA = "0x169FE78", Offset = "0x169FE78", VA = "0x169FE78")]
			private set
			{
			}
		}

		[Token(Token = "0x17000429")]
		public static HandsManager Instance
		{
			[Token(Token = "0x6001C7D")]
			[Address(RVA = "0x169FEE0", Offset = "0x169FEE0", VA = "0x169FEE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58CC1C", Offset = "0x58CC1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C7E")]
			[Address(RVA = "0x169FF2C", Offset = "0x169FF2C", VA = "0x169FF2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58CC2C", Offset = "0x58CC2C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0x169FF88", Offset = "0x169FF88", VA = "0x169FF88")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C80")]
		[Address(RVA = "0x16A0364", Offset = "0x16A0364", VA = "0x16A0364")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C81")]
		[Address(RVA = "0x16A02E4", Offset = "0x16A02E4", VA = "0x16A02E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58CC3C", Offset = "0x58CC3C")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6001C82")]
		[Address(RVA = "0x16A03EC", Offset = "0x16A03EC", VA = "0x16A03EC")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6001C83")]
		[Address(RVA = "0x16A04D0", Offset = "0x16A04D0", VA = "0x16A04D0")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x6001C84")]
		[Address(RVA = "0x16A06B0", Offset = "0x16A06B0", VA = "0x16A06B0")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6001C85")]
		[Address(RVA = "0x16A08D4", Offset = "0x16A08D4", VA = "0x16A08D4")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C86")]
		[Address(RVA = "0x16A0A60", Offset = "0x16A0A60", VA = "0x16A0A60")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x20004A5")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004A6")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6001C9E")]
			[Address(RVA = "0x1514C6C", Offset = "0x1514C6C", VA = "0x1514C6C")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4002516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x4002517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x4002518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x400251C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x1700042C")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x6001C8D")]
			[Address(RVA = "0x1567B0C", Offset = "0x1567B0C", VA = "0x1567B0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042D")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x6001C8E")]
			[Address(RVA = "0x1567B14", Offset = "0x1567B14", VA = "0x1567B14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042E")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x6001C8F")]
			[Address(RVA = "0x1567B1C", Offset = "0x1567B1C", VA = "0x1567B1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042F")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x6001C90")]
			[Address(RVA = "0x1567B24", Offset = "0x1567B24", VA = "0x1567B24", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000021")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x6001C91")]
			[Address(RVA = "0x1567B2C", Offset = "0x1567B2C", VA = "0x1567B2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58CCF4", Offset = "0x58CCF4")]
			add
			{
			}
			[Token(Token = "0x6001C92")]
			[Address(RVA = "0x1567BCC", Offset = "0x1567BCC", VA = "0x1567BCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58CD04", Offset = "0x58CD04")]
			remove
			{
			}
		}

		[Token(Token = "0x14000022")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6001C94")]
			[Address(RVA = "0x1567CDC", Offset = "0x1567CDC", VA = "0x1567CDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58CD14", Offset = "0x58CD14")]
			add
			{
			}
			[Token(Token = "0x6001C95")]
			[Address(RVA = "0x1567D7C", Offset = "0x1567D7C", VA = "0x1567D7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58CD24", Offset = "0x58CD24")]
			remove
			{
			}
		}

		[Token(Token = "0x14000023")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x6001C97")]
			[Address(RVA = "0x1567E8C", Offset = "0x1567E8C", VA = "0x1567E8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58CD34", Offset = "0x58CD34")]
			add
			{
			}
			[Token(Token = "0x6001C98")]
			[Address(RVA = "0x1567F2C", Offset = "0x1567F2C", VA = "0x1567F2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58CD44", Offset = "0x58CD44")]
			remove
			{
			}
		}

		[Token(Token = "0x6001C93")]
		[Address(RVA = "0x1567C6C", Offset = "0x1567C6C", VA = "0x1567C6C", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001C96")]
		[Address(RVA = "0x1567E1C", Offset = "0x1567E1C", VA = "0x1567E1C", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0x1567FCC", Offset = "0x1567FCC", VA = "0x1567FCC", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001C9A")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0x156803C", Offset = "0x156803C", VA = "0x156803C", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0x1568170", Offset = "0x1568170", VA = "0x1568170", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0x15682A4", Offset = "0x15682A4", VA = "0x15682A4")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x20004A7")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x400251E")]
		None,
		[Token(Token = "0x400251F")]
		Proximity,
		[Token(Token = "0x4002520")]
		Contact,
		[Token(Token = "0x4002521")]
		Action
	}
	[Token(Token = "0x20004A8")]
	public enum InteractableState
	{
		[Token(Token = "0x4002523")]
		Default,
		[Token(Token = "0x4002524")]
		ProximityState,
		[Token(Token = "0x4002525")]
		ContactState,
		[Token(Token = "0x4002526")]
		ActionState
	}
	[Token(Token = "0x20004A9")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x4002527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x4002528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x4002529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x400252A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x400252B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0x1568404", Offset = "0x1568404", VA = "0x1568404")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x20004AA")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x400252C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x17000430")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x6001CA0")]
			[Address(RVA = "0x1568304", Offset = "0x1568304", VA = "0x1568304")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0x15680A4", Offset = "0x15680A4", VA = "0x15680A4")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0x15681D8", Offset = "0x15681D8", VA = "0x15681D8")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0x1568368", Offset = "0x1568368", VA = "0x1568368")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x20004AB")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x20004AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579A70", Offset = "0x579A70")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400252F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002530")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002531")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4002532")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4002533")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4002534")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4002535")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4002536")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4002537")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x17000431")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CAD")]
				[Address(RVA = "0x15151D4", Offset = "0x15151D4", VA = "0x15151D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000432")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CAF")]
				[Address(RVA = "0x151521C", Offset = "0x151521C", VA = "0x151521C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CA9")]
			[Address(RVA = "0x1514CC0", Offset = "0x1514CC0", VA = "0x1514CC0")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001CAA")]
			[Address(RVA = "0x1514CEC", Offset = "0x1514CEC", VA = "0x1514CEC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CAB")]
			[Address(RVA = "0x1514D64", Offset = "0x1514D64", VA = "0x1514D64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CAC")]
			[Address(RVA = "0x1514D08", Offset = "0x1514D08", VA = "0x1514D08")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001CAE")]
			[Address(RVA = "0x15151DC", Offset = "0x15151DC", VA = "0x15151DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400252D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x400252E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0x15691A0", Offset = "0x15691A0", VA = "0x15691A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0x156921C", Offset = "0x156921C", VA = "0x156921C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58CD54", Offset = "0x58CD54")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0x15692C4", Offset = "0x15692C4", VA = "0x15692C4")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0x15693AC", Offset = "0x15693AC", VA = "0x15693AC")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x20004AD")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4002538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4002539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x400253A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x400253B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x400253C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x400253D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x400253E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x17000433")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x6001CB0")]
			[Address(RVA = "0x15693B4", Offset = "0x15693B4", VA = "0x15693B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0x1569534", Offset = "0x1569534", VA = "0x1569534")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0x15695DC", Offset = "0x15695DC", VA = "0x15695DC")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0x1569684", Offset = "0x1569684", VA = "0x1569684")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0x156994C", Offset = "0x156994C", VA = "0x156994C")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0x1569994", Offset = "0x1569994", VA = "0x1569994")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0x1569C3C", Offset = "0x1569C3C", VA = "0x1569C3C")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0x1569D80", Offset = "0x1569D80", VA = "0x1569D80")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x20004AE")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x20004AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579A80", Offset = "0x579A80")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400254A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400254B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400254C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x17000438")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CC9")]
				[Address(RVA = "0x1511180", Offset = "0x1511180", VA = "0x1511180", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000439")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CCB")]
				[Address(RVA = "0x15111C8", Offset = "0x15111C8", VA = "0x15111C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CC6")]
			[Address(RVA = "0x1510D4C", Offset = "0x1510D4C", VA = "0x1510D4C")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001CC7")]
			[Address(RVA = "0x1510D78", Offset = "0x1510D78", VA = "0x1510D78", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CC8")]
			[Address(RVA = "0x1510D7C", Offset = "0x1510D7C", VA = "0x1510D7C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CCA")]
			[Address(RVA = "0x1511188", Offset = "0x1511188", VA = "0x1511188", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400253F")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x4002540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x4002541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4002542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x4002543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4002544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4002545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4002546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4002547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4002548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4002549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x17000434")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001CB8")]
			[Address(RVA = "0x7B162C", Offset = "0x7B162C", VA = "0x7B162C", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000435")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001CB9")]
			[Address(RVA = "0x7B1634", Offset = "0x7B1634", VA = "0x7B1634", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000436")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001CBA")]
			[Address(RVA = "0x7B163C", Offset = "0x7B163C", VA = "0x7B163C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000437")]
		public override bool EnableState
		{
			[Token(Token = "0x6001CBB")]
			[Address(RVA = "0x7B1644", Offset = "0x7B1644", VA = "0x7B1644", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CBC")]
			[Address(RVA = "0x7B1670", Offset = "0x7B1670", VA = "0x7B1670", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0x7B16AC", Offset = "0x7B16AC", VA = "0x7B16AC", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0x7B1768", Offset = "0x7B1768", VA = "0x7B1768")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58CE0C", Offset = "0x58CE0C")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0x7B17E8", Offset = "0x7B17E8", VA = "0x7B17E8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0x7B1A88", Offset = "0x7B1A88", VA = "0x7B1A88")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0x7B1C14", Offset = "0x7B1C14", VA = "0x7B1C14")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0x7B1D0C", Offset = "0x7B1D0C", VA = "0x7B1D0C", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0x7B2014", Offset = "0x7B2014", VA = "0x7B2014", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0x7B2018", Offset = "0x7B2018", VA = "0x7B2018", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0x7B201C", Offset = "0x7B201C", VA = "0x7B201C")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x20004B0")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x400254D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x400254E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x586434", Offset = "0x586434")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x400254F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x586444", Offset = "0x586444")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x4002550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x586454", Offset = "0x586454")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x1700043A")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6001CCC")]
			[Address(RVA = "0x7B2034", Offset = "0x7B2034", VA = "0x7B2034", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58CEC4", Offset = "0x58CEC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CCD")]
			[Address(RVA = "0x7B203C", Offset = "0x7B203C", VA = "0x7B203C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58CED4", Offset = "0x58CED4")]
			set
			{
			}
		}

		[Token(Token = "0x1700043B")]
		public bool EnableState
		{
			[Token(Token = "0x6001CCE")]
			[Address(RVA = "0x7B2044", Offset = "0x7B2044", VA = "0x7B2044", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CCF")]
			[Address(RVA = "0x7B2064", Offset = "0x7B2064", VA = "0x7B2064", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700043C")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6001CD0")]
			[Address(RVA = "0x7B2088", Offset = "0x7B2088", VA = "0x7B2088", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58CEE4", Offset = "0x58CEE4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CD1")]
			[Address(RVA = "0x7B2090", Offset = "0x7B2090", VA = "0x7B2090", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58CEF4", Offset = "0x58CEF4")]
			set
			{
			}
		}

		[Token(Token = "0x1700043D")]
		public float SphereRadius
		{
			[Token(Token = "0x6001CD2")]
			[Address(RVA = "0x7B209C", Offset = "0x7B209C", VA = "0x7B209C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58CF04", Offset = "0x58CF04")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001CD3")]
			[Address(RVA = "0x7B20A4", Offset = "0x7B20A4", VA = "0x7B20A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58CF14", Offset = "0x58CF14")]
			private set
			{
			}
		}

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0x7B20AC", Offset = "0x7B20AC", VA = "0x7B20AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0x7B20F4", Offset = "0x7B20F4", VA = "0x7B20F4", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0x7B20F8", Offset = "0x7B20F8", VA = "0x7B20F8")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x20004B1")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4002552")]
		None = 0,
		[Token(Token = "0x4002553")]
		Ray = 1,
		[Token(Token = "0x4002554")]
		Poke = 4,
		[Token(Token = "0x4002555")]
		All = -1
	}
	[Token(Token = "0x20004B2")]
	public enum ToolInputState
	{
		[Token(Token = "0x4002557")]
		Inactive,
		[Token(Token = "0x4002558")]
		PrimaryInputDown,
		[Token(Token = "0x4002559")]
		PrimaryInputDownStay,
		[Token(Token = "0x400255A")]
		PrimaryInputUp
	}
	[Token(Token = "0x20004B3")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x400255B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x400255C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x400255D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0x15682AC", Offset = "0x15682AC", VA = "0x15682AC")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x20004B4")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x400255E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x586464", Offset = "0x586464")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x400255F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x586474", Offset = "0x586474")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4002560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x586484", Offset = "0x586484")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x4002561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4002562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4002563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4002564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4002565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4002566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x1700043E")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6001CD8")]
			[Address(RVA = "0x15684C8", Offset = "0x15684C8", VA = "0x15684C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043F")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6001CD9")]
			[Address(RVA = "0x15684D0", Offset = "0x15684D0", VA = "0x15684D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58CF24", Offset = "0x58CF24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CDA")]
			[Address(RVA = "0x15684D8", Offset = "0x15684D8", VA = "0x15684D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58CF34", Offset = "0x58CF34")]
			set
			{
			}
		}

		[Token(Token = "0x17000440")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001CDB")]
			get;
		}

		[Token(Token = "0x17000441")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x6001CDC")]
			get;
		}

		[Token(Token = "0x17000442")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x6001CDD")]
			get;
		}

		[Token(Token = "0x17000443")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6001CDE")]
			[Address(RVA = "0x15684E4", Offset = "0x15684E4", VA = "0x15684E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58CF44", Offset = "0x58CF44")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001CDF")]
			[Address(RVA = "0x15684F0", Offset = "0x15684F0", VA = "0x15684F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58CF54", Offset = "0x58CF54")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000444")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x6001CE0")]
			[Address(RVA = "0x15684FC", Offset = "0x15684FC", VA = "0x15684FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58CF64", Offset = "0x58CF64")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001CE1")]
			[Address(RVA = "0x1568508", Offset = "0x1568508", VA = "0x1568508")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58CF74", Offset = "0x58CF74")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000445")]
		public abstract bool EnableState
		{
			[Token(Token = "0x6001CE6")]
			get;
			[Token(Token = "0x6001CE7")]
			set;
		}

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0x1568514", Offset = "0x1568514", VA = "0x1568514")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001CE3")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x6001CE4")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x6001CE5")]
		public abstract void DeFocus();

		[Token(Token = "0x6001CE8")]
		public abstract void Initialize();

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0x156851C", Offset = "0x156851C", VA = "0x156851C")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0x1568570", Offset = "0x1568570", VA = "0x1568570")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0x15685C4", Offset = "0x15685C4", VA = "0x15685C4", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0x156886C", Offset = "0x156886C", VA = "0x156886C", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6001CED")]
		[Address(RVA = "0x1569000", Offset = "0x1569000", VA = "0x1569000")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x20004B5")]
	public interface InteractableToolView
	{
		[Token(Token = "0x17000446")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6001CEE")]
			get;
		}

		[Token(Token = "0x17000447")]
		bool EnableState
		{
			[Token(Token = "0x6001CF0")]
			get;
			[Token(Token = "0x6001CF1")]
			set;
		}

		[Token(Token = "0x17000448")]
		bool ToolActivateState
		{
			[Token(Token = "0x6001CF2")]
			get;
			[Token(Token = "0x6001CF3")]
			set;
		}

		[Token(Token = "0x6001CEF")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x20004B6")]
	public class PinchStateModule
	{
		[Token(Token = "0x20004B7")]
		private enum PinchState
		{
			[Token(Token = "0x400256B")]
			None,
			[Token(Token = "0x400256C")]
			PinchDown,
			[Token(Token = "0x400256D")]
			PinchStay,
			[Token(Token = "0x400256E")]
			PinchUp
		}

		[Token(Token = "0x4002567")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4002568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x4002569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x17000449")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x6001CF4")]
			[Address(RVA = "0x15EF774", Offset = "0x15EF774", VA = "0x15EF774")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700044A")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x6001CF5")]
			[Address(RVA = "0x15EF7FC", Offset = "0x15EF7FC", VA = "0x15EF7FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700044B")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x6001CF6")]
			[Address(RVA = "0x15EF884", Offset = "0x15EF884", VA = "0x15EF884")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0x15EF90C", Offset = "0x15EF90C", VA = "0x15EF90C")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0x15EF940", Offset = "0x15EF940", VA = "0x15EF940")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x20004B8")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x400256F")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4002570")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x4002571")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4002572")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x4002573")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4002574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4002575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5864A4", Offset = "0x5864A4")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x4002576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x4002577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x4002578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x4002579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x400257A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x400257B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x400257C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x400257D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x400257E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x1700044C")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001CF9")]
			[Address(RVA = "0x15306C0", Offset = "0x15306C0", VA = "0x15306C0", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x1700044D")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001CFA")]
			[Address(RVA = "0x15306C8", Offset = "0x15306C8", VA = "0x15306C8", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x1700044E")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001CFB")]
			[Address(RVA = "0x153073C", Offset = "0x153073C", VA = "0x153073C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700044F")]
		public override bool EnableState
		{
			[Token(Token = "0x6001CFC")]
			[Address(RVA = "0x1530744", Offset = "0x1530744", VA = "0x1530744", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CFD")]
			[Address(RVA = "0x153078C", Offset = "0x153078C", VA = "0x153078C", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0x1530804", Offset = "0x1530804", VA = "0x1530804", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0x153086C", Offset = "0x153086C", VA = "0x153086C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001D00")]
		[Address(RVA = "0x153091C", Offset = "0x153091C", VA = "0x153091C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0x1530BE4", Offset = "0x1530BE4", VA = "0x1530BE4")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0x1530C6C", Offset = "0x1530C6C", VA = "0x1530C6C", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0x153102C", Offset = "0x153102C", VA = "0x153102C")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D04")]
		[Address(RVA = "0x153113C", Offset = "0x153113C", VA = "0x153113C")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0x1531260", Offset = "0x1531260", VA = "0x1531260")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0x1531558", Offset = "0x1531558", VA = "0x1531558")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6001D07")]
		[Address(RVA = "0x15318E0", Offset = "0x15318E0", VA = "0x15318E0", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0x15319C8", Offset = "0x15319C8", VA = "0x15319C8", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0x1531A04", Offset = "0x1531A04", VA = "0x1531A04")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x20004B9")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x400257F")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x4002580")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x4002581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x4002582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4002583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x4002584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x4002585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x4002586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x4002587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x4002588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x586518", Offset = "0x586518")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x17000450")]
		public bool EnableState
		{
			[Token(Token = "0x6001D0A")]
			[Address(RVA = "0x153076C", Offset = "0x153076C", VA = "0x153076C", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D0B")]
			[Address(RVA = "0x15307AC", Offset = "0x15307AC", VA = "0x15307AC", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000451")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6001D0C")]
			[Address(RVA = "0x1531B0C", Offset = "0x1531B0C", VA = "0x1531B0C", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D0D")]
			[Address(RVA = "0x1530BA4", Offset = "0x1530BA4", VA = "0x1530BA4", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000452")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6001D0F")]
			[Address(RVA = "0x1531D6C", Offset = "0x1531D6C", VA = "0x1531D6C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58CF84", Offset = "0x58CF84")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D10")]
			[Address(RVA = "0x1531D74", Offset = "0x1531D74", VA = "0x1531D74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58CF94", Offset = "0x58CF94")]
			set
			{
			}
		}

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0x1531B14", Offset = "0x1531B14", VA = "0x1531B14")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0x153191C", Offset = "0x153191C", VA = "0x153191C", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0x1531D7C", Offset = "0x1531D7C", VA = "0x1531D7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0x1531FF0", Offset = "0x1531FF0", VA = "0x1531FF0")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D14")]
		[Address(RVA = "0x15320E0", Offset = "0x15320E0", VA = "0x15320E0")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x20004BA")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x4002589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x400258A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x400258B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x17000453")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6001D15")]
			[Address(RVA = "0x7CE740", Offset = "0x7CE740", VA = "0x7CE740")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D16")]
			[Address(RVA = "0x7CE748", Offset = "0x7CE748", VA = "0x7CE748")]
			set
			{
			}
		}

		[Token(Token = "0x17000454")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x6001D17")]
			[Address(RVA = "0x7CE7D0", Offset = "0x7CE7D0", VA = "0x7CE7D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D18")]
			[Address(RVA = "0x7CE7D8", Offset = "0x7CE7D8", VA = "0x7CE7D8")]
			set
			{
			}
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0x7CE844", Offset = "0x7CE844", VA = "0x7CE844")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0x7CEAF0", Offset = "0x7CEAF0", VA = "0x7CEAF0")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0x7CEB00", Offset = "0x7CEB00", VA = "0x7CEB00")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0x7CEB10", Offset = "0x7CEB10", VA = "0x7CEB10")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x20004BB")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x400258C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x400258D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0xA26260", Offset = "0xA26260", VA = "0xA26260")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0xA26264", Offset = "0xA26264", VA = "0xA26264")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0xA2629C", Offset = "0xA2629C", VA = "0xA2629C")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001D20")]
		[Address(RVA = "0xA262D4", Offset = "0xA262D4", VA = "0xA262D4")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001D21")]
		[Address(RVA = "0xA2630C", Offset = "0xA2630C", VA = "0xA2630C")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0xA26344", Offset = "0xA26344", VA = "0xA26344")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0xA2637C", Offset = "0xA2637C", VA = "0xA2637C")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0xA263B4", Offset = "0xA263B4", VA = "0xA263B4")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0xA26428", Offset = "0xA26428", VA = "0xA26428")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0xA26498", Offset = "0xA26498", VA = "0xA26498")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x20004BC")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x400258E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x400258F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0xA2F7D8", Offset = "0xA2F7D8", VA = "0xA2F7D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0xA2F7DC", Offset = "0xA2F7DC", VA = "0xA2F7DC")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0xA2645C", Offset = "0xA2645C", VA = "0xA2645C")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0xA2F81C", Offset = "0xA2F81C", VA = "0xA2F81C")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x20004BD")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x20004BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579AA0", Offset = "0x579AA0")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400259A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400259B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400259C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x400259D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x400259E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x400259F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x17000455")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D33")]
				[Address(RVA = "0x157DD34", Offset = "0x157DD34", VA = "0x157DD34", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000456")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D35")]
				[Address(RVA = "0x157DD7C", Offset = "0x157DD7C", VA = "0x157DD7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D30")]
			[Address(RVA = "0x157DB44", Offset = "0x157DB44", VA = "0x157DB44")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001D31")]
			[Address(RVA = "0x157DB70", Offset = "0x157DB70", VA = "0x157DB70", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D32")]
			[Address(RVA = "0x157DB74", Offset = "0x157DB74", VA = "0x157DB74", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D34")]
			[Address(RVA = "0x157DD3C", Offset = "0x157DD3C", VA = "0x157DD3C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002590")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x4002591")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x4002592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4002593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4002594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4002595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4002596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4002597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4002598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x4002599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0x15E869C", Offset = "0x15E869C", VA = "0x15E869C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0x15E8750", Offset = "0x15E8750", VA = "0x15E8750")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0x15E89A8", Offset = "0x15E89A8", VA = "0x15E89A8")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0x15E8928", Offset = "0x15E8928", VA = "0x15E8928")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58CFA4", Offset = "0x58CFA4")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0x15E89F4", Offset = "0x15E89F4", VA = "0x15E89F4")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x20004BF")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x20004C0")]
		public enum SelectionState
		{
			[Token(Token = "0x40025A7")]
			Off,
			[Token(Token = "0x40025A8")]
			Selected,
			[Token(Token = "0x40025A9")]
			Highlighted
		}

		[Token(Token = "0x40025A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x40025A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x40025A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x40025A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x40025A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x40025A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x17000457")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x6001D36")]
			[Address(RVA = "0x14DAEB4", Offset = "0x14DAEB4", VA = "0x14DAEB4")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x6001D37")]
			[Address(RVA = "0x14DAEBC", Offset = "0x14DAEBC", VA = "0x14DAEBC")]
			set
			{
			}
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0x14DB040", Offset = "0x14DB040", VA = "0x14DB040")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0x14DB23C", Offset = "0x14DB23C", VA = "0x14DB23C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0x14DAF44", Offset = "0x14DAF44", VA = "0x14DAF44")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0x14DB328", Offset = "0x14DB328", VA = "0x14DB328")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x20004C1")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x20004C2")]
		public enum SegmentType
		{
			[Token(Token = "0x40025B8")]
			Straight,
			[Token(Token = "0x40025B9")]
			LeftTurn,
			[Token(Token = "0x40025BA")]
			RightTurn,
			[Token(Token = "0x40025BB")]
			Switch
		}

		[Token(Token = "0x40025AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x40025AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x40025AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x40025AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x40025AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x40025AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x40025B0")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x40025B1")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x40025B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x40025B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5865F8", Offset = "0x5865F8")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x40025B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x40025B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x40025B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x17000458")]
		public float StartDistance
		{
			[Token(Token = "0x6001D3D")]
			[Address(RVA = "0x1672574", Offset = "0x1672574", VA = "0x1672574")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58D05C", Offset = "0x58D05C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D3E")]
			[Address(RVA = "0x167257C", Offset = "0x167257C", VA = "0x167257C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58D06C", Offset = "0x58D06C")]
			set
			{
			}
		}

		[Token(Token = "0x17000459")]
		public float GridSize
		{
			[Token(Token = "0x6001D3F")]
			[Address(RVA = "0x1672584", Offset = "0x1672584", VA = "0x1672584")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D40")]
			[Address(RVA = "0x167258C", Offset = "0x167258C", VA = "0x167258C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700045A")]
		public int SubDivCount
		{
			[Token(Token = "0x6001D41")]
			[Address(RVA = "0x1672594", Offset = "0x1672594", VA = "0x1672594")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001D42")]
			[Address(RVA = "0x167259C", Offset = "0x167259C", VA = "0x167259C")]
			set
			{
			}
		}

		[Token(Token = "0x1700045B")]
		public SegmentType Type
		{
			[Token(Token = "0x6001D43")]
			[Address(RVA = "0x16725A4", Offset = "0x16725A4", VA = "0x16725A4")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x1700045C")]
		public Pose EndPose
		{
			[Token(Token = "0x6001D44")]
			[Address(RVA = "0x16725AC", Offset = "0x16725AC", VA = "0x16725AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045D")]
		public float Radius
		{
			[Token(Token = "0x6001D45")]
			[Address(RVA = "0x16728C0", Offset = "0x16728C0", VA = "0x16728C0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700045E")]
		public float SegmentLength
		{
			[Token(Token = "0x6001D47")]
			[Address(RVA = "0x1672614", Offset = "0x1672614", VA = "0x1672614")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0x16728D0", Offset = "0x16728D0", VA = "0x16728D0")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0x16728E8", Offset = "0x16728E8", VA = "0x16728E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0x1672654", Offset = "0x1672654", VA = "0x1672654")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0x16728EC", Offset = "0x16728EC", VA = "0x16728EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0x16728F0", Offset = "0x16728F0", VA = "0x16728F0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0x1672960", Offset = "0x1672960", VA = "0x1672960")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0x1673220", Offset = "0x1673220", VA = "0x1673220")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0x16734C8", Offset = "0x16734C8", VA = "0x16734C8")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x20004C3")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x20004C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579AB0", Offset = "0x579AB0")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40025CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x40025D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x40025D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x1700045F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D5D")]
				[Address(RVA = "0x1589DC0", Offset = "0x1589DC0", VA = "0x1589DC0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000460")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D5F")]
				[Address(RVA = "0x1589E08", Offset = "0x1589E08", VA = "0x1589E08", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D5A")]
			[Address(RVA = "0x1589C1C", Offset = "0x1589C1C", VA = "0x1589C1C")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6001D5B")]
			[Address(RVA = "0x1589C48", Offset = "0x1589C48", VA = "0x1589C48", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D5C")]
			[Address(RVA = "0x1589C4C", Offset = "0x1589C4C", VA = "0x1589C4C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D5E")]
			[Address(RVA = "0x1589DC8", Offset = "0x1589DC8", VA = "0x1589DC8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40025BC")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x40025BD")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x40025BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x40025BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x40025C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x40025C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x40025C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x40025C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40025C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x40025C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x40025C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x40025C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x40025C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x40025C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x40025CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x40025CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x40025CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0x158B130", Offset = "0x158B130", VA = "0x158B130")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0x158B1F4", Offset = "0x158B1F4", VA = "0x158B1F4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0x158B2A4", Offset = "0x158B2A4", VA = "0x158B2A4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0x158B41C", Offset = "0x158B41C", VA = "0x158B41C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0x158B5E4", Offset = "0x158B5E4", VA = "0x158B5E4")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x6001D54")]
		[Address(RVA = "0x158B6CC", Offset = "0x158B6CC", VA = "0x158B6CC")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0x158B8E0", Offset = "0x158B8E0", VA = "0x158B8E0")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0x158B7E0", Offset = "0x158B7E0", VA = "0x158B7E0")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x6001D57")]
		[Address(RVA = "0x158B7F4", Offset = "0x158B7F4", VA = "0x158B7F4")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x6001D58")]
		[Address(RVA = "0x158B938", Offset = "0x158B938", VA = "0x158B938")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58D07C", Offset = "0x58D07C")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0x158B9B8", Offset = "0x158B9B8", VA = "0x158B9B8")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x20004C5")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x40025D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x40025D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x17000461")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x6001D60")]
			[Address(RVA = "0x158BA68", Offset = "0x158BA68", VA = "0x158BA68")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0x158BA78", Offset = "0x158BA78", VA = "0x158BA78", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0x158BA80", Offset = "0x158BA80", VA = "0x158BA80", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0x158BDC0", Offset = "0x158BDC0", VA = "0x158BDC0")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x20004C6")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x40025D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x40025D5")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x40025D6")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x40025D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x40025D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x40025D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x40025DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x40025DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5866F8", Offset = "0x5866F8")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x40025DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x40025DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x40025DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x17000462")]
		public float Distance
		{
			[Token(Token = "0x6001D64")]
			[Address(RVA = "0x158BED8", Offset = "0x158BED8", VA = "0x158BED8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58D134", Offset = "0x58D134")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D65")]
			[Address(RVA = "0x158BEE0", Offset = "0x158BEE0", VA = "0x158BEE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58D144", Offset = "0x58D144")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000463")]
		public float Scale
		{
			[Token(Token = "0x6001D66")]
			[Address(RVA = "0x158BEE8", Offset = "0x158BEE8", VA = "0x158BEE8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D67")]
			[Address(RVA = "0x158BEF0", Offset = "0x158BEF0", VA = "0x158BEF0")]
			set
			{
			}
		}

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0x158BA7C", Offset = "0x158BA7C", VA = "0x158BA7C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001D69")]
		[Address(RVA = "0x158BEF8", Offset = "0x158BEF8", VA = "0x158BEF8")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0x158BAC8", Offset = "0x158BAC8", VA = "0x158BAC8")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0x158BCEC", Offset = "0x158BCEC", VA = "0x158BCEC")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x6001D6C")]
		public abstract void UpdatePosition();

		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0x158BE34", Offset = "0x158BE34", VA = "0x158BE34")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x20004C7")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x20004C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579AC0", Offset = "0x579AC0")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40025EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x40025EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x40025ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x40025EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x40025EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x40025F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x40025F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x40025F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x40025F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x40025F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x17000464")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D7B")]
				[Address(RVA = "0x158A0A4", Offset = "0x158A0A4", VA = "0x158A0A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000465")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D7D")]
				[Address(RVA = "0x158A0EC", Offset = "0x158A0EC", VA = "0x158A0EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D78")]
			[Address(RVA = "0x1589E10", Offset = "0x1589E10", VA = "0x1589E10")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001D79")]
			[Address(RVA = "0x1589E3C", Offset = "0x1589E3C", VA = "0x1589E3C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D7A")]
			[Address(RVA = "0x1589E40", Offset = "0x1589E40", VA = "0x1589E40", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D7C")]
			[Address(RVA = "0x158A0AC", Offset = "0x158A0AC", VA = "0x158A0AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40025DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40025E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x40025E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x40025E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x40025E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x40025E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x40025E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x40025E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x40025E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x40025E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0x158C088", Offset = "0x158C088", VA = "0x158C088")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0x158C0E8", Offset = "0x158C0E8", VA = "0x158C0E8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001D71")]
		[Address(RVA = "0x158C1F0", Offset = "0x158C1F0", VA = "0x158C1F0")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0x158C360", Offset = "0x158C360", VA = "0x158C360")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0x158C250", Offset = "0x158C250", VA = "0x158C250")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0x158C440", Offset = "0x158C440", VA = "0x158C440")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58D154", Offset = "0x58D154")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6001D75")]
		[Address(RVA = "0x158C4D0", Offset = "0x158C4D0", VA = "0x158C4D0")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0x158C57C", Offset = "0x158C57C", VA = "0x158C57C")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0x158C5DC", Offset = "0x158C5DC", VA = "0x158C5DC")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x20004C9")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x20004CA")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4002613")]
			Start,
			[Token(Token = "0x4002614")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4002615")]
			Stop
		}

		[Token(Token = "0x20004CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579AD0", Offset = "0x579AD0")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002616")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002617")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002618")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x4002619")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x400261A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x400261B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x400261C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x400261D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x400261E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x17000466")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D90")]
				[Address(RVA = "0x1700A50", Offset = "0x1700A50", VA = "0x1700A50", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000467")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D92")]
				[Address(RVA = "0x1700A98", Offset = "0x1700A98", VA = "0x1700A98", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D8D")]
			[Address(RVA = "0x17007E4", Offset = "0x17007E4", VA = "0x17007E4")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6001D8E")]
			[Address(RVA = "0x1700810", Offset = "0x1700810", VA = "0x1700810", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D8F")]
			[Address(RVA = "0x1700814", Offset = "0x1700814", VA = "0x1700814", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D91")]
			[Address(RVA = "0x1700A58", Offset = "0x1700A58", VA = "0x1700A58", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40025F5")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x40025F6")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x40025F7")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x40025F8")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x40025F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x586758", Offset = "0x586758")]
		protected float _initialSpeed;

		[Token(Token = "0x40025FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x40025FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x40025FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x40025FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x40025FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x40025FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4002600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4002601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4002602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4002603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4002604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4002605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4002606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4002607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x4002608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x4002609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x400260A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x400260B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x400260C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x400260D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x400260E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x400260F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x4002610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x4002611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0x158C640", Offset = "0x158C640", VA = "0x158C640")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0x158C7AC", Offset = "0x158C7AC", VA = "0x158C7AC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0x158C7B8", Offset = "0x158C7B8", VA = "0x158C7B8", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0x158C908", Offset = "0x158C908", VA = "0x158C908")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0x158C720", Offset = "0x158C720", VA = "0x158C720")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58D20C", Offset = "0x58D20C")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0x158C968", Offset = "0x158C968", VA = "0x158C968")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0x158C8A4", Offset = "0x158C8A4", VA = "0x158C8A4")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0x158CB84", Offset = "0x158CB84", VA = "0x158CB84")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6001D86")]
		[Address(RVA = "0x158CCC0", Offset = "0x158CCC0", VA = "0x158CCC0")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6001D87")]
		[Address(RVA = "0x158CBF0", Offset = "0x158CBF0", VA = "0x158CBF0")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x6001D88")]
		[Address(RVA = "0x158CD2C", Offset = "0x158CD2C", VA = "0x158CD2C")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x6001D89")]
		[Address(RVA = "0x158CD4C", Offset = "0x158CD4C", VA = "0x158CD4C")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0x158CDD8", Offset = "0x158CDD8", VA = "0x158CDD8")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0x158CE9C", Offset = "0x158CE9C", VA = "0x158CE9C")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0x158CEAC", Offset = "0x158CEAC", VA = "0x158CEAC")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x20004CC")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x400261F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x4002620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4002621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4002622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4002623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4002624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4002625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x17000468")]
		public float TrackLength
		{
			[Token(Token = "0x6001D93")]
			[Address(RVA = "0x158CF1C", Offset = "0x158CF1C", VA = "0x158CF1C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D94")]
			[Address(RVA = "0x158CF24", Offset = "0x158CF24", VA = "0x158CF24")]
			private set
			{
			}
		}

		[Token(Token = "0x6001D95")]
		[Address(RVA = "0x158CF2C", Offset = "0x158CF2C", VA = "0x158CF2C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D96")]
		[Address(RVA = "0x158BF68", Offset = "0x158BF68", VA = "0x158BF68")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x6001D97")]
		[Address(RVA = "0x158CF30", Offset = "0x158CF30", VA = "0x158CF30")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x6001D98")]
		[Address(RVA = "0x158D118", Offset = "0x158D118", VA = "0x158D118")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x6001D99")]
		[Address(RVA = "0x158D214", Offset = "0x158D214", VA = "0x158D214")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x20004CD")]
	public class Pose
	{
		[Token(Token = "0x4002626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4002627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0x154D4BC", Offset = "0x154D4BC", VA = "0x154D4BC")]
		public Pose()
		{
		}

		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0x154D500", Offset = "0x154D500", VA = "0x154D500")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x20004CE")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x20004CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579AE0", Offset = "0x579AE0")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002633")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002634")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002635")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4002636")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x4002637")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x4002638")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x1700046A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DA8")]
				[Address(RVA = "0x1704B74", Offset = "0x1704B74", VA = "0x1704B74", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700046B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DAA")]
				[Address(RVA = "0x1704BBC", Offset = "0x1704BBC", VA = "0x1704BBC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DA5")]
			[Address(RVA = "0x17049A4", Offset = "0x17049A4", VA = "0x17049A4")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001DA6")]
			[Address(RVA = "0x17049D0", Offset = "0x17049D0", VA = "0x17049D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DA7")]
			[Address(RVA = "0x17049D4", Offset = "0x17049D4", VA = "0x17049D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DA9")]
			[Address(RVA = "0x1704B7C", Offset = "0x1704B7C", VA = "0x1704B7C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579AF0", Offset = "0x579AF0")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002639")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400263A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400263B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x400263C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x400263D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x400263E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x1700046C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DAE")]
				[Address(RVA = "0x1704CCC", Offset = "0x1704CCC", VA = "0x1704CCC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700046D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DB0")]
				[Address(RVA = "0x1704D14", Offset = "0x1704D14", VA = "0x1704D14", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DAB")]
			[Address(RVA = "0x1704BC4", Offset = "0x1704BC4", VA = "0x1704BC4")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001DAC")]
			[Address(RVA = "0x1704BF0", Offset = "0x1704BF0", VA = "0x1704BF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DAD")]
			[Address(RVA = "0x1704BF4", Offset = "0x1704BF4", VA = "0x1704BF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DAF")]
			[Address(RVA = "0x1704CD4", Offset = "0x1704CD4", VA = "0x1704CD4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002628")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x4002629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x400262A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x400262B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x400262C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x400262D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x586940", Offset = "0x586940")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x400262E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x400262F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x4002630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4002631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4002632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x17000469")]
		public bool IsMoving
		{
			[Token(Token = "0x6001D9C")]
			[Address(RVA = "0x15D43D0", Offset = "0x15D43D0", VA = "0x15D43D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58D2C4", Offset = "0x58D2C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D9D")]
			[Address(RVA = "0x15D43D8", Offset = "0x15D43D8", VA = "0x15D43D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58D2D4", Offset = "0x58D2D4")]
			private set
			{
			}
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0x15D43E4", Offset = "0x15D43E4", VA = "0x15D43E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0x15D4420", Offset = "0x15D4420", VA = "0x15D4420")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0x15D4504", Offset = "0x15D4504", VA = "0x15D4504")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0x15D4578", Offset = "0x15D4578", VA = "0x15D4578")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58D2E4", Offset = "0x58D2E4")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0x15D4608", Offset = "0x15D4608", VA = "0x15D4608")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58D34C", Offset = "0x58D34C")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0x15D46C8", Offset = "0x15D46C8", VA = "0x15D46C8")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0x15D4734", Offset = "0x15D4734", VA = "0x15D4734")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x20004D1")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x400263F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4002640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x4002641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4002642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4002643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0x15D473C", Offset = "0x15D473C", VA = "0x15D473C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0x15D47BC", Offset = "0x15D47BC", VA = "0x15D47BC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0x15D48A0", Offset = "0x15D48A0", VA = "0x15D48A0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0x15D49D8", Offset = "0x15D49D8", VA = "0x15D49D8")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0x15D4A58", Offset = "0x15D4A58", VA = "0x15D4A58")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0x15D4B38", Offset = "0x15D4B38", VA = "0x15D4B38")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x20004D2")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4002645")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4002646")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4002647")]
		EUDT_None,
		[Token(Token = "0x4002648")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x20004D3")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x20004D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579B00", Offset = "0x579B00")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002661")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002662")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002663")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x1700046E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DCA")]
				[Address(RVA = "0x157CC90", Offset = "0x157CC90", VA = "0x157CC90", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700046F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DCC")]
				[Address(RVA = "0x157CCD8", Offset = "0x157CCD8", VA = "0x157CCD8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DC7")]
			[Address(RVA = "0x157CA60", Offset = "0x157CA60", VA = "0x157CA60")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6001DC8")]
			[Address(RVA = "0x157CA8C", Offset = "0x157CA8C", VA = "0x157CA8C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DC9")]
			[Address(RVA = "0x157CA90", Offset = "0x157CA90", VA = "0x157CA90", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DCB")]
			[Address(RVA = "0x157CC98", Offset = "0x157CC98", VA = "0x157CC98", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x400264A")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x400264B")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x400264C")]
		private const string noneID = "NoneID";

		[Token(Token = "0x400264D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x400264E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x400264F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x586980", Offset = "0x586980")]
		public GameObject mainCamera;

		[Token(Token = "0x4002650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x4002651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4002652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4002653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4002654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4002655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4002656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4002657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5869B8", Offset = "0x5869B8")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4002658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4002659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x400265A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x400265B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x400265C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x400265D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x400265E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x400265F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x4002660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0x16CCA18", Offset = "0x16CCA18", VA = "0x16CCA18")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0x16CD278", Offset = "0x16CD278", VA = "0x16CD278")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0x16CD3CC", Offset = "0x16CD3CC", VA = "0x16CD3CC")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0x16CD50C", Offset = "0x16CD50C", VA = "0x16CD50C")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0x16CD64C", Offset = "0x16CD64C", VA = "0x16CD64C")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0x16CD3A0", Offset = "0x16CD3A0", VA = "0x16CD3A0")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0x16CD72C", Offset = "0x16CD72C", VA = "0x16CD72C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58D454", Offset = "0x58D454")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0x16CD7AC", Offset = "0x16CD7AC", VA = "0x16CD7AC")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0x16CCE70", Offset = "0x16CCE70", VA = "0x16CCE70")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0x16CD908", Offset = "0x16CD908", VA = "0x16CD908")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0x16CD7E0", Offset = "0x16CD7E0", VA = "0x16CD7E0")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0x16CDC18", Offset = "0x16CDC18", VA = "0x16CDC18")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0x16CDD08", Offset = "0x16CDD08", VA = "0x16CDD08")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0x16CDDA0", Offset = "0x16CDDA0", VA = "0x16CDDA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58D4BC", Offset = "0x58D4BC")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0x16CDE00", Offset = "0x16CDE00", VA = "0x16CDE00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58D4CC", Offset = "0x58D4CC")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0x16CDE60", Offset = "0x16CDE60", VA = "0x16CDE60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58D4DC", Offset = "0x58D4DC")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x20004D5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x579B10", Offset = "0x579B10")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579B78", Offset = "0x579B78")]
		private sealed class <>c
		{
			[Token(Token = "0x4002680")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002681")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6001DDA")]
			[Address(RVA = "0x1513F3C", Offset = "0x1513F3C", VA = "0x1513F3C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001DDB")]
			[Address(RVA = "0x1513F44", Offset = "0x1513F44", VA = "0x1513F44")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4002664")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4002665")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4002666")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4002667")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4002668")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4002669")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x400266A")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x400266B")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x400266C")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x400266D")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x400266E")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x400266F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4002670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4002671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x4002672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x4002673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x4002674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x4002675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4002676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4002677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4002678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4002679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x400267A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x400267B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x400267C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x400267D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x400267E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x400267F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0x169A2F8", Offset = "0x169A2F8", VA = "0x169A2F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0x169A35C", Offset = "0x169A35C", VA = "0x169A35C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0x169A800", Offset = "0x169A800", VA = "0x169A800")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0x169A8F4", Offset = "0x169A8F4", VA = "0x169A8F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0x169AA60", Offset = "0x169AA60", VA = "0x169AA60")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0x169AD70", Offset = "0x169AD70", VA = "0x169AD70")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0x169AE68", Offset = "0x169AE68", VA = "0x169AE68")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0x169AFC8", Offset = "0x169AFC8", VA = "0x169AFC8")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0x169AB00", Offset = "0x169AB00", VA = "0x169AB00")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0x169AB54", Offset = "0x169AB54", VA = "0x169AB54")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0x169A6A4", Offset = "0x169A6A4", VA = "0x169A6A4")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0x169B104", Offset = "0x169B104", VA = "0x169B104")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x20004D7")]
	public enum HandPoseId
	{
		[Token(Token = "0x4002683")]
		Default,
		[Token(Token = "0x4002684")]
		Generic,
		[Token(Token = "0x4002685")]
		PingPongBall,
		[Token(Token = "0x4002686")]
		Controller
	}
	[Token(Token = "0x20004D8")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4002687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4002688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4002689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x17000470")]
		public bool AllowPointing
		{
			[Token(Token = "0x6001DDC")]
			[Address(RVA = "0x169F3DC", Offset = "0x169F3DC", VA = "0x169F3DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000471")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6001DDD")]
			[Address(RVA = "0x169F3E4", Offset = "0x169F3E4", VA = "0x169F3E4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000472")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6001DDE")]
			[Address(RVA = "0x169F3EC", Offset = "0x169F3EC", VA = "0x169F3EC")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0x169F3F4", Offset = "0x169F3F4", VA = "0x169F3F4")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x20004D9")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x400268A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x400268B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x400268C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0x1668C24", Offset = "0x1668C24", VA = "0x1668C24")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0x1668F14", Offset = "0x1668F14", VA = "0x1668F14")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0x1668F70", Offset = "0x1668F70", VA = "0x1668F70")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0x1668FB4", Offset = "0x1668FB4", VA = "0x1668FB4")]
		public TouchController()
		{
		}
	}
}
namespace DentedPixel.LTExamples
{
	[Token(Token = "0x20004DA")]
	public class PathBezier : MonoBehaviour
	{
		[Token(Token = "0x400268D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform[] trans;

		[Token(Token = "0x400268E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LTBezierPath cr;

		[Token(Token = "0x400268F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject avatar1;

		[Token(Token = "0x4002690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float iter;

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0x15EBB94", Offset = "0x15EBB94", VA = "0x15EBB94")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0x15EBDF4", Offset = "0x15EBDF4", VA = "0x15EBDF4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0x15EBFA0", Offset = "0x15EBFA0", VA = "0x15EBFA0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0x15EBFF4", Offset = "0x15EBFF4", VA = "0x15EBFF4")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0x15EC04C", Offset = "0x15EC04C", VA = "0x15EC04C")]
		public PathBezier()
		{
		}
	}
	[Token(Token = "0x20004DB")]
	public class TestingUnitTests : MonoBehaviour
	{
		[Token(Token = "0x20004DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579B88", Offset = "0x579B88")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x40026A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TestingUnitTests <>4__this;

			[Token(Token = "0x40026A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject[] cubes;

			[Token(Token = "0x40026A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int[] tweenIds;

			[Token(Token = "0x40026A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int onCompleteCount;

			[Token(Token = "0x40026A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject cubeToTrans;

			[Token(Token = "0x40026AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector3 cubeDestEnd;

			[Token(Token = "0x40026AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public GameObject cubeSpline;

			[Token(Token = "0x40026AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public int jumpTimeId;

			[Token(Token = "0x40026AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public GameObject jumpCube;

			[Token(Token = "0x40026AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public GameObject zeroCube;

			[Token(Token = "0x40026AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public GameObject cubeScale;

			[Token(Token = "0x40026B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public GameObject cubeRotate;

			[Token(Token = "0x40026B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public GameObject cubeRotateA;

			[Token(Token = "0x40026B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public GameObject cubeRotateB;

			[Token(Token = "0x40026B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public float onStartTime;

			[Token(Token = "0x40026B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			public Vector3 beforePos;

			[Token(Token = "0x40026B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public Vector3 beforePos2;

			[Token(Token = "0x40026B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			public int totalEasingCheck;

			[Token(Token = "0x40026B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public int totalEasingCheckSuccess;

			[Token(Token = "0x40026B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			public bool value2UpdateCalled;

			[Token(Token = "0x40026B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public Action <>9__21;

			[Token(Token = "0x6001DF3")]
			[Address(RVA = "0x1582DA0", Offset = "0x1582DA0", VA = "0x1582DA0")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6001DF4")]
			[Address(RVA = "0x1582DA8", Offset = "0x1582DA8", VA = "0x1582DA8")]
			internal void <Start>b__0()
			{
			}

			[Token(Token = "0x6001DF5")]
			[Address(RVA = "0x1582E64", Offset = "0x1582E64", VA = "0x1582E64")]
			internal void <Start>b__1()
			{
			}

			[Token(Token = "0x6001DF6")]
			[Address(RVA = "0x1583060", Offset = "0x1583060", VA = "0x1583060")]
			internal void <Start>b__21()
			{
			}

			[Token(Token = "0x6001DF7")]
			[Address(RVA = "0x1583100", Offset = "0x1583100", VA = "0x1583100")]
			internal void <Start>b__2()
			{
			}

			[Token(Token = "0x6001DF8")]
			[Address(RVA = "0x15831C0", Offset = "0x15831C0", VA = "0x15831C0")]
			internal void <Start>b__4()
			{
			}

			[Token(Token = "0x6001DF9")]
			[Address(RVA = "0x1583298", Offset = "0x1583298", VA = "0x1583298")]
			internal void <Start>b__5()
			{
			}

			[Token(Token = "0x6001DFA")]
			[Address(RVA = "0x15834BC", Offset = "0x15834BC", VA = "0x15834BC")]
			internal void <Start>b__6()
			{
			}

			[Token(Token = "0x6001DFB")]
			[Address(RVA = "0x15835EC", Offset = "0x15835EC", VA = "0x15835EC")]
			internal void <Start>b__8()
			{
			}

			[Token(Token = "0x6001DFC")]
			[Address(RVA = "0x158375C", Offset = "0x158375C", VA = "0x158375C")]
			internal void <Start>b__9()
			{
			}

			[Token(Token = "0x6001DFD")]
			[Address(RVA = "0x15838D0", Offset = "0x15838D0", VA = "0x15838D0")]
			internal void <Start>b__10()
			{
			}

			[Token(Token = "0x6001DFE")]
			[Address(RVA = "0x1583A44", Offset = "0x1583A44", VA = "0x1583A44")]
			internal void <Start>b__11()
			{
			}

			[Token(Token = "0x6001DFF")]
			[Address(RVA = "0x1583BF4", Offset = "0x1583BF4", VA = "0x1583BF4")]
			internal void <Start>b__13(object completeObj)
			{
			}

			[Token(Token = "0x6001E00")]
			[Address(RVA = "0x1583D54", Offset = "0x1583D54", VA = "0x1583D54")]
			internal void <Start>b__14()
			{
			}

			[Token(Token = "0x6001E01")]
			[Address(RVA = "0x1583F6C", Offset = "0x1583F6C", VA = "0x1583F6C")]
			internal void <Start>b__15()
			{
			}

			[Token(Token = "0x6001E02")]
			[Address(RVA = "0x1583F94", Offset = "0x1583F94", VA = "0x1583F94")]
			internal void <Start>b__16()
			{
			}

			[Token(Token = "0x6001E03")]
			[Address(RVA = "0x1584080", Offset = "0x1584080", VA = "0x1584080")]
			internal void <Start>b__17()
			{
			}

			[Token(Token = "0x6001E04")]
			[Address(RVA = "0x15844BC", Offset = "0x15844BC", VA = "0x15844BC")]
			internal void <Start>b__19(Vector2 value)
			{
			}

			[Token(Token = "0x6001E05")]
			[Address(RVA = "0x15844C8", Offset = "0x15844C8", VA = "0x15844C8")]
			internal void <Start>b__20()
			{
			}
		}

		[Token(Token = "0x20004DD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579B98", Offset = "0x579B98")]
		private sealed class <>c__DisplayClass21_1
		{
			[Token(Token = "0x40026BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float beforeX;

			[Token(Token = "0x40026BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass21_0 CS$<>8__locals1;

			[Token(Token = "0x6001E06")]
			[Address(RVA = "0x15834B4", Offset = "0x15834B4", VA = "0x15834B4")]
			public <>c__DisplayClass21_1()
			{
			}

			[Token(Token = "0x6001E07")]
			[Address(RVA = "0x1584558", Offset = "0x1584558", VA = "0x1584558")]
			internal void <Start>b__23()
			{
			}
		}

		[Token(Token = "0x20004DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579BA8", Offset = "0x579BA8")]
		private sealed class <>c__DisplayClass21_2
		{
			[Token(Token = "0x40026BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int totalTweenTypeLength;

			[Token(Token = "0x40026BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass21_0 CS$<>8__locals2;

			[Token(Token = "0x40026BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<object> <>9__24;

			[Token(Token = "0x6001E08")]
			[Address(RVA = "0x15849A0", Offset = "0x15849A0", VA = "0x15849A0")]
			public <>c__DisplayClass21_2()
			{
			}

			[Token(Token = "0x6001E09")]
			[Address(RVA = "0x15849A8", Offset = "0x15849A8", VA = "0x15849A8")]
			internal void <Start>b__24(object obj)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579BB8", Offset = "0x579BB8")]
		private sealed class <>c
		{
			[Token(Token = "0x40026BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40026C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__21_3;

			[Token(Token = "0x40026C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action <>9__21_22;

			[Token(Token = "0x40026C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action <>9__21_7;

			[Token(Token = "0x40026C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Action<float> <>9__21_12;

			[Token(Token = "0x40026C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Action <>9__21_18;

			[Token(Token = "0x6001E0B")]
			[Address(RVA = "0x1582B7C", Offset = "0x1582B7C", VA = "0x1582B7C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001E0C")]
			[Address(RVA = "0x1582B84", Offset = "0x1582B84", VA = "0x1582B84")]
			internal void <Start>b__21_3()
			{
			}

			[Token(Token = "0x6001E0D")]
			[Address(RVA = "0x1582C00", Offset = "0x1582C00", VA = "0x1582C00")]
			internal void <Start>b__21_22()
			{
			}

			[Token(Token = "0x6001E0E")]
			[Address(RVA = "0x1582C04", Offset = "0x1582C04", VA = "0x1582C04")]
			internal void <Start>b__21_7()
			{
			}

			[Token(Token = "0x6001E0F")]
			[Address(RVA = "0x1582C80", Offset = "0x1582C80", VA = "0x1582C80")]
			internal void <Start>b__21_12(float val)
			{
			}

			[Token(Token = "0x6001E10")]
			[Address(RVA = "0x1582D0C", Offset = "0x1582D0C", VA = "0x1582D0C")]
			internal void <Start>b__21_18()
			{
			}
		}

		[Token(Token = "0x20004E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579BC8", Offset = "0x579BC8")]
		private sealed class <>c__DisplayClass23_0
		{
			[Token(Token = "0x40026C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TestingUnitTests <>4__this;

			[Token(Token = "0x40026C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int pauseCount;

			[Token(Token = "0x40026C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject cubeRound;

			[Token(Token = "0x40026C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 onStartPos;

			[Token(Token = "0x40026C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 onStartPosSpline;

			[Token(Token = "0x40026CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public GameObject cubeSpline;

			[Token(Token = "0x40026CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int setOnStartNum;

			[Token(Token = "0x40026CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public bool setPosOnUpdate;

			[Token(Token = "0x40026CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public int setPosNum;

			[Token(Token = "0x40026CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public bool hasGroupTweensCheckStarted;

			[Token(Token = "0x40026CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float previousXlt4;

			[Token(Token = "0x40026D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public bool onUpdateWasCalled;

			[Token(Token = "0x40026D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public float start;

			[Token(Token = "0x40026D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public float expectedTime;

			[Token(Token = "0x40026D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public bool didGetCorrectOnUpdate;

			[Token(Token = "0x40026D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Action <>9__10;

			[Token(Token = "0x40026D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Action<Vector3> <>9__11;

			[Token(Token = "0x40026D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public Action <>9__13;

			[Token(Token = "0x40026D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public Action<object> <>9__12;

			[Token(Token = "0x6001E11")]
			[Address(RVA = "0x1584ADC", Offset = "0x1584ADC", VA = "0x1584ADC")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x6001E12")]
			[Address(RVA = "0x1584AE4", Offset = "0x1584AE4", VA = "0x1584AE4")]
			internal void <timeBasedTesting>b__0()
			{
			}

			[Token(Token = "0x6001E13")]
			[Address(RVA = "0x1584B14", Offset = "0x1584B14", VA = "0x1584B14")]
			internal void <timeBasedTesting>b__1()
			{
			}

			[Token(Token = "0x6001E14")]
			[Address(RVA = "0x1584B44", Offset = "0x1584B44", VA = "0x1584B44")]
			internal void <timeBasedTesting>b__2(float val)
			{
			}

			[Token(Token = "0x6001E15")]
			[Address(RVA = "0x1584B54", Offset = "0x1584B54", VA = "0x1584B54")]
			internal void <timeBasedTesting>b__3()
			{
			}

			[Token(Token = "0x6001E16")]
			[Address(RVA = "0x1584CCC", Offset = "0x1584CCC", VA = "0x1584CCC")]
			internal void <timeBasedTesting>b__4()
			{
			}

			[Token(Token = "0x6001E17")]
			[Address(RVA = "0x158507C", Offset = "0x158507C", VA = "0x158507C")]
			internal void <timeBasedTesting>b__10()
			{
			}

			[Token(Token = "0x6001E18")]
			[Address(RVA = "0x158508C", Offset = "0x158508C", VA = "0x158508C")]
			internal void <timeBasedTesting>b__11(Vector3 newPosition)
			{
			}

			[Token(Token = "0x6001E19")]
			[Address(RVA = "0x15850E0", Offset = "0x15850E0", VA = "0x15850E0")]
			internal void <timeBasedTesting>b__12(object param)
			{
			}

			[Token(Token = "0x6001E1A")]
			[Address(RVA = "0x158539C", Offset = "0x158539C", VA = "0x158539C")]
			internal void <timeBasedTesting>b__13()
			{
			}

			[Token(Token = "0x6001E1B")]
			[Address(RVA = "0x158563C", Offset = "0x158563C", VA = "0x158563C")]
			internal void <timeBasedTesting>b__5()
			{
			}

			[Token(Token = "0x6001E1C")]
			[Address(RVA = "0x1585A28", Offset = "0x1585A28", VA = "0x1585A28")]
			internal void <timeBasedTesting>b__6(float val)
			{
			}

			[Token(Token = "0x6001E1D")]
			[Address(RVA = "0x1585A34", Offset = "0x1585A34", VA = "0x1585A34")]
			internal void <timeBasedTesting>b__7()
			{
			}

			[Token(Token = "0x6001E1E")]
			[Address(RVA = "0x1585C58", Offset = "0x1585C58", VA = "0x1585C58")]
			internal void <timeBasedTesting>b__8(Vector3 val)
			{
			}

			[Token(Token = "0x6001E1F")]
			[Address(RVA = "0x1585C98", Offset = "0x1585C98", VA = "0x1585C98")]
			internal void <timeBasedTesting>b__9()
			{
			}
		}

		[Token(Token = "0x20004E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579BD8", Offset = "0x579BD8")]
		private sealed class <timeBasedTesting>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40026D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40026D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40026DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TestingUnitTests <>4__this;

			[Token(Token = "0x40026DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass23_0 <>8__1;

			[Token(Token = "0x40026DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <descriptionMatchCount>5__2;

			[Token(Token = "0x17000473")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E23")]
				[Address(RVA = "0x15886BC", Offset = "0x15886BC", VA = "0x15886BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000474")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E25")]
				[Address(RVA = "0x1588704", Offset = "0x1588704", VA = "0x1588704", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E20")]
			[Address(RVA = "0x15867B4", Offset = "0x15867B4", VA = "0x15867B4")]
			[DebuggerHidden]
			public <timeBasedTesting>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6001E21")]
			[Address(RVA = "0x15867E0", Offset = "0x15867E0", VA = "0x15867E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E22")]
			[Address(RVA = "0x15867E4", Offset = "0x15867E4", VA = "0x15867E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E24")]
			[Address(RVA = "0x15886C4", Offset = "0x15886C4", VA = "0x15886C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579BE8", Offset = "0x579BE8")]
		private sealed class <lotsOfCancels>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40026DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40026DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40026DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TestingUnitTests <>4__this;

			[Token(Token = "0x40026E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <cubeCount>5__2;

			[Token(Token = "0x40026E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int[] <tweensA>5__3;

			[Token(Token = "0x40026E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private GameObject[] <aGOs>5__4;

			[Token(Token = "0x40026E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int[] <tweensB>5__5;

			[Token(Token = "0x40026E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private GameObject[] <bGOs>5__6;

			[Token(Token = "0x17000475")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E29")]
				[Address(RVA = "0x1586764", Offset = "0x1586764", VA = "0x1586764", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000476")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E2B")]
				[Address(RVA = "0x15867AC", Offset = "0x15867AC", VA = "0x15867AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E26")]
			[Address(RVA = "0x1585D28", Offset = "0x1585D28", VA = "0x1585D28")]
			[DebuggerHidden]
			public <lotsOfCancels>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6001E27")]
			[Address(RVA = "0x1585D54", Offset = "0x1585D54", VA = "0x1585D54", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E28")]
			[Address(RVA = "0x1585D58", Offset = "0x1585D58", VA = "0x1585D58", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E2A")]
			[Address(RVA = "0x158676C", Offset = "0x158676C", VA = "0x158676C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject cube1;

		[Token(Token = "0x4002692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject cube2;

		[Token(Token = "0x4002693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject cube3;

		[Token(Token = "0x4002694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject cube4;

		[Token(Token = "0x4002695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject cubeAlpha1;

		[Token(Token = "0x4002696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject cubeAlpha2;

		[Token(Token = "0x4002697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool eventGameObjectWasCalled;

		[Token(Token = "0x4002698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool eventGeneralWasCalled;

		[Token(Token = "0x4002699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int lt1Id;

		[Token(Token = "0x400269A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private LTDescr lt2;

		[Token(Token = "0x400269B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private LTDescr lt3;

		[Token(Token = "0x400269C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private LTDescr lt4;

		[Token(Token = "0x400269D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private LTDescr[] groupTweens;

		[Token(Token = "0x400269E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject[] groupGOs;

		[Token(Token = "0x400269F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int groupTweensCnt;

		[Token(Token = "0x40026A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int rotateRepeat;

		[Token(Token = "0x40026A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int rotateRepeatAngle;

		[Token(Token = "0x40026A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GameObject boxNoCollider;

		[Token(Token = "0x40026A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float timeElapsedNormalTimeScale;

		[Token(Token = "0x40026A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float timeElapsedIgnoreTimeScale;

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0x166422C", Offset = "0x166422C", VA = "0x166422C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0x1664328", Offset = "0x1664328", VA = "0x1664328")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0x1665EBC", Offset = "0x1665EBC", VA = "0x1665EBC")]
		private GameObject cubeNamed(string name)
		{
			return null;
		}

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0x1665F64", Offset = "0x1665F64", VA = "0x1665F64")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58D53C", Offset = "0x58D53C")]
		private IEnumerator timeBasedTesting()
		{
			return null;
		}

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0x1665FE4", Offset = "0x1665FE4", VA = "0x1665FE4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58D5A4", Offset = "0x58D5A4")]
		private IEnumerator lotsOfCancels()
		{
			return null;
		}

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0x1666064", Offset = "0x1666064", VA = "0x1666064")]
		private void rotateRepeatFinished()
		{
		}

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0x16660CC", Offset = "0x16660CC", VA = "0x16660CC")]
		private void rotateRepeatAllFinished()
		{
		}

		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0x16662F8", Offset = "0x16662F8", VA = "0x16662F8")]
		private void eventGameObjectCalled(LTEvent e)
		{
		}

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0x1666304", Offset = "0x1666304", VA = "0x1666304")]
		private void eventGeneralCalled(LTEvent e)
		{
		}

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0x1666310", Offset = "0x1666310", VA = "0x1666310")]
		public TestingUnitTests()
		{
		}
	}
}
namespace HighlightPlus
{
	[Token(Token = "0x20004E3")]
	public delegate bool OnObjectHighlightStartEvent(GameObject obj);
	[Token(Token = "0x20004E4")]
	public delegate void OnObjectHighlightEndEvent(GameObject obj);
	[Token(Token = "0x20004E5")]
	public delegate bool OnRendererHighlightEvent(Renderer renderer);
	[Token(Token = "0x20004E6")]
	public delegate void OnTargetAnimatesEvent(Vector3 center, Quaternion rotation, Vector3 scale, float t);
	[Token(Token = "0x20004E7")]
	public enum NormalsOption
	{
		[Token(Token = "0x40026E6")]
		Smooth,
		[Token(Token = "0x40026E7")]
		PreserveOriginal,
		[Token(Token = "0x40026E8")]
		Reorient
	}
	[Token(Token = "0x20004E8")]
	public enum SeeThroughMode
	{
		[Token(Token = "0x40026EA")]
		WhenHighlighted,
		[Token(Token = "0x40026EB")]
		AlwaysWhenOccluded,
		[Token(Token = "0x40026EC")]
		Never
	}
	[Token(Token = "0x20004E9")]
	public enum QualityLevel
	{
		[Token(Token = "0x40026EE")]
		Fastest,
		[Token(Token = "0x40026EF")]
		High,
		[Token(Token = "0x40026F0")]
		Highest,
		[Token(Token = "0x40026F1")]
		Medium
	}
	[Token(Token = "0x20004EA")]
	public static class QualityLevelExtensions
	{
		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0x1558D78", Offset = "0x1558D78", VA = "0x1558D78")]
		public static bool UsesMultipleOffsets(this QualityLevel qualityLevel)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004EB")]
	public enum TargetOptions
	{
		[Token(Token = "0x40026F3")]
		Children,
		[Token(Token = "0x40026F4")]
		OnlyThisObject,
		[Token(Token = "0x40026F5")]
		RootToChildren,
		[Token(Token = "0x40026F6")]
		LayerInScene,
		[Token(Token = "0x40026F7")]
		LayerInChildren,
		[Token(Token = "0x40026F8")]
		Scripting
	}
	[Token(Token = "0x20004EC")]
	public enum Visibility
	{
		[Token(Token = "0x40026FA")]
		Normal,
		[Token(Token = "0x40026FB")]
		AlwaysOnTop,
		[Token(Token = "0x40026FC")]
		OnlyWhenOccluded
	}
	[Serializable]
	[Token(Token = "0x20004ED")]
	public struct GlowPassData
	{
		[Token(Token = "0x40026FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float offset;

		[Token(Token = "0x40026FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float alpha;

		[Token(Token = "0x40026FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Color color;
	}
	[Token(Token = "0x20004EE")]
	[ExecuteInEditMode]
	public class HighlightEffect : MonoBehaviour
	{
		[Token(Token = "0x20004EF")]
		private struct ModelMaterials
		{
			[Token(Token = "0x40027AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool render;

			[Token(Token = "0x40027AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Transform transform;

			[Token(Token = "0x40027AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool bakedTransform;

			[Token(Token = "0x40027AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 currentPosition;

			[Token(Token = "0x40027B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 currentRotation;

			[Token(Token = "0x40027B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 currentScale;

			[Token(Token = "0x40027B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool renderWasVisibleDuringSetup;

			[Token(Token = "0x40027B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Mesh mesh;

			[Token(Token = "0x40027B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Mesh originalMesh;

			[Token(Token = "0x40027B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Renderer renderer;

			[Token(Token = "0x40027B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public bool isSkinnedMesh;

			[Token(Token = "0x40027B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public NormalsOption normalsOption;

			[Token(Token = "0x40027B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Material[] fxMatMask;

			[Token(Token = "0x40027B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Material[] fxMatSolidColor;

			[Token(Token = "0x40027BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Material[] fxMatSeeThroughInner;

			[Token(Token = "0x40027BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Material[] fxMatSeeThroughBorder;

			[Token(Token = "0x40027BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public Material[] fxMatOverlay;

			[Token(Token = "0x40027BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public Material[] fxMatInnerGlow;

			[Token(Token = "0x40027BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Matrix4x4 renderingMatrix;

			[Token(Token = "0x40027BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public bool isCombined;

			[Token(Token = "0x1700047F")]
			public bool preserveOriginalMesh
			{
				[Token(Token = "0x6001E80")]
				[Address(RVA = "0x1514538", Offset = "0x1514538", VA = "0x1514538")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001E81")]
			[Address(RVA = "0x1514558", Offset = "0x1514558", VA = "0x1514558")]
			public void Init()
			{
			}
		}

		[Token(Token = "0x20004F0")]
		private enum FadingState
		{
			[Token(Token = "0x40027C1")]
			FadingOut = -1,
			[Token(Token = "0x40027C2")]
			NoFading,
			[Token(Token = "0x40027C3")]
			FadingIn
		}

		[Token(Token = "0x4002700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HighlightProfile profile;

		[Token(Token = "0x4002701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586A70", Offset = "0x586A70")]
		public bool profileSync;

		[Token(Token = "0x4002702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool previewInEditor;

		[Token(Token = "0x4002703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public TargetOptions effectGroup;

		[Token(Token = "0x4002704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586AA8", Offset = "0x586AA8")]
		public LayerMask effectGroupLayer;

		[Token(Token = "0x4002705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586AE0", Offset = "0x586AE0")]
		public string effectNameFilter;

		[Token(Token = "0x4002706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586B18", Offset = "0x586B18")]
		public bool combineMeshes;

		[Token(Token = "0x4002707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586B50", Offset = "0x586B50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x586B50", Offset = "0x586B50")]
		public float alphaCutOff;

		[Token(Token = "0x4002708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586BA4", Offset = "0x586BA4")]
		public bool cullBackFaces;

		[Token(Token = "0x4002709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586BDC", Offset = "0x586BDC")]
		public bool ignoreObjectVisibility;

		[Token(Token = "0x400270A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586C14", Offset = "0x586C14")]
		public bool reflectionProbes;

		[Token(Token = "0x400270B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586C4C", Offset = "0x586C4C")]
		public bool GPUInstancing;

		[Token(Token = "0x400270C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586C84", Offset = "0x586C84")]
		public bool depthClip;

		[Token(Token = "0x400270D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586CBC", Offset = "0x586CBC")]
		public NormalsOption normalsOption;

		[Token(Token = "0x400270E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586CF4", Offset = "0x586CF4")]
		public bool ignore;

		[Token(Token = "0x400270F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		[SerializeField]
		private bool _highlighted;

		[Token(Token = "0x4002710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float fadeInDuration;

		[Token(Token = "0x4002711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float fadeOutDuration;

		[Token(Token = "0x4002712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool flipY;

		[Token(Token = "0x4002713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586D3C", Offset = "0x586D3C")]
		public bool constantWidth;

		[Token(Token = "0x4002714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586D74", Offset = "0x586D74")]
		public int subMeshMask;

		[Token(Token = "0x4002715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x586DAC", Offset = "0x586DAC")]
		public float overlay;

		[Token(Token = "0x4002716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x586DC4", Offset = "0x586DC4")]
		public Color overlayColor;

		[Token(Token = "0x4002717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float overlayAnimationSpeed;

		[Token(Token = "0x4002718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x586DDC", Offset = "0x586DDC")]
		public float overlayMinIntensity;

		[Token(Token = "0x4002719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x586DF4", Offset = "0x586DF4")]
		public float overlayBlending;

		[Token(Token = "0x400271A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x586E0C", Offset = "0x586E0C")]
		public float outline;

		[Token(Token = "0x400271B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x586E24", Offset = "0x586E24")]
		public Color outlineColor;

		[Token(Token = "0x400271C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float outlineWidth;

		[Token(Token = "0x400271D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public QualityLevel outlineQuality;

		[Token(Token = "0x400271E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x586E3C", Offset = "0x586E3C")]
		public int outlineDownsampling;

		[Token(Token = "0x400271F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Visibility outlineVisibility;

		[Token(Token = "0x4002720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public bool outlineOptimalBlit;

		[Token(Token = "0x4002721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
		public bool outlineBlitDebug;

		[Token(Token = "0x4002722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA6")]
		public bool outlineIndependent;

		[Token(Token = "0x4002723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x586E54", Offset = "0x586E54")]
		public float glow;

		[Token(Token = "0x4002724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float glowWidth;

		[Token(Token = "0x4002725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public QualityLevel glowQuality;

		[Token(Token = "0x4002726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x586E6C", Offset = "0x586E6C")]
		public int glowDownsampling;

		[Token(Token = "0x4002727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x586E84", Offset = "0x586E84")]
		public Color glowHQColor;

		[Token(Token = "0x4002728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586E9C", Offset = "0x586E9C")]
		public bool glowDithering;

		[Token(Token = "0x4002729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586ED4", Offset = "0x586ED4")]
		public float glowMagicNumber1;

		[Token(Token = "0x400272A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586F0C", Offset = "0x586F0C")]
		public float glowMagicNumber2;

		[Token(Token = "0x400272B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float glowAnimationSpeed;

		[Token(Token = "0x400272C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Visibility glowVisibility;

		[Token(Token = "0x400272D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586F44", Offset = "0x586F44")]
		public bool glowOptimalBlit;

		[Token(Token = "0x400272E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		public bool glowBlitDebug;

		[Token(Token = "0x400272F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDE")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586F7C", Offset = "0x586F7C")]
		public bool glowBlendPasses;

		[Token(Token = "0x4002730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public GlowPassData[] glowPasses;

		[Token(Token = "0x4002731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x586FB4", Offset = "0x586FB4")]
		public float innerGlow;

		[Token(Token = "0x4002732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x586FCC", Offset = "0x586FCC")]
		public float innerGlowWidth;

		[Token(Token = "0x4002733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x586FE4", Offset = "0x586FE4")]
		public Color innerGlowColor;

		[Token(Token = "0x4002734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Visibility innerGlowVisibility;

		[Token(Token = "0x4002735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public bool targetFX;

		[Token(Token = "0x4002736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public Texture2D targetFXTexture;

		[Token(Token = "0x4002737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x586FFC", Offset = "0x586FFC")]
		public Color targetFXColor;

		[Token(Token = "0x4002738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public Transform targetFXCenter;

		[Token(Token = "0x4002739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public float targetFXRotationSpeed;

		[Token(Token = "0x400273A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public float targetFXInitialScale;

		[Token(Token = "0x400273B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public float targetFXEndScale;

		[Token(Token = "0x400273C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public float targetFXTransitionDuration;

		[Token(Token = "0x400273D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public float targetFXStayDuration;

		[Token(Token = "0x4002742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public SeeThroughMode seeThrough;

		[Token(Token = "0x4002743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		public LayerMask seeThroughOccluderMask;

		[Token(Token = "0x4002744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x587054", Offset = "0x587054")]
		public float seeThroughOccluderThreshold;

		[Token(Token = "0x4002745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		public float seeThroughOccluderCheckInterval;

		[Token(Token = "0x4002746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x587074", Offset = "0x587074")]
		public float seeThroughIntensity;

		[Token(Token = "0x4002747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58708C", Offset = "0x58708C")]
		public float seeThroughTintAlpha;

		[Token(Token = "0x4002748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public Color seeThroughTintColor;

		[Token(Token = "0x4002749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5870A4", Offset = "0x5870A4")]
		public float seeThroughNoise;

		[Token(Token = "0x400274A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5870BC", Offset = "0x5870BC")]
		public float seeThroughBorder;

		[Token(Token = "0x400274B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public Color seeThroughBorderColor;

		[Token(Token = "0x400274C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public float seeThroughBorderWidth;

		[Token(Token = "0x400274D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		[HideInInspector]
		private ModelMaterials[] rms;

		[Token(Token = "0x400274E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		[HideInInspector]
		private int rmsCount;

		[NonSerialized]
		[Token(Token = "0x400274F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public Transform target;

		[NonSerialized]
		[Token(Token = "0x4002750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public float highlightStartTime;

		[NonSerialized]
		[Token(Token = "0x4002751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		public float targetFxStartTime;

		[Token(Token = "0x4002752")]
		private const string SKW_ALPHACLIP = "HP_ALPHACLIP";

		[Token(Token = "0x4002753")]
		private const string SKW_DEPTHCLIP = "HP_DEPTHCLIP";

		[Token(Token = "0x4002754")]
		private const string UNIFORM_CUTOFF = "_CutOff";

		[Token(Token = "0x4002755")]
		private const float TAU = 0.70711f;

		[Token(Token = "0x4002756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Material fxMatMask;

		[Token(Token = "0x4002757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Material fxMatSolidColor;

		[Token(Token = "0x4002758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Material fxMatSeeThroughInner;

		[Token(Token = "0x4002759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Material fxMatSeeThroughBorder;

		[Token(Token = "0x400275A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Material fxMatOverlay;

		[Token(Token = "0x400275B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Material fxMatClearStencil;

		[Token(Token = "0x400275C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Material fxMatGlowRef;

		[Token(Token = "0x400275D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Material fxMatInnerGlow;

		[Token(Token = "0x400275E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static Material fxMatOutlineRef;

		[Token(Token = "0x400275F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static Material fxMatTargetRef;

		[Token(Token = "0x4002760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static Material fxMatComposeGlowRef;

		[Token(Token = "0x4002761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static Material fxMatComposeOutlineRef;

		[Token(Token = "0x4002762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static Material fxMatBlurGlowRef;

		[Token(Token = "0x4002763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static Material fxMatBlurOutlineRef;

		[Token(Token = "0x4002764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private Material _fxMatOutline;

		[Token(Token = "0x4002765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private Material _fxMatGlow;

		[Token(Token = "0x4002766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private Material _fxMatTarget;

		[Token(Token = "0x4002767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private Material _fxMatComposeGlow;

		[Token(Token = "0x4002768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private Material _fxMatComposeOutline;

		[Token(Token = "0x4002769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private Material _fxMatBlurGlow;

		[Token(Token = "0x400276A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private Material _fxMatBlurOutline;

		[Token(Token = "0x400276B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private static Vector4[] offsets;

		[Token(Token = "0x400276C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private float fadeStartTime;

		[Token(Token = "0x400276D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		private FadingState fading;

		[Token(Token = "0x400276E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private CommandBuffer cbMask;

		[Token(Token = "0x400276F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private CommandBuffer cbSeeThrough;

		[Token(Token = "0x4002770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private CommandBuffer cbGlow;

		[Token(Token = "0x4002771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private CommandBuffer cbOutline;

		[Token(Token = "0x4002772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private CommandBuffer cbOverlay;

		[Token(Token = "0x4002773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private CommandBuffer cbInnerGlow;

		[Token(Token = "0x4002774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private CommandBuffer cbSmoothBlend;

		[Token(Token = "0x4002775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private int[] mipGlowBuffers;

		[Token(Token = "0x4002776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private int[] mipOutlineBuffers;

		[Token(Token = "0x4002777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private int glowRT;

		[Token(Token = "0x4002778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		private int outlineRT;

		[Token(Token = "0x4002779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static Mesh quadMesh;

		[Token(Token = "0x400277A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private int sourceRT;

		[Token(Token = "0x400277B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		private Matrix4x4 quadGlowMatrix;

		[Token(Token = "0x400277C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		private Matrix4x4 quadOutlineMatrix;

		[Token(Token = "0x400277D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private Vector3[] corners;

		[Token(Token = "0x400277E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private RenderTextureDescriptor sourceDesc;

		[Token(Token = "0x400277F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
		private Color debugColor;

		[Token(Token = "0x4002780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		private Color blackColor;

		[Token(Token = "0x4002781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
		private Visibility lastOutlineVisibility;

		[Token(Token = "0x4002782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		private bool requireUpdateMaterial;

		[Token(Token = "0x4002783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x341")]
		private bool usingPipeline;

		[Token(Token = "0x4002784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
		private float occlusionCheckLastTime;

		[Token(Token = "0x4002785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		private bool lastOcclusionTestResult;

		[Token(Token = "0x4002786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x349")]
		private bool useGPUInstancing;

		[Token(Token = "0x4002787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		private MaterialPropertyBlock glowPropertyBlock;

		[Token(Token = "0x4002788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		private MaterialPropertyBlock outlinePropertyBlock;

		[Token(Token = "0x4002789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private static List<Vector4> matDataDirection;

		[Token(Token = "0x400278A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private static List<Vector4> matDataGlow;

		[Token(Token = "0x400278B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private static List<Vector4> matDataColor;

		[Token(Token = "0x400278C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private static Matrix4x4[] matrices;

		[Token(Token = "0x400278D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public static List<HighlightEffect> effects;

		[Token(Token = "0x400278E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		private bool skipThisFrame;

		[Token(Token = "0x400278F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x364")]
		private int outlineOffsetsMin;

		[Token(Token = "0x4002790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		private int outlineOffsetsMax;

		[Token(Token = "0x4002791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36C")]
		private int glowOffsetsMin;

		[Token(Token = "0x4002792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		private int glowOffsetsMax;

		[Token(Token = "0x4002793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private static CombineInstance[] combineInstances;

		[Token(Token = "0x4002794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x374")]
		private Matrix4x4 matrix4X4Identity;

		[Token(Token = "0x4002795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
		private List<Renderer> tempRR;

		[Token(Token = "0x4002796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private static List<Vector3> vertices;

		[Token(Token = "0x4002797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private static List<Vector3> normals;

		[Token(Token = "0x4002798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private static Vector3[] newNormals;

		[Token(Token = "0x4002799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private static int[] matches;

		[Token(Token = "0x400279A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private static readonly Dictionary<Vector3, int> vv;

		[Token(Token = "0x400279B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private static readonly Dictionary<int, Mesh> smoothMeshes;

		[Token(Token = "0x400279C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private static readonly Dictionary<int, Mesh> reorientedMeshes;

		[Token(Token = "0x400279D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private static readonly Dictionary<int, Mesh> combinedMeshes;

		[Token(Token = "0x400279E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private static readonly List<Material> rendererSharedMaterials;

		[Token(Token = "0x400279F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		private int combinedMeshesHashId;

		[Token(Token = "0x40027A0")]
		private const int MAX_VERTEX_COUNT = 65535;

		[Token(Token = "0x40027A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C4")]
		private float hitInitialIntensity;

		[Token(Token = "0x40027A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
		private float hitStartTime;

		[Token(Token = "0x40027A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3CC")]
		private float hitFadeOutDuration;

		[Token(Token = "0x40027A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
		private Color hitColor;

		[Token(Token = "0x40027A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
		private bool hitActive;

		[Token(Token = "0x40027A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private static List<HighlightSeeThroughOccluder> occluders;

		[Token(Token = "0x40027A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private static Dictionary<Camera, int> occludersFrameCount;

		[Token(Token = "0x40027A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private static CommandBuffer cbOccluder;

		[Token(Token = "0x40027A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private static Material fxMatOccluder;

		[Token(Token = "0x40027AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private static RaycastHit[] hits;

		[Token(Token = "0x40027AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E1")]
		private bool cancelSeeThroughThisFrame;

		[Token(Token = "0x17000477")]
		public bool highlighted
		{
			[Token(Token = "0x6001E3D")]
			[Address(RVA = "0x16A1F48", Offset = "0x16A1F48", VA = "0x16A1F48")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E3E")]
			[Address(RVA = "0x16A1F50", Offset = "0x16A1F50", VA = "0x16A1F50")]
			set
			{
			}
		}

		[Token(Token = "0x17000478")]
		private Material fxMatOutline
		{
			[Token(Token = "0x6001E47")]
			[Address(RVA = "0x16A2680", Offset = "0x16A2680", VA = "0x16A2680")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000479")]
		private Material fxMatGlow
		{
			[Token(Token = "0x6001E48")]
			[Address(RVA = "0x16A280C", Offset = "0x16A280C", VA = "0x16A280C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047A")]
		private Material fxMatTarget
		{
			[Token(Token = "0x6001E49")]
			[Address(RVA = "0x16A2998", Offset = "0x16A2998", VA = "0x16A2998")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047B")]
		private Material fxMatComposeGlow
		{
			[Token(Token = "0x6001E4A")]
			[Address(RVA = "0x16A2AF4", Offset = "0x16A2AF4", VA = "0x16A2AF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047C")]
		private Material fxMatComposeOutline
		{
			[Token(Token = "0x6001E4B")]
			[Address(RVA = "0x16A2C50", Offset = "0x16A2C50", VA = "0x16A2C50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047D")]
		private Material fxMatBlurGlow
		{
			[Token(Token = "0x6001E4C")]
			[Address(RVA = "0x16A2DAC", Offset = "0x16A2DAC", VA = "0x16A2DAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047E")]
		private Material fxMatBlurOutline
		{
			[Token(Token = "0x6001E4D")]
			[Address(RVA = "0x16A2F08", Offset = "0x16A2F08", VA = "0x16A2F08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000024")]
		public event OnObjectHighlightStartEvent OnObjectHighlightStart
		{
			[Token(Token = "0x6001E3F")]
			[Address(RVA = "0x16A2160", Offset = "0x16A2160", VA = "0x16A2160")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58D6BC", Offset = "0x58D6BC")]
			add
			{
			}
			[Token(Token = "0x6001E40")]
			[Address(RVA = "0x16A2204", Offset = "0x16A2204", VA = "0x16A2204")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58D6CC", Offset = "0x58D6CC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000025")]
		public event OnObjectHighlightEndEvent OnObjectHighlightEnd
		{
			[Token(Token = "0x6001E41")]
			[Address(RVA = "0x16A22A8", Offset = "0x16A22A8", VA = "0x16A22A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58D6DC", Offset = "0x58D6DC")]
			add
			{
			}
			[Token(Token = "0x6001E42")]
			[Address(RVA = "0x16A234C", Offset = "0x16A234C", VA = "0x16A234C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58D6EC", Offset = "0x58D6EC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000026")]
		public event OnRendererHighlightEvent OnRendererHighlightStart
		{
			[Token(Token = "0x6001E43")]
			[Address(RVA = "0x16A23F0", Offset = "0x16A23F0", VA = "0x16A23F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58D6FC", Offset = "0x58D6FC")]
			add
			{
			}
			[Token(Token = "0x6001E44")]
			[Address(RVA = "0x16A2494", Offset = "0x16A2494", VA = "0x16A2494")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58D70C", Offset = "0x58D70C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000027")]
		public event OnTargetAnimatesEvent OnTargetAnimates
		{
			[Token(Token = "0x6001E45")]
			[Address(RVA = "0x16A2538", Offset = "0x16A2538", VA = "0x16A2538")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58D71C", Offset = "0x58D71C")]
			add
			{
			}
			[Token(Token = "0x6001E46")]
			[Address(RVA = "0x16A25DC", Offset = "0x16A25DC", VA = "0x16A25DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58D72C", Offset = "0x58D72C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001E4E")]
		[Address(RVA = "0x16A3064", Offset = "0x16A3064", VA = "0x16A3064")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E4F")]
		[Address(RVA = "0x16A41DC", Offset = "0x16A41DC", VA = "0x16A41DC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E50")]
		[Address(RVA = "0x16A54CC", Offset = "0x16A54CC", VA = "0x16A54CC")]
		private void SRPAfterCameraRenders(ScriptableRenderContext context, Camera cam)
		{
		}

		[Token(Token = "0x6001E51")]
		[Address(RVA = "0x16A8D70", Offset = "0x16A8D70", VA = "0x16A8D70")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001E52")]
		[Address(RVA = "0x16A8D74", Offset = "0x16A8D74", VA = "0x16A8D74")]
		private void DestroyMaterial(Material mat)
		{
		}

		[Token(Token = "0x6001E53")]
		[Address(RVA = "0x16A8E1C", Offset = "0x16A8E1C", VA = "0x16A8E1C")]
		private void DestroyMaterialArray(Material[] mm)
		{
		}

		[Token(Token = "0x6001E54")]
		[Address(RVA = "0x16A8E88", Offset = "0x16A8E88", VA = "0x16A8E88")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001E55")]
		[Address(RVA = "0x16A916C", Offset = "0x16A916C", VA = "0x16A916C")]
		public static void DrawEffectsNow([Optional] Camera cam)
		{
		}

		[Token(Token = "0x6001E56")]
		[Address(RVA = "0x16A9338", Offset = "0x16A9338", VA = "0x16A9338")]
		private void OnRenderObject()
		{
		}

		[Token(Token = "0x6001E57")]
		[Address(RVA = "0x16A9378", Offset = "0x16A9378", VA = "0x16A9378")]
		public void ProfileLoad(HighlightProfile profile)
		{
		}

		[Token(Token = "0x6001E58")]
		[Address(RVA = "0x16A9418", Offset = "0x16A9418", VA = "0x16A9418")]
		public void ProfileReload()
		{
		}

		[Token(Token = "0x6001E59")]
		[Address(RVA = "0x16A94B8", Offset = "0x16A94B8", VA = "0x16A94B8")]
		public void ProfileSaveChanges(HighlightProfile profile)
		{
		}

		[Token(Token = "0x6001E5A")]
		[Address(RVA = "0x16A9558", Offset = "0x16A9558", VA = "0x16A9558")]
		public void ProfileSaveChanges()
		{
		}

		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0x16A95F8", Offset = "0x16A95F8", VA = "0x16A95F8")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0x16A5578", Offset = "0x16A5578", VA = "0x16A5578")]
		private void DoOnRenderObject(Camera cam)
		{
		}

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0x16AA750", Offset = "0x16AA750", VA = "0x16AA750")]
		private bool ComputeSmoothQuadMatrix(Camera cam, Bounds bounds)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0x16ABD10", Offset = "0x16ABD10", VA = "0x16ABD10")]
		private void BuildMatrix(Camera cam, Vector3 scrMin, Vector3 scrMax, int border, Matrix4x4 quadMatrix)
		{
		}

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0x16AAAE4", Offset = "0x16AAAE4", VA = "0x16AAAE4")]
		private void SmoothGlow(int rtWidth, int rtHeight)
		{
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0x16AB0D0", Offset = "0x16AB0D0", VA = "0x16AB0D0")]
		private void SmoothOutline(int rtWidth, int rtHeight)
		{
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0x16AB6BC", Offset = "0x16AB6BC", VA = "0x16AB6BC")]
		private void ComposeSmoothBlend(Visibility smoothGlowVisibility, Visibility smoothOutlineVisibility)
		{
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0x16ABEF4", Offset = "0x16ABEF4", VA = "0x16ABEF4")]
		private void InitMaterial(Material material, string shaderName)
		{
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0x16AC0A8", Offset = "0x16AC0A8", VA = "0x16AC0A8")]
		public void SetTarget(Transform transform)
		{
		}

		[Token(Token = "0x6001E64")]
		[Address(RVA = "0x16AC190", Offset = "0x16AC190", VA = "0x16AC190")]
		public void SetTargets(Transform transform, Renderer[] renderers)
		{
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0x16A1F58", Offset = "0x16A1F58", VA = "0x16A1F58")]
		public void SetHighlighted(bool state)
		{
		}

		[Token(Token = "0x6001E66")]
		[Address(RVA = "0x16A3DE4", Offset = "0x16A3DE4", VA = "0x16A3DE4")]
		private void SetupMaterial()
		{
		}

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0x16AC260", Offset = "0x16AC260", VA = "0x16AC260")]
		private void SetupMaterial(Renderer[] rr)
		{
		}

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0x16ACB38", Offset = "0x16ACB38", VA = "0x16ACB38")]
		private Renderer[] FindRenderersWithLayerInScene(LayerMask layer)
		{
			return null;
		}

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0x16ACD18", Offset = "0x16ACD18", VA = "0x16ACD18")]
		private Renderer[] FindRenderersWithLayerInChildren(LayerMask layer)
		{
			return null;
		}

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0x16A3B00", Offset = "0x16A3B00", VA = "0x16A3B00")]
		private void CheckGeometrySupportDependencies()
		{
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0x16AE798", Offset = "0x16AE798", VA = "0x16AE798")]
		private void CheckRequiredCommandBuffers()
		{
		}

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0x16ACED4", Offset = "0x16ACED4", VA = "0x16ACED4")]
		private void CheckCommandBuffers()
		{
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0x16AA6A8", Offset = "0x16AA6A8", VA = "0x16AA6A8")]
		private void CheckBlurCommandBuffer()
		{
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0x16AD0E8", Offset = "0x16AD0E8", VA = "0x16AD0E8")]
		private void Fork(Material mat, Material[] mats, Mesh mesh)
		{
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0x16AA308", Offset = "0x16AA308", VA = "0x16AA308")]
		private void BakeTransform(int objIndex, bool duplicateMesh)
		{
		}

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0x16AE840", Offset = "0x16AE840", VA = "0x16AE840")]
		public void UpdateMaterialProperties(bool forceNow = false)
		{
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0x16A42B0", Offset = "0x16A42B0", VA = "0x16A42B0")]
		private void UpdateMaterialPropertiesNow()
		{
		}

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0x16ABED4", Offset = "0x16ABED4", VA = "0x16ABED4")]
		private int GetZTestValue(Visibility param)
		{
			return default(int);
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0x16A382C", Offset = "0x16A382C", VA = "0x16A382C")]
		private void BuildQuad()
		{
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0x16A9FE8", Offset = "0x16A9FE8", VA = "0x16A9FE8")]
		private bool CheckOcclusion(Camera cam)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0x16AE884", Offset = "0x16AE884", VA = "0x16AE884")]
		public bool Includes(Transform transform)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0x16AD83C", Offset = "0x16AD83C", VA = "0x16AD83C")]
		private void AverageNormals(int objIndex)
		{
		}

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0x16AD2D4", Offset = "0x16AD2D4", VA = "0x16AD2D4")]
		private void ReorientNormals(int objIndex)
		{
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0x16AE188", Offset = "0x16AE188", VA = "0x16AE188")]
		private void CombineMeshes()
		{
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0x16AE964", Offset = "0x16AE964", VA = "0x16AE964")]
		public void HitFX(Color color, float fadeOutDuration, float initialIntensity = 1f)
		{
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0x16AE9DC", Offset = "0x16AE9DC", VA = "0x16AE9DC")]
		public void TargetFX()
		{
		}

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0x16AEA34", Offset = "0x16AEA34", VA = "0x16AEA34")]
		public static void RegisterOccluder(HighlightSeeThroughOccluder occluder)
		{
		}

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0x16AEB24", Offset = "0x16AEB24", VA = "0x16AEB24")]
		public static void UnregisterOccluder(HighlightSeeThroughOccluder occluder)
		{
		}

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0x16A9630", Offset = "0x16A9630", VA = "0x16A9630")]
		public void RenderOccluders(Camera cam)
		{
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0x16AEC14", Offset = "0x16AEC14", VA = "0x16AEC14")]
		public HighlightEffect()
		{
		}
	}
	[Token(Token = "0x20004F1")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x579C18", Offset = "0x579C18")]
	public class HighlightManager : MonoBehaviour
	{
		[Token(Token = "0x40027C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask layerMask;

		[Token(Token = "0x40027C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera raycastCamera;

		[Token(Token = "0x40027C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RayCastSource raycastSource;

		[Token(Token = "0x40027C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x587144", Offset = "0x587144")]
		public float maxDistance;

		[Token(Token = "0x40027C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HighlightEffect baseEffect;

		[Token(Token = "0x40027C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HighlightEffect currentEffect;

		[Token(Token = "0x40027CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform currentObject;

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0x155E4B0", Offset = "0x155E4B0", VA = "0x155E4B0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0x155E7E0", Offset = "0x155E7E0", VA = "0x155E7E0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0x155EAA0", Offset = "0x155EAA0", VA = "0x155EAA0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E85")]
		[Address(RVA = "0x155E7E8", Offset = "0x155E7E8", VA = "0x155E7E8")]
		private void SwitchesCollider(Transform newObject)
		{
		}

		[Token(Token = "0x6001E86")]
		[Address(RVA = "0x155E6EC", Offset = "0x155E6EC", VA = "0x155E6EC")]
		public static Camera GetCamera()
		{
			return null;
		}

		[Token(Token = "0x6001E87")]
		[Address(RVA = "0x155ED24", Offset = "0x155ED24", VA = "0x155ED24")]
		public HighlightManager()
		{
		}
	}
	[Token(Token = "0x20004F2")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x579C80", Offset = "0x579C80")]
	public class HighlightProfile : ScriptableObject
	{
		[Token(Token = "0x40027CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TargetOptions effectGroup;

		[Token(Token = "0x40027CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LayerMask effectGroupLayer;

		[Token(Token = "0x40027CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string effectNameFilter;

		[Token(Token = "0x40027CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool combineMeshes;

		[Token(Token = "0x40027CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58717C", Offset = "0x58717C")]
		public float alphaCutOff;

		[Token(Token = "0x40027D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool cullBackFaces;

		[Token(Token = "0x40027D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool depthClip;

		[Token(Token = "0x40027D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public NormalsOption normalsOption;

		[Token(Token = "0x40027D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float fadeInDuration;

		[Token(Token = "0x40027D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float fadeOutDuration;

		[Token(Token = "0x40027D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool constantWidth;

		[Token(Token = "0x40027D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x587194", Offset = "0x587194")]
		public float overlay;

		[Token(Token = "0x40027D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x5871AC", Offset = "0x5871AC")]
		public Color overlayColor;

		[Token(Token = "0x40027D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float overlayAnimationSpeed;

		[Token(Token = "0x40027D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5871C4", Offset = "0x5871C4")]
		public float overlayMinIntensity;

		[Token(Token = "0x40027DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5871DC", Offset = "0x5871DC")]
		public float overlayBlending;

		[Token(Token = "0x40027DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5871F4", Offset = "0x5871F4")]
		public float outline;

		[Token(Token = "0x40027DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x58720C", Offset = "0x58720C")]
		public Color outlineColor;

		[Token(Token = "0x40027DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float outlineWidth;

		[Token(Token = "0x40027DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public QualityLevel outlineQuality;

		[Token(Token = "0x40027DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x587224", Offset = "0x587224")]
		public int outlineDownsampling;

		[Token(Token = "0x40027E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool outlineOptimalBlit;

		[Token(Token = "0x40027E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Visibility outlineVisibility;

		[Token(Token = "0x40027E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public bool outlineIndependent;

		[Token(Token = "0x40027E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58723C", Offset = "0x58723C")]
		public float glow;

		[Token(Token = "0x40027E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float glowWidth;

		[Token(Token = "0x40027E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public QualityLevel glowQuality;

		[Token(Token = "0x40027E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x587254", Offset = "0x587254")]
		public int glowDownsampling;

		[Token(Token = "0x40027E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x58726C", Offset = "0x58726C")]
		public Color glowHQColor;

		[Token(Token = "0x40027E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool glowDithering;

		[Token(Token = "0x40027E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		public bool glowOptimalBlit;

		[Token(Token = "0x40027EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float glowMagicNumber1;

		[Token(Token = "0x40027EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float glowMagicNumber2;

		[Token(Token = "0x40027EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float glowAnimationSpeed;

		[Token(Token = "0x40027ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Visibility glowVisibility;

		[Token(Token = "0x40027EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public bool glowBlendPasses;

		[Token(Token = "0x40027EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public GlowPassData[] glowPasses;

		[Token(Token = "0x40027F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x587284", Offset = "0x587284")]
		public float innerGlow;

		[Token(Token = "0x40027F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58729C", Offset = "0x58729C")]
		public float innerGlowWidth;

		[Token(Token = "0x40027F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x5872B4", Offset = "0x5872B4")]
		public Color innerGlowColor;

		[Token(Token = "0x40027F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Visibility innerGlowVisibility;

		[Token(Token = "0x40027F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public bool targetFX;

		[Token(Token = "0x40027F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Texture2D targetFXTexture;

		[Token(Token = "0x40027F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x5872CC", Offset = "0x5872CC")]
		public Color targetFXColor;

		[Token(Token = "0x40027F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public float targetFXRotationSpeed;

		[Token(Token = "0x40027F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public float targetFXInitialScale;

		[Token(Token = "0x40027F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public float targetFXEndScale;

		[Token(Token = "0x40027FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public float targetFXTransitionDuration;

		[Token(Token = "0x40027FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public float targetFXStayDuration;

		[Token(Token = "0x40027FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public SeeThroughMode seeThrough;

		[Token(Token = "0x40027FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public LayerMask seeThroughOccluderMask;

		[Token(Token = "0x40027FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5872E4", Offset = "0x5872E4")]
		public float seeThroughOccluderThreshold;

		[Token(Token = "0x40027FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public float seeThroughOccluderCheckInterval;

		[Token(Token = "0x4002800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x587304", Offset = "0x587304")]
		public float seeThroughIntensity;

		[Token(Token = "0x4002801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58731C", Offset = "0x58731C")]
		public float seeThroughTintAlpha;

		[Token(Token = "0x4002802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public Color seeThroughTintColor;

		[Token(Token = "0x4002803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x587334", Offset = "0x587334")]
		public float seeThroughNoise;

		[Token(Token = "0x4002804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58734C", Offset = "0x58734C")]
		public float seeThroughBorder;

		[Token(Token = "0x4002805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		public Color seeThroughBorderColor;

		[Token(Token = "0x4002806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		public float seeThroughBorderWidth;

		[Token(Token = "0x6001E88")]
		[Address(RVA = "0x155ED58", Offset = "0x155ED58", VA = "0x155ED58")]
		public void Load(HighlightEffect effect)
		{
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0x155F098", Offset = "0x155F098", VA = "0x155F098")]
		public void Save(HighlightEffect effect)
		{
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0x155EF9C", Offset = "0x155EF9C", VA = "0x155EF9C")]
		private GlowPassData[] GetGlowPassesCopy(GlowPassData[] glowPasses)
		{
			return null;
		}

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0x155F2CC", Offset = "0x155F2CC", VA = "0x155F2CC")]
		public HighlightProfile()
		{
		}
	}
	[Token(Token = "0x20004F3")]
	public struct MeshData
	{
		[Token(Token = "0x4002807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Renderer renderer;

		[Token(Token = "0x4002808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int subMeshCount;
	}
	[Token(Token = "0x20004F4")]
	public enum DetectionMethod
	{
		[Token(Token = "0x400280A")]
		Stencil,
		[Token(Token = "0x400280B")]
		RayCast
	}
	[Token(Token = "0x20004F5")]
	[ExecuteInEditMode]
	public class HighlightSeeThroughOccluder : MonoBehaviour
	{
		[Token(Token = "0x400280C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DetectionMethod detectionMethod;

		[NonSerialized]
		[Token(Token = "0x400280D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshData[] meshData;

		[Token(Token = "0x400280E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Renderer> rr;

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0x155F470", Offset = "0x155F470", VA = "0x155F470")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0x155F4B8", Offset = "0x155F4B8", VA = "0x155F4B8")]
		private void Init()
		{
		}

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0x155F954", Offset = "0x155F954", VA = "0x155F954")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0x155F9C0", Offset = "0x155F9C0", VA = "0x155F9C0")]
		public HighlightSeeThroughOccluder()
		{
		}
	}
	[Token(Token = "0x20004F6")]
	public enum TriggerMode
	{
		[Token(Token = "0x4002810")]
		ColliderEventsOnlyOnThisObject,
		[Token(Token = "0x4002811")]
		RaycastOnThisObjectAndChildren,
		[Token(Token = "0x4002812")]
		Volume
	}
	[Token(Token = "0x20004F7")]
	public enum RayCastSource
	{
		[Token(Token = "0x4002814")]
		MousePosition,
		[Token(Token = "0x4002815")]
		CameraDirection
	}
	[Token(Token = "0x20004F8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x579CFC", Offset = "0x579CFC")]
	[ExecuteInEditMode]
	public class HighlightTrigger : MonoBehaviour
	{
		[Token(Token = "0x20004F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579D74", Offset = "0x579D74")]
		private sealed class <DoRayCast>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400281F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002820")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002821")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HighlightTrigger <>4__this;

			[Token(Token = "0x17000480")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E9F")]
				[Address(RVA = "0x151498C", Offset = "0x151498C", VA = "0x151498C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000481")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EA1")]
				[Address(RVA = "0x15149D4", Offset = "0x15149D4", VA = "0x15149D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E9C")]
			[Address(RVA = "0x15145E0", Offset = "0x15145E0", VA = "0x15145E0")]
			[DebuggerHidden]
			public <DoRayCast>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001E9D")]
			[Address(RVA = "0x151460C", Offset = "0x151460C", VA = "0x151460C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E9E")]
			[Address(RVA = "0x1514610", Offset = "0x1514610", VA = "0x1514610", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EA0")]
			[Address(RVA = "0x1514994", Offset = "0x1514994", VA = "0x1514994", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x587364", Offset = "0x587364")]
		public TriggerMode triggerMode;

		[Token(Token = "0x4002817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera raycastCamera;

		[Token(Token = "0x4002818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RayCastSource raycastSource;

		[Token(Token = "0x4002819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float maxDistance;

		[Token(Token = "0x400281A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LayerMask volumeLayerMask;

		[Token(Token = "0x400281B")]
		private const int MAX_RAYCAST_HITS = 100;

		[NonSerialized]
		[Token(Token = "0x400281C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Collider[] colliders;

		[Token(Token = "0x400281D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Collider currentCollider;

		[Token(Token = "0x400281E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static RaycastHit[] hits;

		[Token(Token = "0x6001E90")]
		[Address(RVA = "0x155F9C8", Offset = "0x155F9C8", VA = "0x155F9C8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0x155FAA8", Offset = "0x155FAA8", VA = "0x155FAA8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E92")]
		[Address(RVA = "0x155FD74", Offset = "0x155FD74", VA = "0x155FD74")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58D73C", Offset = "0x58D73C")]
		private IEnumerator DoRayCast()
		{
			return null;
		}

		[Token(Token = "0x6001E93")]
		[Address(RVA = "0x155FDF4", Offset = "0x155FDF4", VA = "0x155FDF4")]
		private void SwitchCollider(Collider newCollider)
		{
		}

		[Token(Token = "0x6001E94")]
		[Address(RVA = "0x155FFC0", Offset = "0x155FFC0", VA = "0x155FFC0")]
		private void OnMouseDown()
		{
		}

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0x1560004", Offset = "0x1560004", VA = "0x1560004")]
		private void OnMouseEnter()
		{
		}

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0x1560048", Offset = "0x1560048", VA = "0x1560048")]
		private void OnMouseExit()
		{
		}

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0x155FE8C", Offset = "0x155FE8C", VA = "0x155FE8C")]
		private void Highlight(bool state)
		{
		}

		[Token(Token = "0x6001E98")]
		[Address(RVA = "0x155F9CC", Offset = "0x155F9CC", VA = "0x155F9CC")]
		public void Init()
		{
		}

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0x156008C", Offset = "0x156008C", VA = "0x156008C")]
		public void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001E9A")]
		[Address(RVA = "0x1560118", Offset = "0x1560118", VA = "0x1560118")]
		public void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001E9B")]
		[Address(RVA = "0x15601A4", Offset = "0x15601A4", VA = "0x15601A4")]
		public HighlightTrigger()
		{
		}
	}
}
namespace HighlightPlus.Demos
{
	[Token(Token = "0x20004FA")]
	public class SphereHighlightEventExample : MonoBehaviour
	{
		[Token(Token = "0x4002822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private HighlightEffect effect;

		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0x1687C40", Offset = "0x1687C40", VA = "0x1687C40")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0x1687D10", Offset = "0x1687D10", VA = "0x1687D10")]
		private bool ValidateHighlightObject(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0x1687D18", Offset = "0x1687D18", VA = "0x1687D18")]
		private void HighlightStart()
		{
		}

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0x1687D8C", Offset = "0x1687D8C", VA = "0x1687D8C")]
		private void HighlightEnd()
		{
		}

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0x1687E00", Offset = "0x1687E00", VA = "0x1687E00")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0x1687E5C", Offset = "0x1687E5C", VA = "0x1687E5C")]
		public SphereHighlightEventExample()
		{
		}
	}
}
namespace Assets.GameClients
{
	[Token(Token = "0x20004FB")]
	public class GameCenter : MonoBehaviour
	{
		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0x7BD0F0", Offset = "0x7BD0F0", VA = "0x7BD0F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0x7BD15C", Offset = "0x7BD15C", VA = "0x7BD15C")]
		public GameCenter()
		{
		}
	}
	[Token(Token = "0x20004FC")]
	public static class GenericGameClient
	{
		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0x7F615C", Offset = "0x7F615C", VA = "0x7F615C")]
		public static bool IsUserSigned()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EAB")]
		[Address(RVA = "0x7F6164", Offset = "0x7F6164", VA = "0x7F6164")]
		public static string Uname()
		{
			return null;
		}

		[Token(Token = "0x6001EAC")]
		[Address(RVA = "0x7F61B0", Offset = "0x7F61B0", VA = "0x7F61B0")]
		public static void UnlockAchievement(string idAch)
		{
		}

		[Token(Token = "0x6001EAD")]
		[Address(RVA = "0x7F61B4", Offset = "0x7F61B4", VA = "0x7F61B4")]
		public static bool IsAchievementUnlocked(string idAch)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0x7F61BC", Offset = "0x7F61BC", VA = "0x7F61BC")]
		public static bool IsInitialized()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004FD")]
	public class GogManager : MonoBehaviour
	{
		[Token(Token = "0x6001EAF")]
		[Address(RVA = "0x7F724C", Offset = "0x7F724C", VA = "0x7F724C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001EB0")]
		[Address(RVA = "0x7F72B8", Offset = "0x7F72B8", VA = "0x7F72B8")]
		public GogManager()
		{
		}
	}
}
namespace SimpleFogOfWar
{
	[Token(Token = "0x20004FE")]
	public class FogOfWarInfluence : MonoBehaviour
	{
		[Token(Token = "0x4002823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float ViewDistance;

		[Token(Token = "0x4002824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool Suspended;

		[Token(Token = "0x4002825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[HideInInspector]
		public bool moved;

		[Token(Token = "0x4002826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 oldPosition;

		[Token(Token = "0x6001EB1")]
		[Address(RVA = "0x7B64A8", Offset = "0x7B64A8", VA = "0x7B64A8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EB2")]
		[Address(RVA = "0x7B6688", Offset = "0x7B6688", VA = "0x7B6688")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001EB3")]
		[Address(RVA = "0x7B680C", Offset = "0x7B680C", VA = "0x7B680C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EB4")]
		[Address(RVA = "0x7B68A4", Offset = "0x7B68A4", VA = "0x7B68A4")]
		public FogOfWarInfluence()
		{
		}
	}
	[Token(Token = "0x20004FF")]
	public class FogOfWarSystem : SingletonMonoBehaviour<FogOfWarSystem>
	{
		[Token(Token = "0x2000500")]
		public enum FogTexResolution
		{
			[Token(Token = "0x400283B")]
			_140 = 140,
			[Token(Token = "0x400283C")]
			_256 = 256,
			[Token(Token = "0x400283D")]
			_512 = 512,
			[Token(Token = "0x400283E")]
			_1024 = 1024,
			[Token(Token = "0x400283F")]
			_2048 = 2048
		}

		[Token(Token = "0x2000501")]
		public enum FogVisibility
		{
			[Token(Token = "0x4002841")]
			Undetermined,
			[Token(Token = "0x4002842")]
			Visible,
			[Token(Token = "0x4002843")]
			Invisible
		}

		[Token(Token = "0x4002827")]
		public const int SAVE_VERSION = 1;

		[Token(Token = "0x4002828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string layer;

		[Token(Token = "0x4002829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int orderInLayer;

		[Token(Token = "0x400282A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RenderTexture stampTexture;

		[Token(Token = "0x400282B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RenderTexture fogOfWarTexture;

		[Token(Token = "0x400282C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public FogTexResolution Resolution;

		[Token(Token = "0x400282D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Texture2D viewStamp;

		[Token(Token = "0x400282E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private FogOfWarHelper helper;

		[Token(Token = "0x400282F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private FogOfWarBlur blur;

		[Token(Token = "0x4002830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 mapOffset;

		[Token(Token = "0x4002831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float mapScale;

		[Token(Token = "0x4002832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Texture2D snapShot;

		[Token(Token = "0x4002833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float snapShotInterval;

		[Token(Token = "0x4002834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float lastSnapShot;

		[Token(Token = "0x4002835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool initialized;

		[Token(Token = "0x4002836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool useBlur;

		[Token(Token = "0x4002837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly List<FogOfWarInfluence> influences;

		[Token(Token = "0x4002838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float timer;

		[Token(Token = "0x4002839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float timerValue;

		[Token(Token = "0x17000482")]
		public float VisibilitySnapshotInterval
		{
			[Token(Token = "0x6001EB8")]
			[Address(RVA = "0x7B6D80", Offset = "0x7B6D80", VA = "0x7B6D80")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EB9")]
			[Address(RVA = "0x7B6D88", Offset = "0x7B6D88", VA = "0x7B6D88")]
			set
			{
			}
		}

		[Token(Token = "0x6001EB5")]
		[Address(RVA = "0x7B68E0", Offset = "0x7B68E0", VA = "0x7B68E0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001EB6")]
		[Address(RVA = "0x7B6C98", Offset = "0x7B6C98", VA = "0x7B6C98")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001EB7")]
		[Address(RVA = "0x7B6A50", Offset = "0x7B6A50", VA = "0x7B6A50")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6001EBA")]
		[Address(RVA = "0x7B6510", Offset = "0x7B6510", VA = "0x7B6510")]
		public static void RegisterInfluence(FogOfWarInfluence influence)
		{
		}

		[Token(Token = "0x6001EBB")]
		[Address(RVA = "0x7B66F0", Offset = "0x7B66F0", VA = "0x7B66F0")]
		public static void UnregisterInfluence(FogOfWarInfluence influence)
		{
		}

		[Token(Token = "0x6001EBC")]
		[Address(RVA = "0x7B6D98", Offset = "0x7B6D98", VA = "0x7B6D98")]
		public float CalculateOpennedPercentage()
		{
			return default(float);
		}

		[Token(Token = "0x6001EBD")]
		[Address(RVA = "0x7AC704", Offset = "0x7AC704", VA = "0x7AC704")]
		public FogVisibility GetVisibility(Vector3 position)
		{
			return default(FogVisibility);
		}

		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0x7B700C", Offset = "0x7B700C", VA = "0x7B700C")]
		public byte[] GetPersistentData()
		{
			return null;
		}

		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0x7B703C", Offset = "0x7B703C", VA = "0x7B703C")]
		public void LoadFromOldData(float[] data)
		{
		}

		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0x7B720C", Offset = "0x7B720C", VA = "0x7B720C")]
		public void LoadFromSaveVersion(int saveVerson, BinaryReader r, float loadPosX, float loadPosY)
		{
		}

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0x7B7210", Offset = "0x7B7210", VA = "0x7B7210")]
		public void SetResolution(int resolution)
		{
		}

		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0x7B7358", Offset = "0x7B7358", VA = "0x7B7358")]
		public void LoadPersistentData(byte[] data)
		{
		}

		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0x7B7208", Offset = "0x7B7208", VA = "0x7B7208")]
		public void ClearPersistenFog()
		{
		}

		[Token(Token = "0x6001EC4")]
		[Address(RVA = "0x7B6D28", Offset = "0x7B6D28", VA = "0x7B6D28")]
		private void ClearStampTexture()
		{
		}

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0x7B6F30", Offset = "0x7B6F30", VA = "0x7B6F30")]
		private void SnapshotStampTexture()
		{
		}

		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0x7B74EC", Offset = "0x7B74EC", VA = "0x7B74EC")]
		private void Render()
		{
		}

		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0x7B7910", Offset = "0x7B7910", VA = "0x7B7910")]
		public void ExternalUpdate(Vector3 influencePosition)
		{
		}

		[Token(Token = "0x6001EC8")]
		[Address(RVA = "0x7B7B34", Offset = "0x7B7B34", VA = "0x7B7B34")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0x7B73B0", Offset = "0x7B73B0", VA = "0x7B73B0")]
		public void DoRestore()
		{
		}

		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0x7B7C2C", Offset = "0x7B7C2C", VA = "0x7B7C2C")]
		public FogOfWarSystem()
		{
		}
	}
}
namespace SimpleFogOfWar.Test
{
	[Token(Token = "0x2000502")]
	public class FOWVisibilityTester : MonoBehaviour
	{
		[Token(Token = "0x4002844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FogOfWarSystem fow;

		[Token(Token = "0x4002845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Color gizmoColor;

		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0x7AC598", Offset = "0x7AC598", VA = "0x7AC598")]
		private void Start()
		{
		}

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0x7AC624", Offset = "0x7AC624", VA = "0x7AC624")]
		private void Update()
		{
		}

		[Token(Token = "0x6001ECE")]
		[Address(RVA = "0x7AC8D0", Offset = "0x7AC8D0", VA = "0x7AC8D0")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0x7AC920", Offset = "0x7AC920", VA = "0x7AC920")]
		public FOWVisibilityTester()
		{
		}
	}
}
