using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Xml.Linq;
using EmeraldAI.Utility;
using Filo;
using HurricaneVR.Framework.Components;
using HurricaneVR.Framework.ControllerInput;
using HurricaneVR.Framework.Core;
using HurricaneVR.Framework.Core.Grabbers;
using HurricaneVR.Framework.Core.Player;
using HurricaneVR.Framework.Core.Sockets;
using HurricaneVR.Framework.Weapons;
using Il2CppDummyDll;
using Oculus.Platform;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using TMPro;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Rendering;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityStandardAssets.Utility;
using VacuumShaders.TerrainToMesh;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class _CameraRotate_BF05 : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform targetObject;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 targetOffset;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float averageDistance;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxDistance;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float minDistance;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float xSpeed;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float ySpeed;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int yMinLimit;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int yMaxLimit;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int zoomSpeed;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float panSpeed;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float zoomDampening;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float rotateOnOff;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float xDeg;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float yDeg;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float currentDistance;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float desiredDistance;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Quaternion currentRotation;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion desiredRotation;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Quaternion rotation;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 position;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float idleTimer;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float idleSmooth;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0xF0F940", Offset = "0xF0F940", VA = "0xF0F940")]
	private void Start()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xF0FCF8", Offset = "0xF0FCF8", VA = "0xF0FCF8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xF0F944", Offset = "0xF0F944", VA = "0xF0F944")]
	public void Init()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0xF0FCFC", Offset = "0xF0FCFC", VA = "0xF0FCFC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xF1022C", Offset = "0xF1022C", VA = "0xF1022C")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xF102DC", Offset = "0xF102DC", VA = "0xF102DC")]
	public _CameraRotate_BF05()
	{
	}
}
[Serializable]
[Token(Token = "0x2000003")]
public class Sound
{
	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip clip;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7414B8", Offset = "0x7414B8")]
	public float volume;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7414D0", Offset = "0x7414D0")]
	public float volumeVariance;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7414E8", Offset = "0x7414E8")]
	public float pitch;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x741504", Offset = "0x741504")]
	public float pitchVariance;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool loop;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioMixerGroup mixerGroup;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public AudioSource source;

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x8A5520", Offset = "0x8A5520", VA = "0x8A5520")]
	public Sound()
	{
	}
}
[Token(Token = "0x2000004")]
public class KeyScript : MonoBehaviour
{
	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string PlayerTag;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Door;

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x91FF14", Offset = "0x91FF14", VA = "0x91FF14")]
	private void Start()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x91FF18", Offset = "0x91FF18", VA = "0x91FF18")]
	private void Update()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x91FF1C", Offset = "0x91FF1C", VA = "0x91FF1C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x91FF84", Offset = "0x91FF84", VA = "0x91FF84")]
	private void GetKey()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x920030", Offset = "0x920030", VA = "0x920030")]
	public KeyScript()
	{
	}
}
[Token(Token = "0x2000005")]
public class LightAnimationAdvanced : MonoBehaviour
{
	[Token(Token = "0x2000205")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740BC0", Offset = "0x740BC0")]
	private sealed class <LightAnim>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LightAnimationAdvanced <>4__this;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <lastIntensity>5__2;

		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <randomIntensity>5__3;

		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <time>5__4;

		[Token(Token = "0x17000124")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CA8")]
			[Address(RVA = "0x920D30", Offset = "0x920D30", VA = "0x920D30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000125")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CAA")]
			[Address(RVA = "0x920D98", Offset = "0x920D98", VA = "0x920D98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x920A74", Offset = "0x920A74", VA = "0x920A74")]
		[DebuggerHidden]
		public <LightAnim>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x920AC4", Offset = "0x920AC4", VA = "0x920AC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x920AC8", Offset = "0x920AC8", VA = "0x920AC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x920D38", Offset = "0x920D38", VA = "0x920D38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform _transform;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Light LightIntensity;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float StartIntensity;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float _speed;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x74153C", Offset = "0x74153C")]
	[SerializeField]
	private float _randomIntensity;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float intensityMultiplier;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float startIntensity;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MeshRenderer[] EmissiveObjects;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Color startColor;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool objectsAdded;

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x92091C", Offset = "0x92091C", VA = "0x92091C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x9209D8", Offset = "0x9209D8", VA = "0x9209D8")]
	private void Start()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x920A04", Offset = "0x920A04", VA = "0x920A04")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x748FD0", Offset = "0x748FD0")]
	private IEnumerator LightAnim()
	{
		return null;
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x920AA0", Offset = "0x920AA0", VA = "0x920AA0")]
	public LightAnimationAdvanced()
	{
	}
}
[Token(Token = "0x2000006")]
public class LightAnimationSimple : MonoBehaviour
{
	[Token(Token = "0x2000206")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740BD0", Offset = "0x740BD0")]
	private sealed class <FlameAnimation>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LightAnimationSimple <>4__this;

		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <randomPosition>5__3;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 <lastPosition>5__4;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <lastIntensity>5__5;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <randomIntensity>5__6;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <time>5__7;

		[Token(Token = "0x17000126")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CAE")]
			[Address(RVA = "0x9211E8", Offset = "0x9211E8", VA = "0x9211E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000127")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CB0")]
			[Address(RVA = "0x921250", Offset = "0x921250", VA = "0x921250", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x920EA4", Offset = "0x920EA4", VA = "0x920EA4")]
		[DebuggerHidden]
		public <FlameAnimation>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x920EF0", Offset = "0x920EF0", VA = "0x920EF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x920EF4", Offset = "0x920EF4", VA = "0x920EF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x9211F0", Offset = "0x9211F0", VA = "0x9211F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform _transform;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Light LightIntensity;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float StartIntensity;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float _radius;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float _speed;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x74159C", Offset = "0x74159C")]
	[SerializeField]
	private float _randomIntensity;

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x920DA0", Offset = "0x920DA0", VA = "0x920DA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x920E08", Offset = "0x920E08", VA = "0x920E08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x920E34", Offset = "0x920E34", VA = "0x920E34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x749034", Offset = "0x749034")]
	private IEnumerator FlameAnimation()
	{
		return null;
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x920ED0", Offset = "0x920ED0", VA = "0x920ED0")]
	public LightAnimationSimple()
	{
	}
}
[Token(Token = "0x2000007")]
public class NL_MCS_IgnoreShadowCastingSwitch : MonoBehaviour
{
	[Token(Token = "0x6000015")]
	[Address(RVA = "0x92C708", Offset = "0x92C708", VA = "0x92C708")]
	public NL_MCS_IgnoreShadowCastingSwitch()
	{
	}
}
[Token(Token = "0x2000008")]
[ExecuteInEditMode]
public class NM_Wind : MonoBehaviour
{
	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7415DC", Offset = "0x7415DC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7415DC", Offset = "0x7415DC")]
	public float WindSpeed;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x74163C", Offset = "0x74163C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74163C", Offset = "0x74163C")]
	public float Turbulence;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x741690", Offset = "0x741690")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x741690", Offset = "0x741690")]
	public Texture2D NoiseTexture;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7416F0", Offset = "0x7416F0")]
	public float FlexNoiseWorldSize;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x741728", Offset = "0x741728")]
	public float ShiverNoiseWorldSize;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x741760", Offset = "0x741760")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x741760", Offset = "0x741760")]
	public Texture2D GustMaskTexture;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7417C0", Offset = "0x7417C0")]
	public float GustWorldSize;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7417F8", Offset = "0x7417F8")]
	public float GustSpeed;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x741830", Offset = "0x741830")]
	public float GustScale;

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x92C710", Offset = "0x92C710", VA = "0x92C710")]
	private void Start()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x92C898", Offset = "0x92C898", VA = "0x92C898")]
	private void Update()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x92C89C", Offset = "0x92C89C", VA = "0x92C89C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x92C714", Offset = "0x92C714", VA = "0x92C714")]
	private void ApplySettings()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x92C8A0", Offset = "0x92C8A0", VA = "0x92C8A0")]
	private Vector4 GetDirectionAndSpeed()
	{
		return default(Vector4);
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x92C920", Offset = "0x92C920", VA = "0x92C920")]
	public NM_Wind()
	{
	}
}
[Token(Token = "0x2000009")]
public class Boiler : MonoBehaviour
{
	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip steam;

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x838118", Offset = "0x838118", VA = "0x838118")]
	private void Start()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x8381B8", Offset = "0x8381B8", VA = "0x8381B8")]
	private void Update()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x8381BC", Offset = "0x8381BC", VA = "0x8381BC")]
	private void PlaySound()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x83821C", Offset = "0x83821C", VA = "0x83821C")]
	public Boiler()
	{
	}
}
[Token(Token = "0x200000A")]
public class MachineLinearMotion : MonoBehaviour
{
	[Token(Token = "0x2000207")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740BE0", Offset = "0x740BE0")]
	private sealed class <Start>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MachineLinearMotion <>4__this;

		[Token(Token = "0x17000128")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CB4")]
			[Address(RVA = "0x926BD4", Offset = "0x926BD4", VA = "0x926BD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000129")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CB6")]
			[Address(RVA = "0x926C3C", Offset = "0x926C3C", VA = "0x926C3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x926718", Offset = "0x926718", VA = "0x926718")]
		[DebuggerHidden]
		public <Start>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x9269E8", Offset = "0x9269E8", VA = "0x9269E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x9269EC", Offset = "0x9269EC", VA = "0x9269EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x926BDC", Offset = "0x926BDC", VA = "0x926BDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000208")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740BF0", Offset = "0x740BF0")]
	private sealed class <MoveObject>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform thisTransform;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 startPos;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 endPos;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <i>5__2;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <rate>5__3;

		[Token(Token = "0x1700012A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CBA")]
			[Address(RVA = "0x926978", Offset = "0x926978", VA = "0x926978", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CBC")]
			[Address(RVA = "0x9269E0", Offset = "0x9269E0", VA = "0x9269E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x926800", Offset = "0x926800", VA = "0x926800")]
		[DebuggerHidden]
		public <MoveObject>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x926834", Offset = "0x926834", VA = "0x926834", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x926838", Offset = "0x926838", VA = "0x926838", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x926980", Offset = "0x926980", VA = "0x926980", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 pointB;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 pointA;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 min;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 max;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public MachineRadialMotion radialMotion;

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x9266A8", Offset = "0x9266A8", VA = "0x9266A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x749098", Offset = "0x749098")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x926744", Offset = "0x926744", VA = "0x926744")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7490FC", Offset = "0x7490FC")]
	private IEnumerator MoveObject(Transform thisTransform, Vector3 startPos, Vector3 endPos, float time)
	{
		return null;
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x92682C", Offset = "0x92682C", VA = "0x92682C")]
	public MachineLinearMotion()
	{
	}
}
[Token(Token = "0x200000B")]
public class MachineRadialMotion : MonoBehaviour
{
	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxSpeed;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float increaseRate;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float currentSpeed;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool isRunning;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject connectedPart;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float shift;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MachineRadialMotion connectedPartMotion;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isConnectedToEngine;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool reverse;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool isMachine;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 direction;

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x926C44", Offset = "0x926C44", VA = "0x926C44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x926CC0", Offset = "0x926CC0", VA = "0x926CC0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x926E78", Offset = "0x926E78", VA = "0x926E78")]
	public MachineRadialMotion()
	{
	}
}
[Token(Token = "0x200000C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x73FC9C", Offset = "0x73FC9C")]
public class SteamEngine : MonoBehaviour
{
	[Token(Token = "0x2000209")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740C00", Offset = "0x740C00")]
	private sealed class <playEngineSound>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SteamEngine <>4__this;

		[Token(Token = "0x1700012C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CC0")]
			[Address(RVA = "0x8A77B0", Offset = "0x8A77B0", VA = "0x8A77B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CC2")]
			[Address(RVA = "0x8A7818", Offset = "0x8A7818", VA = "0x8A7818", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x8A7604", Offset = "0x8A7604", VA = "0x8A7604")]
		[DebuggerHidden]
		public <playEngineSound>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x8A7644", Offset = "0x8A7644", VA = "0x8A7644", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x8A7648", Offset = "0x8A7648", VA = "0x8A7648", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x8A77B8", Offset = "0x8A77B8", VA = "0x8A77B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip engineStartClip;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip engineLoopClip;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource Exh;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speed;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Animator engineAnimator;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool CanStarted;

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x8A73F0", Offset = "0x8A73F0", VA = "0x8A73F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x8A747C", Offset = "0x8A747C", VA = "0x8A747C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x8A7560", Offset = "0x8A7560", VA = "0x8A7560")]
	public void StartEngine()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x8A7594", Offset = "0x8A7594", VA = "0x8A7594")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x749160", Offset = "0x749160")]
	private IEnumerator playEngineSound()
	{
		return null;
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x8A7630", Offset = "0x8A7630", VA = "0x8A7630")]
	public SteamEngine()
	{
	}
}
[Token(Token = "0x200000D")]
public class PinchRandomizer : MonoBehaviour
{
	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_PinchRandom;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource m_Source;

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x98F904", Offset = "0x98F904", VA = "0x98F904")]
	private void Start()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x98F998", Offset = "0x98F998", VA = "0x98F998")]
	public PinchRandomizer()
	{
	}
}
[Token(Token = "0x200000E")]
public class PistolShoot : MonoBehaviour
{
	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_Effect;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform m_EffectPoint;

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x98F9A0", Offset = "0x98F9A0", VA = "0x98F9A0")]
	private void Update()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x98FABC", Offset = "0x98FABC", VA = "0x98FABC")]
	public PistolShoot()
	{
	}
}
[Token(Token = "0x200000F")]
public class SelfDestroy : MonoBehaviour
{
	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_time;

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x8985BC", Offset = "0x8985BC", VA = "0x8985BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x898648", Offset = "0x898648", VA = "0x898648")]
	public void Destroy()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x8986C4", Offset = "0x8986C4", VA = "0x8986C4")]
	public SelfDestroy()
	{
	}
}
[Token(Token = "0x2000010")]
public class SelfDestroy1 : MonoBehaviour
{
	[Token(Token = "0x6000032")]
	[Address(RVA = "0x8986D4", Offset = "0x8986D4", VA = "0x8986D4")]
	public void Destroy()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x898750", Offset = "0x898750", VA = "0x898750")]
	public SelfDestroy1()
	{
	}
}
[Token(Token = "0x2000011")]
public class BulletsDamage : MonoBehaviour
{
	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x741868", Offset = "0x741868")]
	public int Damage;

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x838D60", Offset = "0x838D60", VA = "0x838D60")]
	private void Start()
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x838D64", Offset = "0x838D64", VA = "0x838D64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x838D68", Offset = "0x838D68", VA = "0x838D68")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x838DE4", Offset = "0x838DE4", VA = "0x838DE4")]
	public BulletsDamage()
	{
	}
}
[Token(Token = "0x2000012")]
public class PickingUp : MonoBehaviour
{
	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public KeyCode PickUpKey;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float PickupDistance;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public KeyCode DropKey;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float DropForce;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RaycastHit hit;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool objKeep;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 scale;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 dist;

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x98F27C", Offset = "0x98F27C", VA = "0x98F27C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x98F280", Offset = "0x98F280", VA = "0x98F280")]
	private void Update()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x98F68C", Offset = "0x98F68C", VA = "0x98F68C")]
	private void ObjDrop()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x98F7DC", Offset = "0x98F7DC", VA = "0x98F7DC")]
	public PickingUp()
	{
	}
}
[Token(Token = "0x2000013")]
public class PlayerControllerCustom : MonoBehaviour
{
	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody PlayerController;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MovingSpeed;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float StrafeSpeed;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public KeyCode RunButton;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float RunMultiplier;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float RunSpeed;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float JumpVel;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float Moving;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float Strafe;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool Jump;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isGrounded;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private RaycastHit groundHit;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float PlayerHighest;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject Cam;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float yRot;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float xRot;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float HorizontalSens;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float VerticalSens;

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x9910E4", Offset = "0x9910E4", VA = "0x9910E4")]
	private void Start()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x99118C", Offset = "0x99118C", VA = "0x99118C")]
	private void Update()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x991354", Offset = "0x991354", VA = "0x991354")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x991564", Offset = "0x991564", VA = "0x991564")]
	public PlayerControllerCustom()
	{
	}
}
[Token(Token = "0x2000014")]
public class ShootDemo : MonoBehaviour
{
	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject BulletPrefab01;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject BulletPrefab02;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject BulletPrefab03;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject SelectedBullet;

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x898E08", Offset = "0x898E08", VA = "0x898E08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x898E1C", Offset = "0x898E1C", VA = "0x898E1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x8991DC", Offset = "0x8991DC", VA = "0x8991DC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x8991E0", Offset = "0x8991E0", VA = "0x8991E0")]
	public ShootDemo()
	{
	}
}
[Token(Token = "0x2000015")]
public class CorridorLamp : MonoBehaviour
{
	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject NormalMesh;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Mesh BrokenMesh;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject FX;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool Crushed;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string[] excludedTags;

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x83CDC4", Offset = "0x83CDC4", VA = "0x83CDC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x83CEA0", Offset = "0x83CEA0", VA = "0x83CEA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x83CEA4", Offset = "0x83CEA4", VA = "0x83CEA4")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x83D17C", Offset = "0x83D17C", VA = "0x83D17C")]
	public CorridorLamp()
	{
	}
}
[Token(Token = "0x2000016")]
public class Billboard : MonoBehaviour
{
	[Token(Token = "0x200020A")]
	public enum Axis
	{
		[Token(Token = "0x40011EE")]
		up,
		[Token(Token = "0x40011EF")]
		down,
		[Token(Token = "0x40011F0")]
		left,
		[Token(Token = "0x40011F1")]
		right,
		[Token(Token = "0x40011F2")]
		forward,
		[Token(Token = "0x40011F3")]
		back
	}

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera referenceCamera;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool reverseFace;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Axis axis;

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x8375D0", Offset = "0x8375D0", VA = "0x8375D0")]
	public Vector3 GetAxis(Axis refAxis)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x837744", Offset = "0x837744", VA = "0x837744")]
	private void Awake()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x8377C4", Offset = "0x8377C4", VA = "0x8377C4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x8379FC", Offset = "0x8379FC", VA = "0x8379FC")]
	public Billboard()
	{
	}
}
[Token(Token = "0x2000017")]
public class DeskLamp : MonoBehaviour
{
	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject brokenObj;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] hidingObjs;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string[] excludedTags;

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x840828", Offset = "0x840828", VA = "0x840828")]
	private void Start()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x840918", Offset = "0x840918", VA = "0x840918")]
	private void Update()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x84091C", Offset = "0x84091C", VA = "0x84091C")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x840A8C", Offset = "0x840A8C", VA = "0x840A8C")]
	public DeskLamp()
	{
	}
}
[Token(Token = "0x2000018")]
public class MetalBarrel : MonoBehaviour
{
	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] Chunks;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x741884", Offset = "0x741884")]
	public float BurningTime;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x74189C", Offset = "0x74189C")]
	public int Health;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ExplosionForce;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float ChunksRotation;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool BreakByClick;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool DestroyAfterTime;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float time;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject ExpLight;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject FireFX;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool AutoDestroy;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float AutoDestTime;

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x928AE0", Offset = "0x928AE0", VA = "0x928AE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x928BF0", Offset = "0x928BF0", VA = "0x928BF0")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x928D74", Offset = "0x928D74", VA = "0x928D74")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x928E7C", Offset = "0x928E7C", VA = "0x928E7C")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x928F00", Offset = "0x928F00", VA = "0x928F00")]
	private void Crushing()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x9291D4", Offset = "0x9291D4", VA = "0x9291D4")]
	private void DestructObject()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x929250", Offset = "0x929250", VA = "0x929250")]
	public MetalBarrel()
	{
	}
}
[Token(Token = "0x2000019")]
public class destruction : MonoBehaviour
{
	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] Chunks;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] HidingObjs;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7418B8", Offset = "0x7418B8")]
	public int Health;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float ExplosionForce;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float ChunksRotation;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float strength;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool BreakByClick;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool DestroyAftertime;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float time;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject FX;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool AutoDestroy;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float AutoDestTime;

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xF109F0", Offset = "0xF109F0", VA = "0xF109F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xF10B3C", Offset = "0xF10B3C", VA = "0xF10B3C")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xF11014", Offset = "0xF11014", VA = "0xF11014")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xF10C64", Offset = "0xF10C64", VA = "0xF10C64")]
	private void Crushing()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xF11040", Offset = "0xF11040", VA = "0xF11040")]
	private void DestructObject()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xF110BC", Offset = "0xF110BC", VA = "0xF110BC")]
	public destruction()
	{
	}
}
[Token(Token = "0x200001A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x73FD00", Offset = "0x73FD00")]
public class DamageAIByExplosion : MonoBehaviour
{
	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask EmeraldAILayer;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int DamageAmount;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int ExplosionRadius;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int ExplosionForce;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject ExplosionEffect;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip ExplosionSound;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject ExplosionSoundObject;

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x83D4E4", Offset = "0x83D4E4", VA = "0x83D4E4")]
	private void Start()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x83D560", Offset = "0x83D560", VA = "0x83D560")]
	public void Explode()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x83D928", Offset = "0x83D928", VA = "0x83D928")]
	private void SpawnExplosionSound()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x83DA94", Offset = "0x83DA94", VA = "0x83DA94")]
	public DamageAIByExplosion()
	{
	}
}
[Token(Token = "0x200001B")]
public class PlatformController : MonoBehaviour
{
	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x98FAC4", Offset = "0x98FAC4", VA = "0x98FAC4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x98FB90", Offset = "0x98FB90", VA = "0x98FB90")]
	public PlatformController()
	{
	}
}
[Token(Token = "0x200001C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x73FD64", Offset = "0x73FD64")]
public class RuntimeCableGenerator : MonoBehaviour
{
	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Cable cable;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject pulleyPrefab;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject attachmentPrefab;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int numPulleys;

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x894784", Offset = "0x894784", VA = "0x894784")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x8947E0", Offset = "0x8947E0", VA = "0x8947E0")]
	private void Generate()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x894D00", Offset = "0x894D00", VA = "0x894D00")]
	public RuntimeCableGenerator()
	{
	}
}
[Token(Token = "0x200001D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x73FDC8", Offset = "0x73FDC8")]
public class SpoolController : MonoBehaviour
{
	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HingeJoint joint;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x8A5534", Offset = "0x8A5534", VA = "0x8A5534")]
	private void Start()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x8A558C", Offset = "0x8A558C", VA = "0x8A558C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x8A5634", Offset = "0x8A5634", VA = "0x8A5634")]
	public SpoolController()
	{
	}
}
[Token(Token = "0x200001E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x73FE2C", Offset = "0x73FE2C")]
public class TensionProbe : MonoBehaviour
{
	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Cable cable;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tension;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float cableTension;

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x9A93C0", Offset = "0x9A93C0", VA = "0x9A93C0")]
	public void Awake()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x9A9418", Offset = "0x9A9418", VA = "0x9A9418")]
	public void Update()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x9A98B0", Offset = "0x9A98B0", VA = "0x9A98B0")]
	public TensionProbe()
	{
	}
}
[Token(Token = "0x200001F")]
public class Enemy : MonoBehaviour
{
	[Token(Token = "0x200020B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740C10", Offset = "0x740C10")]
	private sealed class <WaitLostTime>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Enemy <>4__this;

		[Token(Token = "0x1700012E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CC6")]
			[Address(RVA = "0x8AB44C", Offset = "0x8AB44C", VA = "0x8AB44C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CC8")]
			[Address(RVA = "0x8AB4B4", Offset = "0x8AB4B4", VA = "0x8AB4B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0x8AB2F8", Offset = "0x8AB2F8", VA = "0x8AB2F8")]
		[DebuggerHidden]
		public <WaitLostTime>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0x8AB324", Offset = "0x8AB324", VA = "0x8AB324", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0x8AB328", Offset = "0x8AB328", VA = "0x8AB328", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0x8AB454", Offset = "0x8AB454", VA = "0x8AB454", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200020C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740C20", Offset = "0x740C20")]
	private sealed class <WaitPatrolTime>d__50 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Enemy <>4__this;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int state;

		[Token(Token = "0x17000130")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CCC")]
			[Address(RVA = "0x8AB7F0", Offset = "0x8AB7F0", VA = "0x8AB7F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000131")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CCE")]
			[Address(RVA = "0x8AB858", Offset = "0x8AB858", VA = "0x8AB858", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0x8AB6C0", Offset = "0x8AB6C0", VA = "0x8AB6C0")]
		[DebuggerHidden]
		public <WaitPatrolTime>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0x8AB6EC", Offset = "0x8AB6EC", VA = "0x8AB6EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x8AB6F0", Offset = "0x8AB6F0", VA = "0x8AB6F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0x8AB7F8", Offset = "0x8AB7F8", VA = "0x8AB7F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200020D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740C30", Offset = "0x740C30")]
	private sealed class <WaitOnHidePlace>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Enemy <>4__this;

		[Token(Token = "0x17000132")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CD2")]
			[Address(RVA = "0x8AB650", Offset = "0x8AB650", VA = "0x8AB650", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000133")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CD4")]
			[Address(RVA = "0x8AB6B8", Offset = "0x8AB6B8", VA = "0x8AB6B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0x8AB4BC", Offset = "0x8AB4BC", VA = "0x8AB4BC")]
		[DebuggerHidden]
		public <WaitOnHidePlace>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0x8AB4E8", Offset = "0x8AB4E8", VA = "0x8AB4E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0x8AB4EC", Offset = "0x8AB4EC", VA = "0x8AB4EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0x8AB658", Offset = "0x8AB658", VA = "0x8AB658", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200020E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740C40", Offset = "0x740C40")]
	private sealed class <Brutal>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Enemy <>4__this;

		[Token(Token = "0x17000134")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CD8")]
			[Address(RVA = "0x8AB288", Offset = "0x8AB288", VA = "0x8AB288", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000135")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CDA")]
			[Address(RVA = "0x8AB2F0", Offset = "0x8AB2F0", VA = "0x8AB2F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0x8AB154", Offset = "0x8AB154", VA = "0x8AB154")]
		[DebuggerHidden]
		public <Brutal>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0x8AB180", Offset = "0x8AB180", VA = "0x8AB180", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0x8AB184", Offset = "0x8AB184", VA = "0x8AB184", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0x8AB290", Offset = "0x8AB290", VA = "0x8AB290", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool onceBrutal;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Brutal Br;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent Brt;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7418D4", Offset = "0x7418D4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7418D4", Offset = "0x7418D4")]
	public PlayerController player;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x741934", Offset = "0x741934")]
	public Transform head;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74196C", Offset = "0x74196C")]
	public LayerMask searchLayers;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public NavMeshAgent agent;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float magnit;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Animator animator;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7419A4", Offset = "0x7419A4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7419A4", Offset = "0x7419A4")]
	public LayerMask doorsLayer;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x741A04", Offset = "0x741A04")]
	public float seeDistance;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x741A3C", Offset = "0x741A3C")]
	public Vector2 enemyFOV;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x741A74", Offset = "0x741A74")]
	public float closeDistance;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x741AAC", Offset = "0x741AAC")]
	public float lostTime;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x741AE4", Offset = "0x741AE4")]
	public float patrolTime;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x741B1C", Offset = "0x741B1C")]
	public float walkSpeed;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public bool seePlayer;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool chasePlayer;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	private bool searchPlayer;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int searchState;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private HidePlace playerHidePlace;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x741B64", Offset = "0x741B64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x741B64", Offset = "0x741B64")]
	public AudioClip[] footSteps;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x741BC4", Offset = "0x741BC4")]
	public AudioClip catchSound;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x741BFC", Offset = "0x741BFC")]
	public AudioClip hitSound;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private AudioSource AS;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x741C34", Offset = "0x741C34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x741C34", Offset = "0x741C34")]
	public Transform[] wayPoints;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x741C94", Offset = "0x741C94")]
	public float wayPointWaitTime;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private int wpID;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x741CCC", Offset = "0x741CCC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x741CCC", Offset = "0x741CCC")]
	public float playerLookSpeed;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x741D2C", Offset = "0x741D2C")]
	public float catchDistance;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int catchPlayerState;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Vector3 lastSawPoint;

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xA68F24", Offset = "0xA68F24", VA = "0xA68F24")]
	private void Awake()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xA68FF8", Offset = "0xA68FF8", VA = "0xA68FF8")]
	private void Update()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xA6A7BC", Offset = "0xA6A7BC", VA = "0xA6A7BC")]
	public void SendHidePlace()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xA6A320", Offset = "0xA6A320", VA = "0xA6A320")]
	private void PatrolWayPoints()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xA6A550", Offset = "0xA6A550", VA = "0xA6A550")]
	private void CheckHidePlace()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xA6A104", Offset = "0xA6A104", VA = "0xA6A104")]
	private void CheckLastPoint()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xA6A9F0", Offset = "0xA6A9F0", VA = "0xA6A9F0")]
	public void CallEnemy(Vector3 pos)
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xA690EC", Offset = "0xA690EC", VA = "0xA690EC")]
	private void SearchPlayer()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xA6AA64", Offset = "0xA6AA64", VA = "0xA6AA64")]
	private bool PlayerRaycast()
	{
		return default(bool);
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xA6AC38", Offset = "0xA6AC38", VA = "0xA6AC38")]
	private bool PlayerFOV()
	{
		return default(bool);
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xA694B4", Offset = "0xA694B4", VA = "0xA694B4")]
	private void CatchingPlayer()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xA69EC8", Offset = "0xA69EC8", VA = "0xA69EC8")]
	private void DoorCheck()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xA6AD84", Offset = "0xA6AD84", VA = "0xA6AD84")]
	private void ResetSearchStates()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xA6A840", Offset = "0xA6A840", VA = "0xA6A840")]
	private void EnemySetDestination(Vector3 pos)
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xA6AE64", Offset = "0xA6AE64", VA = "0xA6AE64")]
	public void RestartEnemyStats()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xA6AEA4", Offset = "0xA6AEA4", VA = "0xA6AEA4")]
	public void FootStepPlay()
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xA6AF14", Offset = "0xA6AF14", VA = "0xA6AF14")]
	public void PlayAnimationSound()
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xA6ADF4", Offset = "0xA6ADF4", VA = "0xA6ADF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7491C4", Offset = "0x7491C4")]
	private IEnumerator WaitLostTime()
	{
		return null;
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xA6A900", Offset = "0xA6A900", VA = "0xA6A900")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x749228", Offset = "0x749228")]
	private IEnumerator WaitPatrolTime(int state)
	{
		return null;
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xA6A980", Offset = "0xA6A980", VA = "0xA6A980")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74928C", Offset = "0x74928C")]
	private IEnumerator WaitOnHidePlace()
	{
		return null;
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xA6AF6C", Offset = "0xA6AF6C", VA = "0xA6AF6C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7492F0", Offset = "0x7492F0")]
	private IEnumerator Brutal()
	{
		return null;
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xA6AFDC", Offset = "0xA6AFDC", VA = "0xA6AFDC")]
	public Enemy()
	{
	}
}
[Token(Token = "0x2000020")]
public class EnemyCall : MonoBehaviour
{
	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Enemy enemy;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NavMeshPuppet nav;

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x8AB860", Offset = "0x8AB860", VA = "0x8AB860")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x8AB864", Offset = "0x8AB864", VA = "0x8AB864")]
	public void CallEnemy()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x8AB8A4", Offset = "0x8AB8A4", VA = "0x8AB8A4")]
	public EnemyCall()
	{
	}
}
[Token(Token = "0x2000021")]
public class IKControl : MonoBehaviour
{
	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator animator;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool ikActive;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform lookObj;

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x8C1744", Offset = "0x8C1744", VA = "0x8C1744")]
	private void Start()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x8C179C", Offset = "0x8C179C", VA = "0x8C179C")]
	private void OnAnimatorIK()
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x8C1870", Offset = "0x8C1870", VA = "0x8C1870")]
	public IKControl()
	{
	}
}
[Token(Token = "0x2000022")]
public class GameControll : MonoBehaviour
{
	[Token(Token = "0x200020F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740C50", Offset = "0x740C50")]
	private sealed class <WaitKillAnim>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float killTime;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameControll <>4__this;

		[Token(Token = "0x17000136")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CDE")]
			[Address(RVA = "0x8B8D04", Offset = "0x8B8D04", VA = "0x8B8D04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000137")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CE0")]
			[Address(RVA = "0x8B8D6C", Offset = "0x8B8D6C", VA = "0x8B8D6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x8B88A4", Offset = "0x8B88A4", VA = "0x8B88A4")]
		[DebuggerHidden]
		public <WaitKillAnim>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0x8B8C24", Offset = "0x8B8C24", VA = "0x8B8C24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0x8B8C28", Offset = "0x8B8C28", VA = "0x8B8C28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0x8B8D0C", Offset = "0x8B8D0C", VA = "0x8B8D0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000210")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740C60", Offset = "0x740C60")]
	private sealed class <WaitFadeAnim>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameControll <>4__this;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string name;

		[Token(Token = "0x17000138")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CE4")]
			[Address(RVA = "0x8B8BB4", Offset = "0x8B8BB4", VA = "0x8B8BB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000139")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CE6")]
			[Address(RVA = "0x8B8C1C", Offset = "0x8B8C1C", VA = "0x8B8C1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x8B894C", Offset = "0x8B894C", VA = "0x8B894C")]
		[DebuggerHidden]
		public <WaitFadeAnim>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x8B8A00", Offset = "0x8B8A00", VA = "0x8B8A00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x8B8A04", Offset = "0x8B8A04", VA = "0x8B8A04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x8B8BBC", Offset = "0x8B8BBC", VA = "0x8B8BBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000211")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740C70", Offset = "0x740C70")]
	private sealed class <WaitRestart>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameControll <>4__this;

		[Token(Token = "0x1700013A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CEA")]
			[Address(RVA = "0x8B8E40", Offset = "0x8B8E40", VA = "0x8B8E40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CEC")]
			[Address(RVA = "0x8B8EA8", Offset = "0x8B8EA8", VA = "0x8B8EA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x8B8978", Offset = "0x8B8978", VA = "0x8B8978")]
		[DebuggerHidden]
		public <WaitRestart>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x8B8D74", Offset = "0x8B8D74", VA = "0x8B8D74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0x8B8D78", Offset = "0x8B8D78", VA = "0x8B8D78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x8B8E48", Offset = "0x8B8E48", VA = "0x8B8E48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x741D64", Offset = "0x741D64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x741D64", Offset = "0x741D64")]
	public int lifeCount;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x741DC4", Offset = "0x741DC4")]
	public PlayerControllerY player;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x741DFC", Offset = "0x741DFC")]
	public Inventory inventory;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x741E34", Offset = "0x741E34")]
	public ButcherEnemy enemy;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x741E6C", Offset = "0x741E6C")]
	public Transform playerSpawnPoint;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x741EA4", Offset = "0x741EA4")]
	public Transform enemySpawnPoint;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x741EDC", Offset = "0x741EDC")]
	public AudioSource dangerAmbient;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool pause;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x741F14", Offset = "0x741F14")]
	public bool hideCursor;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x741F4C", Offset = "0x741F4C")]
	public Animation fadeScreen;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Animation bloodScreen;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Animation lifesCountScreen;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string bloodPulsingAnimName;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string bloodFadeAnimName;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string fadeOutAnimName;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string fadeInAnimName;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public string fadeDieAnimName;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public string fadeHideDieAnimName;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject gameControllPanel;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject mobileControllPanel;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject pausePanel;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject gameOverPanel;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject gameWinPanel;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Slider volumeSlider;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Slider sensitivitySlider;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Image dropImage;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Image standImage;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Image crouchImage;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Image hidePlaceExitImage;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Image interactImage;

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x8B8134", Offset = "0x8B8134", VA = "0x8B8134")]
	private void Start()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x8B8314", Offset = "0x8B8314", VA = "0x8B8314")]
	private void Update()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x8B83E0", Offset = "0x8B83E0", VA = "0x8B83E0")]
	private void ControllGame()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x8B83E4", Offset = "0x8B83E4", VA = "0x8B83E4")]
	public void PauseGame()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x8B847C", Offset = "0x8B847C", VA = "0x8B847C")]
	public void GameOver()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x8B84E8", Offset = "0x8B84E8", VA = "0x8B84E8")]
	public void GameWin()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x8B85A8", Offset = "0x8B85A8", VA = "0x8B85A8")]
	public void MainMenuExit(int saveGame)
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x8B8318", Offset = "0x8B8318", VA = "0x8B8318")]
	private void AmbientChange()
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x8B8678", Offset = "0x8B8678", VA = "0x8B8678")]
	public void Respawn()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x8B8740", Offset = "0x8B8740", VA = "0x8B8740")]
	public void ScreenFade(int state)
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x8B8858", Offset = "0x8B8858", VA = "0x8B8858")]
	public void ScreenBlood(int state)
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x8B87D8", Offset = "0x8B87D8", VA = "0x8B87D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x749354", Offset = "0x749354")]
	private IEnumerator WaitKillAnim(float killTime)
	{
		return null;
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x8B88D0", Offset = "0x8B88D0", VA = "0x8B88D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7493B8", Offset = "0x7493B8")]
	private IEnumerator WaitFadeAnim(string name)
	{
		return null;
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x8B82A4", Offset = "0x8B82A4", VA = "0x8B82A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74941C", Offset = "0x74941C")]
	private IEnumerator WaitRestart()
	{
		return null;
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x8B89A4", Offset = "0x8B89A4", VA = "0x8B89A4")]
	public void ConfigureApply()
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x8B89F8", Offset = "0x8B89F8", VA = "0x8B89F8")]
	public GameControll()
	{
	}
}
[Token(Token = "0x2000023")]
public class MainMenu : MonoBehaviour
{
	[Token(Token = "0x2000212")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740C80", Offset = "0x740C80")]
	private sealed class <ContinueGame>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MainMenu <>4__this;

		[Token(Token = "0x1700013C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CF0")]
			[Address(RVA = "0x927398", Offset = "0x927398", VA = "0x927398", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CF2")]
			[Address(RVA = "0x927400", Offset = "0x927400", VA = "0x927400", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x927230", Offset = "0x927230", VA = "0x927230")]
		[DebuggerHidden]
		public <ContinueGame>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x927290", Offset = "0x927290", VA = "0x927290", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x927294", Offset = "0x927294", VA = "0x927294", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x9273A0", Offset = "0x9273A0", VA = "0x9273A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000213")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740C90", Offset = "0x740C90")]
	private sealed class <StartNewGame>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MainMenu <>4__this;

		[Token(Token = "0x1700013E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CF6")]
			[Address(RVA = "0x927510", Offset = "0x927510", VA = "0x927510", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CF8")]
			[Address(RVA = "0x927578", Offset = "0x927578", VA = "0x927578", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0x92725C", Offset = "0x92725C", VA = "0x92725C")]
		[DebuggerHidden]
		public <StartNewGame>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x927408", Offset = "0x927408", VA = "0x927408", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x92740C", Offset = "0x92740C", VA = "0x92740C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x927518", Offset = "0x927518", VA = "0x927518", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x741F84", Offset = "0x741F84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x741F84", Offset = "0x741F84")]
	public string levelSceneName;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x741FE4", Offset = "0x741FE4")]
	public Button continueButton;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74201C", Offset = "0x74201C")]
	public Slider volumeSlider;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x742054", Offset = "0x742054")]
	public Slider sensitivitySlider;

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x926EAC", Offset = "0x926EAC", VA = "0x926EAC")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x92705C", Offset = "0x92705C", VA = "0x92705C")]
	public void StartGame(int state)
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x927190", Offset = "0x927190", VA = "0x927190")]
	public void QuitGame()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x927198", Offset = "0x927198", VA = "0x927198")]
	public void Configure()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x9270B0", Offset = "0x9270B0", VA = "0x9270B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x749480", Offset = "0x749480")]
	private IEnumerator ContinueGame()
	{
		return null;
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x927120", Offset = "0x927120", VA = "0x927120")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7494E4", Offset = "0x7494E4")]
	private IEnumerator StartNewGame()
	{
		return null;
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x927288", Offset = "0x927288", VA = "0x927288")]
	public MainMenu()
	{
	}
}
[Token(Token = "0x2000024")]
public enum ObjectType
{
	[Token(Token = "0x40000F3")]
	item,
	[Token(Token = "0x40000F4")]
	door,
	[Token(Token = "0x40000F5")]
	switchable,
	[Token(Token = "0x40000F6")]
	puzzle,
	[Token(Token = "0x40000F7")]
	locks,
	[Token(Token = "0x40000F8")]
	triggerEvent
}
[Token(Token = "0x2000025")]
public class ObjectSaveID : MonoBehaviour
{
	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74208C", Offset = "0x74208C")]
	public int objectID;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7420C4", Offset = "0x7420C4")]
	public ObjectType objectType;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SaveGameManager saveManager;

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xB5B23C", Offset = "0xB5B23C", VA = "0xB5B23C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xB5B2D0", Offset = "0xB5B2D0", VA = "0xB5B2D0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xB5B334", Offset = "0xB5B334", VA = "0xB5B334")]
	public XElement GetElement()
	{
		return null;
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xB5C49C", Offset = "0xB5C49C", VA = "0xB5C49C")]
	public ObjectSaveID()
	{
	}
}
[Token(Token = "0x2000026")]
public class SaveGameManager : MonoBehaviour
{
	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameControll gameControll;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string path;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<ObjectSaveID> objectsToSave;

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x894D70", Offset = "0x894D70", VA = "0x894D70")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x894DE8", Offset = "0x894DE8", VA = "0x894DE8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x894F84", Offset = "0x894F84", VA = "0x894F84")]
	public void Save()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x894EA8", Offset = "0x894EA8", VA = "0x894EA8")]
	public void Load()
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x895248", Offset = "0x895248", VA = "0x895248")]
	private void LoadSceneData(XElement root)
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x895E84", Offset = "0x895E84", VA = "0x895E84")]
	private XElement CheckObjectID(int i, XElement root)
	{
		return null;
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x89621C", Offset = "0x89621C", VA = "0x89621C")]
	public SaveGameManager()
	{
	}
}
[Token(Token = "0x2000027")]
public class SceneLoader : MonoBehaviour
{
	[Token(Token = "0x2000214")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740CA0", Offset = "0x740CA0")]
	private sealed class <SceneLoad>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneLoader <>4__this;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperation <operation>5__2;

		[Token(Token = "0x17000140")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CFC")]
			[Address(RVA = "0x89854C", Offset = "0x89854C", VA = "0x89854C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000141")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CFE")]
			[Address(RVA = "0x8985B4", Offset = "0x8985B4", VA = "0x8985B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x898404", Offset = "0x898404", VA = "0x898404")]
		[DebuggerHidden]
		public <SceneLoad>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x898438", Offset = "0x898438", VA = "0x898438", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x89843C", Offset = "0x89843C", VA = "0x89843C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0x898554", Offset = "0x898554", VA = "0x898554", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isStartScene;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public string sceneName;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74210C", Offset = "0x74210C")]
	public string mainMenuSceneName;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image loadingBar;

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x8982FC", Offset = "0x8982FC", VA = "0x8982FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x898368", Offset = "0x898368", VA = "0x898368")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x898394", Offset = "0x898394", VA = "0x898394")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x749548", Offset = "0x749548")]
	private IEnumerator SceneLoad()
	{
		return null;
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x898430", Offset = "0x898430", VA = "0x898430")]
	public SceneLoader()
	{
	}
}
[Token(Token = "0x2000028")]
public class CollideEvent : MonoBehaviour
{
	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x742144", Offset = "0x742144")]
	public AudioClip collideSound;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int power;

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x83CCD8", Offset = "0x83CCD8", VA = "0x83CCD8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x83CDB4", Offset = "0x83CDB4", VA = "0x83CDB4")]
	public CollideEvent()
	{
	}
}
[Token(Token = "0x2000029")]
public class DestroyDelay : MonoBehaviour
{
	[Token(Token = "0x2000215")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740CB0", Offset = "0x740CB0")]
	private sealed class <WaitAndDestroy>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DestroyDelay <>4__this;

		[Token(Token = "0x17000142")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D02")]
			[Address(RVA = "0x840D70", Offset = "0x840D70", VA = "0x840D70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000143")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D04")]
			[Address(RVA = "0x840DD8", Offset = "0x840DD8", VA = "0x840DD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0x840C4C", Offset = "0x840C4C", VA = "0x840C4C")]
		[DebuggerHidden]
		public <WaitAndDestroy>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x840C80", Offset = "0x840C80", VA = "0x840C80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x840C84", Offset = "0x840C84", VA = "0x840C84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x840D78", Offset = "0x840D78", VA = "0x840D78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74217C", Offset = "0x74217C")]
	public float destroyDelay;

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x840BB0", Offset = "0x840BB0", VA = "0x840BB0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x840BDC", Offset = "0x840BDC", VA = "0x840BDC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7495AC", Offset = "0x7495AC")]
	private IEnumerator WaitAndDestroy()
	{
		return null;
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x840C78", Offset = "0x840C78", VA = "0x840C78")]
	public DestroyDelay()
	{
	}
}
[Token(Token = "0x200002A")]
public class Door : MonoBehaviour
{
	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7421B4", Offset = "0x7421B4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7421B4", Offset = "0x7421B4")]
	public Animation animationDoor;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x742214", Offset = "0x742214")]
	public string openNameA;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74224C", Offset = "0x74224C")]
	public string openNameB;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x742284", Offset = "0x742284")]
	public string closeNameA;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7422BC", Offset = "0x7422BC")]
	public string closeNameB;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7422F4", Offset = "0x7422F4")]
	public string tryOpenName;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74232C", Offset = "0x74232C")]
	public bool locked;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x742364", Offset = "0x742364")]
	public AudioClip openSound;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74239C", Offset = "0x74239C")]
	public AudioClip closeSound;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7423D4", Offset = "0x7423D4")]
	public AudioClip tryOpenSound;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74240C", Offset = "0x74240C")]
	public AudioClip unlockSound;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x742444", Offset = "0x742444")]
	public int keyID;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[HideInInspector]
	public int state;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74248C", Offset = "0x74248C")]
	public int locksCount;

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x840DE0", Offset = "0x840DE0", VA = "0x840DE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x840DE8", Offset = "0x840DE8", VA = "0x840DE8")]
	public void InteractDoor(int sideID)
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x840F74", Offset = "0x840F74", VA = "0x840F74")]
	public void UnlockDoor()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x840FBC", Offset = "0x840FBC", VA = "0x840FBC")]
	public void UpdateState()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x841088", Offset = "0x841088", VA = "0x841088")]
	public void LoadState()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x8411C0", Offset = "0x8411C0", VA = "0x8411C0")]
	public Door()
	{
	}
}
[Token(Token = "0x200002B")]
public class DoorSiders : MonoBehaviour
{
	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7424C4", Offset = "0x7424C4")]
	public int doorSideID;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7424FC", Offset = "0x7424FC")]
	public global::Door genDoor;

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x8411C8", Offset = "0x8411C8", VA = "0x8411C8")]
	public void InteractWithDoor()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x8411E8", Offset = "0x8411E8", VA = "0x8411E8")]
	public DoorSiders()
	{
	}
}
[Token(Token = "0x200002C")]
public class Lock : MonoBehaviour
{
	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x742534", Offset = "0x742534")]
	public global::Door door;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74256C", Offset = "0x74256C")]
	public int needItem;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7425A4", Offset = "0x7425A4")]
	public bool removeAfterOpen;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7425DC", Offset = "0x7425DC")]
	public bool isOpen;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animation lockAnimation;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x742614", Offset = "0x742614")]
	public string unlockAnim;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74264C", Offset = "0x74264C")]
	public bool playItemAnim;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x742684", Offset = "0x742684")]
	public string itemAnimation;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7426BC", Offset = "0x7426BC")]
	public AudioClip unlockSound;

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x921E54", Offset = "0x921E54", VA = "0x921E54")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x921EF8", Offset = "0x921EF8", VA = "0x921EF8")]
	public void UnlockLock()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x921FC8", Offset = "0x921FC8", VA = "0x921FC8")]
	private void UnlockEvent()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x922080", Offset = "0x922080", VA = "0x922080")]
	public void LoadState()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x922090", Offset = "0x922090", VA = "0x922090")]
	public Lock()
	{
	}
}
[Token(Token = "0x200002D")]
public class HidePlace : MonoBehaviour
{
	[Token(Token = "0x2000216")]
	public enum HidePlaceType
	{
		[Token(Token = "0x400121A")]
		bed,
		[Token(Token = "0x400121B")]
		chest
	}

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7426F4", Offset = "0x7426F4")]
	public HidePlaceType hidePlaceType;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74272C", Offset = "0x74272C")]
	public Transform enterPlace;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x742764", Offset = "0x742764")]
	public Transform outPlace;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74279C", Offset = "0x74279C")]
	public Transform enemyPosition;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7427D4", Offset = "0x7427D4")]
	public int enemyAnimationState;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74280C", Offset = "0x74280C")]
	public string cameraAnimationName;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x742844", Offset = "0x742844")]
	public Vector2 clampCameraX;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74287C", Offset = "0x74287C")]
	public Vector2 clampCameraY;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7428B4", Offset = "0x7428B4")]
	public AudioClip hideSound;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7428EC", Offset = "0x7428EC")]
	public AudioClip unhideSound;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x742924", Offset = "0x742924")]
	public Animation hidePlaceAnimation;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74295C", Offset = "0x74295C")]
	public string hidePlaceHideAnimationName;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x742994", Offset = "0x742994")]
	public string hidePlaceUnhideAnimationName;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private PlayerController player;

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x8B9BDC", Offset = "0x8B9BDC", VA = "0x8B9BDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x8B9C4C", Offset = "0x8B9C4C", VA = "0x8B9C4C")]
	public void Interact()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x8B9E58", Offset = "0x8B9E58", VA = "0x8B9E58")]
	public void ExitHidePlace()
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x8BA068", Offset = "0x8BA068", VA = "0x8BA068")]
	public HidePlace()
	{
	}
}
[Token(Token = "0x200002E")]
public class Interact : MonoBehaviour
{
	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7429CC", Offset = "0x7429CC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7429CC", Offset = "0x7429CC")]
	public float rayDistance;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x742A2C", Offset = "0x742A2C")]
	public LayerMask interactLayers;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x742A64", Offset = "0x742A64")]
	public string interactTag;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x742A9C", Offset = "0x742A9C")]
	public Inventory inventory;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x742AD4", Offset = "0x742AD4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x742AD4", Offset = "0x742AD4")]
	public Image interactButton;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PlayerController player;

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x8C18E4", Offset = "0x8C18E4", VA = "0x8C18E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x8C1950", Offset = "0x8C1950", VA = "0x8C1950")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x8C1DF8", Offset = "0x8C1DF8", VA = "0x8C1DF8")]
	private GameObject RayCastCheck()
	{
		return null;
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x8C1F8C", Offset = "0x8C1F8C", VA = "0x8C1F8C")]
	public Interact()
	{
	}
}
[Token(Token = "0x200002F")]
public class InteractCallEvent : MonoBehaviour
{
	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent interactEvent;

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x91F90C", Offset = "0x91F90C", VA = "0x91F90C")]
	public void InteractCall()
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x91F928", Offset = "0x91F928", VA = "0x91F928")]
	public InteractCallEvent()
	{
	}
}
[Token(Token = "0x2000030")]
public class Puzzle : MonoBehaviour
{
	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x742B34", Offset = "0x742B34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x742B34", Offset = "0x742B34")]
	public PuzzleBlock emptyPuzzle;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x742B94", Offset = "0x742B94")]
	public PuzzleBlock[] blocks;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x742BCC", Offset = "0x742BCC")]
	public UnityEvent SolvedEvent;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x742C04", Offset = "0x742C04")]
	public bool randomize;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[HideInInspector]
	public bool activated;

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x99197C", Offset = "0x99197C", VA = "0x99197C")]
	public void Start()
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x991CB8", Offset = "0x991CB8", VA = "0x991CB8")]
	public void MovePuzzle(PuzzleBlock block)
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x991C48", Offset = "0x991C48", VA = "0x991C48")]
	private bool CheckBlocks()
	{
		return default(bool);
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x991EC8", Offset = "0x991EC8", VA = "0x991EC8")]
	public void LoadState()
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x991EF0", Offset = "0x991EF0", VA = "0x991EF0")]
	public Puzzle()
	{
	}
}
[Token(Token = "0x2000031")]
public class PuzzleBlock : MonoBehaviour
{
	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x742C4C", Offset = "0x742C4C")]
	public Puzzle puzzle;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x742C84", Offset = "0x742C84")]
	public int ID;

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x991EF8", Offset = "0x991EF8", VA = "0x991EF8")]
	public void PuzzleMoveBlock()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x991F14", Offset = "0x991F14", VA = "0x991F14")]
	public PuzzleBlock()
	{
	}
}
[Token(Token = "0x2000032")]
public class TriggerEvents : MonoBehaviour
{
	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x742CBC", Offset = "0x742CBC")]
	public UnityEvent interactEvent;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool activated;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public UnityEvent OnSaveEvent;

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x9A9A5C", Offset = "0x9A9A5C", VA = "0x9A9A5C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x9A9AF4", Offset = "0x9A9AF4", VA = "0x9A9AF4")]
	public void LoadState()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x9A9B1C", Offset = "0x9A9B1C", VA = "0x9A9B1C")]
	public TriggerEvents()
	{
	}
}
[Serializable]
[Token(Token = "0x2000033")]
public class Database
{
	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x742D14", Offset = "0x742D14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x742D14", Offset = "0x742D14")]
	public string name;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x742D74", Offset = "0x742D74")]
	public int id;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x742DAC", Offset = "0x742DAC")]
	public GameObject itemPrefab;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x742DE4", Offset = "0x742DE4")]
	public int handPosID;

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x83DB88", Offset = "0x83DB88", VA = "0x83DB88")]
	public Database()
	{
	}
}
[Token(Token = "0x2000034")]
public class Inventory : MonoBehaviour
{
	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x742E1C", Offset = "0x742E1C")]
	public Transform[] handsPos;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x742E54", Offset = "0x742E54")]
	public ItemsDatabase database;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public int CurrentItemID;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject CurrentItem;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x742E9C", Offset = "0x742E9C")]
	public int itemCameraLayerID;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x742ED4", Offset = "0x742ED4")]
	public int itemLayerID;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int currentHandPos;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x742F0C", Offset = "0x742F0C")]
	public Image DropButton;

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x91F930", Offset = "0x91F930", VA = "0x91F930")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x91F96C", Offset = "0x91F96C", VA = "0x91F96C")]
	public void AddItem(int ID, GameObject ItemGO)
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x91FD2C", Offset = "0x91FD2C", VA = "0x91FD2C")]
	public void PlayItemAnim(string animName)
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x91FB84", Offset = "0x91FB84", VA = "0x91FB84")]
	public void DropItem()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x91FDC8", Offset = "0x91FDC8", VA = "0x91FDC8")]
	public void RemoveItem()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x91FC7C", Offset = "0x91FC7C", VA = "0x91FC7C")]
	private int GetDatabaseID(int id)
	{
		return default(int);
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x91FE94", Offset = "0x91FE94", VA = "0x91FE94")]
	public Inventory()
	{
	}
}
[Token(Token = "0x2000035")]
public class Item : MonoBehaviour
{
	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x742F44", Offset = "0x742F44")]
	public int itemID;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x742F7C", Offset = "0x742F7C")]
	public string itemName;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x742FB4", Offset = "0x742FB4")]
	public AudioClip pickupSound;

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x91FE9C", Offset = "0x91FE9C", VA = "0x91FE9C")]
	public Item()
	{
	}
}
[Token(Token = "0x2000036")]
public class ItemsDatabase : MonoBehaviour
{
	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Database> Items;

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x91FEA4", Offset = "0x91FEA4", VA = "0x91FEA4")]
	public ItemsDatabase()
	{
	}
}
[Token(Token = "0x2000037")]
public class PlayerController : MonoBehaviour
{
	[Token(Token = "0x2000217")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740CC0", Offset = "0x740CC0")]
	private sealed class <WaitLegsFix>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerController <>4__this;

		[Token(Token = "0x17000144")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D08")]
			[Address(RVA = "0x990CF4", Offset = "0x990CF4", VA = "0x990CF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000145")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D0A")]
			[Address(RVA = "0x990D5C", Offset = "0x990D5C", VA = "0x990D5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x990BEC", Offset = "0x990BEC", VA = "0x990BEC")]
		[DebuggerHidden]
		public <WaitLegsFix>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x990C28", Offset = "0x990C28", VA = "0x990C28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x990C2C", Offset = "0x990C2C", VA = "0x990C2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x990CFC", Offset = "0x990CFC", VA = "0x990CFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x742FEC", Offset = "0x742FEC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x742FEC", Offset = "0x742FEC")]
	public GameControll gameControll;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Inventory inventory;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x74305C", Offset = "0x74305C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74305C", Offset = "0x74305C")]
	public float walkSpeed;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7430BC", Offset = "0x7430BC")]
	public float crouchSpeed;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public bool locked;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[HideInInspector]
	public bool lockedMovement;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	[HideInInspector]
	public bool canBeCatchen;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CharacterController characterController;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float moveSpeed;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public bool playerMoving;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x743134", Offset = "0x743134")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x743134", Offset = "0x743134")]
	public float mouseSensetivity;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x743194", Offset = "0x743194")]
	public Transform cameraTransform;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float clampX;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float clampY;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7431CC", Offset = "0x7431CC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7431CC", Offset = "0x7431CC")]
	public Animation cameraAnimation;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74322C", Offset = "0x74322C")]
	public string cameraHitAnimName;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x743264", Offset = "0x743264")]
	public string cameraIdleAnimName;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74329C", Offset = "0x74329C")]
	public string cameraMoveAnimName;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7432D4", Offset = "0x7432D4")]
	private float lerpSpeed;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74330C", Offset = "0x74330C")]
	public float normalHeight;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x743344", Offset = "0x743344")]
	public float crouchHeight;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74337C", Offset = "0x74337C")]
	public float cameraNormalOffset;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7433B4", Offset = "0x7433B4")]
	public float cameraCrouchOffset;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7433EC", Offset = "0x7433EC")]
	public LayerMask obstacleLayers;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x743424", Offset = "0x743424")]
	public bool clampByY;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public Vector2 clampXaxis;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public Vector2 clampYaxis;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74345C", Offset = "0x74345C")]
	public float legsFixTime;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public bool crouch;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7434A4", Offset = "0x7434A4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7434A4", Offset = "0x7434A4")]
	public Image imageStand;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x743504", Offset = "0x743504")]
	public Image imageCrouch;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74353C", Offset = "0x74353C")]
	public Image imageExitHidePlace;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x743574", Offset = "0x743574")]
	public HidePlace hidePlace;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7435AC", Offset = "0x7435AC")]
	private AudioSource AS;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7435E4", Offset = "0x7435E4")]
	public AudioClip[] footSteps;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74361C", Offset = "0x74361C")]
	public AudioClip legBreakSound;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool legBreak;

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x98FBA0", Offset = "0x98FBA0", VA = "0x98FBA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x98FC74", Offset = "0x98FC74", VA = "0x98FC74")]
	private void Update()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x990140", Offset = "0x990140", VA = "0x990140")]
	private void Controll()
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x9903F8", Offset = "0x9903F8", VA = "0x9903F8")]
	private void PlayerLegsBreak()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x99055C", Offset = "0x99055C", VA = "0x99055C")]
	public void Hide(int state)
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x9906B8", Offset = "0x9906B8", VA = "0x9906B8")]
	public void CatchPlayer(int state, string camHitName)
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x98FF20", Offset = "0x98FF20", VA = "0x98FF20")]
	private void Movement()
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x98FCE4", Offset = "0x98FCE4", VA = "0x98FCE4")]
	private void CameraRotation()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x990804", Offset = "0x990804", VA = "0x990804")]
	private void ClampXAxis(float value)
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x990850", Offset = "0x990850", VA = "0x990850")]
	private void ClampYAxis(float value)
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x9908C0", Offset = "0x9908C0", VA = "0x9908C0")]
	private void SetCrouch()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x99096C", Offset = "0x99096C", VA = "0x99096C")]
	private float CheckDistance()
	{
		return default(float);
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x98FEB4", Offset = "0x98FEB4", VA = "0x98FEB4")]
	private void HidePlaceExit()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x990B5C", Offset = "0x990B5C", VA = "0x990B5C")]
	public void FootStepPlay()
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x9904EC", Offset = "0x9904EC", VA = "0x9904EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x749610", Offset = "0x749610")]
	private IEnumerator WaitLegsFix()
	{
		return null;
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x990C18", Offset = "0x990C18", VA = "0x990C18")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x2000038")]
public class PlayerControllerY : MonoBehaviour
{
	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x743654", Offset = "0x743654")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x743654", Offset = "0x743654")]
	public GameControll gameControll;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Inventory inventory;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7436C4", Offset = "0x7436C4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7436C4", Offset = "0x7436C4")]
	public float walkSpeed;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x743724", Offset = "0x743724")]
	public float crouchSpeed;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public bool locked;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[HideInInspector]
	public bool lockedMovement;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	[HideInInspector]
	public bool canBeCatchen;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CharacterController characterController;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float moveSpeed;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public bool playerMoving;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x74379C", Offset = "0x74379C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74379C", Offset = "0x74379C")]
	public float mouseSensetivity;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7437FC", Offset = "0x7437FC")]
	public Transform cameraTransform;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float clampX;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float clampY;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x743834", Offset = "0x743834")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x743834", Offset = "0x743834")]
	public Animation cameraAnimation;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x743894", Offset = "0x743894")]
	public string cameraHitAnimName;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7438CC", Offset = "0x7438CC")]
	public string cameraIdleAnimName;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x743904", Offset = "0x743904")]
	public string cameraMoveAnimName;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x74393C", Offset = "0x74393C")]
	private float lerpSpeed;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x743974", Offset = "0x743974")]
	public float normalHeight;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7439AC", Offset = "0x7439AC")]
	public float crouchHeight;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7439E4", Offset = "0x7439E4")]
	public float cameraNormalOffset;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x743A1C", Offset = "0x743A1C")]
	public float cameraCrouchOffset;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x743A54", Offset = "0x743A54")]
	public LayerMask obstacleLayers;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x743A8C", Offset = "0x743A8C")]
	public bool clampByY;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public Vector2 clampXaxis;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public Vector2 clampYaxis;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x743AC4", Offset = "0x743AC4")]
	public float legsFixTime;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public bool crouch;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x743B0C", Offset = "0x743B0C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x743B0C", Offset = "0x743B0C")]
	public Image imageStand;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x743B6C", Offset = "0x743B6C")]
	public Image imageCrouch;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x743BA4", Offset = "0x743BA4")]
	public Image imageExitHidePlace;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x743BDC", Offset = "0x743BDC")]
	public HidePlace hidePlace;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x743C14", Offset = "0x743C14")]
	private AudioSource AS;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x743C4C", Offset = "0x743C4C")]
	public AudioClip[] footSteps;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x743C84", Offset = "0x743C84")]
	public AudioClip legBreakSound;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool legBreak;

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x9915A4", Offset = "0x9915A4", VA = "0x9915A4")]
	public PlayerControllerY()
	{
	}
}
[Token(Token = "0x2000039")]
public class MadsonD9 : HVRPistol
{
	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x926E9C", Offset = "0x926E9C", VA = "0x926E9C")]
	public MadsonD9()
	{
	}
}
[Token(Token = "0x200003A")]
public class MadsonD9Slide : HVRSlide
{
	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x926EA4", Offset = "0x926EA4", VA = "0x926EA4")]
	public MadsonD9Slide()
	{
	}
}
[Token(Token = "0x200003B")]
public class DemoUIManager : MonoBehaviour
{
	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HVRPlayerController Player;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HVRCameraRig CameraRig;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HVRPlayerInputs Inputs;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI SitStandText;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI ForceGrabText;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Slider TurnRateSlider;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Slider SnapTurnSlider;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI TurnRateText;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshProUGUI SnapRateText;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Toggle SmoothTurnToggle;

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x840348", Offset = "0x840348", VA = "0x840348")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x8406D8", Offset = "0x8406D8", VA = "0x8406D8")]
	private void Update()
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x8406DC", Offset = "0x8406DC", VA = "0x8406DC")]
	public void OnSitStandClicked()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x840720", Offset = "0x840720", VA = "0x840720")]
	public void OnForceGrabClicked()
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x840628", Offset = "0x840628", VA = "0x840628")]
	private void UpdateForceGrabButton()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x840578", Offset = "0x840578", VA = "0x840578")]
	private void UpdateSitStandButton()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x84074C", Offset = "0x84074C", VA = "0x84074C")]
	public void OnTurnRateChanged(float rate)
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x8407A4", Offset = "0x8407A4", VA = "0x8407A4")]
	public void OnSnapTurnRateChanged(float rate)
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x8407FC", Offset = "0x8407FC", VA = "0x8407FC")]
	public void OnSmoothTurnChanged(bool smooth)
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x840820", Offset = "0x840820", VA = "0x840820")]
	public DemoUIManager()
	{
	}
}
[Token(Token = "0x200003C")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x73FE90", Offset = "0x73FE90")]
public class FastList<T>
{
	[Token(Token = "0x2000218")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x2000219")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740CD0", Offset = "0x740CD0")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x17000146")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x6000D12")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x17000147")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D14")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D0F")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000D10")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D11")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D13")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x17000001")]
	public int Count
	{
		[Token(Token = "0x60000FD")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000FE")]
		set
		{
		}
	}

	[Token(Token = "0x17000002")]
	public T Item
	{
		[Token(Token = "0x60000FF")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6000100")]
		set
		{
		}
	}

	[Token(Token = "0x60000FB")]
	public FastList()
	{
	}

	[Token(Token = "0x60000FC")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x6000101")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x6000102")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x6000103")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x6000104")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x6000105")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000106")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x6000107")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000108")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x6000109")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600010A")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x600010B")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x600010C")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x600010D")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x600010E")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x600010F")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x749674", Offset = "0x749674")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000110")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x6000111")]
	private void Allocate()
	{
	}

	[Token(Token = "0x6000112")]
	private void Trim()
	{
	}

	[Token(Token = "0x6000113")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000114")]
	public void Release()
	{
	}
}
[Token(Token = "0x200003D")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x8C18AC", Offset = "0x8C18AC", VA = "0x8C18AC")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x200003E")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x8C1880", Offset = "0x8C1880", VA = "0x8C1880")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x200003F")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x98C1C0", Offset = "0x98C1C0", VA = "0x98C1C0")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x98C32C", Offset = "0x98C32C", VA = "0x98C32C")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x98C6D0", Offset = "0x98C6D0", VA = "0x98C6D0")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x98C878", Offset = "0x98C878", VA = "0x98C878", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x98C8A4", Offset = "0x98C8A4", VA = "0x98C8A4")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x2000040")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x9915B4", Offset = "0x9915B4", VA = "0x9915B4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x991640", Offset = "0x991640", VA = "0x991640")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x9917AC", Offset = "0x9917AC", VA = "0x9917AC")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x2000041")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x17000003")]
	public bool IsVisible
	{
		[Token(Token = "0x600011F")]
		[Address(RVA = "0x8B9224", Offset = "0x8B9224", VA = "0x8B9224")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000120")]
		[Address(RVA = "0x8B922C", Offset = "0x8B922C", VA = "0x8B922C")]
		set
		{
		}
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x8B9354", Offset = "0x8B9354", VA = "0x8B9354")]
	private void Start()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x8B9570", Offset = "0x8B9570", VA = "0x8B9570")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x8B9578", Offset = "0x8B9578", VA = "0x8B9578")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x2000042")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x200021A")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x99286C", Offset = "0x99286C", VA = "0x99286C")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200021B")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x748D60", Offset = "0x748D60")]
		public float FakeLatencyMax;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x748D78", Offset = "0x748D78")]
		public float FakeLatencyMin;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x748D90", Offset = "0x748D90")]
		public float LatencyWeight;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x748DA8", Offset = "0x748DA8")]
		public int MaxSamples;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x992874", Offset = "0x992874", VA = "0x992874")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x992A0C", Offset = "0x992A0C", VA = "0x992A0C")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x991F1C", Offset = "0x991F1C", VA = "0x991F1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x992040", Offset = "0x992040", VA = "0x992040")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x9923A0", Offset = "0x9923A0", VA = "0x9923A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x992304", Offset = "0x992304", VA = "0x992304")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x9925FC", Offset = "0x9925FC", VA = "0x9925FC")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x992980", Offset = "0x992980", VA = "0x992980")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x2000043")]
public class P2PManager
{
	[Token(Token = "0x200021C")]
	private enum MessageType : byte
	{
		[Token(Token = "0x400122D")]
		Update = 1
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x98D7E0", Offset = "0x98D7E0", VA = "0x98D7E0")]
	public P2PManager()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x98D8A0", Offset = "0x98D8A0", VA = "0x98D8A0")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x98D984", Offset = "0x98D984", VA = "0x98D984")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x98DA08", Offset = "0x98DA08", VA = "0x98DA08")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x98DB64", Offset = "0x98DB64", VA = "0x98DB64")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x98DE14", Offset = "0x98DE14", VA = "0x98DE14")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x98E208", Offset = "0x98E208", VA = "0x98E208")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x98E4AC", Offset = "0x98E4AC", VA = "0x98E4AC")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x98DFD8", Offset = "0x98DFD8", VA = "0x98DFD8")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x98E3DC", Offset = "0x98E3DC", VA = "0x98E3DC")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x98E0C0", Offset = "0x98E0C0", VA = "0x98E0C0")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x98E6C4", Offset = "0x98E6C4", VA = "0x98E6C4")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x98E020", Offset = "0x98E020", VA = "0x98E020")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x98E420", Offset = "0x98E420", VA = "0x98E420")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x98E168", Offset = "0x98E168", VA = "0x98E168")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x98E750", Offset = "0x98E750", VA = "0x98E750")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x2000044")]
public class PlayerController1 : SocialPlatformManager
{
	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x990D64", Offset = "0x990D64", VA = "0x990D64", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x990DA0", Offset = "0x990DA0", VA = "0x990DA0", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x990DD8", Offset = "0x990DD8", VA = "0x990DD8", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x990E00", Offset = "0x990E00", VA = "0x990E00")]
	private void checkInput()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x990FA0", Offset = "0x990FA0", VA = "0x990FA0")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x991020", Offset = "0x991020", VA = "0x991020")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x991074", Offset = "0x991074", VA = "0x991074")]
	public PlayerController1()
	{
	}
}
[Token(Token = "0x2000045")]
public class RemotePlayer
{
	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x992A94", Offset = "0x992A94", VA = "0x992A94")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x2000046")]
public class RoomManager
{
	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x992A9C", Offset = "0x992A9C", VA = "0x992A9C")]
	public RoomManager()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x992B68", Offset = "0x992B68", VA = "0x992B68")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x992CC8", Offset = "0x992CC8", VA = "0x992CC8")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x992DD8", Offset = "0x992DD8", VA = "0x992DD8")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x992E8C", Offset = "0x992E8C", VA = "0x992E8C")]
	private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x992FC0", Offset = "0x992FC0", VA = "0x992FC0")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x992CF8", Offset = "0x992CF8", VA = "0x992CF8")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x99304C", Offset = "0x99304C", VA = "0x99304C")]
	private void JoinRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x9936E8", Offset = "0x9936E8", VA = "0x9936E8")]
	private void RoomUpdateCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x9939B8", Offset = "0x9939B8", VA = "0x9939B8")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x9932EC", Offset = "0x9932EC", VA = "0x9932EC")]
	private void ProcessRoomData(Message<Room> msg)
	{
	}
}
[Token(Token = "0x2000047")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x200021D")]
	public enum State
	{
		[Token(Token = "0x400122F")]
		INITIALIZING,
		[Token(Token = "0x4001230")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x4001231")]
		CREATING_A_ROOM,
		[Token(Token = "0x4001232")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x4001233")]
		JOINING_A_ROOM,
		[Token(Token = "0x4001234")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x4001235")]
		LEAVING_A_ROOM,
		[Token(Token = "0x4001236")]
		SHUTDOWN
	}

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x17000004")]
	public static State CurrentState
	{
		[Token(Token = "0x6000159")]
		[Address(RVA = "0x8A423C", Offset = "0x8A423C", VA = "0x8A423C")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000005")]
	public static ulong MyID
	{
		[Token(Token = "0x600015A")]
		[Address(RVA = "0x8A42B0", Offset = "0x8A42B0", VA = "0x8A42B0")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000006")]
	public static string MyOculusID
	{
		[Token(Token = "0x600015B")]
		[Address(RVA = "0x8A4388", Offset = "0x8A4388", VA = "0x8A4388")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x8A24D4", Offset = "0x8A24D4", VA = "0x8A24D4", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x8A2860", Offset = "0x8A2860", VA = "0x8A2860", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x8A2F3C", Offset = "0x8A2F3C", VA = "0x8A2F3C")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x8A3204", Offset = "0x8A3204", VA = "0x8A3204", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x8A3208", Offset = "0x8A3208", VA = "0x8A3208")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x8A32FC", Offset = "0x8A32FC", VA = "0x8A32FC")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x8A39F0", Offset = "0x8A39F0", VA = "0x8A39F0")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x8A3EB0", Offset = "0x8A3EB0", VA = "0x8A3EB0")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x8A407C", Offset = "0x8A407C", VA = "0x8A407C")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x8A41CC", Offset = "0x8A41CC", VA = "0x8A41CC")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x8A2B60", Offset = "0x8A2B60", VA = "0x8A2B60")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x8A3098", Offset = "0x8A3098", VA = "0x8A3098")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x8A2C14", Offset = "0x8A2C14", VA = "0x8A2C14")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x8A449C", Offset = "0x8A449C", VA = "0x8A449C")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x8A461C", Offset = "0x8A461C", VA = "0x8A461C")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x8A4704", Offset = "0x8A4704", VA = "0x8A4704")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x8A4828", Offset = "0x8A4828", VA = "0x8A4828")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x8A48F8", Offset = "0x8A48F8", VA = "0x8A48F8")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x8A3148", Offset = "0x8A3148", VA = "0x8A3148")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x8A4D24", Offset = "0x8A4D24", VA = "0x8A4D24")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x8A4DB0", Offset = "0x8A4DB0", VA = "0x8A4DB0")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x8A4B48", Offset = "0x8A4B48", VA = "0x8A4B48")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x8A4F84", Offset = "0x8A4F84", VA = "0x8A4F84")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x8A244C", Offset = "0x8A244C", VA = "0x8A244C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x7496D8", Offset = "0x7496D8")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x8A50C0", Offset = "0x8A50C0", VA = "0x8A50C0")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x8A5188", Offset = "0x8A5188", VA = "0x8A5188")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x2000048")]
public class VoipManager
{
	[Token(Token = "0x600016B")]
	[Address(RVA = "0xF0F30C", Offset = "0xF0F30C", VA = "0xF0F30C")]
	public VoipManager()
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xF0F3CC", Offset = "0xF0F3CC", VA = "0xF0F3CC")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xF0F4B0", Offset = "0xF0F4B0", VA = "0xF0F4B0")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xF0F534", Offset = "0xF0F534", VA = "0xF0F534")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xF0F690", Offset = "0xF0F690", VA = "0xF0F690")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x2000049")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x8B8EB0", Offset = "0x8B8EB0", VA = "0x8B8EB0")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x8B8F20", Offset = "0x8B8F20", VA = "0x8B8F20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x8B909C", Offset = "0x8B909C", VA = "0x8B909C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x8B9100", Offset = "0x8B9100", VA = "0x8B9100")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x8B8F5C", Offset = "0x8B8F5C", VA = "0x8B8F5C")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x8B91BC", Offset = "0x8B91BC", VA = "0x8B91BC")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x8B921C", Offset = "0x8B921C", VA = "0x8B921C")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x200004A")]
public class AvatarLayer
{
	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x8375C8", Offset = "0x8375C8", VA = "0x8375C8")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x200004B")]
public class PacketRecordSettings
{
	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x98E7DC", Offset = "0x98E7DC", VA = "0x98E7DC")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x200004C")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x200021E")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x97F980", Offset = "0x97F980", VA = "0x97F980")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x200021F")]
	public enum HandType
	{
		[Token(Token = "0x4001239")]
		Right,
		[Token(Token = "0x400123A")]
		Left,
		[Token(Token = "0x400123B")]
		Max
	}

	[Token(Token = "0x2000220")]
	public enum HandJoint
	{
		[Token(Token = "0x400123D")]
		HandBase,
		[Token(Token = "0x400123E")]
		IndexBase,
		[Token(Token = "0x400123F")]
		IndexTip,
		[Token(Token = "0x4001240")]
		ThumbBase,
		[Token(Token = "0x4001241")]
		ThumbTip,
		[Token(Token = "0x4001242")]
		Max
	}

	[Token(Token = "0x2000221")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740CE0", Offset = "0x740CE0")]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x17000148")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D1C")]
			[Address(RVA = "0x97F910", Offset = "0x97F910", VA = "0x97F910", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000149")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D1E")]
			[Address(RVA = "0x97F978", Offset = "0x97F978", VA = "0x97F978", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0x97F754", Offset = "0x97F754", VA = "0x97F754")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x97F780", Offset = "0x97F780", VA = "0x97F780", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0x97F784", Offset = "0x97F784", VA = "0x97F784", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0x97F918", Offset = "0x97F918", VA = "0x97F918", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x743CCC", Offset = "0x743CCC")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x743D04", Offset = "0x743D04")]
	public bool EnableBody;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x743D3C", Offset = "0x743D3C")]
	public bool RecordPackets;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x743D74", Offset = "0x743D74")]
	public bool StartWithControllers;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x743DAC", Offset = "0x743DAC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x743DAC", Offset = "0x743DAC")]
	[SerializeField]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x743E1C", Offset = "0x743E1C")]
	private bool CombineMeshes;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x743E54", Offset = "0x743E54")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x743E8C", Offset = "0x743E8C")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x743EC4", Offset = "0x743EC4")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x743EFC", Offset = "0x743EFC")]
	public bool EnableLaughter;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x400022B")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x400022D")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x400022E")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x400022F")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x4000230")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x4000231")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xFA7C40", Offset = "0xFA7C40", VA = "0xFA7C40")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xFA7FA8", Offset = "0xFA7FA8", VA = "0xFA7FA8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0xFA8034", Offset = "0xFA8034", VA = "0xFA8034")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xFA80A0", Offset = "0xFA80A0", VA = "0xFA80A0")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xFA81C8", Offset = "0xFA81C8", VA = "0xFA81C8")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xFA82AC", Offset = "0xFA82AC", VA = "0xFA82AC")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xFA838C", Offset = "0xFA838C", VA = "0xFA838C")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0xFA8574", Offset = "0xFA8574", VA = "0xFA8574")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xFA863C", Offset = "0xFA863C", VA = "0xFA863C")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0xFA86C0", Offset = "0xFA86C0", VA = "0xFA86C0")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0xFA87A8", Offset = "0xFA87A8", VA = "0xFA87A8")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0xFA8834", Offset = "0xFA8834", VA = "0xFA8834")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0xFA8950", Offset = "0xFA8950", VA = "0xFA8950")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0xFA89B0", Offset = "0xFA89B0", VA = "0xFA89B0")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x6000187")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xFA8E34", Offset = "0xFA8E34", VA = "0xFA8E34")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xFA9194", Offset = "0xFA9194", VA = "0xFA9194")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0xFA92F8", Offset = "0xFA92F8", VA = "0xFA92F8")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0xFA95C0", Offset = "0xFA95C0", VA = "0xFA95C0")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0xFA96AC", Offset = "0xFA96AC", VA = "0xFA96AC")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0xFA9A60", Offset = "0xFA9A60", VA = "0xFA9A60")]
	private void Start()
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0xFA9D60", Offset = "0xFA9D60", VA = "0xFA9D60")]
	private void Update()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0xFAA778", Offset = "0xFAA778", VA = "0xFAA778")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0xFAA7CC", Offset = "0xFAA7CC", VA = "0xFAA7CC")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xFA9928", Offset = "0xFA9928", VA = "0xFA9928")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xFA99C4", Offset = "0xFA99C4", VA = "0xFA99C4")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xFAA7FC", Offset = "0xFAA7FC", VA = "0xFAA7FC")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xFAA0D4", Offset = "0xFAA0D4", VA = "0xFAA0D4")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xFAAA48", Offset = "0xFAAA48", VA = "0xFAAA48")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xFAA864", Offset = "0xFAA864", VA = "0xFAA864")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xFAACE4", Offset = "0xFAACE4", VA = "0xFAACE4")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xFAB0E8", Offset = "0xFAB0E8", VA = "0xFAB0E8")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xFAB318", Offset = "0xFAB318", VA = "0xFAB318")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xFAB458", Offset = "0xFAB458", VA = "0xFAB458")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xFAB610", Offset = "0xFAB610", VA = "0xFAB610")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xFAA274", Offset = "0xFAA274", VA = "0xFAA274")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xFAB6E8", Offset = "0xFAB6E8", VA = "0xFAB6E8")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xFAA0E4", Offset = "0xFAA0E4", VA = "0xFAA0E4")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0xFAB7DC", Offset = "0xFAB7DC", VA = "0xFAB7DC")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xFABD88", Offset = "0xFABD88", VA = "0xFABD88")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xFAC248", Offset = "0xFAC248", VA = "0xFAC248")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xFAC2C0", Offset = "0xFAC2C0", VA = "0xFAC2C0")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xFAC33C", Offset = "0xFAC33C", VA = "0xFAC33C")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xFAA60C", Offset = "0xFAA60C", VA = "0xFAA60C")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xFAB898", Offset = "0xFAB898", VA = "0xFAB898")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xFAC7D4", Offset = "0xFAC7D4", VA = "0xFAC7D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74973C", Offset = "0x74973C")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xFAC844", Offset = "0xFAC844", VA = "0xFAC844")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xFAC678", Offset = "0xFAC678", VA = "0xFAC678")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xFAC90C", Offset = "0xFAC90C", VA = "0xFAC90C")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xFAC9F8", Offset = "0xFAC9F8", VA = "0xFAC9F8")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xFAC40C", Offset = "0xFAC40C", VA = "0xFAC40C")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xFACAE4", Offset = "0xFACAE4", VA = "0xFACAE4")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x200004D")]
public class OvrAvatarAsset
{
	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x97F9FC", Offset = "0x97F9FC", VA = "0x97F9FC")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x200004E")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x97FAAC", Offset = "0x97FAAC", VA = "0x97FAAC")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x980D8C", Offset = "0x980D8C", VA = "0x980D8C")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x980930", Offset = "0x980930", VA = "0x980930")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x9806D4", Offset = "0x9806D4", VA = "0x9806D4")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x9807A4", Offset = "0x9807A4", VA = "0x9807A4")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x980FF0", Offset = "0x980FF0", VA = "0x980FF0")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x200004F")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x400024E")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x981570", Offset = "0x981570", VA = "0x981570")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x2000050")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x9817D8", Offset = "0x9817D8", VA = "0x9817D8")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x981BD8", Offset = "0x981BD8", VA = "0x981BD8")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x2000051")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x981CD4", Offset = "0x981CD4", VA = "0x981CD4")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x981E30", Offset = "0x981E30", VA = "0x981E30")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x981F4C", Offset = "0x981F4C", VA = "0x981F4C")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x2000052")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x981FB0", Offset = "0x981FB0", VA = "0x981FB0")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x9818F4", Offset = "0x9818F4", VA = "0x9818F4")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x982594", Offset = "0x982594", VA = "0x982594")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x9825F4", Offset = "0x9825F4", VA = "0x9825F4")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x982DD8", Offset = "0x982DD8", VA = "0x982DD8")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x981C3C", Offset = "0x981C3C", VA = "0x981C3C")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x2000053")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x2000222")]
	public enum PacketMode
	{
		[Token(Token = "0x4001247")]
		SDK,
		[Token(Token = "0x4001248")]
		Unity
	}

	[Token(Token = "0x2000223")]
	public struct ControllerPose
	{
		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x984400", Offset = "0x984400", VA = "0x984400")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x2000224")]
	public struct PoseFrame
	{
		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x98455C", Offset = "0x98455C", VA = "0x98455C")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x9840D4", Offset = "0x9840D4", VA = "0x9840D4")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x60001C2")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x9840E4", Offset = "0x9840E4", VA = "0x9840E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x984170", Offset = "0x984170", VA = "0x984170")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x9843E8", Offset = "0x9843E8", VA = "0x9843E8")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x9843F0", Offset = "0x9843F0", VA = "0x9843F0")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x2000054")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x984914", Offset = "0x984914", VA = "0x984914")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x984A70", Offset = "0x984A70", VA = "0x984A70")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x2000055")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x984ADC", Offset = "0x984ADC", VA = "0x984ADC")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x984C48", Offset = "0x984C48", VA = "0x984C48")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x984FEC", Offset = "0x984FEC", VA = "0x984FEC")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x985208", Offset = "0x985208", VA = "0x985208", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x985234", Offset = "0x985234", VA = "0x985234")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x2000056")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x2000225")]
	public enum TextureType
	{
		[Token(Token = "0x4001259")]
		DiffuseTextures,
		[Token(Token = "0x400125A")]
		NormalMaps,
		[Token(Token = "0x400125B")]
		RoughnessMaps,
		[Token(Token = "0x400125C")]
		Count
	}

	[Token(Token = "0x2000226")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x2000227")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x2000228")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x2000229")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x987454", Offset = "0x987454", VA = "0x987454")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x200022A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740CF0", Offset = "0x740CF0")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x1700014A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D25")]
			[Address(RVA = "0x987D64", Offset = "0x987D64", VA = "0x987D64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D27")]
			[Address(RVA = "0x987DCC", Offset = "0x987DCC", VA = "0x987DCC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x9872BC", Offset = "0x9872BC", VA = "0x9872BC")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x9876EC", Offset = "0x9876EC", VA = "0x9876EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x9876F0", Offset = "0x9876F0", VA = "0x9876F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x987D6C", Offset = "0x987D6C", VA = "0x987D6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x4000282")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x4000283")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x4000284")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x4000285")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x9852E4", Offset = "0x9852E4", VA = "0x9852E4")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x985444", Offset = "0x985444", VA = "0x985444")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x98546C", Offset = "0x98546C", VA = "0x98546C")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x985B84", Offset = "0x985B84", VA = "0x985B84")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x985E04", Offset = "0x985E04", VA = "0x985E04")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x985500", Offset = "0x985500", VA = "0x985500")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x985EF4", Offset = "0x985EF4", VA = "0x985EF4")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x985900", Offset = "0x985900", VA = "0x985900")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x98615C", Offset = "0x98615C", VA = "0x98615C")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x9863D4", Offset = "0x9863D4", VA = "0x9863D4")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x9864D0", Offset = "0x9864D0", VA = "0x9864D0")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x986508", Offset = "0x986508", VA = "0x986508")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x985B08", Offset = "0x985B08", VA = "0x985B08")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7497A0", Offset = "0x7497A0")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x9872E8", Offset = "0x9872E8", VA = "0x9872E8")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x2000057")]
public class OvrAvatarPacket
{
	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x17000007")]
	public float Duration
	{
		[Token(Token = "0x60001DD")]
		[Address(RVA = "0x987DD4", Offset = "0x987DD4", VA = "0x987DD4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000008")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x60001DE")]
		[Address(RVA = "0x987E40", Offset = "0x987E40", VA = "0x987E40")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x987EC4", Offset = "0x987EC4", VA = "0x987EC4")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x987F88", Offset = "0x987F88", VA = "0x987F88")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x9880C8", Offset = "0x9880C8", VA = "0x9880C8")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x9881A4", Offset = "0x9881A4", VA = "0x9881A4")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x988274", Offset = "0x988274", VA = "0x988274")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x98847C", Offset = "0x98847C", VA = "0x98847C")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x9886D4", Offset = "0x9886D4", VA = "0x9886D4")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x2000058")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x837E04", Offset = "0x837E04", VA = "0x837E04")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x837F18", Offset = "0x837F18", VA = "0x837F18")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x8380C4", Offset = "0x8380C4", VA = "0x8380C4")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x837F88", Offset = "0x837F88", VA = "0x837F88")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x83801C", Offset = "0x83801C", VA = "0x83801C")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x2000059")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x837A04", Offset = "0x837A04", VA = "0x837A04")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x837DA8", Offset = "0x837DA8", VA = "0x837DA8")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x837BA4", Offset = "0x837BA4", VA = "0x837BA4")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x837C1C", Offset = "0x837C1C", VA = "0x837C1C")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x837CB8", Offset = "0x837CB8", VA = "0x837CB8")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x200005A")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x400028D")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x400028E")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x9888C4", Offset = "0x9888C4", VA = "0x9888C4")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x988950", Offset = "0x988950", VA = "0x988950", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x98896C", Offset = "0x98896C", VA = "0x98896C")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x988B18", Offset = "0x988B18", VA = "0x988B18")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x988CC0", Offset = "0x988CC0", VA = "0x988CC0")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x200005B")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x988D40", Offset = "0x988D40", VA = "0x988D40")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x988E24", Offset = "0x988E24", VA = "0x988E24")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x989018", Offset = "0x989018", VA = "0x989018")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x9893AC", Offset = "0x9893AC", VA = "0x9893AC")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x9894A4", Offset = "0x9894A4", VA = "0x9894A4")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x200005C")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x4000297")]
	Body = 1,
	[Token(Token = "0x4000298")]
	Hands = 2,
	[Token(Token = "0x4000299")]
	Base = 4,
	[Token(Token = "0x400029A")]
	BodyTilt = 0x10,
	[Token(Token = "0x400029B")]
	Expressive = 0x20,
	[Token(Token = "0x400029C")]
	All = -1
}
[Token(Token = "0x200005D")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x400029E")]
	AvatarSpecification,
	[Token(Token = "0x400029F")]
	AssetLoaded,
	[Token(Token = "0x40002A0")]
	Count
}
[Token(Token = "0x200005E")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x200005F")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x2000060")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x40002A6")]
	Mesh,
	[Token(Token = "0x40002A7")]
	Texture,
	[Token(Token = "0x40002A8")]
	Pose,
	[Token(Token = "0x40002A9")]
	Material,
	[Token(Token = "0x40002AA")]
	CombinedMesh,
	[Token(Token = "0x40002AB")]
	PBSMaterial,
	[Token(Token = "0x40002AC")]
	FailedLoad,
	[Token(Token = "0x40002AD")]
	Count
}
[Token(Token = "0x2000061")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x2000062")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x2000063")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x2000064")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000065")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000066")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x40002E2")]
	RGB24,
	[Token(Token = "0x40002E3")]
	DXT1,
	[Token(Token = "0x40002E4")]
	DXT5,
	[Token(Token = "0x40002E5")]
	ASTC_RGB_6x6,
	[Token(Token = "0x40002E6")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x40002E7")]
	Count
}
[Token(Token = "0x2000067")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x2000068")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x40002EF")]
	SkinnedMeshRender,
	[Token(Token = "0x40002F0")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x40002F1")]
	ProjectorRender,
	[Token(Token = "0x40002F2")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x40002F3")]
	Count
}
[Token(Token = "0x2000069")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x40002F5")]
	Unknown,
	[Token(Token = "0x40002F6")]
	Default,
	[Token(Token = "0x40002F7")]
	Verbose,
	[Token(Token = "0x40002F8")]
	Debug,
	[Token(Token = "0x40002F9")]
	Info,
	[Token(Token = "0x40002FA")]
	Warn,
	[Token(Token = "0x40002FB")]
	Error,
	[Token(Token = "0x40002FC")]
	Fatal,
	[Token(Token = "0x40002FD")]
	Silent
}
[Token(Token = "0x200006A")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x200006B")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x4000302")]
	One = 1,
	[Token(Token = "0x4000303")]
	Two = 2,
	[Token(Token = "0x4000304")]
	Three = 4,
	[Token(Token = "0x4000305")]
	Joystick = 8
}
[Token(Token = "0x200006C")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x4000307")]
	One = 1,
	[Token(Token = "0x4000308")]
	Two = 2,
	[Token(Token = "0x4000309")]
	Joystick = 4,
	[Token(Token = "0x400030A")]
	ThumbRest = 8,
	[Token(Token = "0x400030B")]
	Index = 0x10,
	[Token(Token = "0x400030C")]
	Pointing = 0x40,
	[Token(Token = "0x400030D")]
	ThumbUp = 0x80
}
[Token(Token = "0x200006D")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x200006E")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x200006F")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x2000070")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000071")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000072")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x2000073")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000074")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000075")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x400032D")]
	Add,
	[Token(Token = "0x400032E")]
	Multiply,
	[Token(Token = "0x400032F")]
	Count
}
[Token(Token = "0x2000076")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x4000331")]
	Color,
	[Token(Token = "0x4000332")]
	Texture,
	[Token(Token = "0x4000333")]
	TextureSingleChannel,
	[Token(Token = "0x4000334")]
	Parallax,
	[Token(Token = "0x4000335")]
	Count
}
[Token(Token = "0x2000077")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x4000337")]
	None,
	[Token(Token = "0x4000338")]
	Positional,
	[Token(Token = "0x4000339")]
	ViewReflection,
	[Token(Token = "0x400033A")]
	Fresnel,
	[Token(Token = "0x400033B")]
	Pulse,
	[Token(Token = "0x400033C")]
	Count
}
[Token(Token = "0x2000078")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x400033E")]
	Touch,
	[Token(Token = "0x400033F")]
	Malibu,
	[Token(Token = "0x4000340")]
	Go,
	[Token(Token = "0x4000341")]
	Quest,
	[Token(Token = "0x4000342")]
	Count
}
[Token(Token = "0x2000079")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x4000344")]
	Lowest = 1,
	[Token(Token = "0x4000345")]
	Medium = 3,
	[Token(Token = "0x4000346")]
	Highest = 5
}
[Token(Token = "0x200007A")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x4000348")]
	Unknown = -1,
	[Token(Token = "0x4000349")]
	One,
	[Token(Token = "0x400034A")]
	Two
}
[Token(Token = "0x200007B")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xF11E8C", Offset = "0xF11E8C", VA = "0xF11E8C")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x640A34", Offset = "0x640A34", VA = "0x640A34", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x640A3C", Offset = "0x640A3C", VA = "0x640A3C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200007C")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xF121C0", Offset = "0xF121C0", VA = "0xF121C0")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x640C74", Offset = "0x640C74", VA = "0x640C74", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x640C7C", Offset = "0x640C7C", VA = "0x640C7C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200007D")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xF11534", Offset = "0xF11534", VA = "0xF11534")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x64077C", Offset = "0x64077C", VA = "0x64077C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x640784", Offset = "0x640784", VA = "0x640784", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200007E")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xF126EC", Offset = "0xF126EC", VA = "0xF126EC")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x6414FC", Offset = "0x6414FC", VA = "0x6414FC", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x641504", Offset = "0x641504", VA = "0x641504", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200007F")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x97FA04", Offset = "0x97FA04", VA = "0x97FA04")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x2000080")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x2000081")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x400037F")]
	FirstPerson = 1,
	[Token(Token = "0x4000380")]
	ThirdPerson = 2,
	[Token(Token = "0x4000381")]
	SelfOccluding = 4
}
[Token(Token = "0x2000082")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000083")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000084")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x2000085")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000086")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x4000397")]
	Default,
	[Token(Token = "0x4000398")]
	GripSphere,
	[Token(Token = "0x4000399")]
	GripCube,
	[Token(Token = "0x400039A")]
	Count
}
[Token(Token = "0x2000087")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x400039C")]
	Body,
	[Token(Token = "0x400039D")]
	Clothing,
	[Token(Token = "0x400039E")]
	Eyewear,
	[Token(Token = "0x400039F")]
	Hair,
	[Token(Token = "0x40003A0")]
	Beard,
	[Token(Token = "0x40003A1")]
	Count
}
[Token(Token = "0x2000088")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x2000089")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x200008A")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x200008B")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x200008C")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x40003AB")]
	AvatarHead,
	[Token(Token = "0x40003AC")]
	AvatarHand,
	[Token(Token = "0x40003AD")]
	Object,
	[Token(Token = "0x40003AE")]
	ObjectStatic,
	[Token(Token = "0x40003AF")]
	Count
}
[Token(Token = "0x200008D")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x200008E")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x200008F")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x2000090")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x2000091")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x40003BB")]
	Point,
	[Token(Token = "0x40003BC")]
	Direction,
	[Token(Token = "0x40003BD")]
	Spot,
	[Token(Token = "0x40003BE")]
	Count
}
[Token(Token = "0x2000092")]
public struct ovrAvatarLight
{
	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x2000093")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x2000094")]
public struct ovrAvatarLights
{
	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x2000095")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x2000096")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x40003D4")]
	None = 0u,
	[Token(Token = "0x40003D5")]
	GazeTarget = 1u,
	[Token(Token = "0x40003D6")]
	Any = uint.MaxValue
}
[Token(Token = "0x2000097")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x2000098")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x2000099")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x200009A")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x200009B")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x200009C")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x200022B")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x62F890", Offset = "0x62F890", VA = "0x62F890")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x40003EB")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x17000009")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x600021B")]
		[Address(RVA = "0x982E6C", Offset = "0x982E6C", VA = "0x982E6C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x9894B4", Offset = "0x9894B4", VA = "0x9894B4")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x989700", Offset = "0x989700", VA = "0x989700")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x989774", Offset = "0x989774", VA = "0x989774")]
	private void Update()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x989FB8", Offset = "0x989FB8", VA = "0x989FB8")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x98A010", Offset = "0x98A010", VA = "0x98A010")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x98A068", Offset = "0x98A068", VA = "0x98A068")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x98A0D0", Offset = "0x98A0D0", VA = "0x98A0D0")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x98A138", Offset = "0x98A138", VA = "0x98A138")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x989DF0", Offset = "0x989DF0", VA = "0x989DF0")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x98A218", Offset = "0x98A218", VA = "0x98A218")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x98A334", Offset = "0x98A334", VA = "0x98A334")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x982FFC", Offset = "0x982FFC", VA = "0x982FFC")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x98A414", Offset = "0x98A414", VA = "0x98A414")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x9896B4", Offset = "0x9896B4", VA = "0x9896B4")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x985BE4", Offset = "0x985BE4", VA = "0x985BE4")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x98A4EC", Offset = "0x98A4EC", VA = "0x98A4EC")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x200009D")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x1700000A")]
	public static string AppID
	{
		[Token(Token = "0x600022C")]
		[Address(RVA = "0x98A4AC", Offset = "0x98A4AC", VA = "0x98A4AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600022D")]
		[Address(RVA = "0x98A644", Offset = "0x98A644", VA = "0x98A644")]
		set
		{
		}
	}

	[Token(Token = "0x1700000B")]
	public static string MobileAppID
	{
		[Token(Token = "0x600022E")]
		[Address(RVA = "0x98A4CC", Offset = "0x98A4CC", VA = "0x98A4CC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600022F")]
		[Address(RVA = "0x98A670", Offset = "0x98A670", VA = "0x98A670")]
		set
		{
		}
	}

	[Token(Token = "0x1700000C")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x6000230")]
		[Address(RVA = "0x98A530", Offset = "0x98A530", VA = "0x98A530")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000231")]
		[Address(RVA = "0x98A69C", Offset = "0x98A69C", VA = "0x98A69C")]
		set
		{
		}
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x98A6F0", Offset = "0x98A6F0", VA = "0x98A6F0")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x200009E")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x98BDCC", Offset = "0x98BDCC", VA = "0x98BDCC")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x981FB8", Offset = "0x981FB8", VA = "0x981FB8")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x98BF10", Offset = "0x98BF10", VA = "0x98BF10")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x98C070", Offset = "0x98C070", VA = "0x98C070")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x200009F")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x98C080", Offset = "0x98C080", VA = "0x98C080")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x9821E0", Offset = "0x9821E0", VA = "0x9821E0")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x98C1B0", Offset = "0x98C1B0", VA = "0x98C1B0")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x20000A0")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x40003FA")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x40003FB")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x40003FC")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x98A748", Offset = "0x98A748", VA = "0x98A748")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x982378", Offset = "0x982378", VA = "0x982378")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x98B588", Offset = "0x98B588", VA = "0x98B588")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x98AD1C", Offset = "0x98AD1C", VA = "0x98AD1C")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x98AAEC", Offset = "0x98AAEC", VA = "0x98AAEC")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x98AC00", Offset = "0x98AC00", VA = "0x98AC00")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x98BDBC", Offset = "0x98BDBC", VA = "0x98BDBC")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x20000A1")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200022C")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x200022D")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0x62F8F8", Offset = "0x62F8F8", VA = "0x62F8F8")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x200022E")]
	public struct TextureSet
	{
		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x62F980", Offset = "0x62F980", VA = "0x62F980")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x200022F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740D00", Offset = "0x740D00")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x1700014C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D2E")]
			[Address(RVA = "0x98D5A8", Offset = "0x98D5A8", VA = "0x98D5A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D30")]
			[Address(RVA = "0x98D610", Offset = "0x98D610", VA = "0x98D610", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x98CF6C", Offset = "0x98CF6C", VA = "0x98CF6C")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x98D0D4", Offset = "0x98D0D4", VA = "0x98D0D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x98D0D8", Offset = "0x98D0D8", VA = "0x98D0D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x98D5B0", Offset = "0x98D5B0", VA = "0x98D5B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x4000400")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x4000401")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x4000404")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x4000405")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x4000406")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x4000407")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x4000408")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x4000409")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x400040A")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x98C964", Offset = "0x98C964", VA = "0x98C964")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x98CCC0", Offset = "0x98CCC0", VA = "0x98CCC0")]
	public void Update()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x987D14", Offset = "0x987D14", VA = "0x987D14")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x985FD8", Offset = "0x985FD8", VA = "0x985FD8")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x98CE28", Offset = "0x98CE28", VA = "0x98CE28")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x985C68", Offset = "0x985C68", VA = "0x985C68")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x985E4C", Offset = "0x985E4C", VA = "0x985E4C")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x98CED8", Offset = "0x98CED8", VA = "0x98CED8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7498A4", Offset = "0x7498A4")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x98A1CC", Offset = "0x98A1CC", VA = "0x98A1CC")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x98CF98", Offset = "0x98CF98", VA = "0x98CF98")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x20000A2")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x98D618", Offset = "0x98D618", VA = "0x98D618")]
	private void Update()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x98D774", Offset = "0x98D774", VA = "0x98D774")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x20000A3")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x2000230")]
	public delegate void OnClick();

	[Token(Token = "0x2000231")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x2000232")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x2000233")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x2000234")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740D10", Offset = "0x740D10")]
	private sealed class <>c__DisplayClass36_0
	{
		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x83E49C", Offset = "0x83E49C", VA = "0x83E49C")]
		public <>c__DisplayClass36_0()
		{
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x83ECE8", Offset = "0x83ECE8", VA = "0x83ECE8")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x2000235")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740D20", Offset = "0x740D20")]
	private sealed class <>c__DisplayClass38_0
	{
		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x83E62C", Offset = "0x83E62C", VA = "0x83E62C")]
		public <>c__DisplayClass38_0()
		{
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x83EF0C", Offset = "0x83EF0C", VA = "0x83EF0C")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x2000236")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740D30", Offset = "0x740D30")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x83E7A8", Offset = "0x83E7A8", VA = "0x83E7A8")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x83F184", Offset = "0x83F184", VA = "0x83F184")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000237")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740D40", Offset = "0x740D40")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x83E93C", Offset = "0x83E93C", VA = "0x83E93C")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x83F538", Offset = "0x83F538", VA = "0x83F538")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000238")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740D50", Offset = "0x740D50")]
	private sealed class <>c__DisplayClass42_0
	{
		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x83EB94", Offset = "0x83EB94", VA = "0x83EB94")]
		public <>c__DisplayClass42_0()
		{
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x83F558", Offset = "0x83F558", VA = "0x83F558")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x400040D")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x400040E")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x400040F")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool[] reEnable;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x400041D")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x400041E")]
	private const float marginH = 16f;

	[Token(Token = "0x400041F")]
	private const float marginV = 16f;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector2[] insertPositions;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 menuOffset;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private OVRCameraRig rig;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LaserPointer lp;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private LineRenderer lr;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x83DB90", Offset = "0x83DB90", VA = "0x83DB90")]
	public void Awake()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x836AA0", Offset = "0x836AA0", VA = "0x836AA0")]
	public void Show()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x837030", Offset = "0x837030", VA = "0x837030")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x83DF94", Offset = "0x83DF94", VA = "0x83DF94")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x83E1E8", Offset = "0x83E1E8", VA = "0x83E1E8")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x8365D4", Offset = "0x8365D4", VA = "0x8365D4")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x836444", Offset = "0x836444", VA = "0x836444")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x83E4A4", Offset = "0x83E4A4", VA = "0x83E4A4")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x836528", Offset = "0x836528", VA = "0x836528")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x83E634", Offset = "0x83E634", VA = "0x83E634")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x83E7B0", Offset = "0x83E7B0", VA = "0x83E7B0")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x83E944", Offset = "0x83E944", VA = "0x83E944")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x83EB9C", Offset = "0x83EB9C", VA = "0x83EB9C")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x8369F0", Offset = "0x8369F0", VA = "0x8369F0")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x83EC78", Offset = "0x83EC78", VA = "0x83EC78")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x20000A4")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x8B958C", Offset = "0x8B958C", VA = "0x8B958C")]
	private void Start()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x8B9614", Offset = "0x8B9614", VA = "0x8B9614")]
	private void Update()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x8B96DC", Offset = "0x8B96DC", VA = "0x8B96DC")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x8B9718", Offset = "0x8B9718", VA = "0x8B9718")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x20000A5")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x2000239")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4001297")]
		On,
		[Token(Token = "0x4001298")]
		Off,
		[Token(Token = "0x4001299")]
		OnWhenHitTarget
	}

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x1700000D")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x6000261")]
		[Address(RVA = "0x9200CC", Offset = "0x9200CC", VA = "0x9200CC")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x6000260")]
		[Address(RVA = "0x920088", Offset = "0x920088", VA = "0x920088")]
		set
		{
		}
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x9200D4", Offset = "0x9200D4", VA = "0x9200D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x92012C", Offset = "0x92012C", VA = "0x92012C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x920244", Offset = "0x920244", VA = "0x920244", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x920260", Offset = "0x920260", VA = "0x920260", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x9202B4", Offset = "0x9202B4", VA = "0x9202B4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x920510", Offset = "0x920510", VA = "0x920510")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x920624", Offset = "0x920624", VA = "0x920624")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x9206B8", Offset = "0x9206B8", VA = "0x9206B8")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x920788", Offset = "0x920788", VA = "0x920788")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x920840", Offset = "0x920840", VA = "0x920840")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x92090C", Offset = "0x92090C", VA = "0x92090C")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x20000A6")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x4000433")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x4000434")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x4000435")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x744004", Offset = "0x744004")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74403C", Offset = "0x74403C")]
	public LayerMask CollideLayers;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x744074", Offset = "0x744074")]
	public float HeightOffset;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7440AC", Offset = "0x7440AC")]
	public float MinimumHeight;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7440E4", Offset = "0x7440E4")]
	public float MaximumHeight;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x83A8A8", Offset = "0x83A8A8", VA = "0x83A8A8")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x83A8B0", Offset = "0x83A8B0", VA = "0x83A8B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x83A920", Offset = "0x83A920", VA = "0x83A920")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x83A9AC", Offset = "0x83A9AC", VA = "0x83A9AC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x83AA38", Offset = "0x83AA38", VA = "0x83AA38")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x83AE40", Offset = "0x83AE40", VA = "0x83AE40")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x83B0E8", Offset = "0x83B0E8", VA = "0x83B0E8")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000A7")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x922114", Offset = "0x922114", VA = "0x922114")]
	private void Start()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x9221C0", Offset = "0x9221C0", VA = "0x9221C0")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x20000A8")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x200023A")]
	public enum States
	{
		[Token(Token = "0x400129B")]
		Ready,
		[Token(Token = "0x400129C")]
		Aim,
		[Token(Token = "0x400129D")]
		CancelAim,
		[Token(Token = "0x400129E")]
		PreTeleport,
		[Token(Token = "0x400129F")]
		CancelTeleport,
		[Token(Token = "0x40012A0")]
		Teleporting,
		[Token(Token = "0x40012A1")]
		PostTeleport
	}

	[Token(Token = "0x200023B")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x40012A3")]
		None,
		[Token(Token = "0x40012A4")]
		Aim,
		[Token(Token = "0x40012A5")]
		PreTeleport,
		[Token(Token = "0x40012A6")]
		Teleport
	}

	[Token(Token = "0x200023C")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x40012A8")]
		Point,
		[Token(Token = "0x40012A9")]
		Sphere,
		[Token(Token = "0x40012AA")]
		Capsule
	}

	[Token(Token = "0x200023D")]
	public class AimData
	{
		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x748DC0", Offset = "0x748DC0")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x1700014E")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6000D4C")]
			[Address(RVA = "0x925384", Offset = "0x925384", VA = "0x925384")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74D2A4", Offset = "0x74D2A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D4D")]
			[Address(RVA = "0x92538C", Offset = "0x92538C", VA = "0x92538C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74D2B4", Offset = "0x74D2B4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x925310", Offset = "0x925310", VA = "0x925310")]
		public AimData()
		{
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x925394", Offset = "0x925394", VA = "0x925394")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200023E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740D60", Offset = "0x740D60")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700014F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D52")]
			[Address(RVA = "0x92515C", Offset = "0x92515C", VA = "0x92515C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000150")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D54")]
			[Address(RVA = "0x9251C4", Offset = "0x9251C4", VA = "0x9251C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x923660", Offset = "0x923660", VA = "0x923660")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x925074", Offset = "0x925074", VA = "0x925074", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x925078", Offset = "0x925078", VA = "0x925078", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x925164", Offset = "0x925164", VA = "0x925164", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200023F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740D70", Offset = "0x740D70")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000151")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D58")]
			[Address(RVA = "0x924B3C", Offset = "0x924B3C", VA = "0x924B3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000152")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D5A")]
			[Address(RVA = "0x924BA4", Offset = "0x924BA4", VA = "0x924BA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x923B48", Offset = "0x923B48", VA = "0x923B48")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x924A04", Offset = "0x924A04", VA = "0x924A04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x924A08", Offset = "0x924A08", VA = "0x924A08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0x924B44", Offset = "0x924B44", VA = "0x924B44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000240")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740D80", Offset = "0x740D80")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000153")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D5E")]
			[Address(RVA = "0x924C50", Offset = "0x924C50", VA = "0x924C50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000154")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D60")]
			[Address(RVA = "0x924CB8", Offset = "0x924CB8", VA = "0x924CB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x923D2C", Offset = "0x923D2C", VA = "0x923D2C")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x924BAC", Offset = "0x924BAC", VA = "0x924BAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x924BB0", Offset = "0x924BB0", VA = "0x924BB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x924C58", Offset = "0x924C58", VA = "0x924C58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000241")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740D90", Offset = "0x740D90")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000155")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D64")]
			[Address(RVA = "0x925004", Offset = "0x925004", VA = "0x925004", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000156")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D66")]
			[Address(RVA = "0x92506C", Offset = "0x92506C", VA = "0x92506C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x923F10", Offset = "0x923F10", VA = "0x923F10")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x924F2C", Offset = "0x924F2C", VA = "0x924F2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x924F30", Offset = "0x924F30", VA = "0x924F30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x92500C", Offset = "0x92500C", VA = "0x92500C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000242")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740DA0", Offset = "0x740DA0")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000157")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D6A")]
			[Address(RVA = "0x924D64", Offset = "0x924D64", VA = "0x924D64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000158")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D6C")]
			[Address(RVA = "0x924DCC", Offset = "0x924DCC", VA = "0x924DCC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x9240F4", Offset = "0x9240F4", VA = "0x9240F4")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x924CC0", Offset = "0x924CC0", VA = "0x924CC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x924CC4", Offset = "0x924CC4", VA = "0x924CC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x924D6C", Offset = "0x924D6C", VA = "0x924D6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000243")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740DB0", Offset = "0x740DB0")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000159")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D70")]
			[Address(RVA = "0x9252A0", Offset = "0x9252A0", VA = "0x9252A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D72")]
			[Address(RVA = "0x925308", Offset = "0x925308", VA = "0x925308", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x9242D8", Offset = "0x9242D8", VA = "0x9242D8")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x9251CC", Offset = "0x9251CC", VA = "0x9251CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x9251D0", Offset = "0x9251D0", VA = "0x9251D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x9252A8", Offset = "0x9252A8", VA = "0x9252A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000244")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740DC0", Offset = "0x740DC0")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700015B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D76")]
			[Address(RVA = "0x924EBC", Offset = "0x924EBC", VA = "0x924EBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D78")]
			[Address(RVA = "0x924F24", Offset = "0x924F24", VA = "0x924F24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x9244BC", Offset = "0x9244BC", VA = "0x9244BC")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x924DD4", Offset = "0x924DD4", VA = "0x924DD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x924DD8", Offset = "0x924DD8", VA = "0x924DD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x924EC4", Offset = "0x924EC4", VA = "0x924EC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74411C", Offset = "0x74411C")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x744154", Offset = "0x744154")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74418C", Offset = "0x74418C")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7441C4", Offset = "0x7441C4")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7441FC", Offset = "0x7441FC")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x744234", Offset = "0x744234")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74426C", Offset = "0x74426C")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7442A4", Offset = "0x7442A4")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7442DC", Offset = "0x7442DC")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7442EC", Offset = "0x7442EC")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x744324", Offset = "0x744324")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74436C", Offset = "0x74436C")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74437C", Offset = "0x74437C")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7443B4", Offset = "0x7443B4")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7443EC", Offset = "0x7443EC")]
	public float AimCollisionRadius;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x744424", Offset = "0x744424")]
	public float AimCollisionHeight;

	[Token(Token = "0x1700000E")]
	public States CurrentState
	{
		[Token(Token = "0x6000278")]
		[Address(RVA = "0x922BA4", Offset = "0x922BA4", VA = "0x922BA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x749908", Offset = "0x749908")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x6000279")]
		[Address(RVA = "0x922BAC", Offset = "0x922BAC", VA = "0x922BAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x749918", Offset = "0x749918")]
		private set
		{
		}
	}

	[Token(Token = "0x1700000F")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x600027D")]
		[Address(RVA = "0x922DDC", Offset = "0x922DDC", VA = "0x922DDC")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000010")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x600027E")]
		[Address(RVA = "0x922E04", Offset = "0x922E04", VA = "0x922E04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x749948", Offset = "0x749948")]
		get
		{
			return null;
		}
		[Token(Token = "0x600027F")]
		[Address(RVA = "0x922E0C", Offset = "0x922E0C", VA = "0x922E0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x749958", Offset = "0x749958")]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x600027A")]
		[Address(RVA = "0x922BB4", Offset = "0x922BB4", VA = "0x922BB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x749928", Offset = "0x749928")]
		add
		{
		}
		[Token(Token = "0x600027B")]
		[Address(RVA = "0x922C58", Offset = "0x922C58", VA = "0x922C58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x749938", Offset = "0x749938")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x6000289")]
		[Address(RVA = "0x923518", Offset = "0x923518", VA = "0x923518")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7499A0", Offset = "0x7499A0")]
		add
		{
		}
		[Token(Token = "0x600028A")]
		[Address(RVA = "0x9235BC", Offset = "0x9235BC", VA = "0x9235BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7499B0", Offset = "0x7499B0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x600028C")]
		[Address(RVA = "0x92368C", Offset = "0x92368C", VA = "0x92368C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x749A24", Offset = "0x749A24")]
		add
		{
		}
		[Token(Token = "0x600028D")]
		[Address(RVA = "0x923730", Offset = "0x923730", VA = "0x923730")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x749A34", Offset = "0x749A34")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x600028E")]
		[Address(RVA = "0x9237D4", Offset = "0x9237D4", VA = "0x9237D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x749A44", Offset = "0x749A44")]
		add
		{
		}
		[Token(Token = "0x600028F")]
		[Address(RVA = "0x923878", Offset = "0x923878", VA = "0x923878")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x749A54", Offset = "0x749A54")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x6000291")]
		[Address(RVA = "0x923990", Offset = "0x923990", VA = "0x923990")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x749A64", Offset = "0x749A64")]
		add
		{
		}
		[Token(Token = "0x6000292")]
		[Address(RVA = "0x923A34", Offset = "0x923A34", VA = "0x923A34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x749A74", Offset = "0x749A74")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x6000294")]
		[Address(RVA = "0x923B74", Offset = "0x923B74", VA = "0x923B74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x749AE8", Offset = "0x749AE8")]
		add
		{
		}
		[Token(Token = "0x6000295")]
		[Address(RVA = "0x923C18", Offset = "0x923C18", VA = "0x923C18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x749AF8", Offset = "0x749AF8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x6000297")]
		[Address(RVA = "0x923D58", Offset = "0x923D58", VA = "0x923D58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x749B6C", Offset = "0x749B6C")]
		add
		{
		}
		[Token(Token = "0x6000298")]
		[Address(RVA = "0x923DFC", Offset = "0x923DFC", VA = "0x923DFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x749B7C", Offset = "0x749B7C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x600029A")]
		[Address(RVA = "0x923F3C", Offset = "0x923F3C", VA = "0x923F3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x749BF0", Offset = "0x749BF0")]
		add
		{
		}
		[Token(Token = "0x600029B")]
		[Address(RVA = "0x923FE0", Offset = "0x923FE0", VA = "0x923FE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x749C00", Offset = "0x749C00")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x600029D")]
		[Address(RVA = "0x924120", Offset = "0x924120", VA = "0x924120")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x749C74", Offset = "0x749C74")]
		add
		{
		}
		[Token(Token = "0x600029E")]
		[Address(RVA = "0x9241C4", Offset = "0x9241C4", VA = "0x9241C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x749C84", Offset = "0x749C84")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x60002A0")]
		[Address(RVA = "0x924304", Offset = "0x924304", VA = "0x924304")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x749CF8", Offset = "0x749CF8")]
		add
		{
		}
		[Token(Token = "0x60002A1")]
		[Address(RVA = "0x9243A8", Offset = "0x9243A8", VA = "0x9243A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x749D08", Offset = "0x749D08")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x60002A3")]
		[Address(RVA = "0x9244E8", Offset = "0x9244E8", VA = "0x9244E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x749D7C", Offset = "0x749D7C")]
		add
		{
		}
		[Token(Token = "0x60002A4")]
		[Address(RVA = "0x92458C", Offset = "0x92458C", VA = "0x92458C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x749D8C", Offset = "0x749D8C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x922874", Offset = "0x922874", VA = "0x922874")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x922898", Offset = "0x922898", VA = "0x922898")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x922CFC", Offset = "0x922CFC", VA = "0x922CFC")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x922E14", Offset = "0x922E14", VA = "0x922E14")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x92316C", Offset = "0x92316C", VA = "0x92316C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x749968", Offset = "0x749968")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x923224", Offset = "0x923224", VA = "0x923224")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x9232EC", Offset = "0x9232EC", VA = "0x9232EC")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x923308", Offset = "0x923308", VA = "0x923308")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x9233D0", Offset = "0x9233D0", VA = "0x9233D0")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x923414", Offset = "0x923414", VA = "0x923414")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x923470", Offset = "0x923470", VA = "0x923470", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x923510", Offset = "0x923510", VA = "0x923510", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x9234A0", Offset = "0x9234A0", VA = "0x9234A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7499C0", Offset = "0x7499C0")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x92391C", Offset = "0x92391C", VA = "0x92391C")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x923AD8", Offset = "0x923AD8", VA = "0x923AD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x749A84", Offset = "0x749A84")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x923CBC", Offset = "0x923CBC", VA = "0x923CBC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x749B08", Offset = "0x749B08")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x923EA0", Offset = "0x923EA0", VA = "0x923EA0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x749B8C", Offset = "0x749B8C")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x924084", Offset = "0x924084", VA = "0x924084")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x749C10", Offset = "0x749C10")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x924268", Offset = "0x924268", VA = "0x924268")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x749C94", Offset = "0x749C94")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x92444C", Offset = "0x92444C", VA = "0x92444C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x749D18", Offset = "0x749D18")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x924630", Offset = "0x924630", VA = "0x924630")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x924774", Offset = "0x924774", VA = "0x924774")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x9247A8", Offset = "0x9247A8", VA = "0x9247A8")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x9248C8", Offset = "0x9248C8", VA = "0x9248C8")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x9249F4", Offset = "0x9249F4", VA = "0x9249F4")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x20000A9")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000C")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x60002AA")]
		[Address(RVA = "0x8A19DC", Offset = "0x8A19DC", VA = "0x8A19DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x749D9C", Offset = "0x749D9C")]
		add
		{
		}
		[Token(Token = "0x60002AB")]
		[Address(RVA = "0x8A1A80", Offset = "0x8A1A80", VA = "0x8A1A80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x749DAC", Offset = "0x749DAC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x60002AC")]
		[Address(RVA = "0x8A1B24", Offset = "0x8A1B24", VA = "0x8A1B24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x749DBC", Offset = "0x749DBC")]
		add
		{
		}
		[Token(Token = "0x60002AD")]
		[Address(RVA = "0x8A1BC8", Offset = "0x8A1BC8", VA = "0x8A1BC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x749DCC", Offset = "0x749DCC")]
		remove
		{
		}
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x8A1C6C", Offset = "0x8A1C6C", VA = "0x8A1C6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x8A1D14", Offset = "0x8A1D14", VA = "0x8A1D14")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x8A1D18", Offset = "0x8A1D18", VA = "0x8A1D18")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x8A1D8C", Offset = "0x8A1D8C", VA = "0x8A1D8C")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x8A1EFC", Offset = "0x8A1EFC", VA = "0x8A1EFC")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x8A21E0", Offset = "0x8A21E0", VA = "0x8A21E0")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x8A242C", Offset = "0x8A242C", VA = "0x8A242C")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x20000AA")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x9A52FC", Offset = "0x9A52FC", VA = "0x9A52FC", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x9A5390", Offset = "0x9A5390", VA = "0x9A5390", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60002B7")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x9A5460", Offset = "0x9A5460", VA = "0x9A5460")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x20000AB")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74451C", Offset = "0x74451C")]
	public float Range;

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x9A5470", Offset = "0x9A5470", VA = "0x9A5470", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x9A55CC", Offset = "0x9A55CC", VA = "0x9A55CC")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x20000AC")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x744554", Offset = "0x744554")]
	public float Range;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74458C", Offset = "0x74458C")]
	public float MinimumElevation;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7445C4", Offset = "0x7445C4")]
	public float Gravity;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7445FC", Offset = "0x7445FC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7445FC", Offset = "0x7445FC")]
	public float AimVelocity;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x744658", Offset = "0x744658")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x744658", Offset = "0x744658")]
	public float AimStep;

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x9A55DC", Offset = "0x9A55DC", VA = "0x9A55DC", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x9A5828", Offset = "0x9A5828", VA = "0x9A5828")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x20000AD")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7446B0", Offset = "0x7446B0")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x9A583C", Offset = "0x9A583C", VA = "0x9A583C")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x9A5920", Offset = "0x9A5920", VA = "0x9A5920")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x9A5950", Offset = "0x9A5950", VA = "0x9A5950")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x9A5980", Offset = "0x9A5980", VA = "0x9A5980")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x9A5A20", Offset = "0x9A5A20", VA = "0x9A5A20", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x9A5A8C", Offset = "0x9A5A8C", VA = "0x9A5A8C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x9A5AF4", Offset = "0x9A5AF4", VA = "0x9A5AF4")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x20000AE")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7446E8", Offset = "0x7446E8")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7446F8", Offset = "0x7446F8")]
	public Transform PositionIndicator;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x744730", Offset = "0x744730")]
	public Transform OrientationIndicator;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x744768", Offset = "0x744768")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x17000011")]
	public bool IsValidDestination
	{
		[Token(Token = "0x60002C4")]
		[Address(RVA = "0x9A5C10", Offset = "0x9A5C10", VA = "0x9A5C10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x749DDC", Offset = "0x749DDC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002C5")]
		[Address(RVA = "0x9A5C18", Offset = "0x9A5C18", VA = "0x9A5C18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x749DEC", Offset = "0x749DEC")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x60002CA")]
		[Address(RVA = "0x9A5DC8", Offset = "0x9A5DC8", VA = "0x9A5DC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x749DFC", Offset = "0x749DFC")]
		add
		{
		}
		[Token(Token = "0x60002CB")]
		[Address(RVA = "0x9A5E6C", Offset = "0x9A5E6C", VA = "0x9A5E6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x749E0C", Offset = "0x749E0C")]
		remove
		{
		}
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x9A5C24", Offset = "0x9A5C24", VA = "0x9A5C24")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x9A5CAC", Offset = "0x9A5CAC", VA = "0x9A5CAC")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x9A5D84", Offset = "0x9A5D84", VA = "0x9A5D84")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x9A5DC4", Offset = "0x9A5DC4", VA = "0x9A5DC4")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x9A5F10", Offset = "0x9A5F10", VA = "0x9A5F10")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x9A5F78", Offset = "0x9A5F78", VA = "0x9A5F78")]
	public void Recycle()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x9A5F98", Offset = "0x9A5F98", VA = "0x9A5F98", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x20000AF")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x2000245")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740DD0", Offset = "0x740DD0")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700015D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D7C")]
			[Address(RVA = "0x9A665C", Offset = "0x9A665C", VA = "0x9A665C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D7E")]
			[Address(RVA = "0x9A66C4", Offset = "0x9A66C4", VA = "0x9A66C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x9A63A8", Offset = "0x9A63A8", VA = "0x9A63A8")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x9A65CC", Offset = "0x9A65CC", VA = "0x9A65CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x9A65D0", Offset = "0x9A65D0", VA = "0x9A65D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x9A6664", Offset = "0x9A6664", VA = "0x9A6664", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000246")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740DE0", Offset = "0x740DE0")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700015F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D82")]
			[Address(RVA = "0x9A655C", Offset = "0x9A655C", VA = "0x9A655C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000160")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D84")]
			[Address(RVA = "0x9A65C4", Offset = "0x9A65C4", VA = "0x9A65C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x9A6444", Offset = "0x9A6444", VA = "0x9A6444")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x9A64C8", Offset = "0x9A64C8", VA = "0x9A64C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x9A64CC", Offset = "0x9A64CC", VA = "0x9A64CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x9A6564", Offset = "0x9A6564", VA = "0x9A6564", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x9A6178", Offset = "0x9A6178", VA = "0x9A6178")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x9A6224", Offset = "0x9A6224", VA = "0x9A6224", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x9A627C", Offset = "0x9A627C", VA = "0x9A627C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x9A6338", Offset = "0x9A6338", VA = "0x9A6338")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x749E1C", Offset = "0x749E1C")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x9A63D4", Offset = "0x9A63D4", VA = "0x9A63D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x749E80", Offset = "0x749E80")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002D4")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x60002D5")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x9A6470", Offset = "0x9A6470", VA = "0x9A6470")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x749EE4", Offset = "0x749EE4")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x9A649C", Offset = "0x9A649C", VA = "0x9A649C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x749EF4", Offset = "0x749EF4")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x20000B0")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7447B0", Offset = "0x7447B0")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7447C0", Offset = "0x7447C0")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7447F8", Offset = "0x7447F8")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x744830", Offset = "0x744830")]
	public bool FastTeleport;

	[Token(Token = "0x17000012")]
	public Transform Pointer
	{
		[Token(Token = "0x60002D8")]
		[Address(RVA = "0x9A66CC", Offset = "0x9A66CC", VA = "0x9A66CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x749F04", Offset = "0x749F04")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002D9")]
		[Address(RVA = "0x9A66D4", Offset = "0x9A66D4", VA = "0x9A66D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x749F14", Offset = "0x749F14")]
		private set
		{
		}
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x9A66DC", Offset = "0x9A66DC", VA = "0x9A66DC", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x9A6838", Offset = "0x9A6838", VA = "0x9A6838", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x9A68F0", Offset = "0x9A68F0", VA = "0x9A68F0")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x20000B1")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x2000247")]
	public enum InputModes
	{
		[Token(Token = "0x40012CC")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x40012CD")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x40012CE")]
		ThumbstickTeleport,
		[Token(Token = "0x40012CF")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x2000248")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x40012D1")]
		A,
		[Token(Token = "0x40012D2")]
		B,
		[Token(Token = "0x40012D3")]
		LeftTrigger,
		[Token(Token = "0x40012D4")]
		LeftThumbstick,
		[Token(Token = "0x40012D5")]
		RightTrigger,
		[Token(Token = "0x40012D6")]
		RightThumbstick,
		[Token(Token = "0x40012D7")]
		X,
		[Token(Token = "0x40012D8")]
		Y
	}

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x744868", Offset = "0x744868")]
	public InputModes InputMode;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7448A0", Offset = "0x7448A0")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7448D8", Offset = "0x7448D8")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x744910", Offset = "0x744910")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x9A68F4", Offset = "0x9A68F4", VA = "0x9A68F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x9A68F8", Offset = "0x9A68F8", VA = "0x9A68F8", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x9A6D40", Offset = "0x9A6D40", VA = "0x9A6D40", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x9A6E00", Offset = "0x9A6E00", VA = "0x9A6E00")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x20000B2")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x2000249")]
	public enum OrientationModes
	{
		[Token(Token = "0x40012DA")]
		HeadRelative,
		[Token(Token = "0x40012DB")]
		ForwardFacing
	}

	[Token(Token = "0x200024A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740DF0", Offset = "0x740DF0")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x17000161")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D88")]
			[Address(RVA = "0x9A7290", Offset = "0x9A7290", VA = "0x9A7290", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000162")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D8A")]
			[Address(RVA = "0x9A72F8", Offset = "0x9A72F8", VA = "0x9A72F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x9A706C", Offset = "0x9A706C", VA = "0x9A706C")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x9A71E8", Offset = "0x9A71E8", VA = "0x9A71E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x9A71EC", Offset = "0x9A71EC", VA = "0x9A71EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x9A7298", Offset = "0x9A7298", VA = "0x9A7298", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x9A6EAC", Offset = "0x9A6EAC", VA = "0x9A6EAC")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x9A6F60", Offset = "0x9A6F60", VA = "0x9A6F60")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x9A6F68", Offset = "0x9A6F68", VA = "0x9A6F68", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x9A6FB4", Offset = "0x9A6FB4", VA = "0x9A6FB4", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x9A6FFC", Offset = "0x9A6FFC", VA = "0x9A6FFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x749F24", Offset = "0x749F24")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002E6")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x60002E7")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x9A7098", Offset = "0x9A7098", VA = "0x9A7098")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x9A71BC", Offset = "0x9A71BC", VA = "0x9A71BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x749F88", Offset = "0x749F88")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000B3")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x9A7300", Offset = "0x9A7300", VA = "0x9A7300", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x9A7304", Offset = "0x9A7304", VA = "0x9A7304", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x9A7380", Offset = "0x9A7380", VA = "0x9A7380")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x20000B4")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x744948", Offset = "0x744948")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x744980", Offset = "0x744980")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7449B8", Offset = "0x7449B8")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7449F0", Offset = "0x7449F0")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x9A7384", Offset = "0x9A7384", VA = "0x9A7384", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x9A73F4", Offset = "0x9A73F4", VA = "0x9A73F4", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x9A786C", Offset = "0x9A786C", VA = "0x9A786C")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x20000B5")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x744A28", Offset = "0x744A28")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x744A60", Offset = "0x744A60")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x744A98", Offset = "0x744A98")]
	public float RotateStickThreshold;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x9A7870", Offset = "0x9A7870", VA = "0x9A7870", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x9A78B4", Offset = "0x9A78B4", VA = "0x9A78B4", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x9A7D24", Offset = "0x9A7D24", VA = "0x9A7D24")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x20000B6")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x9A7D34", Offset = "0x9A7D34", VA = "0x9A7D34")]
	private void Start()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x9A7D38", Offset = "0x9A7D38", VA = "0x9A7D38")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x9A7D40", Offset = "0x9A7D40", VA = "0x9A7D40")]
	private void Update()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x9A7E28", Offset = "0x9A7E28", VA = "0x9A7E28")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x9A7E50", Offset = "0x9A7E50", VA = "0x9A7E50")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x20000B7")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x744AD0", Offset = "0x744AD0")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x17000013")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x60002F8")]
		[Address(RVA = "0x9A7E68", Offset = "0x9A7E68", VA = "0x9A7E68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x749F98", Offset = "0x749F98")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002F9")]
		[Address(RVA = "0x9A7E70", Offset = "0x9A7E70", VA = "0x9A7E70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x749FA8", Offset = "0x749FA8")]
		private set
		{
		}
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x9A532C", Offset = "0x9A532C", VA = "0x9A532C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x9A5434", Offset = "0x9A5434", VA = "0x9A5434", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x9A7E78", Offset = "0x9A7E78", VA = "0x9A7E78")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x749FB8", Offset = "0x749FB8")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x9A5A80", Offset = "0x9A5A80", VA = "0x9A5A80", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x9A5AEC", Offset = "0x9A5AEC", VA = "0x9A5AEC", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x9A5468", Offset = "0x9A5468", VA = "0x9A5468")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x20000B8")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x200024B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740E00", Offset = "0x740E00")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x17000163")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D8E")]
			[Address(RVA = "0x9A84CC", Offset = "0x9A84CC", VA = "0x9A84CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000164")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D90")]
			[Address(RVA = "0x9A8534", Offset = "0x9A8534", VA = "0x9A8534", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x9A80C8", Offset = "0x9A80C8", VA = "0x9A80C8")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x9A8260", Offset = "0x9A8260", VA = "0x9A8260", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x9A8264", Offset = "0x9A8264", VA = "0x9A8264", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x9A84D4", Offset = "0x9A84D4", VA = "0x9A84D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x744AE0", Offset = "0x744AE0")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x40004AA")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x9A7F40", Offset = "0x9A7F40", VA = "0x9A7F40")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x9A8004", Offset = "0x9A8004", VA = "0x9A8004", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x9A8030", Offset = "0x9A8030", VA = "0x9A8030", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x9A8058", Offset = "0x9A8058", VA = "0x9A8058")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x749FF0", Offset = "0x749FF0")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x9A80F4", Offset = "0x9A80F4", VA = "0x9A80F4", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x6000305")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x9A8110", Offset = "0x9A8110", VA = "0x9A8110", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x9A8234", Offset = "0x9A8234", VA = "0x9A8234")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74A054", Offset = "0x74A054")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000B9")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x9A853C", Offset = "0x9A853C", VA = "0x9A853C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x9A859C", Offset = "0x9A859C", VA = "0x9A859C", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x9A8720", Offset = "0x9A8720", VA = "0x9A8720", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x9A8810", Offset = "0x9A8810", VA = "0x9A8810")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x74A064", Offset = "0x74A064")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x9A8814", Offset = "0x9A8814", VA = "0x9A8814")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x20000BA")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x744B18", Offset = "0x744B18")]
	public float LOSOffset;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x744B50", Offset = "0x744B50")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x9A8820", Offset = "0x9A8820", VA = "0x9A8820", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x9A8A50", Offset = "0x9A8A50", VA = "0x9A8A50")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x20000BB")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x600030F")]
	[Address(RVA = "0x9A8A5C", Offset = "0x9A8A5C", VA = "0x9A8A5C", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x9A8BE0", Offset = "0x9A8BE0", VA = "0x9A8BE0")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x20000BC")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x6000311")]
	[Address(RVA = "0x9A8BE4", Offset = "0x9A8BE4", VA = "0x9A8BE4", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x9A8C7C", Offset = "0x9A8C7C", VA = "0x9A8C7C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000313")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x9A8D10", Offset = "0x9A8D10", VA = "0x9A8D10")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x20000BD")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x200024C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740E10", Offset = "0x740E10")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000165")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D94")]
			[Address(RVA = "0x9A9078", Offset = "0x9A9078", VA = "0x9A9078", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000166")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D96")]
			[Address(RVA = "0x9A90E0", Offset = "0x9A90E0", VA = "0x9A90E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x9A8DB4", Offset = "0x9A8DB4", VA = "0x9A8DB4")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x9A8F78", Offset = "0x9A8F78", VA = "0x9A8F78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0x9A8F7C", Offset = "0x9A8F7C", VA = "0x9A8F7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x9A9080", Offset = "0x9A9080", VA = "0x9A9080", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x744B88", Offset = "0x744B88")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x744B88", Offset = "0x744B88")]
	public float TransitionDuration;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x744BE0", Offset = "0x744BE0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x744BE0", Offset = "0x744BE0")]
	public float TeleportDelay;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x744C34", Offset = "0x744C34")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x9A8D18", Offset = "0x9A8D18", VA = "0x9A8D18", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x9A8D44", Offset = "0x9A8D44", VA = "0x9A8D44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74A09C", Offset = "0x74A09C")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x9A8DE0", Offset = "0x9A8DE0", VA = "0x9A8DE0")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x20000BE")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x6000318")]
	[Address(RVA = "0x9A90E8", Offset = "0x9A90E8", VA = "0x9A90E8", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x9A9104", Offset = "0x9A9104", VA = "0x9A9104")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x20000BF")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x200024D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740E20", Offset = "0x740E20")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000167")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D9A")]
			[Address(RVA = "0x9A9350", Offset = "0x9A9350", VA = "0x9A9350", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000168")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D9C")]
			[Address(RVA = "0x9A93B8", Offset = "0x9A93B8", VA = "0x9A93B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x9A91A8", Offset = "0x9A91A8", VA = "0x9A91A8")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x9A921C", Offset = "0x9A921C", VA = "0x9A921C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x9A9220", Offset = "0x9A9220", VA = "0x9A9220", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0x9A9358", Offset = "0x9A9358", VA = "0x9A9358", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x744C6C", Offset = "0x744C6C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x744C6C", Offset = "0x744C6C")]
	public float TransitionDuration;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x9A910C", Offset = "0x9A910C", VA = "0x9A910C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x9A9138", Offset = "0x9A9138", VA = "0x9A9138")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74A100", Offset = "0x74A100")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x9A91D4", Offset = "0x9A91D4", VA = "0x9A91D4")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x20000C0")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x200024E")]
	public enum PlabackState
	{
		[Token(Token = "0x40012EE")]
		Idle = 1,
		[Token(Token = "0x40012EF")]
		Preparing,
		[Token(Token = "0x40012F0")]
		Buffering,
		[Token(Token = "0x40012F1")]
		Ready,
		[Token(Token = "0x40012F2")]
		Ended
	}

	[Token(Token = "0x200024F")]
	public enum StereoMode
	{
		[Token(Token = "0x40012F4")]
		Unknown = -1,
		[Token(Token = "0x40012F5")]
		Mono,
		[Token(Token = "0x40012F6")]
		TopBottom,
		[Token(Token = "0x40012F7")]
		LeftRight,
		[Token(Token = "0x40012F8")]
		Mesh
	}

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getStereoModeMethodId;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr getWidthMethodId;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr getHeightMethodId;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x17000014")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x600031D")]
		[Address(RVA = "0x92F140", Offset = "0x92F140", VA = "0x92F140")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000015")]
	private static IntPtr Activity
	{
		[Token(Token = "0x600031E")]
		[Address(RVA = "0x92F3FC", Offset = "0x92F3FC", VA = "0x92F3FC")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000016")]
	public static bool IsAvailable
	{
		[Token(Token = "0x600031F")]
		[Address(RVA = "0x92981C", Offset = "0x92981C", VA = "0x92981C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000017")]
	public static bool IsPlaying
	{
		[Token(Token = "0x6000320")]
		[Address(RVA = "0x92AE18", Offset = "0x92AE18", VA = "0x92AE18")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000018")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x6000321")]
		[Address(RVA = "0x92F640", Offset = "0x92F640", VA = "0x92F640")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x17000019")]
	public static long Duration
	{
		[Token(Token = "0x6000322")]
		[Address(RVA = "0x92AFFC", Offset = "0x92AFFC", VA = "0x92AFFC")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x1700001A")]
	public static StereoMode VideoStereoMode
	{
		[Token(Token = "0x6000323")]
		[Address(RVA = "0x929E04", Offset = "0x929E04", VA = "0x929E04")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x1700001B")]
	public static int VideoWidth
	{
		[Token(Token = "0x6000324")]
		[Address(RVA = "0x929C1C", Offset = "0x929C1C", VA = "0x929C1C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700001C")]
	public static int VideoHeight
	{
		[Token(Token = "0x6000325")]
		[Address(RVA = "0x929D10", Offset = "0x929D10", VA = "0x929D10")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700001D")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x6000326")]
		[Address(RVA = "0x92AF08", Offset = "0x92AF08", VA = "0x92AF08")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000327")]
		[Address(RVA = "0x92A5DC", Offset = "0x92A5DC", VA = "0x92A5DC")]
		set
		{
		}
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x92B65C", Offset = "0x92B65C", VA = "0x92B65C")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x92B3A0", Offset = "0x92B3A0", VA = "0x92B3A0")]
	public static void Stop()
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x92A26C", Offset = "0x92A26C", VA = "0x92A26C")]
	public static void Play()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x92A3F0", Offset = "0x92A3F0", VA = "0x92A3F0")]
	public static void Pause()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x92B1C8", Offset = "0x92B1C8", VA = "0x92B1C8")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x92B850", Offset = "0x92B850", VA = "0x92B850")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x92AC5C", Offset = "0x92AC5C", VA = "0x92AC5C")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x20000C1")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x1400000F")]
	public event Action onButtonDown
	{
		[Token(Token = "0x6000330")]
		[Address(RVA = "0x83A744", Offset = "0x83A744", VA = "0x83A744")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74A164", Offset = "0x74A164")]
		add
		{
		}
		[Token(Token = "0x6000331")]
		[Address(RVA = "0x83A7E8", Offset = "0x83A7E8", VA = "0x83A7E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74A174", Offset = "0x74A174")]
		remove
		{
		}
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x83A88C", Offset = "0x83A88C", VA = "0x83A88C", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x83A8A0", Offset = "0x83A8A0", VA = "0x83A8A0")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x20000C2")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x2000250")]
	public enum ButtonType
	{
		[Token(Token = "0x40012FA")]
		Play,
		[Token(Token = "0x40012FB")]
		Pause,
		[Token(Token = "0x40012FC")]
		FastForward,
		[Token(Token = "0x40012FD")]
		Rewind,
		[Token(Token = "0x40012FE")]
		SkipForward,
		[Token(Token = "0x40012FF")]
		SkipBack,
		[Token(Token = "0x4001300")]
		Stop
	}

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x1700001E")]
	public ButtonType buttonType
	{
		[Token(Token = "0x6000334")]
		[Address(RVA = "0x927580", Offset = "0x927580", VA = "0x927580")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x6000335")]
		[Address(RVA = "0x927588", Offset = "0x927588", VA = "0x927588")]
		set
		{
		}
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x9275AC", Offset = "0x9275AC", VA = "0x9275AC", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x928A78", Offset = "0x928A78", VA = "0x928A78")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x20000C3")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x2000251")]
	public enum VideoShape
	{
		[Token(Token = "0x4001302")]
		_360,
		[Token(Token = "0x4001303")]
		_180,
		[Token(Token = "0x4001304")]
		Quad
	}

	[Token(Token = "0x2000252")]
	public enum VideoStereo
	{
		[Token(Token = "0x4001306")]
		Mono,
		[Token(Token = "0x4001307")]
		TopBottom,
		[Token(Token = "0x4001308")]
		LeftRight,
		[Token(Token = "0x4001309")]
		BottomTop
	}

	[Token(Token = "0x2000253")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740E30", Offset = "0x740E30")]
	private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x17000169")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DA0")]
			[Address(RVA = "0x92BB18", Offset = "0x92BB18", VA = "0x92BB18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DA2")]
			[Address(RVA = "0x92BB80", Offset = "0x92BB80", VA = "0x92BB80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x929F68", Offset = "0x929F68", VA = "0x929F68")]
		[DebuggerHidden]
		public <Start>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0x92B994", Offset = "0x92B994", VA = "0x92B994", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0x92B998", Offset = "0x92B998", VA = "0x92B998", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x92BB20", Offset = "0x92BB20", VA = "0x92BB20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000254")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740E40", Offset = "0x740E40")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0x92A1D0", Offset = "0x92A1D0", VA = "0x92A1D0")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x92B588", Offset = "0x92B588", VA = "0x92B588")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x744CF4", Offset = "0x744CF4")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x744D04", Offset = "0x744D04")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x744D14", Offset = "0x744D14")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool AutoDetectStereoLayout;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool DisplayMono;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x1700001F")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000338")]
		[Address(RVA = "0x9295D0", Offset = "0x9295D0", VA = "0x9295D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74A184", Offset = "0x74A184")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000339")]
		[Address(RVA = "0x9295D8", Offset = "0x9295D8", VA = "0x9295D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74A194", Offset = "0x74A194")]
		private set
		{
		}
	}

	[Token(Token = "0x17000020")]
	public long Duration
	{
		[Token(Token = "0x600033A")]
		[Address(RVA = "0x9295E4", Offset = "0x9295E4", VA = "0x9295E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74A1A4", Offset = "0x74A1A4")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600033B")]
		[Address(RVA = "0x9295EC", Offset = "0x9295EC", VA = "0x9295EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74A1B4", Offset = "0x74A1B4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000021")]
	public long PlaybackPosition
	{
		[Token(Token = "0x600033C")]
		[Address(RVA = "0x9295F4", Offset = "0x9295F4", VA = "0x9295F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74A1C4", Offset = "0x74A1C4")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600033D")]
		[Address(RVA = "0x9295FC", Offset = "0x9295FC", VA = "0x9295FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74A1D4", Offset = "0x74A1D4")]
		private set
		{
		}
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x929604", Offset = "0x929604", VA = "0x929604")]
	private void Awake()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x929884", Offset = "0x929884", VA = "0x929884")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x9298EC", Offset = "0x9298EC", VA = "0x9298EC")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x929EF8", Offset = "0x929EF8", VA = "0x929EF8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74A1E4", Offset = "0x74A1E4")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x929F94", Offset = "0x929F94", VA = "0x929F94")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x92A1D8", Offset = "0x92A1D8", VA = "0x92A1D8")]
	public void Play()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x92A360", Offset = "0x92A360", VA = "0x92A360")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x92A4E4", Offset = "0x92A4E4", VA = "0x92A4E4")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x92A71C", Offset = "0x92A71C", VA = "0x92A71C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x92B0F0", Offset = "0x92B0F0", VA = "0x92B0F0")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x92B310", Offset = "0x92B310", VA = "0x92B310")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x92B494", Offset = "0x92B494", VA = "0x92B494")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x92B578", Offset = "0x92B578", VA = "0x92B578")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x20000C4")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x2000255")]
	private enum PlaybackState
	{
		[Token(Token = "0x4001311")]
		Playing,
		[Token(Token = "0x4001312")]
		Paused,
		[Token(Token = "0x4001313")]
		Rewinding,
		[Token(Token = "0x4001314")]
		FastForwarding
	}

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x92BB88", Offset = "0x92BB88", VA = "0x92BB88")]
	private void Start()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x92BE84", Offset = "0x92BE84", VA = "0x92BE84")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x92C060", Offset = "0x92C060", VA = "0x92C060")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x92C194", Offset = "0x92C194", VA = "0x92C194")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x92C29C", Offset = "0x92C29C", VA = "0x92C29C")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x92C168", Offset = "0x92C168", VA = "0x92C168")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x92C364", Offset = "0x92C364", VA = "0x92C364")]
	private void Update()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x92BD78", Offset = "0x92BD78", VA = "0x92BD78")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x92C6F8", Offset = "0x92C6F8", VA = "0x92C6F8")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x20000C5")]
public static class VectorUtil
{
	[Token(Token = "0x6000354")]
	[Address(RVA = "0xF0F278", Offset = "0xF0F278", VA = "0xF0F278")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x20000C6")]
public class AppDeeplinkUI : MonoBehaviour
{
	[Token(Token = "0x40004F5")]
	private const ulong UNITY_COMPANION_APP_ID = 3535750239844224uL;

	[Token(Token = "0x40004F6")]
	private const ulong UNREAL_COMPANION_APP_ID = 4055411724486843uL;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform deeplinkAppId;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform deeplinkMessage;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform uiLaunchType;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform uiLaunchSource;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform uiDeepLinkMessage;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool inMenu;

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x836178", Offset = "0x836178", VA = "0x836178")]
	private void Start()
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x836E18", Offset = "0x836E18", VA = "0x836E18")]
	private void Update()
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x8371D8", Offset = "0x8371D8", VA = "0x8371D8")]
	private void LaunchUnrealDeeplinkSample()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x837314", Offset = "0x837314", VA = "0x837314")]
	private void LaunchSelf()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x837454", Offset = "0x837454", VA = "0x837454")]
	private void LaunchOtherApp()
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x8375B8", Offset = "0x8375B8", VA = "0x8375B8")]
	public AppDeeplinkUI()
	{
	}
}
[Token(Token = "0x20000C7")]
public class CustomDebugUI : MonoBehaviour
{
	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CustomDebugUI instance;

	[Token(Token = "0x40004FF")]
	private const BindingFlags privateFlags = BindingFlags.Instance | BindingFlags.NonPublic;

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x83D2A0", Offset = "0x83D2A0", VA = "0x83D2A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x83D2F4", Offset = "0x83D2F4", VA = "0x83D2F4")]
	private void Start()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x83D2F8", Offset = "0x83D2F8", VA = "0x83D2F8")]
	private void Update()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x8367FC", Offset = "0x8367FC", VA = "0x8367FC")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x83D2FC", Offset = "0x83D2FC", VA = "0x83D2FC")]
	public void RemoveFromCanvas(RectTransform element, int targetCanvas = 0)
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x83D4DC", Offset = "0x83D4DC", VA = "0x83D4DC")]
	public CustomDebugUI()
	{
	}
}
[Token(Token = "0x20000C8")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x83F918", Offset = "0x83F918", VA = "0x83F918")]
	private void Start()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x83FCE8", Offset = "0x83FCE8", VA = "0x83FCE8")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x83FDA0", Offset = "0x83FDA0", VA = "0x83FDA0")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x83FFA0", Offset = "0x83FFA0", VA = "0x83FFA0")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x840088", Offset = "0x840088", VA = "0x840088")]
	private void Update()
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x840164", Offset = "0x840164", VA = "0x840164")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x8401D0", Offset = "0x8401D0", VA = "0x8401D0")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x8401D8", Offset = "0x8401D8", VA = "0x8401D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74A258", Offset = "0x74A258")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x840234", Offset = "0x840234", VA = "0x840234")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74A268", Offset = "0x74A268")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x840290", Offset = "0x840290", VA = "0x840290")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74A278", Offset = "0x74A278")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x8402EC", Offset = "0x8402EC", VA = "0x8402EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74A288", Offset = "0x74A288")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x20000C9")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x2000256")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740E50", Offset = "0x740E50")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x1700016B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DA8")]
			[Address(RVA = "0x8B9B6C", Offset = "0x8B9B6C", VA = "0x8B9B6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DAA")]
			[Address(RVA = "0x8B9BD4", Offset = "0x8B9BD4", VA = "0x8B9BD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x8B9A1C", Offset = "0x8B9A1C", VA = "0x8B9A1C")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x8B9A50", Offset = "0x8B9A50", VA = "0x8B9A50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x8B9A54", Offset = "0x8B9A54", VA = "0x8B9A54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x8B9B74", Offset = "0x8B9B74", VA = "0x8B9B74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x8B9720", Offset = "0x8B9720", VA = "0x8B9720")]
	private void Awake()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x8B9820", Offset = "0x8B9820", VA = "0x8B9820")]
	private void Update()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x8B97B0", Offset = "0x8B97B0", VA = "0x8B97B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74A298", Offset = "0x74A298")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x8B9A48", Offset = "0x8B9A48", VA = "0x8B9A48")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x20000CA")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x744D44", Offset = "0x744D44")]
	public int SubdivisionsU;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x744D60", Offset = "0x744D60")]
	public int SubdivisionsV;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x83B698", Offset = "0x83B698", VA = "0x83B698")]
	private void Update()
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x83C150", Offset = "0x83C150", VA = "0x83C150")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x20000CB")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000022")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x6000372")]
		[Address(RVA = "0x9221C8", Offset = "0x9221C8", VA = "0x9221C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x922220", Offset = "0x922220", VA = "0x922220")]
	public void Start()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x922564", Offset = "0x922564", VA = "0x922564")]
	public void Update()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x922648", Offset = "0x922648", VA = "0x922648")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x74A2FC", Offset = "0x74A2FC")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x6000376")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000377")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x6000378")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x6000379")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x600037A")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x600037B")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x600037C")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x600037D")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x9226B0", Offset = "0x9226B0", VA = "0x9226B0")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x9226EC", Offset = "0x9226EC", VA = "0x9226EC")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x922760", Offset = "0x922760", VA = "0x922760")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x9228BC", Offset = "0x9228BC", VA = "0x9228BC")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x922990", Offset = "0x922990", VA = "0x922990")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x922470", Offset = "0x922470", VA = "0x922470")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x922A50", Offset = "0x922A50", VA = "0x922A50")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x922AB8", Offset = "0x922AB8", VA = "0x922AB8")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x922B9C", Offset = "0x922B9C", VA = "0x922B9C")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x20000CC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x73FF58", Offset = "0x73FF58")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x2000257")]
	public enum DrawMode
	{
		[Token(Token = "0x4001319")]
		Opaque,
		[Token(Token = "0x400131A")]
		OpaqueWithClip,
		[Token(Token = "0x400131B")]
		TransparentDefaultAlpha,
		[Token(Token = "0x400131C")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x17000023")]
	public bool overlayEnabled
	{
		[Token(Token = "0x600038D")]
		[Address(RVA = "0xB59EF4", Offset = "0xB59EF4", VA = "0xB59EF4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600038E")]
		[Address(RVA = "0xB59F88", Offset = "0xB59F88", VA = "0xB59F88")]
		set
		{
		}
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0xB58884", Offset = "0xB58884", VA = "0xB58884")]
	private void Start()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xB594F4", Offset = "0xB594F4", VA = "0xB594F4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0xB59578", Offset = "0xB59578", VA = "0xB59578")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0xB5966C", Offset = "0xB5966C", VA = "0xB5966C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0xB59760", Offset = "0xB59760", VA = "0xB59760", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0xB59964", Offset = "0xB59964", VA = "0xB59964")]
	private void Update()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0xB5A058", Offset = "0xB5A058", VA = "0xB5A058")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x20000CD")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x2000258")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740E60", Offset = "0x740E60")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x8A6228", Offset = "0x8A6228", VA = "0x8A6228")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x8A6338", Offset = "0x8A6338", VA = "0x8A6338")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x8A6068", Offset = "0x8A6068", VA = "0x8A6068")]
	private void Start()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x8A6230", Offset = "0x8A6230", VA = "0x8A6230")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x8A6330", Offset = "0x8A6330", VA = "0x8A6330")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x20000CE")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x73FFBC", Offset = "0x73FFBC")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x2000259")]
	public enum RotationAxes
	{
		[Token(Token = "0x4001320")]
		MouseXAndY,
		[Token(Token = "0x4001321")]
		MouseX,
		[Token(Token = "0x4001322")]
		MouseY
	}

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x929290", Offset = "0x929290", VA = "0x929290")]
	private void Update()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x9294F0", Offset = "0x9294F0", VA = "0x9294F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x9295B0", Offset = "0x9295B0", VA = "0x9295B0")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x20000CF")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x200025A")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x4001324")]
		Uninitialized = -1,
		[Token(Token = "0x4001325")]
		NotEnabled,
		[Token(Token = "0x4001326")]
		Success,
		[Token(Token = "0x4001327")]
		StreamError,
		[Token(Token = "0x4001328")]
		ProcessError,
		[Token(Token = "0x4001329")]
		MaxStatValue
	}

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource source;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramAmbiStat;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x92F798", Offset = "0x92F798", VA = "0x92F798")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x92F9CC", Offset = "0x92F9CC", VA = "0x92F9CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x92FBB8", Offset = "0x92FBB8", VA = "0x92FBB8")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x20000D0")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x200025B")]
	private enum Parameters
	{
		[Token(Token = "0x400132B")]
		P_GAIN,
		[Token(Token = "0x400132C")]
		P_USEINVSQR,
		[Token(Token = "0x400132D")]
		P_NEAR,
		[Token(Token = "0x400132E")]
		P_FAR,
		[Token(Token = "0x400132F")]
		P_RADIUS,
		[Token(Token = "0x4001330")]
		P_DISABLE_RFL,
		[Token(Token = "0x4001331")]
		P_AMBISTAT,
		[Token(Token = "0x4001332")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x4001333")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x4001334")]
		P_SENDLEVEL,
		[Token(Token = "0x4001335")]
		P_NUM
	}

	[Token(Token = "0x4000535")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x17000024")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x600039D")]
		[Address(RVA = "0x92FE04", Offset = "0x92FE04", VA = "0x92FE04")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600039E")]
		[Address(RVA = "0x92FE0C", Offset = "0x92FE0C", VA = "0x92FE0C")]
		set
		{
		}
	}

	[Token(Token = "0x17000025")]
	public float Gain
	{
		[Token(Token = "0x600039F")]
		[Address(RVA = "0x92FE18", Offset = "0x92FE18", VA = "0x92FE18")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003A0")]
		[Address(RVA = "0x92FE20", Offset = "0x92FE20", VA = "0x92FE20")]
		set
		{
		}
	}

	[Token(Token = "0x17000026")]
	public bool UseInvSqr
	{
		[Token(Token = "0x60003A1")]
		[Address(RVA = "0x92FEA4", Offset = "0x92FEA4", VA = "0x92FEA4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003A2")]
		[Address(RVA = "0x92FEAC", Offset = "0x92FEAC", VA = "0x92FEAC")]
		set
		{
		}
	}

	[Token(Token = "0x17000027")]
	public float Near
	{
		[Token(Token = "0x60003A3")]
		[Address(RVA = "0x92FEB8", Offset = "0x92FEB8", VA = "0x92FEB8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003A4")]
		[Address(RVA = "0x92FEC0", Offset = "0x92FEC0", VA = "0x92FEC0")]
		set
		{
		}
	}

	[Token(Token = "0x17000028")]
	public float Far
	{
		[Token(Token = "0x60003A5")]
		[Address(RVA = "0x92FF48", Offset = "0x92FF48", VA = "0x92FF48")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003A6")]
		[Address(RVA = "0x92FF50", Offset = "0x92FF50", VA = "0x92FF50")]
		set
		{
		}
	}

	[Token(Token = "0x17000029")]
	public float VolumetricRadius
	{
		[Token(Token = "0x60003A7")]
		[Address(RVA = "0x92FFD8", Offset = "0x92FFD8", VA = "0x92FFD8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003A8")]
		[Address(RVA = "0x92FFE0", Offset = "0x92FFE0", VA = "0x92FFE0")]
		set
		{
		}
	}

	[Token(Token = "0x1700002A")]
	public float ReverbSend
	{
		[Token(Token = "0x60003A9")]
		[Address(RVA = "0x930068", Offset = "0x930068", VA = "0x930068")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003AA")]
		[Address(RVA = "0x930070", Offset = "0x930070", VA = "0x930070")]
		set
		{
		}
	}

	[Token(Token = "0x1700002B")]
	public bool EnableRfl
	{
		[Token(Token = "0x60003AB")]
		[Address(RVA = "0x9300F8", Offset = "0x9300F8", VA = "0x9300F8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003AC")]
		[Address(RVA = "0x930100", Offset = "0x930100", VA = "0x930100")]
		set
		{
		}
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x92FC2C", Offset = "0x92FC2C", VA = "0x92FC2C")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x74A334", Offset = "0x74A334")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600039C")]
	[Address(RVA = "0x92FD24", Offset = "0x92FD24", VA = "0x92FD24")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x93010C", Offset = "0x93010C", VA = "0x93010C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x930280", Offset = "0x930280", VA = "0x930280")]
	private void Start()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x930284", Offset = "0x930284", VA = "0x930284")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x930178", Offset = "0x930178", VA = "0x930178")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x93034C", Offset = "0x93034C", VA = "0x93034C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x9307AC", Offset = "0x9307AC", VA = "0x9307AC")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x92FCA4", Offset = "0x92FCA4", VA = "0x92FCA4")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x93087C", Offset = "0x93087C", VA = "0x93087C")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x20000D1")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x4000540")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x4000542")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x93089C", Offset = "0x93089C", VA = "0x93089C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x9308A8", Offset = "0x9308A8", VA = "0x9308A8")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x930960", Offset = "0x930960", VA = "0x930960")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x9308E0", Offset = "0x9308E0", VA = "0x9308E0")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x9309E0", Offset = "0x9309E0", VA = "0x9309E0")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x20000D2")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x200025C")]
	private struct MeshMaterial
	{
		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x200025D")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x4000549")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x1700002C")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x60003BB")]
		[Address(RVA = "0x93345C", Offset = "0x93345C", VA = "0x93345C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002D")]
	public string filePath
	{
		[Token(Token = "0x60003BC")]
		[Address(RVA = "0x9334E8", Offset = "0x9334E8", VA = "0x9334E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x933560", Offset = "0x933560", VA = "0x933560")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x9336A8", Offset = "0x9336A8", VA = "0x9336A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x9336AC", Offset = "0x9336AC", VA = "0x9336AC")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x933C0C", Offset = "0x933C0C", VA = "0x933C0C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x933FA4", Offset = "0x933FA4", VA = "0x933FA4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x934100", Offset = "0x934100", VA = "0x934100")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x9347D8", Offset = "0x9347D8", VA = "0x9347D8")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x934814", Offset = "0x934814", VA = "0x934814")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x935E80", Offset = "0x935E80", VA = "0x935E80")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x935D58", Offset = "0x935D58", VA = "0x935D58")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x933A44", Offset = "0x933A44", VA = "0x933A44")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x933878", Offset = "0x933878", VA = "0x933878")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x93632C", Offset = "0x93632C", VA = "0x93632C")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x936768", Offset = "0x936768", VA = "0x936768")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x20000D3")]
internal class ONSPPropagation
{
	[Token(Token = "0x200025E")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x400133C")]
		Int8,
		[Token(Token = "0x400133D")]
		UInt8,
		[Token(Token = "0x400133E")]
		Int16,
		[Token(Token = "0x400133F")]
		UInt16,
		[Token(Token = "0x4001340")]
		Int32,
		[Token(Token = "0x4001341")]
		UInt32,
		[Token(Token = "0x4001342")]
		Int64,
		[Token(Token = "0x4001343")]
		UInt64,
		[Token(Token = "0x4001344")]
		Float16,
		[Token(Token = "0x4001345")]
		Float32,
		[Token(Token = "0x4001346")]
		Float64
	}

	[Token(Token = "0x200025F")]
	public class ClientType
	{
		[Token(Token = "0x4001347")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x4001348")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x4001349")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x400134A")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x400134B")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x400134C")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x400134D")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x400134E")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x400134F")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x4001350")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x4001351")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x4001352")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x4001353")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x4001354")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x4001355")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_2 = 14u;

		[Token(Token = "0x4001356")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2021_1 = 15u;

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x930E94", Offset = "0x930E94", VA = "0x930E94")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x2000260")]
	public interface PropagationInterface
	{
		[Token(Token = "0x6000DAE")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x6000DAF")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x6000DB0")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x6000DB1")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000DB2")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x6000DB3")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000DB4")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000DB5")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000DB6")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000DB7")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000DB8")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000DB9")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x6000DBA")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000DBB")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000DBC")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x2000261")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x4001357")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700016D")]
		private IntPtr context
		{
			[Token(Token = "0x6000DBD")]
			[Address(RVA = "0x931B04", Offset = "0x931B04", VA = "0x931B04")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x931B68", Offset = "0x931B68", VA = "0x931B68")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x931BF8", Offset = "0x931BF8", VA = "0x931BF8")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x931C88", Offset = "0x931C88", VA = "0x931C88", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x931CAC", Offset = "0x931CAC", VA = "0x931CAC")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x931D3C", Offset = "0x931D3C", VA = "0x931D3C", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x931D60", Offset = "0x931D60", VA = "0x931D60")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x931DEC", Offset = "0x931DEC", VA = "0x931DEC", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0x931E10", Offset = "0x931E10", VA = "0x931E10")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0x931E90", Offset = "0x931E90", VA = "0x931E90", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x931E98", Offset = "0x931E98", VA = "0x931E98")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0x931FB8", Offset = "0x931FB8", VA = "0x931FB8", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x9320B0", Offset = "0x9320B0", VA = "0x9320B0")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x932148", Offset = "0x932148", VA = "0x932148", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x932154", Offset = "0x932154", VA = "0x932154")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0x932280", Offset = "0x932280", VA = "0x932280", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x93228C", Offset = "0x93228C", VA = "0x93228C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x932338", Offset = "0x932338", VA = "0x932338", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0x932344", Offset = "0x932344", VA = "0x932344")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0x9323F0", Offset = "0x9323F0", VA = "0x9323F0", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x9323FC", Offset = "0x9323FC", VA = "0x9323FC")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0x9324A8", Offset = "0x9324A8", VA = "0x9324A8", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0x9324B4", Offset = "0x9324B4", VA = "0x9324B4")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0x932540", Offset = "0x932540", VA = "0x932540", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x932564", Offset = "0x932564", VA = "0x932564")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0x9325E4", Offset = "0x9325E4", VA = "0x9325E4", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x9325EC", Offset = "0x9325EC", VA = "0x9325EC")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x932694", Offset = "0x932694", VA = "0x932694", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x9326A0", Offset = "0x9326A0", VA = "0x9326A0")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x932748", Offset = "0x932748", VA = "0x932748", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0x932758", Offset = "0x932758", VA = "0x932758")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0x9327E8", Offset = "0x9327E8", VA = "0x9327E8", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x930E40", Offset = "0x930E40", VA = "0x930E40")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x2000262")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x4001359")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700016E")]
		private IntPtr context
		{
			[Token(Token = "0x6000DDE")]
			[Address(RVA = "0x9327F4", Offset = "0x9327F4", VA = "0x9327F4")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0x930C88", Offset = "0x930C88", VA = "0x930C88")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x932858", Offset = "0x932858", VA = "0x932858")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x9328E8", Offset = "0x9328E8", VA = "0x9328E8", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x93290C", Offset = "0x93290C", VA = "0x93290C")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x93299C", Offset = "0x93299C", VA = "0x93299C", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x9329C0", Offset = "0x9329C0", VA = "0x9329C0")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x932A50", Offset = "0x932A50", VA = "0x932A50", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0x932A74", Offset = "0x932A74", VA = "0x932A74")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0x932AF4", Offset = "0x932AF4", VA = "0x932AF4", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0x932AFC", Offset = "0x932AFC", VA = "0x932AFC")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0x932C1C", Offset = "0x932C1C", VA = "0x932C1C", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0x932D14", Offset = "0x932D14", VA = "0x932D14")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0x932DAC", Offset = "0x932DAC", VA = "0x932DAC", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x932DB8", Offset = "0x932DB8", VA = "0x932DB8")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0x932EE4", Offset = "0x932EE4", VA = "0x932EE4", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x932EF0", Offset = "0x932EF0", VA = "0x932EF0")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0x932F9C", Offset = "0x932F9C", VA = "0x932F9C", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x932FA8", Offset = "0x932FA8", VA = "0x932FA8")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x933054", Offset = "0x933054", VA = "0x933054", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x933060", Offset = "0x933060", VA = "0x933060")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x93310C", Offset = "0x93310C", VA = "0x93310C", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x933118", Offset = "0x933118", VA = "0x933118")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x9331A8", Offset = "0x9331A8", VA = "0x9331A8", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x9331CC", Offset = "0x9331CC", VA = "0x9331CC")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x93324C", Offset = "0x93324C", VA = "0x93324C", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x933254", Offset = "0x933254", VA = "0x933254")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x9332FC", Offset = "0x9332FC", VA = "0x9332FC", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x933308", Offset = "0x933308", VA = "0x933308")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x9333B0", Offset = "0x9333B0", VA = "0x9333B0", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x9333C0", Offset = "0x9333C0", VA = "0x9333C0")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x933450", Offset = "0x933450", VA = "0x933450", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x930D18", Offset = "0x930D18", VA = "0x930D18")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x2000263")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x400135B")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700016F")]
		private IntPtr context
		{
			[Token(Token = "0x6000DFF")]
			[Address(RVA = "0x930E9C", Offset = "0x930E9C", VA = "0x930E9C")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000E00")]
		[Address(RVA = "0x930D64", Offset = "0x930D64", VA = "0x930D64")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x930F00", Offset = "0x930F00", VA = "0x930F00")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0x930F90", Offset = "0x930F90", VA = "0x930F90", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x930FB4", Offset = "0x930FB4", VA = "0x930FB4")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x931044", Offset = "0x931044", VA = "0x931044", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E05")]
		[Address(RVA = "0x931068", Offset = "0x931068", VA = "0x931068")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x9310F8", Offset = "0x9310F8", VA = "0x9310F8", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x93111C", Offset = "0x93111C", VA = "0x93111C")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x93119C", Offset = "0x93119C", VA = "0x93119C", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x9311A4", Offset = "0x9311A4", VA = "0x9311A4")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x9312C4", Offset = "0x9312C4", VA = "0x9312C4", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x9313BC", Offset = "0x9313BC", VA = "0x9313BC")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x931454", Offset = "0x931454", VA = "0x931454", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x931460", Offset = "0x931460", VA = "0x931460")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x93158C", Offset = "0x93158C", VA = "0x93158C", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0x931598", Offset = "0x931598", VA = "0x931598")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x931644", Offset = "0x931644", VA = "0x931644", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x931650", Offset = "0x931650", VA = "0x931650")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x9316FC", Offset = "0x9316FC", VA = "0x9316FC", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x931708", Offset = "0x931708", VA = "0x931708")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x9317B4", Offset = "0x9317B4", VA = "0x9317B4", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x9317C0", Offset = "0x9317C0", VA = "0x9317C0")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x931850", Offset = "0x931850", VA = "0x931850", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x931874", Offset = "0x931874", VA = "0x931874")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x9318F4", Offset = "0x9318F4", VA = "0x9318F4", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E19")]
		[Address(RVA = "0x9318FC", Offset = "0x9318FC", VA = "0x9318FC")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0x9319A4", Offset = "0x9319A4", VA = "0x9319A4", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0x9319B0", Offset = "0x9319B0", VA = "0x9319B0")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0x931A58", Offset = "0x931A58", VA = "0x931A58", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0x931A68", Offset = "0x931A68", VA = "0x931A68")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x931AF8", Offset = "0x931AF8", VA = "0x931AF8", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0x930DF4", Offset = "0x930DF4", VA = "0x930DF4")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x1700002E")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x60003CC")]
		[Address(RVA = "0x9309F0", Offset = "0x9309F0", VA = "0x9309F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x930A60", Offset = "0x930A60", VA = "0x930A60")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x930E8C", Offset = "0x930E8C", VA = "0x930E8C")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x20000D4")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x2000264")]
	public enum Preset
	{
		[Token(Token = "0x400135E")]
		Custom,
		[Token(Token = "0x400135F")]
		AcousticTile,
		[Token(Token = "0x4001360")]
		Brick,
		[Token(Token = "0x4001361")]
		BrickPainted,
		[Token(Token = "0x4001362")]
		Carpet,
		[Token(Token = "0x4001363")]
		CarpetHeavy,
		[Token(Token = "0x4001364")]
		CarpetHeavyPadded,
		[Token(Token = "0x4001365")]
		CeramicTile,
		[Token(Token = "0x4001366")]
		Concrete,
		[Token(Token = "0x4001367")]
		ConcreteRough,
		[Token(Token = "0x4001368")]
		ConcreteBlock,
		[Token(Token = "0x4001369")]
		ConcreteBlockPainted,
		[Token(Token = "0x400136A")]
		Curtain,
		[Token(Token = "0x400136B")]
		Foliage,
		[Token(Token = "0x400136C")]
		Glass,
		[Token(Token = "0x400136D")]
		GlassHeavy,
		[Token(Token = "0x400136E")]
		Grass,
		[Token(Token = "0x400136F")]
		Gravel,
		[Token(Token = "0x4001370")]
		GypsumBoard,
		[Token(Token = "0x4001371")]
		PlasterOnBrick,
		[Token(Token = "0x4001372")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x4001373")]
		Soil,
		[Token(Token = "0x4001374")]
		SoundProof,
		[Token(Token = "0x4001375")]
		Snow,
		[Token(Token = "0x4001376")]
		Steel,
		[Token(Token = "0x4001377")]
		Water,
		[Token(Token = "0x4001378")]
		WoodThin,
		[Token(Token = "0x4001379")]
		WoodThick,
		[Token(Token = "0x400137A")]
		WoodFloor,
		[Token(Token = "0x400137B")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x2000265")]
	public sealed class Point
	{
		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0xB4EA5C", Offset = "0xB4EA5C", VA = "0xB4EA5C")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0xB4EBA4", Offset = "0xB4EBA4", VA = "0xB4EBA4")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0xB4EC14", Offset = "0xB4EC14", VA = "0xB4EC14")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x2000266")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x740E70", Offset = "0x740E70")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x2000351")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7414A8", Offset = "0x7414A8")]
		private sealed class <>c
		{
			[Token(Token = "0x4001750")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001751")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x4001752")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x60010AC")]
			[Address(RVA = "0xB4F06C", Offset = "0xB4F06C", VA = "0xB4F06C")]
			public <>c()
			{
			}

			[Token(Token = "0x60010AD")]
			[Address(RVA = "0xB4F074", Offset = "0xB4F074", VA = "0xB4F074")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x60010AE")]
			[Address(RVA = "0xB4F08C", Offset = "0xB4F08C", VA = "0xB4F08C")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x17000170")]
		public float Item
		{
			[Token(Token = "0x6000E23")]
			[Address(RVA = "0xB4EC4C", Offset = "0xB4EC4C", VA = "0xB4EC4C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0xB4EB2C", Offset = "0xB4EB2C", VA = "0xB4EB2C")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x744E6C", Offset = "0x744E6C")]
	public Spectrum absorption;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x744EA4", Offset = "0x744EA4")]
	public Spectrum transmission;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x744EDC", Offset = "0x744EDC")]
	public Spectrum scattering;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x1700002F")]
	public Preset preset
	{
		[Token(Token = "0x60003CF")]
		[Address(RVA = "0xB46940", Offset = "0xB46940", VA = "0xB46940")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x60003D0")]
		[Address(RVA = "0xB46948", Offset = "0xB46948", VA = "0xB46948")]
		set
		{
		}
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xB46B04", Offset = "0xB46B04", VA = "0xB46B04")]
	private void Start()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xB46B08", Offset = "0xB46B08", VA = "0xB46B08")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xB4723C", Offset = "0xB4723C", VA = "0xB4723C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xB47240", Offset = "0xB47240", VA = "0xB47240")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0xB46C78", Offset = "0xB46C78", VA = "0xB46C78")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0xB46970", Offset = "0xB46970", VA = "0xB46970")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0xB47328", Offset = "0xB47328", VA = "0xB47328")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0xB47788", Offset = "0xB47788", VA = "0xB47788")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0xB47BE8", Offset = "0xB47BE8", VA = "0xB47BE8")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0xB48048", Offset = "0xB48048", VA = "0xB48048")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0xB484A8", Offset = "0xB484A8", VA = "0xB484A8")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0xB48908", Offset = "0xB48908", VA = "0xB48908")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0xB48D68", Offset = "0xB48D68", VA = "0xB48D68")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0xB491C8", Offset = "0xB491C8", VA = "0xB491C8")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0xB49628", Offset = "0xB49628", VA = "0xB49628")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0xB49A88", Offset = "0xB49A88", VA = "0xB49A88")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0xB49EE8", Offset = "0xB49EE8", VA = "0xB49EE8")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0xB4A348", Offset = "0xB4A348", VA = "0xB4A348")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0xB4A7A8", Offset = "0xB4A7A8", VA = "0xB4A7A8")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0xB4AC08", Offset = "0xB4AC08", VA = "0xB4AC08")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0xB4B060", Offset = "0xB4B060", VA = "0xB4B060")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0xB4B4C0", Offset = "0xB4B4C0", VA = "0xB4B4C0")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0xB4B7FC", Offset = "0xB4B7FC", VA = "0xB4B7FC")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xB4BB38", Offset = "0xB4BB38", VA = "0xB4BB38")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0xB4BF98", Offset = "0xB4BF98", VA = "0xB4BF98")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xB4C3F8", Offset = "0xB4C3F8", VA = "0xB4C3F8")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0xB4C858", Offset = "0xB4C858", VA = "0xB4C858")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xB4CB94", Offset = "0xB4CB94", VA = "0xB4CB94")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0xB4CCF0", Offset = "0xB4CCF0", VA = "0xB4CCF0")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0xB4D02C", Offset = "0xB4D02C", VA = "0xB4D02C")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xB4D484", Offset = "0xB4D484", VA = "0xB4D484")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xB4D8E4", Offset = "0xB4D8E4", VA = "0xB4D8E4")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xB4DD3C", Offset = "0xB4DD3C", VA = "0xB4DD3C")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xB4E19C", Offset = "0xB4E19C", VA = "0xB4E19C")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xB4E5FC", Offset = "0xB4E5FC", VA = "0xB4E5FC")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xB4EA94", Offset = "0xB4EA94", VA = "0xB4EA94")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x20000D5")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xB4F0A4", Offset = "0xB4F0A4", VA = "0xB4F0A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0xB4F178", Offset = "0xB4F178", VA = "0xB4F178")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x20000D6")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x17000030")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x60003F7")]
		[Address(RVA = "0xB4F734", Offset = "0xB4F734", VA = "0xB4F734")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0xB4F848", Offset = "0xB4F848", VA = "0xB4F848")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x20000D7")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x4000554")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x60003F9")]
	[Address(RVA = "0xB4F858", Offset = "0xB4F858", VA = "0xB4F858")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0xB4F8F0", Offset = "0xB4F8F0", VA = "0xB4F8F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0xB4F9FC", Offset = "0xB4F9FC", VA = "0xB4F9FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0xB4FA00", Offset = "0xB4FA00", VA = "0xB4FA00")]
	private void Update()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0xB4FA04", Offset = "0xB4FA04", VA = "0xB4FA04")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x20000D8")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x2000267")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float particleSize;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float particleOffset;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject room;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] dims;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] coefs;

	[Token(Token = "0x4000563")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] points;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] normals;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem sys;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x4000569")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0xFA5A9C", Offset = "0xFA5A9C", VA = "0xFA5A9C")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0xFA58CC", Offset = "0xFA58CC", VA = "0xFA58CC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x74A348", Offset = "0x74A348")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0xFA5AD4", Offset = "0xFA5AD4", VA = "0xFA5AD4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0xFA5C08", Offset = "0xFA5C08", VA = "0xFA5C08")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0xFA5CFC", Offset = "0xFA5CFC", VA = "0xFA5CFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0xFA66B4", Offset = "0xFA66B4", VA = "0xFA66B4")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000404")]
	[Address(RVA = "0xFA5B74", Offset = "0xFA5B74", VA = "0xFA5B74")]
	private static extern int OSP_Unity_AssignRaycastCallback(AudioRaycastCallback callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000405")]
	[Address(RVA = "0xFA5C6C", Offset = "0xFA5C6C", VA = "0xFA5C6C")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000406")]
	[Address(RVA = "0xFA641C", Offset = "0xFA641C", VA = "0xFA641C")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x6000407")]
	[Address(RVA = "0xFA649C", Offset = "0xFA649C", VA = "0xFA649C")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x6000408")]
	[Address(RVA = "0xFA6524", Offset = "0xFA6524", VA = "0xFA6524")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x6000409")]
	[Address(RVA = "0xFA65AC", Offset = "0xFA65AC", VA = "0xFA65AC")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x600040A")]
	[Address(RVA = "0xFA662C", Offset = "0xFA662C", VA = "0xFA662C")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x600040B")]
	[Address(RVA = "0xFA74EC", Offset = "0xFA74EC", VA = "0xFA74EC")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x600040C")]
	[Address(RVA = "0xFA7594", Offset = "0xFA7594", VA = "0xFA7594")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xFA763C", Offset = "0xFA763C", VA = "0xFA763C")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x20000D9")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x20000DA")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xB4F188", Offset = "0xB4F188", VA = "0xB4F188")]
	private void Start()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xB4F18C", Offset = "0xB4F18C", VA = "0xB4F18C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xB4F190", Offset = "0xB4F190", VA = "0xB4F190")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xB4F2F8", Offset = "0xB4F2F8", VA = "0xB4F2F8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xB4F1DC", Offset = "0xB4F1DC", VA = "0xB4F1DC")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0xB4F26C", Offset = "0xB4F26C", VA = "0xB4F26C")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0xB4F344", Offset = "0xB4F344", VA = "0xB4F344")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0xB4F3DC", Offset = "0xB4F3DC", VA = "0xB4F3DC")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0xB4F544", Offset = "0xB4F544", VA = "0xB4F544")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xB4F6AC", Offset = "0xB4F6AC", VA = "0xB4F6AC")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x20000DB")]
public class Lightning : MonoBehaviour
{
	[Token(Token = "0x2000268")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740EA8", Offset = "0x740EA8")]
	private sealed class <lighter>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Lightning <>4__this;

		[Token(Token = "0x17000171")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E2C")]
			[Address(RVA = "0x921530", Offset = "0x921530", VA = "0x921530", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000172")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E2E")]
			[Address(RVA = "0x921598", Offset = "0x921598", VA = "0x921598", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x9212F4", Offset = "0x9212F4", VA = "0x9212F4")]
		[DebuggerHidden]
		public <lighter>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x921334", Offset = "0x921334", VA = "0x921334", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0x921338", Offset = "0x921338", VA = "0x921338", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0x921538", Offset = "0x921538", VA = "0x921538", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float offMin;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float offMax;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float onMin;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float onMax;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject lightning;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip[] Thunder;

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x921258", Offset = "0x921258", VA = "0x921258")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x921284", Offset = "0x921284", VA = "0x921284")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74A3AC", Offset = "0x74A3AC")]
	private IEnumerator lighter()
	{
		return null;
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x921320", Offset = "0x921320", VA = "0x921320")]
	public Lightning()
	{
	}
}
[Token(Token = "0x20000DC")]
public class LockRotation : MonoBehaviour
{
	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Quaternion rotation;

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x922098", Offset = "0x922098", VA = "0x922098")]
	private void Awake()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x9220D4", Offset = "0x9220D4", VA = "0x9220D4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x92210C", Offset = "0x92210C", VA = "0x92210C")]
	public LockRotation()
	{
	}
}
[Token(Token = "0x20000DD")]
public static class SaveSystem
{
	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string file;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool loaded;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static DataState data;

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x89628C", Offset = "0x89628C", VA = "0x89628C")]
	public static void Initialize(string fileName)
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x89633C", Offset = "0x89633C", VA = "0x89633C")]
	private static string GetPath()
	{
		return null;
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x8963A4", Offset = "0x8963A4", VA = "0x8963A4")]
	private static void Load()
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x89654C", Offset = "0x89654C", VA = "0x89654C")]
	private static void ReplaceItem(string name, string item)
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x896790", Offset = "0x896790", VA = "0x896790")]
	public static bool HasKey(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x8968D0", Offset = "0x8968D0", VA = "0x8968D0")]
	public static void SetVector3(string name, Vector3 val)
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x896B10", Offset = "0x896B10", VA = "0x896B10")]
	public static void SetVector2(string name, Vector2 val)
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x896BE0", Offset = "0x896BE0", VA = "0x896BE0")]
	public static void SetColor(string name, Color val)
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x896E4C", Offset = "0x896E4C", VA = "0x896E4C")]
	public static void SetBool(string name, bool val)
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x896ED8", Offset = "0x896ED8", VA = "0x896ED8")]
	public static void SetFloat(string name, float val)
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x896F1C", Offset = "0x896F1C", VA = "0x896F1C")]
	public static void SetInt(string name, int val)
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x896AD0", Offset = "0x896AD0", VA = "0x896AD0")]
	public static void SetString(string name, string val)
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x896F60", Offset = "0x896F60", VA = "0x896F60")]
	public static void SaveToDisk()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x8970F0", Offset = "0x8970F0", VA = "0x8970F0")]
	public static Vector3 GetVector3(string name)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x8973DC", Offset = "0x8973DC", VA = "0x8973DC")]
	public static Vector3 GetVector3(string name, Vector3 defaultValue)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x897194", Offset = "0x897194", VA = "0x897194")]
	private static Vector3 iVector3(string name, Vector3 defaultValue)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x897484", Offset = "0x897484", VA = "0x897484")]
	public static Vector2 GetVector2(string name)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x897728", Offset = "0x897728", VA = "0x897728")]
	public static Vector2 GetVector2(string name, Vector2 defaultValue)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x897528", Offset = "0x897528", VA = "0x897528")]
	private static Vector2 iVector2(string name, Vector2 defaultValue)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x897780", Offset = "0x897780", VA = "0x897780")]
	public static Color GetColor(string name)
	{
		return default(Color);
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x897A10", Offset = "0x897A10", VA = "0x897A10")]
	public static Color GetColor(string name, Color defaultValue)
	{
		return default(Color);
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x8977BC", Offset = "0x8977BC", VA = "0x8977BC")]
	private static Color iColor(string name, Color defaultValue)
	{
		return default(Color);
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x897A90", Offset = "0x897A90", VA = "0x897A90")]
	public static bool GetBool(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x897C08", Offset = "0x897C08", VA = "0x897C08")]
	public static bool GetBool(string name, bool defaultValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x897AD0", Offset = "0x897AD0", VA = "0x897AD0")]
	private static bool iBool(string name, bool defaultValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x897C4C", Offset = "0x897C4C", VA = "0x897C4C")]
	public static float GetFloat(string name)
	{
		return default(float);
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x897DD0", Offset = "0x897DD0", VA = "0x897DD0")]
	public static float GetFloat(string name, float defaultValue)
	{
		return default(float);
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x897C88", Offset = "0x897C88", VA = "0x897C88")]
	private static float iFloat(string name, float defaultValue)
	{
		return default(float);
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x897E20", Offset = "0x897E20", VA = "0x897E20")]
	public static int GetInt(string name)
	{
		return default(int);
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x897F9C", Offset = "0x897F9C", VA = "0x897F9C")]
	public static int GetInt(string name, int defaultValue)
	{
		return default(int);
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x897E60", Offset = "0x897E60", VA = "0x897E60")]
	private static int iInt(string name, int defaultValue)
	{
		return default(int);
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x898014", Offset = "0x898014", VA = "0x898014")]
	public static string GetString(string name)
	{
		return null;
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x8981B4", Offset = "0x8981B4", VA = "0x8981B4")]
	public static string GetString(string name, string defaultValue)
	{
		return null;
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x89808C", Offset = "0x89808C", VA = "0x89808C")]
	private static string iString(string name, string defaultValue)
	{
		return null;
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x897FE0", Offset = "0x897FE0", VA = "0x897FE0")]
	private static int intParse(string val)
	{
		return default(int);
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x89744C", Offset = "0x89744C", VA = "0x89744C")]
	private static float floatParse(string val)
	{
		return default(float);
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x8966C0", Offset = "0x8966C0", VA = "0x8966C0")]
	private static string Crypt(string text)
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x20000DE")]
public class SaveData
{
	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x744F34", Offset = "0x744F34")]
	private string <Key>k__BackingField;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x744F44", Offset = "0x744F44")]
	private string <Value>k__BackingField;

	[Token(Token = "0x17000031")]
	public string Key
	{
		[Token(Token = "0x6000445")]
		[Address(RVA = "0x894D10", Offset = "0x894D10", VA = "0x894D10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74A410", Offset = "0x74A410")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000446")]
		[Address(RVA = "0x894D18", Offset = "0x894D18", VA = "0x894D18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74A420", Offset = "0x74A420")]
		set
		{
		}
	}

	[Token(Token = "0x17000032")]
	public string Value
	{
		[Token(Token = "0x6000447")]
		[Address(RVA = "0x894D20", Offset = "0x894D20", VA = "0x894D20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74A430", Offset = "0x74A430")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000448")]
		[Address(RVA = "0x894D28", Offset = "0x894D28", VA = "0x894D28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74A440", Offset = "0x74A440")]
		set
		{
		}
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x894D30", Offset = "0x894D30", VA = "0x894D30")]
	public SaveData()
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x894D38", Offset = "0x894D38", VA = "0x894D38")]
	public SaveData(string key, string value)
	{
	}
}
[Serializable]
[Token(Token = "0x20000DF")]
public class DataState
{
	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<SaveData> items;

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x83DAB0", Offset = "0x83DAB0", VA = "0x83DAB0")]
	public DataState()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x83DB20", Offset = "0x83DB20", VA = "0x83DB20")]
	public void AddItem(SaveData item)
	{
	}
}
[Token(Token = "0x20000E0")]
public class SerializatorBinary
{
	[Token(Token = "0x600044D")]
	[Address(RVA = "0x897034", Offset = "0x897034", VA = "0x897034")]
	public static void SaveBinary(DataState state, string dataPath)
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x89644C", Offset = "0x89644C", VA = "0x89644C")]
	public static DataState LoadBinary(string dataPath)
	{
		return null;
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x898758", Offset = "0x898758", VA = "0x898758")]
	public SerializatorBinary()
	{
	}
}
[Token(Token = "0x20000E1")]
public class SaveSystemSetup : MonoBehaviour
{
	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string fileName;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool dontDestroyOnLoad;

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x8981F8", Offset = "0x8981F8", VA = "0x8981F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x8982A0", Offset = "0x8982A0", VA = "0x8982A0")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x8982A4", Offset = "0x8982A4", VA = "0x8982A4")]
	public SaveSystemSetup()
	{
	}
}
[Token(Token = "0x20000E2")]
public class TestSaveGame : MonoBehaviour
{
	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x744F74", Offset = "0x744F74")]
	public Text countIntText;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputField inputIntField;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int cubeIntCount;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x744FAC", Offset = "0x744FAC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x744FAC", Offset = "0x744FAC")]
	public float floatCount;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 vect2;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 vect3;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Color color;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string stringSave;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool saveBool;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool dlt;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject btn;

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x9A98B8", Offset = "0x9A98B8", VA = "0x9A98B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x9A99A0", Offset = "0x9A99A0", VA = "0x9A99A0")]
	public void Update()
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x9A99F8", Offset = "0x9A99F8", VA = "0x9A99F8")]
	public void SaveBTN()
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x9A9948", Offset = "0x9A9948", VA = "0x9A9948")]
	public void DltBTN()
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x9A9A54", Offset = "0x9A9A54", VA = "0x9A9A54")]
	public TestSaveGame()
	{
	}
}
[Token(Token = "0x20000E3")]
public class ChatController : MonoBehaviour
{
	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_InputField TMP_ChatInput;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text TMP_ChatOutput;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Scrollbar ChatScrollbar;

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x83C158", Offset = "0x83C158", VA = "0x83C158")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x83C1FC", Offset = "0x83C1FC", VA = "0x83C1FC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x83C2A0", Offset = "0x83C2A0", VA = "0x83C2A0")]
	private void AddToChatOutput(string newText)
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x83C630", Offset = "0x83C630", VA = "0x83C630")]
	public ChatController()
	{
	}
}
[Token(Token = "0x20000E4")]
public class DropdownSample : MonoBehaviour
{
	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI text;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TMP_Dropdown dropdownWithoutPlaceholder;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TMP_Dropdown dropdownWithPlaceholder;

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x8411F0", Offset = "0x8411F0", VA = "0x8411F0")]
	public void OnButtonClick()
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x8413C0", Offset = "0x8413C0", VA = "0x8413C0")]
	public DropdownSample()
	{
	}
}
[Token(Token = "0x20000E5")]
public class EnvMapAnimator : MonoBehaviour
{
	[Token(Token = "0x2000269")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740EB8", Offset = "0x740EB8")]
	private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnvMapAnimator <>4__this;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Matrix4x4 <matrix>5__2;

		[Token(Token = "0x17000173")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E32")]
			[Address(RVA = "0x8ABBB8", Offset = "0x8ABBB8", VA = "0x8ABBB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000174")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E34")]
			[Address(RVA = "0x8ABC20", Offset = "0x8ABC20", VA = "0x8ABC20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x8AB990", Offset = "0x8AB990", VA = "0x8AB990")]
		[DebuggerHidden]
		public <Start>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0x8AB9C4", Offset = "0x8AB9C4", VA = "0x8AB9C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0x8AB9C8", Offset = "0x8AB9C8", VA = "0x8AB9C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x8ABBC0", Offset = "0x8ABBC0", VA = "0x8ABBC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 RotationSpeeds;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TMP_Text m_textMeshPro;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material m_material;

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x8AB8AC", Offset = "0x8AB8AC", VA = "0x8AB8AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x8AB920", Offset = "0x8AB920", VA = "0x8AB920")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74A450", Offset = "0x74A450")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x8AB9BC", Offset = "0x8AB9BC", VA = "0x8AB9BC")]
	public EnvMapAnimator()
	{
	}
}
[Token(Token = "0x20000E6")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x73FFF4", Offset = "0x73FFF4")]
public class RunTime_Terrain_Convertion : MonoBehaviour
{
	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Terrain sourceTerrain;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TerrainConvertInfo convertInfo;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool generateBasemap;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool attachMeshCollider;

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x993B08", Offset = "0x993B08", VA = "0x993B08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x993F28", Offset = "0x993F28", VA = "0x993F28")]
	private Material GenerateMaterial_Basemap()
	{
		return null;
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x994204", Offset = "0x994204", VA = "0x994204")]
	private Material GenerateMaterial_Splatmap()
	{
		return null;
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x994A14", Offset = "0x994A14", VA = "0x994A14")]
	public RunTime_Terrain_Convertion()
	{
	}
}
[Token(Token = "0x20000E7")]
public class SpriteFlip : MonoBehaviour
{
	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool flippedX;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SpriteRenderer m_Sprite;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_Initialized;

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x8A5644", Offset = "0x8A5644", VA = "0x8A5644")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x8A571C", Offset = "0x8A571C", VA = "0x8A571C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x8A5720", Offset = "0x8A5720", VA = "0x8A5720")]
	private void Update()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x8A577C", Offset = "0x8A577C", VA = "0x8A577C")]
	public void flip(bool flipX)
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x8A58D8", Offset = "0x8A58D8", VA = "0x8A58D8")]
	public SpriteFlip()
	{
	}
}
[Token(Token = "0x20000E8")]
public class AmmoCounter : MonoBehaviour
{
	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent On;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent Off;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int ammo;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro textmeshPro;

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x835F3C", Offset = "0x835F3C", VA = "0x835F3C")]
	public void AmmoIn()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x835FC4", Offset = "0x835FC4", VA = "0x835FC4")]
	public void AmmoOut()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x83604C", Offset = "0x83604C", VA = "0x83604C")]
	private void Start()
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x836068", Offset = "0x836068", VA = "0x836068")]
	private void Update()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x83606C", Offset = "0x83606C", VA = "0x83606C")]
	public AmmoCounter()
	{
	}
}
[Token(Token = "0x20000E9")]
public class AnimEvent : MonoBehaviour
{
	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent On;

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x8360F4", Offset = "0x8360F4", VA = "0x8360F4")]
	public void PrintEvent()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x836110", Offset = "0x836110", VA = "0x836110")]
	public AnimEvent()
	{
	}
}
[Token(Token = "0x20000EA")]
public class Brutal : MonoBehaviour
{
	[Token(Token = "0x200026A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740EC8", Offset = "0x740EC8")]
	private sealed class <Brutt>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Brutal <>4__this;

		[Token(Token = "0x17000175")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E38")]
			[Address(RVA = "0x838714", Offset = "0x838714", VA = "0x838714", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000176")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E3A")]
			[Address(RVA = "0x83877C", Offset = "0x83877C", VA = "0x83877C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0x8384F4", Offset = "0x8384F4", VA = "0x8384F4")]
		[DebuggerHidden]
		public <Brutt>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0x8385C0", Offset = "0x8385C0", VA = "0x8385C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0x8385C4", Offset = "0x8385C4", VA = "0x8385C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0x83871C", Offset = "0x83871C", VA = "0x83871C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200026B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740ED8", Offset = "0x740ED8")]
	private sealed class <Hit>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Brutal <>4__this;

		[Token(Token = "0x17000177")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E3E")]
			[Address(RVA = "0x838B60", Offset = "0x838B60", VA = "0x838B60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000178")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E40")]
			[Address(RVA = "0x838BC8", Offset = "0x838BC8", VA = "0x838BC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0x838520", Offset = "0x838520", VA = "0x838520")]
		[DebuggerHidden]
		public <Hit>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0x838A84", Offset = "0x838A84", VA = "0x838A84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x838A88", Offset = "0x838A88", VA = "0x838A88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x838B68", Offset = "0x838B68", VA = "0x838B68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200026C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740EE8", Offset = "0x740EE8")]
	private sealed class <Death>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Brutal <>4__this;

		[Token(Token = "0x17000179")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E44")]
			[Address(RVA = "0x838A14", Offset = "0x838A14", VA = "0x838A14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E46")]
			[Address(RVA = "0x838A7C", Offset = "0x838A7C", VA = "0x838A7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x83854C", Offset = "0x83854C", VA = "0x83854C")]
		[DebuggerHidden]
		public <Death>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x838784", Offset = "0x838784", VA = "0x838784", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x838788", Offset = "0x838788", VA = "0x838788", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0x838A1C", Offset = "0x838A1C", VA = "0x838A1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200026D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740EF8", Offset = "0x740EF8")]
	private sealed class <WaithitTime>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Brutal <>4__this;

		[Token(Token = "0x1700017B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E4A")]
			[Address(RVA = "0x838CF0", Offset = "0x838CF0", VA = "0x838CF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E4C")]
			[Address(RVA = "0x838D58", Offset = "0x838D58", VA = "0x838D58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x838578", Offset = "0x838578", VA = "0x838578")]
		[DebuggerHidden]
		public <WaithitTime>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x838BD0", Offset = "0x838BD0", VA = "0x838BD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0x838BD4", Offset = "0x838BD4", VA = "0x838BD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0x838CF8", Offset = "0x838CF8", VA = "0x838CF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ButcherEnemy enemy;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float time;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float hittime;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Deathtime;

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x838224", Offset = "0x838224", VA = "0x838224")]
	public void Brut()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x8382E0", Offset = "0x8382E0", VA = "0x8382E0")]
	public void hit()
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x83839C", Offset = "0x83839C", VA = "0x83839C")]
	public void death()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x838438", Offset = "0x838438", VA = "0x838438")]
	public void attack()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x838270", Offset = "0x838270", VA = "0x838270")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74A4B4", Offset = "0x74A4B4")]
	private IEnumerator Brutt()
	{
		return null;
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x83832C", Offset = "0x83832C", VA = "0x83832C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74A518", Offset = "0x74A518")]
	private IEnumerator Hit()
	{
		return null;
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x8383C8", Offset = "0x8383C8", VA = "0x8383C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74A57C", Offset = "0x74A57C")]
	private IEnumerator Death()
	{
		return null;
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x838484", Offset = "0x838484", VA = "0x838484")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74A5E0", Offset = "0x74A5E0")]
	private IEnumerator WaithitTime()
	{
		return null;
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x8385A4", Offset = "0x8385A4", VA = "0x8385A4")]
	public Brutal()
	{
	}
}
[Token(Token = "0x20000EB")]
public class ButcherEnemy : MonoBehaviour
{
	[Token(Token = "0x200026E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740F08", Offset = "0x740F08")]
	private sealed class <WaitPatrolTime>d__58 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ButcherEnemy <>4__this;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int state;

		[Token(Token = "0x1700017D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E50")]
			[Address(RVA = "0x83A6D4", Offset = "0x83A6D4", VA = "0x83A6D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E52")]
			[Address(RVA = "0x83A73C", Offset = "0x83A73C", VA = "0x83A73C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0x83A37C", Offset = "0x83A37C", VA = "0x83A37C")]
		[DebuggerHidden]
		public <WaitPatrolTime>d__58(int <>1__state)
		{
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0x83A5D4", Offset = "0x83A5D4", VA = "0x83A5D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0x83A5D8", Offset = "0x83A5D8", VA = "0x83A5D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x83A6DC", Offset = "0x83A6DC", VA = "0x83A6DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200026F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740F18", Offset = "0x740F18")]
	private sealed class <WaitLostTime>d__59 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ButcherEnemy <>4__this;

		[Token(Token = "0x1700017F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E56")]
			[Address(RVA = "0x83A564", Offset = "0x83A564", VA = "0x83A564", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000180")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E58")]
			[Address(RVA = "0x83A5CC", Offset = "0x83A5CC", VA = "0x83A5CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0x83A3A8", Offset = "0x83A3A8", VA = "0x83A3A8")]
		[DebuggerHidden]
		public <WaitLostTime>d__59(int <>1__state)
		{
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x83A43C", Offset = "0x83A43C", VA = "0x83A43C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0x83A440", Offset = "0x83A440", VA = "0x83A440", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x83A56C", Offset = "0x83A56C", VA = "0x83A56C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int WPL;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int WP;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Health;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool onceBrutal;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool onhit;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool inDeath;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
	public bool onAttack;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Brutal Br;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent Brt;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x74503C", Offset = "0x74503C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74503C", Offset = "0x74503C")]
	public GameObject player;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74509C", Offset = "0x74509C")]
	public Transform head;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7450D4", Offset = "0x7450D4")]
	public LayerMask searchLayers;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public NavMeshAgent agent;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float magnit;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Animator animator;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x74510C", Offset = "0x74510C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74510C", Offset = "0x74510C")]
	public LayerMask doorsLayer;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74516C", Offset = "0x74516C")]
	public float seeDistance;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float doorDistance;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7451A4", Offset = "0x7451A4")]
	public Vector2 enemyFOV;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7451DC", Offset = "0x7451DC")]
	public float closeDistance;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x745214", Offset = "0x745214")]
	public float lostTime;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74524C", Offset = "0x74524C")]
	public float patrolTime;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x745284", Offset = "0x745284")]
	public float walkSpeed;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool seePlayer;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	public bool chasePlayer;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8E")]
	public bool searchPlayer;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int searchState;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private HidePlace playerHidePlace;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7452BC", Offset = "0x7452BC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7452BC", Offset = "0x7452BC")]
	public Transform[] wayPoints;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74531C", Offset = "0x74531C")]
	public float wayPointWaitTime;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int wpID;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x745354", Offset = "0x745354")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x745354", Offset = "0x745354")]
	public float playerLookSpeed;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7453B4", Offset = "0x7453B4")]
	public float catchDistance;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int catchPlayerState;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 lastSawPoint;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7453EC", Offset = "0x7453EC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7453EC", Offset = "0x7453EC")]
	public AudioClip[] footSteps;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74544C", Offset = "0x74544C")]
	public AudioClip catchSound;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x745484", Offset = "0x745484")]
	public AudioClip hitSound;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private AudioSource AS;

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x838DF4", Offset = "0x838DF4", VA = "0x838DF4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x838EC8", Offset = "0x838EC8", VA = "0x838EC8")]
	private void Start()
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x838ECC", Offset = "0x838ECC", VA = "0x838ECC")]
	private void Update()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x838944", Offset = "0x838944", VA = "0x838944")]
	public void Stand()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x839CA0", Offset = "0x839CA0", VA = "0x839CA0")]
	public void Hit()
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x839558", Offset = "0x839558", VA = "0x839558")]
	private void CheckLastPoint()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x839E8C", Offset = "0x839E8C", VA = "0x839E8C")]
	public void CallEnemy(Vector3 pos)
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x839D4C", Offset = "0x839D4C", VA = "0x839D4C")]
	private void EnemySetDestination(Vector3 pos)
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x8389A4", Offset = "0x8389A4", VA = "0x8389A4")]
	public void ResetSearchStates()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x83904C", Offset = "0x83904C", VA = "0x83904C")]
	private void PatrolWayPoints()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x839F00", Offset = "0x839F00", VA = "0x839F00")]
	private bool PlayerRaycast()
	{
		return default(bool);
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x83992C", Offset = "0x83992C", VA = "0x83992C")]
	public bool DoorRaycast()
	{
		return default(bool);
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x839A94", Offset = "0x839A94", VA = "0x839A94")]
	public void DoorAttack()
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x83A0D4", Offset = "0x83A0D4", VA = "0x83A0D4")]
	private bool PlayerFOV()
	{
		return default(bool);
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x8392C0", Offset = "0x8392C0", VA = "0x8392C0")]
	private void SearchPlayer()
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x839774", Offset = "0x839774", VA = "0x839774")]
	private void CatchingPlayer()
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x83A290", Offset = "0x83A290", VA = "0x83A290")]
	public void RestartEnemyStats()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x83A2D0", Offset = "0x83A2D0", VA = "0x83A2D0")]
	public void FootStepPlay()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x83A340", Offset = "0x83A340", VA = "0x83A340")]
	public void PlayAnimationSound()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x839E0C", Offset = "0x839E0C", VA = "0x839E0C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74A644", Offset = "0x74A644")]
	private IEnumerator WaitPatrolTime(int state)
	{
		return null;
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x83A220", Offset = "0x83A220", VA = "0x83A220")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74A6A8", Offset = "0x74A6A8")]
	private IEnumerator WaitLostTime()
	{
		return null;
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x83A3D4", Offset = "0x83A3D4", VA = "0x83A3D4")]
	public ButcherEnemy()
	{
	}
}
[Token(Token = "0x20000EC")]
public class CollFX : MonoBehaviour
{
	[Token(Token = "0x2000270")]
	public enum CollisionEventType
	{
		[Token(Token = "0x400139B")]
		Impulse,
		[Token(Token = "0x400139C")]
		Velocity,
		[Token(Token = "0x400139D")]
		ImpulseOrVelocity
	}

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem explo;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem Wood;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem Wall;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CollisionEventType CollisionType;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7454BC", Offset = "0x7454BC")]
	public float ForceThreshold;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7454F4", Offset = "0x7454F4")]
	public float VelocityThreshold;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent ThresholdMet;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x74552C", Offset = "0x74552C")]
	public float LastImpulse;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float LastVelocity;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float MaxImpulse;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float MaxVelocity;

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x83C638", Offset = "0x83C638", VA = "0x83C638")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x83CC70", Offset = "0x83CC70", VA = "0x83CC70")]
	public CollFX()
	{
	}
}
[Token(Token = "0x20000ED")]
public class FFR : MonoBehaviour
{
	[Token(Token = "0x2000271")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740F28", Offset = "0x740F28")]
	private sealed class <FF>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000181")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E5C")]
			[Address(RVA = "0x8ABDD8", Offset = "0x8ABDD8", VA = "0x8ABDD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000182")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E5E")]
			[Address(RVA = "0x8ABE40", Offset = "0x8ABE40", VA = "0x8ABE40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0x8ABCB4", Offset = "0x8ABCB4", VA = "0x8ABCB4")]
		[DebuggerHidden]
		public <FF>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x8ABCE8", Offset = "0x8ABCE8", VA = "0x8ABCE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x8ABCEC", Offset = "0x8ABCEC", VA = "0x8ABCEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0x8ABDE0", Offset = "0x8ABDE0", VA = "0x8ABDE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x8ABC28", Offset = "0x8ABC28", VA = "0x8ABC28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x8ABC54", Offset = "0x8ABC54", VA = "0x8ABC54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74A70C", Offset = "0x74A70C")]
	public IEnumerator FF()
	{
		return null;
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x8ABCE0", Offset = "0x8ABCE0", VA = "0x8ABCE0")]
	public FFR()
	{
	}
}
[Token(Token = "0x20000EE")]
public class FindonStart : MonoBehaviour
{
	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AmmoCounter ammo;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject am;

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x8B6F44", Offset = "0x8B6F44", VA = "0x8B6F44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x8B6FB8", Offset = "0x8B6FB8", VA = "0x8B6FB8")]
	public void Back()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x8B6FD4", Offset = "0x8B6FD4", VA = "0x8B6FD4")]
	public FindonStart()
	{
	}
}
[Token(Token = "0x20000EF")]
public class Footstep : MonoBehaviour
{
	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] foot;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource st;

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x8B6FDC", Offset = "0x8B6FDC", VA = "0x8B6FDC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x8B6FE0", Offset = "0x8B6FE0", VA = "0x8B6FE0")]
	private void Update()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x8B6FE4", Offset = "0x8B6FE4", VA = "0x8B6FE4")]
	public void Step()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x8B7018", Offset = "0x8B7018", VA = "0x8B7018")]
	private AudioClip RandomClip()
	{
		return null;
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x8B706C", Offset = "0x8B706C", VA = "0x8B706C")]
	public Footstep()
	{
	}
}
[Token(Token = "0x20000F0")]
public class LoadMenu : MonoBehaviour
{
	[Token(Token = "0x2000272")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740F38", Offset = "0x740F38")]
	private sealed class <Quitt>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000183")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E62")]
			[Address(RVA = "0x921B0C", Offset = "0x921B0C", VA = "0x921B0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000184")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E64")]
			[Address(RVA = "0x921B74", Offset = "0x921B74", VA = "0x921B74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0x9217B4", Offset = "0x9217B4", VA = "0x9217B4")]
		[DebuggerHidden]
		public <Quitt>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0x921A6C", Offset = "0x921A6C", VA = "0x921A6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0x921A70", Offset = "0x921A70", VA = "0x921A70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0x921B14", Offset = "0x921B14", VA = "0x921B14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000273")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740F48", Offset = "0x740F48")]
	private sealed class <StartNewGame>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AsyncOperation <asyncOperation>5__2;

		[Token(Token = "0x17000185")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E68")]
			[Address(RVA = "0x921DE4", Offset = "0x921DE4", VA = "0x921DE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000186")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E6A")]
			[Address(RVA = "0x921E4C", Offset = "0x921E4C", VA = "0x921E4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x9217E0", Offset = "0x9217E0", VA = "0x9217E0")]
		[DebuggerHidden]
		public <StartNewGame>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0x921B7C", Offset = "0x921B7C", VA = "0x921B7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x921B80", Offset = "0x921B80", VA = "0x921B80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0x921DEC", Offset = "0x921DEC", VA = "0x921DEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000274")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740F58", Offset = "0x740F58")]
	private sealed class <Mainmenu>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AsyncOperation <asyncOperation>5__2;

		[Token(Token = "0x17000187")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E6E")]
			[Address(RVA = "0x9219FC", Offset = "0x9219FC", VA = "0x9219FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000188")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E70")]
			[Address(RVA = "0x921A64", Offset = "0x921A64", VA = "0x921A64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x92180C", Offset = "0x92180C", VA = "0x92180C")]
		[DebuggerHidden]
		public <Mainmenu>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0x9218A0", Offset = "0x9218A0", VA = "0x9218A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0x9218A4", Offset = "0x9218A4", VA = "0x9218A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0x921A04", Offset = "0x921A04", VA = "0x921A04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent Paus;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRScreenFade fade;

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x9215A0", Offset = "0x9215A0", VA = "0x9215A0")]
	private void Start()
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x9215A4", Offset = "0x9215A4", VA = "0x9215A4")]
	public void QuitGame()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x921654", Offset = "0x921654", VA = "0x921654")]
	public void StartGame()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x921704", Offset = "0x921704", VA = "0x921704")]
	public void MainM()
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x9215F4", Offset = "0x9215F4", VA = "0x9215F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74A770", Offset = "0x74A770")]
	private IEnumerator Quitt()
	{
		return null;
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x9216A4", Offset = "0x9216A4", VA = "0x9216A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74A7D4", Offset = "0x74A7D4")]
	private IEnumerator StartNewGame()
	{
		return null;
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x921754", Offset = "0x921754", VA = "0x921754")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74A838", Offset = "0x74A838")]
	private IEnumerator Mainmenu()
	{
		return null;
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x921838", Offset = "0x921838", VA = "0x921838")]
	public LoadMenu()
	{
	}
}
[Token(Token = "0x20000F1")]
public class Loockat : MonoBehaviour
{
	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x9253F8", Offset = "0x9253F8", VA = "0x9253F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x9253FC", Offset = "0x9253FC", VA = "0x9253FC")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x9255D4", Offset = "0x9255D4", VA = "0x9255D4")]
	public Loockat()
	{
	}
}
[Token(Token = "0x20000F2")]
public class OculusPlatformEntitlementCheck : MonoBehaviour
{
	[Token(Token = "0x2000275")]
	private struct OculusInitParams
	{
		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int sType;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string email;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string password;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ulong appId;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string uriPrefixOverride;
	}

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x745564", Offset = "0x745564")]
	public bool debugMode;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74559C", Offset = "0x74559C")]
	public bool quitOnFail;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7455D4", Offset = "0x7455D4")]
	private bool standaloneMode;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string appID;

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0xF93A20", Offset = "0xF93A20", VA = "0xF93A20")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0xF93B40", Offset = "0xF93B40", VA = "0xF93B40")]
	private void CheckAppID()
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xF93D48", Offset = "0xF93D48", VA = "0xF93D48")]
	private void CheckScene()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0xF93E80", Offset = "0xF93E80", VA = "0xF93E80")]
	private void CheckCallback(Message msg)
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0xF940DC", Offset = "0xF940DC", VA = "0xF940DC")]
	private void FinishCheck()
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0xF94180", Offset = "0xF94180", VA = "0xF94180")]
	public OculusPlatformEntitlementCheck()
	{
	}
}
[Token(Token = "0x20000F3")]
public class PaintPazl : MonoBehaviour
{
	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool one;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool two;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool thre;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool four;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool five;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent On;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent Tw;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent Th;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent Fo;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent Fi;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent On2;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent Tw2;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent Th2;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEvent Fo2;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UnityEvent Fi2;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public UnityEvent Done;

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x98E7F0", Offset = "0x98E7F0", VA = "0x98E7F0")]
	private void Start()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x98E7F4", Offset = "0x98E7F4", VA = "0x98E7F4")]
	public void One()
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x98E8A0", Offset = "0x98E8A0", VA = "0x98E8A0")]
	public void Two()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x98E94C", Offset = "0x98E94C", VA = "0x98E94C")]
	public void Thre()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x98E9F8", Offset = "0x98E9F8", VA = "0x98E9F8")]
	public void Four()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x98EAA4", Offset = "0x98EAA4", VA = "0x98EAA4")]
	public void Five()
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x98EB60", Offset = "0x98EB60", VA = "0x98EB60")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x98EB64", Offset = "0x98EB64", VA = "0x98EB64")]
	public PaintPazl()
	{
	}
}
[Token(Token = "0x20000F4")]
public class PauseBack : MonoBehaviour
{
	[Token(Token = "0x2000276")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740F68", Offset = "0x740F68")]
	private sealed class <WaithitTime>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PauseBack <>4__this;

		[Token(Token = "0x17000189")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E74")]
			[Address(RVA = "0x98F20C", Offset = "0x98F20C", VA = "0x98F20C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E76")]
			[Address(RVA = "0x98F274", Offset = "0x98F274", VA = "0x98F274", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0x98F064", Offset = "0x98F064", VA = "0x98F064")]
		[DebuggerHidden]
		public <WaithitTime>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x98F158", Offset = "0x98F158", VA = "0x98F158", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x98F15C", Offset = "0x98F15C", VA = "0x98F15C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0x98F214", Offset = "0x98F214", VA = "0x98F214", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool canhmd;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HVRGlobalInputs1 input;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Pause;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject All;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject t0;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject t1;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject t2;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject t3;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject t4;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool a1;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool a2;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool a3;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	public bool a4;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool a5;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UnityEvent Recntr;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public UnityEvent Star;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UnityEvent Star1;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public UnityEvent Bak;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool enab;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	public bool desab;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
	public bool push;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
	public bool Quit;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioClip Break;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int state;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform player;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform HL;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform HR;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject HLg;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject HRg;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform setPlayer;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Transform SL;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform SR;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform Gplayer;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Transform GHL;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Transform GHR;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject Gp;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject Gl;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject Gr;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public bool end;

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x98ECC4", Offset = "0x98ECC4", VA = "0x98ECC4")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x98ECC8", Offset = "0x98ECC8", VA = "0x98ECC8")]
	public void Set()
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x98ECCC", Offset = "0x98ECCC", VA = "0x98ECCC")]
	public void Back()
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x98ECD0", Offset = "0x98ECD0", VA = "0x98ECD0")]
	public void Die()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x98ECD8", Offset = "0x98ECD8", VA = "0x98ECD8")]
	public void HMD()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x98EDE0", Offset = "0x98EDE0", VA = "0x98EDE0")]
	public void Resum()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x98EE74", Offset = "0x98EE74", VA = "0x98EE74")]
	private void Update()
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x98F058", Offset = "0x98F058", VA = "0x98F058")]
	public void En()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x98ED70", Offset = "0x98ED70", VA = "0x98ED70")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74A89C", Offset = "0x74A89C")]
	private IEnumerator WaithitTime()
	{
		return null;
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x98F090", Offset = "0x98F090", VA = "0x98F090")]
	public PauseBack()
	{
	}
}
[Token(Token = "0x20000F5")]
public class Pigs : MonoBehaviour
{
	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int col;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent fuse;

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x98F7F8", Offset = "0x98F7F8", VA = "0x98F7F8")]
	public void Plus()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x98F808", Offset = "0x98F808", VA = "0x98F808")]
	private void Update()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x98F89C", Offset = "0x98F89C", VA = "0x98F89C")]
	public Pigs()
	{
	}
}
[Token(Token = "0x20000F6")]
public class Position : MonoBehaviour
{
	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x9917B4", Offset = "0x9917B4", VA = "0x9917B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x99196C", Offset = "0x99196C", VA = "0x99196C")]
	public Position()
	{
	}
}
[Token(Token = "0x20000F7")]
public class Rotation : MonoBehaviour
{
	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float turnSpeed;

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x993A34", Offset = "0x993A34", VA = "0x993A34")]
	private void Update()
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x993AF8", Offset = "0x993AF8", VA = "0x993AF8")]
	public Rotation()
	{
	}
}
[Token(Token = "0x20000F8")]
public class SetPerent : MonoBehaviour
{
	[Token(Token = "0x2000277")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740F78", Offset = "0x740F78")]
	private sealed class <WaithitTime>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SetPerent <>4__this;

		[Token(Token = "0x1700018B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E7A")]
			[Address(RVA = "0x898D98", Offset = "0x898D98", VA = "0x898D98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E7C")]
			[Address(RVA = "0x898E00", Offset = "0x898E00", VA = "0x898E00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x898930", Offset = "0x898930", VA = "0x898930")]
		[DebuggerHidden]
		public <WaithitTime>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x898BAC", Offset = "0x898BAC", VA = "0x898BAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x898BB0", Offset = "0x898BB0", VA = "0x898BB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x898DA0", Offset = "0x898DA0", VA = "0x898DA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent On;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent On2;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent On1;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent Start;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent Startof;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform player;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform HL;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform HR;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform set;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform set1;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform SL;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform SR;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject child;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool Do;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public HVRRotationTracker track;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public int count;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public bool canstrt;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	public bool end;

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x898760", Offset = "0x898760", VA = "0x898760")]
	public void Set()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x898894", Offset = "0x898894", VA = "0x898894")]
	public void Go()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x8988C0", Offset = "0x8988C0", VA = "0x8988C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74A900", Offset = "0x74A900")]
	private IEnumerator WaithitTime()
	{
		return null;
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x89895C", Offset = "0x89895C", VA = "0x89895C")]
	public void Update()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x898ADC", Offset = "0x898ADC", VA = "0x898ADC")]
	public SetPerent()
	{
	}
}
[Token(Token = "0x20000F9")]
public class StartLogo : MonoBehaviour
{
	[Token(Token = "0x2000278")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740F88", Offset = "0x740F88")]
	private sealed class <Wt1>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700018D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E80")]
			[Address(RVA = "0x8A5E68", Offset = "0x8A5E68", VA = "0x8A5E68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E82")]
			[Address(RVA = "0x8A5ED0", Offset = "0x8A5ED0", VA = "0x8A5ED0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x8A59F4", Offset = "0x8A59F4", VA = "0x8A59F4")]
		[DebuggerHidden]
		public <Wt1>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x8A5DD0", Offset = "0x8A5DD0", VA = "0x8A5DD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x8A5DD4", Offset = "0x8A5DD4", VA = "0x8A5DD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x8A5E70", Offset = "0x8A5E70", VA = "0x8A5E70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000279")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740F98", Offset = "0x740F98")]
	private sealed class <Wt>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StartLogo <>4__this;

		[Token(Token = "0x1700018F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E86")]
			[Address(RVA = "0x8A5FF8", Offset = "0x8A5FF8", VA = "0x8A5FF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000190")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E88")]
			[Address(RVA = "0x8A6060", Offset = "0x8A6060", VA = "0x8A6060", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x8A5A20", Offset = "0x8A5A20", VA = "0x8A5A20")]
		[DebuggerHidden]
		public <Wt>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0x8A5ED8", Offset = "0x8A5ED8", VA = "0x8A5ED8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x8A5EDC", Offset = "0x8A5EDC", VA = "0x8A5EDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0x8A6000", Offset = "0x8A6000", VA = "0x8A6000", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200027A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740FA8", Offset = "0x740FA8")]
	private sealed class <StartNewGame>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AsyncOperation <asyncOperation>5__2;

		[Token(Token = "0x17000191")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E8C")]
			[Address(RVA = "0x8A5D60", Offset = "0x8A5D60", VA = "0x8A5D60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000192")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E8E")]
			[Address(RVA = "0x8A5DC8", Offset = "0x8A5DC8", VA = "0x8A5DC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x8A5AC8", Offset = "0x8A5AC8", VA = "0x8A5AC8")]
		[DebuggerHidden]
		public <StartNewGame>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0x8A5BAC", Offset = "0x8A5BAC", VA = "0x8A5BAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x8A5BB0", Offset = "0x8A5BB0", VA = "0x8A5BB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x8A5D68", Offset = "0x8A5D68", VA = "0x8A5D68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent wa1;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent wa;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent snd;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent strt;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float wait;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool go;

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x8A58E0", Offset = "0x8A58E0", VA = "0x8A58E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x8A5994", Offset = "0x8A5994", VA = "0x8A5994")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74A964", Offset = "0x74A964")]
	private IEnumerator Wt1()
	{
		return null;
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x8A5924", Offset = "0x8A5924", VA = "0x8A5924")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74A9C8", Offset = "0x74A9C8")]
	private IEnumerator Wt()
	{
		return null;
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x8A5A4C", Offset = "0x8A5A4C", VA = "0x8A5A4C")]
	public void Sta()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x8A5A68", Offset = "0x8A5A68", VA = "0x8A5A68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74AA2C", Offset = "0x74AA2C")]
	private IEnumerator StartNewGame()
	{
		return null;
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x8A5AF4", Offset = "0x8A5AF4", VA = "0x8A5AF4")]
	public StartLogo()
	{
	}
}
[Token(Token = "0x20000FA")]
public class Startt : MonoBehaviour
{
	[Token(Token = "0x200027B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740FB8", Offset = "0x740FB8")]
	private sealed class <waitt>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Startt <>4__this;

		[Token(Token = "0x17000193")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E92")]
			[Address(RVA = "0x8A6B14", Offset = "0x8A6B14", VA = "0x8A6B14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000194")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E94")]
			[Address(RVA = "0x8A6B7C", Offset = "0x8A6B7C", VA = "0x8A6B7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x8A658C", Offset = "0x8A658C", VA = "0x8A658C")]
		[DebuggerHidden]
		public <waitt>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0x8A6A60", Offset = "0x8A6A60", VA = "0x8A6A60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0x8A6A64", Offset = "0x8A6A64", VA = "0x8A6A64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0x8A6B1C", Offset = "0x8A6B1C", VA = "0x8A6B1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200027C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740FC8", Offset = "0x740FC8")]
	private sealed class <wait1>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Startt <>4__this;

		[Token(Token = "0x17000195")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E98")]
			[Address(RVA = "0x8A67A8", Offset = "0x8A67A8", VA = "0x8A67A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000196")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E9A")]
			[Address(RVA = "0x8A6810", Offset = "0x8A6810", VA = "0x8A6810", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0x8A65B8", Offset = "0x8A65B8", VA = "0x8A65B8")]
		[DebuggerHidden]
		public <wait1>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0x8A66F4", Offset = "0x8A66F4", VA = "0x8A66F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0x8A66F8", Offset = "0x8A66F8", VA = "0x8A66F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0x8A67B0", Offset = "0x8A67B0", VA = "0x8A67B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200027D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740FD8", Offset = "0x740FD8")]
	private sealed class <wait2>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Startt <>4__this;

		[Token(Token = "0x17000197")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E9E")]
			[Address(RVA = "0x8A68CC", Offset = "0x8A68CC", VA = "0x8A68CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000198")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EA0")]
			[Address(RVA = "0x8A6934", Offset = "0x8A6934", VA = "0x8A6934", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0x8A65E4", Offset = "0x8A65E4", VA = "0x8A65E4")]
		[DebuggerHidden]
		public <wait2>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0x8A6818", Offset = "0x8A6818", VA = "0x8A6818", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0x8A681C", Offset = "0x8A681C", VA = "0x8A681C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0x8A68D4", Offset = "0x8A68D4", VA = "0x8A68D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200027E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740FE8", Offset = "0x740FE8")]
	private sealed class <wait3>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Startt <>4__this;

		[Token(Token = "0x17000199")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EA4")]
			[Address(RVA = "0x8A69F0", Offset = "0x8A69F0", VA = "0x8A69F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EA6")]
			[Address(RVA = "0x8A6A58", Offset = "0x8A6A58", VA = "0x8A6A58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0x8A6610", Offset = "0x8A6610", VA = "0x8A6610")]
		[DebuggerHidden]
		public <wait3>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0x8A693C", Offset = "0x8A693C", VA = "0x8A693C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0x8A6940", Offset = "0x8A6940", VA = "0x8A6940", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0x8A69F8", Offset = "0x8A69F8", VA = "0x8A69F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent Star;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent Star1;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent wai2;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent animend;

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x8A6354", Offset = "0x8A6354", VA = "0x8A6354")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x8A6588", Offset = "0x8A6588", VA = "0x8A6588")]
	private void Update()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x8A63C8", Offset = "0x8A63C8", VA = "0x8A63C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74AA90", Offset = "0x74AA90")]
	private IEnumerator waitt()
	{
		return null;
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x8A6438", Offset = "0x8A6438", VA = "0x8A6438")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74AAF4", Offset = "0x74AAF4")]
	private IEnumerator wait1()
	{
		return null;
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x8A64A8", Offset = "0x8A64A8", VA = "0x8A64A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74AB58", Offset = "0x74AB58")]
	private IEnumerator wait2()
	{
		return null;
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x8A6518", Offset = "0x8A6518", VA = "0x8A6518")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74ABBC", Offset = "0x74ABBC")]
	private IEnumerator wait3()
	{
		return null;
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x8A663C", Offset = "0x8A663C", VA = "0x8A663C")]
	public Startt()
	{
	}
}
[Token(Token = "0x20000FB")]
public class StayInTrigger : MonoBehaviour
{
	[Token(Token = "0x200027F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x740FF8", Offset = "0x740FF8")]
	private sealed class <Move>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StayInTrigger <>4__this;

		[Token(Token = "0x1700019B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EAA")]
			[Address(RVA = "0x8A6DE8", Offset = "0x8A6DE8", VA = "0x8A6DE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EAC")]
			[Address(RVA = "0x8A6E50", Offset = "0x8A6E50", VA = "0x8A6E50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0x8A6C90", Offset = "0x8A6C90", VA = "0x8A6C90")]
		[DebuggerHidden]
		public <Move>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0x8A6D2C", Offset = "0x8A6D2C", VA = "0x8A6D2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x8A6D30", Offset = "0x8A6D30", VA = "0x8A6D30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0x8A6DF0", Offset = "0x8A6DF0", VA = "0x8A6DF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent Ster;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool go;

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x8A6B84", Offset = "0x8A6B84", VA = "0x8A6B84")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x8A6C20", Offset = "0x8A6C20", VA = "0x8A6C20")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74AC20", Offset = "0x74AC20")]
	private IEnumerator Move()
	{
		return null;
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x8A6CBC", Offset = "0x8A6CBC", VA = "0x8A6CBC")]
	public StayInTrigger()
	{
	}
}
[Token(Token = "0x20000FC")]
public class StayTrigger : MonoBehaviour
{
	[Token(Token = "0x2000280")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741008", Offset = "0x741008")]
	private sealed class <Move>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700019D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EB0")]
			[Address(RVA = "0x8A70B4", Offset = "0x8A70B4", VA = "0x8A70B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EB2")]
			[Address(RVA = "0x8A711C", Offset = "0x8A711C", VA = "0x8A711C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0x8A6FE8", Offset = "0x8A6FE8", VA = "0x8A6FE8")]
		[DebuggerHidden]
		public <Move>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0x8A701C", Offset = "0x8A701C", VA = "0x8A701C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0x8A7020", Offset = "0x8A7020", VA = "0x8A7020", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0x8A70BC", Offset = "0x8A70BC", VA = "0x8A70BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject tex;

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x8A6E58", Offset = "0x8A6E58", VA = "0x8A6E58")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x8A6EF0", Offset = "0x8A6EF0", VA = "0x8A6EF0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x8A6F88", Offset = "0x8A6F88", VA = "0x8A6F88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74AC84", Offset = "0x74AC84")]
	private IEnumerator Move()
	{
		return null;
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x8A7014", Offset = "0x8A7014", VA = "0x8A7014")]
	public StayTrigger()
	{
	}
}
[Token(Token = "0x20000FD")]
public class StayTrigger1 : MonoBehaviour
{
	[Token(Token = "0x2000281")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741018", Offset = "0x741018")]
	private sealed class <Move>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700019F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EB6")]
			[Address(RVA = "0x8A7380", Offset = "0x8A7380", VA = "0x8A7380", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EB8")]
			[Address(RVA = "0x8A73E8", Offset = "0x8A73E8", VA = "0x8A73E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x8A72B4", Offset = "0x8A72B4", VA = "0x8A72B4")]
		[DebuggerHidden]
		public <Move>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0x8A72E8", Offset = "0x8A72E8", VA = "0x8A72E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x8A72EC", Offset = "0x8A72EC", VA = "0x8A72EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x8A7388", Offset = "0x8A7388", VA = "0x8A7388", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject tex;

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x8A7124", Offset = "0x8A7124", VA = "0x8A7124")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x8A71BC", Offset = "0x8A71BC", VA = "0x8A71BC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x8A7254", Offset = "0x8A7254", VA = "0x8A7254")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74ACE8", Offset = "0x74ACE8")]
	private IEnumerator Move()
	{
		return null;
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x8A72E0", Offset = "0x8A72E0", VA = "0x8A72E0")]
	public StayTrigger1()
	{
	}
}
[Token(Token = "0x20000FE")]
public class TT : MonoBehaviour
{
	[Token(Token = "0x2000282")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741028", Offset = "0x741028")]
	private sealed class <Wt>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TT <>4__this;

		[Token(Token = "0x170001A1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EBC")]
			[Address(RVA = "0x9A4E48", Offset = "0x9A4E48", VA = "0x9A4E48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EBE")]
			[Address(RVA = "0x9A4EB0", Offset = "0x9A4EB0", VA = "0x9A4EB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x9A450C", Offset = "0x9A450C", VA = "0x9A450C")]
		[DebuggerHidden]
		public <Wt>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x9A4D7C", Offset = "0x9A4D7C", VA = "0x9A4D7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0x9A4D80", Offset = "0x9A4D80", VA = "0x9A4D80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0x9A4E50", Offset = "0x9A4E50", VA = "0x9A4E50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000283")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741038", Offset = "0x741038")]
	private sealed class <Wt1>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TT <>4__this;

		[Token(Token = "0x170001A3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EC2")]
			[Address(RVA = "0x9A48B0", Offset = "0x9A48B0", VA = "0x9A48B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EC4")]
			[Address(RVA = "0x9A4918", Offset = "0x9A4918", VA = "0x9A4918", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0x9A4538", Offset = "0x9A4538", VA = "0x9A4538")]
		[DebuggerHidden]
		public <Wt1>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0x9A4710", Offset = "0x9A4710", VA = "0x9A4710", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0x9A4714", Offset = "0x9A4714", VA = "0x9A4714", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0x9A48B8", Offset = "0x9A48B8", VA = "0x9A48B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000284")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741048", Offset = "0x741048")]
	private sealed class <Wt2>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TT <>4__this;

		[Token(Token = "0x170001A5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EC8")]
			[Address(RVA = "0x9A4A24", Offset = "0x9A4A24", VA = "0x9A4A24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ECA")]
			[Address(RVA = "0x9A4A8C", Offset = "0x9A4A8C", VA = "0x9A4A8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0x9A4564", Offset = "0x9A4564", VA = "0x9A4564")]
		[DebuggerHidden]
		public <Wt2>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0x9A4920", Offset = "0x9A4920", VA = "0x9A4920", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0x9A4924", Offset = "0x9A4924", VA = "0x9A4924", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x9A4A2C", Offset = "0x9A4A2C", VA = "0x9A4A2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000285")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741058", Offset = "0x741058")]
	private sealed class <Wt3>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TT <>4__this;

		[Token(Token = "0x170001A7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ECE")]
			[Address(RVA = "0x9A4B98", Offset = "0x9A4B98", VA = "0x9A4B98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ED0")]
			[Address(RVA = "0x9A4C00", Offset = "0x9A4C00", VA = "0x9A4C00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x9A4590", Offset = "0x9A4590", VA = "0x9A4590")]
		[DebuggerHidden]
		public <Wt3>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0x9A4A94", Offset = "0x9A4A94", VA = "0x9A4A94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0x9A4A98", Offset = "0x9A4A98", VA = "0x9A4A98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0x9A4BA0", Offset = "0x9A4BA0", VA = "0x9A4BA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000286")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741068", Offset = "0x741068")]
	private sealed class <Wt4>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TT <>4__this;

		[Token(Token = "0x170001A9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ED4")]
			[Address(RVA = "0x9A4D0C", Offset = "0x9A4D0C", VA = "0x9A4D0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ED6")]
			[Address(RVA = "0x9A4D74", Offset = "0x9A4D74", VA = "0x9A4D74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x9A45BC", Offset = "0x9A45BC", VA = "0x9A45BC")]
		[DebuggerHidden]
		public <Wt4>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x9A4C08", Offset = "0x9A4C08", VA = "0x9A4C08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0x9A4C0C", Offset = "0x9A4C0C", VA = "0x9A4C0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x9A4D14", Offset = "0x9A4D14", VA = "0x9A4D14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000287")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741078", Offset = "0x741078")]
	private sealed class <WtEnd>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TT <>4__this;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperation <asyncOperation>5__2;

		[Token(Token = "0x170001AB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EDA")]
			[Address(RVA = "0x9A5164", Offset = "0x9A5164", VA = "0x9A5164", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EDC")]
			[Address(RVA = "0x9A51CC", Offset = "0x9A51CC", VA = "0x9A51CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x9A45E8", Offset = "0x9A45E8", VA = "0x9A45E8")]
		[DebuggerHidden]
		public <WtEnd>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0x9A4EB8", Offset = "0x9A4EB8", VA = "0x9A4EB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0x9A4EBC", Offset = "0x9A4EBC", VA = "0x9A4EBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x9A516C", Offset = "0x9A516C", VA = "0x9A516C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000288")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741088", Offset = "0x741088")]
	private sealed class <Wts>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TT <>4__this;

		[Token(Token = "0x170001AD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EE0")]
			[Address(RVA = "0x9A528C", Offset = "0x9A528C", VA = "0x9A528C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EE2")]
			[Address(RVA = "0x9A52F4", Offset = "0x9A52F4", VA = "0x9A52F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0x9A4614", Offset = "0x9A4614", VA = "0x9A4614")]
		[DebuggerHidden]
		public <Wts>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0x9A51D4", Offset = "0x9A51D4", VA = "0x9A51D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0x9A51D8", Offset = "0x9A51D8", VA = "0x9A51D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0x9A5294", Offset = "0x9A5294", VA = "0x9A5294", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRScreenFade fade;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform player;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform HL;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform HR;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform playerP;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent st;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent t1;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent t2;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent t3;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEvent t4;

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x9A4024", Offset = "0x9A4024", VA = "0x9A4024")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x9A40C0", Offset = "0x9A40C0", VA = "0x9A40C0")]
	public void PPos()
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x9A4164", Offset = "0x9A4164", VA = "0x9A4164")]
	public void T1()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x9A4200", Offset = "0x9A4200", VA = "0x9A4200")]
	public void T2()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x9A429C", Offset = "0x9A429C", VA = "0x9A429C")]
	public void T3()
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x9A4338", Offset = "0x9A4338", VA = "0x9A4338")]
	public void T4()
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x9A43D4", Offset = "0x9A43D4", VA = "0x9A43D4")]
	public void End()
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x9A4470", Offset = "0x9A4470", VA = "0x9A4470")]
	public void FIFO()
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x9A449C", Offset = "0x9A449C", VA = "0x9A449C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74AD4C", Offset = "0x74AD4C")]
	private IEnumerator Wt()
	{
		return null;
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x9A4190", Offset = "0x9A4190", VA = "0x9A4190")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74ADB0", Offset = "0x74ADB0")]
	private IEnumerator Wt1()
	{
		return null;
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x9A422C", Offset = "0x9A422C", VA = "0x9A422C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74AE14", Offset = "0x74AE14")]
	private IEnumerator Wt2()
	{
		return null;
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x9A42C8", Offset = "0x9A42C8", VA = "0x9A42C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74AE78", Offset = "0x74AE78")]
	private IEnumerator Wt3()
	{
		return null;
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x9A4364", Offset = "0x9A4364", VA = "0x9A4364")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74AEDC", Offset = "0x74AEDC")]
	private IEnumerator Wt4()
	{
		return null;
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x9A4400", Offset = "0x9A4400", VA = "0x9A4400")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74AF40", Offset = "0x74AF40")]
	private IEnumerator WtEnd()
	{
		return null;
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x9A4050", Offset = "0x9A4050", VA = "0x9A4050")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74AFA4", Offset = "0x74AFA4")]
	private IEnumerator Wts()
	{
		return null;
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x9A4640", Offset = "0x9A4640", VA = "0x9A4640")]
	public TT()
	{
	}
}
[Token(Token = "0x20000FF")]
public class TriggerEventsOnce : MonoBehaviour
{
	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74560C", Offset = "0x74560C")]
	public UnityEvent interactEvent;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool activated;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public UnityEvent OnSaveEvent;

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x9A9B24", Offset = "0x9A9B24", VA = "0x9A9B24")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x9A9BBC", Offset = "0x9A9BBC", VA = "0x9A9BBC")]
	public void LoadState()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x9A9BE4", Offset = "0x9A9BE4", VA = "0x9A9BE4")]
	public void Rebool()
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x9A9BEC", Offset = "0x9A9BEC", VA = "0x9A9BEC")]
	public TriggerEventsOnce()
	{
	}
}
[Token(Token = "0x2000100")]
public class TriggerEventsP : MonoBehaviour
{
	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x745654", Offset = "0x745654")]
	public UnityEvent interactEvent;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool activated;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public UnityEvent OnSaveEvent;

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x9A9BF4", Offset = "0x9A9BF4", VA = "0x9A9BF4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x9A9C90", Offset = "0x9A9C90", VA = "0x9A9C90")]
	public void LoadState()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x9A9CB8", Offset = "0x9A9CB8", VA = "0x9A9CB8")]
	public void Rebool()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x9A9CC0", Offset = "0x9A9CC0", VA = "0x9A9CC0")]
	public TriggerEventsP()
	{
	}
}
[Token(Token = "0x2000101")]
public class playerAnimation : MonoBehaviour
{
	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationClip anim;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationClip anim2;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationClip anim3;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Animation anima;

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0xF12B5C", Offset = "0xF12B5C", VA = "0xF12B5C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0xF12BB4", Offset = "0xF12BB4", VA = "0xF12BB4")]
	private void Update()
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0xF12C34", Offset = "0xF12C34", VA = "0xF12C34")]
	public playerAnimation()
	{
	}
}
namespace VRStandardAssets.Utils
{
	[Token(Token = "0x2000102")]
	public class VRFPSCounter : MonoBehaviour
	{
		[Token(Token = "0x4000650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_DeltaTime;

		[Token(Token = "0x4000651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text m_Text;

		[Token(Token = "0x4000652")]
		private const float k_SmoothingCoef = 0.1f;

		[Token(Token = "0x60004FF")]
		[Address(RVA = "0xF0F0E8", Offset = "0xF0F0E8", VA = "0xF0F0E8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000500")]
		[Address(RVA = "0xF0F140", Offset = "0xF0F140", VA = "0xF0F140")]
		private void Update()
		{
		}

		[Token(Token = "0x6000501")]
		[Address(RVA = "0xF0F270", Offset = "0xF0F270", VA = "0xF0F270")]
		public VRFPSCounter()
		{
		}
	}
}
namespace MLSpace
{
	[Token(Token = "0x2000103")]
	public class CameraScript : MonoBehaviour
	{
		[Token(Token = "0x2000289")]
		private enum Move
		{
			[Token(Token = "0x40013E5")]
			None,
			[Token(Token = "0x40013E6")]
			Forward,
			[Token(Token = "0x40013E7")]
			Backward,
			[Token(Token = "0x40013E8")]
			Left,
			[Token(Token = "0x40013E9")]
			Right
		}

		[Token(Token = "0x4000653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74569C", Offset = "0x74569C")]
		public float speed;

		[Token(Token = "0x4000654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7456D4", Offset = "0x7456D4")]
		public float angularSpeed;

		[Token(Token = "0x4000655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_totalXAngleDeg;

		[Token(Token = "0x4000656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_totalYAngleDeg;

		[Token(Token = "0x4000657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Move m_move;

		[Token(Token = "0x6000502")]
		[Address(RVA = "0x9255DC", Offset = "0x9255DC", VA = "0x9255DC")]
		public void OnBtnForwDown()
		{
		}

		[Token(Token = "0x6000503")]
		[Address(RVA = "0x9255E8", Offset = "0x9255E8", VA = "0x9255E8")]
		public void OnBtnBackDown()
		{
		}

		[Token(Token = "0x6000504")]
		[Address(RVA = "0x9255F4", Offset = "0x9255F4", VA = "0x9255F4")]
		public void OnBtnRightDown()
		{
		}

		[Token(Token = "0x6000505")]
		[Address(RVA = "0x925600", Offset = "0x925600", VA = "0x925600")]
		public void OnBtnLeftDown()
		{
		}

		[Token(Token = "0x6000506")]
		[Address(RVA = "0x92560C", Offset = "0x92560C", VA = "0x92560C")]
		public void BtnStop()
		{
		}

		[Token(Token = "0x6000507")]
		[Address(RVA = "0x925614", Offset = "0x925614", VA = "0x925614")]
		private void Start()
		{
		}

		[Token(Token = "0x6000508")]
		[Address(RVA = "0x9256FC", Offset = "0x9256FC", VA = "0x9256FC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000509")]
		[Address(RVA = "0x9259D8", Offset = "0x9259D8", VA = "0x9259D8")]
		public CameraScript()
		{
		}
	}
	[Token(Token = "0x2000104")]
	public class GameControl : MonoBehaviour
	{
		[Token(Token = "0x4000658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject onMobileOnly;

		[Token(Token = "0x4000659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text infoUI;

		[Token(Token = "0x600050A")]
		[Address(RVA = "0x9259EC", Offset = "0x9259EC", VA = "0x9259EC")]
		private void Start()
		{
		}

		[Token(Token = "0x600050B")]
		[Address(RVA = "0x9259F0", Offset = "0x9259F0", VA = "0x9259F0")]
		private void Update()
		{
		}

		[Token(Token = "0x600050C")]
		[Address(RVA = "0x925A1C", Offset = "0x925A1C", VA = "0x925A1C")]
		private void info()
		{
		}

		[Token(Token = "0x600050D")]
		[Address(RVA = "0x925AC0", Offset = "0x925AC0", VA = "0x925AC0")]
		public GameControl()
		{
		}
	}
	[Token(Token = "0x2000105")]
	public class RotateLight : MonoBehaviour
	{
		[Token(Token = "0x400065A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74570C", Offset = "0x74570C")]
		public GameObject[] m_NightLights;

		[Token(Token = "0x400065B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x745744", Offset = "0x745744")]
		public float rotateSpeed;

		[Token(Token = "0x400065C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74577C", Offset = "0x74577C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x74577C", Offset = "0x74577C")]
		public int timeToLightsOn;

		[Token(Token = "0x400065D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7457D0", Offset = "0x7457D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7457D0", Offset = "0x7457D0")]
		public float timeToLightsOff;

		[Token(Token = "0x400065E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Light m_SunLight;

		[Token(Token = "0x400065F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_rotation;

		[Token(Token = "0x4000660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool m_NightLightsEnabled;

		[Token(Token = "0x4000661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		private bool m_afternoon;

		[Token(Token = "0x4000662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		private bool m_initialized;

		[Token(Token = "0x600050E")]
		[Address(RVA = "0x925AC8", Offset = "0x925AC8", VA = "0x925AC8")]
		public void Initialize()
		{
		}

		[Token(Token = "0x600050F")]
		[Address(RVA = "0x925C84", Offset = "0x925C84", VA = "0x925C84")]
		private void Start()
		{
		}

		[Token(Token = "0x6000510")]
		[Address(RVA = "0x925C88", Offset = "0x925C88", VA = "0x925C88")]
		private void Update()
		{
		}

		[Token(Token = "0x6000511")]
		[Address(RVA = "0x925F70", Offset = "0x925F70", VA = "0x925F70")]
		private void EnableNightLights()
		{
		}

		[Token(Token = "0x6000512")]
		[Address(RVA = "0x926160", Offset = "0x926160", VA = "0x926160")]
		private void DisableNightLights()
		{
		}

		[Token(Token = "0x6000513")]
		[Address(RVA = "0x925F44", Offset = "0x925F44", VA = "0x925F44")]
		private float wrapAngle360(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x6000514")]
		[Address(RVA = "0x92634C", Offset = "0x92634C", VA = "0x92634C")]
		public RotateLight()
		{
		}
	}
	[Token(Token = "0x2000106")]
	public class ToggleText : MonoBehaviour
	{
		[Token(Token = "0x4000663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text m_textUI;

		[Token(Token = "0x4000664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_showInstr;

		[Token(Token = "0x4000665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool m_initialized;

		[Token(Token = "0x6000515")]
		[Address(RVA = "0x926368", Offset = "0x926368", VA = "0x926368")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000516")]
		[Address(RVA = "0x926440", Offset = "0x926440", VA = "0x926440")]
		private void Start()
		{
		}

		[Token(Token = "0x6000517")]
		[Address(RVA = "0x926444", Offset = "0x926444", VA = "0x926444")]
		private void Update()
		{
		}

		[Token(Token = "0x6000518")]
		[Address(RVA = "0x9264F8", Offset = "0x9264F8", VA = "0x9264F8")]
		private void ShowInstr()
		{
		}

		[Token(Token = "0x6000519")]
		[Address(RVA = "0x9265CC", Offset = "0x9265CC", VA = "0x9265CC")]
		private void ShowF1()
		{
		}

		[Token(Token = "0x600051A")]
		[Address(RVA = "0x9266A0", Offset = "0x9266A0", VA = "0x9266A0")]
		public ToggleText()
		{
		}
	}
}
namespace Sigtrap.VrTunnellingPro
{
	[Token(Token = "0x2000107")]
	public class Tunnelling : TunnellingImageBase
	{
		[Token(Token = "0x17000033")]
		protected override CameraEvent _maskCmdEvt
		{
			[Token(Token = "0x600051B")]
			[Address(RVA = "0x89A784", Offset = "0x89A784", VA = "0x89A784", Slot = "9")]
			get
			{
				return default(CameraEvent);
			}
		}

		[Token(Token = "0x600051C")]
		[Address(RVA = "0x89A78C", Offset = "0x89A78C", VA = "0x89A78C")]
		private void OnRenderImage(RenderTexture src, RenderTexture dest)
		{
		}

		[Token(Token = "0x600051D")]
		[Address(RVA = "0x89AC5C", Offset = "0x89AC5C", VA = "0x89AC5C")]
		public Tunnelling()
		{
		}
	}
	[Token(Token = "0x2000108")]
	public abstract class TunnellingBase : MonoBehaviour
	{
		[Token(Token = "0x200028A")]
		public enum BackgroundMode
		{
			[Token(Token = "0x40013EB")]
			COLOR,
			[Token(Token = "0x40013EC")]
			SKYBOX,
			[Token(Token = "0x40013ED")]
			CAGE_COLOR,
			[Token(Token = "0x40013EE")]
			CAGE_SKYBOX,
			[Token(Token = "0x40013EF")]
			CAGE_ONLY,
			[Token(Token = "0x40013F0")]
			BLUR
		}

		[Token(Token = "0x200028B")]
		public enum MaskMode
		{
			[Token(Token = "0x40013F2")]
			OFF,
			[Token(Token = "0x40013F3")]
			MASK,
			[Token(Token = "0x40013F4")]
			WINDOW,
			[Token(Token = "0x40013F5")]
			PORTAL
		}

		[Token(Token = "0x200028C")]
		public enum MSAA
		{
			[Token(Token = "0x40013F7")]
			AUTO,
			[Token(Token = "0x40013F8")]
			OFF,
			[Token(Token = "0x40013F9")]
			X2,
			[Token(Token = "0x40013FA")]
			X4,
			[Token(Token = "0x40013FB")]
			X8
		}

		[Token(Token = "0x4000666")]
		public const string VRTP_VERSION = "1.2.1";

		[Token(Token = "0x4000667")]
		public const int VRTP_VERSION_MAJOR = 1;

		[Token(Token = "0x4000668")]
		public const int VRTP_VERSION_MINOR = 2;

		[Token(Token = "0x4000669")]
		public const int VRTP_VERSION_PATCH = 1;

		[Token(Token = "0x400066A")]
		public const string VRTP_VERSION_BETA = "";

		[Token(Token = "0x400066B")]
		public const string GLOBAL_PROP_FOGCOLOR = "_VRTP_Cage_FogColor";

		[Token(Token = "0x400066C")]
		public const string GLOBAL_PROP_FOGDENSITY = "_VRTP_Cage_FogDensity";

		[Token(Token = "0x400066D")]
		public const string GLOBAL_PROP_FOGPOWER = "_VRTP_Cage_FogPower";

		[Token(Token = "0x400066E")]
		public const string GLOBAL_PROP_FOGBLEND = "_VRTP_Cage_FogBlend";

		[Token(Token = "0x400066F")]
		protected const string PATH_SHADERS = "Hidden/VrTunnellingPro/";

		[Token(Token = "0x4000670")]
		protected const string PATH_MESHES = "Meshes/";

		[Token(Token = "0x4000671")]
		protected const string PATH_IRISMESH = "Iris";

		[Token(Token = "0x4000672")]
		protected const string PROP_OUTER = "_FxOuter";

		[Token(Token = "0x4000673")]
		protected const string PROP_INNER = "_FxInner";

		[Token(Token = "0x4000674")]
		protected const string PROP_COLOR = "_Color";

		[Token(Token = "0x4000675")]
		protected const string PROP_SKYBOX = "_Skybox";

		[Token(Token = "0x4000676")]
		protected const string PROP_EYEPRJ = "_EyeProjection";

		[Token(Token = "0x4000677")]
		protected const string PROP_EYEMAT = "_EyeToWorld";

		[Token(Token = "0x4000678")]
		protected const string KEYWORD_BKG = "TUNNEL_BKG";

		[Token(Token = "0x4000679")]
		protected const string KEYWORD_SKYBOX = "TUNNEL_SKYBOX";

		[Token(Token = "0x400067A")]
		protected const string KEYWORD_OVERLAY = "TUNNEL_OVERLAY";

		[Token(Token = "0x400067B")]
		public const float FEATHER_MAX = 0.5f;

		[Token(Token = "0x400067C")]
		public const float MOTION_STRENGTH_MAX = 2f;

		[Token(Token = "0x400067D")]
		public const float COUNTER_STRENGTH_MAX = 2f;

		[Token(Token = "0x400067E")]
		public const int FPSDIV_MAX = 60;

		[Token(Token = "0x400067F")]
		private const float COVERAGE_MIN = 0.65f;

		[Token(Token = "0x4000680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected int _propFxInner;

		[Token(Token = "0x4000681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected int _propFxOuter;

		[Token(Token = "0x4000682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _propEyeProjection;

		[Token(Token = "0x4000683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int _propEyeToWorld;

		[Token(Token = "0x4000684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected int _globPropFogColor;

		[Token(Token = "0x4000685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected int _globPropFogDensity;

		[Token(Token = "0x4000686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected int _globPropFogPower;

		[Token(Token = "0x4000687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected int _globPropFogBlend;

		[Token(Token = "0x4000688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Matrix4x4[] _eyeToWorld;

		[Token(Token = "0x4000689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Matrix4x4[] _eyeProjection;

		[Token(Token = "0x400068A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x745824", Offset = "0x745824")]
		public Transform motionTarget;

		[Token(Token = "0x400068B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74585C", Offset = "0x74585C")]
		public Color effectColor;

		[Token(Token = "0x400068C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x745894", Offset = "0x745894")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x745894", Offset = "0x745894")]
		public float effectCoverage;

		[Token(Token = "0x400068D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7458E8", Offset = "0x7458E8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7458E8", Offset = "0x7458E8")]
		public float effectFeather;

		[Token(Token = "0x400068E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Cubemap effectSkybox;

		[Token(Token = "0x400068F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool applyColorToBackground;

		[Token(Token = "0x4000690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74593C", Offset = "0x74593C")]
		public bool useAngularVelocity;

		[Token(Token = "0x4000691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x745974", Offset = "0x745974")]
		public float angularVelocityStrength;

		[Token(Token = "0x4000692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float angularVelocityMin;

		[Token(Token = "0x4000693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float angularVelocityMax;

		[Token(Token = "0x4000694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float angularVelocitySmoothing;

		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74598C", Offset = "0x74598C")]
		public bool useAcceleration;

		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7459C4", Offset = "0x7459C4")]
		public float accelerationStrength;

		[Token(Token = "0x4000697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float accelerationMin;

		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float accelerationMax;

		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float accelerationSmoothing;

		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7459DC", Offset = "0x7459DC")]
		public bool useVelocity;

		[Token(Token = "0x400069B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x745A14", Offset = "0x745A14")]
		public float velocityStrength;

		[Token(Token = "0x400069C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float velocityMin;

		[Token(Token = "0x400069D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float velocityMax;

		[Token(Token = "0x400069E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float velocitySmoothing;

		[Token(Token = "0x400069F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x745A2C", Offset = "0x745A2C")]
		public Transform motionEffectTarget;

		[Token(Token = "0x40006A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x745A64", Offset = "0x745A64")]
		public bool useCounterMotion;

		[Token(Token = "0x40006A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x745A9C", Offset = "0x745A9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x745A9C", Offset = "0x745A9C")]
		public float counterRotationStrength;

		[Token(Token = "0x40006A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x745AF0", Offset = "0x745AF0")]
		public Vector3 counterRotationPerAxis;

		[Token(Token = "0x40006A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x745B28", Offset = "0x745B28")]
		public bool useArtificialTilt;

		[Token(Token = "0x40006A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x745B60", Offset = "0x745B60")]
		public float tiltStrength;

		[Token(Token = "0x40006A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x745B98", Offset = "0x745B98")]
		public Vector2 tiltMaxAngles;

		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x745BD0", Offset = "0x745BD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x745BD0", Offset = "0x745BD0")]
		public float tiltSmoothTime;

		[Token(Token = "0x40006A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x745C24", Offset = "0x745C24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x745C24", Offset = "0x745C24")]
		public int framerateDivision;

		[Token(Token = "0x40006A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public bool divideTranslation;

		[Token(Token = "0x40006A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
		public bool divideRotation;

		[Token(Token = "0x40006AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Quaternion _lastRot;

		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Vector3 _lastFwd;

		[Token(Token = "0x40006AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private Vector3 _lastPos;

		[Token(Token = "0x40006AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float _lastSpeed;

		[Token(Token = "0x40006AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private Vector3 _lastVel;

		[Token(Token = "0x40006AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected Quaternion _cmRot;

		[Token(Token = "0x40006B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float _avSmoothed;

		[Token(Token = "0x40006B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private float _avSlew;

		[Token(Token = "0x40006B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float _speedSmoothed;

		[Token(Token = "0x40006B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private float _speedSlew;

		[Token(Token = "0x40006B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private float _accelSmoothed;

		[Token(Token = "0x40006B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private float _accelSlew;

		[Token(Token = "0x40006B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Transform _prevMotionEffectTarget;

		[Token(Token = "0x40006B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private bool _prevUseTilt;

		[Token(Token = "0x40006B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private Vector3 _tiltAccelSmoothed;

		[Token(Token = "0x40006B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Vector3 _tiltAccelSlew;

		[Token(Token = "0x40006BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private Angle3 _tiltInit;

		[Token(Token = "0x40006BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private int _lastFpsDivision;

		[Token(Token = "0x40006BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private Vector3 _mfxTgtLocalPosInit;

		[Token(Token = "0x40006BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private Quaternion _mfxTgtLocalRotInit;

		[Token(Token = "0x40006BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		protected Camera _cam;

		[Token(Token = "0x40006BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		protected bool _hasDrawnThisFrame;

		[Token(Token = "0x40006C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private Vector3 _fpsPosition;

		[Token(Token = "0x40006C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private Quaternion _fpsRotation;

		[Token(Token = "0x17000034")]
		public bool usingMotionEffectTarget
		{
			[Token(Token = "0x600051E")]
			[Address(RVA = "0x89ADDC", Offset = "0x89ADDC", VA = "0x89ADDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600051F")]
		[Address(RVA = "0x89ADFC", Offset = "0x89ADFC", VA = "0x89ADFC", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000520")]
		[Address(RVA = "0x89AF14", Offset = "0x89AF14", VA = "0x89AF14", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000521")]
		[Address(RVA = "0x89AF84", Offset = "0x89AF84", VA = "0x89AF84")]
		protected void ApplyPresetBase(TunnellingPresetBase p)
		{
		}

		[Token(Token = "0x6000522")]
		[Address(RVA = "0x89B38C", Offset = "0x89B38C", VA = "0x89B38C")]
		protected void FillMaskBuffer(CommandBuffer cb, List<Renderer> rs, Material m)
		{
		}

		[Token(Token = "0x6000523")]
		[Address(RVA = "0x89AF18", Offset = "0x89AF18", VA = "0x89AF18")]
		protected void ResetMotion()
		{
		}

		[Token(Token = "0x6000524")]
		[Address(RVA = "0x89B530", Offset = "0x89B530", VA = "0x89B530", Slot = "6")]
		public virtual void ResetCounterMotion()
		{
		}

		[Token(Token = "0x6000525")]
		[Address(RVA = "0x89B5C4", Offset = "0x89B5C4", VA = "0x89B5C4")]
		private float RemapRadius(float radius)
		{
			return default(float);
		}

		[Token(Token = "0x6000526")]
		[Address(RVA = "0x89B640", Offset = "0x89B640", VA = "0x89B640")]
		protected float CalculateMotion(float dT)
		{
			return default(float);
		}

		[Token(Token = "0x6000527")]
		[Address(RVA = "0x89C174", Offset = "0x89C174", VA = "0x89C174")]
		public static Vector3 SmoothDampAngle(Vector3 current, Vector3 target, ref Vector3 vel, float smoothTime, float maxSpeed, float dT)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000528")]
		[Address(RVA = "0x89C2C4", Offset = "0x89C2C4", VA = "0x89C2C4", Slot = "7")]
		protected virtual void UpdateCounterMotion(Vector3 deltaPos, Quaternion deltaRot)
		{
		}

		[Token(Token = "0x6000529")]
		[Address(RVA = "0x89C3D0", Offset = "0x89C3D0", VA = "0x89C3D0")]
		protected Quaternion GetCounterRotationDelta(Quaternion deltaRot)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600052A")]
		[Address(RVA = "0x89C4FC", Offset = "0x89C4FC", VA = "0x89C4FC")]
		protected void UpdateEyeMatrices()
		{
		}

		[Token(Token = "0x600052B")]
		[Address(RVA = "0x89CA74", Offset = "0x89CA74", VA = "0x89CA74", Slot = "8")]
		protected virtual void CorrectEyeMatrices(Matrix4x4[] eyePrj, Matrix4x4[] eyeToWorld)
		{
		}

		[Token(Token = "0x600052C")]
		[Address(RVA = "0x89CA78", Offset = "0x89CA78", VA = "0x89CA78")]
		protected void ApplyEyeMatrices(Material m)
		{
		}

		[Token(Token = "0x600052D")]
		[Address(RVA = "0x89CAC4", Offset = "0x89CAC4", VA = "0x89CAC4")]
		protected TunnellingBase()
		{
		}
	}
	[Token(Token = "0x2000109")]
	public struct Angle
	{
		[Token(Token = "0x200028D")]
		public enum AngleType
		{
			[Token(Token = "0x40013FD")]
			ANGLE,
			[Token(Token = "0x40013FE")]
			ACUTE,
			[Token(Token = "0x40013FF")]
			REFLEX
		}

		[Token(Token = "0x40006C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _angle;

		[Token(Token = "0x17000035")]
		public float angle
		{
			[Token(Token = "0x600052E")]
			[Address(RVA = "0x62CDD0", Offset = "0x62CDD0", VA = "0x62CDD0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000036")]
		public float acute
		{
			[Token(Token = "0x600052F")]
			[Address(RVA = "0x62CDD8", Offset = "0x62CDD8", VA = "0x62CDD8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000037")]
		public float reflex
		{
			[Token(Token = "0x6000530")]
			[Address(RVA = "0x62CDE4", Offset = "0x62CDE4", VA = "0x62CDE4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000531")]
		[Address(RVA = "0x62CDF0", Offset = "0x62CDF0", VA = "0x62CDF0")]
		public Angle(float a)
		{
		}

		[Token(Token = "0x6000532")]
		[Address(RVA = "0x62CE18", Offset = "0x62CE18", VA = "0x62CE18")]
		public Angle(Angle a)
		{
		}

		[Token(Token = "0x6000533")]
		[Address(RVA = "0x62CE40", Offset = "0x62CE40", VA = "0x62CE40")]
		public float ToFloat(AngleType type)
		{
			return default(float);
		}

		[Token(Token = "0x6000534")]
		[Address(RVA = "0x8991FC", Offset = "0x8991FC", VA = "0x8991FC")]
		public static float ToAngle(float a, AngleType type)
		{
			return default(float);
		}

		[Token(Token = "0x6000535")]
		[Address(RVA = "0x62CE4C", Offset = "0x62CE4C", VA = "0x62CE4C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000536")]
		[Address(RVA = "0x8993B0", Offset = "0x8993B0", VA = "0x8993B0")]
		public static bool operator <(Angle a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000537")]
		[Address(RVA = "0x8993BC", Offset = "0x8993BC", VA = "0x8993BC")]
		public static bool operator >(Angle a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000538")]
		[Address(RVA = "0x8993C8", Offset = "0x8993C8", VA = "0x8993C8")]
		public static bool operator <=(Angle a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000539")]
		[Address(RVA = "0x8993D4", Offset = "0x8993D4", VA = "0x8993D4")]
		public static bool operator >=(Angle a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x600053A")]
		[Address(RVA = "0x8993E0", Offset = "0x8993E0", VA = "0x8993E0")]
		public static Angle operator +(Angle a, Angle b)
		{
			return default(Angle);
		}

		[Token(Token = "0x600053B")]
		[Address(RVA = "0x8993EC", Offset = "0x8993EC", VA = "0x8993EC")]
		public static Angle operator -(Angle a, Angle b)
		{
			return default(Angle);
		}

		[Token(Token = "0x600053C")]
		[Address(RVA = "0x8993F8", Offset = "0x8993F8", VA = "0x8993F8")]
		public static bool operator ==(Angle a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x600053D")]
		[Address(RVA = "0x899404", Offset = "0x899404", VA = "0x899404")]
		public static bool operator !=(Angle a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x600053E")]
		[Address(RVA = "0x62CE54", Offset = "0x62CE54", VA = "0x62CE54", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600053F")]
		[Address(RVA = "0x62CE5C", Offset = "0x62CE5C", VA = "0x62CE5C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000540")]
		[Address(RVA = "0x8994D4", Offset = "0x8994D4", VA = "0x8994D4")]
		public static bool operator <(Angle a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000541")]
		[Address(RVA = "0x899504", Offset = "0x899504", VA = "0x899504")]
		public static bool operator >(Angle a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000542")]
		[Address(RVA = "0x899534", Offset = "0x899534", VA = "0x899534")]
		public static bool operator <=(Angle a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000543")]
		[Address(RVA = "0x899564", Offset = "0x899564", VA = "0x899564")]
		public static bool operator >=(Angle a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000544")]
		[Address(RVA = "0x899594", Offset = "0x899594", VA = "0x899594")]
		public static Angle operator +(Angle a, float b)
		{
			return default(Angle);
		}

		[Token(Token = "0x6000545")]
		[Address(RVA = "0x8995C4", Offset = "0x8995C4", VA = "0x8995C4")]
		public static Angle operator -(Angle a, float b)
		{
			return default(Angle);
		}

		[Token(Token = "0x6000546")]
		[Address(RVA = "0x8995F4", Offset = "0x8995F4", VA = "0x8995F4")]
		public static Angle operator *(Angle a, float b)
		{
			return default(Angle);
		}

		[Token(Token = "0x6000547")]
		[Address(RVA = "0x899600", Offset = "0x899600", VA = "0x899600")]
		public static Angle operator /(Angle a, float b)
		{
			return default(Angle);
		}

		[Token(Token = "0x6000548")]
		[Address(RVA = "0x89960C", Offset = "0x89960C", VA = "0x89960C")]
		public static bool operator <(float a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000549")]
		[Address(RVA = "0x899620", Offset = "0x899620", VA = "0x899620")]
		public static bool operator >(float a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x600054A")]
		[Address(RVA = "0x899634", Offset = "0x899634", VA = "0x899634")]
		public static bool operator <=(float a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x600054B")]
		[Address(RVA = "0x899648", Offset = "0x899648", VA = "0x899648")]
		public static bool operator >=(float a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x600054C")]
		[Address(RVA = "0x89965C", Offset = "0x89965C", VA = "0x89965C")]
		public static Angle operator +(float a, Angle b)
		{
			return default(Angle);
		}

		[Token(Token = "0x600054D")]
		[Address(RVA = "0x899688", Offset = "0x899688", VA = "0x899688")]
		public static Angle operator -(float a, Angle b)
		{
			return default(Angle);
		}

		[Token(Token = "0x600054E")]
		[Address(RVA = "0x8996B4", Offset = "0x8996B4", VA = "0x8996B4")]
		public static implicit operator Angle(float f)
		{
			return default(Angle);
		}
	}
	[Token(Token = "0x200010A")]
	public struct Angle3
	{
		[Token(Token = "0x40006C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Angle x;

		[Token(Token = "0x40006C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Angle y;

		[Token(Token = "0x40006C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Angle z;

		[Token(Token = "0x17000038")]
		public Vector3 eulerAngles
		{
			[Token(Token = "0x600054F")]
			[Address(RVA = "0x62CE68", Offset = "0x62CE68", VA = "0x62CE68")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000039")]
		public Vector3 eulerAcute
		{
			[Token(Token = "0x6000550")]
			[Address(RVA = "0x62CEA4", Offset = "0x62CEA4", VA = "0x62CEA4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700003A")]
		public Vector3 eulerReflex
		{
			[Token(Token = "0x6000551")]
			[Address(RVA = "0x62CEAC", Offset = "0x62CEAC", VA = "0x62CEAC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700003B")]
		public Angle angle
		{
			[Token(Token = "0x6000552")]
			[Address(RVA = "0x62CEB4", Offset = "0x62CEB4", VA = "0x62CEB4")]
			get
			{
				return default(Angle);
			}
		}

		[Token(Token = "0x1700003C")]
		public Vector3 axis
		{
			[Token(Token = "0x6000553")]
			[Address(RVA = "0x62CEEC", Offset = "0x62CEEC", VA = "0x62CEEC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000554")]
		[Address(RVA = "0x62CF28", Offset = "0x62CF28", VA = "0x62CF28")]
		public Angle3(float x, float y, float z)
		{
		}

		[Token(Token = "0x6000555")]
		[Address(RVA = "0x62CF30", Offset = "0x62CF30", VA = "0x62CF30")]
		public Angle3(Angle x, Angle y, Angle z)
		{
		}

		[Token(Token = "0x6000556")]
		[Address(RVA = "0x62CF38", Offset = "0x62CF38", VA = "0x62CF38")]
		public Angle3(Vector3 euler)
		{
		}

		[Token(Token = "0x6000557")]
		[Address(RVA = "0x62CF40", Offset = "0x62CF40", VA = "0x62CF40")]
		public Angle3(Quaternion rotation)
		{
		}

		[Token(Token = "0x6000558")]
		[Address(RVA = "0x62CF48", Offset = "0x62CF48", VA = "0x62CF48")]
		public void ToAxisAngle(out Vector3 axis, out Angle angle)
		{
		}

		[Token(Token = "0x6000559")]
		[Address(RVA = "0x62CF50", Offset = "0x62CF50", VA = "0x62CF50")]
		public Vector3 ToEuler(Angle.AngleType type)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600055A")]
		[Address(RVA = "0x62CF58", Offset = "0x62CF58", VA = "0x62CF58", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600055B")]
		[Address(RVA = "0x899B54", Offset = "0x899B54", VA = "0x899B54")]
		public static Angle3 operator +(Angle3 a, Angle3 b)
		{
			return default(Angle3);
		}

		[Token(Token = "0x600055C")]
		[Address(RVA = "0x899BE4", Offset = "0x899BE4", VA = "0x899BE4")]
		public static Angle3 operator -(Angle3 a, Angle3 b)
		{
			return default(Angle3);
		}

		[Token(Token = "0x600055D")]
		[Address(RVA = "0x899C74", Offset = "0x899C74", VA = "0x899C74")]
		public static Angle3 operator *(Angle3 a, float b)
		{
			return default(Angle3);
		}

		[Token(Token = "0x600055E")]
		[Address(RVA = "0x899CF8", Offset = "0x899CF8", VA = "0x899CF8")]
		public static bool operator ==(Angle3 a, Angle3 b)
		{
			return default(bool);
		}

		[Token(Token = "0x600055F")]
		[Address(RVA = "0x899D1C", Offset = "0x899D1C", VA = "0x899D1C")]
		public static bool operator !=(Angle3 a, Angle3 b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000560")]
		[Address(RVA = "0x62CF60", Offset = "0x62CF60", VA = "0x62CF60", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000561")]
		[Address(RVA = "0x62CF68", Offset = "0x62CF68", VA = "0x62CF68", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000562")]
		[Address(RVA = "0x899E78", Offset = "0x899E78", VA = "0x899E78")]
		public static implicit operator Angle3(Vector3 v)
		{
			return default(Angle3);
		}
	}
	[Token(Token = "0x200010B")]
	public abstract class TunnellingImageBase : TunnellingBase
	{
		[Token(Token = "0x200028E")]
		public enum BlurKernel
		{
			[Token(Token = "0x4001401")]
			FIVE,
			[Token(Token = "0x4001402")]
			NINE,
			[Token(Token = "0x4001403")]
			THIRTEEN
		}

		[Token(Token = "0x200028F")]
		public enum CounterVelocityMode
		{
			[Token(Token = "0x4001405")]
			OFF,
			[Token(Token = "0x4001406")]
			SHADER,
			[Token(Token = "0x4001407")]
			REAL
		}

		[Token(Token = "0x40006C6")]
		private const string KEYWORD_MASK = "TUNNEL_MASK";

		[Token(Token = "0x40006C7")]
		private const string KEYWORD_CONSTANT = "TUNNEL_CONSTANT";

		[Token(Token = "0x40006C8")]
		private const string KEYWORD_INVERT = "TUNNEL_INVERT_MASK";

		[Token(Token = "0x40006C9")]
		private const string KEYWORD_BLUR = "TUNNEL_BLUR";

		[Token(Token = "0x40006CA")]
		private const string PATH_TUNNELSHADER = "Tunnelling";

		[Token(Token = "0x40006CB")]
		private const string PATH_MASKSHADER = "Mask";

		[Token(Token = "0x40006CC")]
		private const string PATH_WINDOWSHADER = "Window";

		[Token(Token = "0x40006CD")]
		private const string PATH_COPYSHADER = "BlitA";

		[Token(Token = "0x40006CE")]
		private const string PATH_BLURSHADER = "SeparableBlur";

		[Token(Token = "0x40006CF")]
		private const string PATH_IRISSHADER = "TunnellingVertexZ";

		[Token(Token = "0x40006D0")]
		private const string PATH_SKYSPHERESHADER = "Skysphere";

		[Token(Token = "0x40006D1")]
		private const string PATH_SKYSPHEREMESH = "Skysphere";

		[Token(Token = "0x40006D2")]
		private const string PROP_FEATHER = "_Feather";

		[Token(Token = "0x40006D3")]
		private const string PROP_BKGRT = "_BkgTex";

		[Token(Token = "0x40006D4")]
		private const string PROP_MASKRT = "_MaskTex";

		[Token(Token = "0x40006D5")]
		private const string PROP_BLUR = "_Blur";

		[Token(Token = "0x40006D6")]
		private const string PROP_OVERLAY = "_Overlay";

		[Token(Token = "0x40006D7")]
		private const string PROP_BLUR_OFFSETS = "_Offsets";

		[Token(Token = "0x40006D8")]
		private const float BLUR_OFFSET_1 = 1.3333334f;

		[Token(Token = "0x40006D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float[] BLUR_OFFSETS_9;

		[Token(Token = "0x40006DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly float[] BLUR_OFFSETS_13;

		[Token(Token = "0x40006DB")]
		public const string GLOBAL_PROP_WORLD2CAGE = "_VRTP_WorldToCage";

		[Token(Token = "0x40006DC")]
		public const string GLOBAL_PROP_WORLD2CAGE_NORMAL = "_VRTP_WorldToCageNormal";

		[Token(Token = "0x40006DD")]
		public const string GLOBAL_PROP_CAGEPOS = "_VRTP_CagePos";

		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x745C7C", Offset = "0x745C7C")]
		private static TunnellingImageBase <instance>k__BackingField;

		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x745C8C", Offset = "0x745C8C")]
		public BackgroundMode backgroundMode;

		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x745CC4", Offset = "0x745CC4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x745CC4", Offset = "0x745CC4")]
		public float effectOverlay;

		[Token(Token = "0x40006E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x745D18", Offset = "0x745D18")]
		private GameObject _cageParent;

		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x745D64", Offset = "0x745D64")]
		public int cageDownsample;

		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		public MSAA cageAntiAliasing;

		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public bool cageUpdateEveryFrame;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x745D7C", Offset = "0x745D7C")]
		public float cageFogDensity;

		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x745D9C", Offset = "0x745D9C")]
		public float cageFogPower;

		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x745DB4", Offset = "0x745DB4")]
		public float cageFogBlend;

		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public MaskMode maskMode;

		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x745DCC", Offset = "0x745DCC")]
		public int blurDownsample;

		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x745DE4", Offset = "0x745DE4")]
		public float blurDistance;

		[Token(Token = "0x40006EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x745DFC", Offset = "0x745DFC")]
		public int blurPasses;

		[Token(Token = "0x40006EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public BlurKernel blurSamples;

		[Token(Token = "0x40006ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x745E14", Offset = "0x745E14")]
		public bool irisZRejection;

		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public CounterVelocityMode counterVelocityMode;

		[Token(Token = "0x40006EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x745E4C", Offset = "0x745E4C")]
		public float counterVelocityResetDistance;

		[Token(Token = "0x40006F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x745E84", Offset = "0x745E84")]
		public float counterVelocityResetTime;

		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x745EBC", Offset = "0x745EBC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x745EBC", Offset = "0x745EBC")]
		public float counterVelocityStrength;

		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x745F10", Offset = "0x745F10")]
		public Vector3 counterVelocityPerAxis;

		[Token(Token = "0x40006F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private CommandBuffer _maskCmd;

		[Token(Token = "0x40006F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private Material _matTunnel;

		[Token(Token = "0x40006F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private Material _matMask;

		[Token(Token = "0x40006F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private Material _matWindow;

		[Token(Token = "0x40006F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private Material _matCopyAlpha;

		[Token(Token = "0x40006F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private Material _matBlur;

		[Token(Token = "0x40006F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private Material _matSkysphere;

		[Token(Token = "0x40006FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private Mesh _meshSkysphere;

		[Token(Token = "0x40006FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private MeshRenderer[] _cageMrs;

		[Token(Token = "0x40006FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private List<MeshFilter> _cageMfs;

		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private List<Renderer> _maskObjects;

		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private RenderTexture _cageRt;

		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		private RenderTexture _maskRt;

		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private RenderTexture _blurRt0;

		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private RenderTexture _blurRt1;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private int _rtX;

		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		private int _rtY;

		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private int _rtA;

		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private CommandBuffer _irisCmd;

		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private Material _matIris;

		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private Mesh _meshIris;

		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private Vector4[] _blurOffsets;

		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private MaskMode _lastMaskMode;

		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
		private MSAA _lastCageMsaa;

		[Token(Token = "0x400070B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private bool _camHasMaskBuffer;

		[Token(Token = "0x400070C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
		private int _lastCageDownsample;

		[Token(Token = "0x400070D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private int _lastBlurDownsample;

		[Token(Token = "0x400070E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		private float _lastBlurRadius;

		[Token(Token = "0x400070F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private BlurKernel _lastBlurKernel;

		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
		private bool _wasDrawingIrisEarly;

		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E5")]
		private bool _camHasIrisBuffer;

		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private CounterVelocityMode _lastCvMode;

		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
		private Vector3 _cmPos;

		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		private Vector3 _cageInitialPosLocal;

		[Token(Token = "0x4000715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
		private float _timeToResetCounterVelocity;

		[Token(Token = "0x4000716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		private int _propColor;

		[Token(Token = "0x4000717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
		private int _propBkgRt;

		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		private int _propMaskRt;

		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
		private int _propSkybox;

		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private int _propOverlay;

		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
		private int _propBlur;

		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		private int _propBlurOffsets;

		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
		private int _globPropWorld2Cage;

		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		private int _globPropWorld2CageNormal;

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		private int _globPropCagePos;

		[Token(Token = "0x1700003D")]
		public static TunnellingImageBase instance
		{
			[Token(Token = "0x6000563")]
			[Address(RVA = "0x89CC14", Offset = "0x89CC14", VA = "0x89CC14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74B008", Offset = "0x74B008")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000564")]
			[Address(RVA = "0x89CC7C", Offset = "0x89CC7C", VA = "0x89CC7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74B018", Offset = "0x74B018")]
			private set
			{
			}
		}

		[Token(Token = "0x1700003E")]
		public bool usingMask
		{
			[Token(Token = "0x6000565")]
			[Address(RVA = "0x89CCE8", Offset = "0x89CCE8", VA = "0x89CCE8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700003F")]
		public bool usingCage
		{
			[Token(Token = "0x6000566")]
			[Address(RVA = "0x89CCF8", Offset = "0x89CCF8", VA = "0x89CCF8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000040")]
		private bool _usingCageRt
		{
			[Token(Token = "0x6000567")]
			[Address(RVA = "0x89CD1C", Offset = "0x89CD1C", VA = "0x89CD1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000041")]
		private bool _canDrawIris
		{
			[Token(Token = "0x6000568")]
			[Address(RVA = "0x89CD30", Offset = "0x89CD30", VA = "0x89CD30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000042")]
		private bool _drawIris
		{
			[Token(Token = "0x6000569")]
			[Address(RVA = "0x89CD64", Offset = "0x89CD64", VA = "0x89CD64")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000043")]
		protected abstract CameraEvent _maskCmdEvt
		{
			[Token(Token = "0x600056A")]
			get;
		}

		[Token(Token = "0x600056B")]
		[Address(RVA = "0x89CDA0", Offset = "0x89CDA0", VA = "0x89CDA0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600056C")]
		[Address(RVA = "0x89D5A8", Offset = "0x89D5A8", VA = "0x89D5A8", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600056D")]
		[Address(RVA = "0x89D90C", Offset = "0x89D90C", VA = "0x89D90C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600056E")]
		[Address(RVA = "0x89D990", Offset = "0x89D990", VA = "0x89D990")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600056F")]
		[Address(RVA = "0x89DB9C", Offset = "0x89DB9C", VA = "0x89DB9C")]
		private void ReleaseRT(ref RenderTexture rt)
		{
		}

		[Token(Token = "0x6000570")]
		[Address(RVA = "0x89DC2C", Offset = "0x89DC2C", VA = "0x89DC2C")]
		public void AddObjectToMask(Renderer r, bool includeChildren = false)
		{
		}

		[Token(Token = "0x6000571")]
		[Address(RVA = "0x89DEF0", Offset = "0x89DEF0", VA = "0x89DEF0")]
		public void RemoveObjectFromMask(Renderer r, bool includeChildren = false)
		{
		}

		[Token(Token = "0x6000572")]
		[Address(RVA = "0x89D638", Offset = "0x89D638", VA = "0x89D638")]
		public void UpdateCage()
		{
		}

		[Token(Token = "0x6000573")]
		[Address(RVA = "0x89DFE0", Offset = "0x89DFE0", VA = "0x89DFE0", Slot = "6")]
		public override void ResetCounterMotion()
		{
		}

		[Token(Token = "0x6000574")]
		[Address(RVA = "0x89A57C", Offset = "0x89A57C", VA = "0x89A57C")]
		public void ApplyPreset(TunnellingPreset p)
		{
		}

		[Token(Token = "0x6000575")]
		[Address(RVA = "0x89E308", Offset = "0x89E308", VA = "0x89E308")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000576")]
		[Address(RVA = "0x89E9A0", Offset = "0x89E9A0", VA = "0x89E9A0")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6000577")]
		[Address(RVA = "0x89A790", Offset = "0x89A790", VA = "0x89A790")]
		protected void Draw(RenderTexture src, RenderTexture dest)
		{
		}

		[Token(Token = "0x6000578")]
		[Address(RVA = "0x89F1B8", Offset = "0x89F1B8", VA = "0x89F1B8", Slot = "8")]
		protected override void CorrectEyeMatrices(Matrix4x4[] eyePrj, Matrix4x4[] eyeToWorld)
		{
		}

		[Token(Token = "0x6000579")]
		[Address(RVA = "0x89F238", Offset = "0x89F238", VA = "0x89F238", Slot = "7")]
		protected override void UpdateCounterMotion(Vector3 deltaPos, Quaternion deltaRot)
		{
		}

		[Token(Token = "0x600057A")]
		[Address(RVA = "0x89D308", Offset = "0x89D308", VA = "0x89D308")]
		private void UpdateKeywords()
		{
		}

		[Token(Token = "0x600057B")]
		[Address(RVA = "0x89E6BC", Offset = "0x89E6BC", VA = "0x89E6BC")]
		private void UpdateBlurKernel()
		{
		}

		[Token(Token = "0x600057C")]
		[Address(RVA = "0x89F534", Offset = "0x89F534", VA = "0x89F534")]
		private int GetMsaa(MSAA m, int srcMsaa)
		{
			return default(int);
		}

		[Token(Token = "0x600057D")]
		[Address(RVA = "0x89EBD8", Offset = "0x89EBD8", VA = "0x89EBD8")]
		private void UpdateRenderTextures(int srcX, int srcY, int srcMsaa)
		{
		}

		[Token(Token = "0x600057E")]
		[Address(RVA = "0x89DD1C", Offset = "0x89DD1C", VA = "0x89DD1C")]
		private void ResetMaskCommandBuffer()
		{
		}

		[Token(Token = "0x600057F")]
		[Address(RVA = "0x89D844", Offset = "0x89D844", VA = "0x89D844")]
		private void ToggleMaskCommandBuffer(bool on)
		{
		}

		[Token(Token = "0x6000580")]
		[Address(RVA = "0x89D8B4", Offset = "0x89D8B4", VA = "0x89D8B4")]
		private void ToggleIrisCommandBuffer(bool on)
		{
		}

		[Token(Token = "0x6000581")]
		[Address(RVA = "0x89ACC0", Offset = "0x89ACC0", VA = "0x89ACC0")]
		protected TunnellingImageBase()
		{
		}
	}
	[Token(Token = "0x200010C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x74002C", Offset = "0x74002C")]
	public class TunnellingMaskObject : MonoBehaviour
	{
		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool autoAddChildren;

		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Renderer _r;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _started;

		[Token(Token = "0x6000583")]
		[Address(RVA = "0x89F628", Offset = "0x89F628", VA = "0x89F628")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000584")]
		[Address(RVA = "0x89F680", Offset = "0x89F680", VA = "0x89F680")]
		private void Start()
		{
		}

		[Token(Token = "0x6000585")]
		[Address(RVA = "0x89F68C", Offset = "0x89F68C", VA = "0x89F68C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000586")]
		[Address(RVA = "0x89F834", Offset = "0x89F834", VA = "0x89F834")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000587")]
		[Address(RVA = "0x89F9C4", Offset = "0x89F9C4", VA = "0x89F9C4")]
		public TunnellingMaskObject()
		{
		}
	}
	[Token(Token = "0x200010D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x740090", Offset = "0x740090")]
	public class TunnellingMaskObjectMobile : MonoBehaviour
	{
		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool autoAddChildren;

		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Renderer _r;

		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _started;

		[Token(Token = "0x6000588")]
		[Address(RVA = "0x89F9CC", Offset = "0x89F9CC", VA = "0x89F9CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000589")]
		[Address(RVA = "0x89FA24", Offset = "0x89FA24", VA = "0x89FA24")]
		private void Start()
		{
		}

		[Token(Token = "0x600058A")]
		[Address(RVA = "0x89FA30", Offset = "0x89FA30", VA = "0x89FA30")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600058B")]
		[Address(RVA = "0x89FEF8", Offset = "0x89FEF8", VA = "0x89FEF8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600058C")]
		[Address(RVA = "0x8A0190", Offset = "0x8A0190", VA = "0x8A0190")]
		public TunnellingMaskObjectMobile()
		{
		}
	}
	[Token(Token = "0x200010E")]
	public class TunnellingMobile : TunnellingBase
	{
		[Token(Token = "0x4000726")]
		public const string GLOBAL_PROP_STENCILREF = "_VRTP_Stencil_Ref";

		[Token(Token = "0x4000727")]
		public const string GLOBAL_PROP_STENCILMASK = "_VRTP_Stencil_Mask";

		[Token(Token = "0x4000728")]
		public const string GLOBAL_PROP_STENCILBIAS = "_VRTP_Stencil_Bias";

		[Token(Token = "0x4000729")]
		private const string PROP_WRITEZ = "_WriteZ";

		[Token(Token = "0x400072A")]
		private const string PATH_SHADER = "TunnellingVertex";

		[Token(Token = "0x400072B")]
		private const string PATH_STENCILSHADER = "TunnellingMobileStencil";

		[Token(Token = "0x400072C")]
		private const CameraEvent CEVENT_FX = CameraEvent.BeforeImageEffects;

		[Token(Token = "0x400072D")]
		private const CameraEvent CEVENT_Z = CameraEvent.BeforeForwardOpaque;

		[Token(Token = "0x400072E")]
		private const int RQUEUE_FIRST = 1;

		[Token(Token = "0x400072F")]
		private const int RQUEUE_MASK = 2499;

		[Token(Token = "0x4000730")]
		private const int RQUEUE_OPAQUE = 2501;

		[Token(Token = "0x4000731")]
		private const int RQUEUE_LAST = 5000;

		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x745F48", Offset = "0x745F48")]
		private static TunnellingMobile <instance>k__BackingField;

		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Material _stencilMat;

		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x745F58", Offset = "0x745F58")]
		public bool drawSkybox;

		[Token(Token = "0x4000735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C1")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x745F90", Offset = "0x745F90")]
		public bool useMask;

		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C2")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x745FC8", Offset = "0x745FC8")]
		public bool drawBeforeTransparent;

		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x746000", Offset = "0x746000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x746000", Offset = "0x746000")]
		public int stencilReference;

		[Token(Token = "0x4000738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x746058", Offset = "0x746058")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x746058", Offset = "0x746058")]
		public int stencilMask;

		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7460B0", Offset = "0x7460B0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7460B0", Offset = "0x7460B0")]
		public float stencilBias;

		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private int _propColor;

		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		private int _propSkybox;

		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private int _propWriteZ;

		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		private int _globPropStencilRef;

		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private int _globPropStencilMask;

		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		private int _globPropStencilBias;

		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private Material _irisMatOuter;

		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private Material _irisMatInner;

		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private Mesh _irisMesh;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private Dictionary<Renderer, MeshFilter> _maskObjects;

		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private Stack<Mesh> _skinnedMeshPool;

		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private Stack<Mesh> _skinnedMeshesRendering;

		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private List<UnityEngine.Object> _toDestroy;

		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private List<MeshRenderer> _tempMeshChildren;

		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private List<SkinnedMeshRenderer> _tempSkinnedMeshChildren;

		[Token(Token = "0x17000044")]
		public static TunnellingMobile instance
		{
			[Token(Token = "0x600058D")]
			[Address(RVA = "0x8A0198", Offset = "0x8A0198", VA = "0x8A0198")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74B028", Offset = "0x74B028")]
			get
			{
				return null;
			}
			[Token(Token = "0x600058E")]
			[Address(RVA = "0x8A01E8", Offset = "0x8A01E8", VA = "0x8A01E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74B038", Offset = "0x74B038")]
			private set
			{
			}
		}

		[Token(Token = "0x17000045")]
		public static Material stencilMat
		{
			[Token(Token = "0x600058F")]
			[Address(RVA = "0x8A023C", Offset = "0x8A023C", VA = "0x8A023C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000046")]
		public bool irisZRejectionEnabled
		{
			[Token(Token = "0x6000590")]
			[Address(RVA = "0x8A0324", Offset = "0x8A0324", VA = "0x8A0324")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000591")]
		[Address(RVA = "0x8A0344", Offset = "0x8A0344", VA = "0x8A0344")]
		public void ApplyPreset(TunnellingPresetMobile p)
		{
		}

		[Token(Token = "0x6000592")]
		[Address(RVA = "0x89FB74", Offset = "0x89FB74", VA = "0x89FB74")]
		public void AddObjectToMask(Renderer r, bool includeChildren = false)
		{
		}

		[Token(Token = "0x6000593")]
		[Address(RVA = "0x8A0024", Offset = "0x8A0024", VA = "0x8A0024")]
		public void RemoveObjectFromMask(Renderer r, bool includeChildren = false)
		{
		}

		[Token(Token = "0x6000594")]
		[Address(RVA = "0x8A03FC", Offset = "0x8A03FC", VA = "0x8A03FC", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000595")]
		[Address(RVA = "0x8A06D8", Offset = "0x8A06D8", VA = "0x8A06D8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000596")]
		[Address(RVA = "0x8A09D8", Offset = "0x8A09D8", VA = "0x8A09D8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000597")]
		[Address(RVA = "0x8A1120", Offset = "0x8A1120", VA = "0x8A1120")]
		private void DrawIris(Material m, int submesh, int opaqueQueue, int camLayer)
		{
		}

		[Token(Token = "0x6000598")]
		[Address(RVA = "0x8A13FC", Offset = "0x8A13FC", VA = "0x8A13FC")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6000599")]
		[Address(RVA = "0x8A1430", Offset = "0x8A1430", VA = "0x8A1430")]
		public TunnellingMobile()
		{
		}
	}
	[Token(Token = "0x200010F")]
	public class TunnellingOpaque : TunnellingImageBase
	{
		[Token(Token = "0x17000047")]
		protected override CameraEvent _maskCmdEvt
		{
			[Token(Token = "0x600059A")]
			[Address(RVA = "0x8A1574", Offset = "0x8A1574", VA = "0x8A1574", Slot = "9")]
			get
			{
				return default(CameraEvent);
			}
		}

		[Token(Token = "0x600059B")]
		[Address(RVA = "0x8A157C", Offset = "0x8A157C", VA = "0x8A157C")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture src, RenderTexture dest)
		{
		}

		[Token(Token = "0x600059C")]
		[Address(RVA = "0x8A1580", Offset = "0x8A1580", VA = "0x8A1580")]
		public TunnellingOpaque()
		{
		}
	}
	[Token(Token = "0x2000110")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7400F4", Offset = "0x7400F4")]
	public class TunnellingPreset : TunnellingPresetBase
	{
		[Token(Token = "0x4000749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x746104", Offset = "0x746104")]
		private float _effectOverlay;

		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private bool _overrideEffectOverlay;

		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private TunnellingBase.BackgroundMode _backgroundMode;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private bool _overrideBackgroundMode;

		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x746174", Offset = "0x746174")]
		private int _cageDownsample;

		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		private bool _overrideCageDownsample;

		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private TunnellingBase.MSAA _cageAntiAliasing;

		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		private bool _overrideCageAntiAliasing;

		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
		[SerializeField]
		private bool _cageUpdateEveryFrame;

		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBE")]
		[SerializeField]
		private bool _overrideCageUpdateEveryFrame;

		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x746204", Offset = "0x746204")]
		private float _cageFogDensity;

		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private bool _overrideCageFogDensity;

		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x74625C", Offset = "0x74625C")]
		private float _cageFogPower;

		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool _overrideCageFogPower;

		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7462AC", Offset = "0x7462AC")]
		private float _cageFogBlend;

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private bool _overrideCageFogBlend;

		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TunnellingBase.MaskMode _maskMode;

		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private bool _overrideMaskMode;

		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x74631C", Offset = "0x74631C")]
		private int _blurDownsample;

		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private bool _overrideBlurDownsample;

		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x74636C", Offset = "0x74636C")]
		private float _blurDistance;

		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private bool _overrideBlurDistance;

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7463BC", Offset = "0x7463BC")]
		private int _blurPasses;

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		private bool _overrideBlurPasses;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private TunnellingImageBase.BlurKernel _blurSamples;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[SerializeField]
		private bool _overrideBlurSamples;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private TunnellingImageBase.CounterVelocityMode _counterVelocityMode;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[SerializeField]
		private bool _overrideCounterVelocityMode;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private float _counterVelocityResetDistance;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[SerializeField]
		private bool _overrideCounterVelocityResetDistance;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private float _counterVelocityResetTime;

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[SerializeField]
		private bool _overrideCounterVelocityResetTime;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x74648C", Offset = "0x74648C")]
		private float _counterVelocityStrength;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[SerializeField]
		private bool _overrideCounterVelocityStrength;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private Vector3 _counterVelocityPerAxis;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[SerializeField]
		private bool _overrideCounterVelocityPerAxis;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12D")]
		[SerializeField]
		private bool _irisZRejection;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12E")]
		[SerializeField]
		private bool _overrideIrisZRejection;

		[Token(Token = "0x17000048")]
		public float effectOverlay
		{
			[Token(Token = "0x600059D")]
			[Address(RVA = "0x8A15E4", Offset = "0x8A15E4", VA = "0x8A15E4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000049")]
		public bool overrideEffectOverlay
		{
			[Token(Token = "0x600059E")]
			[Address(RVA = "0x8A15EC", Offset = "0x8A15EC", VA = "0x8A15EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700004A")]
		public TunnellingBase.BackgroundMode backgroundMode
		{
			[Token(Token = "0x600059F")]
			[Address(RVA = "0x8A15F4", Offset = "0x8A15F4", VA = "0x8A15F4")]
			get
			{
				return default(TunnellingBase.BackgroundMode);
			}
		}

		[Token(Token = "0x1700004B")]
		public bool overrideBackgroundMode
		{
			[Token(Token = "0x60005A0")]
			[Address(RVA = "0x89E0C8", Offset = "0x89E0C8", VA = "0x89E0C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700004C")]
		public int cageDownsample
		{
			[Token(Token = "0x60005A1")]
			[Address(RVA = "0x8A15FC", Offset = "0x8A15FC", VA = "0x8A15FC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700004D")]
		public bool overrideCageDownsample
		{
			[Token(Token = "0x60005A2")]
			[Address(RVA = "0x89E0E8", Offset = "0x89E0E8", VA = "0x89E0E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700004E")]
		public TunnellingBase.MSAA cageAntiAliasing
		{
			[Token(Token = "0x60005A3")]
			[Address(RVA = "0x8A1604", Offset = "0x8A1604", VA = "0x8A1604")]
			get
			{
				return default(TunnellingBase.MSAA);
			}
		}

		[Token(Token = "0x1700004F")]
		public bool overrideCageAntiAliasing
		{
			[Token(Token = "0x60005A4")]
			[Address(RVA = "0x89E108", Offset = "0x89E108", VA = "0x89E108")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000050")]
		public bool cageUpdateEveryFrame
		{
			[Token(Token = "0x60005A5")]
			[Address(RVA = "0x8A160C", Offset = "0x8A160C", VA = "0x8A160C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000051")]
		public bool overrideCageUpdateEveryFrame
		{
			[Token(Token = "0x60005A6")]
			[Address(RVA = "0x89E128", Offset = "0x89E128", VA = "0x89E128")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000052")]
		public float cageFogDensity
		{
			[Token(Token = "0x60005A7")]
			[Address(RVA = "0x8A1614", Offset = "0x8A1614", VA = "0x8A1614")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000053")]
		public bool overrideCageFogDensity
		{
			[Token(Token = "0x60005A8")]
			[Address(RVA = "0x89E148", Offset = "0x89E148", VA = "0x89E148")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000054")]
		public float cageFogPower
		{
			[Token(Token = "0x60005A9")]
			[Address(RVA = "0x8A161C", Offset = "0x8A161C", VA = "0x8A161C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000055")]
		public bool overrideCageFogPower
		{
			[Token(Token = "0x60005AA")]
			[Address(RVA = "0x89E168", Offset = "0x89E168", VA = "0x89E168")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000056")]
		public float cageFogBlend
		{
			[Token(Token = "0x60005AB")]
			[Address(RVA = "0x8A1624", Offset = "0x8A1624", VA = "0x8A1624")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000057")]
		public bool overrideCageFogBlend
		{
			[Token(Token = "0x60005AC")]
			[Address(RVA = "0x89E188", Offset = "0x89E188", VA = "0x89E188")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000058")]
		public TunnellingBase.MaskMode maskMode
		{
			[Token(Token = "0x60005AD")]
			[Address(RVA = "0x8A162C", Offset = "0x8A162C", VA = "0x8A162C")]
			get
			{
				return default(TunnellingBase.MaskMode);
			}
		}

		[Token(Token = "0x17000059")]
		public bool overrideMaskMode
		{
			[Token(Token = "0x60005AE")]
			[Address(RVA = "0x89E1A8", Offset = "0x89E1A8", VA = "0x89E1A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700005A")]
		public int blurDownsample
		{
			[Token(Token = "0x60005AF")]
			[Address(RVA = "0x8A1634", Offset = "0x8A1634", VA = "0x8A1634")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700005B")]
		public bool overrideBlurDownsample
		{
			[Token(Token = "0x60005B0")]
			[Address(RVA = "0x89E1C8", Offset = "0x89E1C8", VA = "0x89E1C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700005C")]
		public float blurDistance
		{
			[Token(Token = "0x60005B1")]
			[Address(RVA = "0x8A163C", Offset = "0x8A163C", VA = "0x8A163C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700005D")]
		public bool overrideBlurDistance
		{
			[Token(Token = "0x60005B2")]
			[Address(RVA = "0x89E1E8", Offset = "0x89E1E8", VA = "0x89E1E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700005E")]
		public int blurPasses
		{
			[Token(Token = "0x60005B3")]
			[Address(RVA = "0x8A1644", Offset = "0x8A1644", VA = "0x8A1644")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700005F")]
		public bool overrideBlurPasses
		{
			[Token(Token = "0x60005B4")]
			[Address(RVA = "0x89E208", Offset = "0x89E208", VA = "0x89E208")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000060")]
		public TunnellingImageBase.BlurKernel blurSamples
		{
			[Token(Token = "0x60005B5")]
			[Address(RVA = "0x8A164C", Offset = "0x8A164C", VA = "0x8A164C")]
			get
			{
				return default(TunnellingImageBase.BlurKernel);
			}
		}

		[Token(Token = "0x17000061")]
		public bool overrideBlurSamples
		{
			[Token(Token = "0x60005B6")]
			[Address(RVA = "0x89E228", Offset = "0x89E228", VA = "0x89E228")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000062")]
		public TunnellingImageBase.CounterVelocityMode counterVelocityMode
		{
			[Token(Token = "0x60005B7")]
			[Address(RVA = "0x8A1654", Offset = "0x8A1654", VA = "0x8A1654")]
			get
			{
				return default(TunnellingImageBase.CounterVelocityMode);
			}
		}

		[Token(Token = "0x17000063")]
		public bool overrideCounterVelocityMode
		{
			[Token(Token = "0x60005B8")]
			[Address(RVA = "0x89E248", Offset = "0x89E248", VA = "0x89E248")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000064")]
		public float counterVelocityResetDistance
		{
			[Token(Token = "0x60005B9")]
			[Address(RVA = "0x8A165C", Offset = "0x8A165C", VA = "0x8A165C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000065")]
		public bool overrideCounterVelocityResetDistance
		{
			[Token(Token = "0x60005BA")]
			[Address(RVA = "0x89E268", Offset = "0x89E268", VA = "0x89E268")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000066")]
		public float counterVelocityResetTime
		{
			[Token(Token = "0x60005BB")]
			[Address(RVA = "0x8A1664", Offset = "0x8A1664", VA = "0x8A1664")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000067")]
		public bool overrideCounterVelocityResetTime
		{
			[Token(Token = "0x60005BC")]
			[Address(RVA = "0x89E288", Offset = "0x89E288", VA = "0x89E288")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000068")]
		public float counterVelocityStrength
		{
			[Token(Token = "0x60005BD")]
			[Address(RVA = "0x8A166C", Offset = "0x8A166C", VA = "0x8A166C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000069")]
		public bool overrideCounterVelocityStrength
		{
			[Token(Token = "0x60005BE")]
			[Address(RVA = "0x89E2A8", Offset = "0x89E2A8", VA = "0x89E2A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700006A")]
		public Vector3 counterVelocityPerAxis
		{
			[Token(Token = "0x60005BF")]
			[Address(RVA = "0x8A1674", Offset = "0x8A1674", VA = "0x8A1674")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700006B")]
		public bool overrideCounterVelocityPerAxis
		{
			[Token(Token = "0x60005C0")]
			[Address(RVA = "0x89E2C8", Offset = "0x89E2C8", VA = "0x89E2C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700006C")]
		public bool irisZRejection
		{
			[Token(Token = "0x60005C1")]
			[Address(RVA = "0x8A1684", Offset = "0x8A1684", VA = "0x8A1684")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700006D")]
		public bool overrideIrisZRejection
		{
			[Token(Token = "0x60005C2")]
			[Address(RVA = "0x89E2E8", Offset = "0x89E2E8", VA = "0x89E2E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60005C3")]
		[Address(RVA = "0x8A168C", Offset = "0x8A168C", VA = "0x8A168C")]
		public TunnellingPreset()
		{
		}
	}
	[Token(Token = "0x2000111")]
	public abstract class TunnellingPresetBase : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000290")]
		public class MotionSettings
		{
			[Token(Token = "0x4001408")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private bool _use;

			[Token(Token = "0x4001409")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x748DE0", Offset = "0x748DE0")]
			private float _strength;

			[Token(Token = "0x400140A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private float _min;

			[Token(Token = "0x400140B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[SerializeField]
			private float _max;

			[Token(Token = "0x400140C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private float _smoothing;

			[Token(Token = "0x170001AF")]
			public bool use
			{
				[Token(Token = "0x6000EE3")]
				[Address(RVA = "0x8A191C", Offset = "0x8A191C", VA = "0x8A191C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170001B0")]
			public float strength
			{
				[Token(Token = "0x6000EE4")]
				[Address(RVA = "0x8A1924", Offset = "0x8A1924", VA = "0x8A1924")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170001B1")]
			public float min
			{
				[Token(Token = "0x6000EE5")]
				[Address(RVA = "0x8A192C", Offset = "0x8A192C", VA = "0x8A192C")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170001B2")]
			public float max
			{
				[Token(Token = "0x6000EE6")]
				[Address(RVA = "0x8A1934", Offset = "0x8A1934", VA = "0x8A1934")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170001B3")]
			public float smoothing
			{
				[Token(Token = "0x6000EE7")]
				[Address(RVA = "0x8A193C", Offset = "0x8A193C", VA = "0x8A193C")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6000EE8")]
			[Address(RVA = "0x8A1944", Offset = "0x8A1944", VA = "0x8A1944")]
			public MotionSettings()
			{
			}
		}

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _overrideAll;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x74652C", Offset = "0x74652C")]
		private float _effectCoverage;

		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _overrideEffectCoverage;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Color _effectColor;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool _overrideEffectColor;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x74659C", Offset = "0x74659C")]
		private float _effectFeather;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private bool _overrideEffectFeather;

		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[SerializeField]
		private bool _applyColorToBackground;

		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		[SerializeField]
		private bool _overrideApplyColorToBackground;

		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Cubemap _skybox;

		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool _overrideSkybox;

		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private MotionSettings _angularVelocity;

		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private bool _overrideAngularVelocity;

		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private MotionSettings _acceleration;

		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private bool _overrideAcceleration;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private MotionSettings _velocity;

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _overrideVelocity;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		[SerializeField]
		private bool _useCounterMotion;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		[SerializeField]
		private bool _overrideUseCounterMotion;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7466AC", Offset = "0x7466AC")]
		private float _counterRotationStrength;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private bool _overrideCounterRotationStrength;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private Vector3 _counterRotationPerAxis;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private bool _overrideCounterRotationPerAxis;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		[SerializeField]
		private bool _useArtificialTilt;

		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		[SerializeField]
		private bool _overrideUseArtificialTilt;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x74673C", Offset = "0x74673C")]
		private int _framerateDivision;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private bool _overrideFramerateDivision;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		[SerializeField]
		private bool _divideTranslation;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		[SerializeField]
		private bool _overrideDivideTranslation;

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
		[SerializeField]
		private bool _divideRotation;

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private bool _overrideDivideRotation;

		[Token(Token = "0x1700006E")]
		protected bool overrideAll
		{
			[Token(Token = "0x60005C4")]
			[Address(RVA = "0x8A1874", Offset = "0x8A1874", VA = "0x8A1874")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700006F")]
		public float effectCoverage
		{
			[Token(Token = "0x60005C5")]
			[Address(RVA = "0x8A187C", Offset = "0x8A187C", VA = "0x8A187C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000070")]
		public bool overrideEffectCoverage
		{
			[Token(Token = "0x60005C6")]
			[Address(RVA = "0x89B1CC", Offset = "0x89B1CC", VA = "0x89B1CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000071")]
		public Color effectColor
		{
			[Token(Token = "0x60005C7")]
			[Address(RVA = "0x8A1884", Offset = "0x8A1884", VA = "0x8A1884")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000072")]
		public bool overrideEffectColor
		{
			[Token(Token = "0x60005C8")]
			[Address(RVA = "0x89B1EC", Offset = "0x89B1EC", VA = "0x89B1EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000073")]
		public float effectFeather
		{
			[Token(Token = "0x60005C9")]
			[Address(RVA = "0x8A1890", Offset = "0x8A1890", VA = "0x8A1890")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000074")]
		public bool overrideEffectFeather
		{
			[Token(Token = "0x60005CA")]
			[Address(RVA = "0x89B20C", Offset = "0x89B20C", VA = "0x89B20C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000075")]
		public bool applyColorToBackground
		{
			[Token(Token = "0x60005CB")]
			[Address(RVA = "0x8A1898", Offset = "0x8A1898", VA = "0x8A1898")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000076")]
		public bool overrideApplyColorToBackground
		{
			[Token(Token = "0x60005CC")]
			[Address(RVA = "0x89B22C", Offset = "0x89B22C", VA = "0x89B22C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000077")]
		public Cubemap skybox
		{
			[Token(Token = "0x60005CD")]
			[Address(RVA = "0x8A18A0", Offset = "0x8A18A0", VA = "0x8A18A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000078")]
		public bool overrideSkybox
		{
			[Token(Token = "0x60005CE")]
			[Address(RVA = "0x89B24C", Offset = "0x89B24C", VA = "0x89B24C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000079")]
		public MotionSettings angularVelocity
		{
			[Token(Token = "0x60005CF")]
			[Address(RVA = "0x8A18A8", Offset = "0x8A18A8", VA = "0x8A18A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007A")]
		public bool overrideAngularVelocity
		{
			[Token(Token = "0x60005D0")]
			[Address(RVA = "0x89B26C", Offset = "0x89B26C", VA = "0x89B26C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700007B")]
		public MotionSettings acceleration
		{
			[Token(Token = "0x60005D1")]
			[Address(RVA = "0x8A18B0", Offset = "0x8A18B0", VA = "0x8A18B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007C")]
		public bool overrideAcceleration
		{
			[Token(Token = "0x60005D2")]
			[Address(RVA = "0x89B28C", Offset = "0x89B28C", VA = "0x89B28C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700007D")]
		public MotionSettings velocity
		{
			[Token(Token = "0x60005D3")]
			[Address(RVA = "0x8A18B8", Offset = "0x8A18B8", VA = "0x8A18B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007E")]
		public bool overrideVelocity
		{
			[Token(Token = "0x60005D4")]
			[Address(RVA = "0x89B2AC", Offset = "0x89B2AC", VA = "0x89B2AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700007F")]
		public bool useCounterMotion
		{
			[Token(Token = "0x60005D5")]
			[Address(RVA = "0x8A18C0", Offset = "0x8A18C0", VA = "0x8A18C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000080")]
		public bool overrideUseCounterMotion
		{
			[Token(Token = "0x60005D6")]
			[Address(RVA = "0x89B2CC", Offset = "0x89B2CC", VA = "0x89B2CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000081")]
		public float counterRotationStrength
		{
			[Token(Token = "0x60005D7")]
			[Address(RVA = "0x8A18C8", Offset = "0x8A18C8", VA = "0x8A18C8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000082")]
		public bool overrideCounterRotationStrength
		{
			[Token(Token = "0x60005D8")]
			[Address(RVA = "0x8A18D0", Offset = "0x8A18D0", VA = "0x8A18D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000083")]
		public Vector3 counterRotationPerAxis
		{
			[Token(Token = "0x60005D9")]
			[Address(RVA = "0x8A18F0", Offset = "0x8A18F0", VA = "0x8A18F0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000084")]
		public bool overrideCounterRotationPerAxis
		{
			[Token(Token = "0x60005DA")]
			[Address(RVA = "0x89B2EC", Offset = "0x89B2EC", VA = "0x89B2EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000085")]
		public bool useArtificialTilt
		{
			[Token(Token = "0x60005DB")]
			[Address(RVA = "0x8A18FC", Offset = "0x8A18FC", VA = "0x8A18FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000086")]
		public bool overrideUseArtificialTilt
		{
			[Token(Token = "0x60005DC")]
			[Address(RVA = "0x89B30C", Offset = "0x89B30C", VA = "0x89B30C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000087")]
		public int framerateDivision
		{
			[Token(Token = "0x60005DD")]
			[Address(RVA = "0x8A1904", Offset = "0x8A1904", VA = "0x8A1904")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000088")]
		public bool overrideFramerateDivision
		{
			[Token(Token = "0x60005DE")]
			[Address(RVA = "0x89B32C", Offset = "0x89B32C", VA = "0x89B32C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000089")]
		public bool divideTranslation
		{
			[Token(Token = "0x60005DF")]
			[Address(RVA = "0x8A190C", Offset = "0x8A190C", VA = "0x8A190C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008A")]
		public bool overrideDivideTranslation
		{
			[Token(Token = "0x60005E0")]
			[Address(RVA = "0x89B34C", Offset = "0x89B34C", VA = "0x89B34C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008B")]
		public bool divideRotation
		{
			[Token(Token = "0x60005E1")]
			[Address(RVA = "0x8A1914", Offset = "0x8A1914", VA = "0x8A1914")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008C")]
		public bool overrideDividerotation
		{
			[Token(Token = "0x60005E2")]
			[Address(RVA = "0x89B36C", Offset = "0x89B36C", VA = "0x89B36C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60005E3")]
		[Address(RVA = "0x8A1788", Offset = "0x8A1788", VA = "0x8A1788")]
		protected TunnellingPresetBase()
		{
		}
	}
	[Token(Token = "0x2000112")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x740134", Offset = "0x740134")]
	public class TunnellingPresetMobile : TunnellingPresetBase
	{
		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
		[SerializeField]
		private bool _drawSkybox;

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9E")]
		[SerializeField]
		private bool _overrideDrawSkybox;

		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9F")]
		[SerializeField]
		private bool _drawBeforeTransparent;

		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private bool _overrideDrawBeforeTransparent;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		[SerializeField]
		private bool _useMask;

		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		[SerializeField]
		private bool _overrideUseMask;

		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x746830", Offset = "0x746830")]
		private int _stencilReference;

		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private bool _overrideStencilReference;

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x746884", Offset = "0x746884")]
		private int _stencilMask;

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private bool _overrideStencilMask;

		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7468D8", Offset = "0x7468D8")]
		private int _stencilBias;

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private bool _overrideStencilBias;

		[Token(Token = "0x1700008D")]
		public bool drawSkybox
		{
			[Token(Token = "0x60005E4")]
			[Address(RVA = "0x8A1954", Offset = "0x8A1954", VA = "0x8A1954")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008E")]
		public bool overrideDrawSkybox
		{
			[Token(Token = "0x60005E5")]
			[Address(RVA = "0x8A03DC", Offset = "0x8A03DC", VA = "0x8A03DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008F")]
		public bool drawBeforeTransparent
		{
			[Token(Token = "0x60005E6")]
			[Address(RVA = "0x8A195C", Offset = "0x8A195C", VA = "0x8A195C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000090")]
		public bool overrideDrawBeforeTransparent
		{
			[Token(Token = "0x60005E7")]
			[Address(RVA = "0x8A1964", Offset = "0x8A1964", VA = "0x8A1964")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000091")]
		public bool useMask
		{
			[Token(Token = "0x60005E8")]
			[Address(RVA = "0x8A196C", Offset = "0x8A196C", VA = "0x8A196C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000092")]
		public bool overrideUseMask
		{
			[Token(Token = "0x60005E9")]
			[Address(RVA = "0x8A1974", Offset = "0x8A1974", VA = "0x8A1974")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000093")]
		public int stencilReference
		{
			[Token(Token = "0x60005EA")]
			[Address(RVA = "0x8A197C", Offset = "0x8A197C", VA = "0x8A197C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000094")]
		public bool overrideStencilReference
		{
			[Token(Token = "0x60005EB")]
			[Address(RVA = "0x8A1984", Offset = "0x8A1984", VA = "0x8A1984")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000095")]
		public int stencilMask
		{
			[Token(Token = "0x60005EC")]
			[Address(RVA = "0x8A198C", Offset = "0x8A198C", VA = "0x8A198C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000096")]
		public bool overrideStencilMask
		{
			[Token(Token = "0x60005ED")]
			[Address(RVA = "0x8A1994", Offset = "0x8A1994", VA = "0x8A1994")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000097")]
		public int stencilBias
		{
			[Token(Token = "0x60005EE")]
			[Address(RVA = "0x8A199C", Offset = "0x8A199C", VA = "0x8A199C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000098")]
		public bool overrideStencilBias
		{
			[Token(Token = "0x60005EF")]
			[Address(RVA = "0x8A19A4", Offset = "0x8A19A4", VA = "0x8A19A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60005F0")]
		[Address(RVA = "0x8A19AC", Offset = "0x8A19AC", VA = "0x8A19AC")]
		public TunnellingPresetMobile()
		{
		}
	}
}
namespace Sigtrap.VrTunnellingPro.Examples
{
	[Token(Token = "0x2000113")]
	public class VRTP_ExampleMovement : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000291")]
		private struct Preset
		{
			[Token(Token = "0x400140D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public KeyCode key;

			[Token(Token = "0x400140E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject[] worldObjects;

			[Token(Token = "0x400140F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TunnellingPreset postPreset;
		}

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _disableModes;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _rotSensitivity;

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _movSensitivity;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Cubemap[] _skyboxes;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject[] _cages;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Preset[] _modePresets;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _currentMode;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool _hasWarnedInput;

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Tunnelling _tunnelling;

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CharacterController _char;

		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _currentSkybox;

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int _currentCage;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 _speedCurrent;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 _speedSlew;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float _speedSmoothing;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float _rotCurrent;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float _rotSlew;

		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private float _rotSmoothing;

		[Token(Token = "0x60005F1")]
		[Address(RVA = "0x899EA8", Offset = "0x899EA8", VA = "0x899EA8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005F2")]
		[Address(RVA = "0x899F18", Offset = "0x899F18", VA = "0x899F18")]
		private void Update()
		{
		}

		[Token(Token = "0x60005F3")]
		[Address(RVA = "0x89A428", Offset = "0x89A428", VA = "0x89A428")]
		private void SetPreset(int i)
		{
		}

		[Token(Token = "0x60005F4")]
		[Address(RVA = "0x89A770", Offset = "0x89A770", VA = "0x89A770")]
		public VRTP_ExampleMovement()
		{
		}
	}
}
namespace TMPro
{
	[Serializable]
	[Token(Token = "0x2000114")]
	public class TMP_DigitValidator : TMP_InputValidator
	{
		[Token(Token = "0x60005F5")]
		[Address(RVA = "0x9A3054", Offset = "0x9A3054", VA = "0x9A3054", Slot = "4")]
		public override char Validate(ref string text, ref int pos, char ch)
		{
			return default(char);
		}

		[Token(Token = "0x60005F6")]
		[Address(RVA = "0x9A30CC", Offset = "0x9A30CC", VA = "0x9A30CC")]
		public TMP_DigitValidator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000115")]
	public class TMP_PhoneNumberValidator : TMP_InputValidator
	{
		[Token(Token = "0x60005F7")]
		[Address(RVA = "0x9A30D4", Offset = "0x9A30D4", VA = "0x9A30D4", Slot = "4")]
		public override char Validate(ref string text, ref int pos, char ch)
		{
			return default(char);
		}

		[Token(Token = "0x60005F8")]
		[Address(RVA = "0x9A34A4", Offset = "0x9A34A4", VA = "0x9A34A4")]
		public TMP_PhoneNumberValidator()
		{
		}
	}
	[Token(Token = "0x2000116")]
	public class TMP_TextEventHandler : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Serializable]
		[Token(Token = "0x2000292")]
		public class CharacterSelectionEvent : UnityEvent<char, int>
		{
			[Token(Token = "0x6000EE9")]
			[Address(RVA = "0x9A3E94", Offset = "0x9A3E94", VA = "0x9A3E94")]
			public CharacterSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000293")]
		public class SpriteSelectionEvent : UnityEvent<char, int>
		{
			[Token(Token = "0x6000EEA")]
			[Address(RVA = "0x9A3EE4", Offset = "0x9A3EE4", VA = "0x9A3EE4")]
			public SpriteSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000294")]
		public class WordSelectionEvent : UnityEvent<string, int, int>
		{
			[Token(Token = "0x6000EEB")]
			[Address(RVA = "0x9A3F34", Offset = "0x9A3F34", VA = "0x9A3F34")]
			public WordSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000295")]
		public class LineSelectionEvent : UnityEvent<string, int, int>
		{
			[Token(Token = "0x6000EEC")]
			[Address(RVA = "0x9A3F84", Offset = "0x9A3F84", VA = "0x9A3F84")]
			public LineSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000296")]
		public class LinkSelectionEvent : UnityEvent<string, string, int>
		{
			[Token(Token = "0x6000EED")]
			[Address(RVA = "0x9A3FD4", Offset = "0x9A3FD4", VA = "0x9A3FD4")]
			public LinkSelectionEvent()
			{
			}
		}

		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CharacterSelectionEvent m_OnCharacterSelection;

		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SpriteSelectionEvent m_OnSpriteSelection;

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private WordSelectionEvent m_OnWordSelection;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LineSelectionEvent m_OnLineSelection;

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LinkSelectionEvent m_OnLinkSelection;

		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Camera m_Camera;

		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Canvas m_Canvas;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_selectedLink;

		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_lastCharIndex;

		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_lastWordIndex;

		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int m_lastLineIndex;

		[Token(Token = "0x17000099")]
		public CharacterSelectionEvent onCharacterSelection
		{
			[Token(Token = "0x60005F9")]
			[Address(RVA = "0x9A34AC", Offset = "0x9A34AC", VA = "0x9A34AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005FA")]
			[Address(RVA = "0x9A34B4", Offset = "0x9A34B4", VA = "0x9A34B4")]
			set
			{
			}
		}

		[Token(Token = "0x1700009A")]
		public SpriteSelectionEvent onSpriteSelection
		{
			[Token(Token = "0x60005FB")]
			[Address(RVA = "0x9A34BC", Offset = "0x9A34BC", VA = "0x9A34BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005FC")]
			[Address(RVA = "0x9A34C4", Offset = "0x9A34C4", VA = "0x9A34C4")]
			set
			{
			}
		}

		[Token(Token = "0x1700009B")]
		public WordSelectionEvent onWordSelection
		{
			[Token(Token = "0x60005FD")]
			[Address(RVA = "0x9A34CC", Offset = "0x9A34CC", VA = "0x9A34CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005FE")]
			[Address(RVA = "0x9A34D4", Offset = "0x9A34D4", VA = "0x9A34D4")]
			set
			{
			}
		}

		[Token(Token = "0x1700009C")]
		public LineSelectionEvent onLineSelection
		{
			[Token(Token = "0x60005FF")]
			[Address(RVA = "0x9A34DC", Offset = "0x9A34DC", VA = "0x9A34DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000600")]
			[Address(RVA = "0x9A34E4", Offset = "0x9A34E4", VA = "0x9A34E4")]
			set
			{
			}
		}

		[Token(Token = "0x1700009D")]
		public LinkSelectionEvent onLinkSelection
		{
			[Token(Token = "0x6000601")]
			[Address(RVA = "0x9A34EC", Offset = "0x9A34EC", VA = "0x9A34EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000602")]
			[Address(RVA = "0x9A34F4", Offset = "0x9A34F4", VA = "0x9A34F4")]
			set
			{
			}
		}

		[Token(Token = "0x6000603")]
		[Address(RVA = "0x9A34FC", Offset = "0x9A34FC", VA = "0x9A34FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000604")]
		[Address(RVA = "0x9A3664", Offset = "0x9A3664", VA = "0x9A3664")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000605")]
		[Address(RVA = "0x9A3DB0", Offset = "0x9A3DB0", VA = "0x9A3DB0", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000606")]
		[Address(RVA = "0x9A3DB4", Offset = "0x9A3DB4", VA = "0x9A3DB4", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000607")]
		[Address(RVA = "0x9A3B08", Offset = "0x9A3B08", VA = "0x9A3B08")]
		private void SendOnCharacterSelection(char character, int characterIndex)
		{
		}

		[Token(Token = "0x6000608")]
		[Address(RVA = "0x9A3B84", Offset = "0x9A3B84", VA = "0x9A3B84")]
		private void SendOnSpriteSelection(char character, int characterIndex)
		{
		}

		[Token(Token = "0x6000609")]
		[Address(RVA = "0x9A3C00", Offset = "0x9A3C00", VA = "0x9A3C00")]
		private void SendOnWordSelection(string word, int charIndex, int length)
		{
		}

		[Token(Token = "0x600060A")]
		[Address(RVA = "0x9A3C90", Offset = "0x9A3C90", VA = "0x9A3C90")]
		private void SendOnLineSelection(string line, int charIndex, int length)
		{
		}

		[Token(Token = "0x600060B")]
		[Address(RVA = "0x9A3D20", Offset = "0x9A3D20", VA = "0x9A3D20")]
		private void SendOnLinkSelection(string linkID, string linkText, int linkIndex)
		{
		}

		[Token(Token = "0x600060C")]
		[Address(RVA = "0x9A3DB8", Offset = "0x9A3DB8", VA = "0x9A3DB8")]
		public TMP_TextEventHandler()
		{
		}
	}
}
namespace TMPro.Examples
{
	[Token(Token = "0x2000117")]
	public class Benchmark01 : MonoBehaviour
	{
		[Token(Token = "0x2000297")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741098", Offset = "0x741098")]
		private sealed class <Start>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001410")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001411")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001412")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Benchmark01 <>4__this;

			[Token(Token = "0x4001413")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x170001B4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EF1")]
				[Address(RVA = "0x8A7DC0", Offset = "0x8A7DC0", VA = "0x8A7DC0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EF3")]
				[Address(RVA = "0x8A7E28", Offset = "0x8A7E28", VA = "0x8A7E28", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EEE")]
			[Address(RVA = "0x8A7890", Offset = "0x8A7890", VA = "0x8A7890")]
			[DebuggerHidden]
			public <Start>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000EEF")]
			[Address(RVA = "0x8A78C4", Offset = "0x8A78C4", VA = "0x8A78C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EF0")]
			[Address(RVA = "0x8A78C8", Offset = "0x8A78C8", VA = "0x8A78C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EF2")]
			[Address(RVA = "0x8A7DC8", Offset = "0x8A7DC8", VA = "0x8A7DC8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int BenchmarkType;

		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TMP_FontAsset TMProFont;

		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Font TextMeshFont;

		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x40007BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextContainer m_textContainer;

		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TextMesh m_textMesh;

		[Token(Token = "0x40007BE")]
		private const string label01 = "The <#0050FF>count is: </color>{0}";

		[Token(Token = "0x40007BF")]
		private const string label02 = "The <color=#0050FF>count is: </color>";

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_material01;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_material02;

		[Token(Token = "0x600060D")]
		[Address(RVA = "0x8A7820", Offset = "0x8A7820", VA = "0x8A7820")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74B058", Offset = "0x74B058")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x600060E")]
		[Address(RVA = "0x8A78BC", Offset = "0x8A78BC", VA = "0x8A78BC")]
		public Benchmark01()
		{
		}
	}
	[Token(Token = "0x2000118")]
	public class Benchmark01_UGUI : MonoBehaviour
	{
		[Token(Token = "0x2000298")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7410A8", Offset = "0x7410A8")]
		private sealed class <Start>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001414")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001415")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001416")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Benchmark01_UGUI <>4__this;

			[Token(Token = "0x4001417")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x170001B6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EF7")]
				[Address(RVA = "0x8A8310", Offset = "0x8A8310", VA = "0x8A8310", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EF9")]
				[Address(RVA = "0x8A8378", Offset = "0x8A8378", VA = "0x8A8378", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EF4")]
			[Address(RVA = "0x8A7EA0", Offset = "0x8A7EA0", VA = "0x8A7EA0")]
			[DebuggerHidden]
			public <Start>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000EF5")]
			[Address(RVA = "0x8A7ED4", Offset = "0x8A7ED4", VA = "0x8A7ED4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EF6")]
			[Address(RVA = "0x8A7ED8", Offset = "0x8A7ED8", VA = "0x8A7ED8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EF8")]
			[Address(RVA = "0x8A8318", Offset = "0x8A8318", VA = "0x8A8318", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int BenchmarkType;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Canvas canvas;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TMP_FontAsset TMProFont;

		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Font TextMeshFont;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextMeshProUGUI m_textMeshPro;

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Text m_textMesh;

		[Token(Token = "0x40007C8")]
		private const string label01 = "The <#0050FF>count is: </color>";

		[Token(Token = "0x40007C9")]
		private const string label02 = "The <color=#0050FF>count is: </color>";

		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_material01;

		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_material02;

		[Token(Token = "0x600060F")]
		[Address(RVA = "0x8A7E30", Offset = "0x8A7E30", VA = "0x8A7E30")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74B0BC", Offset = "0x74B0BC")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000610")]
		[Address(RVA = "0x8A7ECC", Offset = "0x8A7ECC", VA = "0x8A7ECC")]
		public Benchmark01_UGUI()
		{
		}
	}
	[Token(Token = "0x2000119")]
	public class Benchmark02 : MonoBehaviour
	{
		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int NumberOfNPC;

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshProFloatingText floatingText_Script;

		[Token(Token = "0x6000611")]
		[Address(RVA = "0x8A8380", Offset = "0x8A8380", VA = "0x8A8380")]
		private void Start()
		{
		}

		[Token(Token = "0x6000612")]
		[Address(RVA = "0x8A89A4", Offset = "0x8A89A4", VA = "0x8A89A4")]
		public Benchmark02()
		{
		}
	}
	[Token(Token = "0x200011A")]
	public class Benchmark03 : MonoBehaviour
	{
		[Token(Token = "0x2000299")]
		public enum BenchmarkType
		{
			[Token(Token = "0x4001419")]
			TMP_SDF_MOBILE,
			[Token(Token = "0x400141A")]
			TMP_SDF__MOBILE_SSD,
			[Token(Token = "0x400141B")]
			TMP_SDF,
			[Token(Token = "0x400141C")]
			TMP_BITMAP_MOBILE,
			[Token(Token = "0x400141D")]
			TEXTMESH_BITMAP
		}

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int NumberOfSamples;

		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public BenchmarkType Benchmark;

		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Font SourceFontFile;

		[Token(Token = "0x6000613")]
		[Address(RVA = "0x8A89B4", Offset = "0x8A89B4", VA = "0x8A89B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000614")]
		[Address(RVA = "0x8A89B8", Offset = "0x8A89B8", VA = "0x8A89B8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000615")]
		[Address(RVA = "0x8A8E6C", Offset = "0x8A8E6C", VA = "0x8A8E6C")]
		public Benchmark03()
		{
		}
	}
	[Token(Token = "0x200011B")]
	public class Benchmark04 : MonoBehaviour
	{
		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int MinPointSize;

		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int MaxPointSize;

		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int Steps;

		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform m_Transform;

		[Token(Token = "0x6000616")]
		[Address(RVA = "0x8A8E7C", Offset = "0x8A8E7C", VA = "0x8A8E7C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000617")]
		[Address(RVA = "0x8A91E8", Offset = "0x8A91E8", VA = "0x8A91E8")]
		public Benchmark04()
		{
		}
	}
	[Token(Token = "0x200011C")]
	public class CameraController : MonoBehaviour
	{
		[Token(Token = "0x200029A")]
		public enum CameraModes
		{
			[Token(Token = "0x400141F")]
			Follow,
			[Token(Token = "0x4001420")]
			Isometric,
			[Token(Token = "0x4001421")]
			Free
		}

		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform cameraTransform;

		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform dummyTarget;

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform CameraTarget;

		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float FollowDistance;

		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float MaxFollowDistance;

		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float MinFollowDistance;

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float ElevationAngle;

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float MaxElevationAngle;

		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float MinElevationAngle;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float OrbitalAngle;

		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public CameraModes CameraMode;

		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool MovementSmoothing;

		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool RotationSmoothing;

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		private bool previousSmoothing;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float MovementSmoothingValue;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float RotationSmoothingValue;

		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float MoveSensitivity;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 currentVelocity;

		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 desiredPosition;

		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float mouseX;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float mouseY;

		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 moveVector;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float mouseWheel;

		[Token(Token = "0x40007EE")]
		private const string event_SmoothingValue = "Slider - Smoothing Value";

		[Token(Token = "0x40007EF")]
		private const string event_FollowDistance = "Slider - Camera Zoom";

		[Token(Token = "0x6000618")]
		[Address(RVA = "0x8A9204", Offset = "0x8A9204", VA = "0x8A9204")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000619")]
		[Address(RVA = "0x8A9288", Offset = "0x8A9288", VA = "0x8A9288")]
		private void Start()
		{
		}

		[Token(Token = "0x600061A")]
		[Address(RVA = "0x8A9340", Offset = "0x8A9340", VA = "0x8A9340")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600061B")]
		[Address(RVA = "0x8A97BC", Offset = "0x8A97BC", VA = "0x8A97BC")]
		private void GetPlayerInput()
		{
		}

		[Token(Token = "0x600061C")]
		[Address(RVA = "0x8AA0AC", Offset = "0x8AA0AC", VA = "0x8AA0AC")]
		public CameraController()
		{
		}
	}
	[Token(Token = "0x200011D")]
	public class ObjectSpin : MonoBehaviour
	{
		[Token(Token = "0x200029B")]
		public enum MotionType
		{
			[Token(Token = "0x4001423")]
			Rotation,
			[Token(Token = "0x4001424")]
			BackAndForth,
			[Token(Token = "0x4001425")]
			Translation
		}

		[Token(Token = "0x40007F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float SpinSpeed;

		[Token(Token = "0x40007F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int RotationRange;

		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_transform;

		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_time;

		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 m_prevPOS;

		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_initial_Rotation;

		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 m_initial_Position;

		[Token(Token = "0x40007F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Color32 m_lightColor;

		[Token(Token = "0x40007F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int frames;

		[Token(Token = "0x40007F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public MotionType Motion;

		[Token(Token = "0x600061D")]
		[Address(RVA = "0x995A1C", Offset = "0x995A1C", VA = "0x995A1C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600061E")]
		[Address(RVA = "0x995B34", Offset = "0x995B34", VA = "0x995B34")]
		private void Update()
		{
		}

		[Token(Token = "0x600061F")]
		[Address(RVA = "0x995D70", Offset = "0x995D70", VA = "0x995D70")]
		public ObjectSpin()
		{
		}
	}
	[Token(Token = "0x200011E")]
	public class ShaderPropAnimator : MonoBehaviour
	{
		[Token(Token = "0x200029C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7410B8", Offset = "0x7410B8")]
		private sealed class <AnimateProperties>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001426")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001427")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001428")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShaderPropAnimator <>4__this;

			[Token(Token = "0x170001B8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EFD")]
				[Address(RVA = "0x99601C", Offset = "0x99601C", VA = "0x99601C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EFF")]
				[Address(RVA = "0x996084", Offset = "0x996084", VA = "0x996084", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EFA")]
			[Address(RVA = "0x995E8C", Offset = "0x995E8C", VA = "0x995E8C")]
			[DebuggerHidden]
			public <AnimateProperties>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6000EFB")]
			[Address(RVA = "0x995EC0", Offset = "0x995EC0", VA = "0x995EC0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EFC")]
			[Address(RVA = "0x995EC4", Offset = "0x995EC4", VA = "0x995EC4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EFE")]
			[Address(RVA = "0x996024", Offset = "0x996024", VA = "0x996024", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Renderer m_Renderer;

		[Token(Token = "0x40007FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material m_Material;

		[Token(Token = "0x40007FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve GlowCurve;

		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_frame;

		[Token(Token = "0x6000620")]
		[Address(RVA = "0x995D84", Offset = "0x995D84", VA = "0x995D84")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000621")]
		[Address(RVA = "0x995DF0", Offset = "0x995DF0", VA = "0x995DF0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000622")]
		[Address(RVA = "0x995E1C", Offset = "0x995E1C", VA = "0x995E1C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74B120", Offset = "0x74B120")]
		private IEnumerator AnimateProperties()
		{
			return null;
		}

		[Token(Token = "0x6000623")]
		[Address(RVA = "0x995EB8", Offset = "0x995EB8", VA = "0x995EB8")]
		public ShaderPropAnimator()
		{
		}
	}
	[Token(Token = "0x200011F")]
	public class SimpleScript : MonoBehaviour
	{
		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x40007FF")]
		private const string label = "The <#0050FF>count is: </color>{0:2}";

		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_frame;

		[Token(Token = "0x6000624")]
		[Address(RVA = "0x99608C", Offset = "0x99608C", VA = "0x99608C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000625")]
		[Address(RVA = "0x996148", Offset = "0x996148", VA = "0x996148")]
		private void Update()
		{
		}

		[Token(Token = "0x6000626")]
		[Address(RVA = "0x9961E4", Offset = "0x9961E4", VA = "0x9961E4")]
		public SimpleScript()
		{
		}
	}
	[Token(Token = "0x2000120")]
	public class SkewTextExample : MonoBehaviour
	{
		[Token(Token = "0x200029D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7410C8", Offset = "0x7410C8")]
		private sealed class <WarpText>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001429")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400142A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400142B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SkewTextExample <>4__this;

			[Token(Token = "0x400142C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <old_CurveScale>5__2;

			[Token(Token = "0x400142D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <old_ShearValue>5__3;

			[Token(Token = "0x400142E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AnimationCurve <old_curve>5__4;

			[Token(Token = "0x170001BA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F03")]
				[Address(RVA = "0x9972C8", Offset = "0x9972C8", VA = "0x9972C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001BB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F05")]
				[Address(RVA = "0x997330", Offset = "0x997330", VA = "0x997330", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F00")]
			[Address(RVA = "0x996378", Offset = "0x996378", VA = "0x996378")]
			[DebuggerHidden]
			public <WarpText>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6000F01")]
			[Address(RVA = "0x9965D4", Offset = "0x9965D4", VA = "0x9965D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F02")]
			[Address(RVA = "0x9965D8", Offset = "0x9965D8", VA = "0x9965D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F04")]
			[Address(RVA = "0x9972D0", Offset = "0x9972D0", VA = "0x9972D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve VertexCurve;

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float CurveScale;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float ShearAmount;

		[Token(Token = "0x6000627")]
		[Address(RVA = "0x9961EC", Offset = "0x9961EC", VA = "0x9961EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000628")]
		[Address(RVA = "0x996254", Offset = "0x996254", VA = "0x996254")]
		private void Start()
		{
		}

		[Token(Token = "0x6000629")]
		[Address(RVA = "0x9962F0", Offset = "0x9962F0", VA = "0x9962F0")]
		private AnimationCurve CopyAnimationCurve(AnimationCurve curve)
		{
			return null;
		}

		[Token(Token = "0x600062A")]
		[Address(RVA = "0x996280", Offset = "0x996280", VA = "0x996280")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74B184", Offset = "0x74B184")]
		private IEnumerator WarpText()
		{
			return null;
		}

		[Token(Token = "0x600062B")]
		[Address(RVA = "0x9963A4", Offset = "0x9963A4", VA = "0x9963A4")]
		public SkewTextExample()
		{
		}
	}
	[Token(Token = "0x2000121")]
	public class TMP_ExampleScript_01 : MonoBehaviour
	{
		[Token(Token = "0x200029E")]
		public enum objectType
		{
			[Token(Token = "0x4001430")]
			TextMeshPro,
			[Token(Token = "0x4001431")]
			TextMeshProUGUI
		}

		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public objectType ObjectType;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool isStatic;

		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TMP_Text m_text;

		[Token(Token = "0x4000808")]
		private const string k_label = "The count is <#0080ff>{0}</color>";

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int count;

		[Token(Token = "0x600062C")]
		[Address(RVA = "0x997338", Offset = "0x997338", VA = "0x997338")]
		private void Awake()
		{
		}

		[Token(Token = "0x600062D")]
		[Address(RVA = "0x99751C", Offset = "0x99751C", VA = "0x99751C")]
		private void Update()
		{
		}

		[Token(Token = "0x600062E")]
		[Address(RVA = "0x9975B8", Offset = "0x9975B8", VA = "0x9975B8")]
		public TMP_ExampleScript_01()
		{
		}
	}
	[Token(Token = "0x2000122")]
	public class TMP_FrameRateCounter : MonoBehaviour
	{
		[Token(Token = "0x200029F")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x4001433")]
			TopLeft,
			[Token(Token = "0x4001434")]
			BottomLeft,
			[Token(Token = "0x4001435")]
			TopRight,
			[Token(Token = "0x4001436")]
			BottomRight
		}

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float UpdateInterval;

		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_LastInterval;

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_Frames;

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string htmlColorTag;

		[Token(Token = "0x400080F")]
		private const string fpsLabel = "{0:2}</color> <#8080ff>FPS \n<#FF8000>{1:2} <#8080ff>MS";

		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_frameCounter_transform;

		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera m_camera;

		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private FpsCounterAnchorPositions last_AnchorPosition;

		[Token(Token = "0x600062F")]
		[Address(RVA = "0x9975C0", Offset = "0x9975C0", VA = "0x9975C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000630")]
		[Address(RVA = "0x997A3C", Offset = "0x997A3C", VA = "0x997A3C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000631")]
		[Address(RVA = "0x997A68", Offset = "0x997A68", VA = "0x997A68")]
		private void Update()
		{
		}

		[Token(Token = "0x6000632")]
		[Address(RVA = "0x99779C", Offset = "0x99779C", VA = "0x99779C")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x6000633")]
		[Address(RVA = "0x997BC8", Offset = "0x997BC8", VA = "0x997BC8")]
		public TMP_FrameRateCounter()
		{
		}
	}
	[Token(Token = "0x2000123")]
	public class TMP_TextEventCheck : MonoBehaviour
	{
		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TMP_TextEventHandler TextEventHandler;

		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x6000634")]
		[Address(RVA = "0x997BE0", Offset = "0x997BE0", VA = "0x997BE0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000635")]
		[Address(RVA = "0x997E34", Offset = "0x997E34", VA = "0x997E34")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000636")]
		[Address(RVA = "0x99806C", Offset = "0x99806C", VA = "0x99806C")]
		private void OnCharacterSelection(char c, int index)
		{
		}

		[Token(Token = "0x6000637")]
		[Address(RVA = "0x998244", Offset = "0x998244", VA = "0x998244")]
		private void OnSpriteSelection(char c, int index)
		{
		}

		[Token(Token = "0x6000638")]
		[Address(RVA = "0x99841C", Offset = "0x99841C", VA = "0x99841C")]
		private void OnWordSelection(string word, int firstCharacterIndex, int length)
		{
		}

		[Token(Token = "0x6000639")]
		[Address(RVA = "0x998660", Offset = "0x998660", VA = "0x998660")]
		private void OnLineSelection(string lineText, int firstCharacterIndex, int length)
		{
		}

		[Token(Token = "0x600063A")]
		[Address(RVA = "0x9988A4", Offset = "0x9988A4", VA = "0x9988A4")]
		private void OnLinkSelection(string linkID, string linkText, int linkIndex)
		{
		}

		[Token(Token = "0x600063B")]
		[Address(RVA = "0x998B28", Offset = "0x998B28", VA = "0x998B28")]
		public TMP_TextEventCheck()
		{
		}
	}
	[Token(Token = "0x2000124")]
	public class TMP_TextInfoDebugTool : MonoBehaviour
	{
		[Token(Token = "0x600063C")]
		[Address(RVA = "0x998B30", Offset = "0x998B30", VA = "0x998B30")]
		public TMP_TextInfoDebugTool()
		{
		}
	}
	[Token(Token = "0x2000125")]
	public class TMP_TextSelector_A : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Camera m_Camera;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_isHoveringObject;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int m_selectedLink;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_lastCharIndex;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int m_lastWordIndex;

		[Token(Token = "0x600063D")]
		[Address(RVA = "0x998B38", Offset = "0x998B38", VA = "0x998B38")]
		private void Awake()
		{
		}

		[Token(Token = "0x600063E")]
		[Address(RVA = "0x998BCC", Offset = "0x998BCC", VA = "0x998BCC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600063F")]
		[Address(RVA = "0x999308", Offset = "0x999308", VA = "0x999308", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000640")]
		[Address(RVA = "0x999384", Offset = "0x999384", VA = "0x999384", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000641")]
		[Address(RVA = "0x9993FC", Offset = "0x9993FC", VA = "0x9993FC")]
		public TMP_TextSelector_A()
		{
		}
	}
	[Token(Token = "0x2000126")]
	public class TMP_TextSelector_B : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerClickHandler, IPointerUpHandler
	{
		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform TextPopup_Prefab_01;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform m_TextPopup_RectTransform;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshProUGUI m_TextPopup_TMPComponent;

		[Token(Token = "0x400081F")]
		private const string k_LinkText = "You have selected link <#ffff00>";

		[Token(Token = "0x4000820")]
		private const string k_WordText = "Word Index: <#ffff00>";

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshProUGUI m_TextMeshPro;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Canvas m_Canvas;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera m_Camera;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isHoveringObject;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int m_selectedWord;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_selectedLink;

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_lastIndex;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Matrix4x4 m_matrix;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TMP_MeshInfo[] m_cachedMeshInfoVertexData;

		[Token(Token = "0x6000642")]
		[Address(RVA = "0x999414", Offset = "0x999414", VA = "0x999414")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000643")]
		[Address(RVA = "0x999574", Offset = "0x999574", VA = "0x999574")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000644")]
		[Address(RVA = "0x999638", Offset = "0x999638", VA = "0x999638")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000645")]
		[Address(RVA = "0x9996FC", Offset = "0x9996FC", VA = "0x9996FC")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000646")]
		[Address(RVA = "0x9997A0", Offset = "0x9997A0", VA = "0x9997A0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000647")]
		[Address(RVA = "0x99AF10", Offset = "0x99AF10", VA = "0x99AF10", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000648")]
		[Address(RVA = "0x99AF1C", Offset = "0x99AF1C", VA = "0x99AF1C", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000649")]
		[Address(RVA = "0x99AF24", Offset = "0x99AF24", VA = "0x99AF24", Slot = "6")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600064A")]
		[Address(RVA = "0x99AF28", Offset = "0x99AF28", VA = "0x99AF28", Slot = "7")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600064B")]
		[Address(RVA = "0x99A680", Offset = "0x99A680", VA = "0x99A680")]
		private void RestoreCachedVertexAttributes(int index)
		{
		}

		[Token(Token = "0x600064C")]
		[Address(RVA = "0x99AF2C", Offset = "0x99AF2C", VA = "0x99AF2C")]
		public TMP_TextSelector_B()
		{
		}
	}
	[Token(Token = "0x2000127")]
	public class TMP_UiFrameRateCounter : MonoBehaviour
	{
		[Token(Token = "0x20002A0")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x4001438")]
			TopLeft,
			[Token(Token = "0x4001439")]
			BottomLeft,
			[Token(Token = "0x400143A")]
			TopRight,
			[Token(Token = "0x400143B")]
			BottomRight
		}

		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float UpdateInterval;

		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_LastInterval;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_Frames;

		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string htmlColorTag;

		[Token(Token = "0x400082F")]
		private const string fpsLabel = "{0:2}</color> <#8080ff>FPS \n<#FF8000>{1:2} <#8080ff>MS";

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshProUGUI m_TextMeshPro;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RectTransform m_frameCounter_transform;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private FpsCounterAnchorPositions last_AnchorPosition;

		[Token(Token = "0x600064D")]
		[Address(RVA = "0x99AF44", Offset = "0x99AF44", VA = "0x99AF44")]
		private void Awake()
		{
		}

		[Token(Token = "0x600064E")]
		[Address(RVA = "0x99B478", Offset = "0x99B478", VA = "0x99B478")]
		private void Start()
		{
		}

		[Token(Token = "0x600064F")]
		[Address(RVA = "0x99B4A4", Offset = "0x99B4A4", VA = "0x99B4A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000650")]
		[Address(RVA = "0x99B0F4", Offset = "0x99B0F4", VA = "0x99B0F4")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x6000651")]
		[Address(RVA = "0x99B604", Offset = "0x99B604", VA = "0x99B604")]
		public TMP_UiFrameRateCounter()
		{
		}
	}
	[Token(Token = "0x2000128")]
	public class TMPro_InstructionOverlay : MonoBehaviour
	{
		[Token(Token = "0x20002A1")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x400143D")]
			TopLeft,
			[Token(Token = "0x400143E")]
			BottomLeft,
			[Token(Token = "0x400143F")]
			TopRight,
			[Token(Token = "0x4001440")]
			BottomRight
		}

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x4000834")]
		private const string instructions = "Camera Control - <#ffff00>Shift + RMB\n</color>Zoom - <#ffff00>Mouse wheel.";

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextContainer m_textContainer;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform m_frameCounter_transform;

		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Camera m_camera;

		[Token(Token = "0x6000652")]
		[Address(RVA = "0x99B61C", Offset = "0x99B61C", VA = "0x99B61C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000653")]
		[Address(RVA = "0x99B82C", Offset = "0x99B82C", VA = "0x99B82C")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x6000654")]
		[Address(RVA = "0x99B97C", Offset = "0x99B97C", VA = "0x99B97C")]
		public TMPro_InstructionOverlay()
		{
		}
	}
	[Token(Token = "0x2000129")]
	public class TeleType : MonoBehaviour
	{
		[Token(Token = "0x20002A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7410D8", Offset = "0x7410D8")]
		private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001441")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001442")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001443")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TeleType <>4__this;

			[Token(Token = "0x4001444")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <totalVisibleCharacters>5__2;

			[Token(Token = "0x4001445")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <counter>5__3;

			[Token(Token = "0x170001BC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F09")]
				[Address(RVA = "0x99BD60", Offset = "0x99BD60", VA = "0x99BD60", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001BD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F0B")]
				[Address(RVA = "0x99BDC8", Offset = "0x99BDC8", VA = "0x99BDC8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F06")]
			[Address(RVA = "0x99BA94", Offset = "0x99BA94", VA = "0x99BA94")]
			[DebuggerHidden]
			public <Start>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6000F07")]
			[Address(RVA = "0x99BB28", Offset = "0x99BB28", VA = "0x99BB28", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F08")]
			[Address(RVA = "0x99BB2C", Offset = "0x99BB2C", VA = "0x99BB2C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F0A")]
			[Address(RVA = "0x99BD68", Offset = "0x99BD68", VA = "0x99BD68", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string label01;

		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string label02;

		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_textMeshPro;

		[Token(Token = "0x6000655")]
		[Address(RVA = "0x99B98C", Offset = "0x99B98C", VA = "0x99B98C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000656")]
		[Address(RVA = "0x99BA24", Offset = "0x99BA24", VA = "0x99BA24")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74B1E8", Offset = "0x74B1E8")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000657")]
		[Address(RVA = "0x99BAC0", Offset = "0x99BAC0", VA = "0x99BAC0")]
		public TeleType()
		{
		}
	}
	[Token(Token = "0x200012A")]
	public class TextConsoleSimulator : MonoBehaviour
	{
		[Token(Token = "0x20002A3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7410E8", Offset = "0x7410E8")]
		private sealed class <RevealCharacters>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001446")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001447")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001448")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TMP_Text textComponent;

			[Token(Token = "0x4001449")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TextConsoleSimulator <>4__this;

			[Token(Token = "0x400144A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x400144B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <totalVisibleCharacters>5__3;

			[Token(Token = "0x400144C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int <visibleCount>5__4;

			[Token(Token = "0x170001BE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F0F")]
				[Address(RVA = "0x99C2B4", Offset = "0x99C2B4", VA = "0x99C2B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001BF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F11")]
				[Address(RVA = "0x99C31C", Offset = "0x99C31C", VA = "0x99C31C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F0C")]
			[Address(RVA = "0x99C078", Offset = "0x99C078", VA = "0x99C078")]
			[DebuggerHidden]
			public <RevealCharacters>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6000F0D")]
			[Address(RVA = "0x99C148", Offset = "0x99C148", VA = "0x99C148", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F0E")]
			[Address(RVA = "0x99C14C", Offset = "0x99C14C", VA = "0x99C14C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F10")]
			[Address(RVA = "0x99C2BC", Offset = "0x99C2BC", VA = "0x99C2BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7410F8", Offset = "0x7410F8")]
		private sealed class <RevealWords>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400144D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400144E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400144F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TMP_Text textComponent;

			[Token(Token = "0x4001450")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <totalWordCount>5__2;

			[Token(Token = "0x4001451")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <totalVisibleCharacters>5__3;

			[Token(Token = "0x4001452")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <counter>5__4;

			[Token(Token = "0x4001453")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <visibleCount>5__5;

			[Token(Token = "0x170001C0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F15")]
				[Address(RVA = "0x99C514", Offset = "0x99C514", VA = "0x99C514", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F17")]
				[Address(RVA = "0x99C57C", Offset = "0x99C57C", VA = "0x99C57C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F12")]
			[Address(RVA = "0x99C114", Offset = "0x99C114", VA = "0x99C114")]
			[DebuggerHidden]
			public <RevealWords>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6000F13")]
			[Address(RVA = "0x99C324", Offset = "0x99C324", VA = "0x99C324", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F14")]
			[Address(RVA = "0x99C328", Offset = "0x99C328", VA = "0x99C328", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F16")]
			[Address(RVA = "0x99C51C", Offset = "0x99C51C", VA = "0x99C51C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool hasTextChanged;

		[Token(Token = "0x6000658")]
		[Address(RVA = "0x99BDD0", Offset = "0x99BDD0", VA = "0x99BDD0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000659")]
		[Address(RVA = "0x99BE38", Offset = "0x99BE38", VA = "0x99BE38")]
		private void Start()
		{
		}

		[Token(Token = "0x600065A")]
		[Address(RVA = "0x99BEE4", Offset = "0x99BEE4", VA = "0x99BEE4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600065B")]
		[Address(RVA = "0x99BFA8", Offset = "0x99BFA8", VA = "0x99BFA8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600065C")]
		[Address(RVA = "0x99C06C", Offset = "0x99C06C", VA = "0x99C06C")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x600065D")]
		[Address(RVA = "0x99BE68", Offset = "0x99BE68", VA = "0x99BE68")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74B24C", Offset = "0x74B24C")]
		private IEnumerator RevealCharacters(TMP_Text textComponent)
		{
			return null;
		}

		[Token(Token = "0x600065E")]
		[Address(RVA = "0x99C0A4", Offset = "0x99C0A4", VA = "0x99C0A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74B2B0", Offset = "0x74B2B0")]
		private IEnumerator RevealWords(TMP_Text textComponent)
		{
			return null;
		}

		[Token(Token = "0x600065F")]
		[Address(RVA = "0x99C140", Offset = "0x99C140", VA = "0x99C140")]
		public TextConsoleSimulator()
		{
		}
	}
	[Token(Token = "0x200012B")]
	public class TextMeshProFloatingText : MonoBehaviour
	{
		[Token(Token = "0x20002A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741108", Offset = "0x741108")]
		private sealed class <DisplayTextMeshProFloatingText>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001454")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001455")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001456")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextMeshProFloatingText <>4__this;

			[Token(Token = "0x4001457")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <CountDuration>5__2;

			[Token(Token = "0x4001458")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <starting_Count>5__3;

			[Token(Token = "0x4001459")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <current_Count>5__4;

			[Token(Token = "0x400145A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <start_pos>5__5;

			[Token(Token = "0x400145B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Color32 <start_color>5__6;

			[Token(Token = "0x400145C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <alpha>5__7;

			[Token(Token = "0x400145D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <fadeDuration>5__8;

			[Token(Token = "0x170001C2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F1B")]
				[Address(RVA = "0x99D6C0", Offset = "0x99D6C0", VA = "0x99D6C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F1D")]
				[Address(RVA = "0x99D728", Offset = "0x99D728", VA = "0x99D728", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F18")]
			[Address(RVA = "0x99CB98", Offset = "0x99CB98", VA = "0x99CB98")]
			[DebuggerHidden]
			public <DisplayTextMeshProFloatingText>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6000F19")]
			[Address(RVA = "0x99D1D8", Offset = "0x99D1D8", VA = "0x99D1D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F1A")]
			[Address(RVA = "0x99D1DC", Offset = "0x99D1DC", VA = "0x99D1DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F1C")]
			[Address(RVA = "0x99D6C8", Offset = "0x99D6C8", VA = "0x99D6C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002A6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741118", Offset = "0x741118")]
		private sealed class <DisplayTextMeshFloatingText>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400145E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400145F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001460")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextMeshProFloatingText <>4__this;

			[Token(Token = "0x4001461")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <CountDuration>5__2;

			[Token(Token = "0x4001462")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <starting_Count>5__3;

			[Token(Token = "0x4001463")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <current_Count>5__4;

			[Token(Token = "0x4001464")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <start_pos>5__5;

			[Token(Token = "0x4001465")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Color32 <start_color>5__6;

			[Token(Token = "0x4001466")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <alpha>5__7;

			[Token(Token = "0x4001467")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <fadeDuration>5__8;

			[Token(Token = "0x170001C4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F21")]
				[Address(RVA = "0x99D168", Offset = "0x99D168", VA = "0x99D168", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F23")]
				[Address(RVA = "0x99D1D0", Offset = "0x99D1D0", VA = "0x99D1D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F1E")]
			[Address(RVA = "0x99CBC4", Offset = "0x99CBC4", VA = "0x99CBC4")]
			[DebuggerHidden]
			public <DisplayTextMeshFloatingText>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6000F1F")]
			[Address(RVA = "0x99CC98", Offset = "0x99CC98", VA = "0x99CC98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F20")]
			[Address(RVA = "0x99CC9C", Offset = "0x99CC9C", VA = "0x99CC9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F22")]
			[Address(RVA = "0x99D170", Offset = "0x99D170", VA = "0x99D170", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Font TheFont;

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject m_floatingText;

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMesh m_textMesh;

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_transform;

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform m_floatingText_Transform;

		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform m_cameraTransform;

		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 lastPOS;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion lastRotation;

		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int SpawnType;

		[Token(Token = "0x6000660")]
		[Address(RVA = "0x99C584", Offset = "0x99C584", VA = "0x99C584")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000661")]
		[Address(RVA = "0x99C644", Offset = "0x99C644", VA = "0x99C644")]
		private void Start()
		{
		}

		[Token(Token = "0x6000662")]
		[Address(RVA = "0x99CAB8", Offset = "0x99CAB8", VA = "0x99CAB8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74B314", Offset = "0x74B314")]
		public IEnumerator DisplayTextMeshProFloatingText()
		{
			return null;
		}

		[Token(Token = "0x6000663")]
		[Address(RVA = "0x99CB28", Offset = "0x99CB28", VA = "0x99CB28")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74B378", Offset = "0x74B378")]
		public IEnumerator DisplayTextMeshFloatingText()
		{
			return null;
		}

		[Token(Token = "0x6000664")]
		[Address(RVA = "0x99CBF0", Offset = "0x99CBF0", VA = "0x99CBF0")]
		public TextMeshProFloatingText()
		{
		}
	}
	[Token(Token = "0x200012C")]
	public class TextMeshSpawner : MonoBehaviour
	{
		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int NumberOfNPC;

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Font TheFont;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshProFloatingText floatingText_Script;

		[Token(Token = "0x6000665")]
		[Address(RVA = "0x99D730", Offset = "0x99D730", VA = "0x99D730")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000666")]
		[Address(RVA = "0x99D734", Offset = "0x99D734", VA = "0x99D734")]
		private void Start()
		{
		}

		[Token(Token = "0x6000667")]
		[Address(RVA = "0x99DA54", Offset = "0x99DA54", VA = "0x99DA54")]
		public TextMeshSpawner()
		{
		}
	}
	[Token(Token = "0x200012D")]
	public class VertexColorCycler : MonoBehaviour
	{
		[Token(Token = "0x20002A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741128", Offset = "0x741128")]
		private sealed class <AnimateVertexColors>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001468")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001469")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400146A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexColorCycler <>4__this;

			[Token(Token = "0x400146B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x400146C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <currentCharacter>5__3;

			[Token(Token = "0x170001C6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F27")]
				[Address(RVA = "0x99DE4C", Offset = "0x99DE4C", VA = "0x99DE4C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F29")]
				[Address(RVA = "0x99DEB4", Offset = "0x99DEB4", VA = "0x99DEB4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F24")]
			[Address(RVA = "0x99DB58", Offset = "0x99DB58", VA = "0x99DB58")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6000F25")]
			[Address(RVA = "0x99DB8C", Offset = "0x99DB8C", VA = "0x99DB8C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F26")]
			[Address(RVA = "0x99DB90", Offset = "0x99DB90", VA = "0x99DB90", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F28")]
			[Address(RVA = "0x99DE54", Offset = "0x99DE54", VA = "0x99DE54", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x6000668")]
		[Address(RVA = "0x99DA64", Offset = "0x99DA64", VA = "0x99DA64")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000669")]
		[Address(RVA = "0x99DABC", Offset = "0x99DABC", VA = "0x99DABC")]
		private void Start()
		{
		}

		[Token(Token = "0x600066A")]
		[Address(RVA = "0x99DAE8", Offset = "0x99DAE8", VA = "0x99DAE8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74B3DC", Offset = "0x74B3DC")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x600066B")]
		[Address(RVA = "0x99DB84", Offset = "0x99DB84", VA = "0x99DB84")]
		public VertexColorCycler()
		{
		}
	}
	[Token(Token = "0x200012E")]
	public class VertexJitter : MonoBehaviour
	{
		[Token(Token = "0x20002A8")]
		private struct VertexAnim
		{
			[Token(Token = "0x400146D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float angleRange;

			[Token(Token = "0x400146E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float angle;

			[Token(Token = "0x400146F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float speed;
		}

		[Token(Token = "0x20002A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741138", Offset = "0x741138")]
		private sealed class <AnimateVertexColors>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001470")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001471")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001472")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexJitter <>4__this;

			[Token(Token = "0x4001473")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4001474")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <loopCount>5__3;

			[Token(Token = "0x4001475")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private VertexAnim[] <vertexAnim>5__4;

			[Token(Token = "0x4001476")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TMP_MeshInfo[] <cachedMeshInfo>5__5;

			[Token(Token = "0x170001C8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F2D")]
				[Address(RVA = "0x99ECBC", Offset = "0x99ECBC", VA = "0x99ECBC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F2F")]
				[Address(RVA = "0x99ED24", Offset = "0x99ED24", VA = "0x99ED24", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F2A")]
			[Address(RVA = "0x99E1C4", Offset = "0x99E1C4", VA = "0x99E1C4")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6000F2B")]
			[Address(RVA = "0x99E208", Offset = "0x99E208", VA = "0x99E208", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F2C")]
			[Address(RVA = "0x99E20C", Offset = "0x99E20C", VA = "0x99E20C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F2E")]
			[Address(RVA = "0x99ECC4", Offset = "0x99ECC4", VA = "0x99ECC4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CurveScale;

		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x600066C")]
		[Address(RVA = "0x99DEBC", Offset = "0x99DEBC", VA = "0x99DEBC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600066D")]
		[Address(RVA = "0x99DF14", Offset = "0x99DF14", VA = "0x99DF14")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600066E")]
		[Address(RVA = "0x99DFD8", Offset = "0x99DFD8", VA = "0x99DFD8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600066F")]
		[Address(RVA = "0x99E09C", Offset = "0x99E09C", VA = "0x99E09C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000670")]
		[Address(RVA = "0x99E138", Offset = "0x99E138", VA = "0x99E138")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000671")]
		[Address(RVA = "0x99E0C8", Offset = "0x99E0C8", VA = "0x99E0C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74B440", Offset = "0x74B440")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6000672")]
		[Address(RVA = "0x99E1F0", Offset = "0x99E1F0", VA = "0x99E1F0")]
		public VertexJitter()
		{
		}
	}
	[Token(Token = "0x200012F")]
	public class VertexShakeA : MonoBehaviour
	{
		[Token(Token = "0x20002AA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741148", Offset = "0x741148")]
		private sealed class <AnimateVertexColors>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001477")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001478")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001479")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexShakeA <>4__this;

			[Token(Token = "0x400147A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x400147B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3[][] <copyOfVertices>5__3;

			[Token(Token = "0x170001CA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F33")]
				[Address(RVA = "0x99FB4C", Offset = "0x99FB4C", VA = "0x99FB4C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001CB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F35")]
				[Address(RVA = "0x99FBB4", Offset = "0x99FBB4", VA = "0x99FBB4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F30")]
			[Address(RVA = "0x99F024", Offset = "0x99F024", VA = "0x99F024")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6000F31")]
			[Address(RVA = "0x99F060", Offset = "0x99F060", VA = "0x99F060", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F32")]
			[Address(RVA = "0x99F064", Offset = "0x99F064", VA = "0x99F064", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F34")]
			[Address(RVA = "0x99FB54", Offset = "0x99FB54", VA = "0x99FB54", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float ScaleMultiplier;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RotationMultiplier;

		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x6000673")]
		[Address(RVA = "0x99ED2C", Offset = "0x99ED2C", VA = "0x99ED2C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000674")]
		[Address(RVA = "0x99ED84", Offset = "0x99ED84", VA = "0x99ED84")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000675")]
		[Address(RVA = "0x99EE48", Offset = "0x99EE48", VA = "0x99EE48")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000676")]
		[Address(RVA = "0x99EF0C", Offset = "0x99EF0C", VA = "0x99EF0C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000677")]
		[Address(RVA = "0x99EFA8", Offset = "0x99EFA8", VA = "0x99EFA8")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000678")]
		[Address(RVA = "0x99EF38", Offset = "0x99EF38", VA = "0x99EF38")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74B4A4", Offset = "0x74B4A4")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6000679")]
		[Address(RVA = "0x99F050", Offset = "0x99F050", VA = "0x99F050")]
		public VertexShakeA()
		{
		}
	}
	[Token(Token = "0x2000130")]
	public class VertexShakeB : MonoBehaviour
	{
		[Token(Token = "0x20002AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741158", Offset = "0x741158")]
		private sealed class <AnimateVertexColors>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400147C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400147D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400147E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexShakeB <>4__this;

			[Token(Token = "0x400147F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4001480")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3[][] <copyOfVertices>5__3;

			[Token(Token = "0x170001CC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F39")]
				[Address(RVA = "0x9A0F44", Offset = "0x9A0F44", VA = "0x9A0F44", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001CD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F3B")]
				[Address(RVA = "0x9A0FAC", Offset = "0x9A0FAC", VA = "0x9A0FAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F36")]
			[Address(RVA = "0x99FEB4", Offset = "0x99FEB4", VA = "0x99FEB4")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000F37")]
			[Address(RVA = "0x99FEF8", Offset = "0x99FEF8", VA = "0x99FEF8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F38")]
			[Address(RVA = "0x99FEFC", Offset = "0x99FEFC", VA = "0x99FEFC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F3A")]
			[Address(RVA = "0x9A0F4C", Offset = "0x9A0F4C", VA = "0x9A0F4C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CurveScale;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x600067A")]
		[Address(RVA = "0x99FBBC", Offset = "0x99FBBC", VA = "0x99FBBC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600067B")]
		[Address(RVA = "0x99FC14", Offset = "0x99FC14", VA = "0x99FC14")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600067C")]
		[Address(RVA = "0x99FCD8", Offset = "0x99FCD8", VA = "0x99FCD8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600067D")]
		[Address(RVA = "0x99FD9C", Offset = "0x99FD9C", VA = "0x99FD9C")]
		private void Start()
		{
		}

		[Token(Token = "0x600067E")]
		[Address(RVA = "0x99FE38", Offset = "0x99FE38", VA = "0x99FE38")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x600067F")]
		[Address(RVA = "0x99FDC8", Offset = "0x99FDC8", VA = "0x99FDC8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74B508", Offset = "0x74B508")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6000680")]
		[Address(RVA = "0x99FEE0", Offset = "0x99FEE0", VA = "0x99FEE0")]
		public VertexShakeB()
		{
		}
	}
	[Token(Token = "0x2000131")]
	public class VertexZoom : MonoBehaviour
	{
		[Token(Token = "0x20002AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741168", Offset = "0x741168")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4001481")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<float> modifiedCharScale;

			[Token(Token = "0x4001482")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Comparison<int> <>9__0;

			[Token(Token = "0x6000F3C")]
			[Address(RVA = "0x9A1300", Offset = "0x9A1300", VA = "0x9A1300")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6000F3D")]
			[Address(RVA = "0x9A1308", Offset = "0x9A1308", VA = "0x9A1308")]
			internal int <AnimateVertexColors>b__0(int a, int b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x20002AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741178", Offset = "0x741178")]
		private sealed class <AnimateVertexColors>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001483")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001484")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001485")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexZoom <>4__this;

			[Token(Token = "0x4001486")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass10_0 <>8__1;

			[Token(Token = "0x4001487")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4001488")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TMP_MeshInfo[] <cachedMeshInfoVertexData>5__3;

			[Token(Token = "0x4001489")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<int> <scaleSortingOrder>5__4;

			[Token(Token = "0x170001CE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F41")]
				[Address(RVA = "0x9A2084", Offset = "0x9A2084", VA = "0x9A2084", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001CF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F43")]
				[Address(RVA = "0x9A20EC", Offset = "0x9A20EC", VA = "0x9A20EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F3E")]
			[Address(RVA = "0x9A12BC", Offset = "0x9A12BC", VA = "0x9A12BC")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000F3F")]
			[Address(RVA = "0x9A13CC", Offset = "0x9A13CC", VA = "0x9A13CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F40")]
			[Address(RVA = "0x9A13D0", Offset = "0x9A13D0", VA = "0x9A13D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F42")]
			[Address(RVA = "0x9A208C", Offset = "0x9A208C", VA = "0x9A208C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CurveScale;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x6000681")]
		[Address(RVA = "0x9A0FB4", Offset = "0x9A0FB4", VA = "0x9A0FB4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000682")]
		[Address(RVA = "0x9A100C", Offset = "0x9A100C", VA = "0x9A100C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000683")]
		[Address(RVA = "0x9A10D0", Offset = "0x9A10D0", VA = "0x9A10D0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000684")]
		[Address(RVA = "0x9A1194", Offset = "0x9A1194", VA = "0x9A1194")]
		private void Start()
		{
		}

		[Token(Token = "0x6000685")]
		[Address(RVA = "0x9A1230", Offset = "0x9A1230", VA = "0x9A1230")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000686")]
		[Address(RVA = "0x9A11C0", Offset = "0x9A11C0", VA = "0x9A11C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74B56C", Offset = "0x74B56C")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6000687")]
		[Address(RVA = "0x9A12E8", Offset = "0x9A12E8", VA = "0x9A12E8")]
		public VertexZoom()
		{
		}
	}
	[Token(Token = "0x2000132")]
	public class WarpTextExample : MonoBehaviour
	{
		[Token(Token = "0x20002AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741188", Offset = "0x741188")]
		private sealed class <WarpText>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400148A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400148B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400148C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WarpTextExample <>4__this;

			[Token(Token = "0x400148D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <old_CurveScale>5__2;

			[Token(Token = "0x400148E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AnimationCurve <old_curve>5__3;

			[Token(Token = "0x170001D0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F47")]
				[Address(RVA = "0x9A2FE4", Offset = "0x9A2FE4", VA = "0x9A2FE4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001D1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F49")]
				[Address(RVA = "0x9A304C", Offset = "0x9A304C", VA = "0x9A304C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F44")]
			[Address(RVA = "0x9A2280", Offset = "0x9A2280", VA = "0x9A2280")]
			[DebuggerHidden]
			public <WarpText>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6000F45")]
			[Address(RVA = "0x9A24E4", Offset = "0x9A24E4", VA = "0x9A24E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F46")]
			[Address(RVA = "0x9A24E8", Offset = "0x9A24E8", VA = "0x9A24E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F48")]
			[Address(RVA = "0x9A2FEC", Offset = "0x9A2FEC", VA = "0x9A2FEC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve VertexCurve;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float AngleMultiplier;

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float SpeedMultiplier;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float CurveScale;

		[Token(Token = "0x6000688")]
		[Address(RVA = "0x9A20F4", Offset = "0x9A20F4", VA = "0x9A20F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000689")]
		[Address(RVA = "0x9A215C", Offset = "0x9A215C", VA = "0x9A215C")]
		private void Start()
		{
		}

		[Token(Token = "0x600068A")]
		[Address(RVA = "0x9A21F8", Offset = "0x9A21F8", VA = "0x9A21F8")]
		private AnimationCurve CopyAnimationCurve(AnimationCurve curve)
		{
			return null;
		}

		[Token(Token = "0x600068B")]
		[Address(RVA = "0x9A2188", Offset = "0x9A2188", VA = "0x9A2188")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74B5D0", Offset = "0x74B5D0")]
		private IEnumerator WarpText()
		{
			return null;
		}

		[Token(Token = "0x600068C")]
		[Address(RVA = "0x9A22AC", Offset = "0x9A22AC", VA = "0x9A22AC")]
		public WarpTextExample()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x2000133")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x1700009E")]
		public bool Highlight
		{
			[Token(Token = "0x600068D")]
			[Address(RVA = "0xF95554", Offset = "0xF95554", VA = "0xF95554")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600068E")]
			[Address(RVA = "0xF9555C", Offset = "0xF9555C", VA = "0xF9555C")]
			set
			{
			}
		}

		[Token(Token = "0x600068F")]
		[Address(RVA = "0xF95568", Offset = "0xF95568", VA = "0xF95568")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6000690")]
		[Address(RVA = "0xF95734", Offset = "0xF95734", VA = "0xF95734", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6000691")]
		[Address(RVA = "0xF9575C", Offset = "0xF9575C", VA = "0xF9575C", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6000692")]
		[Address(RVA = "0xF95784", Offset = "0xF95784", VA = "0xF95784")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000693")]
		[Address(RVA = "0xF95634", Offset = "0xF95634", VA = "0xF95634")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6000694")]
		[Address(RVA = "0xF959D8", Offset = "0xF959D8", VA = "0xF959D8")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x2000134")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x1700009F")]
		public bool InRange
		{
			[Token(Token = "0x6000696")]
			[Address(RVA = "0xF96140", Offset = "0xF96140", VA = "0xF96140")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000697")]
			[Address(RVA = "0xF96148", Offset = "0xF96148", VA = "0xF96148")]
			set
			{
			}
		}

		[Token(Token = "0x170000A0")]
		public bool Targeted
		{
			[Token(Token = "0x6000698")]
			[Address(RVA = "0xF962C4", Offset = "0xF962C4", VA = "0xF962C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000699")]
			[Address(RVA = "0xF962CC", Offset = "0xF962CC", VA = "0xF962CC")]
			set
			{
			}
		}

		[Token(Token = "0x600069A")]
		[Address(RVA = "0xF962D8", Offset = "0xF962D8", VA = "0xF962D8", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600069B")]
		[Address(RVA = "0xF96154", Offset = "0xF96154", VA = "0xF96154")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x600069C")]
		[Address(RVA = "0xF96478", Offset = "0xF96478", VA = "0xF96478")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x2000135")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x740178", Offset = "0x740178")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x170000A1")]
		public bool UseSpherecast
		{
			[Token(Token = "0x600069D")]
			[Address(RVA = "0xF96480", Offset = "0xF96480", VA = "0xF96480")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600069E")]
			[Address(RVA = "0xF96488", Offset = "0xF96488", VA = "0xF96488")]
			set
			{
			}
		}

		[Token(Token = "0x600069F")]
		[Address(RVA = "0xF964A4", Offset = "0xF964A4", VA = "0xF964A4", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60006A0")]
		[Address(RVA = "0xF966AC", Offset = "0xF966AC", VA = "0xF966AC", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x60006A1")]
		[Address(RVA = "0xF96FC8", Offset = "0xF96FC8", VA = "0xF96FC8", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x60006A2")]
		[Address(RVA = "0xF97584", Offset = "0xF97584", VA = "0xF97584", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x60006A3")]
		[Address(RVA = "0xF97964", Offset = "0xF97964", VA = "0xF97964")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x60006A4")]
		[Address(RVA = "0xF968F8", Offset = "0xF968F8", VA = "0xF968F8")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60006A5")]
		[Address(RVA = "0xF97A40", Offset = "0xF97A40", VA = "0xF97A40")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60006A6")]
		[Address(RVA = "0xF97E7C", Offset = "0xF97E7C", VA = "0xF97E7C", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x60006A7")]
		[Address(RVA = "0xF97E94", Offset = "0xF97E94", VA = "0xF97E94", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60006A8")]
		[Address(RVA = "0xF97E9C", Offset = "0xF97E9C", VA = "0xF97E9C")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x2000136")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x60006A9")]
		[Address(RVA = "0xF999EC", Offset = "0xF999EC", VA = "0xF999EC")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x60006AA")]
		[Address(RVA = "0xF99A9C", Offset = "0xF99A9C", VA = "0xF99A9C")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x60006AB")]
		[Address(RVA = "0xF99B48", Offset = "0xF99B48", VA = "0xF99B48")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x2000137")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x20002AF")]
		public enum CrosshairState
		{
			[Token(Token = "0x4001490")]
			Disabled,
			[Token(Token = "0x4001491")]
			Enabled,
			[Token(Token = "0x4001492")]
			Targeted
		}

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x60006AC")]
		[Address(RVA = "0xF99B50", Offset = "0xF99B50", VA = "0xF99B50")]
		private void Start()
		{
		}

		[Token(Token = "0x60006AD")]
		[Address(RVA = "0xF963DC", Offset = "0xF963DC", VA = "0xF963DC")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x60006AE")]
		[Address(RVA = "0xF99BB8", Offset = "0xF99BB8", VA = "0xF99BB8")]
		private void Update()
		{
		}

		[Token(Token = "0x60006AF")]
		[Address(RVA = "0xF99C00", Offset = "0xF99C00", VA = "0xF99C00")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x2000138")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x60006B0")]
		[Address(RVA = "0xF9E9DC", Offset = "0xF9E9DC", VA = "0xF9E9DC")]
		private void Start()
		{
		}

		[Token(Token = "0x60006B1")]
		[Address(RVA = "0xF9EAA8", Offset = "0xF9EAA8", VA = "0xF9EAA8")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60006B2")]
		[Address(RVA = "0xF9EAB4", Offset = "0xF9EAB4", VA = "0xF9EAB4")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60006B3")]
		[Address(RVA = "0xF9EAC0", Offset = "0xF9EAC0", VA = "0xF9EAC0")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x2000139")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x60006B4")]
		[Address(RVA = "0xF941E0", Offset = "0xF941E0", VA = "0xF941E0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60006B5")]
		[Address(RVA = "0xF94238", Offset = "0xF94238", VA = "0xF94238")]
		private void Update()
		{
		}

		[Token(Token = "0x60006B6")]
		[Address(RVA = "0xF944DC", Offset = "0xF944DC", VA = "0xF944DC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60006B7")]
		[Address(RVA = "0xF945CC", Offset = "0xF945CC", VA = "0xF945CC")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60006B8")]
		[Address(RVA = "0xF9423C", Offset = "0xF9423C", VA = "0xF9423C")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x60006B9")]
		[Address(RVA = "0xF946BC", Offset = "0xF946BC", VA = "0xF946BC")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x200013A")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x20002B0")]
		public enum ContactTest
		{
			[Token(Token = "0x4001494")]
			PerpenTest,
			[Token(Token = "0x4001495")]
			BackwardsPress
		}

		[Token(Token = "0x400088B")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x400088C")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x170000A2")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x60006BA")]
			[Address(RVA = "0xF94754", Offset = "0xF94754", VA = "0xF94754", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000A3")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x60006BB")]
			[Address(RVA = "0xF9475C", Offset = "0xF9475C", VA = "0xF9475C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0xF94768", Offset = "0xF94768", VA = "0xF94768", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60006BD")]
		[Address(RVA = "0xF948B8", Offset = "0xF948B8", VA = "0xF948B8")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x60006BE")]
		[Address(RVA = "0xF94AC0", Offset = "0xF94AC0", VA = "0xF94AC0", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x60006BF")]
		[Address(RVA = "0xF95004", Offset = "0xF95004", VA = "0xF95004")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x60006C0")]
		[Address(RVA = "0xF94F1C", Offset = "0xF94F1C", VA = "0xF94F1C")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60006C1")]
		[Address(RVA = "0xF95154", Offset = "0xF95154", VA = "0xF95154")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0xF95248", Offset = "0xF95248", VA = "0xF95248")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60006C3")]
		[Address(RVA = "0xF95374", Offset = "0xF95374", VA = "0xF95374")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x200013B")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x746B28", Offset = "0x746B28")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x746B38", Offset = "0x746B38")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x170000A4")]
		public Collider Collider
		{
			[Token(Token = "0x60006C4")]
			[Address(RVA = "0xF95460", Offset = "0xF95460", VA = "0xF95460", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74B634", Offset = "0x74B634")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006C5")]
			[Address(RVA = "0xF95468", Offset = "0xF95468", VA = "0xF95468")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74B644", Offset = "0x74B644")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A5")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x60006C6")]
			[Address(RVA = "0xF95470", Offset = "0xF95470", VA = "0xF95470", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74B654", Offset = "0x74B654")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006C7")]
			[Address(RVA = "0xF95478", Offset = "0xF95478", VA = "0xF95478")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74B664", Offset = "0x74B664")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A6")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60006C8")]
			[Address(RVA = "0xF95480", Offset = "0xF95480", VA = "0xF95480", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x60006C9")]
		[Address(RVA = "0xF954D0", Offset = "0xF954D0", VA = "0xF954D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006CA")]
		[Address(RVA = "0xF9554C", Offset = "0xF9554C", VA = "0xF9554C")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x200013C")]
	public interface ColliderZone
	{
		[Token(Token = "0x170000A7")]
		Collider Collider
		{
			[Token(Token = "0x60006CB")]
			get;
		}

		[Token(Token = "0x170000A8")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x60006CC")]
			get;
		}

		[Token(Token = "0x170000A9")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60006CD")]
			get;
		}
	}
	[Token(Token = "0x200013D")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x60006CE")]
		[Address(RVA = "0xF94A1C", Offset = "0xF94A1C", VA = "0xF94A1C")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x200013E")]
	public enum InteractionType
	{
		[Token(Token = "0x40008A0")]
		Enter,
		[Token(Token = "0x40008A1")]
		Stay,
		[Token(Token = "0x40008A2")]
		Exit
	}
	[Token(Token = "0x200013F")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x20002B1")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4001497")]
			Mesh,
			[Token(Token = "0x4001498")]
			Skeleton,
			[Token(Token = "0x4001499")]
			Both
		}

		[Token(Token = "0x20002B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741198", Offset = "0x741198")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400149A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400149B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400149C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x170001D2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F4D")]
				[Address(RVA = "0xF9AAF4", Offset = "0xF9AAF4", VA = "0xF9AAF4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001D3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F4F")]
				[Address(RVA = "0xF9AB5C", Offset = "0xF9AB5C", VA = "0xF9AB5C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F4A")]
			[Address(RVA = "0xF9A5E8", Offset = "0xF9A5E8", VA = "0xF9A5E8")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6000F4B")]
			[Address(RVA = "0xF9A8D4", Offset = "0xF9A8D4", VA = "0xF9A8D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F4C")]
			[Address(RVA = "0xF9A8D8", Offset = "0xF9A8D8", VA = "0xF9A8D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F4E")]
			[Address(RVA = "0xF9AAFC", Offset = "0xF9AAFC", VA = "0xF9AAFC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008A3")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x746B68", Offset = "0x746B68")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x170000AA")]
		public OVRHand RightHand
		{
			[Token(Token = "0x60006CF")]
			[Address(RVA = "0xF98AF0", Offset = "0xF98AF0", VA = "0xF98AF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006D0")]
			[Address(RVA = "0xF99C08", Offset = "0xF99C08", VA = "0xF99C08")]
			private set
			{
			}
		}

		[Token(Token = "0x170000AB")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x60006D1")]
			[Address(RVA = "0xF99670", Offset = "0xF99670", VA = "0xF99670")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006D2")]
			[Address(RVA = "0xF99C70", Offset = "0xF99C70", VA = "0xF99C70")]
			private set
			{
			}
		}

		[Token(Token = "0x170000AC")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x60006D3")]
			[Address(RVA = "0xF99CD8", Offset = "0xF99CD8", VA = "0xF99CD8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006D4")]
			[Address(RVA = "0xF99D10", Offset = "0xF99D10", VA = "0xF99D10")]
			private set
			{
			}
		}

		[Token(Token = "0x170000AD")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x60006D5")]
			[Address(RVA = "0xF99D78", Offset = "0xF99D78", VA = "0xF99D78")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006D6")]
			[Address(RVA = "0xF99DB0", Offset = "0xF99DB0", VA = "0xF99DB0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000AE")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x60006D7")]
			[Address(RVA = "0xF99E18", Offset = "0xF99E18", VA = "0xF99E18")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006D8")]
			[Address(RVA = "0xF99E50", Offset = "0xF99E50", VA = "0xF99E50")]
			private set
			{
			}
		}

		[Token(Token = "0x170000AF")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x60006D9")]
			[Address(RVA = "0xF98ABC", Offset = "0xF98ABC", VA = "0xF98ABC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006DA")]
			[Address(RVA = "0xF99EB8", Offset = "0xF99EB8", VA = "0xF99EB8")]
			private set
			{
			}
		}

		[Token(Token = "0x170000B0")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x60006DB")]
			[Address(RVA = "0xF9963C", Offset = "0xF9963C", VA = "0xF9963C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006DC")]
			[Address(RVA = "0xF99F1C", Offset = "0xF99F1C", VA = "0xF99F1C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000B1")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x60006DD")]
			[Address(RVA = "0xF99F80", Offset = "0xF99F80", VA = "0xF99F80")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006DE")]
			[Address(RVA = "0xF99FB4", Offset = "0xF99FB4", VA = "0xF99FB4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000B2")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x60006DF")]
			[Address(RVA = "0xF9A018", Offset = "0xF9A018", VA = "0xF9A018")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006E0")]
			[Address(RVA = "0xF9A04C", Offset = "0xF9A04C", VA = "0xF9A04C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000B3")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x60006E1")]
			[Address(RVA = "0xF9A0B0", Offset = "0xF9A0B0", VA = "0xF9A0B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006E2")]
			[Address(RVA = "0xF9A0E4", Offset = "0xF9A0E4", VA = "0xF9A0E4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000B4")]
		public static HandsManager Instance
		{
			[Token(Token = "0x60006E3")]
			[Address(RVA = "0xF9A148", Offset = "0xF9A148", VA = "0xF9A148")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74B674", Offset = "0x74B674")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006E4")]
			[Address(RVA = "0xF9A198", Offset = "0xF9A198", VA = "0xF9A198")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74B684", Offset = "0x74B684")]
			private set
			{
			}
		}

		[Token(Token = "0x60006E5")]
		[Address(RVA = "0xF9A1EC", Offset = "0xF9A1EC", VA = "0xF9A1EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006E6")]
		[Address(RVA = "0xF9A560", Offset = "0xF9A560", VA = "0xF9A560")]
		private void Update()
		{
		}

		[Token(Token = "0x60006E7")]
		[Address(RVA = "0xF9A4F0", Offset = "0xF9A4F0", VA = "0xF9A4F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74B694", Offset = "0x74B694")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x60006E8")]
		[Address(RVA = "0xF95F94", Offset = "0xF95F94", VA = "0xF95F94")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x60006E9")]
		[Address(RVA = "0xF9A614", Offset = "0xF9A614", VA = "0xF9A614")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x60006EA")]
		[Address(RVA = "0xF996A8", Offset = "0xF996A8", VA = "0xF996A8")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x60006EB")]
		[Address(RVA = "0xF9892C", Offset = "0xF9892C", VA = "0xF9892C")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x60006EC")]
		[Address(RVA = "0xF9A7F4", Offset = "0xF9A7F4", VA = "0xF9A7F4")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x2000140")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002B3")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6000F50")]
			[Address(RVA = "0xF9B2AC", Offset = "0xF9B2AC", VA = "0xF9B2AC")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x170000B5")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x60006ED")]
			[Address(RVA = "0xF9AB64", Offset = "0xF9AB64", VA = "0xF9AB64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B6")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x60006EE")]
			[Address(RVA = "0xF9AB6C", Offset = "0xF9AB6C", VA = "0xF9AB6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B7")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x60006EF")]
			[Address(RVA = "0xF9AB74", Offset = "0xF9AB74", VA = "0xF9AB74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B8")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x60006F0")]
			[Address(RVA = "0xF9AB7C", Offset = "0xF9AB7C", VA = "0xF9AB7C", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000010")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x60006F1")]
			[Address(RVA = "0xF9AB84", Offset = "0xF9AB84", VA = "0xF9AB84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74B6F8", Offset = "0x74B6F8")]
			add
			{
			}
			[Token(Token = "0x60006F2")]
			[Address(RVA = "0xF9AC28", Offset = "0xF9AC28", VA = "0xF9AC28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74B708", Offset = "0x74B708")]
			remove
			{
			}
		}

		[Token(Token = "0x14000011")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x60006F4")]
			[Address(RVA = "0xF9AD40", Offset = "0xF9AD40", VA = "0xF9AD40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74B718", Offset = "0x74B718")]
			add
			{
			}
			[Token(Token = "0x60006F5")]
			[Address(RVA = "0xF9ADE4", Offset = "0xF9ADE4", VA = "0xF9ADE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74B728", Offset = "0x74B728")]
			remove
			{
			}
		}

		[Token(Token = "0x14000012")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x60006F7")]
			[Address(RVA = "0xF9AEFC", Offset = "0xF9AEFC", VA = "0xF9AEFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74B738", Offset = "0x74B738")]
			add
			{
			}
			[Token(Token = "0x60006F8")]
			[Address(RVA = "0xF9AFA0", Offset = "0xF9AFA0", VA = "0xF9AFA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74B748", Offset = "0x74B748")]
			remove
			{
			}
		}

		[Token(Token = "0x60006F3")]
		[Address(RVA = "0xF9ACCC", Offset = "0xF9ACCC", VA = "0xF9ACCC", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60006F6")]
		[Address(RVA = "0xF9AE88", Offset = "0xF9AE88", VA = "0xF9AE88", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60006F9")]
		[Address(RVA = "0xF9B044", Offset = "0xF9B044", VA = "0xF9B044", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60006FA")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x60006FB")]
		[Address(RVA = "0xF94854", Offset = "0xF94854", VA = "0xF94854", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60006FC")]
		[Address(RVA = "0xF9B180", Offset = "0xF9B180", VA = "0xF9B180", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60006FD")]
		[Address(RVA = "0xF95458", Offset = "0xF95458", VA = "0xF95458")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x2000141")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x40008BB")]
		None,
		[Token(Token = "0x40008BC")]
		Proximity,
		[Token(Token = "0x40008BD")]
		Contact,
		[Token(Token = "0x40008BE")]
		Action
	}
	[Token(Token = "0x2000142")]
	public enum InteractableState
	{
		[Token(Token = "0x40008C0")]
		Default,
		[Token(Token = "0x40008C1")]
		ProximityState,
		[Token(Token = "0x40008C2")]
		ContactState,
		[Token(Token = "0x40008C3")]
		ActionState
	}
	[Token(Token = "0x2000143")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x60006FE")]
		[Address(RVA = "0xF950B0", Offset = "0xF950B0", VA = "0xF950B0")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x2000144")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x170000B9")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x60006FF")]
			[Address(RVA = "0xF9B2FC", Offset = "0xF9B2FC", VA = "0xF9B2FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000700")]
		[Address(RVA = "0xF9B0B8", Offset = "0xF9B0B8", VA = "0xF9B0B8")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000701")]
		[Address(RVA = "0xF9B1E4", Offset = "0xF9B1E4", VA = "0xF9B1E4")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000702")]
		[Address(RVA = "0xF9B364", Offset = "0xF9B364", VA = "0xF9B364")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x2000145")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x20002B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7411A8", Offset = "0x7411A8")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400149D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400149E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400149F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x40014A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x40014A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x40014A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x40014A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x40014A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x40014A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x170001D4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F55")]
				[Address(RVA = "0xF9C3A4", Offset = "0xF9C3A4", VA = "0xF9C3A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001D5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F57")]
				[Address(RVA = "0xF9C40C", Offset = "0xF9C40C", VA = "0xF9C40C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F51")]
			[Address(RVA = "0xF9BE68", Offset = "0xF9BE68", VA = "0xF9BE68")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6000F52")]
			[Address(RVA = "0xF9BF94", Offset = "0xF9BF94", VA = "0xF9BF94", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F53")]
			[Address(RVA = "0xF9C008", Offset = "0xF9C008", VA = "0xF9C008", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F54")]
			[Address(RVA = "0xF9BFB0", Offset = "0xF9BFB0", VA = "0xF9BFB0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000F56")]
			[Address(RVA = "0xF9C3AC", Offset = "0xF9C3AC", VA = "0xF9C3AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6000704")]
		[Address(RVA = "0xF9BD60", Offset = "0xF9BD60", VA = "0xF9BD60")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000705")]
		[Address(RVA = "0xF9BDDC", Offset = "0xF9BDDC", VA = "0xF9BDDC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74B758", Offset = "0x74B758")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6000706")]
		[Address(RVA = "0xF9BE94", Offset = "0xF9BE94", VA = "0xF9BE94")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x6000707")]
		[Address(RVA = "0xF9BF8C", Offset = "0xF9BF8C", VA = "0xF9BF8C")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x2000146")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x170000BA")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x6000708")]
			[Address(RVA = "0xF98368", Offset = "0xF98368", VA = "0xF98368")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000709")]
		[Address(RVA = "0xF984D0", Offset = "0xF984D0", VA = "0xF984D0")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x600070A")]
		[Address(RVA = "0xF9C414", Offset = "0xF9C414", VA = "0xF9C414")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x600070B")]
		[Address(RVA = "0xF9C4C0", Offset = "0xF9C4C0", VA = "0xF9C4C0")]
		private void Update()
		{
		}

		[Token(Token = "0x600070C")]
		[Address(RVA = "0xF9C788", Offset = "0xF9C788", VA = "0xF9C788")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x600070D")]
		[Address(RVA = "0xF9C7D0", Offset = "0xF9C7D0", VA = "0xF9C7D0")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600070E")]
		[Address(RVA = "0xF9CA20", Offset = "0xF9CA20", VA = "0xF9CA20")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x600070F")]
		[Address(RVA = "0xF9CB4C", Offset = "0xF9CB4C", VA = "0xF9CB4C")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x2000147")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x20002B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7411B8", Offset = "0x7411B8")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x170001D6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F5B")]
				[Address(RVA = "0xF998B8", Offset = "0xF998B8", VA = "0xF998B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001D7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F5D")]
				[Address(RVA = "0xF99920", Offset = "0xF99920", VA = "0xF99920", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F58")]
			[Address(RVA = "0xF985EC", Offset = "0xF985EC", VA = "0xF985EC")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6000F59")]
			[Address(RVA = "0xF992D4", Offset = "0xF992D4", VA = "0xF992D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F5A")]
			[Address(RVA = "0xF992D8", Offset = "0xF992D8", VA = "0xF992D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F5C")]
			[Address(RVA = "0xF998C0", Offset = "0xF998C0", VA = "0xF998C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008D3")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x170000BB")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000710")]
			[Address(RVA = "0xF9824C", Offset = "0xF9824C", VA = "0xF9824C", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170000BC")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6000711")]
			[Address(RVA = "0xF98254", Offset = "0xF98254", VA = "0xF98254", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170000BD")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6000712")]
			[Address(RVA = "0xF9825C", Offset = "0xF9825C", VA = "0xF9825C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000BE")]
		public override bool EnableState
		{
			[Token(Token = "0x6000713")]
			[Address(RVA = "0xF98264", Offset = "0xF98264", VA = "0xF98264", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000714")]
			[Address(RVA = "0xF98290", Offset = "0xF98290", VA = "0xF98290", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000715")]
		[Address(RVA = "0xF982CC", Offset = "0xF982CC", VA = "0xF982CC", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000716")]
		[Address(RVA = "0xF9857C", Offset = "0xF9857C", VA = "0xF9857C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74B7BC", Offset = "0x74B7BC")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x6000717")]
		[Address(RVA = "0xF98618", Offset = "0xF98618", VA = "0xF98618")]
		private void Update()
		{
		}

		[Token(Token = "0x6000718")]
		[Address(RVA = "0xF98B28", Offset = "0xF98B28", VA = "0xF98B28")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6000719")]
		[Address(RVA = "0xF98DA0", Offset = "0xF98DA0", VA = "0xF98DA0")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x600071A")]
		[Address(RVA = "0xF98EE0", Offset = "0xF98EE0", VA = "0xF98EE0", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x600071B")]
		[Address(RVA = "0xF991A8", Offset = "0xF991A8", VA = "0xF991A8", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x600071C")]
		[Address(RVA = "0xF991AC", Offset = "0xF991AC", VA = "0xF991AC", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x600071D")]
		[Address(RVA = "0xF991B0", Offset = "0xF991B0", VA = "0xF991B0")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x2000148")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x746BF8", Offset = "0x746BF8")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x746C08", Offset = "0x746C08")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x746C18", Offset = "0x746C18")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x170000BF")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x600071E")]
			[Address(RVA = "0xF99928", Offset = "0xF99928", VA = "0xF99928", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74B820", Offset = "0x74B820")]
			get
			{
				return null;
			}
			[Token(Token = "0x600071F")]
			[Address(RVA = "0xF99930", Offset = "0xF99930", VA = "0xF99930")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74B830", Offset = "0x74B830")]
			set
			{
			}
		}

		[Token(Token = "0x170000C0")]
		public bool EnableState
		{
			[Token(Token = "0x6000720")]
			[Address(RVA = "0xF99938", Offset = "0xF99938", VA = "0xF99938", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000721")]
			[Address(RVA = "0xF99954", Offset = "0xF99954", VA = "0xF99954", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170000C1")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6000722")]
			[Address(RVA = "0xF99974", Offset = "0xF99974", VA = "0xF99974", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74B840", Offset = "0x74B840")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000723")]
			[Address(RVA = "0xF9997C", Offset = "0xF9997C", VA = "0xF9997C", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74B850", Offset = "0x74B850")]
			set
			{
			}
		}

		[Token(Token = "0x170000C2")]
		public float SphereRadius
		{
			[Token(Token = "0x6000724")]
			[Address(RVA = "0xF99988", Offset = "0xF99988", VA = "0xF99988")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74B860", Offset = "0x74B860")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000725")]
			[Address(RVA = "0xF99990", Offset = "0xF99990", VA = "0xF99990")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74B870", Offset = "0x74B870")]
			private set
			{
			}
		}

		[Token(Token = "0x6000726")]
		[Address(RVA = "0xF99998", Offset = "0xF99998", VA = "0xF99998")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000727")]
		[Address(RVA = "0xF999E0", Offset = "0xF999E0", VA = "0xF999E0", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000728")]
		[Address(RVA = "0xF999E4", Offset = "0xF999E4", VA = "0xF999E4")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x2000149")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x40008E3")]
		None = 0,
		[Token(Token = "0x40008E4")]
		Ray = 1,
		[Token(Token = "0x40008E5")]
		Poke = 4,
		[Token(Token = "0x40008E6")]
		All = -1
	}
	[Token(Token = "0x200014A")]
	public enum ToolInputState
	{
		[Token(Token = "0x40008E8")]
		Inactive,
		[Token(Token = "0x40008E9")]
		PrimaryInputDown,
		[Token(Token = "0x40008EA")]
		PrimaryInputDownStay,
		[Token(Token = "0x40008EB")]
		PrimaryInputUp
	}
	[Token(Token = "0x200014B")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6000729")]
		[Address(RVA = "0xF99164", Offset = "0xF99164", VA = "0xF99164")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x200014C")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x746C28", Offset = "0x746C28")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x746C38", Offset = "0x746C38")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x746C48", Offset = "0x746C48")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x170000C3")]
		public Transform ToolTransform
		{
			[Token(Token = "0x600072A")]
			[Address(RVA = "0xF9536C", Offset = "0xF9536C", VA = "0xF9536C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C4")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x600072B")]
			[Address(RVA = "0xF9B3E0", Offset = "0xF9B3E0", VA = "0xF9B3E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74B880", Offset = "0x74B880")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600072C")]
			[Address(RVA = "0xF9B3E8", Offset = "0xF9B3E8", VA = "0xF9B3E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74B890", Offset = "0x74B890")]
			set
			{
			}
		}

		[Token(Token = "0x170000C5")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x600072D")]
			get;
		}

		[Token(Token = "0x170000C6")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x600072E")]
			get;
		}

		[Token(Token = "0x170000C7")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x600072F")]
			get;
		}

		[Token(Token = "0x170000C8")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6000730")]
			[Address(RVA = "0xF9B3F4", Offset = "0xF9B3F4", VA = "0xF9B3F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74B8A0", Offset = "0x74B8A0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000731")]
			[Address(RVA = "0xF9B400", Offset = "0xF9B400", VA = "0xF9B400")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74B8B0", Offset = "0x74B8B0")]
			protected set
			{
			}
		}

		[Token(Token = "0x170000C9")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x6000732")]
			[Address(RVA = "0xF9B40C", Offset = "0xF9B40C", VA = "0xF9B40C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74B8C0", Offset = "0x74B8C0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000733")]
			[Address(RVA = "0xF9B418", Offset = "0xF9B418", VA = "0xF9B418")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74B8D0", Offset = "0x74B8D0")]
			protected set
			{
			}
		}

		[Token(Token = "0x170000CA")]
		public abstract bool EnableState
		{
			[Token(Token = "0x6000738")]
			get;
			[Token(Token = "0x6000739")]
			set;
		}

		[Token(Token = "0x6000734")]
		[Address(RVA = "0xF9B424", Offset = "0xF9B424", VA = "0xF9B424")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000735")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x6000736")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x6000737")]
		public abstract void DeFocus();

		[Token(Token = "0x600073A")]
		public abstract void Initialize();

		[Token(Token = "0x600073B")]
		[Address(RVA = "0xF9B42C", Offset = "0xF9B42C", VA = "0xF9B42C")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x600073C")]
		[Address(RVA = "0xF9B47C", Offset = "0xF9B47C", VA = "0xF9B47C")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x600073D")]
		[Address(RVA = "0xF9B4D4", Offset = "0xF9B4D4", VA = "0xF9B4D4", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x600073E")]
		[Address(RVA = "0xF9B718", Offset = "0xF9B718", VA = "0xF9B718", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0xF991C4", Offset = "0xF991C4", VA = "0xF991C4")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x200014D")]
	public interface InteractableToolView
	{
		[Token(Token = "0x170000CB")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6000740")]
			get;
		}

		[Token(Token = "0x170000CC")]
		bool EnableState
		{
			[Token(Token = "0x6000742")]
			get;
			[Token(Token = "0x6000743")]
			set;
		}

		[Token(Token = "0x170000CD")]
		bool ToolActivateState
		{
			[Token(Token = "0x6000744")]
			get;
			[Token(Token = "0x6000745")]
			set;
		}

		[Token(Token = "0x6000741")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x200014E")]
	public class PinchStateModule
	{
		[Token(Token = "0x20002B6")]
		private enum PinchState
		{
			[Token(Token = "0x40014AA")]
			None,
			[Token(Token = "0x40014AB")]
			PinchDown,
			[Token(Token = "0x40014AC")]
			PinchStay,
			[Token(Token = "0x40014AD")]
			PinchUp
		}

		[Token(Token = "0x40008F8")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x170000CE")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x6000746")]
			[Address(RVA = "0xF9EAC8", Offset = "0xF9EAC8", VA = "0xF9EAC8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000CF")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x6000747")]
			[Address(RVA = "0xF9EB54", Offset = "0xF9EB54", VA = "0xF9EB54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D0")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x6000748")]
			[Address(RVA = "0xF9EBE0", Offset = "0xF9EBE0", VA = "0xF9EBE0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000749")]
		[Address(RVA = "0xF9EC6C", Offset = "0xF9EC6C", VA = "0xF9EC6C")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x600074A")]
		[Address(RVA = "0xF9EC98", Offset = "0xF9EC98", VA = "0xF9EC98")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x200014F")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x40008FB")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x40008FC")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x40008FD")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x40008FE")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x40008FF")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x746C68", Offset = "0x746C68")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x170000D1")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x600074B")]
			[Address(RVA = "0xF9EF38", Offset = "0xF9EF38", VA = "0xF9EF38", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170000D2")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x600074C")]
			[Address(RVA = "0xF9EF40", Offset = "0xF9EF40", VA = "0xF9EF40", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170000D3")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x600074D")]
			[Address(RVA = "0xF9EFA8", Offset = "0xF9EFA8", VA = "0xF9EFA8", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D4")]
		public override bool EnableState
		{
			[Token(Token = "0x600074E")]
			[Address(RVA = "0xF9EFB0", Offset = "0xF9EFB0", VA = "0xF9EFB0", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600074F")]
			[Address(RVA = "0xF9EFF4", Offset = "0xF9EFF4", VA = "0xF9EFF4", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0xF9F068", Offset = "0xF9F068", VA = "0xF9F068", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0xF9F0C0", Offset = "0xF9F0C0", VA = "0xF9F0C0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000752")]
		[Address(RVA = "0xF9F15C", Offset = "0xF9F15C", VA = "0xF9F15C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000753")]
		[Address(RVA = "0xF9F45C", Offset = "0xF9F45C", VA = "0xF9F45C")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0xF9F558", Offset = "0xF9F558", VA = "0xF9F558", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0xF9F8BC", Offset = "0xF9F8BC", VA = "0xF9F8BC")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0xF9FA60", Offset = "0xF9FA60", VA = "0xF9FA60")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0xF9FB88", Offset = "0xF9FB88", VA = "0xF9FB88")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6000758")]
		[Address(RVA = "0xF9FEC0", Offset = "0xF9FEC0", VA = "0xF9FEC0")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0xFA02D0", Offset = "0xFA02D0", VA = "0xFA02D0", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x600075A")]
		[Address(RVA = "0xFA03A4", Offset = "0xFA03A4", VA = "0xFA03A4", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x600075B")]
		[Address(RVA = "0xFA03D8", Offset = "0xFA03D8", VA = "0xFA03D8")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x2000150")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x400090B")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x400090C")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x746CDC", Offset = "0x746CDC")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x170000D5")]
		public bool EnableState
		{
			[Token(Token = "0x600075C")]
			[Address(RVA = "0xF9EFD8", Offset = "0xF9EFD8", VA = "0xF9EFD8", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600075D")]
			[Address(RVA = "0xF9F010", Offset = "0xF9F010", VA = "0xF9F010", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170000D6")]
		public bool ToolActivateState
		{
			[Token(Token = "0x600075E")]
			[Address(RVA = "0xFA0490", Offset = "0xFA0490", VA = "0xFA0490", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600075F")]
			[Address(RVA = "0xF9F420", Offset = "0xF9F420", VA = "0xF9F420", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x170000D7")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6000761")]
			[Address(RVA = "0xFA06C0", Offset = "0xFA06C0", VA = "0xFA06C0", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74B8E0", Offset = "0x74B8E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000762")]
			[Address(RVA = "0xFA06C8", Offset = "0xFA06C8", VA = "0xFA06C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74B8F0", Offset = "0x74B8F0")]
			set
			{
			}
		}

		[Token(Token = "0x6000760")]
		[Address(RVA = "0xFA0498", Offset = "0xFA0498", VA = "0xFA0498")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000763")]
		[Address(RVA = "0xFA0304", Offset = "0xFA0304", VA = "0xFA0304", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000764")]
		[Address(RVA = "0xFA06D0", Offset = "0xFA06D0", VA = "0xFA06D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000765")]
		[Address(RVA = "0xFA09FC", Offset = "0xFA09FC", VA = "0xFA09FC")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000766")]
		[Address(RVA = "0xFA0BEC", Offset = "0xFA0BEC", VA = "0xFA0BEC")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x2000151")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x170000D8")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6000767")]
			[Address(RVA = "0xF97EBC", Offset = "0xF97EBC", VA = "0xF97EBC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000768")]
			[Address(RVA = "0xF97EC4", Offset = "0xF97EC4", VA = "0xF97EC4")]
			set
			{
			}
		}

		[Token(Token = "0x170000D9")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x6000769")]
			[Address(RVA = "0xF97F4C", Offset = "0xF97F4C", VA = "0xF97F4C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600076A")]
			[Address(RVA = "0xF97F54", Offset = "0xF97F54", VA = "0xF97F54")]
			set
			{
			}
		}

		[Token(Token = "0x600076B")]
		[Address(RVA = "0xF97FC0", Offset = "0xF97FC0", VA = "0xF97FC0")]
		private void Start()
		{
		}

		[Token(Token = "0x600076C")]
		[Address(RVA = "0xF98224", Offset = "0xF98224", VA = "0xF98224")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x600076D")]
		[Address(RVA = "0xF98234", Offset = "0xF98234", VA = "0xF98234")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x600076E")]
		[Address(RVA = "0xF98244", Offset = "0xF98244", VA = "0xF98244")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x2000152")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x600076F")]
		[Address(RVA = "0xF95AC4", Offset = "0xF95AC4", VA = "0xF95AC4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0xF95AC8", Offset = "0xF95AC8", VA = "0xF95AC8")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000771")]
		[Address(RVA = "0xF95B48", Offset = "0xF95B48", VA = "0xF95B48")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000772")]
		[Address(RVA = "0xF95C38", Offset = "0xF95C38", VA = "0xF95C38")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000773")]
		[Address(RVA = "0xF95D28", Offset = "0xF95D28", VA = "0xF95D28")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000774")]
		[Address(RVA = "0xF95DE8", Offset = "0xF95DE8", VA = "0xF95DE8")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000775")]
		[Address(RVA = "0xF95ED8", Offset = "0xF95ED8", VA = "0xF95ED8")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000776")]
		[Address(RVA = "0xF95F20", Offset = "0xF95F20", VA = "0xF95F20")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000777")]
		[Address(RVA = "0xF9607C", Offset = "0xF9607C", VA = "0xF9607C")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000778")]
		[Address(RVA = "0xF960EC", Offset = "0xF960EC", VA = "0xF960EC")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x2000153")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x6000779")]
		[Address(RVA = "0xF960F4", Offset = "0xF960F4", VA = "0xF960F4")]
		private void Start()
		{
		}

		[Token(Token = "0x600077A")]
		[Address(RVA = "0xF960F8", Offset = "0xF960F8", VA = "0xF960F8")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x600077B")]
		[Address(RVA = "0xF960B0", Offset = "0xF960B0", VA = "0xF960B0")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x600077C")]
		[Address(RVA = "0xF96138", Offset = "0xF96138", VA = "0xF96138")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x2000154")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x20002B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7411C8", Offset = "0x7411C8")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x40014B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x40014B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x40014B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x170001D8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F61")]
				[Address(RVA = "0xF9E96C", Offset = "0xF9E96C", VA = "0xF9E96C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001D9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F63")]
				[Address(RVA = "0xF9E9D4", Offset = "0xF9E9D4", VA = "0xF9E9D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F5E")]
			[Address(RVA = "0xF9E6A0", Offset = "0xF9E6A0", VA = "0xF9E6A0")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6000F5F")]
			[Address(RVA = "0xF9E77C", Offset = "0xF9E77C", VA = "0xF9E77C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F60")]
			[Address(RVA = "0xF9E780", Offset = "0xF9E780", VA = "0xF9E780", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F62")]
			[Address(RVA = "0xF9E974", Offset = "0xF9E974", VA = "0xF9E974", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400091C")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x400091D")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x600077D")]
		[Address(RVA = "0xF9E2B8", Offset = "0xF9E2B8", VA = "0xF9E2B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600077E")]
		[Address(RVA = "0xF9E350", Offset = "0xF9E350", VA = "0xF9E350")]
		private void Update()
		{
		}

		[Token(Token = "0x600077F")]
		[Address(RVA = "0xF9E5DC", Offset = "0xF9E5DC", VA = "0xF9E5DC")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000780")]
		[Address(RVA = "0xF9E56C", Offset = "0xF9E56C", VA = "0xF9E56C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74B900", Offset = "0x74B900")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x6000781")]
		[Address(RVA = "0xF9E6CC", Offset = "0xF9E6CC", VA = "0xF9E6CC")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x2000155")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x20002B8")]
		public enum SelectionState
		{
			[Token(Token = "0x40014B5")]
			Off,
			[Token(Token = "0x40014B6")]
			Selected,
			[Token(Token = "0x40014B7")]
			Highlighted
		}

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x170000DA")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x6000782")]
			[Address(RVA = "0xFA0C4C", Offset = "0xFA0C4C", VA = "0xFA0C4C")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x6000783")]
			[Address(RVA = "0xFA0C54", Offset = "0xFA0C54", VA = "0xFA0C54")]
			set
			{
			}
		}

		[Token(Token = "0x6000784")]
		[Address(RVA = "0xFA0DDC", Offset = "0xFA0DDC", VA = "0xFA0DDC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000785")]
		[Address(RVA = "0xFA0F9C", Offset = "0xFA0F9C", VA = "0xFA0F9C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000786")]
		[Address(RVA = "0xFA0CDC", Offset = "0xFA0CDC", VA = "0xFA0CDC")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x6000787")]
		[Address(RVA = "0xFA108C", Offset = "0xFA108C", VA = "0xFA108C")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x2000156")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x20002B9")]
		public enum SegmentType
		{
			[Token(Token = "0x40014B9")]
			Straight,
			[Token(Token = "0x40014BA")]
			LeftTurn,
			[Token(Token = "0x40014BB")]
			RightTurn,
			[Token(Token = "0x40014BC")]
			Switch
		}

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4000932")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x4000933")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x746DBC", Offset = "0x746DBC")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x170000DB")]
		public float StartDistance
		{
			[Token(Token = "0x6000789")]
			[Address(RVA = "0xFA10F8", Offset = "0xFA10F8", VA = "0xFA10F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74B964", Offset = "0x74B964")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600078A")]
			[Address(RVA = "0xFA1100", Offset = "0xFA1100", VA = "0xFA1100")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74B974", Offset = "0x74B974")]
			set
			{
			}
		}

		[Token(Token = "0x170000DC")]
		public float GridSize
		{
			[Token(Token = "0x600078B")]
			[Address(RVA = "0xFA1108", Offset = "0xFA1108", VA = "0xFA1108")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600078C")]
			[Address(RVA = "0xFA1110", Offset = "0xFA1110", VA = "0xFA1110")]
			private set
			{
			}
		}

		[Token(Token = "0x170000DD")]
		public int SubDivCount
		{
			[Token(Token = "0x600078D")]
			[Address(RVA = "0xFA1118", Offset = "0xFA1118", VA = "0xFA1118")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600078E")]
			[Address(RVA = "0xFA1120", Offset = "0xFA1120", VA = "0xFA1120")]
			set
			{
			}
		}

		[Token(Token = "0x170000DE")]
		public SegmentType Type
		{
			[Token(Token = "0x600078F")]
			[Address(RVA = "0xFA1128", Offset = "0xFA1128", VA = "0xFA1128")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x170000DF")]
		public Pose EndPose
		{
			[Token(Token = "0x6000790")]
			[Address(RVA = "0xFA1130", Offset = "0xFA1130", VA = "0xFA1130")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E0")]
		public float Radius
		{
			[Token(Token = "0x6000791")]
			[Address(RVA = "0xFA15C4", Offset = "0xFA15C4", VA = "0xFA15C4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000E1")]
		public float SegmentLength
		{
			[Token(Token = "0x6000793")]
			[Address(RVA = "0xFA1198", Offset = "0xFA1198", VA = "0xFA1198")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000792")]
		[Address(RVA = "0xFA15D4", Offset = "0xFA15D4", VA = "0xFA15D4")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x6000794")]
		[Address(RVA = "0xFA15EC", Offset = "0xFA15EC", VA = "0xFA15EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000795")]
		[Address(RVA = "0xFA11D8", Offset = "0xFA11D8", VA = "0xFA11D8")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0xFA15F0", Offset = "0xFA15F0", VA = "0xFA15F0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000797")]
		[Address(RVA = "0xFA15F4", Offset = "0xFA15F4", VA = "0xFA15F4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000798")]
		[Address(RVA = "0xFA1660", Offset = "0xFA1660", VA = "0xFA1660")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x6000799")]
		[Address(RVA = "0xFA21E8", Offset = "0xFA21E8", VA = "0xFA21E8")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x600079A")]
		[Address(RVA = "0xFA24F4", Offset = "0xFA24F4", VA = "0xFA24F4")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x2000157")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x20002BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7411D8", Offset = "0x7411D8")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x40014C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x40014C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x170001DA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F67")]
				[Address(RVA = "0xFA30FC", Offset = "0xFA30FC", VA = "0xFA30FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001DB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F69")]
				[Address(RVA = "0xFA3164", Offset = "0xFA3164", VA = "0xFA3164", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F64")]
			[Address(RVA = "0xFA2E74", Offset = "0xFA2E74", VA = "0xFA2E74")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6000F65")]
			[Address(RVA = "0xFA2F50", Offset = "0xFA2F50", VA = "0xFA2F50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F66")]
			[Address(RVA = "0xFA2F54", Offset = "0xFA2F54", VA = "0xFA2F54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F68")]
			[Address(RVA = "0xFA3104", Offset = "0xFA3104", VA = "0xFA3104", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000939")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x400093A")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x600079B")]
		[Address(RVA = "0xFA2598", Offset = "0xFA2598", VA = "0xFA2598")]
		private void Awake()
		{
		}

		[Token(Token = "0x600079C")]
		[Address(RVA = "0xFA2644", Offset = "0xFA2644", VA = "0xFA2644")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600079D")]
		[Address(RVA = "0xFA26F8", Offset = "0xFA26F8", VA = "0xFA26F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600079E")]
		[Address(RVA = "0xFA2824", Offset = "0xFA2824", VA = "0xFA2824")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600079F")]
		[Address(RVA = "0xFA2994", Offset = "0xFA2994", VA = "0xFA2994")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0xFA2B30", Offset = "0xFA2B30", VA = "0xFA2B30")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60007A1")]
		[Address(RVA = "0xFA2DAC", Offset = "0xFA2DAC", VA = "0xFA2DAC")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x60007A2")]
		[Address(RVA = "0xFA2C44", Offset = "0xFA2C44", VA = "0xFA2C44")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0xFA2C58", Offset = "0xFA2C58", VA = "0xFA2C58")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0xFA2E04", Offset = "0xFA2E04", VA = "0xFA2E04")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74B984", Offset = "0x74B984")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0xFA2EA0", Offset = "0xFA2EA0", VA = "0xFA2EA0")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x2000158")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x170000E2")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x60007A6")]
			[Address(RVA = "0xFA316C", Offset = "0xFA316C", VA = "0xFA316C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0xFA317C", Offset = "0xFA317C", VA = "0xFA317C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0xFA3184", Offset = "0xFA3184", VA = "0xFA3184", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0xFA35F0", Offset = "0xFA35F0", VA = "0xFA35F0")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x2000159")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x400094D")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x400094E")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x746EBC", Offset = "0x746EBC")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x170000E3")]
		public float Distance
		{
			[Token(Token = "0x60007AA")]
			[Address(RVA = "0xFA36E8", Offset = "0xFA36E8", VA = "0xFA36E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74B9E8", Offset = "0x74B9E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60007AB")]
			[Address(RVA = "0xFA36F0", Offset = "0xFA36F0", VA = "0xFA36F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74B9F8", Offset = "0x74B9F8")]
			protected set
			{
			}
		}

		[Token(Token = "0x170000E4")]
		public float Scale
		{
			[Token(Token = "0x60007AC")]
			[Address(RVA = "0xFA36F8", Offset = "0xFA36F8", VA = "0xFA36F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60007AD")]
			[Address(RVA = "0xFA3700", Offset = "0xFA3700", VA = "0xFA3700")]
			set
			{
			}
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0xFA3180", Offset = "0xFA3180", VA = "0xFA3180", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60007AF")]
		[Address(RVA = "0xFA3708", Offset = "0xFA3708", VA = "0xFA3708")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x60007B0")]
		[Address(RVA = "0xFA31CC", Offset = "0xFA31CC", VA = "0xFA31CC")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0xFA34A4", Offset = "0xFA34A4", VA = "0xFA34A4")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x60007B2")]
		public abstract void UpdatePosition();

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0xFA3660", Offset = "0xFA3660", VA = "0xFA3660")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x200015A")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x20002BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7411E8", Offset = "0x7411E8")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x40014C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x40014C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x40014C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x40014C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x40014C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x40014CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x40014CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x40014CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x40014CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x170001DC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F6D")]
				[Address(RVA = "0xFA4090", Offset = "0xFA4090", VA = "0xFA4090", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001DD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F6F")]
				[Address(RVA = "0xFA40F8", Offset = "0xFA40F8", VA = "0xFA40F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F6A")]
			[Address(RVA = "0xFA3CD4", Offset = "0xFA3CD4", VA = "0xFA3CD4")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6000F6B")]
			[Address(RVA = "0xFA3E6C", Offset = "0xFA3E6C", VA = "0xFA3E6C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F6C")]
			[Address(RVA = "0xFA3E70", Offset = "0xFA3E70", VA = "0xFA3E70", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F6E")]
			[Address(RVA = "0xFA4098", Offset = "0xFA4098", VA = "0xFA4098", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0xFA38D8", Offset = "0xFA38D8", VA = "0xFA38D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0xFA3924", Offset = "0xFA3924", VA = "0xFA3924")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0xFA3A30", Offset = "0xFA3A30", VA = "0xFA3A30")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0xFA3B78", Offset = "0xFA3B78", VA = "0xFA3B78")]
		private void Update()
		{
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0xFA3A8C", Offset = "0xFA3A8C", VA = "0xFA3A8C")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0xFA3C54", Offset = "0xFA3C54", VA = "0xFA3C54")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74BA08", Offset = "0x74BA08")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0xFA3D00", Offset = "0xFA3D00", VA = "0xFA3D00")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0xFA3DAC", Offset = "0xFA3DAC", VA = "0xFA3DAC")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0xFA3E0C", Offset = "0xFA3E0C", VA = "0xFA3E0C")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x200015B")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x20002BC")]
		private enum EngineSoundState
		{
			[Token(Token = "0x40014CF")]
			Start,
			[Token(Token = "0x40014D0")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x40014D1")]
			Stop
		}

		[Token(Token = "0x20002BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7411F8", Offset = "0x7411F8")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x40014D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x40014D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x40014D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x40014D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x40014D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x40014DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x170001DE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F73")]
				[Address(RVA = "0xFA4A1C", Offset = "0xFA4A1C", VA = "0xFA4A1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001DF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F75")]
				[Address(RVA = "0xFA4A84", Offset = "0xFA4A84", VA = "0xFA4A84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F70")]
			[Address(RVA = "0xFA43B8", Offset = "0xFA43B8", VA = "0xFA43B8")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6000F71")]
			[Address(RVA = "0xFA47FC", Offset = "0xFA47FC", VA = "0xFA47FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F72")]
			[Address(RVA = "0xFA4800", Offset = "0xFA4800", VA = "0xFA4800", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F74")]
			[Address(RVA = "0xFA4A24", Offset = "0xFA4A24", VA = "0xFA4A24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000961")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4000962")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4000963")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x4000964")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x746F1C", Offset = "0x746F1C")]
		protected float _initialSpeed;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0xFA4100", Offset = "0xFA4100", VA = "0xFA4100")]
		private void Start()
		{
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0xFA4258", Offset = "0xFA4258", VA = "0xFA4258")]
		private void Update()
		{
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0xFA4264", Offset = "0xFA4264", VA = "0xFA4264", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0xF95AFC", Offset = "0xF95AFC", VA = "0xF95AFC")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0xFA41D4", Offset = "0xFA41D4", VA = "0xFA41D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74BA6C", Offset = "0x74BA6C")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0xFA43E4", Offset = "0xFA43E4", VA = "0xFA43E4")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0xFA4354", Offset = "0xFA4354", VA = "0xFA4354")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0xF95B7C", Offset = "0xF95B7C", VA = "0xF95B7C")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0xF95C6C", Offset = "0xF95C6C", VA = "0xF95C6C")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0xFA4618", Offset = "0xFA4618", VA = "0xFA4618")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0xFA4708", Offset = "0xFA4708", VA = "0xFA4708")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0xF95D5C", Offset = "0xF95D5C", VA = "0xF95D5C")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0xF95E1C", Offset = "0xF95E1C", VA = "0xF95E1C")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0xF95F10", Offset = "0xF95F10", VA = "0xF95F10")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0xFA4790", Offset = "0xFA4790", VA = "0xFA4790")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x200015C")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x170000E5")]
		public float TrackLength
		{
			[Token(Token = "0x60007CD")]
			[Address(RVA = "0xFA4A8C", Offset = "0xFA4A8C", VA = "0xFA4A8C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60007CE")]
			[Address(RVA = "0xFA4A94", Offset = "0xFA4A94", VA = "0xFA4A94")]
			private set
			{
			}
		}

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0xFA4A9C", Offset = "0xFA4A9C", VA = "0xFA4A9C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0xFA3788", Offset = "0xFA3788", VA = "0xFA3788")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x60007D1")]
		[Address(RVA = "0xFA4AA0", Offset = "0xFA4AA0", VA = "0xFA4AA0")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x60007D2")]
		[Address(RVA = "0xFA4C98", Offset = "0xFA4C98", VA = "0xFA4C98")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x60007D3")]
		[Address(RVA = "0xFA4DB4", Offset = "0xFA4DB4", VA = "0xFA4DB4")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x200015D")]
	public class Pose
	{
		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0xF9EE1C", Offset = "0xF9EE1C", VA = "0xF9EE1C")]
		public Pose()
		{
		}

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0xF9EEC8", Offset = "0xF9EEC8", VA = "0xF9EEC8")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x200015E")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x20002BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741208", Offset = "0x741208")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x40014DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x40014DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x40014E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x170001E0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F79")]
				[Address(RVA = "0xFA5398", Offset = "0xFA5398", VA = "0xFA5398", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001E1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F7B")]
				[Address(RVA = "0xFA5400", Offset = "0xFA5400", VA = "0xFA5400", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F76")]
			[Address(RVA = "0xFA505C", Offset = "0xFA505C", VA = "0xFA505C")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6000F77")]
			[Address(RVA = "0xFA51BC", Offset = "0xFA51BC", VA = "0xFA51BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F78")]
			[Address(RVA = "0xFA51C0", Offset = "0xFA51C0", VA = "0xFA51C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F7A")]
			[Address(RVA = "0xFA53A0", Offset = "0xFA53A0", VA = "0xFA53A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741218", Offset = "0x741218")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x40014E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x40014E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x40014E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x170001E2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F7F")]
				[Address(RVA = "0xFA54D4", Offset = "0xFA54D4", VA = "0xFA54D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001E3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F81")]
				[Address(RVA = "0xFA553C", Offset = "0xFA553C", VA = "0xFA553C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F7C")]
			[Address(RVA = "0xFA511C", Offset = "0xFA511C", VA = "0xFA511C")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6000F7D")]
			[Address(RVA = "0xFA5408", Offset = "0xFA5408", VA = "0xFA5408", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F7E")]
			[Address(RVA = "0xFA540C", Offset = "0xFA540C", VA = "0xFA540C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F80")]
			[Address(RVA = "0xFA54DC", Offset = "0xFA54DC", VA = "0xFA54DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000987")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x747104", Offset = "0x747104")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x170000E6")]
		public bool IsMoving
		{
			[Token(Token = "0x60007D6")]
			[Address(RVA = "0xFA4DD0", Offset = "0xFA4DD0", VA = "0xFA4DD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74BAD0", Offset = "0x74BAD0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007D7")]
			[Address(RVA = "0xFA4DD8", Offset = "0xFA4DD8", VA = "0xFA4DD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74BAE0", Offset = "0x74BAE0")]
			private set
			{
			}
		}

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0xFA4DE4", Offset = "0xFA4DE4", VA = "0xFA4DE4")]
		private void Start()
		{
		}

		[Token(Token = "0x60007D9")]
		[Address(RVA = "0xFA4E20", Offset = "0xFA4E20", VA = "0xFA4E20")]
		private void Update()
		{
		}

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0xFA4F74", Offset = "0xFA4F74", VA = "0xFA4F74")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0xFA4FDC", Offset = "0xFA4FDC", VA = "0xFA4FDC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74BAF0", Offset = "0x74BAF0")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0xFA5088", Offset = "0xFA5088", VA = "0xFA5088")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74BB54", Offset = "0x74BB54")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x60007DD")]
		[Address(RVA = "0xFA5148", Offset = "0xFA5148", VA = "0xFA5148")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0xFA51B4", Offset = "0xFA51B4", VA = "0xFA51B4")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x200015F")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x60007DF")]
		[Address(RVA = "0xFA5544", Offset = "0xFA5544", VA = "0xFA5544")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0xFA55AC", Offset = "0xFA55AC", VA = "0xFA55AC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60007E1")]
		[Address(RVA = "0xFA5664", Offset = "0xFA5664", VA = "0xFA5664")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0xFA5764", Offset = "0xFA5764", VA = "0xFA5764")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0xFA57E0", Offset = "0xFA57E0", VA = "0xFA57E0")]
		private void Update()
		{
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0xFA58BC", Offset = "0xFA58BC", VA = "0xFA58BC")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x2000160")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4000998")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4000999")]
		EUDT_OverlayQuad,
		[Token(Token = "0x400099A")]
		EUDT_None,
		[Token(Token = "0x400099B")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x2000161")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x20002C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741228", Offset = "0x741228")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x170001E4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F85")]
				[Address(RVA = "0xF9E248", Offset = "0xF9E248", VA = "0xF9E248", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001E5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F87")]
				[Address(RVA = "0xF9E2B0", Offset = "0xF9E2B0", VA = "0xF9E2B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F82")]
			[Address(RVA = "0xF9D8C4", Offset = "0xF9D8C4", VA = "0xF9D8C4")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6000F83")]
			[Address(RVA = "0xF9DFFC", Offset = "0xF9DFFC", VA = "0xF9DFFC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F84")]
			[Address(RVA = "0xF9E000", Offset = "0xF9E000", VA = "0xF9E000", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F86")]
			[Address(RVA = "0xF9E250", Offset = "0xF9E250", VA = "0xF9E250", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x400099D")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x400099E")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x400099F")]
		private const string noneID = "NoneID";

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x747144", Offset = "0x747144")]
		public GameObject mainCamera;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x74717C", Offset = "0x74717C")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0xF9CC0C", Offset = "0xF9CC0C", VA = "0xF9CC0C")]
		private void Start()
		{
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0xF9D3EC", Offset = "0xF9D3EC", VA = "0xF9D3EC")]
		private void Update()
		{
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0xF9D52C", Offset = "0xF9D52C", VA = "0xF9D52C")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0xF9D654", Offset = "0xF9D654", VA = "0xF9D654")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0xF9D77C", Offset = "0xF9D77C", VA = "0xF9D77C")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0xF9D500", Offset = "0xF9D500", VA = "0xF9D500")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0xF9D854", Offset = "0xF9D854", VA = "0xF9D854")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74BBB8", Offset = "0x74BBB8")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0xF9D8F0", Offset = "0xF9D8F0", VA = "0xF9D8F0")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0xF9CF78", Offset = "0xF9CF78", VA = "0xF9CF78")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0xF9DA18", Offset = "0xF9DA18", VA = "0xF9DA18")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0xF9D924", Offset = "0xF9D924", VA = "0xF9D924")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0xF9DDB4", Offset = "0xF9DDB4", VA = "0xF9DDB4")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0xF9DE90", Offset = "0xF9DE90", VA = "0xF9DE90")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0xF9DF0C", Offset = "0xF9DF0C", VA = "0xF9DF0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74BC1C", Offset = "0x74BC1C")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0xF9DF5C", Offset = "0xF9DF5C", VA = "0xF9DF5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74BC2C", Offset = "0x74BC2C")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x60007F4")]
		[Address(RVA = "0xF9DFAC", Offset = "0xF9DFAC", VA = "0xF9DFAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74BC3C", Offset = "0x74BC3C")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x2000162")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7401EC", Offset = "0x7401EC")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741238", Offset = "0x741238")]
		private sealed class <>c
		{
			[Token(Token = "0x40014EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40014EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6000F89")]
			[Address(RVA = "0xB5AECC", Offset = "0xB5AECC", VA = "0xB5AECC")]
			public <>c()
			{
			}

			[Token(Token = "0x6000F8A")]
			[Address(RVA = "0xB5AED4", Offset = "0xB5AED4", VA = "0xB5AED4")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40009B4")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x40009B5")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x40009B6")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x40009B7")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x40009B8")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x40009B9")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x40009BA")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x40009BB")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x40009BC")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x40009BD")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x40009BE")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x60007F5")]
		[Address(RVA = "0xB5A110", Offset = "0xB5A110", VA = "0xB5A110")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007F6")]
		[Address(RVA = "0xB5A168", Offset = "0xB5A168", VA = "0xB5A168")]
		private void Start()
		{
		}

		[Token(Token = "0x60007F7")]
		[Address(RVA = "0xB5A570", Offset = "0xB5A570", VA = "0xB5A570")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60007F8")]
		[Address(RVA = "0xB5A63C", Offset = "0xB5A63C", VA = "0xB5A63C")]
		private void Update()
		{
		}

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0xB5A748", Offset = "0xB5A748", VA = "0xB5A748")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0xB5AA80", Offset = "0xB5AA80", VA = "0xB5AA80")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0xB5ABE8", Offset = "0xB5ABE8", VA = "0xB5ABE8")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0xB5AD34", Offset = "0xB5AD34", VA = "0xB5AD34")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0xB5A7E4", Offset = "0xB5A7E4", VA = "0xB5A7E4")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0xB5A884", Offset = "0xB5A884", VA = "0xB5A884")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0xB5A3C4", Offset = "0xB5A3C4", VA = "0xB5A3C4")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0xB5AE50", Offset = "0xB5AE50", VA = "0xB5AE50")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x2000163")]
	public enum HandPoseId
	{
		[Token(Token = "0x40009D1")]
		Default,
		[Token(Token = "0x40009D2")]
		Generic,
		[Token(Token = "0x40009D3")]
		PingPongBall,
		[Token(Token = "0x40009D4")]
		Controller
	}
	[Token(Token = "0x2000164")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x170000E7")]
		public bool AllowPointing
		{
			[Token(Token = "0x6000801")]
			[Address(RVA = "0xB5AF00", Offset = "0xB5AF00", VA = "0xB5AF00")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E8")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6000802")]
			[Address(RVA = "0xB5AF08", Offset = "0xB5AF08", VA = "0xB5AF08")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E9")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6000803")]
			[Address(RVA = "0xB5AF10", Offset = "0xB5AF10", VA = "0xB5AF10")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0xB5AF18", Offset = "0xB5AF18", VA = "0xB5AF18")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x2000165")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6000805")]
		[Address(RVA = "0xB5AF20", Offset = "0xB5AF20", VA = "0xB5AF20")]
		private void Update()
		{
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0xB5B194", Offset = "0xB5B194", VA = "0xB5B194")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000807")]
		[Address(RVA = "0xB5B1F0", Offset = "0xB5B1F0", VA = "0xB5B1F0")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000808")]
		[Address(RVA = "0xB5B234", Offset = "0xB5B234", VA = "0xB5B234")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x2000166")]
	public enum FaceType : uint
	{
		[Token(Token = "0x40009DC")]
		TRIANGLES,
		[Token(Token = "0x40009DD")]
		QUADS
	}
	[Token(Token = "0x2000167")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x40009DF")]
		ABSORPTION,
		[Token(Token = "0x40009E0")]
		TRANSMISSION,
		[Token(Token = "0x40009E1")]
		SCATTERING
	}
	[Token(Token = "0x2000168")]
	public struct MeshGroup
	{
		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x2000169")]
	public static class AvatarLogger
	{
		[Token(Token = "0x40009E6")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x40009E7")]
		public const string Tab = "    ";

		[Token(Token = "0x6000809")]
		[Address(RVA = "0xB5C4AC", Offset = "0xB5C4AC", VA = "0xB5C4AC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x74BC4C", Offset = "0x74BC4C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x74BC4C", Offset = "0x74BC4C")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0xB5C534", Offset = "0xB5C534", VA = "0xB5C534")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x74BCAC", Offset = "0x74BCAC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x74BCAC", Offset = "0x74BCAC")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x600080B")]
		[Address(RVA = "0xB5C5CC", Offset = "0xB5C5CC", VA = "0xB5C5CC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x74BD0C", Offset = "0x74BD0C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x74BD0C", Offset = "0x74BD0C")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x600080C")]
		[Address(RVA = "0xB5C654", Offset = "0xB5C654", VA = "0xB5C654")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x74BD6C", Offset = "0x74BD6C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x74BD6C", Offset = "0x74BD6C")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x600080D")]
		[Address(RVA = "0xB5C6DC", Offset = "0xB5C6DC", VA = "0xB5C6DC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x74BDCC", Offset = "0x74BDCC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x74BDCC", Offset = "0x74BDCC")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x200016A")]
	public class CAPI
	{
		[Token(Token = "0x20002C2")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x20002C3")]
		public enum Result
		{
			[Token(Token = "0x40014ED")]
			Success = 0,
			[Token(Token = "0x40014EE")]
			Failure = -1000,
			[Token(Token = "0x40014EF")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x40014F0")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x40014F1")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x40014F2")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x40014F3")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x40014F4")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x40014F5")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x20002C4")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x40014F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x6000F8F")]
			[Address(RVA = "0xF938CC", Offset = "0xF938CC", VA = "0xF938CC")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x40009E8")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x40009F0")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x600080E")]
		[Address(RVA = "0xB5C7DC", Offset = "0xB5C7DC", VA = "0xB5C7DC")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x600080F")]
		[Address(RVA = "0xB5C86C", Offset = "0xB5C86C", VA = "0xB5C86C")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6000810")]
		[Address(RVA = "0xB5CA28", Offset = "0xB5CA28", VA = "0xB5CA28")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000811")]
		[Address(RVA = "0xB5CB08", Offset = "0xB5CB08", VA = "0xB5CB08")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x6000812")]
		[Address(RVA = "0xB5CB78", Offset = "0xB5CB78", VA = "0xB5CB78")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x6000813")]
		[Address(RVA = "0xB5CBEC", Offset = "0xB5CBEC", VA = "0xB5CBEC")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x6000814")]
		[Address(RVA = "0xB5CC6C", Offset = "0xB5CC6C", VA = "0xB5CC6C")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x6000815")]
		[Address(RVA = "0xB5CD84", Offset = "0xB5CD84", VA = "0xB5CD84")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x6000816")]
		[Address(RVA = "0xB5CE04", Offset = "0xB5CE04", VA = "0xB5CE04")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x6000817")]
		[Address(RVA = "0xB5CF1C", Offset = "0xB5CF1C", VA = "0xB5CF1C")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6000818")]
		[Address(RVA = "0xB5CF9C", Offset = "0xB5CF9C", VA = "0xB5CF9C")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6000819")]
		[Address(RVA = "0xB5D01C", Offset = "0xB5D01C", VA = "0xB5D01C")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x600081A")]
		[Address(RVA = "0xB5D09C", Offset = "0xB5D09C", VA = "0xB5D09C")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x600081B")]
		[Address(RVA = "0xB5D11C", Offset = "0xB5D11C", VA = "0xB5D11C")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x600081C")]
		[Address(RVA = "0xB5D1AC", Offset = "0xB5D1AC", VA = "0xB5D1AC")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x600081D")]
		[Address(RVA = "0xB5D23C", Offset = "0xB5D23C", VA = "0xB5D23C")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x600081E")]
		[Address(RVA = "0xB5D2CC", Offset = "0xB5D2CC", VA = "0xB5D2CC")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x600081F")]
		[Address(RVA = "0xB5D34C", Offset = "0xB5D34C", VA = "0xB5D34C")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6000820")]
		[Address(RVA = "0xB5D3CC", Offset = "0xB5D3CC", VA = "0xB5D3CC")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6000821")]
		[Address(RVA = "0xB5D45C", Offset = "0xB5D45C", VA = "0xB5D45C")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x6000822")]
		[Address(RVA = "0xB5D4EC", Offset = "0xB5D4EC", VA = "0xB5D4EC")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x6000823")]
		[Address(RVA = "0xB5D57C", Offset = "0xB5D57C", VA = "0xB5D57C")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000824")]
		[Address(RVA = "0xB5D5FC", Offset = "0xB5D5FC", VA = "0xB5D5FC")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x6000825")]
		[Address(RVA = "0xB5D69C", Offset = "0xB5D69C", VA = "0xB5D69C")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000826")]
		[Address(RVA = "0xB5D71C", Offset = "0xB5D71C", VA = "0xB5D71C")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x6000827")]
		[Address(RVA = "0xB5D7BC", Offset = "0xB5D7BC", VA = "0xB5D7BC")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6000828")]
		[Address(RVA = "0xB5D87C", Offset = "0xB5D87C", VA = "0xB5D87C")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x6000829")]
		[Address(RVA = "0xB5D94C", Offset = "0xB5D94C", VA = "0xB5D94C")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x600082A")]
		[Address(RVA = "0xB5D9DC", Offset = "0xB5D9DC", VA = "0xB5D9DC")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600082B")]
		[Address(RVA = "0xB5DA6C", Offset = "0xB5DA6C", VA = "0xB5DA6C")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600082C")]
		[Address(RVA = "0xB5DAFC", Offset = "0xB5DAFC", VA = "0xB5DAFC")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600082D")]
		[Address(RVA = "0xB5DB8C", Offset = "0xB5DB8C", VA = "0xB5DB8C")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600082E")]
		[Address(RVA = "0xB5DC1C", Offset = "0xB5DC1C", VA = "0xB5DC1C")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x600082F")]
		[Address(RVA = "0xB5DC9C", Offset = "0xB5DC9C", VA = "0xB5DC9C")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x6000830")]
		[Address(RVA = "0xB5DDBC", Offset = "0xB5DDBC", VA = "0xB5DDBC")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000831")]
		[Address(RVA = "0xB5DD2C", Offset = "0xB5DD2C", VA = "0xB5DD2C")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x6000832")]
		[Address(RVA = "0xB5DFB0", Offset = "0xB5DFB0", VA = "0xB5DFB0")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000833")]
		[Address(RVA = "0xB5E0E8", Offset = "0xB5E0E8", VA = "0xB5E0E8")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000834")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000835")]
		[Address(RVA = "0xB5E168", Offset = "0xB5E168", VA = "0xB5E168")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000836")]
		[Address(RVA = "0xB5E3D8", Offset = "0xB5E3D8", VA = "0xB5E3D8")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000837")]
		[Address(RVA = "0xB5E458", Offset = "0xB5E458", VA = "0xB5E458")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000838")]
		[Address(RVA = "0xB5E590", Offset = "0xB5E590", VA = "0xB5E590")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000839")]
		[Address(RVA = "0xB5E610", Offset = "0xB5E610", VA = "0xB5E610")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600083A")]
		[Address(RVA = "0xB5E748", Offset = "0xB5E748", VA = "0xB5E748")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x600083B")]
		[Address(RVA = "0xB5E7C8", Offset = "0xB5E7C8", VA = "0xB5E7C8")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600083C")]
		[Address(RVA = "0xB5E900", Offset = "0xB5E900", VA = "0xB5E900")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x600083D")]
		[Address(RVA = "0xB5E980", Offset = "0xB5E980", VA = "0xB5E980")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600083E")]
		[Address(RVA = "0xB5EAB8", Offset = "0xB5EAB8", VA = "0xB5EAB8")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600083F")]
		[Address(RVA = "0xB5EB38", Offset = "0xB5EB38", VA = "0xB5EB38")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x6000840")]
		[Address(RVA = "0xB5EBB8", Offset = "0xB5EBB8", VA = "0xB5EBB8")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6000841")]
		[Address(RVA = "0xB5EC50", Offset = "0xB5EC50", VA = "0xB5EC50")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x6000842")]
		[Address(RVA = "0xB5ECD0", Offset = "0xB5ECD0", VA = "0xB5ECD0")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x6000843")]
		[Address(RVA = "0xB5EE7C", Offset = "0xB5EE7C", VA = "0xB5EE7C")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x6000844")]
		[Address(RVA = "0xB5EFA8", Offset = "0xB5EFA8", VA = "0xB5EFA8")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000845")]
		[Address(RVA = "0xB5EDFC", Offset = "0xB5EDFC", VA = "0xB5EDFC")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000846")]
		[Address(RVA = "0xB5F028", Offset = "0xB5F028", VA = "0xB5F028")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000847")]
		[Address(RVA = "0xB5F0A8", Offset = "0xB5F0A8", VA = "0xB5F0A8")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6000848")]
		[Address(RVA = "0xB5F138", Offset = "0xB5F138", VA = "0xB5F138")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000849")]
		[Address(RVA = "0xB5F1B8", Offset = "0xB5F1B8", VA = "0xB5F1B8")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x600084A")]
		[Address(RVA = "0xB5F248", Offset = "0xB5F248", VA = "0xB5F248")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600084B")]
		[Address(RVA = "0xB5F2C8", Offset = "0xB5F2C8", VA = "0xB5F2C8")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x600084C")]
		[Address(RVA = "0xB5F348", Offset = "0xB5F348", VA = "0xB5F348")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600084D")]
		[Address(RVA = "0xB5F584", Offset = "0xB5F584", VA = "0xB5F584")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x600084E")]
		[Address(RVA = "0xB5F614", Offset = "0xB5F614", VA = "0xB5F614")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600084F")]
		[Address(RVA = "0xB5F800", Offset = "0xB5F800", VA = "0xB5F800")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x6000850")]
		[Address(RVA = "0xB5F898", Offset = "0xB5F898", VA = "0xB5F898")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x6000851")]
		[Address(RVA = "0xB5F9BC", Offset = "0xB5F9BC", VA = "0xB5F9BC")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000852")]
		[Address(RVA = "0xB5FA3C", Offset = "0xB5FA3C", VA = "0xB5FA3C")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x6000853")]
		[Address(RVA = "0xB5FABC", Offset = "0xB5FABC", VA = "0xB5FABC")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x6000854")]
		[Address(RVA = "0xB5FBE4", Offset = "0xB5FBE4", VA = "0xB5FBE4")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x6000855")]
		[Address(RVA = "0xB5FC64", Offset = "0xB5FC64", VA = "0xB5FC64")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x6000856")]
		[Address(RVA = "0xB5FD8C", Offset = "0xB5FD8C", VA = "0xB5FD8C")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000857")]
		[Address(RVA = "0xB5FE0C", Offset = "0xB5FE0C", VA = "0xB5FE0C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000858")]
		[Address(RVA = "0xB5FE9C", Offset = "0xB5FE9C", VA = "0xB5FE9C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000859")]
		[Address(RVA = "0xB5FF2C", Offset = "0xB5FF2C", VA = "0xB5FF2C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600085A")]
		[Address(RVA = "0xB5FFBC", Offset = "0xB5FFBC", VA = "0xB5FFBC")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600085B")]
		[Address(RVA = "0xB6003C", Offset = "0xB6003C", VA = "0xB6003C")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600085C")]
		[Address(RVA = "0xB600C4", Offset = "0xB600C4", VA = "0xB600C4")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600085D")]
		[Address(RVA = "0xB6014C", Offset = "0xB6014C", VA = "0xB6014C")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600085E")]
		[Address(RVA = "0xB601CC", Offset = "0xB601CC", VA = "0xB601CC")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600085F")]
		[Address(RVA = "0xB6024C", Offset = "0xB6024C", VA = "0xB6024C")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000860")]
		[Address(RVA = "0xB60300", Offset = "0xB60300", VA = "0xB60300")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000861")]
		[Address(RVA = "0xB60390", Offset = "0xB60390", VA = "0xB60390")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000862")]
		[Address(RVA = "0xB60420", Offset = "0xB60420", VA = "0xB60420")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000863")]
		[Address(RVA = "0xB604A0", Offset = "0xB604A0", VA = "0xB604A0")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000864")]
		[Address(RVA = "0xB60520", Offset = "0xB60520", VA = "0xB60520")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000865")]
		[Address(RVA = "0xB605A0", Offset = "0xB605A0", VA = "0xB605A0")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000866")]
		[Address(RVA = "0xB60638", Offset = "0xB60638", VA = "0xB60638")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x6000867")]
		[Address(RVA = "0xB606C8", Offset = "0xB606C8", VA = "0xB606C8")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x6000868")]
		[Address(RVA = "0xB60758", Offset = "0xB60758", VA = "0xB60758")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x6000869")]
		[Address(RVA = "0xB607E8", Offset = "0xB607E8", VA = "0xB607E8")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x600086A")]
		[Address(RVA = "0xB60880", Offset = "0xB60880", VA = "0xB60880")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x600086B")]
		[Address(RVA = "0xB60918", Offset = "0xB60918", VA = "0xB60918")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600086C")]
		[Address(RVA = "0xB60998", Offset = "0xB60998", VA = "0xB60998")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x600086D")]
		[Address(RVA = "0xB60A18", Offset = "0xB60A18", VA = "0xB60A18")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x600086E")]
		[Address(RVA = "0xB60B40", Offset = "0xB60B40", VA = "0xB60B40")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x600086F")]
		[Address(RVA = "0xB60BC0", Offset = "0xB60BC0", VA = "0xB60BC0")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x6000870")]
		[Address(RVA = "0xB60CE8", Offset = "0xB60CE8", VA = "0xB60CE8")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x6000871")]
		[Address(RVA = "0xB60D68", Offset = "0xB60D68", VA = "0xB60D68")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000872")]
		[Address(RVA = "0xB60E90", Offset = "0xB60E90", VA = "0xB60E90")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x6000873")]
		[Address(RVA = "0xB60F10", Offset = "0xB60F10", VA = "0xB60F10")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x6000874")]
		[Address(RVA = "0xB610B8", Offset = "0xB610B8", VA = "0xB610B8")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000875")]
		[Address(RVA = "0xB61354", Offset = "0xB61354", VA = "0xB61354")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6000876")]
		[Address(RVA = "0xB61038", Offset = "0xB61038", VA = "0xB61038")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000877")]
		[Address(RVA = "0xB613E4", Offset = "0xB613E4", VA = "0xB613E4")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000878")]
		[Address(RVA = "0xB61464", Offset = "0xB61464", VA = "0xB61464")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x6000879")]
		[Address(RVA = "0xB614F4", Offset = "0xB614F4", VA = "0xB614F4")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x600087A")]
		[Address(RVA = "0xB61584", Offset = "0xB61584", VA = "0xB61584")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x600087B")]
		[Address(RVA = "0xB61614", Offset = "0xB61614", VA = "0xB61614")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x600087C")]
		[Address(RVA = "0xB616B4", Offset = "0xB616B4", VA = "0xB616B4")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x600087D")]
		[Address(RVA = "0xB61754", Offset = "0xB61754", VA = "0xB61754")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x600087E")]
		[Address(RVA = "0xB617F4", Offset = "0xB617F4", VA = "0xB617F4")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600087F")]
		[Address(RVA = "0xB61874", Offset = "0xB61874", VA = "0xB61874")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000880")]
		[Address(RVA = "0xB618F4", Offset = "0xB618F4", VA = "0xB618F4")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000881")]
		[Address(RVA = "0xB61974", Offset = "0xB61974", VA = "0xB61974")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000882")]
		[Address(RVA = "0xB619F4", Offset = "0xB619F4", VA = "0xB619F4")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000883")]
		[Address(RVA = "0xB61A74", Offset = "0xB61A74", VA = "0xB61A74")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6000884")]
		[Address(RVA = "0xB61B9C", Offset = "0xB61B9C", VA = "0xB61B9C")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6000885")]
		[Address(RVA = "0xB61C34", Offset = "0xB61C34", VA = "0xB61C34")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x6000886")]
		[Address(RVA = "0xB61CB4", Offset = "0xB61CB4", VA = "0xB61CB4")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x6000887")]
		[Address(RVA = "0xB61D18", Offset = "0xB61D18", VA = "0xB61D18")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000888")]
		[Address(RVA = "0xB61E34", Offset = "0xB61E34", VA = "0xB61E34")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x6000889")]
		[Address(RVA = "0xB61EC4", Offset = "0xB61EC4", VA = "0xB61EC4")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600088A")]
		[Address(RVA = "0xB62008", Offset = "0xB62008", VA = "0xB62008")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x600088B")]
		[Address(RVA = "0xB62098", Offset = "0xB62098", VA = "0xB62098")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x600088C")]
		[Address(RVA = "0xB62138", Offset = "0xB62138", VA = "0xB62138")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600088D")]
		[Address(RVA = "0xB624D0", Offset = "0xB624D0", VA = "0xB624D0")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x600088E")]
		[Address(RVA = "0xB62550", Offset = "0xB62550", VA = "0xB62550")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x600088F")]
		[Address(RVA = "0xB625E8", Offset = "0xB625E8", VA = "0xB625E8")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000890")]
		[Address(RVA = "0xB62DB0", Offset = "0xB62DB0", VA = "0xB62DB0")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x6000891")]
		[Address(RVA = "0xB62E30", Offset = "0xB62E30", VA = "0xB62E30")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x6000892")]
		[Address(RVA = "0xB5C774", Offset = "0xB5C774", VA = "0xB5C774")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x74BE2C", Offset = "0x74BE2C")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000893")]
		[Address(RVA = "0xB62EC8", Offset = "0xB62EC8", VA = "0xB62EC8")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x6000894")]
		[Address(RVA = "0xB62F4C", Offset = "0xB62F4C", VA = "0xB62F4C")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x6000895")]
		[Address(RVA = "0xB62FCC", Offset = "0xB62FCC", VA = "0xB62FCC")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6000896")]
		[Address(RVA = "0xB6304C", Offset = "0xB6304C", VA = "0xB6304C")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x6000897")]
		[Address(RVA = "0xB630CC", Offset = "0xB630CC", VA = "0xB630CC")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000898")]
		[Address(RVA = "0xB63AAC", Offset = "0xB63AAC", VA = "0xB63AAC")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x6000899")]
		[Address(RVA = "0xB63B2C", Offset = "0xB63B2C", VA = "0xB63B2C")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600089A")]
		[Address(RVA = "0xB63F18", Offset = "0xB63F18", VA = "0xB63F18")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x600089B")]
		[Address(RVA = "0xB63E88", Offset = "0xB63E88", VA = "0xB63E88")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x600089C")]
		[Address(RVA = "0xB63F8C", Offset = "0xB63F8C", VA = "0xB63F8C")]
		public CAPI()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x200016B")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0x747234", Offset = "0x747234")]
		public SoundFXRef testSound1;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x600089E")]
		[Address(RVA = "0xB587B8", Offset = "0xB587B8", VA = "0xB587B8")]
		private void Start()
		{
		}

		[Token(Token = "0x600089F")]
		[Address(RVA = "0xB587BC", Offset = "0xB587BC", VA = "0xB587BC")]
		private void Update()
		{
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0xB5887C", Offset = "0xB5887C", VA = "0xB5887C")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x200016C")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x747280", Offset = "0x747280")]
		public bool autoRetrigger;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x7472B8", Offset = "0x7472B8")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7472DC", Offset = "0x7472DC")]
		public Transform[] playPositions;

		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0xB4FA0C", Offset = "0xB4FA0C", VA = "0xB4FA0C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0xB4FB90", Offset = "0xB4FB90", VA = "0xB4FB90")]
		private void Update()
		{
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0xB4FD6C", Offset = "0xB4FD6C", VA = "0xB4FD6C")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0xB4FBF0", Offset = "0xB4FBF0", VA = "0xB4FBF0")]
		public void Play()
		{
		}

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0xB4FEAC", Offset = "0xB4FEAC", VA = "0xB4FEAC")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x60008A6")]
		[Address(RVA = "0xB50020", Offset = "0xB50020", VA = "0xB50020")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x200016D")]
	public enum PreloadSounds
	{
		[Token(Token = "0x40009FF")]
		Default,
		[Token(Token = "0x4000A00")]
		Preload,
		[Token(Token = "0x4000A01")]
		ManualPreload
	}
	[Token(Token = "0x200016E")]
	public enum Fade
	{
		[Token(Token = "0x4000A03")]
		In,
		[Token(Token = "0x4000A04")]
		Out
	}
	[Serializable]
	[Token(Token = "0x200016F")]
	public class SoundGroup
	{
		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x747314", Offset = "0x747314")]
		public int maxPlayingSounds;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0xB58698", Offset = "0xB58698", VA = "0xB58698")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0xB5872C", Offset = "0xB5872C", VA = "0xB5872C")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x60008A9")]
		[Address(RVA = "0xB57104", Offset = "0xB57104", VA = "0xB57104")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0xB57244", Offset = "0xB57244", VA = "0xB57244")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x60008AB")]
		[Address(RVA = "0xB57CFC", Offset = "0xB57CFC", VA = "0xB57CFC")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000170")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x20002C5")]
		public enum Fade
		{
			[Token(Token = "0x40014F8")]
			In,
			[Token(Token = "0x40014F9")]
			Out
		}

		[Token(Token = "0x20002C6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741248", Offset = "0x741248")]
		private sealed class <>c__DisplayClass77_0
		{
			[Token(Token = "0x40014FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x6000F91")]
			[Address(RVA = "0xB54244", Offset = "0xB54244", VA = "0xB54244")]
			public <>c__DisplayClass77_0()
			{
			}

			[Token(Token = "0x6000F92")]
			[Address(RVA = "0xB56BC0", Offset = "0xB56BC0", VA = "0xB56BC0")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20002C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741258", Offset = "0x741258")]
		private sealed class <>c
		{
			[Token(Token = "0x40014FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40014FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__77_1;

			[Token(Token = "0x6000F94")]
			[Address(RVA = "0xB56B28", Offset = "0xB56B28", VA = "0xB56B28")]
			public <>c()
			{
			}

			[Token(Token = "0x6000F95")]
			[Address(RVA = "0xB56B30", Offset = "0xB56B30", VA = "0xB56B30")]
			internal bool <FindFreeEmitter>b__77_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x747340", Offset = "0x747340")]
		public bool makePersistent;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x747378", Offset = "0x747378")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7473B0", Offset = "0x7473B0")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7473E8", Offset = "0x7473E8")]
		public AudioMixer audioMixer;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x747420", Offset = "0x747420")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x747458", Offset = "0x747458")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x747490", Offset = "0x747490")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7474C8", Offset = "0x7474C8")]
		public bool verboseLogging;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x747500", Offset = "0x747500")]
		public int maxSoundEmitters;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x747538", Offset = "0x747538")]
		public float volumeSoundFX;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x747570", Offset = "0x747570")]
		public float soundFxFadeSecs;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x170000EA")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x60008AC")]
			[Address(RVA = "0xB500E0", Offset = "0xB500E0", VA = "0xB500E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000EB")]
		public static AudioManager Instance
		{
			[Token(Token = "0x60008AD")]
			[Address(RVA = "0xB501C0", Offset = "0xB501C0", VA = "0xB501C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EC")]
		public static float NearFallOff
		{
			[Token(Token = "0x60008AE")]
			[Address(RVA = "0xB50228", Offset = "0xB50228", VA = "0xB50228")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000ED")]
		public static float FarFallOff
		{
			[Token(Token = "0x60008AF")]
			[Address(RVA = "0xB5029C", Offset = "0xB5029C", VA = "0xB5029C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000EE")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x60008B0")]
			[Address(RVA = "0xB50310", Offset = "0xB50310", VA = "0xB50310")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EF")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x60008B1")]
			[Address(RVA = "0xB50384", Offset = "0xB50384", VA = "0xB50384")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F0")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x60008B2")]
			[Address(RVA = "0xB503F8", Offset = "0xB503F8", VA = "0xB503F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F1")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x60008BD")]
			[Address(RVA = "0xB52168", Offset = "0xB52168", VA = "0xB52168")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0xB5046C", Offset = "0xB5046C", VA = "0xB5046C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0xB50694", Offset = "0xB50694", VA = "0xB50694")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0xB50470", Offset = "0xB50470", VA = "0xB50470")]
		private void Init()
		{
		}

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0xB512E0", Offset = "0xB512E0", VA = "0xB512E0")]
		private void Update()
		{
		}

		[Token(Token = "0x60008B7")]
		[Address(RVA = "0xB507EC", Offset = "0xB507EC", VA = "0xB507EC")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0xB51904", Offset = "0xB51904", VA = "0xB51904")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0xB51A84", Offset = "0xB51A84", VA = "0xB51A84")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0xB51C20", Offset = "0xB51C20", VA = "0xB51C20")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0xB51D20", Offset = "0xB51D20", VA = "0xB51D20")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0xB51DB0", Offset = "0xB51DB0", VA = "0xB51DB0")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0xB521D0", Offset = "0xB521D0", VA = "0xB521D0")]
		private static int CalculateMaxEmittersSize()
		{
			return default(int);
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0xB52248", Offset = "0xB52248", VA = "0xB52248")]
		private static bool ValidateEmitterIndex(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0xB50C38", Offset = "0xB50C38", VA = "0xB50C38")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0xB512E4", Offset = "0xB512E4", VA = "0xB512E4")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0xB524D8", Offset = "0xB524D8", VA = "0xB524D8")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x60008C3")]
		[Address(RVA = "0xB525DC", Offset = "0xB525DC", VA = "0xB525DC")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0xB526E4", Offset = "0xB526E4", VA = "0xB526E4")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x60008C5")]
		[Address(RVA = "0xB523A0", Offset = "0xB523A0", VA = "0xB523A0")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0xB52850", Offset = "0xB52850", VA = "0xB52850")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x60008C7")]
		[Address(RVA = "0xB529A4", Offset = "0xB529A4", VA = "0xB529A4")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60008C8")]
		[Address(RVA = "0xB52B54", Offset = "0xB52B54", VA = "0xB52B54")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x60008C9")]
		[Address(RVA = "0xB4FDFC", Offset = "0xB4FDFC", VA = "0xB4FDFC")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0xB4FF70", Offset = "0xB4FF70", VA = "0xB4FF70")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0xB52D00", Offset = "0xB52D00", VA = "0xB52D00")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0xB52DCC", Offset = "0xB52DCC", VA = "0xB52DCC")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0xB52E60", Offset = "0xB52E60", VA = "0xB52E60")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0xB52F24", Offset = "0xB52F24", VA = "0xB52F24")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0xB52FC8", Offset = "0xB52FC8", VA = "0xB52FC8")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0xB530A8", Offset = "0xB530A8", VA = "0xB530A8")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0xB53B8C", Offset = "0xB53B8C", VA = "0xB53B8C")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0xB5424C", Offset = "0xB5424C", VA = "0xB5424C")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0xB5442C", Offset = "0xB5442C", VA = "0xB5442C")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0xB55170", Offset = "0xB55170", VA = "0xB55170")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0xB532B0", Offset = "0xB532B0", VA = "0xB532B0")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0xB55290", Offset = "0xB55290", VA = "0xB55290")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0xB55364", Offset = "0xB55364", VA = "0xB55364")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0xB55444", Offset = "0xB55444", VA = "0xB55444")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0xB557FC", Offset = "0xB557FC", VA = "0xB557FC")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0xB559F8", Offset = "0xB559F8", VA = "0xB559F8")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0xB55B14", Offset = "0xB55B14", VA = "0xB55B14")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0xB55CDC", Offset = "0xB55CDC", VA = "0xB55CDC")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0xB55DB4", Offset = "0xB55DB4", VA = "0xB55DB4")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0xB55EE8", Offset = "0xB55EE8", VA = "0xB55EE8")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0xB562D4", Offset = "0xB562D4", VA = "0xB562D4")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x2000171")]
	public enum EmitterChannel
	{
		[Token(Token = "0x4000A2C")]
		None = -1,
		[Token(Token = "0x4000A2D")]
		Reserved,
		[Token(Token = "0x4000A2E")]
		Any
	}
	[Serializable]
	[Token(Token = "0x2000172")]
	public class MixerSnapshot
	{
		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0xB56CBC", Offset = "0xB56CBC", VA = "0xB56CBC")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x2000173")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0xB56C60", Offset = "0xB56C60", VA = "0xB56C60")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x2000174")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x20002C8")]
		public enum FadeState
		{
			[Token(Token = "0x40014FE")]
			Null,
			[Token(Token = "0x40014FF")]
			FadingIn,
			[Token(Token = "0x4001500")]
			FadingOut,
			[Token(Token = "0x4001501")]
			Ducking
		}

		[Token(Token = "0x20002C9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741268", Offset = "0x741268")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001502")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001503")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001504")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4001505")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x4001506")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x4001507")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x170001E6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F99")]
				[Address(RVA = "0xB57708", Offset = "0xB57708", VA = "0xB57708", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001E7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F9B")]
				[Address(RVA = "0xB57770", Offset = "0xB57770", VA = "0xB57770", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F96")]
			[Address(RVA = "0xB573E8", Offset = "0xB573E8", VA = "0xB573E8")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x6000F97")]
			[Address(RVA = "0xB57618", Offset = "0xB57618", VA = "0xB57618", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F98")]
			[Address(RVA = "0xB5761C", Offset = "0xB5761C", VA = "0xB5761C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F9A")]
			[Address(RVA = "0xB57710", Offset = "0xB57710", VA = "0xB57710", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741278", Offset = "0x741278")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001508")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001509")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400150A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x400150B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x400150C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x400150D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x400150E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x400150F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4001510")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x170001E8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F9F")]
				[Address(RVA = "0xB57BBC", Offset = "0xB57BBC", VA = "0xB57BBC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001E9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FA1")]
				[Address(RVA = "0xB57C24", Offset = "0xB57C24", VA = "0xB57C24", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F9C")]
			[Address(RVA = "0xB575A8", Offset = "0xB575A8", VA = "0xB575A8")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6000F9D")]
			[Address(RVA = "0xB57A50", Offset = "0xB57A50", VA = "0xB57A50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F9E")]
			[Address(RVA = "0xB57A54", Offset = "0xB57A54", VA = "0xB57A54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FA0")]
			[Address(RVA = "0xB57BC4", Offset = "0xB57BC4", VA = "0xB57BC4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741288", Offset = "0x741288")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001511")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001512")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001513")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x4001514")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x4001515")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x4001516")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4001517")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x4001518")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x4001519")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x400151A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x400151B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x400151C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x170001EA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FA5")]
				[Address(RVA = "0xB579E0", Offset = "0xB579E0", VA = "0xB579E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001EB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FA7")]
				[Address(RVA = "0xB57A48", Offset = "0xB57A48", VA = "0xB57A48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FA2")]
			[Address(RVA = "0xB575D4", Offset = "0xB575D4", VA = "0xB575D4")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6000FA3")]
			[Address(RVA = "0xB57778", Offset = "0xB57778", VA = "0xB57778", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FA4")]
			[Address(RVA = "0xB5777C", Offset = "0xB5777C", VA = "0xB5777C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FA6")]
			[Address(RVA = "0xB579E8", Offset = "0xB579E8", VA = "0xB579E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x170000F2")]
		public float volume
		{
			[Token(Token = "0x60008E3")]
			[Address(RVA = "0xB55154", Offset = "0xB55154", VA = "0xB55154")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60008E4")]
			[Address(RVA = "0xB56D5C", Offset = "0xB56D5C", VA = "0xB56D5C")]
			set
			{
			}
		}

		[Token(Token = "0x170000F3")]
		public float pitch
		{
			[Token(Token = "0x60008E5")]
			[Address(RVA = "0xB56D78", Offset = "0xB56D78", VA = "0xB56D78")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60008E6")]
			[Address(RVA = "0xB56D94", Offset = "0xB56D94", VA = "0xB56D94")]
			set
			{
			}
		}

		[Token(Token = "0x170000F4")]
		public AudioClip clip
		{
			[Token(Token = "0x60008E7")]
			[Address(RVA = "0xB56DB0", Offset = "0xB56DB0", VA = "0xB56DB0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008E8")]
			[Address(RVA = "0xB56DCC", Offset = "0xB56DCC", VA = "0xB56DCC")]
			set
			{
			}
		}

		[Token(Token = "0x170000F5")]
		public float time
		{
			[Token(Token = "0x60008E9")]
			[Address(RVA = "0xB56DE8", Offset = "0xB56DE8", VA = "0xB56DE8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60008EA")]
			[Address(RVA = "0xB5308C", Offset = "0xB5308C", VA = "0xB5308C")]
			set
			{
			}
		}

		[Token(Token = "0x170000F6")]
		public float length
		{
			[Token(Token = "0x60008EB")]
			[Address(RVA = "0xB56E04", Offset = "0xB56E04", VA = "0xB56E04")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000F7")]
		public bool loop
		{
			[Token(Token = "0x60008EC")]
			[Address(RVA = "0xB56EBC", Offset = "0xB56EBC", VA = "0xB56EBC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008ED")]
			[Address(RVA = "0xB56ED8", Offset = "0xB56ED8", VA = "0xB56ED8")]
			set
			{
			}
		}

		[Token(Token = "0x170000F8")]
		public bool mute
		{
			[Token(Token = "0x60008EE")]
			[Address(RVA = "0xB56EF8", Offset = "0xB56EF8", VA = "0xB56EF8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008EF")]
			[Address(RVA = "0xB56F14", Offset = "0xB56F14", VA = "0xB56F14")]
			set
			{
			}
		}

		[Token(Token = "0x170000F9")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x60008F0")]
			[Address(RVA = "0xB56F34", Offset = "0xB56F34", VA = "0xB56F34")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x60008F1")]
			[Address(RVA = "0xB56F50", Offset = "0xB56F50", VA = "0xB56F50")]
			set
			{
			}
		}

		[Token(Token = "0x170000FA")]
		public bool isPlaying
		{
			[Token(Token = "0x60008F2")]
			[Address(RVA = "0xB56F6C", Offset = "0xB56F6C", VA = "0xB56F6C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0xB56F88", Offset = "0xB56F88", VA = "0xB56F88")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0xB55140", Offset = "0xB55140", VA = "0xB55140")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0xB57194", Offset = "0xB57194", VA = "0xB57194")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0xB5543C", Offset = "0xB5543C", VA = "0xB5543C")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0xB5719C", Offset = "0xB5719C", VA = "0xB5719C")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0xB571A4", Offset = "0xB571A4", VA = "0xB571A4")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0xB55C34", Offset = "0xB55C34", VA = "0xB55C34")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0xB5246C", Offset = "0xB5246C", VA = "0xB5246C")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0xB571AC", Offset = "0xB571AC", VA = "0xB571AC")]
		public void Play()
		{
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0xB5720C", Offset = "0xB5720C", VA = "0xB5720C")]
		public void Pause()
		{
		}

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0xB522C0", Offset = "0xB522C0", VA = "0xB522C0")]
		public void Stop()
		{
		}

		[Token(Token = "0x60008FE")]
		[Address(RVA = "0xB572D4", Offset = "0xB572D4", VA = "0xB572D4")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0xB55700", Offset = "0xB55700", VA = "0xB55700")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x6000900")]
		[Address(RVA = "0xB55940", Offset = "0xB55940", VA = "0xB55940")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6000901")]
		[Address(RVA = "0xB52810", Offset = "0xB52810", VA = "0xB52810")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x6000902")]
		[Address(RVA = "0xB5732C", Offset = "0xB5732C", VA = "0xB5732C")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6000903")]
		[Address(RVA = "0xB57358", Offset = "0xB57358", VA = "0xB57358")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74BE90", Offset = "0x74BE90")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6000904")]
		[Address(RVA = "0xB57414", Offset = "0xB57414", VA = "0xB57414")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6000905")]
		[Address(RVA = "0xB52C0C", Offset = "0xB52C0C", VA = "0xB52C0C")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x6000906")]
		[Address(RVA = "0xB52C88", Offset = "0xB52C88", VA = "0xB52C88")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x6000907")]
		[Address(RVA = "0xB52ABC", Offset = "0xB52ABC", VA = "0xB52ABC")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x6000908")]
		[Address(RVA = "0xB52908", Offset = "0xB52908", VA = "0xB52908")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x6000909")]
		[Address(RVA = "0xB5747C", Offset = "0xB5747C", VA = "0xB5747C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74BEF4", Offset = "0x74BEF4")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x600090A")]
		[Address(RVA = "0xB57500", Offset = "0xB57500", VA = "0xB57500")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74BF58", Offset = "0x74BF58")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x600090B")]
		[Address(RVA = "0xB57600", Offset = "0xB57600", VA = "0xB57600")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x2000175")]
	public enum SoundFXNext
	{
		[Token(Token = "0x4000A45")]
		Random,
		[Token(Token = "0x4000A46")]
		Sequential
	}
	[Token(Token = "0x2000176")]
	public enum FreqHint
	{
		[Token(Token = "0x4000A48")]
		None,
		[Token(Token = "0x4000A49")]
		Wide,
		[Token(Token = "0x4000A4A")]
		Narrow
	}
	[Token(Token = "0x2000177")]
	public enum SoundPriority
	{
		[Token(Token = "0x4000A4C")]
		VeryLow = -2,
		[Token(Token = "0x4000A4D")]
		Low,
		[Token(Token = "0x4000A4E")]
		Default,
		[Token(Token = "0x4000A4F")]
		High,
		[Token(Token = "0x4000A50")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x2000178")]
	public class OSPProps
	{
		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x747658", Offset = "0x747658")]
		public bool enableSpatialization;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x747690", Offset = "0x747690")]
		public bool useFastOverride;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7476C8", Offset = "0x7476C8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7476C8", Offset = "0x7476C8")]
		public float gain;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74771C", Offset = "0x74771C")]
		public bool enableInvSquare;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x747754", Offset = "0x747754")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x747754", Offset = "0x747754")]
		public float volumetric;

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7477AC", Offset = "0x7477AC")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x7477AC", Offset = "0x7477AC")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x600090C")]
		[Address(RVA = "0xB56CCC", Offset = "0xB56CCC", VA = "0xB56CCC")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000179")]
	public class SoundFX
	{
		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74780C", Offset = "0x74780C")]
		public string name;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x747844", Offset = "0x747844")]
		public SoundFXNext playback;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74787C", Offset = "0x74787C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x74787C", Offset = "0x74787C")]
		public float volume;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7478D0", Offset = "0x7478D0")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x7478D0", Offset = "0x7478D0")]
		public Vector2 pitchVariance;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74792C", Offset = "0x74792C")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x74792C", Offset = "0x74792C")]
		public Vector2 falloffDistance;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x74798C", Offset = "0x74798C")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7479C4", Offset = "0x7479C4")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7479FC", Offset = "0x7479FC")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x747A34", Offset = "0x747A34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x747A34", Offset = "0x747A34")]
		public float spread;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x747A8C", Offset = "0x747A8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x747A8C", Offset = "0x747A8C")]
		public float pctChanceToPlay;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x747AE0", Offset = "0x747AE0")]
		public SoundPriority priority;

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x747B18", Offset = "0x747B18")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x747B18", Offset = "0x747B18")]
		public Vector2 delay;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x747B74", Offset = "0x747B74")]
		public bool looping;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x747BAC", Offset = "0x747BAC")]
		public AudioClip[] soundClips;

		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x170000FB")]
		public int Length
		{
			[Token(Token = "0x600090E")]
			[Address(RVA = "0xB57C2C", Offset = "0xB57C2C", VA = "0xB57C2C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000FC")]
		public bool IsValid
		{
			[Token(Token = "0x600090F")]
			[Address(RVA = "0xB57C48", Offset = "0xB57C48", VA = "0xB57C48")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000FD")]
		public SoundGroup Group
		{
			[Token(Token = "0x6000910")]
			[Address(RVA = "0xB57CEC", Offset = "0xB57CEC", VA = "0xB57CEC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000911")]
			[Address(RVA = "0xB57CF4", Offset = "0xB57CF4", VA = "0xB57CF4")]
			set
			{
			}
		}

		[Token(Token = "0x170000FE")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x6000912")]
			[Address(RVA = "0xB55048", Offset = "0xB55048", VA = "0xB55048")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000FF")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x6000913")]
			[Address(RVA = "0xB5507C", Offset = "0xB5507C", VA = "0xB5507C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600090D")]
		[Address(RVA = "0xB565DC", Offset = "0xB565DC", VA = "0xB565DC")]
		public SoundFX()
		{
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0xB54F78", Offset = "0xB54F78", VA = "0xB54F78")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6000915")]
		[Address(RVA = "0xB550A0", Offset = "0xB550A0", VA = "0xB550A0")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x6000916")]
		[Address(RVA = "0xB55054", Offset = "0xB55054", VA = "0xB55054")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000917")]
		[Address(RVA = "0xB57D1C", Offset = "0xB57D1C", VA = "0xB57D1C")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000918")]
		[Address(RVA = "0xB55094", Offset = "0xB55094", VA = "0xB55094")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x6000919")]
		[Address(RVA = "0xB57E18", Offset = "0xB57E18", VA = "0xB57E18")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x600091A")]
		[Address(RVA = "0xB57EF4", Offset = "0xB57EF4", VA = "0xB57EF4")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x600091B")]
		[Address(RVA = "0xB58008", Offset = "0xB58008", VA = "0xB58008")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x600091C")]
		[Address(RVA = "0xB58094", Offset = "0xB58094", VA = "0xB58094")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x600091D")]
		[Address(RVA = "0xB58128", Offset = "0xB58128", VA = "0xB58128")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0xB581B4", Offset = "0xB581B4", VA = "0xB581B4")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x600091F")]
		[Address(RVA = "0xB58240", Offset = "0xB58240", VA = "0xB58240")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200017A")]
	public class SoundFXRef
	{
		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x17000100")]
		public SoundFX soundFX
		{
			[Token(Token = "0x6000920")]
			[Address(RVA = "0xB582B8", Offset = "0xB582B8", VA = "0xB582B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000101")]
		public string name
		{
			[Token(Token = "0x6000921")]
			[Address(RVA = "0xB583AC", Offset = "0xB583AC", VA = "0xB583AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000922")]
			[Address(RVA = "0xB583B4", Offset = "0xB583B4", VA = "0xB583B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000102")]
		public int Length
		{
			[Token(Token = "0x6000924")]
			[Address(RVA = "0xB583BC", Offset = "0xB583BC", VA = "0xB583BC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000103")]
		public bool IsValid
		{
			[Token(Token = "0x6000925")]
			[Address(RVA = "0xB58400", Offset = "0xB58400", VA = "0xB58400")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000923")]
		[Address(RVA = "0xB582E8", Offset = "0xB582E8", VA = "0xB582E8")]
		private void Init()
		{
		}

		[Token(Token = "0x6000926")]
		[Address(RVA = "0xB58438", Offset = "0xB58438", VA = "0xB58438")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0xB58470", Offset = "0xB58470", VA = "0xB58470")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0xB584B0", Offset = "0xB584B0", VA = "0xB584B0")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000929")]
		[Address(RVA = "0xB4FD7C", Offset = "0xB4FD7C", VA = "0xB4FD7C")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0xB584F8", Offset = "0xB584F8", VA = "0xB584F8")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0xB58538", Offset = "0xB58538", VA = "0xB58538")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0xB58588", Offset = "0xB58588", VA = "0xB58588")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0xB585C0", Offset = "0xB585C0", VA = "0xB585C0")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0xB58600", Offset = "0xB58600", VA = "0xB58600")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0xB58638", Offset = "0xB58638", VA = "0xB58638")]
		public SoundFXRef()
		{
		}
	}
}
namespace HurricaneVR.TechDemo.Scripts
{
	[Token(Token = "0x200017B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x740250", Offset = "0x740250")]
	public class DemoDummyArm : MonoBehaviour
	{
		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform Anchor;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Length;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LineRenderer Rope;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform ArmRopeAnchor;

		[Token(Token = "0x6000930")]
		[Address(RVA = "0x8BDB84", Offset = "0x8BDB84", VA = "0x8BDB84")]
		private void Start()
		{
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0x8BDC54", Offset = "0x8BDC54", VA = "0x8BDC54")]
		private void Update()
		{
		}

		[Token(Token = "0x6000932")]
		[Address(RVA = "0x8BDCC0", Offset = "0x8BDCC0", VA = "0x8BDCC0")]
		public DemoDummyArm()
		{
		}
	}
	[Token(Token = "0x200017C")]
	public class DemoGlassRotate : MonoBehaviour
	{
		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Timer;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Degrees;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool Unlocked;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool DoneRotating;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip SFXOpen;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _elapsed;

		[Token(Token = "0x6000933")]
		[Address(RVA = "0x8BDCD0", Offset = "0x8BDCD0", VA = "0x8BDCD0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0x8BDCD4", Offset = "0x8BDCD4", VA = "0x8BDCD4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000935")]
		[Address(RVA = "0x8BDE4C", Offset = "0x8BDE4C", VA = "0x8BDE4C")]
		public void Unlock()
		{
		}

		[Token(Token = "0x6000936")]
		[Address(RVA = "0x8BDEEC", Offset = "0x8BDEEC", VA = "0x8BDEEC")]
		public DemoGlassRotate()
		{
		}
	}
	[Token(Token = "0x200017D")]
	public class DemoHatchDoor : MonoBehaviour
	{
		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Timer;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Degrees;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool Unlocked;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool DoneRotating;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip SFXOpen;

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _elapsed;

		[Token(Token = "0x6000937")]
		[Address(RVA = "0x8BDF00", Offset = "0x8BDF00", VA = "0x8BDF00")]
		private void Update()
		{
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0x8BE078", Offset = "0x8BE078", VA = "0x8BE078")]
		public void Unlock()
		{
		}

		[Token(Token = "0x6000939")]
		[Address(RVA = "0x8BE118", Offset = "0x8BE118", VA = "0x8BE118")]
		public DemoHatchDoor()
		{
		}
	}
	[Token(Token = "0x200017E")]
	public class DemoHeavyDoor : MonoBehaviour
	{
		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody DoorRigidbody;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HVRRotationTracker ValveTracker;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HVRRotationLimiter Limiter;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float MaxAngle;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip[] SFX;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float SFXAngle;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float Angle;

		[Token(Token = "0x600093A")]
		[Address(RVA = "0x8BE12C", Offset = "0x8BE12C", VA = "0x8BE12C")]
		private void Start()
		{
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0x8BE130", Offset = "0x8BE130", VA = "0x8BE130")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0x8BE2F0", Offset = "0x8BE2F0", VA = "0x8BE2F0")]
		public DemoHeavyDoor()
		{
		}
	}
	[Token(Token = "0x200017F")]
	public class DemoKeyHologram : MonoBehaviour
	{
		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Interval;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float LastMove;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Vector3> Positions;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int Index;

		[Token(Token = "0x600093D")]
		[Address(RVA = "0x8BE308", Offset = "0x8BE308", VA = "0x8BE308")]
		private void Start()
		{
		}

		[Token(Token = "0x600093E")]
		[Address(RVA = "0x8BE30C", Offset = "0x8BE30C", VA = "0x8BE30C")]
		private void Update()
		{
		}

		[Token(Token = "0x600093F")]
		[Address(RVA = "0x8BE414", Offset = "0x8BE414", VA = "0x8BE414")]
		public void Destroy()
		{
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0x8BE490", Offset = "0x8BE490", VA = "0x8BE490")]
		public DemoKeyHologram()
		{
		}
	}
	[Token(Token = "0x2000180")]
	public class DemoKeypad : MonoBehaviour
	{
		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent Unlocked;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Code;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshPro Display;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Entry;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool ForceUnlock;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool _unlocked;

		[Token(Token = "0x17000104")]
		public int Index
		{
			[Token(Token = "0x6000941")]
			[Address(RVA = "0x8BE50C", Offset = "0x8BE50C", VA = "0x8BE50C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000105")]
		public int MaxLength
		{
			[Token(Token = "0x6000942")]
			[Address(RVA = "0x8BE524", Offset = "0x8BE524", VA = "0x8BE524")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000943")]
		[Address(RVA = "0x8BE53C", Offset = "0x8BE53C", VA = "0x8BE53C", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0x8BE844", Offset = "0x8BE844", VA = "0x8BE844", Slot = "5")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x6000945")]
		[Address(RVA = "0x8BE860", Offset = "0x8BE860", VA = "0x8BE860", Slot = "6")]
		protected virtual void OnButtonDown(HVRPhysicsButton button)
		{
		}

		[Token(Token = "0x6000946")]
		[Address(RVA = "0x8BEA1C", Offset = "0x8BEA1C", VA = "0x8BEA1C", Slot = "7")]
		protected virtual void Unlock()
		{
		}

		[Token(Token = "0x6000947")]
		[Address(RVA = "0x8BEAB0", Offset = "0x8BEAB0", VA = "0x8BEAB0")]
		public DemoKeypad()
		{
		}
	}
	[Token(Token = "0x2000181")]
	public class DemoKeypadButton : HVRPhysicsButton
	{
		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public char Key;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public TextMeshPro TextMeshPro;

		[Token(Token = "0x6000948")]
		[Address(RVA = "0x8BEB28", Offset = "0x8BEB28", VA = "0x8BEB28", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000949")]
		[Address(RVA = "0x8BEBA4", Offset = "0x8BEBA4", VA = "0x8BEBA4")]
		public DemoKeypadButton()
		{
		}
	}
	[Token(Token = "0x2000182")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7402B4", Offset = "0x7402B4")]
	public class DemoLock : MonoBehaviour
	{
		[Token(Token = "0x20002CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741298", Offset = "0x741298")]
		private sealed class <MoveKey>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400151D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400151E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400151F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HVRGrabbable key;

			[Token(Token = "0x4001520")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DemoLock <>4__this;

			[Token(Token = "0x4001521")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 <start>5__2;

			[Token(Token = "0x4001522")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Quaternion <startRot>5__3;

			[Token(Token = "0x4001523")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsed>5__4;

			[Token(Token = "0x170001EC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FAB")]
				[Address(RVA = "0x8BF30C", Offset = "0x8BF30C", VA = "0x8BF30C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001ED")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FAD")]
				[Address(RVA = "0x8BF374", Offset = "0x8BF374", VA = "0x8BF374", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FA8")]
			[Address(RVA = "0x8BEEF4", Offset = "0x8BEEF4", VA = "0x8BEEF4")]
			[DebuggerHidden]
			public <MoveKey>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6000FA9")]
			[Address(RVA = "0x8BEF98", Offset = "0x8BEF98", VA = "0x8BEF98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FAA")]
			[Address(RVA = "0x8BEF9C", Offset = "0x8BEF9C", VA = "0x8BEF9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FAC")]
			[Address(RVA = "0x8BF314", Offset = "0x8BF314", VA = "0x8BF314", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DemoPassthroughSocket Socket;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HVRGrabbable FaceGrabbable;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject Face;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform Key;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float AnimationTime;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioClip SFXUnlocked;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip SFXKeyInserted;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float LockThreshold;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent Unlocked;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _unlocked;

		[Token(Token = "0x600094A")]
		[Address(RVA = "0x8BEBAC", Offset = "0x8BEBAC", VA = "0x8BEBAC")]
		public void Start()
		{
		}

		[Token(Token = "0x600094B")]
		[Address(RVA = "0x8BEC64", Offset = "0x8BEC64", VA = "0x8BEC64")]
		public void Update()
		{
		}

		[Token(Token = "0x600094C")]
		[Address(RVA = "0x8BEE48", Offset = "0x8BEE48", VA = "0x8BEE48")]
		private void OnKeyGrabbed(HVRGrabberBase grabber, HVRGrabbable key)
		{
		}

		[Token(Token = "0x600094D")]
		[Address(RVA = "0x8BEE78", Offset = "0x8BEE78", VA = "0x8BEE78")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74BFBC", Offset = "0x74BFBC")]
		private IEnumerator MoveKey(HVRGrabbable key)
		{
			return null;
		}

		[Token(Token = "0x600094E")]
		[Address(RVA = "0x8BEF20", Offset = "0x8BEF20", VA = "0x8BEF20")]
		public DemoLock()
		{
		}
	}
	[Token(Token = "0x2000183")]
	public class DemoPassthroughSocket : HVRSocket
	{
		[Token(Token = "0x600094F")]
		[Address(RVA = "0x8BF37C", Offset = "0x8BF37C", VA = "0x8BF37C", Slot = "25")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000950")]
		[Address(RVA = "0x8BF3B4", Offset = "0x8BF3B4", VA = "0x8BF3B4", Slot = "39")]
		protected override void OnGrabbed(HVRGrabArgs args)
		{
		}

		[Token(Token = "0x6000951")]
		[Address(RVA = "0x8BF478", Offset = "0x8BF478", VA = "0x8BF478")]
		public DemoPassthroughSocket()
		{
		}
	}
	[Token(Token = "0x2000184")]
	public class DemoPowerUnit : MonoBehaviour
	{
		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent PoweredUp;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HVRSocket LeftSocket;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HVRSocket RightSocket;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MeshRenderer LeftLight;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MeshRenderer RightLight;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public HVRRotationTracker LeverRotation;

		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float RequiredAngle;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioClip SFXPoweredOn;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int RequiredCells;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int SocketedCellCount;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool Engaged;

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Material OnMaterial;

		[Token(Token = "0x17000106")]
		public bool IsPoweredUp
		{
			[Token(Token = "0x6000952")]
			[Address(RVA = "0x8BFB54", Offset = "0x8BFB54", VA = "0x8BFB54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000953")]
		[Address(RVA = "0x8BFB64", Offset = "0x8BFB64", VA = "0x8BFB64")]
		private void Start()
		{
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0x8BFC54", Offset = "0x8BFC54", VA = "0x8BFC54")]
		private void OnRightSocketGrabbed(HVRGrabberBase arg0, HVRGrabbable arg1)
		{
		}

		[Token(Token = "0x6000955")]
		[Address(RVA = "0x8BFCF0", Offset = "0x8BFCF0", VA = "0x8BFCF0")]
		private void OnLeftSocketGrabbed(HVRGrabberBase arg0, HVRGrabbable arg1)
		{
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0x8BFD8C", Offset = "0x8BFD8C", VA = "0x8BFD8C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000957")]
		[Address(RVA = "0x8BFEC8", Offset = "0x8BFEC8", VA = "0x8BFEC8")]
		public DemoPowerUnit()
		{
		}
	}
	[Token(Token = "0x2000185")]
	public enum SafeDialState
	{
		[Token(Token = "0x4000AA7")]
		CamOne,
		[Token(Token = "0x4000AA8")]
		CamTwo,
		[Token(Token = "0x4000AA9")]
		CamThree,
		[Token(Token = "0x4000AAA")]
		Unlocked
	}
	[Token(Token = "0x2000186")]
	public class DemoSafeDial : HVRRotationTracker
	{
		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public TextMeshPro NumberLabel;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public TextMeshPro DebugLabel;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool DisplayDebug;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int First;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public int Second;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public int Third;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public int CurrentNumber;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float CamDistance;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float PreviousDistance;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float Tolerance;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float LowerBound;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float UpperBound;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public int AccuracyAllowance;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public UnityEvent Unlocked;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private SafeDialState _state;

		[Token(Token = "0x17000107")]
		public SafeDialState State
		{
			[Token(Token = "0x6000958")]
			[Address(RVA = "0x8BFF40", Offset = "0x8BFF40", VA = "0x8BFF40")]
			get
			{
				return default(SafeDialState);
			}
			[Token(Token = "0x6000959")]
			[Address(RVA = "0x8BFF48", Offset = "0x8BFF48", VA = "0x8BFF48")]
			set
			{
			}
		}

		[Token(Token = "0x17000108")]
		public int NumberOfRotations
		{
			[Token(Token = "0x600095A")]
			[Address(RVA = "0x8BFFFC", Offset = "0x8BFFFC", VA = "0x8BFFFC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000109")]
		public bool IsFirstInRange
		{
			[Token(Token = "0x600095E")]
			[Address(RVA = "0x8C03E4", Offset = "0x8C03E4", VA = "0x8C03E4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700010A")]
		public bool IsSecondInRange
		{
			[Token(Token = "0x600095F")]
			[Address(RVA = "0x8C0410", Offset = "0x8C0410", VA = "0x8C0410")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700010B")]
		public bool IsThirdInRange
		{
			[Token(Token = "0x6000960")]
			[Address(RVA = "0x8C043C", Offset = "0x8C043C", VA = "0x8C043C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0x8C0088", Offset = "0x8C0088", VA = "0x8C0088", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0x8BFF50", Offset = "0x8BFF50", VA = "0x8BFF50")]
		private void ComputeBounds()
		{
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0x8C03DC", Offset = "0x8C03DC", VA = "0x8C03DC", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0x8C03B4", Offset = "0x8C03B4", VA = "0x8C03B4")]
		public void ResetLockState(SafeDialState state)
		{
		}

		[Token(Token = "0x6000962")]
		[Address(RVA = "0x8C0464", Offset = "0x8C0464", VA = "0x8C0464", Slot = "6")]
		protected override void OnStepChanged(int step, bool raiseEvents)
		{
		}

		[Token(Token = "0x6000963")]
		[Address(RVA = "0x8C07FC", Offset = "0x8C07FC", VA = "0x8C07FC", Slot = "7")]
		protected override void OnAngleChanged(float angle, float delta)
		{
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0x8C0978", Offset = "0x8C0978", VA = "0x8C0978")]
		public DemoSafeDial()
		{
		}
	}
	[Token(Token = "0x2000187")]
	public class DemoSafeDoor : MonoBehaviour
	{
		[Token(Token = "0x6000965")]
		[Address(RVA = "0x8C0A00", Offset = "0x8C0A00", VA = "0x8C0A00")]
		public DemoSafeDoor()
		{
		}
	}
	[Token(Token = "0x2000188")]
	public class DemoSlidingDoor : MonoBehaviour
	{
		[Token(Token = "0x20002CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7412A8", Offset = "0x7412A8")]
		private sealed class <OpenDoorRoutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001524")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001525")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001526")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DemoSlidingDoor <>4__this;

			[Token(Token = "0x4001527")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <elapsed>5__2;

			[Token(Token = "0x4001528")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <LockRotateSpeed>5__3;

			[Token(Token = "0x4001529")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <time>5__4;

			[Token(Token = "0x170001EE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FB1")]
				[Address(RVA = "0x8C0F5C", Offset = "0x8C0F5C", VA = "0x8C0F5C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001EF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FB3")]
				[Address(RVA = "0x8C0FC4", Offset = "0x8C0FC4", VA = "0x8C0FC4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FAE")]
			[Address(RVA = "0x8C0B3C", Offset = "0x8C0B3C", VA = "0x8C0B3C")]
			[DebuggerHidden]
			public <OpenDoorRoutine>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6000FAF")]
			[Address(RVA = "0x8C0B7C", Offset = "0x8C0B7C", VA = "0x8C0B7C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FB0")]
			[Address(RVA = "0x8C0B80", Offset = "0x8C0B80", VA = "0x8C0B80", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FB2")]
			[Address(RVA = "0x8C0F64", Offset = "0x8C0F64", VA = "0x8C0F64", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody LeftDoor;

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rigidbody RightDoor;

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform Lock;

		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float LockRotateTime;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float LockRotateAngles;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float OpenOffset;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float Speed;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioClip OpenedClip;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _opened;

		[Token(Token = "0x6000966")]
		[Address(RVA = "0x8C0A08", Offset = "0x8C0A08", VA = "0x8C0A08")]
		public void Start()
		{
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0x8C0A0C", Offset = "0x8C0A0C", VA = "0x8C0A0C")]
		public void OpenDoors()
		{
		}

		[Token(Token = "0x6000968")]
		[Address(RVA = "0x8C0ACC", Offset = "0x8C0ACC", VA = "0x8C0ACC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74C020", Offset = "0x74C020")]
		private IEnumerator OpenDoorRoutine()
		{
			return null;
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0x8C0B68", Offset = "0x8C0B68", VA = "0x8C0B68")]
		public DemoSlidingDoor()
		{
		}
	}
	[Token(Token = "0x2000189")]
	public class DemoSocketFilter : HVREnumFlagsSocketFilter<DemoSocketableItems>
	{
		[Token(Token = "0x600096A")]
		[Address(RVA = "0x8C0FCC", Offset = "0x8C0FCC", VA = "0x8C0FCC")]
		public DemoSocketFilter()
		{
		}
	}
	[Token(Token = "0x200018A")]
	public class DemoSocketables : HVREnumFlagsSocketable<DemoSocketableItems>
	{
		[Token(Token = "0x600096B")]
		[Address(RVA = "0x8C101C", Offset = "0x8C101C", VA = "0x8C101C")]
		public DemoSocketables()
		{
		}
	}
	[Token(Token = "0x200018B")]
	[Flags]
	public enum DemoSocketableItems
	{
		[Token(Token = "0x4000AC4")]
		None = 0,
		[Token(Token = "0x4000AC5")]
		Pistol = 1,
		[Token(Token = "0x4000AC6")]
		PistolMagazine = 2,
		[Token(Token = "0x4000AC7")]
		SMG = 4,
		[Token(Token = "0x4000AC8")]
		SMGMagazine = 8,
		[Token(Token = "0x4000AC9")]
		PowerCell = 0x10,
		[Token(Token = "0x4000ACA")]
		SmallObject = 0x20,
		[Token(Token = "0x4000ACB")]
		LargeObject = 0x40,
		[Token(Token = "0x4000ACC")]
		DoorKey = 0x80,
		[Token(Token = "0x4000ACD")]
		ShotgunShell = 0x100,
		[Token(Token = "0x4000ACE")]
		Valve = 0x200,
		[Token(Token = "0x4000ACF")]
		Key = 0x400,
		[Token(Token = "0x4000AD0")]
		Fuse = 0x800,
		[Token(Token = "0x4000AD1")]
		Gear = 0x1000,
		[Token(Token = "0x4000AD2")]
		Fish = 0x2000,
		[Token(Token = "0x4000AD3")]
		Battery = 0x4000,
		[Token(Token = "0x4000AD4")]
		All = -1
	}
	[Token(Token = "0x200018C")]
	public class DemoValveHologram : MonoBehaviour
	{
		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Interval;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion StartRotation;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Quaternion EndRotation;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion _current;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion _next;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _elapsed;

		[Token(Token = "0x600096C")]
		[Address(RVA = "0x8C106C", Offset = "0x8C106C", VA = "0x8C106C")]
		private void Start()
		{
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0x8C1080", Offset = "0x8C1080", VA = "0x8C1080")]
		private void Update()
		{
		}

		[Token(Token = "0x600096E")]
		[Address(RVA = "0x8C11A8", Offset = "0x8C11A8", VA = "0x8C11A8")]
		public void Destroy()
		{
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0x8C1224", Offset = "0x8C1224", VA = "0x8C1224")]
		public DemoValveHologram()
		{
		}
	}
	[Token(Token = "0x200018D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x740328", Offset = "0x740328")]
	public class DemoValveLock : MonoBehaviour
	{
		[Token(Token = "0x20002CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7412B8", Offset = "0x7412B8")]
		private sealed class <MoveKey>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400152A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400152B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400152C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HVRGrabbable key;

			[Token(Token = "0x400152D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DemoValveLock <>4__this;

			[Token(Token = "0x400152E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 <start>5__2;

			[Token(Token = "0x400152F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Quaternion <startRot>5__3;

			[Token(Token = "0x4001530")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsed>5__4;

			[Token(Token = "0x170001F0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FB7")]
				[Address(RVA = "0x8C16D4", Offset = "0x8C16D4", VA = "0x8C16D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FB9")]
				[Address(RVA = "0x8C173C", Offset = "0x8C173C", VA = "0x8C173C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FB4")]
			[Address(RVA = "0x8C13A0", Offset = "0x8C13A0", VA = "0x8C13A0")]
			[DebuggerHidden]
			public <MoveKey>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6000FB5")]
			[Address(RVA = "0x8C13DC", Offset = "0x8C13DC", VA = "0x8C13DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FB6")]
			[Address(RVA = "0x8C13E0", Offset = "0x8C13E0", VA = "0x8C13E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FB8")]
			[Address(RVA = "0x8C16DC", Offset = "0x8C16DC", VA = "0x8C16DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DemoPassthroughSocket Socket;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HVRGrabbable FaceGrabbable;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float AnimationTime;

		[Token(Token = "0x6000970")]
		[Address(RVA = "0x8C1238", Offset = "0x8C1238", VA = "0x8C1238")]
		public void Start()
		{
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0x8C12F0", Offset = "0x8C12F0", VA = "0x8C12F0")]
		public void Update()
		{
		}

		[Token(Token = "0x6000972")]
		[Address(RVA = "0x8C12F4", Offset = "0x8C12F4", VA = "0x8C12F4")]
		private void OnValveGrabbed(HVRGrabberBase grabber, HVRGrabbable key)
		{
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0x8C1324", Offset = "0x8C1324", VA = "0x8C1324")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74C084", Offset = "0x74C084")]
		private IEnumerator MoveKey(HVRGrabbable key)
		{
			return null;
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0x8C13CC", Offset = "0x8C13CC", VA = "0x8C13CC")]
		public DemoValveLock()
		{
		}
	}
	[Token(Token = "0x200018E")]
	public class DemoPowerStam : MonoBehaviour
	{
		[Token(Token = "0x20002CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7412C8", Offset = "0x7412C8")]
		private sealed class <Doorwait>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001531")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001532")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001533")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DemoPowerStam <>4__this;

			[Token(Token = "0x170001F2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FBD")]
				[Address(RVA = "0x8BFAE4", Offset = "0x8BFAE4", VA = "0x8BFAE4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FBF")]
				[Address(RVA = "0x8BFB4C", Offset = "0x8BFB4C", VA = "0x8BFB4C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FBA")]
			[Address(RVA = "0x8BF900", Offset = "0x8BF900", VA = "0x8BF900")]
			[DebuggerHidden]
			public <Doorwait>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6000FBB")]
			[Address(RVA = "0x8BFA34", Offset = "0x8BFA34", VA = "0x8BFA34", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FBC")]
			[Address(RVA = "0x8BFA38", Offset = "0x8BFA38", VA = "0x8BFA38", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FBE")]
			[Address(RVA = "0x8BFAEC", Offset = "0x8BFAEC", VA = "0x8BFAEC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent PoweredUp;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent firstT;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent secondT;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent thirdT;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent firstD;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent secondD;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent thirdD;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Bar B1;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Bar B2;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Bar B3;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool first;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool second;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		public bool third;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public HVRRotationTracker LeverRotation;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float RequiredAngle;

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float LR;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AudioClip SFXPoweredOn;

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public AudioClip SFXFalse;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AudioSource au;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool Engaged;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool wait;

		[Token(Token = "0x6000975")]
		[Address(RVA = "0x8BF480", Offset = "0x8BF480", VA = "0x8BF480")]
		private void Start()
		{
		}

		[Token(Token = "0x6000976")]
		[Address(RVA = "0x8BF484", Offset = "0x8BF484", VA = "0x8BF484")]
		private void Update()
		{
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0x8BF890", Offset = "0x8BF890", VA = "0x8BF890")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74C0E8", Offset = "0x74C0E8")]
		private IEnumerator Doorwait()
		{
			return null;
		}

		[Token(Token = "0x6000978")]
		[Address(RVA = "0x8BF92C", Offset = "0x8BF92C", VA = "0x8BF92C")]
		public DemoPowerStam()
		{
		}
	}
}
namespace HurricaneVR.Samples
{
	[Token(Token = "0x200018F")]
	public class AmmoSocketFilter : HVREnumSocketFilter<AmmoType>
	{
		[Token(Token = "0x6000979")]
		[Address(RVA = "0x8BAB30", Offset = "0x8BAB30", VA = "0x8BAB30")]
		public AmmoSocketFilter()
		{
		}
	}
	[Token(Token = "0x2000190")]
	public class AmmoSocketable : HVREnumSocketable<AmmoType>
	{
		[Token(Token = "0x600097A")]
		[Address(RVA = "0x8BAB80", Offset = "0x8BAB80", VA = "0x8BAB80")]
		public AmmoSocketable()
		{
		}
	}
	[Token(Token = "0x2000191")]
	public enum AmmoType
	{
		[Token(Token = "0x4000AF4")]
		Mag556,
		[Token(Token = "0x4000AF5")]
		ShotgunShell
	}
	[Token(Token = "0x2000192")]
	public class Backpack : MonoBehaviour
	{
		[Token(Token = "0x20002D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7412D8", Offset = "0x7412D8")]
		private sealed class <IgnoreColliders>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001534")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001535")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001536")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Backpack <>4__this;

			[Token(Token = "0x170001F4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FC3")]
				[Address(RVA = "0x8BB0B4", Offset = "0x8BB0B4", VA = "0x8BB0B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FC5")]
				[Address(RVA = "0x8BB11C", Offset = "0x8BB11C", VA = "0x8BB11C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FC0")]
			[Address(RVA = "0x8BACEC", Offset = "0x8BACEC", VA = "0x8BACEC")]
			[DebuggerHidden]
			public <IgnoreColliders>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6000FC1")]
			[Address(RVA = "0x8BAF68", Offset = "0x8BAF68", VA = "0x8BAF68", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FC2")]
			[Address(RVA = "0x8BAF6C", Offset = "0x8BAF6C", VA = "0x8BAF6C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FC4")]
			[Address(RVA = "0x8BB0BC", Offset = "0x8BB0BC", VA = "0x8BB0BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x747BE4", Offset = "0x747BE4")]
		public List<Collider> Colliders;

		[Token(Token = "0x600097B")]
		[Address(RVA = "0x8BABD0", Offset = "0x8BABD0", VA = "0x8BABD0")]
		private void Start()
		{
		}

		[Token(Token = "0x600097C")]
		[Address(RVA = "0x8BAC7C", Offset = "0x8BAC7C", VA = "0x8BAC7C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74C14C", Offset = "0x74C14C")]
		public IEnumerator IgnoreColliders()
		{
			return null;
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0x8BAD18", Offset = "0x8BAD18", VA = "0x8BAD18")]
		public void IgnoreCollision(HVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x600097E")]
		[Address(RVA = "0x8BAEF8", Offset = "0x8BAEF8", VA = "0x8BAEF8")]
		public Backpack()
		{
		}
	}
	[Token(Token = "0x2000193")]
	public enum CombinationLockState
	{
		[Token(Token = "0x4000AF8")]
		CamOne,
		[Token(Token = "0x4000AF9")]
		CamTwo,
		[Token(Token = "0x4000AFA")]
		CamThree,
		[Token(Token = "0x4000AFB")]
		Unlocked
	}
	[Token(Token = "0x2000194")]
	public class CombinationLock : HVRDial
	{
		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public TextMeshPro NumberLabel;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public TextMeshPro DebugLabel;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool DisplayDebug;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public int First;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public int Second;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public int Third;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public int CurrentNumber;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float CamDistance;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float PreviousDistance;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float Tolerance;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float LowerBound;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float UpperBound;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public int AccuracyAllowance;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public UnityEvent Unlocked;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private CombinationLockState _state;

		[Token(Token = "0x1700010C")]
		public CombinationLockState State
		{
			[Token(Token = "0x600097F")]
			[Address(RVA = "0x8BB124", Offset = "0x8BB124", VA = "0x8BB124")]
			get
			{
				return default(CombinationLockState);
			}
			[Token(Token = "0x6000980")]
			[Address(RVA = "0x8BB12C", Offset = "0x8BB12C", VA = "0x8BB12C")]
			set
			{
			}
		}

		[Token(Token = "0x1700010D")]
		public int NumberOfRotations
		{
			[Token(Token = "0x6000981")]
			[Address(RVA = "0x8BB1E0", Offset = "0x8BB1E0", VA = "0x8BB1E0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700010E")]
		public bool IsFirstInRange
		{
			[Token(Token = "0x6000985")]
			[Address(RVA = "0x8BB5C8", Offset = "0x8BB5C8", VA = "0x8BB5C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700010F")]
		public bool IsSecondInRange
		{
			[Token(Token = "0x6000986")]
			[Address(RVA = "0x8BB5F4", Offset = "0x8BB5F4", VA = "0x8BB5F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000110")]
		public bool IsThirdInRange
		{
			[Token(Token = "0x6000987")]
			[Address(RVA = "0x8BB620", Offset = "0x8BB620", VA = "0x8BB620")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0x8BB26C", Offset = "0x8BB26C", VA = "0x8BB26C", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000983")]
		[Address(RVA = "0x8BB134", Offset = "0x8BB134", VA = "0x8BB134")]
		private void ComputeBounds()
		{
		}

		[Token(Token = "0x6000984")]
		[Address(RVA = "0x8BB5C0", Offset = "0x8BB5C0", VA = "0x8BB5C0", Slot = "8")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0x8BB598", Offset = "0x8BB598", VA = "0x8BB598")]
		public void ResetLockState(CombinationLockState state)
		{
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0x8BB648", Offset = "0x8BB648", VA = "0x8BB648", Slot = "6")]
		protected override void OnStepChanged(int step, bool raiseEvents)
		{
		}

		[Token(Token = "0x600098A")]
		[Address(RVA = "0x8BB9B0", Offset = "0x8BB9B0", VA = "0x8BB9B0", Slot = "7")]
		protected override void OnAngleChanged(float angle, float delta, float percent, bool raiseEvents)
		{
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0x8BBB2C", Offset = "0x8BBB2C", VA = "0x8BBB2C")]
		public CombinationLock()
		{
		}
	}
	[Token(Token = "0x2000195")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x74038C", Offset = "0x74038C")]
	public class ExampleLight : MonoBehaviour
	{
		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Light Light;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float MaxIntensity;

		[Token(Token = "0x600098C")]
		[Address(RVA = "0x8BBBB4", Offset = "0x8BBBB4", VA = "0x8BBBB4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0x8BBC0C", Offset = "0x8BBC0C", VA = "0x8BBC0C")]
		public void OnAngledChanged(float angle, float delta, float percent)
		{
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0x8BBC34", Offset = "0x8BBC34", VA = "0x8BBC34")]
		public ExampleLight()
		{
		}
	}
	[Token(Token = "0x2000196")]
	public class Examples : MonoBehaviour
	{
		[Token(Token = "0x20002D1")]
		private class ResetState
		{
			[Token(Token = "0x4001537")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public HVRGrabbable Grabbable;

			[Token(Token = "0x4001538")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public HVRGrabbable Clone;

			[Token(Token = "0x4001539")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 Position;

			[Token(Token = "0x400153A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Quaternion Rotation;

			[Token(Token = "0x400153B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x748E50", Offset = "0x748E50")]
			private Vector3 <Scale>k__BackingField;

			[Token(Token = "0x400153C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Transform Parent;

			[Token(Token = "0x170001F6")]
			public Vector3 Scale
			{
				[Token(Token = "0x6000FC6")]
				[Address(RVA = "0x8BCADC", Offset = "0x8BCADC", VA = "0x8BCADC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74EB74", Offset = "0x74EB74")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000FC7")]
				[Address(RVA = "0x8BCAE8", Offset = "0x8BCAE8", VA = "0x8BCAE8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74EB84", Offset = "0x74EB84")]
				set
				{
				}
			}

			[Token(Token = "0x6000FC8")]
			[Address(RVA = "0x8BC2CC", Offset = "0x8BC2CC", VA = "0x8BC2CC")]
			public ResetState()
			{
			}
		}

		[Token(Token = "0x20002D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7412E8", Offset = "0x7412E8")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x400153D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform parent;

			[Token(Token = "0x400153E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<HVRGrabbable, bool> <>9__0;

			[Token(Token = "0x6000FC9")]
			[Address(RVA = "0x8BC2C4", Offset = "0x8BC2C4", VA = "0x8BC2C4")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6000FCA")]
			[Address(RVA = "0x8BCA38", Offset = "0x8BCA38", VA = "0x8BCA38")]
			internal bool <AddResetGrabbable>b__0(HVRGrabbable e)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Transform> Parents;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<HVRGrabbable> Grabbables;

		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly List<ResetState> _grabbableState;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<HVRGrabbable> _balls;

		[Token(Token = "0x600098F")]
		[Address(RVA = "0x8BBC3C", Offset = "0x8BBC3C", VA = "0x8BBC3C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0x8BBE54", Offset = "0x8BBE54", VA = "0x8BBE54")]
		private void AddResetGrabbable(Transform parent)
		{
		}

		[Token(Token = "0x6000991")]
		[Address(RVA = "0x8BC154", Offset = "0x8BC154", VA = "0x8BC154")]
		private void SaveResetGrabbable(Transform parent, HVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6000992")]
		[Address(RVA = "0x8BC2D4", Offset = "0x8BC2D4", VA = "0x8BC2D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000993")]
		[Address(RVA = "0x8BC2D8", Offset = "0x8BC2D8", VA = "0x8BC2D8")]
		public void BallSpawned(HVRSocket socket, GameObject ball)
		{
		}

		[Token(Token = "0x6000994")]
		[Address(RVA = "0x8BC35C", Offset = "0x8BC35C", VA = "0x8BC35C")]
		public void ResetGrabbables()
		{
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0x8BC8F0", Offset = "0x8BC8F0", VA = "0x8BC8F0")]
		public Examples()
		{
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0x8BC9D0", Offset = "0x8BC9D0", VA = "0x8BC9D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74C1B0", Offset = "0x74C1B0")]
		private void <ResetGrabbables>b__10_0(HVRGrabbable grabbable)
		{
		}
	}
	[Token(Token = "0x2000197")]
	public class HVRShoulderGrabber : HVRSocketContainerGrabber
	{
		[Token(Token = "0x6000997")]
		[Address(RVA = "0x8BCAF4", Offset = "0x8BCAF4", VA = "0x8BCAF4", Slot = "47")]
		public override bool CanHover(HVRGrabbable grabbable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000998")]
		[Address(RVA = "0x8BCCD8", Offset = "0x8BCCD8", VA = "0x8BCCD8")]
		public HVRShoulderGrabber()
		{
		}
	}
	[Token(Token = "0x2000198")]
	public class HVRShoulderSocket : HVRSocket
	{
		[Token(Token = "0x6000999")]
		[Address(RVA = "0x8BCCE0", Offset = "0x8BCCE0", VA = "0x8BCCE0", Slot = "47")]
		public override bool CanHover(HVRGrabbable grabbable)
		{
			return default(bool);
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0x8BCEC4", Offset = "0x8BCEC4", VA = "0x8BCEC4")]
		public HVRShoulderSocket()
		{
		}
	}
	[Token(Token = "0x2000199")]
	public class Holster : HVRSocket
	{
		[Token(Token = "0x600099B")]
		[Address(RVA = "0x8BCECC", Offset = "0x8BCECC", VA = "0x8BCECC", Slot = "55")]
		protected override Quaternion GetRotationOffset(HVRGrabbable grabbable)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0x8BCFC4", Offset = "0x8BCFC4", VA = "0x8BCFC4", Slot = "54")]
		protected override Vector3 GetPositionOffset(HVRGrabbable grabbable)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600099D")]
		[Address(RVA = "0x8BD0BC", Offset = "0x8BD0BC", VA = "0x8BD0BC")]
		public Holster()
		{
		}
	}
	[Token(Token = "0x200019A")]
	public class HolsterOrientation : MonoBehaviour
	{
		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform Orientation;

		[Token(Token = "0x600099E")]
		[Address(RVA = "0x8BD0C4", Offset = "0x8BD0C4", VA = "0x8BD0C4")]
		public HolsterOrientation()
		{
		}
	}
	[Token(Token = "0x200019B")]
	public class ItemsSocketFilter : HVREnumFlagsSocketFilter<Items>
	{
		[Token(Token = "0x600099F")]
		[Address(RVA = "0x8BD0CC", Offset = "0x8BD0CC", VA = "0x8BD0CC")]
		public ItemsSocketFilter()
		{
		}
	}
	[Token(Token = "0x200019C")]
	public class ItemsSocketable : HVREnumFlagsSocketable<Items>
	{
		[Token(Token = "0x60009A0")]
		[Address(RVA = "0x8BD11C", Offset = "0x8BD11C", VA = "0x8BD11C")]
		public ItemsSocketable()
		{
		}
	}
	[Token(Token = "0x200019D")]
	[Flags]
	public enum Items
	{
		[Token(Token = "0x4000B13")]
		None = 0,
		[Token(Token = "0x4000B14")]
		Item = 1,
		[Token(Token = "0x4000B15")]
		LargeItem = 2,
		[Token(Token = "0x4000B16")]
		SmallWeapon = 4,
		[Token(Token = "0x4000B17")]
		MadsonD9Magazine = 8,
		[Token(Token = "0x4000B18")]
		Ball = 0x10,
		[Token(Token = "0x4000B19")]
		All = -1
	}
	[Token(Token = "0x200019E")]
	public class KeypadDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshPro Display;

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x8BD16C", Offset = "0x8BD16C", VA = "0x8BD16C")]
		public void Unlocked()
		{
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x8BD210", Offset = "0x8BD210", VA = "0x8BD210")]
		public KeypadDisplay()
		{
		}
	}
	[Token(Token = "0x200019F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x740400", Offset = "0x740400")]
	public class LeverDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _step;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _angle;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshPro _tm;

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x8BD218", Offset = "0x8BD218", VA = "0x8BD218")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x8BD270", Offset = "0x8BD270", VA = "0x8BD270")]
		public void OnStepChanged(int step)
		{
		}

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0x8BD33C", Offset = "0x8BD33C", VA = "0x8BD33C")]
		public void OnAngleChanged(float angle, float delta, float percent)
		{
		}

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0x8BD41C", Offset = "0x8BD41C", VA = "0x8BD41C")]
		public LeverDisplay()
		{
		}
	}
	[Token(Token = "0x20001A0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x740464", Offset = "0x740464")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x740464", Offset = "0x740464")]
	public class LockedDoor : MonoBehaviour
	{
		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private HingeJoint _hinge;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody _rigidbody;

		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float MinAngle;

		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float MaxAngle;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool LockOnStart;

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x8BD424", Offset = "0x8BD424", VA = "0x8BD424")]
		private void Start()
		{
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x8BD4AC", Offset = "0x8BD4AC", VA = "0x8BD4AC")]
		private void Lock()
		{
		}

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x8BD56C", Offset = "0x8BD56C", VA = "0x8BD56C")]
		public void Unlock()
		{
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x8BD62C", Offset = "0x8BD62C", VA = "0x8BD62C")]
		public LockedDoor()
		{
		}
	}
}
namespace HurricaneVR.Samples.Prefabs.Keypad
{
	[Token(Token = "0x20001A1")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7404F0", Offset = "0x7404F0")]
	public class KeyPadButton : HVRButton
	{
		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x747C1C", Offset = "0x747C1C")]
		public char Key;

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public TextMeshPro Text;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public TextMeshPro Ring;

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x8BD63C", Offset = "0x8BD63C", VA = "0x8BD63C")]
		public KeyPadButton()
		{
		}
	}
	[Token(Token = "0x20001A2")]
	public class Keypad : MonoBehaviour
	{
		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent Unlocked;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Code;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshPro Display;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Entry;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public KeyPadButton LeftActive;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public KeyPadButton RightActive;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int MaxLength;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool _unlocked;

		[Token(Token = "0x17000111")]
		public int Index
		{
			[Token(Token = "0x60009AC")]
			[Address(RVA = "0x8BD644", Offset = "0x8BD644", VA = "0x8BD644")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x8BD65C", Offset = "0x8BD65C", VA = "0x8BD65C", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x8BD954", Offset = "0x8BD954", VA = "0x8BD954", Slot = "5")]
		protected virtual void OnButtonDown(HVRButton button)
		{
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x8BDB08", Offset = "0x8BDB08", VA = "0x8BDB08")]
		private void Update()
		{
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x8BDB0C", Offset = "0x8BDB0C", VA = "0x8BDB0C")]
		public Keypad()
		{
		}
	}
}
namespace HurricaneVR.Framework.Components
{
	[Token(Token = "0x20001A3")]
	public class Bar : MonoBehaviour
	{
		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent EnginOn;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HVRRotationTracker TRack;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform bar;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float angl;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform Nangl;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float smooth;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float min;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float max;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool ok;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool on;

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x8BA070", Offset = "0x8BA070", VA = "0x8BA070")]
		private void Start()
		{
		}

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0x8BA074", Offset = "0x8BA074", VA = "0x8BA074")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0x8BA270", Offset = "0x8BA270", VA = "0x8BA270")]
		public Bar()
		{
		}
	}
	[Token(Token = "0x20001A4")]
	public class RotateGear : MonoBehaviour
	{
		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent KeyOut;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HVRRotationTracker TRack;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform Gear;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform Gear1;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform GearB;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform GearB1;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform TransFrom;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform GearM;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform GearL;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform Ladd;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float angl;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float angl2;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector3 pos;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public bool G1;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		public bool G2;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
		public bool G3;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7F")]
		public bool Key;

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0x8BA2E0", Offset = "0x8BA2E0", VA = "0x8BA2E0")]
		private void Start()
		{
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x8BA2E4", Offset = "0x8BA2E4", VA = "0x8BA2E4")]
		public void B1()
		{
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0x8BA2F0", Offset = "0x8BA2F0", VA = "0x8BA2F0")]
		public void B2()
		{
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x8BA2FC", Offset = "0x8BA2FC", VA = "0x8BA2FC")]
		public void B3()
		{
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x8BA308", Offset = "0x8BA308", VA = "0x8BA308")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0x8BA5B4", Offset = "0x8BA5B4", VA = "0x8BA5B4")]
		public void Rot()
		{
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x8BA5B8", Offset = "0x8BA5B8", VA = "0x8BA5B8")]
		public void Pos()
		{
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x8BA5BC", Offset = "0x8BA5BC", VA = "0x8BA5BC")]
		public RotateGear()
		{
		}
	}
	[Token(Token = "0x20001A5")]
	public class Statues : MonoBehaviour
	{
		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent On;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool one;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool two;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		private bool ok;

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x8BA624", Offset = "0x8BA624", VA = "0x8BA624")]
		public void One()
		{
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0x8BA630", Offset = "0x8BA630", VA = "0x8BA630")]
		public void Two()
		{
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0x8BA63C", Offset = "0x8BA63C", VA = "0x8BA63C")]
		private void Update()
		{
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x8BA690", Offset = "0x8BA690", VA = "0x8BA690")]
		public Statues()
		{
		}
	}
}
namespace HurricaneVR.Framework.Oculus
{
	[Token(Token = "0x20001A6")]
	public class HVROculusManager : MonoBehaviour
	{
		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MonoBehaviour[] ComponentsToDisable;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dictionary<MonoBehaviour, Vector3> Stuff;

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x8BA6F8", Offset = "0x8BA6F8", VA = "0x8BA6F8")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x8BA7C4", Offset = "0x8BA7C4", VA = "0x8BA7C4")]
		private void OnResume()
		{
		}

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x8BA8B8", Offset = "0x8BA8B8", VA = "0x8BA8B8")]
		private void OnPaused()
		{
		}

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0x8BA9F4", Offset = "0x8BA9F4", VA = "0x8BA9F4")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0x8BAAC0", Offset = "0x8BAAC0", VA = "0x8BAAC0")]
		public HVROculusManager()
		{
		}
	}
}
namespace UnityStandardAssets.Characters.FirstPerson
{
	[Token(Token = "0x20001A7")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x740554", Offset = "0x740554")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x740554", Offset = "0x740554")]
	public class FirstPersonController : MonoBehaviour
	{
		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_IsWalking;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_WalkSpeed;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_RunSpeed;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x747C84", Offset = "0x747C84")]
		private float m_RunstepLenghten;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_JumpSpeed;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_StickToGroundForce;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_GravityMultiplier;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MouseLook m_MouseLook;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool m_UseFovKick;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private FOVKick m_FovKick;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool m_UseHeadBob;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private CurveControlledBob m_HeadBob;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private LerpControlledBob m_JumpBob;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float m_StepInterval;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private AudioClip[] m_FootstepSounds;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private AudioClip m_JumpSound;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private AudioClip m_LandSound;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Camera m_Camera;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool m_Jump;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float m_YRotation;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector2 m_Input;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 m_MoveDir;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private CharacterController m_CharacterController;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private CollisionFlags m_CollisionFlags;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private bool m_PreviouslyGrounded;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector3 m_OriginalCameraPosition;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float m_StepCycle;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float m_NextStep;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private bool m_Jumping;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private AudioSource m_AudioSource;

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x9A9CC8", Offset = "0x9A9CC8", VA = "0x9A9CC8")]
		private void Start()
		{
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0x9A9DD8", Offset = "0x9A9DD8", VA = "0x9A9DD8")]
		private void Update()
		{
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x9A9F4C", Offset = "0x9A9F4C", VA = "0x9A9F4C")]
		private void PlayLandingSound()
		{
		}

		[Token(Token = "0x60009C8")]
		[Address(RVA = "0x9A9FA0", Offset = "0x9A9FA0", VA = "0x9A9FA0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0x9AA524", Offset = "0x9AA524", VA = "0x9AA524")]
		private void PlayJumpSound()
		{
		}

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0x9AA564", Offset = "0x9AA564", VA = "0x9AA564")]
		private void ProgressStepCycle(float speed)
		{
		}

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x9AA830", Offset = "0x9AA830", VA = "0x9AA830")]
		private void PlayFootStepAudio()
		{
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x9AA668", Offset = "0x9AA668", VA = "0x9AA668")]
		private void UpdateCameraPosition(float speed)
		{
		}

		[Token(Token = "0x60009CD")]
		[Address(RVA = "0x9AA360", Offset = "0x9AA360", VA = "0x9AA360")]
		private void GetInput(out float speed)
		{
		}

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0x9A9EF4", Offset = "0x9A9EF4", VA = "0x9A9EF4")]
		private void RotateView()
		{
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x9AA97C", Offset = "0x9AA97C", VA = "0x9AA97C")]
		private void OnControllerColliderHit(ControllerColliderHit hit)
		{
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x9AAAFC", Offset = "0x9AAAFC", VA = "0x9AAAFC")]
		public FirstPersonController()
		{
		}
	}
	[Token(Token = "0x20001A8")]
	public class HeadBob : MonoBehaviour
	{
		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera Camera;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CurveControlledBob motionBob;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LerpControlledBob jumpAndLandingBob;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RigidbodyFirstPersonController rigidbodyFirstPersonController;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float StrideInterval;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x747D94", Offset = "0x747D94")]
		public float RunningStrideLengthen;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_PreviouslyGrounded;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 m_OriginalCameraPosition;

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0xF07E14", Offset = "0xF07E14", VA = "0xF07E14")]
		private void Start()
		{
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0xF07F10", Offset = "0xF07F10", VA = "0xF07F10")]
		private void Update()
		{
		}

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0xF082E8", Offset = "0xF082E8", VA = "0xF082E8")]
		public HeadBob()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A9")]
	public class MouseLook
	{
		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float XSensitivity;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float YSensitivity;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool clampVerticalRotation;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MinimumX;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float MaximumX;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool smooth;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float smoothTime;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool lockCursor;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Quaternion m_CharacterTargetRot;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion m_CameraTargetRot;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_cursorIsLocked;

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0xF085B4", Offset = "0xF085B4", VA = "0xF085B4")]
		public void Init(Transform character, Transform camera)
		{
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0xF08608", Offset = "0xF08608", VA = "0xF08608")]
		public void LookRotation(Transform character, Transform camera)
		{
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0xF08A38", Offset = "0xF08A38", VA = "0xF08A38")]
		public void SetCursorLock(bool value)
		{
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0xF08A28", Offset = "0xF08A28", VA = "0xF08A28")]
		public void UpdateCursorLock()
		{
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0xF08A6C", Offset = "0xF08A6C", VA = "0xF08A6C")]
		private void InternalLockUpdate()
		{
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0xF08960", Offset = "0xF08960", VA = "0xF08960")]
		private Quaternion ClampRotationAroundXAxis(Quaternion q)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0xF08AE8", Offset = "0xF08AE8", VA = "0xF08AE8")]
		public MouseLook()
		{
		}
	}
	[Token(Token = "0x20001AA")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7405E0", Offset = "0x7405E0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7405E0", Offset = "0x7405E0")]
	public class RigidbodyFirstPersonController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002D3")]
		public class MovementSettings
		{
			[Token(Token = "0x400153F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float ForwardSpeed;

			[Token(Token = "0x4001540")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float BackwardSpeed;

			[Token(Token = "0x4001541")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float StrafeSpeed;

			[Token(Token = "0x4001542")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float RunMultiplier;

			[Token(Token = "0x4001543")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public KeyCode RunKey;

			[Token(Token = "0x4001544")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float JumpForce;

			[Token(Token = "0x4001545")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AnimationCurve SlopeCurveModifier;

			[Token(Token = "0x4001546")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[HideInInspector]
			public float CurrentTargetSpeed;

			[Token(Token = "0x4001547")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private bool m_Running;

			[Token(Token = "0x170001F7")]
			public bool Running
			{
				[Token(Token = "0x6000FCC")]
				[Address(RVA = "0xF09C9C", Offset = "0xF09C9C", VA = "0xF09C9C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000FCB")]
			[Address(RVA = "0xF098E8", Offset = "0xF098E8", VA = "0xF098E8")]
			public void UpdateDesiredTargetSpeed(Vector2 input)
			{
			}

			[Token(Token = "0x6000FCD")]
			[Address(RVA = "0xF09AC8", Offset = "0xF09AC8", VA = "0xF09AC8")]
			public MovementSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002D4")]
		public class AdvancedSettings
		{
			[Token(Token = "0x4001548")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float groundCheckDistance;

			[Token(Token = "0x4001549")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float stickToGroundHelperDistance;

			[Token(Token = "0x400154A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float slowDownRate;

			[Token(Token = "0x400154B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool airControl;

			[Token(Token = "0x400154C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x748E70", Offset = "0x748E70")]
			public float shellOffset;

			[Token(Token = "0x6000FCE")]
			[Address(RVA = "0xF09C80", Offset = "0xF09C80", VA = "0xF09C80")]
			public AdvancedSettings()
			{
			}
		}

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera cam;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MovementSettings movementSettings;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MouseLook mouseLook;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AdvancedSettings advancedSettings;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody m_RigidBody;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CapsuleCollider m_Capsule;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_YRotation;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 m_GroundContactNormal;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_Jump;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool m_PreviouslyGrounded;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		private bool m_Jumping;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		private bool m_IsGrounded;

		[Token(Token = "0x17000112")]
		public Vector3 Velocity
		{
			[Token(Token = "0x60009DB")]
			[Address(RVA = "0xF08120", Offset = "0xF08120", VA = "0xF08120")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000113")]
		public bool Grounded
		{
			[Token(Token = "0x60009DC")]
			[Address(RVA = "0xF08B1C", Offset = "0xF08B1C", VA = "0xF08B1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000114")]
		public bool Jumping
		{
			[Token(Token = "0x60009DD")]
			[Address(RVA = "0xF08B24", Offset = "0xF08B24", VA = "0xF08B24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000115")]
		public bool Running
		{
			[Token(Token = "0x60009DE")]
			[Address(RVA = "0xF0813C", Offset = "0xF0813C", VA = "0xF0813C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0xF08B2C", Offset = "0xF08B2C", VA = "0xF08B2C")]
		private void Start()
		{
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0xF08BD8", Offset = "0xF08BD8", VA = "0xF08BD8")]
		private void Update()
		{
		}

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0xF08EEC", Offset = "0xF08EEC", VA = "0xF08EEC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0xF095B0", Offset = "0xF095B0", VA = "0xF095B0")]
		private float SlopeMultiplier()
		{
			return default(float);
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0xF09668", Offset = "0xF09668", VA = "0xF09668")]
		private void StickToGroundHelper()
		{
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0xF09500", Offset = "0xF09500", VA = "0xF09500")]
		private Vector2 GetInput()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0xF08C64", Offset = "0xF08C64", VA = "0xF08C64")]
		private void RotateView()
		{
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0xF09318", Offset = "0xF09318", VA = "0xF09318")]
		private void GroundCheck()
		{
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0xF099E4", Offset = "0xF099E4", VA = "0xF099E4")]
		public RigidbodyFirstPersonController()
		{
		}
	}
}
namespace UnityStandardAssets.Utility
{
	[Serializable]
	[Token(Token = "0x20001AB")]
	public class CurveControlledBob
	{
		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float HorizontalBobRange;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float VerticalBobRange;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve Bobcurve;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float VerticaltoHorizontalRatio;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_CyclePositionX;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_CyclePositionY;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_BobBaseInterval;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_OriginalCameraPosition;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_Time;

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0xF07E6C", Offset = "0xF07E6C", VA = "0xF07E6C")]
		public void Setup(Camera camera, float bobBaseInterval)
		{
		}

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0xF08158", Offset = "0xF08158", VA = "0xF08158")]
		public Vector3 DoHeadBob(float speed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0xF0836C", Offset = "0xF0836C", VA = "0xF0836C")]
		public CurveControlledBob()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001AC")]
	public class FOVKick
	{
		[Token(Token = "0x20002D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7412F8", Offset = "0x7412F8")]
		private sealed class <FOVKickUp>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400154D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400154E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400154F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FOVKick <>4__this;

			[Token(Token = "0x4001550")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x170001F8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FD2")]
				[Address(RVA = "0xF0DCC8", Offset = "0xF0DCC8", VA = "0xF0DCC8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FD4")]
				[Address(RVA = "0xF0DD30", Offset = "0xF0DD30", VA = "0xF0DD30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FCF")]
			[Address(RVA = "0xF0D898", Offset = "0xF0D898", VA = "0xF0D898")]
			[DebuggerHidden]
			public <FOVKickUp>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6000FD0")]
			[Address(RVA = "0xF0DB64", Offset = "0xF0DB64", VA = "0xF0DB64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FD1")]
			[Address(RVA = "0xF0DB68", Offset = "0xF0DB68", VA = "0xF0DB68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FD3")]
			[Address(RVA = "0xF0DCD0", Offset = "0xF0DCD0", VA = "0xF0DCD0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741308", Offset = "0x741308")]
		private sealed class <FOVKickDown>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001551")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001552")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001553")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FOVKick <>4__this;

			[Token(Token = "0x4001554")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x170001FA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FD8")]
				[Address(RVA = "0xF0DAF4", Offset = "0xF0DAF4", VA = "0xF0DAF4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001FB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FDA")]
				[Address(RVA = "0xF0DB5C", Offset = "0xF0DB5C", VA = "0xF0DB5C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FD5")]
			[Address(RVA = "0xF0D934", Offset = "0xF0D934", VA = "0xF0D934")]
			[DebuggerHidden]
			public <FOVKickDown>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000FD6")]
			[Address(RVA = "0xF0D97C", Offset = "0xF0D97C", VA = "0xF0D97C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FD7")]
			[Address(RVA = "0xF0D980", Offset = "0xF0D980", VA = "0xF0D980", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FD9")]
			[Address(RVA = "0xF0DAFC", Offset = "0xF0DAFC", VA = "0xF0DAFC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Camera Camera;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public float originalFov;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float FOVIncrease;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float TimeToIncrease;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float TimeToDecrease;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve IncreaseCurve;

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0xF0D700", Offset = "0xF0D700", VA = "0xF0D700")]
		public void Setup(Camera camera)
		{
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0xF0D740", Offset = "0xF0D740", VA = "0xF0D740")]
		private void CheckStatus(Camera camera)
		{
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0xF0D820", Offset = "0xF0D820", VA = "0xF0D820")]
		public void ChangeCamera(Camera camera)
		{
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0xF0D828", Offset = "0xF0D828", VA = "0xF0D828")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74C1C0", Offset = "0x74C1C0")]
		public IEnumerator FOVKickUp()
		{
			return null;
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0xF0D8C4", Offset = "0xF0D8C4", VA = "0xF0D8C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74C224", Offset = "0x74C224")]
		public IEnumerator FOVKickDown()
		{
			return null;
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0xF0D960", Offset = "0xF0D960", VA = "0xF0D960")]
		public FOVKick()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001AD")]
	public class LerpControlledBob
	{
		[Token(Token = "0x20002D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741318", Offset = "0x741318")]
		private sealed class <DoBobCycle>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001555")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001556")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001557")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LerpControlledBob <>4__this;

			[Token(Token = "0x4001558")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x170001FC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FDE")]
				[Address(RVA = "0xF0E118", Offset = "0xF0E118", VA = "0xF0E118", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001FD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FE0")]
				[Address(RVA = "0xF0E180", Offset = "0xF0E180", VA = "0xF0E180", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FDB")]
			[Address(RVA = "0xF0DF08", Offset = "0xF0DF08", VA = "0xF0DF08")]
			[DebuggerHidden]
			public <DoBobCycle>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6000FDC")]
			[Address(RVA = "0xF0DF34", Offset = "0xF0DF34", VA = "0xF0DF34", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FDD")]
			[Address(RVA = "0xF0DF38", Offset = "0xF0DF38", VA = "0xF0DF38", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FDF")]
			[Address(RVA = "0xF0E120", Offset = "0xF0E120", VA = "0xF0E120", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float BobDuration;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float BobAmount;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_Offset;

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0xF0DF00", Offset = "0xF0DF00", VA = "0xF0DF00")]
		public float Offset()
		{
			return default(float);
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0xF08278", Offset = "0xF08278", VA = "0xF08278")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74C288", Offset = "0x74C288")]
		public IEnumerator DoBobCycle()
		{
			return null;
		}

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0xF085AC", Offset = "0xF085AC", VA = "0xF085AC")]
		public LerpControlledBob()
		{
		}
	}
	[Token(Token = "0x20001AE")]
	public class SimpleMouseRotator : MonoBehaviour
	{
		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 rotationRange;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float rotationSpeed;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float dampingTime;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool autoZeroVerticalOnMobile;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool autoZeroHorizontalOnMobile;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool relative;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 m_TargetAngles;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_FollowAngles;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 m_FollowVelocity;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion m_OriginalRotation;

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0xF0E188", Offset = "0xF0E188", VA = "0xF0E188")]
		private void Start()
		{
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0xF0E1C4", Offset = "0xF0E1C4", VA = "0xF0E1C4")]
		private void Update()
		{
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0xF0E53C", Offset = "0xF0E53C", VA = "0xF0E53C")]
		public SimpleMouseRotator()
		{
		}
	}
	[Token(Token = "0x20001AF")]
	public class FPSCounter : MonoBehaviour
	{
		[Token(Token = "0x4000BA8")]
		private const float fpsMeasurePeriod = 0.5f;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_FpsAccumulator;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_FpsNextPeriod;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_CurrentFps;

		[Token(Token = "0x4000BAC")]
		private const string display = "{0} FPS";

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text m_uiText;

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0xF0DD38", Offset = "0xF0DD38", VA = "0xF0DD38")]
		private void Start()
		{
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0xF0DE14", Offset = "0xF0DE14", VA = "0xF0DE14")]
		private void Update()
		{
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0xF0DEF8", Offset = "0xF0DEF8", VA = "0xF0DEF8")]
		public FPSCounter()
		{
		}
	}
}
namespace UnityStandardAssets.CrossPlatformInput
{
	[Token(Token = "0x20001B0")]
	public class AxisTouchButton : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string axisName;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float axisValue;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float responseSpeed;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float returnToCentreSpeed;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AxisTouchButton m_PairedWith;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CrossPlatformInputManager.VirtualAxis m_Axis;

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0xF09CA4", Offset = "0xF09CA4", VA = "0xF09CA4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0xF09F34", Offset = "0xF09F34", VA = "0xF09F34")]
		private void FindPairedButton()
		{
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0xF0A0B4", Offset = "0xF0A0B4", VA = "0xF0A0B4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0xF0A134", Offset = "0xF0A134", VA = "0xF0A134", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0xF0A21C", Offset = "0xF0A21C", VA = "0xF0A21C", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0xF0A2C4", Offset = "0xF0A2C4", VA = "0xF0A2C4")]
		public AxisTouchButton()
		{
		}
	}
	[Token(Token = "0x20001B1")]
	public class ButtonHandler : MonoBehaviour
	{
		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Name;

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0xF0A330", Offset = "0xF0A330", VA = "0xF0A330")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0xF0A334", Offset = "0xF0A334", VA = "0xF0A334")]
		public void SetDownState()
		{
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0xF0A41C", Offset = "0xF0A41C", VA = "0xF0A41C")]
		public void SetUpState()
		{
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0xF0A504", Offset = "0xF0A504", VA = "0xF0A504")]
		public void SetAxisPositiveState()
		{
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0xF0A5EC", Offset = "0xF0A5EC", VA = "0xF0A5EC")]
		public void SetAxisNeutralState()
		{
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0xF0A6D4", Offset = "0xF0A6D4", VA = "0xF0A6D4")]
		public void SetAxisNegativeState()
		{
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0xF0A7BC", Offset = "0xF0A7BC", VA = "0xF0A7BC")]
		public void Update()
		{
		}

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0xF0A7C0", Offset = "0xF0A7C0", VA = "0xF0A7C0")]
		public ButtonHandler()
		{
		}
	}
	[Token(Token = "0x20001B2")]
	public static class CrossPlatformInputManager
	{
		[Token(Token = "0x20002D8")]
		public enum ActiveInputMethod
		{
			[Token(Token = "0x400155A")]
			Hardware,
			[Token(Token = "0x400155B")]
			Touch
		}

		[Token(Token = "0x20002D9")]
		public class VirtualAxis
		{
			[Token(Token = "0x400155C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x748EA8", Offset = "0x748EA8")]
			private string <name>k__BackingField;

			[Token(Token = "0x400155D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float m_Value;

			[Token(Token = "0x400155E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x748EB8", Offset = "0x748EB8")]
			private bool <matchWithInputManager>k__BackingField;

			[Token(Token = "0x170001FE")]
			public string name
			{
				[Token(Token = "0x6000FE1")]
				[Address(RVA = "0xF0B628", Offset = "0xF0B628", VA = "0xF0B628")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74EC84", Offset = "0x74EC84")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000FE2")]
				[Address(RVA = "0xF0B630", Offset = "0xF0B630", VA = "0xF0B630")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74EC94", Offset = "0x74EC94")]
				private set
				{
				}
			}

			[Token(Token = "0x170001FF")]
			public bool matchWithInputManager
			{
				[Token(Token = "0x6000FE3")]
				[Address(RVA = "0xF0B638", Offset = "0xF0B638", VA = "0xF0B638")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74ECA4", Offset = "0x74ECA4")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000FE4")]
				[Address(RVA = "0xF0B640", Offset = "0xF0B640", VA = "0xF0B640")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74ECB4", Offset = "0x74ECB4")]
				private set
				{
				}
			}

			[Token(Token = "0x17000200")]
			public float GetValue
			{
				[Token(Token = "0x6000FE9")]
				[Address(RVA = "0xF0B694", Offset = "0xF0B694", VA = "0xF0B694")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000201")]
			public float GetValueRaw
			{
				[Token(Token = "0x6000FEA")]
				[Address(RVA = "0xF0B69C", Offset = "0xF0B69C", VA = "0xF0B69C")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6000FE5")]
			[Address(RVA = "0xF09E10", Offset = "0xF09E10", VA = "0xF09E10")]
			public VirtualAxis(string name)
			{
			}

			[Token(Token = "0x6000FE6")]
			[Address(RVA = "0xF0B64C", Offset = "0xF0B64C", VA = "0xF0B64C")]
			public VirtualAxis(string name, bool matchToInputSettings)
			{
			}

			[Token(Token = "0x6000FE7")]
			[Address(RVA = "0xF0A0CC", Offset = "0xF0A0CC", VA = "0xF0A0CC")]
			public void Remove()
			{
			}

			[Token(Token = "0x6000FE8")]
			[Address(RVA = "0xF0B68C", Offset = "0xF0B68C", VA = "0xF0B68C")]
			public void Update(float value)
			{
			}
		}

		[Token(Token = "0x20002DA")]
		public class VirtualButton
		{
			[Token(Token = "0x400155F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x748EC8", Offset = "0x748EC8")]
			private string <name>k__BackingField;

			[Token(Token = "0x4001560")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x748ED8", Offset = "0x748ED8")]
			private bool <matchWithInputManager>k__BackingField;

			[Token(Token = "0x4001561")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private int m_LastPressedFrame;

			[Token(Token = "0x4001562")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int m_ReleasedFrame;

			[Token(Token = "0x4001563")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private bool m_Pressed;

			[Token(Token = "0x17000202")]
			public string name
			{
				[Token(Token = "0x6000FEB")]
				[Address(RVA = "0xF0B6A4", Offset = "0xF0B6A4", VA = "0xF0B6A4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74ECC4", Offset = "0x74ECC4")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000FEC")]
				[Address(RVA = "0xF0B6AC", Offset = "0xF0B6AC", VA = "0xF0B6AC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74ECD4", Offset = "0x74ECD4")]
				private set
				{
				}
			}

			[Token(Token = "0x17000203")]
			public bool matchWithInputManager
			{
				[Token(Token = "0x6000FED")]
				[Address(RVA = "0xF0B6B4", Offset = "0xF0B6B4", VA = "0xF0B6B4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74ECE4", Offset = "0x74ECE4")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000FEE")]
				[Address(RVA = "0xF0B6BC", Offset = "0xF0B6BC", VA = "0xF0B6BC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74ECF4", Offset = "0x74ECF4")]
				private set
				{
				}
			}

			[Token(Token = "0x17000204")]
			public bool GetButton
			{
				[Token(Token = "0x6000FF4")]
				[Address(RVA = "0xF0B81C", Offset = "0xF0B81C", VA = "0xF0B81C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000205")]
			public bool GetButtonDown
			{
				[Token(Token = "0x6000FF5")]
				[Address(RVA = "0xF0B824", Offset = "0xF0B824", VA = "0xF0B824")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000206")]
			public bool GetButtonUp
			{
				[Token(Token = "0x6000FF6")]
				[Address(RVA = "0xF0B854", Offset = "0xF0B854", VA = "0xF0B854")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000FEF")]
			[Address(RVA = "0xF0B6C8", Offset = "0xF0B6C8", VA = "0xF0B6C8")]
			public VirtualButton(string name)
			{
			}

			[Token(Token = "0x6000FF0")]
			[Address(RVA = "0xF0B704", Offset = "0xF0B704", VA = "0xF0B704")]
			public VirtualButton(string name, bool matchToInputSettings)
			{
			}

			[Token(Token = "0x6000FF1")]
			[Address(RVA = "0xF0B74C", Offset = "0xF0B74C", VA = "0xF0B74C")]
			public void Pressed()
			{
			}

			[Token(Token = "0x6000FF2")]
			[Address(RVA = "0xF0B788", Offset = "0xF0B788", VA = "0xF0B788")]
			public void Released()
			{
			}

			[Token(Token = "0x6000FF3")]
			[Address(RVA = "0xF0B7B4", Offset = "0xF0B7B4", VA = "0xF0B7B4")]
			public void Remove()
			{
			}
		}

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VirtualInput activeInput;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static VirtualInput s_TouchInput;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static VirtualInput s_HardwareInput;

		[Token(Token = "0x17000116")]
		public static Vector3 mousePosition
		{
			[Token(Token = "0x6000A1D")]
			[Address(RVA = "0xF0B2A8", Offset = "0xF0B2A8", VA = "0xF0B2A8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0xF0A7C8", Offset = "0xF0A7C8", VA = "0xF0A7C8")]
		static CrossPlatformInputManager()
		{
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0xF0A868", Offset = "0xF0A868", VA = "0xF0A868")]
		public static void SwitchActiveInputMethod(ActiveInputMethod activeInputMethod)
		{
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0xF09D98", Offset = "0xF09D98", VA = "0xF09D98")]
		public static bool AxisExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0xF0A980", Offset = "0xF0A980", VA = "0xF0A980")]
		public static bool ButtonExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0xF09E44", Offset = "0xF09E44", VA = "0xF09E44")]
		public static void RegisterVirtualAxis(VirtualAxis axis)
		{
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0xF0AB88", Offset = "0xF0AB88", VA = "0xF0AB88")]
		public static void RegisterVirtualButton(VirtualButton button)
		{
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0xF0AD28", Offset = "0xF0AD28", VA = "0xF0AD28")]
		public static void UnRegisterVirtualAxis(string name)
		{
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0xF0AE78", Offset = "0xF0AE78", VA = "0xF0AE78")]
		public static void UnRegisterVirtualButton(string name)
		{
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0xF09EBC", Offset = "0xF09EBC", VA = "0xF09EBC")]
		public static VirtualAxis VirtualAxisReference(string name)
		{
			return null;
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0xF088F8", Offset = "0xF088F8", VA = "0xF088F8")]
		public static float GetAxis(string name)
		{
			return default(float);
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0xF0B0AC", Offset = "0xF0B0AC", VA = "0xF0B0AC")]
		public static float GetAxisRaw(string name)
		{
			return default(float);
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0xF0B01C", Offset = "0xF0B01C", VA = "0xF0B01C")]
		private static float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0xF0B114", Offset = "0xF0B114", VA = "0xF0B114")]
		public static bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0xF08E6C", Offset = "0xF08E6C", VA = "0xF08E6C")]
		public static bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0xF0B194", Offset = "0xF0B194", VA = "0xF0B194")]
		public static bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0xF0A39C", Offset = "0xF0A39C", VA = "0xF0A39C")]
		public static void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0xF0A484", Offset = "0xF0A484", VA = "0xF0A484")]
		public static void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0xF0A56C", Offset = "0xF0A56C", VA = "0xF0A56C")]
		public static void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0xF0A73C", Offset = "0xF0A73C", VA = "0xF0A73C")]
		public static void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0xF0A654", Offset = "0xF0A654", VA = "0xF0A654")]
		public static void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0xF0B214", Offset = "0xF0B214", VA = "0xF0B214")]
		public static void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0xF0B324", Offset = "0xF0B324", VA = "0xF0B324")]
		public static void SetVirtualMousePositionX(float f)
		{
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0xF0B420", Offset = "0xF0B420", VA = "0xF0B420")]
		public static void SetVirtualMousePositionY(float f)
		{
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0xF0B528", Offset = "0xF0B528", VA = "0xF0B528")]
		public static void SetVirtualMousePositionZ(float f)
		{
		}
	}
	[Token(Token = "0x20001B3")]
	public class InputAxisScrollbar : MonoBehaviour
	{
		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string axis;

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0xF0B884", Offset = "0xF0B884", VA = "0xF0B884")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0xF0B888", Offset = "0xF0B888", VA = "0xF0B888")]
		public void HandleInput(float value)
		{
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0xF0B908", Offset = "0xF0B908", VA = "0xF0B908")]
		public InputAxisScrollbar()
		{
		}
	}
	[Token(Token = "0x20001B4")]
	public class Joystick : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler, IDragHandler
	{
		[Token(Token = "0x20002DB")]
		public enum AxisOption
		{
			[Token(Token = "0x4001565")]
			Both,
			[Token(Token = "0x4001566")]
			OnlyHorizontal,
			[Token(Token = "0x4001567")]
			OnlyVertical
		}

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int MovementRange;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AxisOption axesToUse;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string horizontalAxisName;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string verticalAxisName;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_StartPos;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_UseX;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		private bool m_UseY;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CrossPlatformInputManager.VirtualAxis m_HorizontalVirtualAxis;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CrossPlatformInputManager.VirtualAxis m_VerticalVirtualAxis;

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0xF0B910", Offset = "0xF0B910", VA = "0xF0B910")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0xF0BA50", Offset = "0xF0BA50", VA = "0xF0BA50")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0xF0BA8C", Offset = "0xF0BA8C", VA = "0xF0BA8C")]
		private void UpdateVirtualAxes(Vector3 value)
		{
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0xF0B914", Offset = "0xF0B914", VA = "0xF0B914")]
		private void CreateVirtualAxes()
		{
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0xF0BB7C", Offset = "0xF0BB7C", VA = "0xF0BB7C", Slot = "6")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0xF0BD3C", Offset = "0xF0BD3C", VA = "0xF0BD3C", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0xF0BD84", Offset = "0xF0BD84", VA = "0xF0BD84", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0xF0BD88", Offset = "0xF0BD88", VA = "0xF0BD88")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0xF0BDD8", Offset = "0xF0BDD8", VA = "0xF0BDD8")]
		public Joystick()
		{
		}
	}
	[Token(Token = "0x20001B5")]
	[ExecuteInEditMode]
	public class MobileControlRig : MonoBehaviour
	{
		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0xF0BE48", Offset = "0xF0BE48", VA = "0xF0BE48")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0xF0BE58", Offset = "0xF0BE58", VA = "0xF0BE58")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0xF0BE50", Offset = "0xF0BE50", VA = "0xF0BE50")]
		private void CheckEnableControlRig()
		{
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0xF0BF34", Offset = "0xF0BF34", VA = "0xF0BF34")]
		private void EnableControlRig(bool enabled)
		{
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0xF0C1A0", Offset = "0xF0C1A0", VA = "0xF0C1A0")]
		public MobileControlRig()
		{
		}
	}
	[Token(Token = "0x20001B6")]
	public class TiltInput : MonoBehaviour
	{
		[Token(Token = "0x20002DC")]
		public enum AxisOptions
		{
			[Token(Token = "0x4001569")]
			ForwardAxis,
			[Token(Token = "0x400156A")]
			SidewaysAxis
		}

		[Serializable]
		[Token(Token = "0x20002DD")]
		public class AxisMapping
		{
			[Token(Token = "0x2000352")]
			public enum MappingType
			{
				[Token(Token = "0x4001754")]
				NamedAxis,
				[Token(Token = "0x4001755")]
				MousePositionX,
				[Token(Token = "0x4001756")]
				MousePositionY,
				[Token(Token = "0x4001757")]
				MousePositionZ
			}

			[Token(Token = "0x400156B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MappingType type;

			[Token(Token = "0x400156C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string axisName;

			[Token(Token = "0x6000FF7")]
			[Address(RVA = "0xF0D050", Offset = "0xF0D050", VA = "0xF0D050")]
			public AxisMapping()
			{
			}
		}

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AxisMapping mapping;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AxisOptions tiltAroundAxis;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float fullTiltAngle;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float centreAngleOffset;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CrossPlatformInputManager.VirtualAxis m_SteerAxis;

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0xF0CCDC", Offset = "0xF0CCDC", VA = "0xF0CCDC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0xF0CD9C", Offset = "0xF0CD9C", VA = "0xF0CD9C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0xF0D028", Offset = "0xF0D028", VA = "0xF0D028")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0xF0D040", Offset = "0xF0D040", VA = "0xF0D040")]
		public TiltInput()
		{
		}
	}
	[Token(Token = "0x20001B7")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x74067C", Offset = "0x74067C")]
	public class TouchPad : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x20002DE")]
		public enum AxisOption
		{
			[Token(Token = "0x400156E")]
			Both,
			[Token(Token = "0x400156F")]
			OnlyHorizontal,
			[Token(Token = "0x4001570")]
			OnlyVertical
		}

		[Token(Token = "0x20002DF")]
		public enum ControlStyle
		{
			[Token(Token = "0x4001572")]
			Absolute,
			[Token(Token = "0x4001573")]
			Relative,
			[Token(Token = "0x4001574")]
			Swipe
		}

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AxisOption axesToUse;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ControlStyle controlStyle;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string horizontalAxisName;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string verticalAxisName;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float Xsensitivity;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float Ysensitivity;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_StartPos;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector2 m_PreviousDelta;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 m_JoytickOutput;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_UseX;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool m_UseY;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CrossPlatformInputManager.VirtualAxis m_HorizontalVirtualAxis;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CrossPlatformInputManager.VirtualAxis m_VerticalVirtualAxis;

		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_Dragging;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int m_Id;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector2 m_PreviousTouchPos;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 m_Center;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Image m_Image;

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0xF0D058", Offset = "0xF0D058", VA = "0xF0D058")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0xF0D198", Offset = "0xF0D198", VA = "0xF0D198")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0xF0D05C", Offset = "0xF0D05C", VA = "0xF0D05C")]
		private void CreateVirtualAxes()
		{
		}

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0xF0D214", Offset = "0xF0D214", VA = "0xF0D214")]
		private void UpdateVirtualAxes(Vector3 value)
		{
		}

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0xF0D280", Offset = "0xF0D280", VA = "0xF0D280", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0xF0D330", Offset = "0xF0D330", VA = "0xF0D330")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0xF0D504", Offset = "0xF0D504", VA = "0xF0D504", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0xF0D57C", Offset = "0xF0D57C", VA = "0xF0D57C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0xF0D670", Offset = "0xF0D670", VA = "0xF0D670")]
		public TouchPad()
		{
		}
	}
	[Token(Token = "0x20001B8")]
	public abstract class VirtualInput
	{
		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x747DBC", Offset = "0x747DBC")]
		private Vector3 <virtualMousePosition>k__BackingField;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Dictionary<string, CrossPlatformInputManager.VirtualAxis> m_VirtualAxes;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Dictionary<string, CrossPlatformInputManager.VirtualButton> m_VirtualButtons;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected List<string> m_AlwaysUseVirtual;

		[Token(Token = "0x17000117")]
		public Vector3 virtualMousePosition
		{
			[Token(Token = "0x6000A3F")]
			[Address(RVA = "0xF0D6E8", Offset = "0xF0D6E8", VA = "0xF0D6E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74C2EC", Offset = "0x74C2EC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000A40")]
			[Address(RVA = "0xF0D6F4", Offset = "0xF0D6F4", VA = "0xF0D6F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74C2FC", Offset = "0x74C2FC")]
			private set
			{
			}
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0xF0A918", Offset = "0xF0A918", VA = "0xF0A918")]
		public bool AxisExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0xF0A9F8", Offset = "0xF0A9F8", VA = "0xF0A9F8")]
		public bool ButtonExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0xF0AA60", Offset = "0xF0AA60", VA = "0xF0AA60")]
		public void RegisterVirtualAxis(CrossPlatformInputManager.VirtualAxis axis)
		{
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0xF0AC00", Offset = "0xF0AC00", VA = "0xF0AC00")]
		public void RegisterVirtualButton(CrossPlatformInputManager.VirtualButton button)
		{
		}

		[Token(Token = "0x6000A45")]
		[Address(RVA = "0xF0ADE0", Offset = "0xF0ADE0", VA = "0xF0ADE0")]
		public void UnRegisterVirtualAxis(string name)
		{
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0xF0AEF0", Offset = "0xF0AEF0", VA = "0xF0AEF0")]
		public void UnRegisterVirtualButton(string name)
		{
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0xF0AF88", Offset = "0xF0AF88", VA = "0xF0AF88")]
		public CrossPlatformInputManager.VirtualAxis VirtualAxisReference(string name)
		{
			return null;
		}

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0xF0B3D4", Offset = "0xF0B3D4", VA = "0xF0B3D4")]
		public void SetVirtualMousePositionX(float f)
		{
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0xF0B4D4", Offset = "0xF0B4D4", VA = "0xF0B4D4")]
		public void SetVirtualMousePositionY(float f)
		{
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0xF0B5D8", Offset = "0xF0B5D8", VA = "0xF0B5D8")]
		public void SetVirtualMousePositionZ(float f)
		{
		}

		[Token(Token = "0x6000A4B")]
		public abstract float GetAxis(string name, bool raw);

		[Token(Token = "0x6000A4C")]
		public abstract bool GetButton(string name);

		[Token(Token = "0x6000A4D")]
		public abstract bool GetButtonDown(string name);

		[Token(Token = "0x6000A4E")]
		public abstract bool GetButtonUp(string name);

		[Token(Token = "0x6000A4F")]
		public abstract void SetButtonDown(string name);

		[Token(Token = "0x6000A50")]
		public abstract void SetButtonUp(string name);

		[Token(Token = "0x6000A51")]
		public abstract void SetAxisPositive(string name);

		[Token(Token = "0x6000A52")]
		public abstract void SetAxisNegative(string name);

		[Token(Token = "0x6000A53")]
		public abstract void SetAxisZero(string name);

		[Token(Token = "0x6000A54")]
		public abstract void SetAxis(string name, float value);

		[Token(Token = "0x6000A55")]
		public abstract Vector3 MousePosition();

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0xF0C954", Offset = "0xF0C954", VA = "0xF0C954")]
		protected VirtualInput()
		{
		}
	}
}
namespace UnityStandardAssets.CrossPlatformInput.PlatformSpecific
{
	[Token(Token = "0x20001B9")]
	public class MobileInput : VirtualInput
	{
		[Token(Token = "0x6000A57")]
		[Address(RVA = "0xF0C1A8", Offset = "0xF0C1A8", VA = "0xF0C1A8")]
		private void AddButton(string name)
		{
		}

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0xF0C23C", Offset = "0xF0C23C", VA = "0xF0C23C")]
		private void AddAxes(string name)
		{
		}

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0xF0C2C8", Offset = "0xF0C2C8", VA = "0xF0C2C8", Slot = "4")]
		public override float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0xF0C364", Offset = "0xF0C364", VA = "0xF0C364", Slot = "8")]
		public override void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0xF0C41C", Offset = "0xF0C41C", VA = "0xF0C41C", Slot = "9")]
		public override void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0xF0C4C8", Offset = "0xF0C4C8", VA = "0xF0C4C8", Slot = "10")]
		public override void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0xF0C568", Offset = "0xF0C568", VA = "0xF0C568", Slot = "11")]
		public override void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0xF0C608", Offset = "0xF0C608", VA = "0xF0C608", Slot = "12")]
		public override void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0xF0C6A4", Offset = "0xF0C6A4", VA = "0xF0C6A4", Slot = "13")]
		public override void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0xF0C74C", Offset = "0xF0C74C", VA = "0xF0C74C", Slot = "6")]
		public override bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0xF0C7FC", Offset = "0xF0C7FC", VA = "0xF0C7FC", Slot = "7")]
		public override bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0xF0C8AC", Offset = "0xF0C8AC", VA = "0xF0C8AC", Slot = "5")]
		public override bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0xF0C948", Offset = "0xF0C948", VA = "0xF0C948", Slot = "14")]
		public override Vector3 MousePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0xF0A860", Offset = "0xF0A860", VA = "0xF0A860")]
		public MobileInput()
		{
		}
	}
	[Token(Token = "0x20001BA")]
	public class StandaloneInput : VirtualInput
	{
		[Token(Token = "0x6000A65")]
		[Address(RVA = "0xF0CA14", Offset = "0xF0CA14", VA = "0xF0CA14", Slot = "4")]
		public override float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0xF0CA28", Offset = "0xF0CA28", VA = "0xF0CA28", Slot = "5")]
		public override bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0xF0CA34", Offset = "0xF0CA34", VA = "0xF0CA34", Slot = "6")]
		public override bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0xF0CA40", Offset = "0xF0CA40", VA = "0xF0CA40", Slot = "7")]
		public override bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0xF0CA4C", Offset = "0xF0CA4C", VA = "0xF0CA4C", Slot = "8")]
		public override void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0xF0CAB8", Offset = "0xF0CAB8", VA = "0xF0CAB8", Slot = "9")]
		public override void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0xF0CB24", Offset = "0xF0CB24", VA = "0xF0CB24", Slot = "10")]
		public override void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0xF0CB90", Offset = "0xF0CB90", VA = "0xF0CB90", Slot = "11")]
		public override void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0xF0CBFC", Offset = "0xF0CBFC", VA = "0xF0CBFC", Slot = "12")]
		public override void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0xF0CC68", Offset = "0xF0CC68", VA = "0xF0CC68", Slot = "13")]
		public override void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0xF0CCD4", Offset = "0xF0CCD4", VA = "0xF0CCD4", Slot = "14")]
		public override Vector3 MousePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0xF0A864", Offset = "0xF0A864", VA = "0xF0A864")]
		public StandaloneInput()
		{
		}
	}
}
namespace Filo
{
	[Token(Token = "0x20001BB")]
	public abstract class CableBody : MonoBehaviour
	{
		[Token(Token = "0x20002E0")]
		public enum CablePlane
		{
			[Token(Token = "0x4001576")]
			XY,
			[Token(Token = "0x4001577")]
			XZ,
			[Token(Token = "0x4001578")]
			YZ,
			[Token(Token = "0x4001579")]
			Custom
		}

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CablePlane plane;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 planeNormal;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool freezeRotation;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody rbody;

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0x8B1DAC", Offset = "0x8B1DAC", VA = "0x8B1DAC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x8B1DB0", Offset = "0x8B1DB0", VA = "0x8B1DB0")]
		private void FindRigidbody()
		{
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x8B1E14", Offset = "0x8B1E14", VA = "0x8B1E14")]
		public Rigidbody GetRigidbody()
		{
			return null;
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x8ADAB0", Offset = "0x8ADAB0", VA = "0x8ADAB0")]
		public Vector3 WorldToCable(Vector3 wsPoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0x8B1E1C", Offset = "0x8B1E1C", VA = "0x8B1E1C")]
		public Vector3 CableToWorld(Vector3 cablePoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x8AD514", Offset = "0x8AD514", VA = "0x8AD514")]
		public Vector2 WorldSpaceToCablePlane(Vector3 wsPoint)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x8B1FE0", Offset = "0x8B1FE0", VA = "0x8B1FE0")]
		public Vector3 CablePlaneToWorldSpace(Vector2 cablePoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0x8AE908", Offset = "0x8AE908", VA = "0x8AE908")]
		public Vector3 GetWorldSpaceTangent(Vector3 origin, bool orientation)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0x8AD168", Offset = "0x8AD168", VA = "0x8AD168")]
		public Vector3 GetCablePlaneNormal()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0x8B21F4", Offset = "0x8B21F4", VA = "0x8B21F4", Slot = "4")]
		public virtual void ApplyFreezing()
		{
		}

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0x8B2324", Offset = "0x8B2324", VA = "0x8B2324", Slot = "5")]
		public virtual void CalculateInertiaTensor()
		{
		}

		[Token(Token = "0x6000A7C")]
		public abstract Vector3 RandomHullPoint();

		[Token(Token = "0x6000A7D")]
		public abstract Vector2 GetLeftOrRightMostPointFromOrigin(Vector2 origin, bool orientation);

		[Token(Token = "0x6000A7E")]
		public abstract float SurfaceDistance(Vector2 p1, Vector2 p2, bool orientation, bool shortest = true);

		[Token(Token = "0x6000A7F")]
		public abstract Vector3 SurfacePointAtDistance(Vector3 origin, float distance, bool orientation, out int index);

		[Token(Token = "0x6000A80")]
		public abstract void AppendSamples(Cable.SampledCable samples, Vector3 origin, float distance, float spoolSeparation, bool reverse, bool orientation);

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x8B2480", Offset = "0x8B2480", VA = "0x8B2480")]
		protected CableBody()
		{
		}
	}
	[Token(Token = "0x20001BC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7406E0", Offset = "0x7406E0")]
	public class CableDisc : CableBody
	{
		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float radius;

		[Token(Token = "0x17000118")]
		public float ScaledRadius
		{
			[Token(Token = "0x6000A82")]
			[Address(RVA = "0x8B2490", Offset = "0x8B2490", VA = "0x8B2490")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0x8B2580", Offset = "0x8B2580", VA = "0x8B2580")]
		public static Vector3 TangentPointCircle(Vector2 p1, Vector2 p2, float r, bool orientation)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0x8B27AC", Offset = "0x8B27AC", VA = "0x8B27AC", Slot = "6")]
		public override Vector3 RandomHullPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x8B28B0", Offset = "0x8B28B0", VA = "0x8B28B0", Slot = "7")]
		public override Vector2 GetLeftOrRightMostPointFromOrigin(Vector2 origin, bool orientation)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x8B2954", Offset = "0x8B2954", VA = "0x8B2954", Slot = "8")]
		public override float SurfaceDistance(Vector2 p1, Vector2 p2, bool orientation, bool shortest = true)
		{
			return default(float);
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x8B2A48", Offset = "0x8B2A48", VA = "0x8B2A48", Slot = "9")]
		public override Vector3 SurfacePointAtDistance(Vector3 origin, float distance, bool orientation, out int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x8B2B84", Offset = "0x8B2B84", VA = "0x8B2B84", Slot = "10")]
		public override void AppendSamples(Cable.SampledCable samples, Vector3 origin, float distance, float spoolSeparation, bool reverse, bool orientation)
		{
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x8B2E94", Offset = "0x8B2E94", VA = "0x8B2E94")]
		public CableDisc()
		{
		}
	}
	[Token(Token = "0x20001BD")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x740718", Offset = "0x740718")]
	public class CablePoint : CableBody
	{
		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x8B30F0", Offset = "0x8B30F0", VA = "0x8B30F0", Slot = "4")]
		public override void ApplyFreezing()
		{
		}

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0x8B30F4", Offset = "0x8B30F4", VA = "0x8B30F4", Slot = "5")]
		public override void CalculateInertiaTensor()
		{
		}

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0x8B30F8", Offset = "0x8B30F8", VA = "0x8B30F8", Slot = "6")]
		public override Vector3 RandomHullPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x8B311C", Offset = "0x8B311C", VA = "0x8B311C", Slot = "7")]
		public override Vector2 GetLeftOrRightMostPointFromOrigin(Vector2 origin, bool orientation)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0x8B317C", Offset = "0x8B317C", VA = "0x8B317C", Slot = "8")]
		public override float SurfaceDistance(Vector2 p1, Vector2 p2, bool orientation, bool shortest = true)
		{
			return default(float);
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0x8B3184", Offset = "0x8B3184", VA = "0x8B3184", Slot = "9")]
		public override Vector3 SurfacePointAtDistance(Vector3 origin, float distance, bool orientation, out int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0x8B31AC", Offset = "0x8B31AC", VA = "0x8B31AC", Slot = "10")]
		public override void AppendSamples(Cable.SampledCable samples, Vector3 origin, float distance, float spoolSeparation, bool reverse, bool orientation)
		{
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0x8B31B0", Offset = "0x8B31B0", VA = "0x8B31B0")]
		public CablePoint()
		{
		}
	}
	[Token(Token = "0x20001BE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x740750", Offset = "0x740750")]
	public class CableShape : CableBody
	{
		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ConvexHull2D convexHull;

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x8B48C0", Offset = "0x8B48C0", VA = "0x8B48C0", Slot = "6")]
		public override Vector3 RandomHullPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x8B4980", Offset = "0x8B4980", VA = "0x8B4980", Slot = "7")]
		public override Vector2 GetLeftOrRightMostPointFromOrigin(Vector2 origin, bool orientation)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0x8B4C98", Offset = "0x8B4C98", VA = "0x8B4C98")]
		public Vector3 ProjectToSurface(Vector3 p, out int vertex, bool draw = false)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0x8B4FC8", Offset = "0x8B4FC8", VA = "0x8B4FC8", Slot = "8")]
		public override float SurfaceDistance(Vector2 p1, Vector2 p2, bool orientation, bool shortest = true)
		{
			return default(float);
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0x8B5638", Offset = "0x8B5638", VA = "0x8B5638", Slot = "9")]
		public override Vector3 SurfacePointAtDistance(Vector3 origin, float distance, bool orientation, out int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0x8B5934", Offset = "0x8B5934", VA = "0x8B5934", Slot = "10")]
		public override void AppendSamples(Cable.SampledCable samples, Vector3 origin, float distance, float spoolSeparation, bool reverse, bool orientation)
		{
		}

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0x8B5D9C", Offset = "0x8B5D9C", VA = "0x8B5D9C")]
		public CableShape()
		{
		}
	}
	[Token(Token = "0x20001BF")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x740788", Offset = "0x740788")]
	public class ConvexHull2D : ScriptableObject
	{
		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CableBody.CablePlane plane;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 planeNormal;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Mesh mesh;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public List<Vector2> input;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		[SerializeField]
		public List<Vector2> hull;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		[SerializeField]
		public float perimeter;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		[SerializeField]
		public Rect bounds;

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0x8B5FAC", Offset = "0x8B5FAC", VA = "0x8B5FAC")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x8B6850", Offset = "0x8B6850", VA = "0x8B6850")]
		private int LeftMostInputPoint()
		{
			return default(int);
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x8B4C60", Offset = "0x8B4C60", VA = "0x8B4C60")]
		public static int Orientation(Vector2 p, Vector2 q, Vector2 r)
		{
			return default(int);
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x8B6334", Offset = "0x8B6334", VA = "0x8B6334")]
		private void ConvexHull()
		{
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x8B653C", Offset = "0x8B653C", VA = "0x8B653C")]
		private void UpdateHullPerimeterAndBounds()
		{
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x8B6934", Offset = "0x8B6934", VA = "0x8B6934")]
		private bool LinePlaneIntersect(Vector3 p1, Vector3 p2, Vector3 normal, ref Vector3 intersection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x8B6B1C", Offset = "0x8B6B1C", VA = "0x8B6B1C")]
		private void AppendInputPoint(Vector3 p)
		{
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x8B5FD8", Offset = "0x8B5FD8", VA = "0x8B5FD8")]
		private void MeshPlaneIntersection()
		{
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x8B6D2C", Offset = "0x8B6D2C", VA = "0x8B6D2C")]
		private void CleanInput()
		{
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x8B6EB4", Offset = "0x8B6EB4", VA = "0x8B6EB4")]
		public ConvexHull2D()
		{
		}
	}
	[Token(Token = "0x20001C0")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7407C4", Offset = "0x7407C4")]
	public class Cable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002E1")]
		public struct Link
		{
			[Token(Token = "0x2000353")]
			public enum LinkType
			{
				[Token(Token = "0x4001759")]
				Attachment,
				[Token(Token = "0x400175A")]
				Rolling,
				[Token(Token = "0x400175B")]
				Pinhole,
				[Token(Token = "0x400175C")]
				Hybrid
			}

			[Token(Token = "0x400157A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CableBody body;

			[Token(Token = "0x400157B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public LinkType type;

			[Token(Token = "0x400157C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public bool orientation;

			[Token(Token = "0x400157D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float slack;

			[Token(Token = "0x400157E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool hybridRolling;

			[Token(Token = "0x400157F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float storedCable;

			[Token(Token = "0x4001580")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float spoolSeparation;

			[Token(Token = "0x4001581")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float cableSpawnSpeed;

			[Token(Token = "0x4001582")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 inAnchor;

			[Token(Token = "0x4001583")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 outAnchor;
		}

		[Token(Token = "0x20002E2")]
		public class SampledCable
		{
			[Token(Token = "0x4001584")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private List<List<Vector3>> segments;

			[Token(Token = "0x4001585")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int segmentCount;

			[Token(Token = "0x4001586")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private float length;

			[Token(Token = "0x4001587")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Vector3 lastSample;

			[Token(Token = "0x17000207")]
			public IList<List<Vector3>> Segments
			{
				[Token(Token = "0x6000FF8")]
				[Address(RVA = "0x8B1BD0", Offset = "0x8B1BD0", VA = "0x8B1BD0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000208")]
			public float Length
			{
				[Token(Token = "0x6000FF9")]
				[Address(RVA = "0x8B1BD8", Offset = "0x8B1BD8", VA = "0x8B1BD8")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6000FFA")]
			[Address(RVA = "0x8ADC9C", Offset = "0x8ADC9C", VA = "0x8ADC9C")]
			public void AppendSample(Vector3 sample, bool accumulateLength = true)
			{
			}

			[Token(Token = "0x6000FFB")]
			[Address(RVA = "0x8B1BE0", Offset = "0x8B1BE0", VA = "0x8B1BE0")]
			public void ReverseLastSamples(int count)
			{
			}

			[Token(Token = "0x6000FFC")]
			[Address(RVA = "0x8ADE5C", Offset = "0x8ADE5C", VA = "0x8ADE5C")]
			public void NewSegment()
			{
			}

			[Token(Token = "0x6000FFD")]
			[Address(RVA = "0x8B18B0", Offset = "0x8B18B0", VA = "0x8B18B0")]
			public void Clear()
			{
			}

			[Token(Token = "0x6000FFE")]
			[Address(RVA = "0x8B1954", Offset = "0x8B1954", VA = "0x8B1954")]
			public void Close()
			{
			}

			[Token(Token = "0x6000FFF")]
			[Address(RVA = "0x8B1B30", Offset = "0x8B1B30", VA = "0x8B1B30")]
			public SampledCable()
			{
			}
		}

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x747E84", Offset = "0x747E84")]
		public bool dynamicSplitMerge;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x747EBC", Offset = "0x747EBC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x747EBC", Offset = "0x747EBC")]
		public float loosenessScale;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x747F10", Offset = "0x747F10")]
		public float maxLooseCable;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x747F48", Offset = "0x747F48")]
		public float verticalThreshold;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x747F80", Offset = "0x747F80")]
		public uint verticalCurlyness;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Link> links;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		[SerializeField]
		private List<CableJoint> joints;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		[SerializeField]
		private float restLength;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector2[] catenaryBuffer;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3[] sinusoidBuffer;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public SampledCable sampledCable;

		[Token(Token = "0x17000119")]
		public float RestLength
		{
			[Token(Token = "0x6000AA3")]
			[Address(RVA = "0x8ABE48", Offset = "0x8ABE48", VA = "0x8ABE48")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700011A")]
		public int JointCount
		{
			[Token(Token = "0x6000AA4")]
			[Address(RVA = "0x8ABE50", Offset = "0x8ABE50", VA = "0x8ABE50")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700011B")]
		public IList<CableJoint> Joints
		{
			[Token(Token = "0x6000AA5")]
			[Address(RVA = "0x8ABEA0", Offset = "0x8ABEA0", VA = "0x8ABEA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x8ABEF8", Offset = "0x8ABEF8", VA = "0x8ABEF8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x8ABF28", Offset = "0x8ABF28", VA = "0x8ABF28")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x8ABFB0", Offset = "0x8ABFB0", VA = "0x8ABFB0")]
		public void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x8ABEFC", Offset = "0x8ABEFC", VA = "0x8ABEFC")]
		public void Setup()
		{
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x8AC2DC", Offset = "0x8AC2DC", VA = "0x8AC2DC")]
		private void InitializeLinks()
		{
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x8AC400", Offset = "0x8AC400", VA = "0x8AC400")]
		private void GenerateJoints()
		{
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x8AC914", Offset = "0x8AC914", VA = "0x8AC914")]
		private void CalculateRestLength()
		{
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x8AD6F8", Offset = "0x8AD6F8", VA = "0x8AD6F8")]
		private void SampleLink(CableJoint prevJoint, Link link, CableJoint nextJoint)
		{
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x8ADF04", Offset = "0x8ADF04", VA = "0x8ADF04")]
		private void SampleJoint(CableJoint joint)
		{
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x8ACEA4", Offset = "0x8ACEA4", VA = "0x8ACEA4")]
		private void FindCommonTangents(Link link1, Link link2, out Vector3 t1, out Vector3 t2, bool initHybrid = false)
		{
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x8AE944", Offset = "0x8AE944", VA = "0x8AE944")]
		private void UpdatePinhole(CableJoint joint1, CableJoint joint2)
		{
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x8AE9A0", Offset = "0x8AE9A0", VA = "0x8AE9A0")]
		private void UpdatePinholes()
		{
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x8AEB64", Offset = "0x8AEB64", VA = "0x8AEB64")]
		private Link UpdateHybridLink(Link link, bool cableGoesIn, Vector3 attachment)
		{
			return default(Link);
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x8AF768", Offset = "0x8AF768", VA = "0x8AF768")]
		private void UpdateHybridLinks()
		{
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x8AEDBC", Offset = "0x8AEDBC", VA = "0x8AEDBC")]
		private void UpdateJoints()
		{
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x8AFA1C", Offset = "0x8AFA1C", VA = "0x8AFA1C")]
		private void InitializeJoints()
		{
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x8B03F0", Offset = "0x8B03F0", VA = "0x8B03F0")]
		public void UpdateCable()
		{
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x8B0438", Offset = "0x8B0438", VA = "0x8B0438")]
		private void SplitMerge()
		{
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x8B0ECC", Offset = "0x8B0ECC", VA = "0x8B0ECC")]
		public void Solve(float deltaTime, float bias)
		{
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x8AD3C8", Offset = "0x8AD3C8", VA = "0x8AD3C8")]
		private CableJoint GetPreviousJoint(int linkIndex, bool closed)
		{
			return null;
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x8AD478", Offset = "0x8AD478", VA = "0x8AD478")]
		private CableJoint GetNextJoint(int linkIndex, bool closed)
		{
			return null;
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x8B1608", Offset = "0x8B1608", VA = "0x8B1608")]
		private void Update()
		{
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x8B1A84", Offset = "0x8B1A84", VA = "0x8B1A84")]
		public Cable()
		{
		}
	}
	[Token(Token = "0x20001C1")]
	public class CableJoint
	{
		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CableBody body1;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 offset1;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CableBody body2;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 offset2;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public float length;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float restLength;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Rigidbody rb1;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Rigidbody rb2;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float totalLambda;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float invMass1;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float invMass2;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Matrix4x4 invInertiaTensor1;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Matrix4x4 invInertiaTensor2;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Vector3 worldOffset1;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Vector3 worldOffset2;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private Vector3 r1;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Vector3 r2;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private Vector3 jacobian;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private float k;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private Vector3 impulse;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float lambda;

		[Token(Token = "0x1700011C")]
		public Vector3 WorldSpaceAttachment1
		{
			[Token(Token = "0x6000ABD")]
			[Address(RVA = "0x8AC144", Offset = "0x8AC144", VA = "0x8AC144")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700011D")]
		public Vector3 WorldSpaceAttachment2
		{
			[Token(Token = "0x6000ABE")]
			[Address(RVA = "0x8AC210", Offset = "0x8AC210", VA = "0x8AC210")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700011E")]
		public CableBody Body1
		{
			[Token(Token = "0x6000ABF")]
			[Address(RVA = "0x8B2EAC", Offset = "0x8B2EAC", VA = "0x8B2EAC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AC0")]
			[Address(RVA = "0x8B2EB4", Offset = "0x8B2EB4", VA = "0x8B2EB4")]
			set
			{
			}
		}

		[Token(Token = "0x1700011F")]
		public CableBody Body2
		{
			[Token(Token = "0x6000AC1")]
			[Address(RVA = "0x8B2F54", Offset = "0x8B2F54", VA = "0x8B2F54")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AC2")]
			[Address(RVA = "0x8B0E2C", Offset = "0x8B0E2C", VA = "0x8B0E2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000120")]
		public Vector3 Jacobian
		{
			[Token(Token = "0x6000AC3")]
			[Address(RVA = "0x8B2F5C", Offset = "0x8B2F5C", VA = "0x8B2F5C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000121")]
		public float ImpulseMagnitude
		{
			[Token(Token = "0x6000AC4")]
			[Address(RVA = "0x8B2F6C", Offset = "0x8B2F6C", VA = "0x8B2F6C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000122")]
		public float Strain
		{
			[Token(Token = "0x6000AC5")]
			[Address(RVA = "0x8B2F74", Offset = "0x8B2F74", VA = "0x8B2F74")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x8AD278", Offset = "0x8AD278", VA = "0x8AD278")]
		public CableJoint(CableBody body1, CableBody body2, Vector3 offset1, Vector3 offset2, float restLength)
		{
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x8B2F94", Offset = "0x8B2F94", VA = "0x8B2F94")]
		private void UpdateLength()
		{
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x8AFADC", Offset = "0x8AFADC", VA = "0x8AFADC")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x8B1060", Offset = "0x8B1060", VA = "0x8B1060")]
		public void Solve(float deltaTime, float bias)
		{
		}
	}
	[Token(Token = "0x20001C2")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x740810", Offset = "0x740810")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x740810", Offset = "0x740810")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x740810", Offset = "0x740810")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x740810", Offset = "0x740810")]
	public class CableRenderer : MonoBehaviour
	{
		[Token(Token = "0x20002E3")]
		public class CurveFrame
		{
			[Token(Token = "0x4001588")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 position;

			[Token(Token = "0x4001589")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 tangent;

			[Token(Token = "0x400158A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 normal;

			[Token(Token = "0x400158B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 binormal;

			[Token(Token = "0x6001000")]
			[Address(RVA = "0x8B3DA4", Offset = "0x8B3DA4", VA = "0x8B3DA4")]
			public void Reset()
			{
			}

			[Token(Token = "0x6001001")]
			[Address(RVA = "0x8B4184", Offset = "0x8B4184", VA = "0x8B4184")]
			public void SetTwist(float twist)
			{
			}

			[Token(Token = "0x6001002")]
			[Address(RVA = "0x8B4268", Offset = "0x8B4268", VA = "0x8B4268")]
			public void SetTwistAndTangent(float twist, Vector3 tangent)
			{
			}

			[Token(Token = "0x6001003")]
			[Address(RVA = "0x8B3E44", Offset = "0x8B3E44", VA = "0x8B3E44")]
			public void Transport(Vector3 newPosition, Vector3 newTangent, float twist)
			{
			}

			[Token(Token = "0x6001004")]
			[Address(RVA = "0x8B4410", Offset = "0x8B4410", VA = "0x8B4410")]
			public void DrawDebug(float length)
			{
			}

			[Token(Token = "0x6001005")]
			[Address(RVA = "0x8B3CFC", Offset = "0x8B3CFC", VA = "0x8B3CFC")]
			public CurveFrame()
			{
			}
		}

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Cable cable;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MeshFilter filter;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Mesh mesh;

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Vector3> vertices;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Vector3> normals;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Vector4> tangents;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Vector2> uvs;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<int> tris;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private CurveFrame frame;

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CableSection section;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Vector2 uvScale;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float thickness;

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x8B31C0", Offset = "0x8B31C0", VA = "0x8B31C0")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0x8B3290", Offset = "0x8B3290", VA = "0x8B3290")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x8B32FC", Offset = "0x8B32FC", VA = "0x8B32FC")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x8B3BE8", Offset = "0x8B3BE8", VA = "0x8B3BE8")]
		private void ClearMeshData()
		{
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x8B3FB8", Offset = "0x8B3FB8", VA = "0x8B3FB8")]
		private void CommitMeshData()
		{
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0x8B4044", Offset = "0x8B4044", VA = "0x8B4044")]
		public CableRenderer()
		{
		}
	}
	[Token(Token = "0x20001C3")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7408F8", Offset = "0x7408F8")]
	public class CableSection : ScriptableObject
	{
		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public List<Vector2> vertices;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int snapX;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int snapY;

		[Token(Token = "0x17000123")]
		public int Segments
		{
			[Token(Token = "0x6000AD0")]
			[Address(RVA = "0x8B3CA8", Offset = "0x8B3CA8", VA = "0x8B3CA8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x8B45E8", Offset = "0x8B45E8", VA = "0x8B45E8")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x8B466C", Offset = "0x8B466C", VA = "0x8B466C")]
		public void CirclePreset(int segments)
		{
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0x8B47FC", Offset = "0x8B47FC", VA = "0x8B47FC")]
		public static int SnapTo(float val, int snapInterval, int threshold)
		{
			return default(int);
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0x8B48B8", Offset = "0x8B48B8", VA = "0x8B48B8")]
		public CableSection()
		{
		}
	}
	[Token(Token = "0x20001C4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x740934", Offset = "0x740934")]
	public class CableSolver : MonoBehaviour
	{
		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int iterations;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float bias;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Cable[] cables;

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x8B5DAC", Offset = "0x8B5DAC", VA = "0x8B5DAC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x8B5F94", Offset = "0x8B5F94", VA = "0x8B5F94")]
		public CableSolver()
		{
		}
	}
	[Token(Token = "0x20001C5")]
	public static class Utils
	{
		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x8AE324", Offset = "0x8AE324", VA = "0x8AE324")]
		public static bool Catenary(Vector2 p1, Vector2 p2, float l, ref Vector2[] points)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x8AE5F4", Offset = "0x8AE5F4", VA = "0x8AE5F4")]
		public static bool Sinusoid(Vector3 origin, Vector3 direction, float l, uint frequency, ref Vector3[] points)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x8B55BC", Offset = "0x8B55BC", VA = "0x8B55BC")]
		public static float Mod(float a, float b)
		{
			return default(float);
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x8B2A8C", Offset = "0x8B2A8C", VA = "0x8B2A8C")]
		public static Vector3 Rotate2D(this Vector3 v, float angle)
		{
			return default(Vector3);
		}
	}
}
namespace EmeraldAI
{
	[Token(Token = "0x20001C6")]
	public class CombatTextSystem : MonoBehaviour
	{
		[Token(Token = "0x20002E4")]
		public enum AnimationTypeEnum
		{
			[Token(Token = "0x400158D")]
			Bounce,
			[Token(Token = "0x400158E")]
			Upwards,
			[Token(Token = "0x400158F")]
			OutwardsV1,
			[Token(Token = "0x4001590")]
			OutwardsV2,
			[Token(Token = "0x4001591")]
			Stationary
		}

		[Token(Token = "0x20002E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741328", Offset = "0x741328")]
		private sealed class <AnimateBounceText>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001592")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001593")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001594")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool CriticalHit;

			[Token(Token = "0x4001595")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Text m_Text;

			[Token(Token = "0x4001596")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Color CritTextColor;

			[Token(Token = "0x4001597")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Color RegularTextColor;

			[Token(Token = "0x4001598")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public bool HealingText;

			[Token(Token = "0x4001599")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public CombatTextSystem <>4__this;

			[Token(Token = "0x400159A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public bool PlayerTakingDamage;

			[Token(Token = "0x400159B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public Vector3 TargetPosition;

			[Token(Token = "0x400159C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private float <t>5__2;

			[Token(Token = "0x400159D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			private float <m_TextFade>5__3;

			[Token(Token = "0x400159E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private float <RandomXPosition>5__4;

			[Token(Token = "0x400159F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			private float <AnimateSmaller>5__5;

			[Token(Token = "0x40015A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private float <AnimateLarger>5__6;

			[Token(Token = "0x17000209")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001009")]
				[Address(RVA = "0x8432B0", Offset = "0x8432B0", VA = "0x8432B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700020A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600100B")]
				[Address(RVA = "0x843318", Offset = "0x843318", VA = "0x843318", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001006")]
			[Address(RVA = "0x842B8C", Offset = "0x842B8C", VA = "0x842B8C")]
			[DebuggerHidden]
			public <AnimateBounceText>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001007")]
			[Address(RVA = "0x842C44", Offset = "0x842C44", VA = "0x842C44", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001008")]
			[Address(RVA = "0x842C48", Offset = "0x842C48", VA = "0x842C48", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600100A")]
			[Address(RVA = "0x8432B8", Offset = "0x8432B8", VA = "0x8432B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741338", Offset = "0x741338")]
		private sealed class <AnimateUpwardsText>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool CriticalHit;

			[Token(Token = "0x40015A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Text m_Text;

			[Token(Token = "0x40015A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Color CritTextColor;

			[Token(Token = "0x40015A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Color RegularTextColor;

			[Token(Token = "0x40015A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public bool HealingText;

			[Token(Token = "0x40015A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public CombatTextSystem <>4__this;

			[Token(Token = "0x40015A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public bool PlayerTakingDamage;

			[Token(Token = "0x40015AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public Vector3 TargetPosition;

			[Token(Token = "0x40015AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private float <t>5__2;

			[Token(Token = "0x40015AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			private float <m_TextFade>5__3;

			[Token(Token = "0x40015AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private float <RandomXPosition>5__4;

			[Token(Token = "0x40015AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			private float <AnimateSmaller>5__5;

			[Token(Token = "0x40015AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private float <AnimateLarger>5__6;

			[Token(Token = "0x1700020B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600100F")]
				[Address(RVA = "0x8448D0", Offset = "0x8448D0", VA = "0x8448D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700020C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001011")]
				[Address(RVA = "0x844938", Offset = "0x844938", VA = "0x844938", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600100C")]
			[Address(RVA = "0x842BB8", Offset = "0x842BB8", VA = "0x842BB8")]
			[DebuggerHidden]
			public <AnimateUpwardsText>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x600100D")]
			[Address(RVA = "0x8442B0", Offset = "0x8442B0", VA = "0x8442B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600100E")]
			[Address(RVA = "0x8442B4", Offset = "0x8442B4", VA = "0x8442B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001010")]
			[Address(RVA = "0x8448D8", Offset = "0x8448D8", VA = "0x8448D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741348", Offset = "0x741348")]
		private sealed class <AnimateOutwardsText>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool CriticalHit;

			[Token(Token = "0x40015B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Text m_Text;

			[Token(Token = "0x40015B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Color CritTextColor;

			[Token(Token = "0x40015B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Color RegularTextColor;

			[Token(Token = "0x40015B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public bool HealingText;

			[Token(Token = "0x40015B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public CombatTextSystem <>4__this;

			[Token(Token = "0x40015B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public bool PlayerTakingDamage;

			[Token(Token = "0x40015B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public Vector3 TargetPosition;

			[Token(Token = "0x40015BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private float <t>5__2;

			[Token(Token = "0x40015BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			private float <m_TextFade>5__3;

			[Token(Token = "0x40015BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private float <RandomXPosition>5__4;

			[Token(Token = "0x40015BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			private float <RandomYPosition>5__5;

			[Token(Token = "0x40015BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private Vector3 <m_TextPos>5__6;

			[Token(Token = "0x40015BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			private float <r>5__7;

			[Token(Token = "0x40015C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private float <AnimateSmaller>5__8;

			[Token(Token = "0x40015C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			private float <AnimateLarger>5__9;

			[Token(Token = "0x1700020D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001015")]
				[Address(RVA = "0x843B34", Offset = "0x843B34", VA = "0x843B34", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700020E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001017")]
				[Address(RVA = "0x843B9C", Offset = "0x843B9C", VA = "0x843B9C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001012")]
			[Address(RVA = "0x842BE4", Offset = "0x842BE4", VA = "0x842BE4")]
			[DebuggerHidden]
			public <AnimateOutwardsText>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001013")]
			[Address(RVA = "0x843320", Offset = "0x843320", VA = "0x843320", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001014")]
			[Address(RVA = "0x843324", Offset = "0x843324", VA = "0x843324", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001016")]
			[Address(RVA = "0x843B3C", Offset = "0x843B3C", VA = "0x843B3C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741358", Offset = "0x741358")]
		private sealed class <AnimateStationaryText>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool CriticalHit;

			[Token(Token = "0x40015C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Text m_Text;

			[Token(Token = "0x40015C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Color CritTextColor;

			[Token(Token = "0x40015C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Color RegularTextColor;

			[Token(Token = "0x40015C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public bool HealingText;

			[Token(Token = "0x40015C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public CombatTextSystem <>4__this;

			[Token(Token = "0x40015CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public bool PlayerTakingDamage;

			[Token(Token = "0x40015CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public Vector3 TargetPosition;

			[Token(Token = "0x40015CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private float <t>5__2;

			[Token(Token = "0x40015CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			private float <m_TextFade>5__3;

			[Token(Token = "0x40015CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private float <RandomXPosition>5__4;

			[Token(Token = "0x40015CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			private float <RandomYPosition>5__5;

			[Token(Token = "0x40015D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private float <AnimateSmaller>5__6;

			[Token(Token = "0x40015D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			private float <AnimateLarger>5__7;

			[Token(Token = "0x1700020F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600101B")]
				[Address(RVA = "0x844240", Offset = "0x844240", VA = "0x844240", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000210")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600101D")]
				[Address(RVA = "0x8442A8", Offset = "0x8442A8", VA = "0x8442A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001018")]
			[Address(RVA = "0x842C10", Offset = "0x842C10", VA = "0x842C10")]
			[DebuggerHidden]
			public <AnimateStationaryText>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6001019")]
			[Address(RVA = "0x843BA4", Offset = "0x843BA4", VA = "0x843BA4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600101A")]
			[Address(RVA = "0x843BA8", Offset = "0x843BA8", VA = "0x843BA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600101C")]
			[Address(RVA = "0x844248", Offset = "0x844248", VA = "0x844248", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CombatTextSystem Instance;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public GameObject CombatTextObject;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public AnimationTypeEnum AnimationType;

		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public GameObject CombatTextCanvas;

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public EmeraldAICombatTextData m_EmeraldAICombatTextData;

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_CombatTextParent;

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x841F10", Offset = "0x841F10", VA = "0x841F10")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x841F64", Offset = "0x841F64", VA = "0x841F64")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x842058", Offset = "0x842058", VA = "0x842058")]
		public void CreateCombatText(int amount, Vector3 TextPosition, bool CriticalHit, bool HealingText, bool PlayerTakingDamage)
		{
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x842814", Offset = "0x842814", VA = "0x842814")]
		public void CreateCombatTextAI(int Amount, Vector3 TextPosition, bool CriticalHit, bool HealingText)
		{
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x8423E4", Offset = "0x8423E4", VA = "0x8423E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74C31C", Offset = "0x74C31C")]
		private IEnumerator AnimateBounceText(Text m_Text, Color RegularTextColor, Color CritTextColor, Vector3 TargetPosition, bool CriticalHit, bool HealingText, bool PlayerTakingDamage)
		{
			return null;
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x8424F0", Offset = "0x8424F0", VA = "0x8424F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74C380", Offset = "0x74C380")]
		private IEnumerator AnimateUpwardsText(Text m_Text, Color RegularTextColor, Color CritTextColor, Vector3 TargetPosition, bool CriticalHit, bool HealingText, bool PlayerTakingDamage)
		{
			return null;
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0x8425FC", Offset = "0x8425FC", VA = "0x8425FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74C3E4", Offset = "0x74C3E4")]
		private IEnumerator AnimateOutwardsText(Text m_Text, Color RegularTextColor, Color CritTextColor, Vector3 TargetPosition, bool CriticalHit, bool HealingText, bool PlayerTakingDamage)
		{
			return null;
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0x842708", Offset = "0x842708", VA = "0x842708")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74C448", Offset = "0x74C448")]
		private IEnumerator AnimateStationaryText(Text m_Text, Color RegularTextColor, Color CritTextColor, Vector3 TargetPosition, bool CriticalHit, bool HealingText, bool PlayerTakingDamage)
		{
			return null;
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0x842C3C", Offset = "0x842C3C", VA = "0x842C3C")]
		public CombatTextSystem()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001C7")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x74097C", Offset = "0x74097C")]
	public class EmeraldAIAbility : ScriptableObject
	{
		[Token(Token = "0x20002E9")]
		public enum AbilityTypeEnum
		{
			[Token(Token = "0x40015D3")]
			Damage,
			[Token(Token = "0x40015D4")]
			Support,
			[Token(Token = "0x40015D5")]
			Summon
		}

		[Token(Token = "0x20002EA")]
		public enum DamageTypeEnum
		{
			[Token(Token = "0x40015D7")]
			Instant,
			[Token(Token = "0x40015D8")]
			OverTime
		}

		[Token(Token = "0x20002EB")]
		public enum SupportTypeEnum
		{
			[Token(Token = "0x40015DA")]
			Instant,
			[Token(Token = "0x40015DB")]
			OverTime
		}

		[Token(Token = "0x20002EC")]
		public enum Yes_No
		{
			[Token(Token = "0x40015DD")]
			No,
			[Token(Token = "0x40015DE")]
			Yes
		}

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string AbilityName;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string AbilityDescription;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int AbilityDamage;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int MinAbilityDamage;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int MaxAbilityDamage;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int AbilityDamagePerIncrement;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float CriticalHitOdds;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float CriticalHitMultiplierMin;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float CriticalHitMultiplierMax;

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int AbilityImpactDamage;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int AbilitySupportAmount;

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float AbilityDamageIncrement;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int AbilityCooldown;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int AbilityLength;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int SummonRadius;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int ProjectileSpeed;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int ProjectileTimeoutSeconds;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float ColliderRadius;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float ProjectileGravity;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float TimeoutTime;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float CollisionTime;

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float HeatSeekingSeconds;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float CastEffectTimeoutSeconds;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float AbilityEffectTimeoutSeconds;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float SummonEffectTimeoutSeconds;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float CollisionTimeout;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float DamageOvertimeTimeout;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float GravityAmount;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Texture2D AbilityIcon;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GameObject AbilityEffect;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject CreateEffect;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GameObject SummonEffect;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GameObject SummonObject;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public GameObject DamageOverTimeEffect;

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public AudioClip DamageOverTimeSound;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public GameObject CollisionEffect;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public List<AudioClip> CollisionSoundsList;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public AudioClip SummonSound;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public List<AudioClip> CreateSoundsList;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public AbilityTypeEnum AbilityType;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public DamageTypeEnum DamageType;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public SupportTypeEnum SupportType;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public Yes_No HighQualityCollisions;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Yes_No SoundOnCollisionRef;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public Yes_No HeatSeekingRef;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Yes_No EffectOnCollisionRef;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public Yes_No CollisionEffectOnTargets;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public Yes_No ArrowProjectileRef;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public Yes_No UseGravity;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Yes_No UseRandomizedDamage;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public Yes_No AbilityStacksRef;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public Yes_No UseDamageOverTimeEffectRef;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public Yes_No UseDamageOverTimeSoundRef;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public Yes_No UseCreateSound;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public Yes_No UseCriticalHits;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public Yes_No UseCustomAbilityIcon;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public Yes_No UseCreateEffect;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public int AbilityEditorTabs;

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0x844940", Offset = "0x844940", VA = "0x844940")]
		public EmeraldAIAbility()
		{
		}
	}
	[Token(Token = "0x20001C8")]
	public class EmeraldAIBehaviors : MonoBehaviour
	{
		[Token(Token = "0x20002ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741368", Offset = "0x741368")]
		private sealed class <DelayEquipAnimations>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EmeraldAIBehaviors <>4__this;

			[Token(Token = "0x17000211")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001021")]
				[Address(RVA = "0x849368", Offset = "0x849368", VA = "0x849368", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000212")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001023")]
				[Address(RVA = "0x8493D0", Offset = "0x8493D0", VA = "0x8493D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600101E")]
			[Address(RVA = "0x848DCC", Offset = "0x848DCC", VA = "0x848DCC")]
			[DebuggerHidden]
			public <DelayEquipAnimations>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x600101F")]
			[Address(RVA = "0x8491F0", Offset = "0x8491F0", VA = "0x8491F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001020")]
			[Address(RVA = "0x8491F4", Offset = "0x8491F4", VA = "0x8491F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001022")]
			[Address(RVA = "0x849370", Offset = "0x849370", VA = "0x849370", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002EE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741378", Offset = "0x741378")]
		private sealed class <ReturnToStartComplete>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EmeraldAIBehaviors <>4__this;

			[Token(Token = "0x17000213")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001027")]
				[Address(RVA = "0x8499A4", Offset = "0x8499A4", VA = "0x8499A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000214")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001029")]
				[Address(RVA = "0x849A0C", Offset = "0x849A0C", VA = "0x849A0C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001024")]
			[Address(RVA = "0x848E34", Offset = "0x848E34", VA = "0x848E34")]
			[DebuggerHidden]
			public <ReturnToStartComplete>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6001025")]
			[Address(RVA = "0x849848", Offset = "0x849848", VA = "0x849848", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001026")]
			[Address(RVA = "0x84984C", Offset = "0x84984C", VA = "0x84984C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001028")]
			[Address(RVA = "0x8499AC", Offset = "0x8499AC", VA = "0x8499AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002EF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741388", Offset = "0x741388")]
		private sealed class <RefillHeathOverTime>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EmeraldAIBehaviors <>4__this;

			[Token(Token = "0x17000215")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600102D")]
				[Address(RVA = "0x8497D8", Offset = "0x8497D8", VA = "0x8497D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000216")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600102F")]
				[Address(RVA = "0x849840", Offset = "0x849840", VA = "0x849840", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600102A")]
			[Address(RVA = "0x848E60", Offset = "0x848E60", VA = "0x848E60")]
			[DebuggerHidden]
			public <RefillHeathOverTime>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x600102B")]
			[Address(RVA = "0x8496E8", Offset = "0x8496E8", VA = "0x8496E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600102C")]
			[Address(RVA = "0x8496EC", Offset = "0x8496EC", VA = "0x8496EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600102E")]
			[Address(RVA = "0x8497E0", Offset = "0x8497E0", VA = "0x8497E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741398", Offset = "0x741398")]
		private sealed class <DelayReturnToDestination>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EmeraldAIBehaviors <>4__this;

			[Token(Token = "0x40015EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float DelaySeconds;

			[Token(Token = "0x17000217")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001033")]
				[Address(RVA = "0x849678", Offset = "0x849678", VA = "0x849678", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000218")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001035")]
				[Address(RVA = "0x8496E0", Offset = "0x8496E0", VA = "0x8496E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001030")]
			[Address(RVA = "0x848E8C", Offset = "0x848E8C", VA = "0x848E8C")]
			[DebuggerHidden]
			public <DelayReturnToDestination>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6001031")]
			[Address(RVA = "0x8493D8", Offset = "0x8493D8", VA = "0x8493D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001032")]
			[Address(RVA = "0x8493DC", Offset = "0x8493DC", VA = "0x8493DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001034")]
			[Address(RVA = "0x849680", Offset = "0x849680", VA = "0x849680", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public EmeraldAISystem EmeraldComponent;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool SearchDelayActive;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[HideInInspector]
		public bool GeneratingAttack;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float BlockTimer;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool BackupDelayActive;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float BackupDistance;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int StartingDetectionRadius;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float BlockSeconds;

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x844A70", Offset = "0x844A70", VA = "0x844A70")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0x844AD8", Offset = "0x844AD8", VA = "0x844AD8")]
		public void AggressiveBehavior()
		{
		}

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0x847528", Offset = "0x847528", VA = "0x847528")]
		private void CheckForTargetDeath()
		{
		}

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0x84773C", Offset = "0x84773C", VA = "0x84773C")]
		private void DeathReset()
		{
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0x8479A0", Offset = "0x8479A0", VA = "0x8479A0")]
		public void CompanionBehavior()
		{
		}

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0x847E24", Offset = "0x847E24", VA = "0x847E24")]
		public void CowardBehavior()
		{
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0x8482CC", Offset = "0x8482CC", VA = "0x8482CC")]
		public void CautiousBehavior()
		{
		}

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0x8484BC", Offset = "0x8484BC", VA = "0x8484BC")]
		public void DeadState()
		{
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x8480B0", Offset = "0x8480B0", VA = "0x8480B0")]
		public void FleeState()
		{
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x8486B0", Offset = "0x8486B0", VA = "0x8486B0")]
		public void CheckAnimationStates()
		{
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x845ADC", Offset = "0x845ADC", VA = "0x845ADC")]
		public void DefaultState()
		{
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x848B1C", Offset = "0x848B1C", VA = "0x848B1C")]
		private void TransitionIK()
		{
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x848D5C", Offset = "0x848D5C", VA = "0x848D5C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74C4AC", Offset = "0x74C4AC")]
		private IEnumerator DelayEquipAnimations()
		{
			return null;
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x848DF8", Offset = "0x848DF8", VA = "0x848DF8")]
		public void DelaySearch()
		{
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x848CEC", Offset = "0x848CEC", VA = "0x848CEC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74C510", Offset = "0x74C510")]
		private IEnumerator ReturnToStartComplete()
		{
			return null;
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x848C7C", Offset = "0x848C7C", VA = "0x848C7C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74C574", Offset = "0x74C574")]
		private IEnumerator RefillHeathOverTime()
		{
			return null;
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x848BFC", Offset = "0x848BFC", VA = "0x848BFC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74C5D8", Offset = "0x74C5D8")]
		private IEnumerator DelayReturnToDestination(float DelaySeconds)
		{
			return null;
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x848EB8", Offset = "0x848EB8", VA = "0x848EB8")]
		public void ActivateCombatState()
		{
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x844E5C", Offset = "0x844E5C", VA = "0x844E5C")]
		public void AttackState()
		{
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x849074", Offset = "0x849074", VA = "0x849074")]
		private void ResetAttackGeneration()
		{
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x845F30", Offset = "0x845F30", VA = "0x845F30")]
		public void BlockState()
		{
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x84907C", Offset = "0x84907C", VA = "0x84907C")]
		private void ActivateBlockCooldown()
		{
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x84695C", Offset = "0x84695C", VA = "0x84695C")]
		public void BackupState()
		{
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x8490E4", Offset = "0x8490E4", VA = "0x8490E4")]
		private void BackupDelay()
		{
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x8489A8", Offset = "0x8489A8", VA = "0x8489A8")]
		public void StopBackingUp()
		{
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x8462C0", Offset = "0x8462C0", VA = "0x8462C0")]
		public void CalculateBackupState()
		{
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x8490EC", Offset = "0x8490EC", VA = "0x8490EC")]
		public EmeraldAIBehaviors()
		{
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x8490FC", Offset = "0x8490FC", VA = "0x8490FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74C63C", Offset = "0x74C63C")]
		private bool <DelayEquipAnimations>b__20_0()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x849134", Offset = "0x849134", VA = "0x849134")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74C64C", Offset = "0x74C64C")]
		private bool <ReturnToStartComplete>b__22_0()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x8491C0", Offset = "0x8491C0", VA = "0x8491C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74C65C", Offset = "0x74C65C")]
		private bool <DelayReturnToDestination>b__24_0()
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20001C9")]
	public class EmeraldAICombatTextData : ScriptableObject
	{
		[Token(Token = "0x20002F1")]
		public enum CombatTextStateEnum
		{
			[Token(Token = "0x40015ED")]
			Enabled,
			[Token(Token = "0x40015EE")]
			Disabled
		}

		[Token(Token = "0x20002F2")]
		public enum AnimationTypeEnum
		{
			[Token(Token = "0x40015F0")]
			Bounce,
			[Token(Token = "0x40015F1")]
			Upwards,
			[Token(Token = "0x40015F2")]
			OutwardsV1,
			[Token(Token = "0x40015F3")]
			OutwardsV2,
			[Token(Token = "0x40015F4")]
			Stationary
		}

		[Token(Token = "0x20002F3")]
		public enum CombatTextTargetEnum
		{
			[Token(Token = "0x40015F6")]
			PlayerAndAI,
			[Token(Token = "0x40015F7")]
			PlayerOnly,
			[Token(Token = "0x40015F8")]
			AIOnly
		}

		[Token(Token = "0x20002F4")]
		public enum OutlineEffectEnum
		{
			[Token(Token = "0x40015FA")]
			Enabled,
			[Token(Token = "0x40015FB")]
			Disabled
		}

		[Token(Token = "0x20002F5")]
		public enum UseAnimateFontSizeEnum
		{
			[Token(Token = "0x40015FD")]
			Enabled,
			[Token(Token = "0x40015FE")]
			Disabled
		}

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CombatTextStateEnum CombatTextState;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color PlayerTextColor;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color PlayerCritTextColor;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Color PlayerTakeDamageTextColor;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Color AITextColor;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Color AICritTextColor;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Color HealingTextColor;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Font TextFont;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int FontSize;

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public int MaxFontSize;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AnimationTypeEnum AnimationType;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public CombatTextTargetEnum CombatTextTargets;

		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public OutlineEffectEnum OutlineEffect;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public UseAnimateFontSizeEnum UseAnimateFontSize;

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float DefaultHeight;

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0x849A14", Offset = "0x849A14", VA = "0x849A14")]
		public EmeraldAICombatTextData()
		{
		}
	}
	[Token(Token = "0x20001CA")]
	public class EmeraldAIEventsManager : MonoBehaviour
	{
		[Token(Token = "0x20002F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7413A8", Offset = "0x7413A8")]
		private sealed class <RotateTowards>d__82 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001600")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001601")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EmeraldAIEventsManager <>4__this;

			[Token(Token = "0x4001602")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 TargetPosition;

			[Token(Token = "0x4001603")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public bool RotateAwayFrom;

			[Token(Token = "0x4001604")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform Target;

			[Token(Token = "0x4001605")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int Duration;

			[Token(Token = "0x4001606")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <RayCastUpdateTimer>5__2;

			[Token(Token = "0x17000219")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001039")]
				[Address(RVA = "0x8EE3C4", Offset = "0x8EE3C4", VA = "0x8EE3C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700021A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600103B")]
				[Address(RVA = "0x8EE42C", Offset = "0x8EE42C", VA = "0x8EE42C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001036")]
			[Address(RVA = "0x8ED638", Offset = "0x8ED638", VA = "0x8ED638")]
			[DebuggerHidden]
			public <RotateTowards>d__82(int <>1__state)
			{
			}

			[Token(Token = "0x6001037")]
			[Address(RVA = "0x8ED664", Offset = "0x8ED664", VA = "0x8ED664", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001038")]
			[Address(RVA = "0x8ED668", Offset = "0x8ED668", VA = "0x8ED668", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600103A")]
			[Address(RVA = "0x8EE3CC", Offset = "0x8EE3CC", VA = "0x8EE3CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7413B8", Offset = "0x7413B8")]
		private sealed class <HealOverTimeCoroutine>d__100 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001607")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001608")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001609")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EmeraldAIAbility AbilityObject;

			[Token(Token = "0x400160A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public EmeraldAIEventsManager <>4__this;

			[Token(Token = "0x400160B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int HealPointsPerSecond;

			[Token(Token = "0x400160C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int HealLength;

			[Token(Token = "0x400160D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <Length>5__2;

			[Token(Token = "0x400160E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <Seconds>5__3;

			[Token(Token = "0x1700021B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600103F")]
				[Address(RVA = "0x8ED5C8", Offset = "0x8ED5C8", VA = "0x8ED5C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700021C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001041")]
				[Address(RVA = "0x8ED630", Offset = "0x8ED630", VA = "0x8ED630", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600103C")]
			[Address(RVA = "0x8ED31C", Offset = "0x8ED31C", VA = "0x8ED31C")]
			[DebuggerHidden]
			public <HealOverTimeCoroutine>d__100(int <>1__state)
			{
			}

			[Token(Token = "0x600103D")]
			[Address(RVA = "0x8ED348", Offset = "0x8ED348", VA = "0x8ED348", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600103E")]
			[Address(RVA = "0x8ED34C", Offset = "0x8ED34C", VA = "0x8ED34C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001040")]
			[Address(RVA = "0x8ED5D0", Offset = "0x8ED5D0", VA = "0x8ED5D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private EmeraldAISystem EmeraldComponent;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Coroutine m_RotateTowards;

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0x849AB8", Offset = "0x849AB8", VA = "0x849AB8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x849B10", Offset = "0x849B10", VA = "0x849B10")]
		public void PlaySoundClip(AudioClip Clip)
		{
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0x849BAC", Offset = "0x849BAC", VA = "0x849BAC")]
		public void PlayIdleSound()
		{
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x849D7C", Offset = "0x849D7C", VA = "0x849D7C")]
		public void PlayAttackSound()
		{
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x849EA8", Offset = "0x849EA8", VA = "0x849EA8")]
		public void PlayWarningSound()
		{
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x849FD4", Offset = "0x849FD4", VA = "0x849FD4")]
		public void PlayImpactSound()
		{
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x84A3F0", Offset = "0x84A3F0", VA = "0x84A3F0")]
		public void PlayCriticalHitSound()
		{
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0x84A560", Offset = "0x84A560", VA = "0x84A560")]
		public void PlayBlockSound()
		{
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0x84A97C", Offset = "0x84A97C", VA = "0x84A97C")]
		public void PlayInjuredSound()
		{
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0x84AAEC", Offset = "0x84AAEC", VA = "0x84AAEC")]
		public void PlayDeathSound()
		{
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0x84AC18", Offset = "0x84AC18", VA = "0x84AC18")]
		public void WalkFootstepSound()
		{
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0x84AE50", Offset = "0x84AE50", VA = "0x84AE50")]
		public void RunFootstepSound()
		{
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0x84B018", Offset = "0x84B018", VA = "0x84B018")]
		public void PlayRandomSoundEffect()
		{
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0x84B190", Offset = "0x84B190", VA = "0x84B190")]
		public void PlaySoundEffect(int SoundEffectID)
		{
		}

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0x84B364", Offset = "0x84B364", VA = "0x84B364")]
		public void EnableItem(int ItemID)
		{
		}

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0x84B4C0", Offset = "0x84B4C0", VA = "0x84B4C0")]
		public void DisableItem(int ItemID)
		{
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0x84B61C", Offset = "0x84B61C", VA = "0x84B61C")]
		public void DisableAllItems()
		{
		}

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0x84B738", Offset = "0x84B738", VA = "0x84B738")]
		public void EquipWeapon(string WeaponTypeToEnable)
		{
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0x84BB7C", Offset = "0x84BB7C", VA = "0x84BB7C")]
		public void UnequipWeapon(string WeaponTypeToDisable)
		{
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x848FB8", Offset = "0x848FB8", VA = "0x848FB8")]
		public void CancelAttackAnimation()
		{
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x84BF10", Offset = "0x84BF10", VA = "0x84BF10")]
		public void PlayEmoteAnimation(int EmoteAnimationID)
		{
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x84C020", Offset = "0x84C020", VA = "0x84C020")]
		public void LoopEmoteAnimation(int EmoteAnimationID)
		{
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x84C134", Offset = "0x84C134", VA = "0x84C134")]
		public void StopLoopEmoteAnimation(int EmoteAnimationID)
		{
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x84C248", Offset = "0x84C248", VA = "0x84C248")]
		public void SpawnAdditionalEffect(GameObject EffectObject)
		{
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x84C468", Offset = "0x84C468", VA = "0x84C468")]
		public void SpawnEffectOnTarget(GameObject EffectObject)
		{
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x84C6C8", Offset = "0x84C6C8", VA = "0x84C6C8")]
		public void SpawnBloodSplatEffect(GameObject BloodSplatObject)
		{
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x84C994", Offset = "0x84C994", VA = "0x84C994")]
		public void KillAI()
		{
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x84CA30", Offset = "0x84CA30", VA = "0x84CA30")]
		public void OverrideIdleAnimation(int IdleIndex)
		{
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x84CAB4", Offset = "0x84CAB4", VA = "0x84CAB4")]
		public void DisableOverrideIdleAnimation()
		{
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0x84CAD0", Offset = "0x84CAD0", VA = "0x84CAD0")]
		public void ChangeBehavior(EmeraldAISystem.CurrentBehavior NewBehavior, bool ChangeStartingBehavior = false)
		{
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x84CB04", Offset = "0x84CB04", VA = "0x84CB04")]
		public void ChangeConfidence(EmeraldAISystem.ConfidenceType NewConfidence, bool ChangeStartingConfidence = false)
		{
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x84CB38", Offset = "0x84CB38", VA = "0x84CB38")]
		public void ChangeWanderType(EmeraldAISystem.WanderType NewWanderType)
		{
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x84CB54", Offset = "0x84CB54", VA = "0x84CB54")]
		public void CreateDroppableWeapon()
		{
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x8488DC", Offset = "0x8488DC", VA = "0x8488DC")]
		public void ClearTarget([Optional][MetadataOffset(Offset = "0x2E8EF1")] bool? ClearFollower)
		{
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x84D398", Offset = "0x84D398", VA = "0x84D398")]
		public void ClearAllIgnoredTargets()
		{
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x84D414", Offset = "0x84D414", VA = "0x84D414")]
		public void SetIgnoredTarget(Transform TargetTransform)
		{
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x84D4E4", Offset = "0x84D4E4", VA = "0x84D4E4")]
		public void ClearIgnoredTarget(Transform TargetTransform)
		{
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x84D5E4", Offset = "0x84D5E4", VA = "0x84D5E4")]
		public void ReturnToStart()
		{
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x84D654", Offset = "0x84D654", VA = "0x84D654")]
		private void DelayTargetReset()
		{
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x84D6AC", Offset = "0x84D6AC", VA = "0x84D6AC")]
		public float GetDistanceFromTarget()
		{
			return default(float);
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x84D778", Offset = "0x84D778", VA = "0x84D778")]
		public Transform GetCombatTarget()
		{
			return null;
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0x84D794", Offset = "0x84D794", VA = "0x84D794")]
		public void SetCombatTarget(Transform Target)
		{
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x84D924", Offset = "0x84D924", VA = "0x84D924")]
		public void OverrideCombatTarget(Transform Target)
		{
		}

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x84DAD8", Offset = "0x84DAD8", VA = "0x84DAD8")]
		public void FleeFromTarget(Transform FleeTarget)
		{
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0x84DC68", Offset = "0x84DC68", VA = "0x84DC68")]
		public void SetFollowerTarget(Transform Target)
		{
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x84DCD0", Offset = "0x84DCD0", VA = "0x84DCD0")]
		public void TameAI(Transform Target)
		{
		}

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x84D37C", Offset = "0x84D37C", VA = "0x84D37C")]
		public Transform GetAttacker()
		{
			return null;
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x84DD8C", Offset = "0x84DD8C", VA = "0x84DD8C")]
		public void ChangeDetectionType(EmeraldAISystem.DetectionType DetectionType)
		{
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x84DDA8", Offset = "0x84DDA8", VA = "0x84DDA8")]
		public void UpdateUIHealthBarColor(Color NewColor)
		{
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0x84DF04", Offset = "0x84DF04", VA = "0x84DF04")]
		public void UpdateUIHealthBarBackgroundColor(Color NewColor)
		{
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0x84DFF8", Offset = "0x84DFF8", VA = "0x84DFF8")]
		public void UpdateUINameColor(Color NewColor)
		{
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0x84E048", Offset = "0x84E048", VA = "0x84E048")]
		public void UpdateUINameText(string NewName)
		{
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x84E098", Offset = "0x84E098", VA = "0x84E098")]
		public void UpdateHealth(int MaxHealth, int CurrentHealth)
		{
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0x84E0C4", Offset = "0x84E0C4", VA = "0x84E0C4")]
		public void UpdateDynamicWanderPosition()
		{
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0x84E108", Offset = "0x84E108", VA = "0x84E108")]
		public void SetDynamicWanderPosition(Transform Destination)
		{
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0x84E158", Offset = "0x84E158", VA = "0x84E158")]
		public void UpdateStartingPosition()
		{
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0x84E19C", Offset = "0x84E19C", VA = "0x84E19C")]
		public void SetDestination(Transform Destination)
		{
		}

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0x84E298", Offset = "0x84E298", VA = "0x84E298")]
		public void SetDestinationPosition(Vector3 DestinationPosition)
		{
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0x84E384", Offset = "0x84E384", VA = "0x84E384")]
		public void AddWaypoint(Transform Waypoint)
		{
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0x84E404", Offset = "0x84E404", VA = "0x84E404")]
		public void RemoveWaypoint(int WaypointIndex)
		{
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0x84E474", Offset = "0x84E474", VA = "0x84E474")]
		public void ClearAllWaypoints()
		{
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x84E4E4", Offset = "0x84E4E4", VA = "0x84E4E4")]
		public void InstantlyRefillAIHealth()
		{
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x84E504", Offset = "0x84E504", VA = "0x84E504")]
		public void StopMovement()
		{
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x84E530", Offset = "0x84E530", VA = "0x84E530")]
		public void ResumeMovement()
		{
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x84E55C", Offset = "0x84E55C", VA = "0x84E55C")]
		public void StopFollowing()
		{
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x84E588", Offset = "0x84E588", VA = "0x84E588")]
		public void ResumeFollowing()
		{
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0x84E5B4", Offset = "0x84E5B4", VA = "0x84E5B4")]
		public void CompanionGuardPosition(Vector3 PositionToGuard)
		{
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x84E698", Offset = "0x84E698", VA = "0x84E698")]
		public void SearchForClosestTarget()
		{
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x84E6E8", Offset = "0x84E6E8", VA = "0x84E6E8")]
		public void SearchForRandomTarget()
		{
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0x84E728", Offset = "0x84E728", VA = "0x84E728")]
		public void UpdateAIMeleeDamage(int MeleeAttackNumber, int MinDamage, int MaxDamage)
		{
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x84E800", Offset = "0x84E800", VA = "0x84E800")]
		public void UpdateAIMeleeAttackSpeed(int MinAttackSpeed, int MaxAttackSpeed)
		{
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x84E82C", Offset = "0x84E82C", VA = "0x84E82C")]
		public void UpdateAIRangedAttackSpeed(int MinAttackSpeed, int MaxAttackSpeed)
		{
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x84E858", Offset = "0x84E858", VA = "0x84E858")]
		public void RotateAITowardsTarget(Transform Target, int Duration)
		{
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x84E9A4", Offset = "0x84E9A4", VA = "0x84E9A4")]
		public void CancelRotateAITowardsTarget()
		{
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0x84E9C0", Offset = "0x84E9C0", VA = "0x84E9C0")]
		public void RotateAIAwayFromTarget(Transform Target, int Duration)
		{
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0x84EA90", Offset = "0x84EA90", VA = "0x84EA90")]
		public void CancelRotateAIAwayFromTarget()
		{
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x84EAAC", Offset = "0x84EAAC", VA = "0x84EAAC")]
		public void RotateAITowardsPosition(Vector3 TargetPosition, int Duration)
		{
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x84EB54", Offset = "0x84EB54", VA = "0x84EB54")]
		public void CancelRotateAITowardsPosition()
		{
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x84EB70", Offset = "0x84EB70", VA = "0x84EB70")]
		public void RotateAIAwayFromPosition(Vector3 TargetPosition, int Duration)
		{
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x84EC18", Offset = "0x84EC18", VA = "0x84EC18")]
		public void CancelRotateAIAwayFromPosition()
		{
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x84E8E4", Offset = "0x84E8E4", VA = "0x84E8E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74C66C", Offset = "0x74C66C")]
		private IEnumerator RotateTowards(Transform Target, int Duration, [Optional] Vector3 TargetPosition, bool RotateAwayFrom = false)
		{
			return null;
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x84EC34", Offset = "0x84EC34", VA = "0x84EC34")]
		public void SetFactionLevel(string Faction, string FactionLevel)
		{
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x84EF54", Offset = "0x84EF54", VA = "0x84EF54")]
		public void AddFactionRelation(string Faction, string FactionLevel)
		{
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x84F1F0", Offset = "0x84F1F0", VA = "0x84F1F0")]
		public EmeraldAISystem.RelationType GetAIRelation(EmeraldAISystem EmeraldTarget)
		{
			return default(EmeraldAISystem.RelationType);
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x84F304", Offset = "0x84F304", VA = "0x84F304")]
		public EmeraldAISystem.RelationType GetPlayerRelation()
		{
			return default(EmeraldAISystem.RelationType);
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x84F3C0", Offset = "0x84F3C0", VA = "0x84F3C0")]
		public void SetPlayerRelation(EmeraldAISystem.PlayerFactionClass.RelationType Relation)
		{
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x84F440", Offset = "0x84F440", VA = "0x84F440")]
		public void ChangeFaction(string FactionName)
		{
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x84F568", Offset = "0x84F568", VA = "0x84F568")]
		public bool CheckForPlayerDetection()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x84F608", Offset = "0x84F608", VA = "0x84F608")]
		public string GetFaction()
		{
			return null;
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x84F6CC", Offset = "0x84F6CC", VA = "0x84F6CC")]
		public void ChangeOffsensiveAbilityObject(int AbilityIndex, EmeraldAIAbility AbilityObject)
		{
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x84F758", Offset = "0x84F758", VA = "0x84F758")]
		public void ChangeSupportAbilityObject(int AbilityIndex, EmeraldAIAbility AbilityObject)
		{
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x84F7E4", Offset = "0x84F7E4", VA = "0x84F7E4")]
		public void ChangeSummoningAbilityObject(int AbilityIndex, EmeraldAIAbility AbilityObject)
		{
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x84F870", Offset = "0x84F870", VA = "0x84F870")]
		public void ReturnToDefaultState()
		{
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x84F894", Offset = "0x84F894", VA = "0x84F894")]
		public void DebugLogMessage(string Message)
		{
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x84F8FC", Offset = "0x84F8FC", VA = "0x84F8FC")]
		public void EnableObject(GameObject Object)
		{
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x84F91C", Offset = "0x84F91C", VA = "0x84F91C")]
		public void DisableObject(GameObject Object)
		{
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x84F93C", Offset = "0x84F93C", VA = "0x84F93C")]
		public void ResetAI()
		{
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0x84FD4C", Offset = "0x84FD4C", VA = "0x84FD4C")]
		public void HealOverTimeAbility(EmeraldAIAbility AbilityObject)
		{
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x84FDC8", Offset = "0x84FDC8", VA = "0x84FDC8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74C6D0", Offset = "0x74C6D0")]
		private IEnumerator HealOverTimeCoroutine(int HealLength, int HealPointsPerSecond, EmeraldAIAbility AbilityObject)
		{
			return null;
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x84FE58", Offset = "0x84FE58", VA = "0x84FE58")]
		public EmeraldAIEventsManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001CB")]
	public class EmeraldAIFactionData : ScriptableObject
	{
		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public List<string> FactionNameList;

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x8EE434", Offset = "0x8EE434", VA = "0x8EE434")]
		public EmeraldAIFactionData()
		{
		}
	}
	[Token(Token = "0x20001CC")]
	public class EmeraldAINeedsSystem : MonoBehaviour
	{
		[Token(Token = "0x20002F8")]
		public enum DepletedResourcesKillsAIEnum
		{
			[Token(Token = "0x4001610")]
			Yes,
			[Token(Token = "0x4001611")]
			No
		}

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent GatherEvent;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LayerMask SearchLayerMask;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int SearchRadius;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color SearchRadiusColor;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int WanderRadius;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Color WanderRadiusColor;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int MaxWaypoints;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int UpdateResourcesFrequency;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int ResourceUsage;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int CurrentResourcesLevel;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int ResourcesLowThreshold;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int ResourcesFullThreshold;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float ResourceRefillMultiplier;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int SecondsNeededForDeath;

		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public DepletedResourcesKillsAIEnum DepletedResourcesKillsAI;

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int GatherResourceAnimationIndex;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int IdleAnimationIndex;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private EmeraldAISystem m_EmeraldAISystem;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int m_TotalWaypoints;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float m_UpdateNeedsTimer;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float m_SecondsNeededForDeathTimer;

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Collider[] m_DetectedWaypointObjects;

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0x8EE4A4", Offset = "0x8EE4A4", VA = "0x8EE4A4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x8EE5D0", Offset = "0x8EE5D0", VA = "0x8EE5D0")]
		private void UpdateWaypoints()
		{
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0x8EE8D8", Offset = "0x8EE8D8", VA = "0x8EE8D8")]
		private void UpdateNeeds()
		{
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x8EE920", Offset = "0x8EE920", VA = "0x8EE920")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0x8EEB00", Offset = "0x8EEB00", VA = "0x8EEB00")]
		public EmeraldAINeedsSystem()
		{
		}
	}
	[Token(Token = "0x20001CD")]
	public class EmeraldAINonAIDamage : MonoBehaviour
	{
		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Health;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool DebugLogDeath;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<string> ActiveEffects;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private EmeraldAISystem EmeraldComponent;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string StartingTag;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int StartingLayer;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int StartingHealth;

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0x8EEB74", Offset = "0x8EEB74", VA = "0x8EEB74")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0x8EEBD0", Offset = "0x8EEBD0", VA = "0x8EEBD0")]
		public void SendNonAIDamage(int DamageAmount, Transform Target, bool CriticalHit = false)
		{
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x8EED18", Offset = "0x8EED18", VA = "0x8EED18")]
		private void DefaultDamage(int DamageAmount, Transform Target)
		{
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0x8EEE04", Offset = "0x8EEE04", VA = "0x8EEE04")]
		public void ResetNonAITarget()
		{
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0x8EEE60", Offset = "0x8EEE60", VA = "0x8EEE60")]
		public EmeraldAINonAIDamage()
		{
		}
	}
	[Token(Token = "0x20001CE")]
	public class EmeraldAIPlayerDamage : MonoBehaviour
	{
		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> ActiveEffects;

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool IsDead;

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0x8EEEE0", Offset = "0x8EEEE0", VA = "0x8EEEE0")]
		public void SendPlayerDamage(int DamageAmount, Transform Target, EmeraldAISystem EmeraldComponent, bool CriticalHit = false)
		{
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0x8EEF88", Offset = "0x8EEF88", VA = "0x8EEF88")]
		private void DamagePlayerStandard(int DamageAmount)
		{
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0x8EF0B8", Offset = "0x8EF0B8", VA = "0x8EF0B8")]
		public EmeraldAIPlayerDamage()
		{
		}
	}
	[Token(Token = "0x20001CF")]
	public class EmeraldAIWaypointObject : ScriptableObject
	{
		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Vector3> Waypoints;

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x8F8D4C", Offset = "0x8F8D4C", VA = "0x8F8D4C")]
		public EmeraldAIWaypointObject()
		{
		}
	}
	[Token(Token = "0x20001D0")]
	public class LocationBasedDamage : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002F9")]
		public class LocationBasedDamageClass
		{
			[Token(Token = "0x4001612")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Collider ColliderObject;

			[Token(Token = "0x4001613")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float DamageMultiplier;

			[Token(Token = "0x6001042")]
			[Address(RVA = "0x8FC030", Offset = "0x8FC030", VA = "0x8FC030")]
			public LocationBasedDamageClass(Collider m_ColliderObject, int m_DamageMultiplier)
			{
			}

			[Token(Token = "0x6001043")]
			[Address(RVA = "0x8FC078", Offset = "0x8FC078", VA = "0x8FC078")]
			public static bool Contains(List<LocationBasedDamageClass> m_LocationBasedDamageList, LocationBasedDamageClass m_LocationBasedDamageClass)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private EmeraldAISystem EmeraldComponent;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool ColliderListFoldout;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public List<LocationBasedDamageClass> ColliderList;

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x8FBC8C", Offset = "0x8FBC8C", VA = "0x8FBC8C")]
		public void InitializeLocationBasedDamage()
		{
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0x8FBFB8", Offset = "0x8FBFB8", VA = "0x8FBFB8")]
		public LocationBasedDamage()
		{
		}
	}
	[Token(Token = "0x20001D1")]
	public class LocationBasedDamageArea : MonoBehaviour
	{
		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public float DamageMultiplier;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public EmeraldAISystem EmeraldComponent;

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x8F9BA8", Offset = "0x8F9BA8", VA = "0x8F9BA8")]
		public void DamageArea(int DamageAmount, [Optional] EmeraldAISystem.TargetType? TypeOfTarget, [Optional] Transform AttackerTransform, int RagdollForce = 0, bool CriticalHit = false)
		{
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x8FC1D4", Offset = "0x8FC1D4", VA = "0x8FC1D4")]
		public void CreateImpactEffect(Vector3 ImpactPosition, bool SetAIAsEffectParent = true)
		{
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0x8FC458", Offset = "0x8FC458", VA = "0x8FC458")]
		public LocationBasedDamageArea()
		{
		}
	}
	[Token(Token = "0x20001D2")]
	public class CameraShake : MonoBehaviour
	{
		[Token(Token = "0x20002FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7413C8", Offset = "0x7413C8")]
		private sealed class <CameraShakeSequence>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001614")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001615")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001616")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CameraShake <>4__this;

			[Token(Token = "0x4001617")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float ShakeAmount;

			[Token(Token = "0x4001618")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float ShakeTime;

			[Token(Token = "0x4001619")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <t>5__2;

			[Token(Token = "0x400161A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <TransitionIn>5__3;

			[Token(Token = "0x400161B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <TransitionOut>5__4;

			[Token(Token = "0x1700021D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001047")]
				[Address(RVA = "0x841958", Offset = "0x841958", VA = "0x841958", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700021E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001049")]
				[Address(RVA = "0x8419C0", Offset = "0x8419C0", VA = "0x8419C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001044")]
			[Address(RVA = "0x8414CC", Offset = "0x8414CC", VA = "0x8414CC")]
			[DebuggerHidden]
			public <CameraShakeSequence>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001045")]
			[Address(RVA = "0x841500", Offset = "0x841500", VA = "0x841500", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001046")]
			[Address(RVA = "0x841504", Offset = "0x841504", VA = "0x841504", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001048")]
			[Address(RVA = "0x841960", Offset = "0x841960", VA = "0x841960", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CameraShake Instance;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform CameraTransform;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 m_OriginalPosition;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion m_OriginalRotation;

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x8413C8", Offset = "0x8413C8", VA = "0x8413C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0x84141C", Offset = "0x84141C", VA = "0x84141C")]
		public void ShakeCamera(float ShakeTime, float ShakeAmount)
		{
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0x841448", Offset = "0x841448", VA = "0x841448")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74C734", Offset = "0x74C734")]
		private IEnumerator CameraShakeSequence(float ShakeTime, float ShakeAmount)
		{
			return null;
		}

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0x8414F8", Offset = "0x8414F8", VA = "0x8414F8")]
		public CameraShake()
		{
		}
	}
	[Token(Token = "0x20001D3")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7409C8", Offset = "0x7409C8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7409C8", Offset = "0x7409C8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7409C8", Offset = "0x7409C8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7409C8", Offset = "0x7409C8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7409C8", Offset = "0x7409C8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7409C8", Offset = "0x7409C8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7409C8", Offset = "0x7409C8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7409C8", Offset = "0x7409C8")]
	[SelectionBase]
	public class EmeraldAISystem : MonoBehaviour
	{
		[Token(Token = "0x20002FB")]
		public enum SwitchWeaponTypes
		{
			[Token(Token = "0x400161D")]
			Distance,
			[Token(Token = "0x400161E")]
			Timed
		}

		[Token(Token = "0x20002FC")]
		public enum MeleeAttackPickTypeEnum
		{
			[Token(Token = "0x4001620")]
			Odds,
			[Token(Token = "0x4001621")]
			Order,
			[Token(Token = "0x4001622")]
			Random
		}

		[Token(Token = "0x20002FD")]
		public enum MeleeRunAttackPickTypeEnum
		{
			[Token(Token = "0x4001624")]
			Odds,
			[Token(Token = "0x4001625")]
			Order,
			[Token(Token = "0x4001626")]
			Random
		}

		[Serializable]
		[Token(Token = "0x20002FE")]
		public class MeleeAttackClass
		{
			[Token(Token = "0x4001627")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int AttackAnimaition;

			[Token(Token = "0x4001628")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int MinDamage;

			[Token(Token = "0x4001629")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int MaxDamage;

			[Token(Token = "0x400162A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int AttackOdds;

			[Token(Token = "0x400162B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject AttackImpactEffect;

			[Token(Token = "0x600104A")]
			[Address(RVA = "0x8F8D04", Offset = "0x8F8D04", VA = "0x8F8D04")]
			public MeleeAttackClass()
			{
			}
		}

		[Token(Token = "0x20002FF")]
		public enum OffensiveAbilityPickTypeEnum
		{
			[Token(Token = "0x400162D")]
			Odds,
			[Token(Token = "0x400162E")]
			Order,
			[Token(Token = "0x400162F")]
			Random
		}

		[Serializable]
		[Token(Token = "0x2000300")]
		public class OffensiveAbilitiesClass
		{
			[Token(Token = "0x4001630")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EmeraldAIAbility OffensiveAbility;

			[Token(Token = "0x4001631")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int AbilityAnimaition;

			[Token(Token = "0x4001632")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int AbilityOdds;

			[Token(Token = "0x600104B")]
			[Address(RVA = "0x8F8D1C", Offset = "0x8F8D1C", VA = "0x8F8D1C")]
			public OffensiveAbilitiesClass()
			{
			}
		}

		[Token(Token = "0x2000301")]
		public enum SupportAbilityPickTypeEnum
		{
			[Token(Token = "0x4001634")]
			Odds,
			[Token(Token = "0x4001635")]
			Order,
			[Token(Token = "0x4001636")]
			Random
		}

		[Serializable]
		[Token(Token = "0x2000302")]
		public class SupportAbilitiesClass
		{
			[Token(Token = "0x4001637")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EmeraldAIAbility SupportAbility;

			[Token(Token = "0x4001638")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int AbilityAnimaition;

			[Token(Token = "0x4001639")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int AbilityOdds;

			[Token(Token = "0x600104C")]
			[Address(RVA = "0x8F8D3C", Offset = "0x8F8D3C", VA = "0x8F8D3C")]
			public SupportAbilitiesClass()
			{
			}
		}

		[Token(Token = "0x2000303")]
		public enum SummoningAbilityPickTypeEnum
		{
			[Token(Token = "0x400163B")]
			Odds,
			[Token(Token = "0x400163C")]
			Order,
			[Token(Token = "0x400163D")]
			Random
		}

		[Serializable]
		[Token(Token = "0x2000304")]
		public class SummoningAbilitiesClass
		{
			[Token(Token = "0x400163E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EmeraldAIAbility SummoningAbility;

			[Token(Token = "0x400163F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int AbilityAnimaition;

			[Token(Token = "0x4001640")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int AbilityOdds;

			[Token(Token = "0x600104D")]
			[Address(RVA = "0x8F8D2C", Offset = "0x8F8D2C", VA = "0x8F8D2C")]
			public SummoningAbilitiesClass()
			{
			}
		}

		[Token(Token = "0x2000305")]
		public enum AggroAction
		{
			[Token(Token = "0x4001642")]
			LastAttacker,
			[Token(Token = "0x4001643")]
			RandomAttacker,
			[Token(Token = "0x4001644")]
			ClosestAttacker
		}

		[Token(Token = "0x2000306")]
		public enum RelationType
		{
			[Token(Token = "0x4001646")]
			Enemy,
			[Token(Token = "0x4001647")]
			Neutral,
			[Token(Token = "0x4001648")]
			Friendly
		}

		[Serializable]
		[Token(Token = "0x2000307")]
		public class FactionsList
		{
			[Token(Token = "0x2000354")]
			public enum RelationType
			{
				[Token(Token = "0x400175E")]
				Enemy,
				[Token(Token = "0x400175F")]
				Neutral,
				[Token(Token = "0x4001760")]
				Friendly
			}

			[Token(Token = "0x4001649")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int FactionIndex;

			[Token(Token = "0x400164A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public RelationType RelationTypeRef;

			[Token(Token = "0x600104E")]
			[Address(RVA = "0x8F8CAC", Offset = "0x8F8CAC", VA = "0x8F8CAC")]
			public FactionsList(int m_FactionIndex, int m_RelationTypeRef)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000308")]
		public class PlayerFactionClass
		{
			[Token(Token = "0x2000355")]
			public enum RelationType
			{
				[Token(Token = "0x4001762")]
				Enemy,
				[Token(Token = "0x4001763")]
				Neutral,
				[Token(Token = "0x4001764")]
				Friendly
			}

			[Token(Token = "0x400164B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string PlayerTag;

			[Token(Token = "0x400164C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RelationType RelationTypeRef;

			[Token(Token = "0x600104F")]
			[Address(RVA = "0x8F7CC4", Offset = "0x8F7CC4", VA = "0x8F7CC4")]
			public PlayerFactionClass(string m_PlayerTag, int m_RelationTypeRef)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000309")]
		public class InteractSoundClass
		{
			[Token(Token = "0x400164D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int SoundEffectID;

			[Token(Token = "0x400164E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AudioClip SoundEffectClip;

			[Token(Token = "0x6001050")]
			[Address(RVA = "0x8F8CE4", Offset = "0x8F8CE4", VA = "0x8F8CE4")]
			public InteractSoundClass()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200030A")]
		public class ItemClass
		{
			[Token(Token = "0x400164F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int ItemID;

			[Token(Token = "0x4001650")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject ItemObject;

			[Token(Token = "0x6001051")]
			[Address(RVA = "0x8F8CF4", Offset = "0x8F8CF4", VA = "0x8F8CF4")]
			public ItemClass()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200030B")]
		public class EmoteAnimationClass
		{
			[Token(Token = "0x4001651")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int AnimationID;

			[Token(Token = "0x4001652")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AnimationClip EmoteAnimationClip;

			[Token(Token = "0x6001052")]
			[Address(RVA = "0x8F8C68", Offset = "0x8F8C68", VA = "0x8F8C68")]
			public EmoteAnimationClass(int NewAnimationID, AnimationClip NewEmoteAnimationClip)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200030C")]
		public class AnimationClass
		{
			[Token(Token = "0x4001653")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float AnimationSpeed;

			[Token(Token = "0x4001654")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AnimationClip AnimationClip;

			[Token(Token = "0x6001053")]
			[Address(RVA = "0x8F8C24", Offset = "0x8F8C24", VA = "0x8F8C24")]
			public AnimationClass(float NewAnimationSpeed, AnimationClip NewAnimationClip)
			{
			}
		}

		[Token(Token = "0x200030D")]
		public enum DeathType
		{
			[Token(Token = "0x4001656")]
			Animation,
			[Token(Token = "0x4001657")]
			Ragdoll
		}

		[Token(Token = "0x200030E")]
		public enum CurrentBehavior
		{
			[Token(Token = "0x4001659")]
			Passive,
			[Token(Token = "0x400165A")]
			Cautious,
			[Token(Token = "0x400165B")]
			Companion,
			[Token(Token = "0x400165C")]
			Aggressive,
			[Token(Token = "0x400165D")]
			Pet
		}

		[Token(Token = "0x200030F")]
		public enum DetectionType
		{
			[Token(Token = "0x400165F")]
			Trigger,
			[Token(Token = "0x4001660")]
			LineOfSight
		}

		[Token(Token = "0x2000310")]
		public enum MaxChaseDistanceType
		{
			[Token(Token = "0x4001662")]
			TargetDistance,
			[Token(Token = "0x4001663")]
			StartingDistance
		}

		[Token(Token = "0x2000311")]
		public enum ConfidenceType
		{
			[Token(Token = "0x4001665")]
			Coward,
			[Token(Token = "0x4001666")]
			Brave,
			[Token(Token = "0x4001667")]
			Foolhardy
		}

		[Token(Token = "0x2000312")]
		public enum OptimizedState
		{
			[Token(Token = "0x4001669")]
			Active,
			[Token(Token = "0x400166A")]
			Inactive
		}

		[Token(Token = "0x2000313")]
		public enum CurrentDetection
		{
			[Token(Token = "0x400166C")]
			Alert,
			[Token(Token = "0x400166D")]
			Unaware
		}

		[Token(Token = "0x2000314")]
		public enum TargetType
		{
			[Token(Token = "0x400166F")]
			Player,
			[Token(Token = "0x4001670")]
			AI,
			[Token(Token = "0x4001671")]
			NonAITarget
		}

		[Token(Token = "0x2000315")]
		public enum CombatState
		{
			[Token(Token = "0x4001673")]
			NotActive,
			[Token(Token = "0x4001674")]
			Active
		}

		[Token(Token = "0x2000316")]
		public enum CombatType
		{
			[Token(Token = "0x4001676")]
			Offensive,
			[Token(Token = "0x4001677")]
			Defensive
		}

		[Token(Token = "0x2000317")]
		public enum RefillHealth
		{
			[Token(Token = "0x4001679")]
			Disable,
			[Token(Token = "0x400167A")]
			Instantly,
			[Token(Token = "0x400167B")]
			OverTime
		}

		[Token(Token = "0x2000318")]
		public enum WanderType
		{
			[Token(Token = "0x400167D")]
			Dynamic,
			[Token(Token = "0x400167E")]
			Waypoints,
			[Token(Token = "0x400167F")]
			Stationary,
			[Token(Token = "0x4001680")]
			Destination
		}

		[Token(Token = "0x2000319")]
		public enum WaypointType
		{
			[Token(Token = "0x4001682")]
			Loop,
			[Token(Token = "0x4001683")]
			Reverse,
			[Token(Token = "0x4001684")]
			Random
		}

		[Token(Token = "0x200031A")]
		public enum AlignmentQuality
		{
			[Token(Token = "0x4001686")]
			Low,
			[Token(Token = "0x4001687")]
			Medium,
			[Token(Token = "0x4001688")]
			High
		}

		[Token(Token = "0x200031B")]
		public enum ObstructionDetectionQuality
		{
			[Token(Token = "0x400168A")]
			Low,
			[Token(Token = "0x400168B")]
			Medium,
			[Token(Token = "0x400168C")]
			High
		}

		[Token(Token = "0x200031C")]
		public enum ActionAnimation
		{
			[Token(Token = "0x400168E")]
			Eat,
			[Token(Token = "0x400168F")]
			Sleep,
			[Token(Token = "0x4001690")]
			Talk,
			[Token(Token = "0x4001691")]
			Work,
			[Token(Token = "0x4001692")]
			Interact
		}

		[Token(Token = "0x200031D")]
		public enum PickTargetMethod
		{
			[Token(Token = "0x4001694")]
			Closest,
			[Token(Token = "0x4001695")]
			FirstDetected,
			[Token(Token = "0x4001696")]
			Random
		}

		[Token(Token = "0x200031E")]
		public enum WeaponType
		{
			[Token(Token = "0x4001698")]
			Melee,
			[Token(Token = "0x4001699")]
			Ranged,
			[Token(Token = "0x400169A")]
			Both
		}

		[Token(Token = "0x200031F")]
		public enum StartingWeaponType
		{
			[Token(Token = "0x400169C")]
			Melee,
			[Token(Token = "0x400169D")]
			Ranged
		}

		[Token(Token = "0x2000320")]
		public enum AvoidanceQuality
		{
			[Token(Token = "0x400169F")]
			None,
			[Token(Token = "0x40016A0")]
			Low,
			[Token(Token = "0x40016A1")]
			Medium,
			[Token(Token = "0x40016A2")]
			Good,
			[Token(Token = "0x40016A3")]
			High
		}

		[Token(Token = "0x2000321")]
		public enum TargetObstructedAction
		{
			[Token(Token = "0x40016A5")]
			StayStationary,
			[Token(Token = "0x40016A6")]
			MoveCloserImmediately,
			[Token(Token = "0x40016A7")]
			MoveCloserAfterSetSeconds
		}

		[Token(Token = "0x2000322")]
		public enum AnimatorTypeState
		{
			[Token(Token = "0x40016A9")]
			RootMotion,
			[Token(Token = "0x40016AA")]
			NavMeshDriven
		}

		[Token(Token = "0x2000323")]
		public enum MovementState
		{
			[Token(Token = "0x40016AC")]
			Walk,
			[Token(Token = "0x40016AD")]
			Run
		}

		[Token(Token = "0x2000324")]
		public enum BlockingState
		{
			[Token(Token = "0x40016AF")]
			Blocking,
			[Token(Token = "0x40016B0")]
			NotBlocking
		}

		[Token(Token = "0x2000325")]
		public enum BackupType
		{
			[Token(Token = "0x40016B2")]
			Off,
			[Token(Token = "0x40016B3")]
			Instant,
			[Token(Token = "0x40016B4")]
			Odds
		}

		[Token(Token = "0x2000326")]
		public enum AnimatorCullingModes
		{
			[Token(Token = "0x40016B6")]
			AlwaysAnimate,
			[Token(Token = "0x40016B7")]
			CullUpdateTransforms
		}

		[Token(Token = "0x2000327")]
		public enum CurrentMeleeAttackTypes
		{
			[Token(Token = "0x40016B9")]
			StationaryAttack,
			[Token(Token = "0x40016BA")]
			RunAttack
		}

		[Token(Token = "0x2000328")]
		public enum TotalLODsEnum
		{
			[Token(Token = "0x40016BC")]
			Two,
			[Token(Token = "0x40016BD")]
			Three,
			[Token(Token = "0x40016BE")]
			Four
		}

		[Token(Token = "0x2000329")]
		public enum IKTypes
		{
			[Token(Token = "0x40016C0")]
			UnityIK,
			[Token(Token = "0x40016C1")]
			EmeraldIK
		}

		[Token(Token = "0x200032A")]
		public enum YesOrNo
		{
			[Token(Token = "0x40016C3")]
			No,
			[Token(Token = "0x40016C4")]
			Yes
		}

		[Token(Token = "0x200032B")]
		public enum BloodEffectPositionType
		{
			[Token(Token = "0x40016C6")]
			BaseTransform,
			[Token(Token = "0x40016C7")]
			HitTransform
		}

		[Token(Token = "0x200032C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7413D8", Offset = "0x7413D8")]
		private sealed class <SwitchCurrentWeaponType>d__817 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EmeraldAISystem <>4__this;

			[Token(Token = "0x40016CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string WeaponTypeName;

			[Token(Token = "0x1700021F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001057")]
				[Address(RVA = "0x8F8BB4", Offset = "0x8F8BB4", VA = "0x8F8BB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000220")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001059")]
				[Address(RVA = "0x8F8C1C", Offset = "0x8F8C1C", VA = "0x8F8C1C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001054")]
			[Address(RVA = "0x8F20C4", Offset = "0x8F20C4", VA = "0x8F20C4")]
			[DebuggerHidden]
			public <SwitchCurrentWeaponType>d__817(int <>1__state)
			{
			}

			[Token(Token = "0x6001055")]
			[Address(RVA = "0x8F85B0", Offset = "0x8F85B0", VA = "0x8F85B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001056")]
			[Address(RVA = "0x8F85B4", Offset = "0x8F85B4", VA = "0x8F85B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001058")]
			[Address(RVA = "0x8F8BBC", Offset = "0x8F8BBC", VA = "0x8F8BBC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200032D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7413E8", Offset = "0x7413E8")]
		private sealed class <InitializeSummonedAI>d__830 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EmeraldAISystem AIObject;

			[Token(Token = "0x40016CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public EmeraldAISystem <>4__this;

			[Token(Token = "0x17000221")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600105D")]
				[Address(RVA = "0x8F8540", Offset = "0x8F8540", VA = "0x8F8540", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000222")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600105F")]
				[Address(RVA = "0x8F85A8", Offset = "0x8F85A8", VA = "0x8F85A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600105A")]
			[Address(RVA = "0x8F4A6C", Offset = "0x8F4A6C", VA = "0x8F4A6C")]
			[DebuggerHidden]
			public <InitializeSummonedAI>d__830(int <>1__state)
			{
			}

			[Token(Token = "0x600105B")]
			[Address(RVA = "0x8F7DDC", Offset = "0x8F7DDC", VA = "0x8F7DDC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600105C")]
			[Address(RVA = "0x8F7DE0", Offset = "0x8F7DE0", VA = "0x8F7DE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600105E")]
			[Address(RVA = "0x8F8548", Offset = "0x8F8548", VA = "0x8F8548", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float ForceWalkDistance;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool LockTurning;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float MovementTurningSensitivity;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool NotifiedOfNewVersion;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float TimeSinceStart;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool ReachedDestination;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float DelayTimer;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Coroutine SwitchWeaponCoroutine;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SwitchWeaponTypes SwitchWeaponType;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int SwitchWeaponTimeMin;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int SwitchWeaponTimeMax;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float SwitchWeaponTime;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float SwitchWeaponTimer;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public EmeraldAIHandIK EmeraldHandIKComp;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject HeldMeleeWeaponObject;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject HeldRangedWeaponObject;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject HolsteredMeleeWeaponObject;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject HolsteredRangedWeaponObject;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool TurnDirectionMet;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float TurnSpeedTimer;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public EmeraldAIPlayerDamage PlayerDamageComponent;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<Transform> IgnoredTargetsList;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public EmeraldAINonAIDamage NonAIDamageComponent;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Vector3 LBDImpactPosition;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public LocationBasedDamage LocationBasedDamageComp;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public TargetPositionModifier CurrentTargetPositionModifierComp;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float CurrentPositionModifier;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public int MeleeAttackIndex;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public MeleeAttackPickTypeEnum MeleeAttackPickType;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public List<MeleeAttackClass> MeleeAttacks;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public int MeleeAttacksListIndex;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public int MeleeRunAttackIndex;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public MeleeRunAttackPickTypeEnum MeleeRunAttackPickType;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public List<MeleeAttackClass> MeleeRunAttacks;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public int MeleeRunAttacksListIndex;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public int OffensiveAbilityIndex;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public OffensiveAbilityPickTypeEnum OffensiveAbilityPickType;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public List<OffensiveAbilitiesClass> OffensiveAbilities;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public int SupportAbilityIndex;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public SupportAbilityPickTypeEnum SupportAbilityPickType;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public List<SupportAbilitiesClass> SupportAbilities;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public int SummoningAbilityIndex;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public SummoningAbilityPickTypeEnum SummoningAbilityPickType;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public List<SummoningAbilitiesClass> SummoningAbilities;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public AnimatorStateInfo CurrentStateInfo;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private float AggroDelay;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public bool CriticalHit;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
		public bool TargetInAngleLimit;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		public int CurrentAnimationIndex;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public int CurrentRunAttackAnimationIndex;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public List<string> ActiveEffects;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public EmeraldAIProjectile CurrentlyCreatedAbility;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public int MaxAllowedSummonedAI;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		public int TotalSummonedAI;

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public EmeraldAISystem CurrentSummoner;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public Coroutine HealingOverTimeCoroutine;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public int HealthPercentageToHeal;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		public bool HealingCooldownActive;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public int HealingCooldownSeconds;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private float HealingCooldownTimer;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public bool m_AbilityPicked;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		public Vector3 m_InitialTargetPosition;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public bool TargetDetectionActive;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A1")]
		public bool IdleActivated;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		public float DetectionFrequency;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public int PlayerDetectionEventCooldown;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		public float RangedAttackOffset;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public Transform HitPointTransform;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public int SwitchWeaponTypesCooldown;

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		public int SwitchWeaponTypesDistance;

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public string CameraTag;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public EmeraldAIHealthBar m_HealthBarComponent;

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public float AttackHeight;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public EmeraldAIAbility m_EmeraldAIAbility;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public bool RotateTowardsTarget;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E1")]
		public bool m_AttackAnimationClipMissing;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		public float ProjectileCollisionPointY;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public Vector3 m_ProjectileCollisionPoint;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		public float ObstructionTimer;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public int ObstructionSeconds;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		private float m_ObstructedTimer;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public float IdleVolume;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		public float WalkFootstepVolume;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public float RunFootstepVolume;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		public float BlockVolume;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public float ImpactVolume;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		public float CriticalHitVolume;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public float InjuredVolume;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		public float AttackVolume;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public float WarningVolume;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		public float DeathVolume;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public float EquipVolume;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		public float UnequipVolume;

		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public float RangedEquipVolume;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		public float RangedUnequipVolume;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public float HeadLookWeightCombat;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		public float BodyLookWeightCombat;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public float HeadLookWeightNonCombat;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		public float BodyLookWeightNonCombat;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public int MaxLookAtDistance;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		public float NonCombatLookSpeedMultiplier;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public float CombatLookSpeedMultiplier;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		public int NonCombatLookAtLimit;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public int CombatLookAtLimit;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		public float lookWeight;

		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		public int LookAtLimit;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		public AnimatorStateInfo m_LayerCurrentState;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public Transform HeadTransform;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		public Vector3 StartingLookAtPosition;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		public List<HumanBodyBones> BoneObjects;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		public int CurrentAggroHits;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		public int TotalAggroHits;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		public AggroAction AggroActionRef;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
		public bool ReturnToStationaryPosition;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		public EmeraldAIDetection EmeraldDetectionComponent;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		public EmeraldAIInitializer EmeraldInitializerComponent;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		public EmeraldAIEventsManager EmeraldEventsManagerComponent;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		public EmeraldAIBehaviors EmeraldBehaviorsComponent;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		public EmeraldAILookAtController EmeraldLookAtComponent;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private float BlockTimer;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
		private float AdjustedBlockAngle;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		public int MitigationAmount;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
		public int MaxBlockAngle;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		public int MaxDamageAngle;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
		public int MaxFiringAngle;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		public Vector3 SurfaceNormal;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
		private Quaternion NormalRotation;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
		public float MaxNormalAngle;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		public int MaxNormalAngleEditor;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
		public int BlockOdds;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		public int GeneratedBlockOdds;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
		public bool m_AnimationsChanged;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		public int m_LastAnimatorType;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		public int BackupOdds;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		public int GeneratedBackupOdds;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x334")]
		public int BackupDistance;

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		public Vector3 BackupDestination;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
		public bool IsEmoting;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x345")]
		public bool IsIdling;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x346")]
		public bool IsAttacking;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x347")]
		public bool IsGettingHit;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		public bool IsEquipping;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x349")]
		public bool IsBlocking;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34A")]
		public bool IsBackingUp;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34B")]
		public bool IsTurning;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34C")]
		public bool IsTurningLeft;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34D")]
		public bool IsTurningRight;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34E")]
		public bool IsSwitchingWeapons;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34F")]
		public bool IsMoving;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		public bool IsDead;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x354")]
		public float BackingUpTimer;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		public float BackingUpSeconds;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35C")]
		public int BackingUpSecondsMin;

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		public int BackingUpSecondsMax;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x364")]
		public float RunAttackTimer;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		public int RunAttackSpeed;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36C")]
		public int MinMeleeAttackSpeed;

		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		public int MaxMeleeAttackSpeed;

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x374")]
		public int MinRangedAttackSpeed;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		public int MaxRangedAttackSpeed;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37C")]
		public float AttackSpeed;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		public int MinimumRunAttackSpeed;

		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x384")]
		public int MaximumRunAttackSpeed;

		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		public float AttackTimer;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38C")]
		public bool HasTarget;

		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38D")]
		public bool SwitchWeaponTypeTriggered;

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		public int TotalIdleAnimations;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x394")]
		public int TotalHitAnimations;

		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
		public int TotalCombatHitAnimations;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39C")]
		public int TotalRangedCombatHitAnimations;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		public int TotalEmoteAnimations;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A4")]
		public int TotalAttackAnimations;

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
		public int TotalRangedAttackAnimations;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3AC")]
		public int TotalRunAttackAnimations;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		public int TotalRangedRunAttackAnimations;

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B4")]
		public int TotalDeathAnimations;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
		public int TotalRangedDeathAnimations;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3BC")]
		public bool m_IdleAnimaionIndexOverride;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3BD")]
		public bool MirrorWalkLeft;

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3BE")]
		public bool MirrorWalkRight;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3BF")]
		public bool MirrorRunLeft;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		public bool MirrorRunRight;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C1")]
		public bool MirrorCombatWalkLeft;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C2")]
		public bool MirrorCombatWalkRight;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C3")]
		public bool MirrorCombatRunLeft;

		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C4")]
		public bool MirrorCombatRunRight;

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C5")]
		public bool MirrorCombatTurnLeft;

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C6")]
		public bool MirrorCombatTurnRight;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C7")]
		public bool MirrorRangedCombatWalkLeft;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
		public bool MirrorRangedCombatWalkRight;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C9")]
		public bool MirrorRangedCombatRunLeft;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3CA")]
		public bool MirrorRangedCombatRunRight;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3CB")]
		public bool MirrorRangedCombatTurnLeft;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3CC")]
		public bool MirrorRangedCombatTurnRight;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3CD")]
		public bool MirrorTurnLeft;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3CE")]
		public bool MirrorTurnRight;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3CF")]
		public bool ReverseWalkAnimation;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
		public bool ReverseRangedWalkAnimation;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D4")]
		public int AngleToTurn;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
		public int NonCombatAngleToTurn;

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3DC")]
		public int CombatAngleToTurn;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
		public float StationaryTurningSpeedNonCombat;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E4")]
		public float MovingTurningSpeedNonCombat;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
		public int StationaryTurningSpeedCombat;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3EC")]
		public int MovingTurningSpeedCombat;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
		public int BackupTurningSpeed;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F4")]
		public int MaxSlopeLimit;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
		public float Acceleration;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3FC")]
		public float Deceleration;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
		public float TurnAngle;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x404")]
		public int AlignmentSpeed;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
		public int NonCombatAlignmentSpeed;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40C")]
		public int CombatAlignmentSpeed;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
		public float DirectionDampTime;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
		public NavMeshAgent m_NavMeshAgent;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
		public AudioSource m_AudioSource;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
		public AudioSource m_SecondaryAudioSource;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
		public AudioSource m_EventAudioSource;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
		public float WaypointTimer;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43C")]
		private float IdleAnimationTimer;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
		public int IdleAnimationSeconds;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x444")]
		public Vector3 NewDestination;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
		private float DistanceFromDestination;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x454")]
		private float Velocity;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
		private float AdjustedSpeed;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45C")]
		private Quaternion TargetQ;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46C")]
		private Quaternion GroundQ;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47C")]
		private float PreviousAngle;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x480")]
		private bool m_WeaponTypeSwitchDelay;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x484")]
		private float AddForceTimer;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
		private float DeathTimer;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
		public Transform ForceTransform;

		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x498")]
		public int ReceivedRagdollForceAmount;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49C")]
		public int SentRagdollForceAmount;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A0")]
		public Transform HitTransform;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A8")]
		public Transform RagdollTransform;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B0")]
		public Vector3 TargetDestination;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4BC")]
		private Quaternion AligmentAngle;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4CC")]
		public float DestinationAdjustedAngle;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D0")]
		private Vector3 DestinationDirection;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E0")]
		public GameObject WeaponTrail;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E8")]
		public UnityEvent DeathEvent;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F0")]
		public UnityEvent DamageEvent;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F8")]
		public UnityEvent OnDoDamageEvent;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x500")]
		public UnityEvent ReachedDestinationEvent;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x508")]
		public UnityEvent OnStartEvent;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x510")]
		public UnityEvent OnEnabledEvent;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x518")]
		public UnityEvent OnPlayerDetectionEvent;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x520")]
		public UnityEvent OnDetectTargetEvent;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x528")]
		public UnityEvent OnAttackEvent;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x530")]
		public UnityEvent OnAttackEndEvent;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x538")]
		public UnityEvent OnFleeEvent;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x540")]
		public UnityEvent OnStartCombatEvent;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x548")]
		public UnityEvent OnKillTargetEvent;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x550")]
		public UnityEvent OnHealEvent;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x558")]
		public UnityEvent OnCriticalHitEvent;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x560")]
		public int IdleSoundsSeconds;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x564")]
		public int IdleSoundsSecondsMin;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x568")]
		public int IdleSoundsSecondsMax;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56C")]
		public float IdleSoundsTimer;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x570")]
		public int CurrentAttacks;

		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x574")]
		public int ExpandedChaseDistance;

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x578")]
		public int StartingChaseDistance;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x57C")]
		public int ExpandedDetectionRadius;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x580")]
		public int StartingDetectionRadius;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x584")]
		public bool IsRunAttack;

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x588")]
		public int RandomDirection;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58C")]
		public bool TargetInView;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x590")]
		[SerializeField]
		public int CurrentFaction;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		public static List<string> StringFactionList;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x594")]
		public RelationType RelationTypeRef;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x598")]
		public List<int> FactionRelations;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A0")]
		[SerializeField]
		public List<FactionsList> FactionRelationsList;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A8")]
		[SerializeField]
		public List<PlayerFactionClass> PlayerFaction;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static GameObject ObjectPool;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static GameObject CombatTextSystemObject;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B0")]
		public float StartingRunSpeed;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B4")]
		public float StartingRunAnimationSpeed;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B8")]
		public float StationaryIdleTimer;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5BC")]
		public int StationaryIdleSeconds;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C0")]
		public int StationaryIdleSecondsMin;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C4")]
		public int StationaryIdleSecondsMax;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C8")]
		public float BloodEffectTimeoutSeconds;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D0")]
		public List<GameObject> BloodEffectsList;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D8")]
		public GameObject CurrentProjectile;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E0")]
		public Vector3 ProjectileDirection;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F0")]
		public List<GameObject> potentialTargets;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F8")]
		public List<Collider> LineOfSightTargets;

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x600")]
		public List<InteractSoundClass> InteractSoundList;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x608")]
		public List<ItemClass> ItemList;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x610")]
		public List<EmoteAnimationClass> EmoteAnimationList;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x618")]
		public List<AnimationClass> IdleAnimationList;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x620")]
		public List<AnimationClass> AttackAnimationList;

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x628")]
		public List<AnimationClass> RunAttackAnimationList;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x630")]
		public List<AnimationClass> DeathAnimationList;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x638")]
		public List<AnimationClass> CombatHitAnimationList;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x640")]
		public List<AnimationClass> HitAnimationList;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x648")]
		public List<AnimationClass> RangedAttackAnimationList;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x650")]
		public List<AnimationClass> RangedCombatHitAnimationList;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x658")]
		public List<AnimationClass> RangedRunAttackAnimationList;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x660")]
		public List<AnimationClass> RangedDeathAnimationList;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x668")]
		public AnimationClip Attack1Animation;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x670")]
		public AnimationClip Attack2Animation;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x678")]
		public AnimationClip Attack3Animation;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x680")]
		public AnimationClip Attack4Animation;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x688")]
		public AnimationClip Attack5Animation;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x690")]
		public AnimationClip Attack6Animation;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x698")]
		public AnimationClip RunAttack1Animation;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A0")]
		public AnimationClip RunAttack2Animation;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A8")]
		public AnimationClip RunAttack3Animation;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B0")]
		public AnimationClip Idle1Animation;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B8")]
		public AnimationClip Idle2Animation;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C0")]
		public AnimationClip Idle3Animation;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C8")]
		public AnimationClip Idle4Animation;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D0")]
		public AnimationClip Idle5Animation;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D8")]
		public AnimationClip Idle6Animation;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E0")]
		public AnimationClip IdleWarningAnimation;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E8")]
		public AnimationClip NonCombatTurnLeftAnimation;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6F0")]
		public AnimationClip NonCombatTurnRightAnimation;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6F8")]
		public AnimationClip CombatTurnLeftAnimation;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x700")]
		public AnimationClip CombatTurnRightAnimation;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x708")]
		public AnimationClip NonCombatIdleAnimation;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x710")]
		public AnimationClip WalkLeftAnimation;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x718")]
		public AnimationClip WalkStraightAnimation;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x720")]
		public AnimationClip WalkRightAnimation;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x728")]
		public AnimationClip RunLeftAnimation;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x730")]
		public AnimationClip RunStraightAnimation;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x738")]
		public AnimationClip RunRightAnimation;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x740")]
		public AnimationClip Emote1Animation;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x748")]
		public AnimationClip Emote2Animation;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x750")]
		public AnimationClip Emote3Animation;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x758")]
		public AnimationClip Emote4Animation;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x760")]
		public AnimationClip Emote5Animation;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x768")]
		public AnimationClip Emote6Animation;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x770")]
		public AnimationClip Emote7Animation;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x778")]
		public AnimationClip Emote8Animation;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x780")]
		public AnimationClip Emote9Animation;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x788")]
		public AnimationClip Emote10Animation;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x790")]
		public AnimationClip CombatIdleAnimation;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x798")]
		public AnimationClip CombatWalkLeftAnimation;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A0")]
		public AnimationClip CombatWalkStraightAnimation;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A8")]
		public AnimationClip CombatWalkBackAnimation;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7B0")]
		public AnimationClip CombatWalkRightAnimation;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7B8")]
		public AnimationClip CombatRunLeftAnimation;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C0")]
		public AnimationClip CombatRunStraightAnimation;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C8")]
		public AnimationClip CombatRunRightAnimation;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D0")]
		public AnimationClip Hit1Animation;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D8")]
		public AnimationClip Hit2Animation;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7E0")]
		public AnimationClip Hit3Animation;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7E8")]
		public AnimationClip Hit4Animation;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7F0")]
		public AnimationClip Hit5Animation;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7F8")]
		public AnimationClip Hit6Animation;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x800")]
		public AnimationClip CombatHit1Animation;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x808")]
		public AnimationClip CombatHit2Animation;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x810")]
		public AnimationClip CombatHit3Animation;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x818")]
		public AnimationClip CombatHit4Animation;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x820")]
		public AnimationClip CombatHit5Animation;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x828")]
		public AnimationClip CombatHit6Animation;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x830")]
		public AnimationClip BlockIdleAnimation;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x838")]
		public AnimationClip BlockHitAnimation;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x840")]
		public AnimationClip PutAwayWeaponAnimation;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x848")]
		public AnimationClip PullOutWeaponAnimation;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x850")]
		public AnimationClip Death1Animation;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x858")]
		public AnimationClip Death2Animation;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x860")]
		public AnimationClip Death3Animation;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x868")]
		public AnimationClip Death4Animation;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x870")]
		public AnimationClip Death5Animation;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x878")]
		public AnimationClip Death6Animation;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x880")]
		public AnimationClip RangedCombatIdleAnimation;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x888")]
		public AnimationClip RangedCombatWalkLeftAnimation;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x890")]
		public AnimationClip RangedCombatWalkStraightAnimation;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x898")]
		public AnimationClip RangedCombatWalkBackAnimation;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A0")]
		public AnimationClip RangedCombatWalkRightAnimation;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A8")]
		public AnimationClip RangedCombatRunLeftAnimation;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8B0")]
		public AnimationClip RangedCombatRunStraightAnimation;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8B8")]
		public AnimationClip RangedCombatRunRightAnimation;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C0")]
		public AnimationClip RangedIdleWarningAnimation;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C8")]
		public AnimationClip RangedPutAwayWeaponAnimation;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D0")]
		public AnimationClip RangedPullOutWeaponAnimation;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D8")]
		public AnimationClip RangedAttack1Animation;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8E0")]
		public AnimationClip RangedAttack2Animation;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8E8")]
		public AnimationClip RangedAttack3Animation;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8F0")]
		public AnimationClip RangedAttack4Animation;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8F8")]
		public AnimationClip RangedAttack5Animation;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x900")]
		public AnimationClip RangedAttack6Animation;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x908")]
		public AnimationClip RangedRunAttack1Animation;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x910")]
		public AnimationClip RangedRunAttack2Animation;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x918")]
		public AnimationClip RangedRunAttack3Animation;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x920")]
		public AnimationClip RangedCombatHit1Animation;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x928")]
		public AnimationClip RangedCombatHit2Animation;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x930")]
		public AnimationClip RangedCombatHit3Animation;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x938")]
		public AnimationClip RangedCombatHit4Animation;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x940")]
		public AnimationClip RangedCombatHit5Animation;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x948")]
		public AnimationClip RangedCombatHit6Animation;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x950")]
		public AnimationClip RangedCombatTurnLeftAnimation;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x958")]
		public AnimationClip RangedCombatTurnRightAnimation;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x960")]
		public AnimationClip RangedDeath1Animation;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x968")]
		public AnimationClip RangedDeath2Animation;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x970")]
		public AnimationClip RangedDeath3Animation;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x978")]
		public AnimationClip RangedDeath4Animation;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x980")]
		public AnimationClip RangedDeath5Animation;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x988")]
		public AnimationClip RangedDeath6Animation;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x990")]
		[SerializeField]
		public bool AnimatorControllerGenerated;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x991")]
		public bool AnimationListsChanged;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x998")]
		public string FilePath;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A0")]
		public bool MissingRuntimeController;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A8")]
		public string EmeraldTag;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9B0")]
		public string UITag;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9B8")]
		public string RagdollTag;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C0")]
		public bool AnimationsUpdated;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C4")]
		public float RayCastUpdateSeconds;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C8")]
		private float RayCastUpdateTimer;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9CC")]
		public float ObstructionDetectionUpdateSeconds;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9D0")]
		public float ObstructionDetectionUpdateTimer;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9D4")]
		public int CurrentHealth;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9D8")]
		public int StartingHealth;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9DC")]
		public int DetectionRadius;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9E0")]
		public int CurrentDamageAmount;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9E4")]
		public int DamageAmountRun;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9E8")]
		public int WanderRadius;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9EC")]
		public int TabNumber;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9F0")]
		public int TemperamentTabNumber;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9F4")]
		public int DetectionTagsTabNumber;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9F8")]
		public int AnimationTabNumber;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9FC")]
		public int SoundTabNumber;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA00")]
		public int MovementTabNumber;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA04")]
		public int WeaponTypeTabNumber;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA08")]
		public int WeaponTypeCombatTabNumber;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0C")]
		public int WeaponTypeControlTabNumber;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA10")]
		public int AttackAnimationNumber;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA14")]
		public int RunAttackAnimationNumber;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA18")]
		public int IdleAnimationNumber;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1C")]
		public int CombatTabNumber;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA20")]
		public int FactionsAndTagTabNumber;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA24")]
		public int EventTabNumber;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA28")]
		public int MinimumWaitTime;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2C")]
		public int MaximumWaitTime;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA30")]
		public int MinimumFollowWaitTime;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA34")]
		public int MaximumFollowWaitTime;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA38")]
		public float DeathDelay;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA3C")]
		public bool DeathDelayActive;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA40")]
		public float DeathDelayTimer;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA44")]
		public int DeathDelayMin;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA48")]
		public int DeathDelayMax;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4C")]
		public int MinimumDamageAmountRun;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA50")]
		public int MaximumDamageAmountRun;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA54")]
		public int CritChance;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA58")]
		public float CritMultiplier;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA5C")]
		public float WalkBackwardsSpeed;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA60")]
		public float WalkSpeed;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA64")]
		public float RunSpeed;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA68")]
		public int ExpandedFieldOfViewAngle;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA6C")]
		public int fieldOfViewAngle;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA70")]
		public int fieldOfViewAngleRef;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA74")]
		public int MaxChaseDistance;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA78")]
		public int AngleNeededToTurn;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA7C")]
		public int AngleNeededToTurnRunning;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA80")]
		public float TooCloseDistance;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA84")]
		public float MeleeTooCloseDistance;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA88")]
		public float RangedTooCloseDistance;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8C")]
		public float AttackDistance;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA90")]
		public float MeleeAttackDistance;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA94")]
		public float RangedAttackDistance;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA98")]
		public float RunAttackDistance;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9C")]
		public int CautiousSeconds;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA0")]
		public int DeactivateDelay;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA4")]
		private float DeactivateTimer;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA8")]
		public int SecondsToDisable;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAAC")]
		public float HealthRegRate;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAB0")]
		public int RegenerateAmount;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAB4")]
		public float RegenerateTimer;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAB8")]
		public int AILevel;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC0")]
		public string AIName;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC8")]
		public string AITitle;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD0")]
		public float StoppingDistance;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD4")]
		public float FollowingStoppingDistance;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD8")]
		public float DistanceOffset;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xADC")]
		public float DistanceFromTarget;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAE0")]
		public float AgentRadius;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAE4")]
		public float AgentBaseOffset;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAE8")]
		public float AgentAcceleration;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAEC")]
		public float MaxXAngle;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAF0")]
		public float MaxZAngle;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAF4")]
		public int HealthPercentageToFlee;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAF8")]
		public float Idle1AnimationSpeed;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAFC")]
		public float Idle2AnimationSpeed;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB00")]
		public float Idle3AnimationSpeed;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB04")]
		public float Idle4AnimationSpeed;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB08")]
		public float Idle5AnimationSpeed;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0C")]
		public float Idle6AnimationSpeed;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB10")]
		public float IdleWarningAnimationSpeed;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB14")]
		public float RangedIdleWarningAnimationSpeed;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB18")]
		public float IdleCombatAnimationSpeed;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1C")]
		public float RangedIdleCombatAnimationSpeed;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB20")]
		public float IdleNonCombatAnimationSpeed;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB24")]
		public float Attack1AnimationSpeed;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB28")]
		public float Attack2AnimationSpeed;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB2C")]
		public float Attack3AnimationSpeed;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB30")]
		public float Attack4AnimationSpeed;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB34")]
		public float Attack5AnimationSpeed;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB38")]
		public float Attack6AnimationSpeed;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB3C")]
		public float RangedAttack1AnimationSpeed;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB40")]
		public float RangedAttack2AnimationSpeed;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB44")]
		public float RangedAttack3AnimationSpeed;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB48")]
		public float RangedAttack4AnimationSpeed;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4C")]
		public float RangedAttack5AnimationSpeed;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB50")]
		public float RangedAttack6AnimationSpeed;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB54")]
		public float RunAttack1AnimationSpeed;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB58")]
		public float RunAttack2AnimationSpeed;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5C")]
		public float RunAttack3AnimationSpeed;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB60")]
		public float RangedRunAttack1AnimationSpeed;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB64")]
		public float RangedRunAttack2AnimationSpeed;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB68")]
		public float RangedRunAttack3AnimationSpeed;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB6C")]
		public float TurnLeftAnimationSpeed;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB70")]
		public float TurnRightAnimationSpeed;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB74")]
		public float CombatTurnLeftAnimationSpeed;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB78")]
		public float CombatTurnRightAnimationSpeed;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB7C")]
		public float RangedCombatTurnLeftAnimationSpeed;

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB80")]
		public float RangedCombatTurnRightAnimationSpeed;

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB84")]
		public float Death1AnimationSpeed;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB88")]
		public float Death2AnimationSpeed;

		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8C")]
		public float Death3AnimationSpeed;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB90")]
		public float Death4AnimationSpeed;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB94")]
		public float Death5AnimationSpeed;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB98")]
		public float Death6AnimationSpeed;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9C")]
		public float RangedDeath1AnimationSpeed;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBA0")]
		public float RangedDeath2AnimationSpeed;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBA4")]
		public float RangedDeath3AnimationSpeed;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBA8")]
		public float RangedDeath4AnimationSpeed;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBAC")]
		public float RangedDeath5AnimationSpeed;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBB0")]
		public float RangedDeath6AnimationSpeed;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBB4")]
		public float Emote1AnimationSpeed;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBB8")]
		public float Emote2AnimationSpeed;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBBC")]
		public float Emote3AnimationSpeed;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC0")]
		public float Emote4AnimationSpeed;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC4")]
		public float Emote5AnimationSpeed;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC8")]
		public float Emote6AnimationSpeed;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBCC")]
		public float Emote7AnimationSpeed;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBD0")]
		public float Emote8AnimationSpeed;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBD4")]
		public float Emote9AnimationSpeed;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBD8")]
		public float Emote10AnimationSpeed;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBDC")]
		public float WalkAnimationSpeed;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBE0")]
		public float RunAnimationSpeed;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBE4")]
		public float NonCombatWalkAnimationSpeed;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBE8")]
		public float NonCombatRunAnimationSpeed;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBEC")]
		public float CombatWalkAnimationSpeed;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBF0")]
		public float CombatRunAnimationSpeed;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBF4")]
		public float RangedCombatWalkAnimationSpeed;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBF8")]
		public float RangedCombatRunAnimationSpeed;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFC")]
		public float Hit1AnimationSpeed;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC00")]
		public float Hit2AnimationSpeed;

		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC04")]
		public float Hit3AnimationSpeed;

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC08")]
		public float Hit4AnimationSpeed;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0C")]
		public float Hit5AnimationSpeed;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC10")]
		public float Hit6AnimationSpeed;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC14")]
		public float CombatHit1AnimationSpeed;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC18")]
		public float CombatHit2AnimationSpeed;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1C")]
		public float CombatHit3AnimationSpeed;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC20")]
		public float CombatHit4AnimationSpeed;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC24")]
		public float CombatHit5AnimationSpeed;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC28")]
		public float CombatHit6AnimationSpeed;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC2C")]
		public float RangedCombatHit1AnimationSpeed;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC30")]
		public float RangedCombatHit2AnimationSpeed;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC34")]
		public float RangedCombatHit3AnimationSpeed;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC38")]
		public float RangedCombatHit4AnimationSpeed;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC3C")]
		public float RangedCombatHit5AnimationSpeed;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC40")]
		public float RangedCombatHit6AnimationSpeed;

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC44")]
		public int StartingBehaviorRef;

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC48")]
		public int StartingConfidenceRef;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4C")]
		public Vector3 SingleDestination;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC58")]
		public Renderer Renderer1;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC60")]
		public Renderer Renderer2;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC68")]
		public Renderer Renderer3;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC70")]
		public Renderer Renderer4;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC78")]
		public DeathType DeathTypeRef;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC7C")]
		public CurrentBehavior BehaviorRef;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC80")]
		public DetectionType DetectionTypeRef;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC84")]
		public MaxChaseDistanceType MaxChaseDistanceTypeRef;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC88")]
		public ConfidenceType ConfidenceRef;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8C")]
		public OptimizedState OptimizedStateRef;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC90")]
		public CurrentDetection CurrentDetectionRef;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC94")]
		public TargetType TargetTypeRef;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC98")]
		public CombatState CombatStateRef;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9C")]
		public CombatType CombatTypeRef;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCA0")]
		public RefillHealth RefillHealthType;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCA4")]
		public WanderType WanderTypeRef;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCA8")]
		public WaypointType WaypointTypeRef;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCAC")]
		public AlignmentQuality AlignmentQualityRef;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCB0")]
		public ObstructionDetectionQuality ObstructionDetectionQualityRef;

		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCB4")]
		public ActionAnimation ActionAnimationRef;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCB8")]
		public PickTargetMethod PickTargetMethodRef;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCBC")]
		public WeaponType WeaponTypeRef;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC0")]
		public StartingWeaponType StartingWeaponTypeRef;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC4")]
		public AvoidanceQuality AvoidanceQualityRef;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC8")]
		public TargetObstructedAction TargetObstructedActionRef;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCCC")]
		public AnimatorTypeState AnimatorType;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD0")]
		public MovementState StartingMovementState;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD4")]
		public MovementState CurrentMovementState;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD8")]
		public BlockingState CurrentBlockingState;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCDC")]
		public BackupType BackupTypeRef;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCE0")]
		public AnimatorCullingModes AnimatorCullingMode;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCE4")]
		public CurrentMeleeAttackTypes CurrentMeleeAttackType;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCE8")]
		public TotalLODsEnum TotalLODsRef;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCEC")]
		public IKTypes IKType;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCF0")]
		public YesOrNo UseRandomRotationOnStartRef;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCF4")]
		public YesOrNo DisableAIWhenNotInViewRef;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCF8")]
		public YesOrNo UseDeactivateDelayRef;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCFC")]
		public YesOrNo UseWarningAnimationRef;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD00")]
		public YesOrNo AlignAIOnStartRef;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD04")]
		public YesOrNo UseAIAvoidance;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD08")]
		public YesOrNo UseEquipAnimation;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0C")]
		public YesOrNo UseHitAnimations;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD10")]
		public YesOrNo UseDroppableWeapon;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD14")]
		public YesOrNo EnableDebugging;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD18")]
		public YesOrNo DrawRaycastsEnabled;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1C")]
		public YesOrNo DrawLookAtPointsEnabled;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD20")]
		public YesOrNo DebugLogTargetsEnabled;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD24")]
		public YesOrNo DebugLogObstructionsEnabled;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD28")]
		public YesOrNo DebugLogProjectileCollisionsEnabled;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD2C")]
		public YesOrNo UseAggro;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD30")]
		public YesOrNo EnableBothWeaponTypes;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD34")]
		public YesOrNo UseAINameUIOutlineEffect;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD38")]
		public YesOrNo UseAILevelUIOutlineEffect;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD3C")]
		public YesOrNo UseCustomFontAIName;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD40")]
		public YesOrNo UseCustomFontAILevel;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD44")]
		public YesOrNo AlignAIWithGroundRef;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD48")]
		public YesOrNo CreateHealthBarsRef;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C")]
		public YesOrNo UseNonAITagRef;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50")]
		public YesOrNo UseMagicEffectsPackRef;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD54")]
		public YesOrNo RandomizeDamageRef;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD58")]
		public YesOrNo CustomizeHealthBarRef;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5C")]
		public YesOrNo UseCustomFontRef;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD60")]
		public YesOrNo DisplayAINameRef;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD64")]
		public YesOrNo DisplayAITitleRef;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD68")]
		public YesOrNo DisplayAILevelRef;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD6C")]
		public YesOrNo HasMultipleLODsRef;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD70")]
		public YesOrNo UseHitEffect;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD74")]
		public YesOrNo UseRunAttacks;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD78")]
		public YesOrNo UseHeadLookRef;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD7C")]
		public YesOrNo UseBlockingRef;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD80")]
		public YesOrNo UseCriticalHits;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD84")]
		public YesOrNo DebugLogMissingAnimationsRef;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD88")]
		public YesOrNo SummonsMultipleAIRef;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8C")]
		public YesOrNo AttackOnArrivalRef;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD90")]
		public YesOrNo NonCombatAI;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD98")]
		public Transform RangedAttackTransform;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA0")]
		public Transform CurrentTarget;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA8")]
		public Transform CurrentFollowTarget;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDB0")]
		public string PlayerTag;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDB8")]
		public string FollowTag;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC0")]
		public string NonAITag;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC8")]
		public bool ReturningToStartInProgress;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC9")]
		public bool AIReachedDestination;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDCA")]
		public bool AIAgentActive;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDCB")]
		public bool HealthBarsFoldout;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDCC")]
		public bool CombatTextFoldout;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDCD")]
		public bool NameTextFoldout;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDCE")]
		public bool WaypointsFoldout;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDCF")]
		public bool WalkFoldout;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD0")]
		public bool RunFoldout;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD1")]
		public bool TurnFoldout;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD2")]
		public bool CombatWalkFoldout;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD3")]
		public bool CombatRunFoldout;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD4")]
		public bool CombatTurnFoldout;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD5")]
		public bool BehaviorFoldout;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD6")]
		public bool ConfidenceFoldout;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD7")]
		public bool WanderFoldout;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD8")]
		public bool CombatStyleFoldout;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD9")]
		public bool CurrentlyPlayingActionAnimation;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDDA")]
		public bool DamageSoundInhibitor;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDDB")]
		public bool DamageEffectInhibitor;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDE0")]
		public AudioClip SheatheWeapon;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDE8")]
		public AudioClip UnsheatheWeapon;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDF0")]
		public AudioClip RangedSheatheWeapon;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDF8")]
		public AudioClip RangedUnsheatheWeapon;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE00")]
		public List<AudioClip> IdleSounds;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE08")]
		public List<AudioClip> AttackSounds;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE10")]
		public List<AudioClip> InjuredSounds;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE18")]
		public List<AudioClip> WarningSounds;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE20")]
		public List<AudioClip> DeathSounds;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE28")]
		public List<AudioClip> FootStepSounds;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE30")]
		public List<AudioClip> BlockingSounds;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE38")]
		public List<AudioClip> ImpactSounds;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE40")]
		public List<AudioClip> CriticalHitSounds;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE48")]
		[SerializeField]
		public List<int> AIFactionsList;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE50")]
		public int TargetTagsIndex;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE54")]
		public Vector3 BloodPosOffset;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE60")]
		public BloodEffectPositionType BloodEffectPositionTypeRef;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE68")]
		public GameObject HealthBarCanvas;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE70")]
		public Sprite HealthBarImage;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE78")]
		public Sprite HealthBarBackgroundImage;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE80")]
		public Vector3 HealthBarPos;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8C")]
		public Vector3 CombatTextPos;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE98")]
		public Color HealthBarColor;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEA8")]
		public Color HealthBarBackgroundColor;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEB8")]
		public Color NameTextColor;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC8")]
		public Color LevelTextColor;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xED8")]
		public Vector3 HealthBarScale;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEE4")]
		public int NameTextFontSize;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEE8")]
		public GameObject WaypointParent;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEF0")]
		public string WaypointOrigin;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEF8")]
		public Vector3 AINamePos;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF04")]
		public Vector3 AILevelPos;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF10")]
		public bool FirstTimeInCombat;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF11")]
		public bool WarningAnimationTriggered;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF12")]
		public bool TargetObstructed;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF14")]
		private float CurrentHealthFloat;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF18")]
		private float CurrentVelocity;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1C")]
		public float WaitTime;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF20")]
		public int DamageReceived;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF28")]
		public GameObject DroppableMeleeWeapon;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF30")]
		public GameObject DroppableRangedWeapon;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF38")]
		public Transform LastAttacker;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF40")]
		public Transform LookAtTarget;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF48")]
		public Transform LineOfSightRef;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF50")]
		public Transform PassiveTargetRef;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF58")]
		public Transform CompanionTargetRef;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF60")]
		public NavMeshPath AIPath;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF68")]
		public Animator AIAnimator;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF70")]
		public Vector3 StartingDestination;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF7C")]
		public float CautiousTimer;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF80")]
		public BoxCollider AIBoxCollider;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF88")]
		public Renderer AIRenderer;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF90")]
		public EmeraldAISystem TargetEmerald;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF98")]
		public GameObject HealthBar;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFA0")]
		public int MaxUIScaleSize;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFA8")]
		public Text AINameUI;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFB0")]
		public Font AINameFont;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFB8")]
		public float AINameLineSpacing;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFBC")]
		public Vector2 AINameUIOutlineSize;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC4")]
		public Color AINameUIOutlineColor;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFD8")]
		public Text AILevelUI;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFE0")]
		public Font AILevelFont;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFE8")]
		public Vector2 AILevelUIOutlineSize;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFF0")]
		public Color AILevelUIOutlineColor;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1000")]
		public Canvas HealthBarCanvasRef;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1008")]
		public List<Vector3> WaypointsList;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1010")]
		public int WaypointIndex;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1014")]
		private int m_LastWaypointIndex;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1018")]
		public GameObject WaypointHolder;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1020")]
		private Vector3 TurnDirection;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x102C")]
		private Vector3 TurnDirectionOther;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1038")]
		private Quaternion TargetDirection;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1048")]
		private NavMeshHit NMH;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1070")]
		private GameObject HitObject;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1078")]
		public Collider[] CollidersInArea;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1080")]
		public int ReceivedFaction;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1084")]
		public Vector3 distanceBetween;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1090")]
		public string StartingTag;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1098")]
		public int StartingLayer;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10A0")]
		public AnimationProfile m_AnimationProfile;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10A8")]
		public EmeraldAIWaypointObject m_WaypointObject;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10B0")]
		public bool FinalImpactSound;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10B1")]
		private bool WaypointReverseActive;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10B4")]
		public int NonCombatAILayerIndex;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10B8")]
		public LayerMask DetectionLayerMask;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10BC")]
		public LayerMask ObstructionDetectionLayerMask;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C0")]
		public LayerMask UILayerMask;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C4")]
		public LayerMask AlignmentLayerMask;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C8")]
		public LayerMask AIAvoidanceLayerMask;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10CC")]
		public LayerMask DynamicWanderLayerMask;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10D0")]
		public LayerMask BackupLayerMask;

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0x8EF128", Offset = "0x8EF128", VA = "0x8EF128")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0x8EF18C", Offset = "0x8EF18C", VA = "0x8EF18C")]
		public void CheckPath(Vector3 Destination)
		{
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0x8EF644", Offset = "0x8EF644", VA = "0x8EF644")]
		private void CheckAIRenderers()
		{
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0x8EFA08", Offset = "0x8EFA08", VA = "0x8EFA08")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0x8F2040", Offset = "0x8F2040", VA = "0x8F2040")]
		private void WeaponSwitchCooldown()
		{
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0x8EFF84", Offset = "0x8EFF84", VA = "0x8EFF84")]
		private void UpdateWeaponTypeState()
		{
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0x8F2048", Offset = "0x8F2048", VA = "0x8F2048")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74C798", Offset = "0x74C798")]
		private IEnumerator SwitchCurrentWeaponType(string WeaponTypeName)
		{
			return null;
		}

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0x8F1308", Offset = "0x8F1308", VA = "0x8F1308")]
		private void MoveAINavMesh()
		{
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x8F0DD0", Offset = "0x8F0DD0", VA = "0x8F0DD0")]
		private void MoveAIRootMotion()
		{
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x8F20F0", Offset = "0x8F20F0", VA = "0x8F20F0")]
		private void AlignAIMoving()
		{
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x8F0AC4", Offset = "0x8F0AC4", VA = "0x8F0AC4")]
		private void AlignAIStationary()
		{
		}

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x8F25EC", Offset = "0x8F25EC", VA = "0x8F25EC")]
		private void RotateAIStationary()
		{
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x8F03E8", Offset = "0x8F03E8", VA = "0x8F03E8")]
		public void Wander()
		{
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x8F3A00", Offset = "0x8F3A00", VA = "0x8F3A00")]
		private void ResetWanderTimer()
		{
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x8F099C", Offset = "0x8F099C", VA = "0x8F099C")]
		public void FollowCompanionTarget()
		{
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x8F3A0C", Offset = "0x8F3A0C", VA = "0x8F3A0C")]
		private void ReverseDelay()
		{
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x8F37B0", Offset = "0x8F37B0", VA = "0x8F37B0")]
		public void NextWaypoint()
		{
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x8F3308", Offset = "0x8F3308", VA = "0x8F3308")]
		public void GenerateWaypoint()
		{
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x8F3AA8", Offset = "0x8F3AA8", VA = "0x8F3AA8")]
		private void CreateEmeraldProjectile()
		{
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0x8F49F0", Offset = "0x8F49F0", VA = "0x8F49F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74C7FC", Offset = "0x74C7FC")]
		private IEnumerator InitializeSummonedAI(EmeraldAISystem AIObject)
		{
			return null;
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x8F49D8", Offset = "0x8F49D8", VA = "0x8F49D8")]
		private void InitializeAbility(EmeraldAIProjectile CurrentlyCreatedAbility, EmeraldAIAbility m_EmeraldAIAbility)
		{
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x8F4A98", Offset = "0x8F4A98", VA = "0x8F4A98")]
		public void EmeraldAttackEvent()
		{
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x8F4AB4", Offset = "0x8F4AB4", VA = "0x8F4AB4")]
		public void SendEmeraldDamage()
		{
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x8F657C", Offset = "0x8F657C", VA = "0x8F657C")]
		private void EndAttackEvent()
		{
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x8F5560", Offset = "0x8F5560", VA = "0x8F5560")]
		public void Damage(int DamageAmount, [Optional] TargetType? TypeOfTarget, [Optional] Transform AttackerTransform, int RagdollForce = 100, bool CriticalHit = false)
		{
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x8EF868", Offset = "0x8EF868", VA = "0x8EF868")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x8EF9A4", Offset = "0x8EF9A4", VA = "0x8EF9A4")]
		public void Activate()
		{
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x8F5374", Offset = "0x8F5374", VA = "0x8F5374")]
		public void GetDamageAmount()
		{
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x8F6BD8", Offset = "0x8F6BD8", VA = "0x8F6BD8")]
		private bool GenerateCritOdds()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0x8F6B08", Offset = "0x8F6B08", VA = "0x8F6B08")]
		public void SetUI(bool Enabled)
		{
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x8F47A8", Offset = "0x8F47A8", VA = "0x8F47A8")]
		public float TargetAngle()
		{
			return default(float);
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0x8F6C7C", Offset = "0x8F6C7C", VA = "0x8F6C7C")]
		public float DestinationAngle()
		{
			return default(float);
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x8F6378", Offset = "0x8F6378", VA = "0x8F6378")]
		public float TransformAngle(Transform Target)
		{
			return default(float);
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x8F6E3C", Offset = "0x8F6E3C", VA = "0x8F6E3C")]
		public float HeadLookAngle()
		{
			return default(float);
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x8F703C", Offset = "0x8F703C", VA = "0x8F703C")]
		public EmeraldAISystem()
		{
		}
	}
}
namespace EmeraldAI.Utility
{
	[Token(Token = "0x20001D4")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x740B54", Offset = "0x740B54")]
	public class AnimationProfile : ScriptableObject
	{
		[Token(Token = "0x200032E")]
		public enum YesOrNo
		{
			[Token(Token = "0x40016D1")]
			No,
			[Token(Token = "0x40016D2")]
			Yes
		}

		[Token(Token = "0x200032F")]
		public enum WeaponType
		{
			[Token(Token = "0x40016D4")]
			Melee,
			[Token(Token = "0x40016D5")]
			Ranged,
			[Token(Token = "0x40016D6")]
			Both
		}

		[Token(Token = "0x2000330")]
		public enum AnimatorTypeState
		{
			[Token(Token = "0x40016D8")]
			RootMotion,
			[Token(Token = "0x40016D9")]
			NavMeshDriven
		}

		[Serializable]
		[Token(Token = "0x2000331")]
		public class EmoteAnimationClass
		{
			[Token(Token = "0x40016DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int AnimationID;

			[Token(Token = "0x40016DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AnimationClip EmoteAnimationClip;

			[Token(Token = "0x6001060")]
			[Address(RVA = "0x8FC6E4", Offset = "0x8FC6E4", VA = "0x8FC6E4")]
			public EmoteAnimationClass(int NewAnimationID, AnimationClip NewEmoteAnimationClip)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000332")]
		public class AnimationClass
		{
			[Token(Token = "0x40016DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float AnimationSpeed;

			[Token(Token = "0x40016DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AnimationClip AnimationClip;

			[Token(Token = "0x6001061")]
			[Address(RVA = "0x8FC6A0", Offset = "0x8FC6A0", VA = "0x8FC6A0")]
			public AnimationClass(float NewAnimationSpeed, AnimationClip NewAnimationClip)
			{
			}
		}

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RuntimeAnimatorController AIAnimator;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationClip Attack1Animation;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationClip Attack2Animation;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationClip Attack3Animation;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationClip Attack4Animation;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationClip Attack5Animation;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationClip Attack6Animation;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationClip RunAttack1Animation;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AnimationClip RunAttack2Animation;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AnimationClip RunAttack3Animation;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AnimationClip Idle1Animation;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AnimationClip Idle2Animation;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AnimationClip Idle3Animation;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AnimationClip Idle4Animation;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public AnimationClip Idle5Animation;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AnimationClip Idle6Animation;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public AnimationClip IdleWarningAnimation;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public AnimationClip NonCombatTurnLeftAnimation;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public AnimationClip NonCombatTurnRightAnimation;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public AnimationClip CombatTurnLeftAnimation;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public AnimationClip CombatTurnRightAnimation;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public AnimationClip NonCombatIdleAnimation;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public AnimationClip WalkLeftAnimation;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public AnimationClip WalkStraightAnimation;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public AnimationClip WalkRightAnimation;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public AnimationClip RunLeftAnimation;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public AnimationClip RunStraightAnimation;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public AnimationClip RunRightAnimation;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public AnimationClip CombatIdleAnimation;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public AnimationClip CombatWalkLeftAnimation;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public AnimationClip CombatWalkStraightAnimation;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public AnimationClip CombatWalkBackAnimation;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public AnimationClip CombatWalkRightAnimation;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public AnimationClip CombatRunLeftAnimation;

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public AnimationClip CombatRunStraightAnimation;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public AnimationClip CombatRunRightAnimation;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public AnimationClip Hit1Animation;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public AnimationClip Hit2Animation;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public AnimationClip Hit3Animation;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public AnimationClip Hit4Animation;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public AnimationClip Hit5Animation;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public AnimationClip Hit6Animation;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public AnimationClip CombatHit1Animation;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public AnimationClip CombatHit2Animation;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public AnimationClip CombatHit3Animation;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public AnimationClip CombatHit4Animation;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public AnimationClip CombatHit5Animation;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public AnimationClip CombatHit6Animation;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public AnimationClip BlockIdleAnimation;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public AnimationClip BlockHitAnimation;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public AnimationClip PutAwayWeaponAnimation;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public AnimationClip PullOutWeaponAnimation;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public AnimationClip Death1Animation;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public AnimationClip Death2Animation;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public AnimationClip Death3Animation;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public AnimationClip Death4Animation;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public AnimationClip Death5Animation;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public AnimationClip Death6Animation;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public AnimationClip RangedDeath1Animation;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public AnimationClip RangedDeath2Animation;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public AnimationClip RangedDeath3Animation;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public AnimationClip RangedDeath4Animation;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public AnimationClip RangedDeath5Animation;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public AnimationClip RangedDeath6Animation;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public AnimationClip RangedCombatIdleAnimation;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public AnimationClip RangedCombatWalkLeftAnimation;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public AnimationClip RangedCombatWalkStraightAnimation;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public AnimationClip RangedCombatWalkBackAnimation;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public AnimationClip RangedCombatWalkRightAnimation;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public AnimationClip RangedCombatRunLeftAnimation;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public AnimationClip RangedCombatRunStraightAnimation;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public AnimationClip RangedCombatRunRightAnimation;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public AnimationClip RangedIdleWarningAnimation;

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		public AnimationClip RangedPutAwayWeaponAnimation;

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public AnimationClip RangedPullOutWeaponAnimation;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		public AnimationClip RangedAttack1Animation;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		public AnimationClip RangedAttack2Animation;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		public AnimationClip RangedAttack3Animation;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public AnimationClip RangedAttack4Animation;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		public AnimationClip RangedAttack5Animation;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		public AnimationClip RangedAttack6Animation;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		public AnimationClip RangedRunAttack1Animation;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		public AnimationClip RangedRunAttack2Animation;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		public AnimationClip RangedRunAttack3Animation;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		public AnimationClip RangedCombatHit1Animation;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		public AnimationClip RangedCombatHit2Animation;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		public AnimationClip RangedCombatHit3Animation;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		public AnimationClip RangedCombatHit4Animation;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		public AnimationClip RangedCombatHit5Animation;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		public AnimationClip RangedCombatHit6Animation;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		public AnimationClip RangedCombatTurnLeftAnimation;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		public AnimationClip RangedCombatTurnRightAnimation;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		public AnimationClip Emote1Animation;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		public AnimationClip Emote2Animation;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		public AnimationClip Emote3Animation;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		public AnimationClip Emote4Animation;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		public AnimationClip Emote5Animation;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		public AnimationClip Emote6Animation;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		public AnimationClip Emote7Animation;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		public AnimationClip Emote8Animation;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		public AnimationClip Emote9Animation;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		public AnimationClip Emote10Animation;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		public float Idle1AnimationSpeed;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34C")]
		public float Idle2AnimationSpeed;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		public float Idle3AnimationSpeed;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x354")]
		public float Idle4AnimationSpeed;

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		public float Idle5AnimationSpeed;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35C")]
		public float Idle6AnimationSpeed;

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		public float IdleWarningAnimationSpeed;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x364")]
		public float RangedIdleWarningAnimationSpeed;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		public float IdleCombatAnimationSpeed;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36C")]
		public float RangedIdleCombatAnimationSpeed;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		public float IdleNonCombatAnimationSpeed;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x374")]
		public float Attack1AnimationSpeed;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		public float Attack2AnimationSpeed;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37C")]
		public float Attack3AnimationSpeed;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		public float Attack4AnimationSpeed;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x384")]
		public float Attack5AnimationSpeed;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		public float Attack6AnimationSpeed;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38C")]
		public float RangedAttack1AnimationSpeed;

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		public float RangedAttack2AnimationSpeed;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x394")]
		public float RangedAttack3AnimationSpeed;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
		public float RangedAttack4AnimationSpeed;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39C")]
		public float RangedAttack5AnimationSpeed;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		public float RangedAttack6AnimationSpeed;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A4")]
		public float RunAttack1AnimationSpeed;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
		public float RunAttack2AnimationSpeed;

		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3AC")]
		public float RunAttack3AnimationSpeed;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		public float RangedRunAttack1AnimationSpeed;

		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B4")]
		public float RangedRunAttack2AnimationSpeed;

		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
		public float RangedRunAttack3AnimationSpeed;

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3BC")]
		public float TurnLeftAnimationSpeed;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		public float TurnRightAnimationSpeed;

		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C4")]
		public float CombatTurnLeftAnimationSpeed;

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
		public float CombatTurnRightAnimationSpeed;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3CC")]
		public float RangedCombatTurnLeftAnimationSpeed;

		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
		public float RangedCombatTurnRightAnimationSpeed;

		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D4")]
		public float Death1AnimationSpeed;

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
		public float Death2AnimationSpeed;

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3DC")]
		public float Death3AnimationSpeed;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
		public float Death4AnimationSpeed;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E4")]
		public float Death5AnimationSpeed;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
		public float Death6AnimationSpeed;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3EC")]
		public float RangedDeath1AnimationSpeed;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
		public float RangedDeath2AnimationSpeed;

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F4")]
		public float RangedDeath3AnimationSpeed;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
		public float RangedDeath4AnimationSpeed;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3FC")]
		public float RangedDeath5AnimationSpeed;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
		public float RangedDeath6AnimationSpeed;

		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x404")]
		public float Emote1AnimationSpeed;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
		public float Emote2AnimationSpeed;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40C")]
		public float Emote3AnimationSpeed;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
		public float Emote4AnimationSpeed;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x414")]
		public float Emote5AnimationSpeed;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
		public float Emote6AnimationSpeed;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41C")]
		public float Emote7AnimationSpeed;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
		public float Emote8AnimationSpeed;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x424")]
		public float Emote9AnimationSpeed;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
		public float Emote10AnimationSpeed;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42C")]
		public float WalkAnimationSpeed;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
		public float RunAnimationSpeed;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x434")]
		public float NonCombatWalkAnimationSpeed;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
		public float NonCombatRunAnimationSpeed;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43C")]
		public float CombatWalkAnimationSpeed;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
		public float CombatRunAnimationSpeed;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x444")]
		public float RangedCombatWalkAnimationSpeed;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
		public float RangedCombatRunAnimationSpeed;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44C")]
		public float Hit1AnimationSpeed;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
		public float Hit2AnimationSpeed;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x454")]
		public float Hit3AnimationSpeed;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
		public float Hit4AnimationSpeed;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45C")]
		public float Hit5AnimationSpeed;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
		public float Hit6AnimationSpeed;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x464")]
		public float CombatHit1AnimationSpeed;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x468")]
		public float CombatHit2AnimationSpeed;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46C")]
		public float CombatHit3AnimationSpeed;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x470")]
		public float CombatHit4AnimationSpeed;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x474")]
		public float CombatHit5AnimationSpeed;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x478")]
		public float CombatHit6AnimationSpeed;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47C")]
		public float RangedCombatHit1AnimationSpeed;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x480")]
		public float RangedCombatHit2AnimationSpeed;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x484")]
		public float RangedCombatHit3AnimationSpeed;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
		public float RangedCombatHit4AnimationSpeed;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48C")]
		public float RangedCombatHit5AnimationSpeed;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
		public float RangedCombatHit6AnimationSpeed;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x494")]
		public bool MirrorWalkLeft;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x495")]
		public bool MirrorWalkRight;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x496")]
		public bool MirrorRunLeft;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x497")]
		public bool MirrorRunRight;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x498")]
		public bool MirrorCombatWalkLeft;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x499")]
		public bool MirrorCombatWalkRight;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49A")]
		public bool MirrorCombatRunLeft;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49B")]
		public bool MirrorCombatRunRight;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49C")]
		public bool MirrorCombatTurnLeft;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49D")]
		public bool MirrorCombatTurnRight;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49E")]
		public bool MirrorRangedCombatWalkLeft;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49F")]
		public bool MirrorRangedCombatWalkRight;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A0")]
		public bool MirrorRangedCombatRunLeft;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A1")]
		public bool MirrorRangedCombatRunRight;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A2")]
		public bool MirrorRangedCombatTurnLeft;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A3")]
		public bool MirrorRangedCombatTurnRight;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A4")]
		public bool MirrorTurnLeft;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A5")]
		public bool MirrorTurnRight;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A6")]
		public bool ReverseWalkAnimation;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A7")]
		public bool ReverseRangedWalkAnimation;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A8")]
		public YesOrNo UseWarningAnimationRef;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4AC")]
		public YesOrNo UseRunAttacksRef;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B0")]
		public YesOrNo UseHitAnimations;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B4")]
		public YesOrNo UseEquipAnimation;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B8")]
		public YesOrNo UseBlockingRef;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4BC")]
		public WeaponType WeaponTypeRef;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C0")]
		public AnimatorTypeState AnimatorType;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C8")]
		public List<EmoteAnimationClass> EmoteAnimationList;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D0")]
		public List<AnimationClass> IdleAnimationList;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D8")]
		public List<AnimationClass> AttackAnimationList;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E0")]
		public List<AnimationClass> RunAttackAnimationList;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E8")]
		public List<AnimationClass> DeathAnimationList;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F0")]
		public List<AnimationClass> CombatHitAnimationList;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F8")]
		public List<AnimationClass> HitAnimationList;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x500")]
		public List<AnimationClass> RangedAttackAnimationList;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x508")]
		public List<AnimationClass> RangedCombatHitAnimationList;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x510")]
		public List<AnimationClass> RangedRunAttackAnimationList;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x518")]
		public List<AnimationClass> RangedDeathAnimationList;

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0x8FC468", Offset = "0x8FC468", VA = "0x8FC468")]
		public AnimationProfile()
		{
		}
	}
	[Token(Token = "0x20001D5")]
	public static class EmeraldAICombatManager
	{
		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0x8FC728", Offset = "0x8FC728", VA = "0x8FC728")]
		public static void GenerateMeleeAttack(EmeraldAISystem EmeraldComponent)
		{
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x8FC9E4", Offset = "0x8FC9E4", VA = "0x8FC9E4")]
		public static void GenerateMeleeRunAttack(EmeraldAISystem EmeraldComponent)
		{
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x8FCBD0", Offset = "0x8FCBD0", VA = "0x8FCBD0")]
		public static void GenerateOffensiveAbility(EmeraldAISystem EmeraldComponent)
		{
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x8FCF7C", Offset = "0x8FCF7C", VA = "0x8FCF7C")]
		public static void GenerateSupportAbility(EmeraldAISystem EmeraldComponent)
		{
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x8FD1C4", Offset = "0x8FD1C4", VA = "0x8FD1C4")]
		public static void GenerateSummoningAbility(EmeraldAISystem EmeraldComponent)
		{
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x8FC910", Offset = "0x8FC910", VA = "0x8FC910")]
		public static float GenerateProbability(float[] probs)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20001D6")]
	public class EmeraldAIDamageOverTime : MonoBehaviour
	{
		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public LocationBasedDamageArea m_LocationBasedDamageArea;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public int m_DamageAmount;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public float m_DamageIncrement;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public float m_AbilityLength;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public string m_AbilityName;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public GameObject m_DamageOverTimeEffect;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public AudioClip m_DamageOverTimeSound;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public EmeraldAISystem m_TargetEmeraldComponent;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool EmeraldAITarget;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float DamageTimer;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float ActiveLengthTimer;

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float m_DamageOverTimeTimeout;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource m_AudioSource;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 m_EffectPosition;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform m_TargetTransform;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private EmeraldAISystem.TargetType m_TargetType;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private EmeraldAINonAIDamage m_NonAIDamageComponent;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private EmeraldAIPlayerDamage m_EmeraldAIPlayerDamage;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private EmeraldAISystem m_AttackerEmeraldComponent;

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x8FD40C", Offset = "0x8FD40C", VA = "0x8FD40C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x8FD474", Offset = "0x8FD474", VA = "0x8FD474")]
		public void Initialize(string AbilityName, int DamageAmount, float DamageIncrement, float AbilityLength, GameObject DamageOverTimeEffect, float DamageOvertimeTimeout, AudioClip DamageOverTimeSound, EmeraldAINonAIDamage NonAIDamageComponent, EmeraldAIPlayerDamage PlayerDamageComponent, EmeraldAISystem TargetEmeraldComponent, EmeraldAISystem AttackerEmeraldComponent, Transform TargetTransform, EmeraldAISystem.TargetType TargetType)
		{
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x8FD4A4", Offset = "0x8FD4A4", VA = "0x8FD4A4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x8FD4AC", Offset = "0x8FD4AC", VA = "0x8FD4AC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0x8FDB24", Offset = "0x8FDB24", VA = "0x8FDB24")]
		public EmeraldAIDamageOverTime()
		{
		}
	}
	[Token(Token = "0x20001D7")]
	public class EmeraldAIDetection : MonoBehaviour
	{
		[Token(Token = "0x2000333")]
		public enum PlayerDetectionRef
		{
			[Token(Token = "0x40016DF")]
			Detected,
			[Token(Token = "0x40016E0")]
			NotDetected
		}

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public bool SearchingForTarget;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[HideInInspector]
		public bool SearchForRandomTarget;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public Vector3 TargetDirection;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public GameObject CurrentObstruction;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public Color DebugLineColor;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public PlayerDetectionRef PlayerDetection;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public float PlayerDetectionCooldown;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public float DetectionTimer;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public Collider CurrentTargetCollider;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private EmeraldAISystem EmeraldComponent;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool AvoidanceTrigger;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float AvoidanceTimer;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float AvoidanceSeconds;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_PlayerDetected;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		private bool m_FirstTimeDetectingPlayer;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
		private bool LineOfSightTargetSet;

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x8FDB2C", Offset = "0x8FDB2C", VA = "0x8FDB2C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x8FDB84", Offset = "0x8FDB84", VA = "0x8FDB84")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0x8FE760", Offset = "0x8FE760", VA = "0x8FE760")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0x8FF4C4", Offset = "0x8FF4C4", VA = "0x8FF4C4")]
		public void DetectTarget(GameObject C)
		{
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0x8FE808", Offset = "0x8FE808", VA = "0x8FE808")]
		private void AIAvoidance()
		{
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0x8FFD94", Offset = "0x8FFD94", VA = "0x8FFD94")]
		private void UpdateAIUI()
		{
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0x8FDF4C", Offset = "0x8FDF4C", VA = "0x8FDF4C")]
		private void UpdateAIDetection()
		{
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x8FEC00", Offset = "0x8FEC00", VA = "0x8FEC00")]
		public void LineOfSightDetection()
		{
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0x8FFEE8", Offset = "0x8FFEE8", VA = "0x8FFEE8")]
		public void SetLineOfSightTarget(Transform LineOfSightTarget)
		{
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0x8FFFBC", Offset = "0x8FFFBC", VA = "0x8FFFBC")]
		public void CheckForObstructions()
		{
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0x901220", Offset = "0x901220", VA = "0x901220")]
		public void SearchForLineOfSightTarget()
		{
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0x8F1698", Offset = "0x8F1698", VA = "0x8F1698")]
		public void SearchForTarget()
		{
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0x8F6598", Offset = "0x8F6598", VA = "0x8F6598")]
		public void SetDetectedTarget(Transform DetectedTarget)
		{
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0x8F80A4", Offset = "0x8F80A4", VA = "0x8F80A4")]
		public void DetectTargetType(Transform Target, [Optional][MetadataOffset(Offset = "0x2E90E8")] bool? OverrideFactionRequirement)
		{
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0x90189C", Offset = "0x90189C", VA = "0x90189C")]
		public void StartRandomTarget()
		{
		}

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0x8FFC90", Offset = "0x8FFC90", VA = "0x8FFC90")]
		private void GetTargetFaction(Transform Target)
		{
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0x9017BC", Offset = "0x9017BC", VA = "0x9017BC")]
		private void GetTargetPositionModifier(Transform Target)
		{
		}

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0x9018A8", Offset = "0x9018A8", VA = "0x9018A8")]
		public EmeraldAIDetection()
		{
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0x9018EC", Offset = "0x9018EC", VA = "0x9018EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74C860", Offset = "0x74C860")]
		private float <SearchForTarget>b__28_0(GameObject x)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20001D8")]
	public class EmeraldAIHandIK : MonoBehaviour
	{
		[Token(Token = "0x2000334")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7413F8", Offset = "0x7413F8")]
		private sealed class <FadeInHandWeightsInternal>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EmeraldAIHandIK <>4__this;

			[Token(Token = "0x40016E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <T>5__2;

			[Token(Token = "0x40016E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <RightStartingHandPosWeight>5__3;

			[Token(Token = "0x40016E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <LeftStartingHandPosWeight>5__4;

			[Token(Token = "0x40016E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <RightStartingHandRotWeight>5__5;

			[Token(Token = "0x40016E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <LeftStartingHandRotWeight>5__6;

			[Token(Token = "0x17000223")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001065")]
				[Address(RVA = "0xA5702C", Offset = "0xA5702C", VA = "0xA5702C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000224")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001067")]
				[Address(RVA = "0xA57094", Offset = "0xA57094", VA = "0xA57094", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001062")]
			[Address(RVA = "0xA56C18", Offset = "0xA56C18", VA = "0xA56C18")]
			[DebuggerHidden]
			public <FadeInHandWeightsInternal>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6001063")]
			[Address(RVA = "0xA56E70", Offset = "0xA56E70", VA = "0xA56E70", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001064")]
			[Address(RVA = "0xA56E74", Offset = "0xA56E74", VA = "0xA56E74", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001066")]
			[Address(RVA = "0xA57034", Offset = "0xA57034", VA = "0xA57034", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000335")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741408", Offset = "0x741408")]
		private sealed class <FadeOutHandWeightsInternal>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EmeraldAIHandIK <>4__this;

			[Token(Token = "0x40016EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <T>5__2;

			[Token(Token = "0x40016ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <RightStartingHandWeight>5__3;

			[Token(Token = "0x40016EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <LeftStartingHandWeight>5__4;

			[Token(Token = "0x40016EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <RightStartingHandRotWeight>5__5;

			[Token(Token = "0x40016F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <LeftStartingHandRotWeight>5__6;

			[Token(Token = "0x17000225")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600106B")]
				[Address(RVA = "0xA571FC", Offset = "0xA571FC", VA = "0xA571FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000226")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600106D")]
				[Address(RVA = "0xA57264", Offset = "0xA57264", VA = "0xA57264", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001068")]
			[Address(RVA = "0xA56CE0", Offset = "0xA56CE0", VA = "0xA56CE0")]
			[DebuggerHidden]
			public <FadeOutHandWeightsInternal>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6001069")]
			[Address(RVA = "0xA5709C", Offset = "0xA5709C", VA = "0xA5709C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600106A")]
			[Address(RVA = "0xA570A0", Offset = "0xA570A0", VA = "0xA570A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600106C")]
			[Address(RVA = "0xA57204", Offset = "0xA57204", VA = "0xA57204", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HandIKProfile HandIKProfileData;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandIKProfile ImportedHandIKProfileData;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform RightHandPoint;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float RightHandPosWeight;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float RightHandRotWeight;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform LeftHandPoint;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float LeftHandPosWeight;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float LeftHandRotWeight;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string FilePath;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private EmeraldAISystem EmeraldComponent;

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0xA5686C", Offset = "0xA5686C", VA = "0xA5686C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0xA56AEC", Offset = "0xA56AEC", VA = "0xA56AEC")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0xA56B6C", Offset = "0xA56B6C", VA = "0xA56B6C")]
		public void InstantlyFadeInWeights()
		{
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0xA56B7C", Offset = "0xA56B7C", VA = "0xA56B7C")]
		public void FadeInHandWeights()
		{
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0xA56BA8", Offset = "0xA56BA8", VA = "0xA56BA8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74C870", Offset = "0x74C870")]
		private IEnumerator FadeInHandWeightsInternal()
		{
			return null;
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0xA56C44", Offset = "0xA56C44", VA = "0xA56C44")]
		public void FadeOutHandWeights()
		{
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0xA56C70", Offset = "0xA56C70", VA = "0xA56C70")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74C8D4", Offset = "0x74C8D4")]
		private IEnumerator FadeOutHandWeightsInternal()
		{
			return null;
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0xA56D0C", Offset = "0xA56D0C", VA = "0xA56D0C")]
		private void OnAnimatorIK(int layerIndex)
		{
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0xA56E68", Offset = "0xA56E68", VA = "0xA56E68")]
		public EmeraldAIHandIK()
		{
		}
	}
	[Token(Token = "0x20001D9")]
	public class EmeraldAIInitializer : MonoBehaviour
	{
		[Token(Token = "0x2000336")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741418", Offset = "0x741418")]
		private sealed class <SetDelayedDestination>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EmeraldAIInitializer <>4__this;

			[Token(Token = "0x40016F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 Destination;

			[Token(Token = "0x17000227")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001071")]
				[Address(RVA = "0xA615F8", Offset = "0xA615F8", VA = "0xA615F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000228")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001073")]
				[Address(RVA = "0xA61660", Offset = "0xA61660", VA = "0xA61660", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600106E")]
			[Address(RVA = "0xA60748", Offset = "0xA60748", VA = "0xA60748")]
			[DebuggerHidden]
			public <SetDelayedDestination>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x600106F")]
			[Address(RVA = "0xA61514", Offset = "0xA61514", VA = "0xA61514", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001070")]
			[Address(RVA = "0xA61518", Offset = "0xA61518", VA = "0xA61518", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001072")]
			[Address(RVA = "0xA61600", Offset = "0xA61600", VA = "0xA61600", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000337")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741428", Offset = "0x741428")]
		private sealed class <AnimationDeath>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EmeraldAIInitializer <>4__this;

			[Token(Token = "0x17000229")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001077")]
				[Address(RVA = "0xA614A4", Offset = "0xA614A4", VA = "0xA614A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700022A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001079")]
				[Address(RVA = "0xA6150C", Offset = "0xA6150C", VA = "0xA6150C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001074")]
			[Address(RVA = "0xA611E0", Offset = "0xA611E0", VA = "0xA611E0")]
			[DebuggerHidden]
			public <AnimationDeath>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6001075")]
			[Address(RVA = "0xA61214", Offset = "0xA61214", VA = "0xA61214", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001076")]
			[Address(RVA = "0xA61218", Offset = "0xA61218", VA = "0xA61218", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001078")]
			[Address(RVA = "0xA614AC", Offset = "0xA614AC", VA = "0xA614AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private EmeraldAISystem EmeraldComponent;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool CustomIKFaded;

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0xA58100", Offset = "0xA58100", VA = "0xA58100")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0xA5F878", Offset = "0xA5F878", VA = "0xA5F878")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0xA5F8A0", Offset = "0xA5F8A0", VA = "0xA5F8A0")]
		private void CheckFactionRelations()
		{
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0xA5FB08", Offset = "0xA5FB08", VA = "0xA5FB08")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0xA5FBAC", Offset = "0xA5FBAC", VA = "0xA5FBAC")]
		public void AlignOnStart()
		{
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0xA5F004", Offset = "0xA5F004", VA = "0xA5F004")]
		public void IntializeLookAtController()
		{
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0xA5A858", Offset = "0xA5A858", VA = "0xA5A858")]
		public void DisableRagdoll()
		{
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0xA60220", Offset = "0xA60220", VA = "0xA60220")]
		public void EnableRagdoll()
		{
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0xA58BE4", Offset = "0xA58BE4", VA = "0xA58BE4")]
		private void SetupEmeraldAIObjectPool()
		{
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0xA5A9F0", Offset = "0xA5A9F0", VA = "0xA5A9F0")]
		private void SetupAudio()
		{
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0xA59468", Offset = "0xA59468", VA = "0xA59468")]
		private void SetupOptimizationSettings()
		{
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0xA605AC", Offset = "0xA605AC", VA = "0xA605AC")]
		private void SetupFactions()
		{
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0xA5932C", Offset = "0xA5932C", VA = "0xA5932C")]
		private void SetupAdditionalComponents()
		{
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0xA58CF0", Offset = "0xA58CF0", VA = "0xA58CF0")]
		private void SetupNavMeshAgent()
		{
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0xA606B4", Offset = "0xA606B4", VA = "0xA606B4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74C938", Offset = "0x74C938")]
		private IEnumerator SetDelayedDestination(Vector3 Destination)
		{
			return null;
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0xA5EB18", Offset = "0xA5EB18", VA = "0xA5EB18")]
		private void SetupAnimator()
		{
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0xA598CC", Offset = "0xA598CC", VA = "0xA598CC")]
		private void SetupHealthBar()
		{
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0xA5A578", Offset = "0xA5A578", VA = "0xA5A578")]
		private void SetupCombatText()
		{
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0xA582A0", Offset = "0xA582A0", VA = "0xA582A0")]
		private void SetupEmeraldAISettings()
		{
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0xA5AC10", Offset = "0xA5AC10", VA = "0xA5AC10")]
		private void CheckAnimationEvents()
		{
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0xA5BD2C", Offset = "0xA5BD2C", VA = "0xA5BD2C")]
		public void CheckForMissingAnimations()
		{
		}

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0xA5E9D0", Offset = "0xA5E9D0", VA = "0xA5E9D0")]
		public void InitializeWeaponTypeAnimationAndSettings()
		{
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0xA5F028", Offset = "0xA5F028", VA = "0xA5F028")]
		private void IniializeHandIK()
		{
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0xA5F10C", Offset = "0xA5F10C", VA = "0xA5F10C")]
		private void InitializeDroppableWeapon()
		{
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0xA6084C", Offset = "0xA6084C", VA = "0xA6084C")]
		public void InitializeAIDeath()
		{
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0xA60988", Offset = "0xA60988", VA = "0xA60988")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0xA60B88", Offset = "0xA60B88", VA = "0xA60B88")]
		private void RagdollDeath()
		{
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0xA60918", Offset = "0xA60918", VA = "0xA60918")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74C99C", Offset = "0x74C99C")]
		private IEnumerator AnimationDeath()
		{
			return null;
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0xA6120C", Offset = "0xA6120C", VA = "0xA6120C")]
		public EmeraldAIInitializer()
		{
		}
	}
	[Token(Token = "0x20001DA")]
	public class EmeraldAILookAtController : MonoBehaviour
	{
		[Token(Token = "0x2000338")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741438", Offset = "0x741438")]
		private sealed class <FadeLookWeightInternal>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EmeraldAILookAtController <>4__this;

			[Token(Token = "0x40016FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <T>5__2;

			[Token(Token = "0x40016FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <StartingLookWeight>5__3;

			[Token(Token = "0x1700022B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600107D")]
				[Address(RVA = "0xA63D08", Offset = "0xA63D08", VA = "0xA63D08", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700022C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600107F")]
				[Address(RVA = "0xA63D70", Offset = "0xA63D70", VA = "0xA63D70", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600107A")]
			[Address(RVA = "0xA62984", Offset = "0xA62984", VA = "0xA62984")]
			[DebuggerHidden]
			public <FadeLookWeightInternal>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x600107B")]
			[Address(RVA = "0xA63C00", Offset = "0xA63C00", VA = "0xA63C00", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600107C")]
			[Address(RVA = "0xA63C04", Offset = "0xA63C04", VA = "0xA63C04", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600107E")]
			[Address(RVA = "0xA63D10", Offset = "0xA63D10", VA = "0xA63D10", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000339")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741448", Offset = "0x741448")]
		private sealed class <FadeInBodyIKInternal>d__41 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EmeraldAILookAtController <>4__this;

			[Token(Token = "0x4001700")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <T>5__2;

			[Token(Token = "0x4001701")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <StartingBodyWeight>5__3;

			[Token(Token = "0x4001702")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <StartingUnityBodyIK>5__4;

			[Token(Token = "0x4001703")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <StartingHeadFade>5__5;

			[Token(Token = "0x1700022D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001083")]
				[Address(RVA = "0xA63B90", Offset = "0xA63B90", VA = "0xA63B90", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700022E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001085")]
				[Address(RVA = "0xA63BF8", Offset = "0xA63BF8", VA = "0xA63BF8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001080")]
			[Address(RVA = "0xA638BC", Offset = "0xA638BC", VA = "0xA638BC")]
			[DebuggerHidden]
			public <FadeInBodyIKInternal>d__41(int <>1__state)
			{
			}

			[Token(Token = "0x6001081")]
			[Address(RVA = "0xA63A10", Offset = "0xA63A10", VA = "0xA63A10", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001082")]
			[Address(RVA = "0xA63A14", Offset = "0xA63A14", VA = "0xA63A14", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001084")]
			[Address(RVA = "0xA63B98", Offset = "0xA63B98", VA = "0xA63B98", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200033A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741458", Offset = "0x741458")]
		private sealed class <FadeOutBodyIKInternal>d__42 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001704")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001705")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001706")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EmeraldAILookAtController <>4__this;

			[Token(Token = "0x4001707")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <T>5__2;

			[Token(Token = "0x4001708")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <StartingBodyWeight>5__3;

			[Token(Token = "0x4001709")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <StartingUnityBodyIK>5__4;

			[Token(Token = "0x400170A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <StartingHeadFade>5__5;

			[Token(Token = "0x400170B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <BodyLookWeightGoal>5__6;

			[Token(Token = "0x1700022F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001089")]
				[Address(RVA = "0xA63F5C", Offset = "0xA63F5C", VA = "0xA63F5C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000230")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600108B")]
				[Address(RVA = "0xA63FC4", Offset = "0xA63FC4", VA = "0xA63FC4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001086")]
			[Address(RVA = "0xA638E8", Offset = "0xA638E8", VA = "0xA638E8")]
			[DebuggerHidden]
			public <FadeOutBodyIKInternal>d__42(int <>1__state)
			{
			}

			[Token(Token = "0x6001087")]
			[Address(RVA = "0xA63D78", Offset = "0xA63D78", VA = "0xA63D78", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001088")]
			[Address(RVA = "0xA63D7C", Offset = "0xA63D7C", VA = "0xA63D7C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600108A")]
			[Address(RVA = "0xA63F64", Offset = "0xA63F64", VA = "0xA63F64", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public bool LookAtInProgress;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public float HeadFade;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool ForceUnityIK;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public float UnityHeadIK;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public float UnityBodyIK;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public float BodyWeight;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public bool DeathDelay;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public List<HumanBodyBones> BoneObjects;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public List<Transform> BoneTransformList;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float CurrentLookAtSpeed;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float LookAtSpeedGoal;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 CurrentLookPosition;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 LerpedLookPosition;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 UnityIKLookPos;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 CurrentTargetPosition;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float UnityHeadIKGoal;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float UnityBodyIKGoal;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float CurrentDistance;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int Interations;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 CurrentOffsetPos;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float LookWeight;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float LookWeightGoal;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float DelayTurnTimer;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float TargetAngle;

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float ForwardLerp;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool FadingIKOutActive;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Vector3 LookVelocity;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private EmeraldAISystem EmeraldComponent;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Coroutine FadeLookWeightCoroutine;

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0xA5FEE4", Offset = "0xA5FEE4", VA = "0xA5FEE4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0xA61048", Offset = "0xA61048", VA = "0xA61048")]
		public void ResetSettings()
		{
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0xA61668", Offset = "0xA61668", VA = "0xA61668")]
		private void CalculateDistances()
		{
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0xA61854", Offset = "0xA61854", VA = "0xA61854")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0xA61978", Offset = "0xA61978", VA = "0xA61978")]
		public float LookAtDirectionAngle()
		{
			return default(float);
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0xA61AA8", Offset = "0xA61AA8", VA = "0xA61AA8")]
		public float UnityIKAngle()
		{
			return default(float);
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0xA61B58", Offset = "0xA61B58", VA = "0xA61B58")]
		private void OnAnimatorIK(int layerIndex)
		{
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0xA62914", Offset = "0xA62914", VA = "0xA62914")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74CA00", Offset = "0x74CA00")]
		private IEnumerator FadeLookWeightInternal()
		{
			return null;
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0xA629B0", Offset = "0xA629B0", VA = "0xA629B0")]
		public void FadeLookWeight()
		{
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0xA629FC", Offset = "0xA629FC", VA = "0xA629FC")]
		public void FadeInBodyIK()
		{
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0xA62A98", Offset = "0xA62A98", VA = "0xA62A98")]
		public void FadeOutBodyIK()
		{
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0xA62B34", Offset = "0xA62B34", VA = "0xA62B34")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0xA62A28", Offset = "0xA62A28", VA = "0xA62A28")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74CA64", Offset = "0x74CA64")]
		private IEnumerator FadeInBodyIKInternal()
		{
			return null;
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0xA62AC4", Offset = "0xA62AC4", VA = "0xA62AC4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74CAC8", Offset = "0x74CAC8")]
		private IEnumerator FadeOutBodyIKInternal()
		{
			return null;
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0xA635D4", Offset = "0xA635D4", VA = "0xA635D4")]
		private void LookAtTarget(Vector3 TargetPos, Transform BoneTranform, float Weight)
		{
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0xA63914", Offset = "0xA63914", VA = "0xA63914")]
		public void SetPreviousLookAtInfo()
		{
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0xA63924", Offset = "0xA63924", VA = "0xA63924")]
		public EmeraldAILookAtController()
		{
		}
	}
	[Token(Token = "0x20001DB")]
	public static class EmeraldAIObjectPool
	{
		[Token(Token = "0x200033B")]
		private class Pool
		{
			[Token(Token = "0x400170C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int nextId;

			[Token(Token = "0x400170D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Stack<GameObject> inactive;

			[Token(Token = "0x400170E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private GameObject prefab;

			[Token(Token = "0x600108C")]
			[Address(RVA = "0xA64118", Offset = "0xA64118", VA = "0xA64118")]
			public Pool(GameObject prefab, int initialQty)
			{
			}

			[Token(Token = "0x600108D")]
			[Address(RVA = "0xA644BC", Offset = "0xA644BC", VA = "0xA644BC")]
			public GameObject Spawn(Vector3 pos, Quaternion rot)
			{
				return null;
			}

			[Token(Token = "0x600108E")]
			[Address(RVA = "0xA648E4", Offset = "0xA648E4", VA = "0xA648E4")]
			public GameObject SpawnEffect(Vector3 pos, Quaternion rot, float SecondsToDespawn)
			{
				return null;
			}

			[Token(Token = "0x600108F")]
			[Address(RVA = "0xA64CBC", Offset = "0xA64CBC", VA = "0xA64CBC")]
			public void Despawn(GameObject obj)
			{
			}
		}

		[Token(Token = "0x200033C")]
		private class PoolMember : MonoBehaviour
		{
			[Token(Token = "0x400170F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Pool myPool;

			[Token(Token = "0x6001090")]
			[Address(RVA = "0xA64D38", Offset = "0xA64D38", VA = "0xA64D38")]
			public PoolMember()
			{
			}
		}

		[Token(Token = "0x40010C4")]
		private const int DEFAULT_POOL_SIZE = 3;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<GameObject, Pool> pools;

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0xA63FCC", Offset = "0xA63FCC", VA = "0xA63FCC")]
		private static void Init([Optional] GameObject prefab, int qty = 3)
		{
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0xA641AC", Offset = "0xA641AC", VA = "0xA641AC")]
		public static void Preload(GameObject prefab, int qty = 1)
		{
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0xA60774", Offset = "0xA60774", VA = "0xA60774")]
		public static GameObject Spawn(GameObject prefab, Vector3 pos, Quaternion rot)
		{
			return null;
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0xA64804", Offset = "0xA64804", VA = "0xA64804")]
		public static GameObject SpawnEffect(GameObject prefab, Vector3 pos, Quaternion rot, float SecondsToDespawn)
		{
			return null;
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0xA64374", Offset = "0xA64374", VA = "0xA64374")]
		public static void Despawn(GameObject obj)
		{
		}
	}
	[Token(Token = "0x20001DC")]
	public class EmeraldAIProjectile : MonoBehaviour
	{
		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public EmeraldAIAbility ProjectileData;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public int Damage;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public EmeraldAISystem EmeraldComponent;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public EmeraldAISystem TargetEmeraldSystem;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Transform StartingTarget;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public EmeraldAIPlayerDamage m_EmeraldAIPlayerDamage;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public Vector3 ProjectileDirection;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public float CollisionTimer;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public float TimeoutTimer;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		public bool Collided;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SphereCollider ProjectileCollider;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public float HeatSeekingTimer;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[HideInInspector]
		public bool HeatSeekingFinished;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Transform ProjectileCurrentTarget;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public bool TargetInView;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		[HideInInspector]
		public bool CriticalHit;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		[HideInInspector]
		public bool AngleTooBig;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[HideInInspector]
		public float AdjustedAngle;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public EmeraldAISystem.TargetType TargetTypeRef;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public GameObject ObjectToDisableOnCollision;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 AdjustTargetPosition;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GameObject SpawnedEffect;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GameObject CollisionSoundObject;

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float CollisionTime;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Vector3 LastDirection;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private GameObject DamageOverTimeComponent;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3 m_PreviousPosition;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Vector3 m_CurrentVelocity;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool ProjectileDirectionReceived;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Vector3 ProjectileGravity;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Rigidbody m_Rigidbody;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool TargetLost;

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0xA64D40", Offset = "0xA64D40", VA = "0xA64D40")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0xA64EC8", Offset = "0xA64EC8", VA = "0xA64EC8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0xA64F6C", Offset = "0xA64F6C", VA = "0xA64F6C")]
		private void InitailizeAudioSource()
		{
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0xA6505C", Offset = "0xA6505C", VA = "0xA6505C")]
		public void InitializeProjectile(EmeraldAISystem SentEmeraldComponent, EmeraldAIAbility SentProjectileData)
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0xA654D8", Offset = "0xA654D8", VA = "0xA654D8")]
		public void GetHeatSeekingAngle()
		{
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0xA655E8", Offset = "0xA655E8", VA = "0xA655E8")]
		public void GetAngle()
		{
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0xA656E0", Offset = "0xA656E0", VA = "0xA656E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0xA665D8", Offset = "0xA665D8", VA = "0xA665D8")]
		private void OnTriggerEnter(Collider C)
		{
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0xA67E08", Offset = "0xA67E08", VA = "0xA67E08")]
		private void DamagePlayer(int SentDamage)
		{
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0xA67F74", Offset = "0xA67F74", VA = "0xA67F74")]
		private void DamageNonAITarget(int SentDamage)
		{
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0xA680C4", Offset = "0xA680C4", VA = "0xA680C4")]
		private void AttachToCollider(Collider C)
		{
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0xA67BFC", Offset = "0xA67BFC", VA = "0xA67BFC")]
		private void PlayCollisionSound()
		{
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0xA68130", Offset = "0xA68130", VA = "0xA68130")]
		public EmeraldAIProjectile()
		{
		}
	}
	[Token(Token = "0x20001DD")]
	public class EmeraldAIProjectileTimeout : MonoBehaviour
	{
		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float TimeoutSeconds;

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float Timer;

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0xA68190", Offset = "0xA68190", VA = "0xA68190")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0xA681F0", Offset = "0xA681F0", VA = "0xA681F0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0xA681F8", Offset = "0xA681F8", VA = "0xA681F8")]
		public EmeraldAIProjectileTimeout()
		{
		}
	}
	[Token(Token = "0x20001DE")]
	public class EmeraldAITimedDespawn : MonoBehaviour
	{
		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float SecondsToDespawn;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float Timer;

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0xA68208", Offset = "0xA68208", VA = "0xA68208")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0xA68268", Offset = "0xA68268", VA = "0xA68268")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0xA68270", Offset = "0xA68270", VA = "0xA68270")]
		public EmeraldAITimedDespawn()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001DF")]
	public class HandIKProfile : ScriptableObject
	{
		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public Vector3 RightHandPosition;

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public Vector3 RightHandRotation;

		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public Vector3 LeftHandPosition;

		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public Vector3 LeftHandRotation;

		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public bool ValuesModified;

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0xA68280", Offset = "0xA68280", VA = "0xA68280")]
		public HandIKProfile()
		{
		}
	}
	[Token(Token = "0x20001E0")]
	public class SummonedAIComponent : MonoBehaviour
	{
		[Token(Token = "0x200033D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741468", Offset = "0x741468")]
		private sealed class <DespawnSummonedAI>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001710")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001711")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001712")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SummonedAIComponent <>4__this;

			[Token(Token = "0x17000231")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001094")]
				[Address(RVA = "0xA684DC", Offset = "0xA684DC", VA = "0xA684DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000232")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001096")]
				[Address(RVA = "0xA68544", Offset = "0xA68544", VA = "0xA68544", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001091")]
			[Address(RVA = "0xA683C4", Offset = "0xA683C4", VA = "0xA683C4")]
			[DebuggerHidden]
			public <DespawnSummonedAI>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6001092")]
			[Address(RVA = "0xA68400", Offset = "0xA68400", VA = "0xA68400", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001093")]
			[Address(RVA = "0xA68404", Offset = "0xA68404", VA = "0xA68404", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001095")]
			[Address(RVA = "0xA684E4", Offset = "0xA684E4", VA = "0xA684E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_DespawnSeconds;

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0xA68324", Offset = "0xA68324", VA = "0xA68324")]
		public void IntitializeSummon(int DespawnSeconds)
		{
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0xA68354", Offset = "0xA68354", VA = "0xA68354")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74CB2C", Offset = "0x74CB2C")]
		private IEnumerator DespawnSummonedAI()
		{
			return null;
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0xA683F0", Offset = "0xA683F0", VA = "0xA683F0")]
		public SummonedAIComponent()
		{
		}
	}
	[Token(Token = "0x20001E1")]
	[ExecuteInEditMode]
	public class TargetPositionModifier : MonoBehaviour
	{
		[Token(Token = "0x200033E")]
		public enum PositionSources
		{
			[Token(Token = "0x4001714")]
			Transform,
			[Token(Token = "0x4001715")]
			Collider
		}

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PositionSources PositionSource;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float PositionModifier;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float GizmoRadius;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color GizmoColor;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Collider m_Collider;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float Offset;

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0xA6854C", Offset = "0xA6854C", VA = "0xA6854C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0xA6866C", Offset = "0xA6866C", VA = "0xA6866C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0xA687D4", Offset = "0xA687D4", VA = "0xA687D4")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0xA68B54", Offset = "0xA68B54", VA = "0xA68B54")]
		public TargetPositionModifier()
		{
		}
	}
	[Token(Token = "0x20001E2")]
	public class TrailRendererHelper : MonoBehaviour
	{
		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TrailRenderer m_TrailRenderer;

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0xA68BB8", Offset = "0xA68BB8", VA = "0xA68BB8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0xA68C10", Offset = "0xA68C10", VA = "0xA68C10")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0xA68C2C", Offset = "0xA68C2C", VA = "0xA68C2C")]
		public TrailRendererHelper()
		{
		}
	}
	[Token(Token = "0x20001E3")]
	public class VisibilityCheck : MonoBehaviour
	{
		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmeraldAISystem EmeraldComponent;

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool SystemActivated;

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0xA68C34", Offset = "0xA68C34", VA = "0xA68C34")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0xA68CA0", Offset = "0xA68CA0", VA = "0xA68CA0")]
		private void InitializeDelay()
		{
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0xA68CAC", Offset = "0xA68CAC", VA = "0xA68CAC")]
		private void OnBecameInvisible()
		{
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0xA68CC8", Offset = "0xA68CC8", VA = "0xA68CC8")]
		private void OnWillRenderObject()
		{
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0xA68CF0", Offset = "0xA68CF0", VA = "0xA68CF0")]
		private void OnBecameVisible()
		{
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0xA68D18", Offset = "0xA68D18", VA = "0xA68D18")]
		public VisibilityCheck()
		{
		}
	}
	[Token(Token = "0x20001E4")]
	public class VisibilityCheckDelay : MonoBehaviour
	{
		[Token(Token = "0x200033F")]
		public enum CurrentBehavior
		{
			[Token(Token = "0x4001717")]
			Passive = 1,
			[Token(Token = "0x4001718")]
			Cautious,
			[Token(Token = "0x4001719")]
			Companion,
			[Token(Token = "0x400171A")]
			Aggresive
		}

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmeraldAISystem EmeraldComponent;

		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float DeactivateSeconds;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool SystemActivated;

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0xA68D20", Offset = "0xA68D20", VA = "0xA68D20")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0xA68D98", Offset = "0xA68D98", VA = "0xA68D98")]
		private void InitializeDelay()
		{
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0xA68DA4", Offset = "0xA68DA4", VA = "0xA68DA4")]
		private void OnWillRenderObject()
		{
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0xA68DCC", Offset = "0xA68DCC", VA = "0xA68DCC")]
		private void OnBecameInvisible()
		{
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0xA68E24", Offset = "0xA68E24", VA = "0xA68E24")]
		private void DeactivateDelay()
		{
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0xA68ED4", Offset = "0xA68ED4", VA = "0xA68ED4")]
		private void OnBecameVisible()
		{
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0xA68F1C", Offset = "0xA68F1C", VA = "0xA68F1C")]
		public VisibilityCheckDelay()
		{
		}
	}
	[Token(Token = "0x20001E5")]
	public class EmeraldAIHealthBar : MonoBehaviour
	{
		[Token(Token = "0x2000340")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741478", Offset = "0x741478")]
		private sealed class <FadeTo>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400171B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400171C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400171D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EmeraldAIHealthBar <>4__this;

			[Token(Token = "0x400171E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float DesiredValue;

			[Token(Token = "0x400171F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float TransitionTime;

			[Token(Token = "0x4001720")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <alpha>5__2;

			[Token(Token = "0x4001721")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <t>5__3;

			[Token(Token = "0x17000233")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600109A")]
				[Address(RVA = "0xA58090", Offset = "0xA58090", VA = "0xA58090", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000234")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600109C")]
				[Address(RVA = "0xA580F8", Offset = "0xA580F8", VA = "0xA580F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001097")]
			[Address(RVA = "0xA57D34", Offset = "0xA57D34", VA = "0xA57D34")]
			[DebuggerHidden]
			public <FadeTo>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001098")]
			[Address(RVA = "0xA57DCC", Offset = "0xA57DCC", VA = "0xA57DCC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001099")]
			[Address(RVA = "0xA57DD0", Offset = "0xA57DD0", VA = "0xA57DD0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600109B")]
			[Address(RVA = "0xA58098", Offset = "0xA58098", VA = "0xA58098", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string CameraTag;

		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Image HealthBar;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public EmeraldAISystem EmeraldComponent;

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Camera m_Camera;

		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float ObjectScaleDifference;

		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public Canvas canvas;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public float MaxScalingSize;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CanvasGroup CG;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Text AINameUI;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Text AILevelUI;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine C;

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0xA5726C", Offset = "0xA5726C", VA = "0xA5726C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0xA57388", Offset = "0xA57388", VA = "0xA57388")]
		public void UpdateUI()
		{
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0xA57590", Offset = "0xA57590", VA = "0xA57590")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0xA57594", Offset = "0xA57594", VA = "0xA57594")]
		public void CalculateUI()
		{
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0xA57A68", Offset = "0xA57A68", VA = "0xA57A68")]
		public void FadeOut()
		{
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0xA57B5C", Offset = "0xA57B5C", VA = "0xA57B5C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0xA57AD8", Offset = "0xA57AD8", VA = "0xA57AD8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x74CB90", Offset = "0x74CB90")]
		private IEnumerator FadeTo(float DesiredValue, float TransitionTime)
		{
			return null;
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0xA57D60", Offset = "0xA57D60", VA = "0xA57D60")]
		public EmeraldAIHealthBar()
		{
		}
	}
}
namespace EmeraldAI.CharacterController
{
	[Token(Token = "0x20001E6")]
	public class EmeraldAIHideMouse : MonoBehaviour
	{
		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool MouseToggle;

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x841C8C", Offset = "0x841C8C", VA = "0x841C8C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0x841CC4", Offset = "0x841CC4", VA = "0x841CC4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0x841D4C", Offset = "0x841D4C", VA = "0x841D4C")]
		public EmeraldAIHideMouse()
		{
		}
	}
	[Token(Token = "0x20001E7")]
	public class EmeraldAISmoothFollow : MonoBehaviour
	{
		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 CameraOffset;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform target;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float smoothTime;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 velocity;

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0x841D54", Offset = "0x841D54", VA = "0x841D54")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0x841E8C", Offset = "0x841E8C", VA = "0x841E8C")]
		public EmeraldAISmoothFollow()
		{
		}
	}
	[Token(Token = "0x20001E8")]
	public class DamageAIByAngle : MonoBehaviour
	{
		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask AIMask;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int DamageAmount;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int DamageRange;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7484C8", Offset = "0x7484C8")]
		public int DamageAngle;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public KeyCode DamageButton;

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x8419C8", Offset = "0x8419C8", VA = "0x8419C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x841C78", Offset = "0x841C78", VA = "0x841C78")]
		public DamageAIByAngle()
		{
		}
	}
}
namespace EmeraldAI.Example
{
	[Token(Token = "0x20001E9")]
	public class CameraShakeExample : MonoBehaviour
	{
		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x8F9960", Offset = "0x8F9960", VA = "0x8F9960")]
		public void TriggerCameraShake()
		{
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x8F99CC", Offset = "0x8F99CC", VA = "0x8F99CC")]
		public CameraShakeExample()
		{
		}
	}
	[Token(Token = "0x20001EA")]
	public class DisableProjectileObject : MonoBehaviour
	{
		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject ObjectToDisable;

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x8F9F98", Offset = "0x8F9F98", VA = "0x8F9F98")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x8F9FB8", Offset = "0x8F9FB8", VA = "0x8F9FB8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0x8F9FD8", Offset = "0x8F9FD8", VA = "0x8F9FD8")]
		public DisableProjectileObject()
		{
		}
	}
	[Token(Token = "0x20001EB")]
	public class FlyCamera : MonoBehaviour
	{
		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float mainSpeed;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float shiftAdd;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxShift;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float camSens;

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 lastMouse;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float totalRun;

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x8FA018", Offset = "0x8FA018", VA = "0x8FA018")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0x8FA3D4", Offset = "0x8FA3D4", VA = "0x8FA3D4")]
		private Vector3 GetBaseInput()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x8FA710", Offset = "0x8FA710", VA = "0x8FA710")]
		public FlyCamera()
		{
		}
	}
	[Token(Token = "0x20001EC")]
	public class AISchedule : MonoBehaviour
	{
		[Token(Token = "0x2000341")]
		public enum WanderType
		{
			[Token(Token = "0x4001723")]
			Dynamic = 0,
			[Token(Token = "0x4001724")]
			Stationary = 2
		}

		[Token(Token = "0x2000342")]
		public enum CurrentScheduleEneum
		{
			[Token(Token = "0x4001726")]
			Morning,
			[Token(Token = "0x4001727")]
			Day,
			[Token(Token = "0x4001728")]
			Evening,
			[Token(Token = "0x4001729")]
			Night
		}

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WanderType MorningWanderType;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform MorningLocation;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int IdleAnimationMorning;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public WanderType DayWanderType;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform DayLocation;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int IdleAnimationDay;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public WanderType EveningWanderType;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform EveningLocation;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int IdleAnimationEvening;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public WanderType NightWanderType;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform NightLocation;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int IdleAnimationNight;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public CurrentScheduleEneum CurrentSchedule;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private EmeraldAISystem m_EmeraldAISystem;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private EmeraldAIEventsManager m_EmeraldAIEventsManager;

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x8F8DBC", Offset = "0x8F8DBC", VA = "0x8F8DBC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x8F8E4C", Offset = "0x8F8E4C", VA = "0x8F8E4C")]
		private void UpdateAISchedule()
		{
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x8F9130", Offset = "0x8F9130", VA = "0x8F9130")]
		public AISchedule()
		{
		}
	}
	[Token(Token = "0x20001ED")]
	public class AdvancedLineOfSight : MonoBehaviour
	{
		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7484E8", Offset = "0x7484E8")]
		public float ObstructedSeconds;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private EmeraldAISystem EmeraldComponent;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_ObstructedTimer;

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x8F915C", Offset = "0x8F915C", VA = "0x8F915C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x8F91B4", Offset = "0x8F91B4", VA = "0x8F91B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x8F9288", Offset = "0x8F9288", VA = "0x8F9288")]
		private void CancelCurrentTarget()
		{
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x8F932C", Offset = "0x8F932C", VA = "0x8F932C")]
		public AdvancedLineOfSight()
		{
		}
	}
	[Token(Token = "0x20001EE")]
	public class BloodSplatterManager : MonoBehaviour
	{
		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GameObject> BloodEffects;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float BloodSpawnDelay;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float BloodSpawnRadius;

		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int BloodDespawnTime;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int OddsForBlood;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EmeraldAISystem EmeraldComponent;

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x8F933C", Offset = "0x8F933C", VA = "0x8F933C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x8F93E4", Offset = "0x8F93E4", VA = "0x8F93E4")]
		public void CreateBloodSplatter()
		{
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x8F943C", Offset = "0x8F943C", VA = "0x8F943C")]
		private void DelayCreateBloodSplatter()
		{
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x8F98D4", Offset = "0x8F98D4", VA = "0x8F98D4")]
		public BloodSplatterManager()
		{
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x8F995C", Offset = "0x8F995C", VA = "0x8F995C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74CBF4", Offset = "0x74CBF4")]
		private void <Start>b__6_0()
		{
		}
	}
	[Token(Token = "0x20001EF")]
	public class DamageAIByCollision : MonoBehaviour
	{
		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DamageAmount;

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x8F99D4", Offset = "0x8F99D4", VA = "0x8F99D4")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x8F9CAC", Offset = "0x8F9CAC", VA = "0x8F9CAC")]
		public DamageAIByCollision()
		{
		}
	}
	[Token(Token = "0x20001F0")]
	public class DamageAIByRaycast : MonoBehaviour
	{
		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Camera CameraComponent;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject PlayerObject;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int DamageAmount;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float RaycastDistance;

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x8F9CBC", Offset = "0x8F9CBC", VA = "0x8F9CBC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x8F9D14", Offset = "0x8F9D14", VA = "0x8F9D14")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x8F9F84", Offset = "0x8F9F84", VA = "0x8F9F84")]
		public DamageAIByRaycast()
		{
		}
	}
	[Token(Token = "0x20001F1")]
	public class MoveToMousePosition : MonoBehaviour
	{
		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject DestinationEffect;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject ArrowIndicatorObject;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Camera CameraComponent;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EmeraldAISystem EmeraldComponent;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 MovePosition;

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x8FA784", Offset = "0x8FA784", VA = "0x8FA784")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x8FA7F4", Offset = "0x8FA7F4", VA = "0x8FA7F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x8FAD04", Offset = "0x8FAD04", VA = "0x8FAD04")]
		public MoveToMousePosition()
		{
		}
	}
	[Token(Token = "0x20001F2")]
	public class NeedsSystemDisplay : MonoBehaviour
	{
		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text TextDisplay;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EmeraldAINeedsSystem m_EmeraldAINeedsSystem;

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x8FAD0C", Offset = "0x8FAD0C", VA = "0x8FAD0C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x8FAD6C", Offset = "0x8FAD6C", VA = "0x8FAD6C")]
		private void UpdateTextDisplay()
		{
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x8FADFC", Offset = "0x8FADFC", VA = "0x8FADFC")]
		public NeedsSystemDisplay()
		{
		}
	}
	[Token(Token = "0x20001F3")]
	public class PlayAIsEmote : MonoBehaviour
	{
		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string AITag;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int DetectDistance;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int EmoteID;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RaycastHit hit;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Image CrosshairImage;

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x8FAE04", Offset = "0x8FAE04", VA = "0x8FAE04")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x8FAEC4", Offset = "0x8FAEC4", VA = "0x8FAEC4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x8FB16C", Offset = "0x8FB16C", VA = "0x8FB16C")]
		public PlayAIsEmote()
		{
		}
	}
	[Token(Token = "0x20001F4")]
	public class RaycastHitAI : MonoBehaviour
	{
		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Camera CameraComponent;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject PlayerObject;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int DamageAmount;

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x8FB1D0", Offset = "0x8FB1D0", VA = "0x8FB1D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x8FB228", Offset = "0x8FB228", VA = "0x8FB228")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x8FB49C", Offset = "0x8FB49C", VA = "0x8FB49C")]
		public RaycastHitAI()
		{
		}
	}
	[Token(Token = "0x20001F5")]
	public class SetCompanionFollower : MonoBehaviour
	{
		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform FollowerTarget;

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x8FB4AC", Offset = "0x8FB4AC", VA = "0x8FB4AC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x8FB528", Offset = "0x8FB528", VA = "0x8FB528")]
		public SetCompanionFollower()
		{
		}
	}
	[Token(Token = "0x20001F6")]
	public class SpawnCompanion : MonoBehaviour
	{
		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int TotalAllowedCompanions;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject CompanionAIObject;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int CurrentCompanions;

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x8FB530", Offset = "0x8FB530", VA = "0x8FB530")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x8FB794", Offset = "0x8FB794", VA = "0x8FB794")]
		public void RemoveAI()
		{
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x8FB7A4", Offset = "0x8FB7A4", VA = "0x8FB7A4")]
		public SpawnCompanion()
		{
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x8FB7B4", Offset = "0x8FB7B4", VA = "0x8FB7B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x74CC04", Offset = "0x74CC04")]
		private void <Update>b__3_0()
		{
		}
	}
	[Token(Token = "0x20001F7")]
	public class SpawnObjectEvent : MonoBehaviour
	{
		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject ObjectToSpawn;

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x8FB7C4", Offset = "0x8FB7C4", VA = "0x8FB7C4")]
		public void SpawnObject()
		{
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x8FB8D4", Offset = "0x8FB8D4", VA = "0x8FB8D4")]
		public SpawnObjectEvent()
		{
		}
	}
	[Token(Token = "0x20001F8")]
	public class TameAI : MonoBehaviour
	{
		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string AITag;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int TameDistance;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private RaycastHit hit;

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x8FB8DC", Offset = "0x8FB8DC", VA = "0x8FB8DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x8FBC2C", Offset = "0x8FBC2C", VA = "0x8FBC2C")]
		public TameAI()
		{
		}
	}
	[Token(Token = "0x20001F9")]
	public class EmeraldAIPlayerHealth : MonoBehaviour
	{
		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int CurrentHealth;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x748520", Offset = "0x748520")]
		public UnityEvent DamageEvent;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent DeathEvent;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public int StartingHealth;

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0x8F9FE0", Offset = "0x8F9FE0", VA = "0x8F9FE0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x8EF058", Offset = "0x8EF058", VA = "0x8EF058")]
		public void DamagePlayer(int DamageAmount)
		{
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x8F9FEC", Offset = "0x8F9FEC", VA = "0x8F9FEC")]
		public void PlayerDeath()
		{
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x8FA008", Offset = "0x8FA008", VA = "0x8FA008")]
		public EmeraldAIPlayerHealth()
		{
		}
	}
}
namespace UnityTemplateProjects
{
	[Token(Token = "0x20001FA")]
	public class SimpleCameraController : MonoBehaviour
	{
		[Token(Token = "0x2000343")]
		private class CameraState
		{
			[Token(Token = "0x400172A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float yaw;

			[Token(Token = "0x400172B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float pitch;

			[Token(Token = "0x400172C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float roll;

			[Token(Token = "0x400172D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float x;

			[Token(Token = "0x400172E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float y;

			[Token(Token = "0x400172F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float z;

			[Token(Token = "0x600109D")]
			[Address(RVA = "0xF0E654", Offset = "0xF0E654", VA = "0xF0E654")]
			public void SetFromTransform(Transform t)
			{
			}

			[Token(Token = "0x600109E")]
			[Address(RVA = "0xF0ECBC", Offset = "0xF0ECBC", VA = "0xF0ECBC")]
			public void Translate(Vector3 translation)
			{
			}

			[Token(Token = "0x600109F")]
			[Address(RVA = "0xF0ED8C", Offset = "0xF0ED8C", VA = "0xF0ED8C")]
			public void LerpTowards(CameraState target, float positionLerpPct, float rotationLerpPct)
			{
			}

			[Token(Token = "0x60010A0")]
			[Address(RVA = "0xF0EEB0", Offset = "0xF0EEB0", VA = "0xF0EEB0")]
			public void UpdateTransform(Transform t)
			{
			}

			[Token(Token = "0x60010A1")]
			[Address(RVA = "0xF0F0E0", Offset = "0xF0F0E0", VA = "0xF0F0E0")]
			public CameraState()
			{
			}
		}

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CameraState m_TargetCameraState;

		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CameraState m_InterpolatingCameraState;

		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x748540", Offset = "0x748540")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x748540", Offset = "0x748540")]
		public float boost;

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7485A0", Offset = "0x7485A0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7485A0", Offset = "0x7485A0")]
		public float positionLerpTime;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7485F8", Offset = "0x7485F8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7485F8", Offset = "0x7485F8")]
		public AnimationCurve mouseSensitivityCurve;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x748658", Offset = "0x748658")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x748658", Offset = "0x748658")]
		public float rotationLerpTime;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7486B0", Offset = "0x7486B0")]
		public bool invertY;

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0xF0E5FC", Offset = "0xF0E5FC", VA = "0xF0E5FC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0xF0E6DC", Offset = "0xF0E6DC", VA = "0xF0E6DC")]
		private Vector3 GetInputTranslationDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0xF0E998", Offset = "0xF0E998", VA = "0xF0E998")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0xF0EF40", Offset = "0xF0EF40", VA = "0xF0EF40")]
		public SimpleCameraController()
		{
		}
	}
}
namespace NOTLonely_MCS
{
	[Token(Token = "0x20001FB")]
	public class NL_MCS : MonoBehaviour
	{
		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject exteriorUnbroken;

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject exteriorBroken;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject[] exteriorTypes;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject[] exteriorTypesBroken;

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string[] exteriorTypesNames;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject[] interiorTypes;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject[] interiorTypesBroken;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject interior;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject interiorUnbroken;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject interiorBroken;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject rainPipe;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject rainPipeBroken;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject[] rainPipeVariationsUnbroken;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject[] rainPipeVariationsBroken;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject[] gutterContainers;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject[] guttersBroken;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GameObject[] guttersUnbroken;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Dictionary<Material, List<Renderer>> uniqueMtls;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Light[] windowLights;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public int rotatableCount;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		public MaterialPropertyBlock mtlPropertyBlock;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		public bool mtlsFoldout;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		public int rainPipeCount;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		public bool isExteriorBroken;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
		[SerializeField]
		public bool isInterior;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
		[SerializeField]
		public bool isInteriorBroken;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCB")]
		[SerializeField]
		public bool isRainPipe;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		public bool isRainPipeBroken;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool isGutters;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCE")]
		[SerializeField]
		public bool isGuttersBroken;

		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		public int moduleTypeIndex;

		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		public bool isTurn;

		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
		[SerializeField]
		public bool isMirror;

		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD6")]
		[SerializeField]
		public bool isShadows2Sided;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD7")]
		[SerializeField]
		public bool isWindowLights;

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		public float lightIntensity;

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		public float lightIndirect;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		public Color lightColor;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		public float UVsAngle;

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		public bool rainPipeFoldout;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Component[] transformsArray;

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x92E3F8", Offset = "0x92E3F8", VA = "0x92E3F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x92E8A8", Offset = "0x92E8A8", VA = "0x92E8A8")]
		public void CollectUniqueMtls()
		{
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x92EAB0", Offset = "0x92EAB0", VA = "0x92EAB0")]
		public void CalculateTextureRotation()
		{
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x92E638", Offset = "0x92E638", VA = "0x92E638")]
		public void RotateTexture()
		{
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0x92EADC", Offset = "0x92EADC", VA = "0x92EADC")]
		public NL_MCS()
		{
		}
	}
	[Token(Token = "0x20001FC")]
	public class NL_MCS_Interior : MonoBehaviour
	{
		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject interiorUnbrokenContainer;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject interiorBrokenContainer;

		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject[] interiorUnbrokenTypes;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject[] interiorBrokenTypes;

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject[] doorsWindowsArray;

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Light[] windowLights;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string[] interiorTypesNames;

		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public int moduleTypeIndex;

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		public bool mtlsFoldout;

		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int rotatableCount;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		public MaterialPropertyBlock mtlPropertyBlock;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		public bool isInteriorBroken;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		[SerializeField]
		public bool isDoorsWindows;

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		[SerializeField]
		public bool isDoorWindowRotate;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		[SerializeField]
		public bool isDoorWindowMirror;

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		public bool isShadows2Sided;

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		public float UVsAngle;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		public bool isWindowLights;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		public float lightIntensity;

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		public float lightIndirect;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		public Color lightColor;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Component[] transformsArray;

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x92EBA0", Offset = "0x92EBA0", VA = "0x92EBA0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0x92F0A4", Offset = "0x92F0A4", VA = "0x92F0A4")]
		public void CalculateTextureRotation()
		{
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0x92EE34", Offset = "0x92EE34", VA = "0x92EE34")]
		public void RotateTexture()
		{
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x92F0D0", Offset = "0x92F0D0", VA = "0x92F0D0")]
		public NL_MCS_Interior()
		{
		}
	}
}
namespace NOTLonely_Door
{
	[Token(Token = "0x20001FD")]
	public class DoorScript : MonoBehaviour
	{
		[Token(Token = "0x2000344")]
		public enum OpenStyle
		{
			[Token(Token = "0x4001731")]
			BUTTON,
			[Token(Token = "0x4001732")]
			AUTOMATIC
		}

		[Serializable]
		[Token(Token = "0x2000345")]
		public class DoorControls
		{
			[Token(Token = "0x4001733")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float openingSpeed;

			[Token(Token = "0x4001734")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float closingSpeed;

			[Token(Token = "0x4001735")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x748EE8", Offset = "0x748EE8")]
			public float closeStartFrom;

			[Token(Token = "0x4001736")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public OpenStyle openMethod;

			[Token(Token = "0x4001737")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public KeyCode openButton;

			[Token(Token = "0x4001738")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool autoClose;

			[Token(Token = "0x4001739")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x748F00", Offset = "0x748F00")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x748F00", Offset = "0x748F00")]
			public float OpenedAtStart;

			[Token(Token = "0x60010A2")]
			[Address(RVA = "0x92E2CC", Offset = "0x92E2CC", VA = "0x92E2CC")]
			public DoorControls()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000346")]
		public class AnimNames
		{
			[Token(Token = "0x400173A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string OpeningAnim;

			[Token(Token = "0x400173B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string LockedAnim;

			[Token(Token = "0x60010A3")]
			[Address(RVA = "0x92E2F4", Offset = "0x92E2F4", VA = "0x92E2F4")]
			public AnimNames()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000347")]
		public class DoorSounds
		{
			[Token(Token = "0x400173C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool enabled;

			[Token(Token = "0x400173D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AudioClip open;

			[Token(Token = "0x400173E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioClip close;

			[Token(Token = "0x400173F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip closed;

			[Token(Token = "0x4001740")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x748F54", Offset = "0x748F54")]
			public float volume;

			[Token(Token = "0x4001741")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x748F6C", Offset = "0x748F6C")]
			public float pitchRandom;

			[Token(Token = "0x60010A4")]
			[Address(RVA = "0x92E35C", Offset = "0x92E35C", VA = "0x92E35C")]
			public DoorSounds()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000348")]
		public class DoorTexts
		{
			[Token(Token = "0x4001742")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool enabled;

			[Token(Token = "0x4001743")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string openingText;

			[Token(Token = "0x4001744")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string closingText;

			[Token(Token = "0x4001745")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string lockText;

			[Token(Token = "0x4001746")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject TextPrefab;

			[Token(Token = "0x60010A5")]
			[Address(RVA = "0x92E378", Offset = "0x92E378", VA = "0x92E378")]
			public DoorTexts()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000349")]
		public class KeySystem
		{
			[Token(Token = "0x4001747")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool enabled;

			[Token(Token = "0x4001748")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			[HideInInspector]
			public bool isUnlock;

			[Token(Token = "0x4001749")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x748F98", Offset = "0x748F98")]
			public GameObject LockPrefab;

			[Token(Token = "0x60010A6")]
			[Address(RVA = "0x92E3F0", Offset = "0x92E3F0", VA = "0x92E3F0")]
			public KeySystem()
			{
			}
		}

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform[] Childs;

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform Joint01;

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform Joint02;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7488F8", Offset = "0x7488F8")]
		public string PlayerHeadTag;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x748930", Offset = "0x748930")]
		public Transform knob;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public DoorControls controls;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimNames AnimationNames;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public DoorSounds doorSounds;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public DoorTexts doorTexts;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public KeySystem keySystem;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform player;

		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool Opened;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool inZone;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Canvas TextObj;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Text theText;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private AudioSource SoundFX;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Animation doorAnimation;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Animation LockAnim;

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x92C954", Offset = "0x92C954", VA = "0x92C954")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x92CE7C", Offset = "0x92CE7C", VA = "0x92CE7C")]
		private void AddText()
		{
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x92D070", Offset = "0x92D070", VA = "0x92D070")]
		private void AddLock()
		{
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x92D130", Offset = "0x92D130", VA = "0x92D130")]
		private void AddAudioSource()
		{
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x92D2B8", Offset = "0x92D2B8", VA = "0x92D2B8")]
		private void DetectDoorKnob()
		{
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x92D3CC", Offset = "0x92D3CC", VA = "0x92D3CC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x92D6A4", Offset = "0x92D6A4", VA = "0x92D6A4")]
		private bool PLayerIsLookingAtDoorKnob()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0x92DB00", Offset = "0x92DB00", VA = "0x92DB00")]
		private void OpenLockDoor()
		{
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x92DD20", Offset = "0x92DD20", VA = "0x92DD20")]
		public void Unlock()
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x92DD40", Offset = "0x92DD40", VA = "0x92DD40")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x92DD88", Offset = "0x92DD88", VA = "0x92DD88")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x92D814", Offset = "0x92D814", VA = "0x92D814")]
		private void ShowHint()
		{
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x92D514", Offset = "0x92D514", VA = "0x92D514")]
		private void HideHint()
		{
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x92DEF4", Offset = "0x92DEF4", VA = "0x92DEF4")]
		private void PlaySFX(AudioClip clip)
		{
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x92DBC8", Offset = "0x92DBC8", VA = "0x92DBC8")]
		private void PlayClosedFXs()
		{
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x92DF8C", Offset = "0x92DF8C", VA = "0x92DF8C")]
		private void CloseSound()
		{
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x92DE24", Offset = "0x92DE24", VA = "0x92DE24")]
		public void OpenText()
		{
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x92DE08", Offset = "0x92DE08", VA = "0x92DE08")]
		private void LockText()
		{
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x92DDEC", Offset = "0x92DDEC", VA = "0x92DDEC")]
		private void CloseText()
		{
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x92E05C", Offset = "0x92E05C", VA = "0x92E05C")]
		private void ShowText(string txt)
		{
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x92DE40", Offset = "0x92DE40", VA = "0x92DE40")]
		private void HideText()
		{
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x92D538", Offset = "0x92D538", VA = "0x92D538")]
		private void OpenDoor()
		{
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x92D870", Offset = "0x92D870", VA = "0x92D870")]
		private void CloseDoor()
		{
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x92E1A8", Offset = "0x92E1A8", VA = "0x92E1A8")]
		public DoorScript()
		{
		}
	}
}
namespace FuseboxSystem
{
	[Token(Token = "0x20001FE")]
	public class FuseItemController : MonoBehaviour
	{
		[Token(Token = "0x200034A")]
		private enum ObjectType
		{
			[Token(Token = "0x400174B")]
			None,
			[Token(Token = "0x400174C")]
			Fusebox,
			[Token(Token = "0x400174D")]
			Fuse
		}

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x748968", Offset = "0x748968")]
		[SerializeField]
		private ObjectType _objectType;

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x8B7074", Offset = "0x8B7074", VA = "0x8B7074")]
		public void ObjectInteract()
		{
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x8B7598", Offset = "0x8B7598", VA = "0x8B7598")]
		public FuseItemController()
		{
		}
	}
	[Token(Token = "0x20001FF")]
	public class FuseboxController : MonoBehaviour
	{
		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7489A4", Offset = "0x7489A4")]
		[SerializeField]
		private bool fuse1Inserted;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool fuse2Inserted;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[SerializeField]
		private bool fuse3Inserted;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		[SerializeField]
		private bool fuse4Inserted;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool powerOn;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x748A20", Offset = "0x748A20")]
		[SerializeField]
		private GameObject fuseObject1;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject fuseObject2;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject fuseObject3;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject fuseObject4;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x748A9C", Offset = "0x748A9C")]
		[SerializeField]
		private GameObject light1;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject light2;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject light3;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject light4;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x748B18", Offset = "0x748B18")]
		[SerializeField]
		private Material greenButton;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x748B64", Offset = "0x748B64")]
		[SerializeField]
		private UnityEvent powerUp;

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x8B7990", Offset = "0x8B7990", VA = "0x8B7990")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x8B7AEC", Offset = "0x8B7AEC", VA = "0x8B7AEC")]
		private void FusesEngaged()
		{
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x8B7164", Offset = "0x8B7164", VA = "0x8B7164")]
		public void CheckFuseBox()
		{
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x8B7C18", Offset = "0x8B7C18", VA = "0x8B7C18")]
		public FuseboxController()
		{
		}
	}
	[Token(Token = "0x2000200")]
	public class FuseboxAudioManager : MonoBehaviour
	{
		[Token(Token = "0x200034B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741488", Offset = "0x741488")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x400174E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string sound;

			[Token(Token = "0x60010A7")]
			[Address(RVA = "0x8B7760", Offset = "0x8B7760", VA = "0x8B7760")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x60010A8")]
			[Address(RVA = "0x8B7948", Offset = "0x8B7948", VA = "0x8B7948")]
			internal bool <Play>b__0(Sound item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200034C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x741498", Offset = "0x741498")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x400174F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string sound;

			[Token(Token = "0x60010A9")]
			[Address(RVA = "0x8B7938", Offset = "0x8B7938", VA = "0x8B7938")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x60010AA")]
			[Address(RVA = "0x8B796C", Offset = "0x8B796C", VA = "0x8B796C")]
			internal bool <StopPlaying>b__0(Sound item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static FuseboxAudioManager instance;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sound[] sounds;

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x8B75A0", Offset = "0x8B75A0", VA = "0x8B75A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x8B73D8", Offset = "0x8B73D8", VA = "0x8B73D8")]
		public void Play(string sound)
		{
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x8B7768", Offset = "0x8B7768", VA = "0x8B7768")]
		public void StopPlaying(string sound)
		{
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x8B7940", Offset = "0x8B7940", VA = "0x8B7940")]
		public FuseboxAudioManager()
		{
		}
	}
	[Token(Token = "0x2000201")]
	public class FuseboxInputManager : MonoBehaviour
	{
		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x748BB0", Offset = "0x748BB0")]
		public KeyCode interactKey;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static FuseboxInputManager instance;

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x8B7C20", Offset = "0x8B7C20", VA = "0x8B7C20")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x8B7D34", Offset = "0x8B7D34", VA = "0x8B7D34")]
		public FuseboxInputManager()
		{
		}
	}
	[Token(Token = "0x2000202")]
	public class FuseboxInventoryController : MonoBehaviour
	{
		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x748BE8", Offset = "0x748BE8")]
		[SerializeField]
		private Text fuseUI;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x748C34", Offset = "0x748C34")]
		public int inventoryFuses;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static FuseboxInventoryController instance;

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x8B7D3C", Offset = "0x8B7D3C", VA = "0x8B7D3C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x8B7354", Offset = "0x8B7354", VA = "0x8B7354")]
		public void UpdateFuseUI()
		{
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x8B7B94", Offset = "0x8B7B94", VA = "0x8B7B94")]
		public void MinusFuseUI()
		{
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x8B7E50", Offset = "0x8B7E50", VA = "0x8B7E50")]
		public FuseboxInventoryController()
		{
		}
	}
	[Token(Token = "0x2000203")]
	public class FuseboxRaycast : MonoBehaviour
	{
		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x748C6C", Offset = "0x748C6C")]
		[SerializeField]
		private int rayLength;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x748CB8", Offset = "0x748CB8")]
		[SerializeField]
		private LayerMask layerMaskInteract;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string exludeLayerName;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FuseItemController raycasted_obj;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x748D14", Offset = "0x748D14")]
		[SerializeField]
		private Image crosshair;

		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool isCrosshairActive;

		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool doOnce;

		[Token(Token = "0x40011C7")]
		private const string interactionTag = "InteractiveObject";

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x8B7E58", Offset = "0x8B7E58", VA = "0x8B7E58")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x8B8054", Offset = "0x8B8054", VA = "0x8B8054")]
		private void CrosshairChange(bool on)
		{
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x8B80D4", Offset = "0x8B80D4", VA = "0x8B80D4")]
		public FuseboxRaycast()
		{
		}
	}
}
